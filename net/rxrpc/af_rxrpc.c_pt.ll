; ModuleID = '/llk/IR_all_yes/net/rxrpc/af_rxrpc.c_pt.bc'
source_filename = "../net/rxrpc/af_rxrpc.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+rxrpc_debug_id\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_debug_id\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_debug_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_debug_id:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_debug_id\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_debug_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_kernel_begin_call\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_kernel_begin_call\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_kernel_begin_call\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_kernel_begin_call:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_kernel_begin_call\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_kernel_begin_call:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_kernel_end_call\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_kernel_end_call\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_kernel_end_call\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_kernel_end_call:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_kernel_end_call\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_kernel_end_call:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_kernel_check_life\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_kernel_check_life\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_kernel_check_life\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_kernel_check_life:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_kernel_check_life\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_kernel_check_life:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_kernel_get_epoch\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_kernel_get_epoch\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_kernel_get_epoch\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_kernel_get_epoch:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_kernel_get_epoch\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_kernel_get_epoch:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_kernel_new_call_notification\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_kernel_new_call_notification\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_kernel_new_call_notification\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_kernel_new_call_notification:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_kernel_new_call_notification\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_kernel_new_call_notification:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_kernel_set_max_life\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_kernel_set_max_life\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_kernel_set_max_life\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_kernel_set_max_life:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_kernel_set_max_life\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_kernel_set_max_life:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rxrpc_sock_set_min_security_level\22, \22a\22\09"
module asm "\09.weak\09__crc_rxrpc_sock_set_min_security_level\09\09\09\09"
module asm "\09.long\09__crc_rxrpc_sock_set_min_security_level\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rxrpc_sock_set_min_security_level:\09\09\09\09\09"
module asm "\09.asciz \09\22rxrpc_sock_set_min_security_level\22\09\09\09\09\09"
module asm "__kstrtabns_rxrpc_sock_set_min_security_level:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.181 }
%union.anon.181 = type { %struct.anon.182 }
%struct.anon.182 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.183, %struct.trace_event, ptr, ptr, %union.anon.184, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.183 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.184 = type { ptr }
%union.anon.185 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.186 = type { %struct.bpf_raw_event_map }
%union.anon.187 = type { %struct.bpf_raw_event_map }
%union.anon.188 = type { %struct.bpf_raw_event_map }
%union.anon.189 = type { %struct.bpf_raw_event_map }
%union.anon.190 = type { %struct.bpf_raw_event_map }
%union.anon.191 = type { %struct.bpf_raw_event_map }
%union.anon.192 = type { %struct.bpf_raw_event_map }
%union.anon.193 = type { %struct.bpf_raw_event_map }
%union.anon.194 = type { %struct.bpf_raw_event_map }
%union.anon.195 = type { %struct.bpf_raw_event_map }
%union.anon.196 = type { %struct.bpf_raw_event_map }
%union.anon.197 = type { %struct.bpf_raw_event_map }
%union.anon.198 = type { %struct.bpf_raw_event_map }
%union.anon.199 = type { %struct.bpf_raw_event_map }
%union.anon.200 = type { %struct.bpf_raw_event_map }
%union.anon.201 = type { %struct.bpf_raw_event_map }
%union.anon.202 = type { %struct.bpf_raw_event_map }
%union.anon.203 = type { %struct.bpf_raw_event_map }
%union.anon.204 = type { %struct.bpf_raw_event_map }
%union.anon.205 = type { %struct.bpf_raw_event_map }
%union.anon.206 = type { %struct.bpf_raw_event_map }
%union.anon.207 = type { %struct.bpf_raw_event_map }
%union.anon.208 = type { %struct.bpf_raw_event_map }
%union.anon.209 = type { %struct.bpf_raw_event_map }
%union.anon.210 = type { %struct.bpf_raw_event_map }
%union.anon.211 = type { %struct.bpf_raw_event_map }
%union.anon.212 = type { %struct.bpf_raw_event_map }
%union.anon.213 = type { %struct.bpf_raw_event_map }
%union.anon.214 = type { %struct.bpf_raw_event_map }
%union.anon.215 = type { %struct.bpf_raw_event_map }
%union.anon.216 = type { %struct.bpf_raw_event_map }
%union.anon.217 = type { %struct.bpf_raw_event_map }
%union.anon.218 = type { %struct.bpf_raw_event_map }
%union.anon.219 = type { %struct.bpf_raw_event_map }
%union.anon.220 = type { %struct.bpf_raw_event_map }
%union.anon.221 = type { %struct.bpf_raw_event_map }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.122 }
%union.anon.122 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.key_type = type { ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon.1 }
%union.anon.1 = type { %struct.hlist_node }
%struct.proto = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i8, ptr, i32, i32, i32, i32, ptr, ptr, ptr, %union.anon.71, ptr, [32 x i8], %struct.list_head, ptr }
%union.anon.71 = type { ptr }
%struct.pernet_operations = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.3 }
%union.anon.3 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.net_proto_family = type { i32, ptr, ptr }
%struct.proto_ops = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_rxrpc_local = type { %struct.trace_entry, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_rxrpc_peer = type { %struct.trace_entry, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rxrpc_conn = type { %struct.trace_entry, i32, i32, i32, ptr, [0 x i8] }
%struct.rxrpc_connection = type { %struct.rxrpc_conn_proto, %struct.rxrpc_conn_parameters, %struct.atomic_t, %struct.callback_head, %struct.list_head, i8, [4 x %struct.rxrpc_channel], %struct.timer_list, %struct.work_struct, ptr, %struct.rb_node, %struct.list_head, %struct.list_head, %struct.sk_buff_head, ptr, [4 x i8], %union.anon.139, i32, i32, i32, %struct.spinlock, i32, i32, i32, %struct.atomic_t, i32, i32, i8, i8, i8, i16 }
%struct.rxrpc_conn_proto = type { %union.anon.0 }
%union.anon.0 = type { i64 }
%struct.rxrpc_conn_parameters = type { ptr, ptr, ptr, i8, i8, i16, i32 }
%struct.callback_head = type { ptr, ptr }
%struct.rxrpc_channel = type { i32, ptr, i32, i32, i32, i32, i8, %union.anon.138 }
%union.anon.138 = type { i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rb_node = type { i32, ptr, ptr }
%struct.sk_buff_head = type { %union.anon.79, i32, %struct.spinlock }
%union.anon.79 = type { %struct.anon.80 }
%struct.anon.80 = type { ptr, ptr }
%union.anon.139 = type { %struct.anon.140 }
%struct.anon.140 = type { ptr, [4 x i8], %struct.rxrpc_crypt, i32, [4 x i8] }
%struct.rxrpc_crypt = type { %union.anon.141 }
%union.anon.141 = type { [2 x i32] }
%struct.trace_event_raw_rxrpc_client = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.anon = type { i32, i32 }
%struct.trace_event_raw_rxrpc_call = type { %struct.trace_entry, i32, i32, i32, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_rxrpc_skb = type { %struct.trace_entry, ptr, i32, i8, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_packet = type { %struct.trace_entry, %struct.rxrpc_host_header, [0 x i8] }
%struct.rxrpc_host_header = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, %union.anon.158, i16 }
%union.anon.158 = type { i16 }
%struct.rxrpc_skb_priv = type { %struct.atomic_t, i8, i8, %union.anon.157, %struct.rxrpc_host_header }
%union.anon.157 = type { [2 x i32] }
%struct.trace_event_raw_rxrpc_rx_done = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_abort = type { %struct.trace_entry, i32, [4 x i8], i32, i32, i32, i32, i32, [0 x i8] }
%struct.rxrpc_call = type { %struct.callback_head, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, %struct.timer_list, %struct.work_struct, ptr, %struct.list_head, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.rb_node, ptr, %struct.wait_queue_head, i64, [2 x i32], i32, i32, i32, %struct.spinlock, %struct.spinlock, %struct.rwlock_t, i32, i32, i32, i32, %struct.atomic_t, i16, i8, i32, i32, i32, i32, i16, i16, i8, ptr, ptr, i32, i32, i16, i8, i8, i8, i8, i8, i8, i64, i32, i32, i32, i32, i8, i8, i8, i8, %struct.spinlock, i8, i32, i32, i32, i32, i32, [4 x i32], [4 x i64], i32, i64, i32, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.trace_event_raw_rxrpc_call_complete = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_transmit = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_data = type { %struct.trace_entry, i32, i32, i32, i8, i8, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_ack = type { %struct.trace_entry, i32, i32, i32, i32, i32, i8, i8, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_abort = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_rwind_change = type { %struct.trace_entry, i32, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_rxrpc_tx_packet = type { %struct.trace_entry, i32, i32, %struct.rxrpc_wire_header, [0 x i8] }
%struct.rxrpc_wire_header = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, %union.anon.159, i16 }
%union.anon.159 = type { i16 }
%struct.trace_event_raw_rxrpc_tx_data = type { %struct.trace_entry, i32, i32, i32, i32, i32, i8, i8, i8, [0 x i8] }
%struct.trace_event_raw_rxrpc_tx_ack = type { %struct.trace_entry, i32, i32, i32, i32, i8, i8, [0 x i8] }
%struct.trace_event_raw_rxrpc_receive = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_recvmsg = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rtt_tx = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rtt_rx = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_timer = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_lose = type { %struct.trace_entry, %struct.rxrpc_host_header, [0 x i8] }
%struct.trace_event_raw_rxrpc_propose_ack = type { %struct.trace_entry, i32, i32, i32, i8, i8, i8, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_retransmit = type { %struct.trace_entry, i32, i32, i8, i64, [0 x i8] }
%struct.trace_event_raw_rxrpc_congest = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, %struct.rxrpc_ack_summary, [0 x i8] }
%struct.rxrpc_ack_summary = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.trace_event_raw_rxrpc_disconnect_call = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_improper_term = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_eproto = type { %struct.trace_entry, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rxrpc_connect_call = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_resend = type { %struct.trace_entry, i32, i32, [64 x i8], [0 x i8] }
%struct.rxrpc_peer = type { %struct.callback_head, %struct.atomic_t, i32, %struct.hlist_node, ptr, %struct.hlist_head, %struct.rb_root, %struct.list_head, i64, %struct.seqlock_t, %struct.spinlock, i32, i32, i32, i16, i32, %struct.sockaddr_rxrpc, %struct.spinlock, i64, i32, i32, i32, i32, i32, i32, i8, i8 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.sockaddr_rxrpc = type { i16, i16, i16, i16, %union.anon.135 }
%union.anon.135 = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.72 }
%union.anon.72 = type { [4 x i32] }
%struct.trace_event_raw_rxrpc_rx_icmp = type { %struct.trace_entry, i32, %struct.sock_extended_err, %struct.sockaddr_rxrpc, [0 x i8] }
%struct.sock_extended_err = type { i32, i8, i8, i8, i8, i32, %union.anon.160 }
%union.anon.160 = type { i32 }
%struct.trace_event_raw_rxrpc_tx_fail = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_call_reset = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_notify_socket = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rxrpc_rx_discard_ack = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.rxrpc_call_params = type { i64, i32, %struct.anon.222, i8, i8, i32 }
%struct.anon.222 = type { i32, i32, i32 }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [104 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [60 x i8] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.115, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.33 }
%struct.llist_node = type { ptr }
%union.anon.33 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.35 }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.115 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.10, ptr, %struct.rw_semaphore, ptr, ptr, %union.anon.11, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i32, %union.anon.12, %union.anon.16, ptr }
%union.anon.10 = type { %struct.rb_node }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%union.anon.11 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.12 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i32, %union.anon.13, ptr, ptr, ptr }
%union.anon.13 = type { i32 }
%union.anon.16 = type { %union.key_payload }
%union.key_payload = type { [4 x ptr] }
%struct.rxrpc_sock = type { %struct.sock, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head, %struct.rwlock_t, ptr, ptr, %struct.rb_root, i32, %struct.rwlock_t, i32, i8, i16, %struct.anon.137, i16, %struct.sockaddr_rxrpc, %struct.sockaddr_rxrpc }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.81, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.82, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.83, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.sock_common = type { %union.anon.41, %union.anon.43, %union.anon.44, i16, i8, i8, i32, %union.anon.46, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.73, [0 x i32], %union.anon.74, i16, i16, %union.anon.75, %struct.refcount_struct, [0 x i32], %union.anon.76 }
%union.anon.41 = type { i64 }
%union.anon.43 = type { i32 }
%union.anon.44 = type { i32 }
%union.anon.46 = type { %struct.hlist_node }
%struct.possible_net_t = type { ptr }
%struct.atomic64_t = type { i64 }
%union.anon.73 = type { i32 }
%union.anon.74 = type { %struct.hlist_node }
%union.anon.75 = type { i32 }
%union.anon.76 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.anon.81 = type { %struct.atomic_t, i32, ptr, ptr }
%union.anon.82 = type { ptr }
%union.anon.83 = type { ptr }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.anon.137 = type { i16, i16 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.18, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { ptr, i32, i32, i32 }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.94, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.anon.94 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.rxrpc_net = type { ptr, i32, %struct.list_head, %struct.rwlock_t, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.rwlock_t, %struct.work_struct, %struct.timer_list, i8, i8, %struct.atomic_t, %struct.spinlock, %struct.spinlock, %struct.list_head, %struct.work_struct, %struct.timer_list, %struct.list_head, %struct.mutex, [1024 x %struct.hlist_head], %struct.spinlock, i8, i64, [32 x %struct.list_head], %struct.list_head, %struct.timer_list, %struct.work_struct }
%struct.rxrpc_local = type { %struct.callback_head, %struct.atomic_t, %struct.atomic_t, ptr, %struct.list_head, ptr, %struct.work_struct, ptr, %struct.rw_semaphore, %struct.sk_buff_head, %struct.sk_buff_head, %struct.rb_root, %struct.spinlock, %struct.spinlock, %struct.rwlock_t, i32, i8, i8, %struct.sockaddr_rxrpc }
%struct.msghdr = type { ptr, i32, %struct.iov_iter, %union.anon.50, i8, i32, i32, ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.47, %union.anon.48 }
%union.anon.47 = type { ptr }
%union.anon.48 = type { i64 }
%union.anon.50 = type { ptr }

@__tpstrtab_rxrpc_local = internal constant [12 x i8] c"rxrpc_local\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_local = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_local }, align 4
@__tracepoint_rxrpc_local = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_local, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_local, ptr null, ptr @__traceiter_rxrpc_local, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_local = internal constant ptr @__tracepoint_rxrpc_local, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_peer = internal constant [11 x i8] c"rxrpc_peer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_peer = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_peer }, align 4
@__tracepoint_rxrpc_peer = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_peer, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_peer, ptr null, ptr @__traceiter_rxrpc_peer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_peer = internal constant ptr @__tracepoint_rxrpc_peer, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_conn = internal constant [11 x i8] c"rxrpc_conn\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_conn = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_conn }, align 4
@__tracepoint_rxrpc_conn = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_conn, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_conn, ptr null, ptr @__traceiter_rxrpc_conn, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_conn = internal constant ptr @__tracepoint_rxrpc_conn, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_client = internal constant [13 x i8] c"rxrpc_client\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_client = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_client }, align 4
@__tracepoint_rxrpc_client = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_client, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_client, ptr null, ptr @__traceiter_rxrpc_client, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_client = internal constant ptr @__tracepoint_rxrpc_client, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_call = internal constant [11 x i8] c"rxrpc_call\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_call = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_call }, align 4
@__tracepoint_rxrpc_call = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_call, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_call, ptr null, ptr @__traceiter_rxrpc_call, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_call = internal constant ptr @__tracepoint_rxrpc_call, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_skb = internal constant [10 x i8] c"rxrpc_skb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_skb = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_skb }, align 4
@__tracepoint_rxrpc_skb = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_skb, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_skb, ptr null, ptr @__traceiter_rxrpc_skb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_skb = internal constant ptr @__tracepoint_rxrpc_skb, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_packet = internal constant [16 x i8] c"rxrpc_rx_packet\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_packet = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_packet }, align 4
@__tracepoint_rxrpc_rx_packet = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_packet, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_packet, ptr null, ptr @__traceiter_rxrpc_rx_packet, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_packet = internal constant ptr @__tracepoint_rxrpc_rx_packet, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_done = internal constant [14 x i8] c"rxrpc_rx_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_done = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_done }, align 4
@__tracepoint_rxrpc_rx_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_done, ptr null, ptr @__traceiter_rxrpc_rx_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_done = internal constant ptr @__tracepoint_rxrpc_rx_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_abort = internal constant [12 x i8] c"rxrpc_abort\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_abort = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_abort }, align 4
@__tracepoint_rxrpc_abort = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_abort, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_abort, ptr null, ptr @__traceiter_rxrpc_abort, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_abort = internal constant ptr @__tracepoint_rxrpc_abort, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_call_complete = internal constant [20 x i8] c"rxrpc_call_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_call_complete = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_call_complete }, align 4
@__tracepoint_rxrpc_call_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_call_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_call_complete, ptr null, ptr @__traceiter_rxrpc_call_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_call_complete = internal constant ptr @__tracepoint_rxrpc_call_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_transmit = internal constant [15 x i8] c"rxrpc_transmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_transmit = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_transmit }, align 4
@__tracepoint_rxrpc_transmit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_transmit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_transmit, ptr null, ptr @__traceiter_rxrpc_transmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_transmit = internal constant ptr @__tracepoint_rxrpc_transmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_data = internal constant [14 x i8] c"rxrpc_rx_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_data = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_data }, align 4
@__tracepoint_rxrpc_rx_data = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_data, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_data, ptr null, ptr @__traceiter_rxrpc_rx_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_data = internal constant ptr @__tracepoint_rxrpc_rx_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_ack = internal constant [13 x i8] c"rxrpc_rx_ack\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_ack = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_ack }, align 4
@__tracepoint_rxrpc_rx_ack = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_ack, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_ack, ptr null, ptr @__traceiter_rxrpc_rx_ack, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_ack = internal constant ptr @__tracepoint_rxrpc_rx_ack, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_abort = internal constant [15 x i8] c"rxrpc_rx_abort\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_abort = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_abort }, align 4
@__tracepoint_rxrpc_rx_abort = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_abort, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_abort, ptr null, ptr @__traceiter_rxrpc_rx_abort, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_abort = internal constant ptr @__tracepoint_rxrpc_rx_abort, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_rwind_change = internal constant [22 x i8] c"rxrpc_rx_rwind_change\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_rwind_change = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_rwind_change }, align 4
@__tracepoint_rxrpc_rx_rwind_change = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_rwind_change, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_rwind_change, ptr null, ptr @__traceiter_rxrpc_rx_rwind_change, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_rwind_change = internal constant ptr @__tracepoint_rxrpc_rx_rwind_change, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_tx_packet = internal constant [16 x i8] c"rxrpc_tx_packet\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_tx_packet = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_tx_packet }, align 4
@__tracepoint_rxrpc_tx_packet = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_tx_packet, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_tx_packet, ptr null, ptr @__traceiter_rxrpc_tx_packet, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_tx_packet = internal constant ptr @__tracepoint_rxrpc_tx_packet, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_tx_data = internal constant [14 x i8] c"rxrpc_tx_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_tx_data = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_tx_data }, align 4
@__tracepoint_rxrpc_tx_data = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_tx_data, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_tx_data, ptr null, ptr @__traceiter_rxrpc_tx_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_tx_data = internal constant ptr @__tracepoint_rxrpc_tx_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_tx_ack = internal constant [13 x i8] c"rxrpc_tx_ack\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_tx_ack = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_tx_ack }, align 4
@__tracepoint_rxrpc_tx_ack = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_tx_ack, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_tx_ack, ptr null, ptr @__traceiter_rxrpc_tx_ack, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_tx_ack = internal constant ptr @__tracepoint_rxrpc_tx_ack, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_receive = internal constant [14 x i8] c"rxrpc_receive\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_receive = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_receive }, align 4
@__tracepoint_rxrpc_receive = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_receive, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_receive, ptr null, ptr @__traceiter_rxrpc_receive, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_receive = internal constant ptr @__tracepoint_rxrpc_receive, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_recvmsg = internal constant [14 x i8] c"rxrpc_recvmsg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_recvmsg = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_recvmsg }, align 4
@__tracepoint_rxrpc_recvmsg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_recvmsg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_recvmsg, ptr null, ptr @__traceiter_rxrpc_recvmsg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_recvmsg = internal constant ptr @__tracepoint_rxrpc_recvmsg, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rtt_tx = internal constant [13 x i8] c"rxrpc_rtt_tx\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rtt_tx = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rtt_tx }, align 4
@__tracepoint_rxrpc_rtt_tx = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rtt_tx, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rtt_tx, ptr null, ptr @__traceiter_rxrpc_rtt_tx, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rtt_tx = internal constant ptr @__tracepoint_rxrpc_rtt_tx, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rtt_rx = internal constant [13 x i8] c"rxrpc_rtt_rx\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rtt_rx = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rtt_rx }, align 4
@__tracepoint_rxrpc_rtt_rx = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rtt_rx, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rtt_rx, ptr null, ptr @__traceiter_rxrpc_rtt_rx, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rtt_rx = internal constant ptr @__tracepoint_rxrpc_rtt_rx, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_timer = internal constant [12 x i8] c"rxrpc_timer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_timer = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_timer }, align 4
@__tracepoint_rxrpc_timer = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_timer, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_timer, ptr null, ptr @__traceiter_rxrpc_timer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_timer = internal constant ptr @__tracepoint_rxrpc_timer, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_lose = internal constant [14 x i8] c"rxrpc_rx_lose\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_lose = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_lose }, align 4
@__tracepoint_rxrpc_rx_lose = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_lose, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_lose, ptr null, ptr @__traceiter_rxrpc_rx_lose, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_lose = internal constant ptr @__tracepoint_rxrpc_rx_lose, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_propose_ack = internal constant [18 x i8] c"rxrpc_propose_ack\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_propose_ack = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_propose_ack }, align 4
@__tracepoint_rxrpc_propose_ack = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_propose_ack, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_propose_ack, ptr null, ptr @__traceiter_rxrpc_propose_ack, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_propose_ack = internal constant ptr @__tracepoint_rxrpc_propose_ack, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_retransmit = internal constant [17 x i8] c"rxrpc_retransmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_retransmit = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_retransmit }, align 4
@__tracepoint_rxrpc_retransmit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_retransmit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_retransmit, ptr null, ptr @__traceiter_rxrpc_retransmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_retransmit = internal constant ptr @__tracepoint_rxrpc_retransmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_congest = internal constant [14 x i8] c"rxrpc_congest\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_congest = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_congest }, align 4
@__tracepoint_rxrpc_congest = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_congest, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_congest, ptr null, ptr @__traceiter_rxrpc_congest, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_congest = internal constant ptr @__tracepoint_rxrpc_congest, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_disconnect_call = internal constant [22 x i8] c"rxrpc_disconnect_call\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_disconnect_call = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_disconnect_call }, align 4
@__tracepoint_rxrpc_disconnect_call = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_disconnect_call, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_disconnect_call, ptr null, ptr @__traceiter_rxrpc_disconnect_call, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_disconnect_call = internal constant ptr @__tracepoint_rxrpc_disconnect_call, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_improper_term = internal constant [20 x i8] c"rxrpc_improper_term\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_improper_term = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_improper_term }, align 4
@__tracepoint_rxrpc_improper_term = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_improper_term, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_improper_term, ptr null, ptr @__traceiter_rxrpc_improper_term, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_improper_term = internal constant ptr @__tracepoint_rxrpc_improper_term, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_eproto = internal constant [16 x i8] c"rxrpc_rx_eproto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_eproto = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_eproto }, align 4
@__tracepoint_rxrpc_rx_eproto = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_eproto, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_eproto, ptr null, ptr @__traceiter_rxrpc_rx_eproto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_eproto = internal constant ptr @__tracepoint_rxrpc_rx_eproto, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_connect_call = internal constant [19 x i8] c"rxrpc_connect_call\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_connect_call = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_connect_call }, align 4
@__tracepoint_rxrpc_connect_call = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_connect_call, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_connect_call, ptr null, ptr @__traceiter_rxrpc_connect_call, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_connect_call = internal constant ptr @__tracepoint_rxrpc_connect_call, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_resend = internal constant [13 x i8] c"rxrpc_resend\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_resend = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_resend }, align 4
@__tracepoint_rxrpc_resend = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_resend, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_resend, ptr null, ptr @__traceiter_rxrpc_resend, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_resend = internal constant ptr @__tracepoint_rxrpc_resend, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_icmp = internal constant [14 x i8] c"rxrpc_rx_icmp\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_icmp = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_icmp }, align 4
@__tracepoint_rxrpc_rx_icmp = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_icmp, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_icmp, ptr null, ptr @__traceiter_rxrpc_rx_icmp, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_icmp = internal constant ptr @__tracepoint_rxrpc_rx_icmp, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_tx_fail = internal constant [14 x i8] c"rxrpc_tx_fail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_tx_fail = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_tx_fail }, align 4
@__tracepoint_rxrpc_tx_fail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_tx_fail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_tx_fail, ptr null, ptr @__traceiter_rxrpc_tx_fail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_tx_fail = internal constant ptr @__tracepoint_rxrpc_tx_fail, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_call_reset = internal constant [17 x i8] c"rxrpc_call_reset\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_call_reset = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_call_reset }, align 4
@__tracepoint_rxrpc_call_reset = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_call_reset, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_call_reset, ptr null, ptr @__traceiter_rxrpc_call_reset, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_call_reset = internal constant ptr @__tracepoint_rxrpc_call_reset, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_notify_socket = internal constant [20 x i8] c"rxrpc_notify_socket\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_notify_socket = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_notify_socket }, align 4
@__tracepoint_rxrpc_notify_socket = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_notify_socket, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_notify_socket, ptr null, ptr @__traceiter_rxrpc_notify_socket, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_notify_socket = internal constant ptr @__tracepoint_rxrpc_notify_socket, section "__tracepoints_ptrs", align 4
@__tpstrtab_rxrpc_rx_discard_ack = internal constant [21 x i8] c"rxrpc_rx_discard_ack\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rxrpc_rx_discard_ack = dso_local global %struct.static_call_key { ptr @__traceiter_rxrpc_rx_discard_ack }, align 4
@__tracepoint_rxrpc_rx_discard_ack = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rxrpc_rx_discard_ack, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rxrpc_rx_discard_ack, ptr null, ptr @__traceiter_rxrpc_rx_discard_ack, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rxrpc_rx_discard_ack = internal constant ptr @__tracepoint_rxrpc_rx_discard_ack, section "__tracepoints_ptrs", align 4
@str__rxrpc__trace_system_name = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"rxrpc\00", [26 x i8] zeroinitializer }, align 32
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_skb_cleaned\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_cleaned = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_cleaned = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_cleaned, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rxrpc_skb_freed\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_freed = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.1, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_freed = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_freed, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rxrpc_skb_got\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_got = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.2, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_got = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_got, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_skb_lost\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_lost = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.3, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_lost = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_lost, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rxrpc_skb_new\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_new = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.4, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_new = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_new, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rxrpc_skb_purged\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_purged = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_purged = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_purged, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_skb_received\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_received = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.6, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_received = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_received, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_skb_rotated\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_rotated = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.7, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_rotated = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_rotated, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_skb_seen\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_seen = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.8, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_seen = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_seen, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_skb_unshared\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_unshared = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.9, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_unshared = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_unshared, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_skb_unshared_nomem\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_skb_unshared_nomem = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.10, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_skb_unshared_nomem = internal global ptr @__TRACE_SYSTEM_rxrpc_skb_unshared_nomem, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rxrpc_local_got\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_local_got = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.11, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_local_got = internal global ptr @__TRACE_SYSTEM_rxrpc_local_got, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rxrpc_local_new\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_local_new = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.12, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_local_new = internal global ptr @__TRACE_SYSTEM_rxrpc_local_new, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_local_processing\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_local_processing = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.13, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_local_processing = internal global ptr @__TRACE_SYSTEM_rxrpc_local_processing, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rxrpc_local_put\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_local_put = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.14, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_local_put = internal global ptr @__TRACE_SYSTEM_rxrpc_local_put, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_local_queued\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_local_queued = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.15, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_local_queued = internal global ptr @__TRACE_SYSTEM_rxrpc_local_queued, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_conn_got\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_got = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.16, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_got = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_got, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_conn_new_client\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_new_client = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.17, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_new_client = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_new_client, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_conn_new_service\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_new_service = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.18, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_new_service = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_new_service, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_conn_put_client\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_put_client = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.19, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_put_client = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_put_client, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_conn_put_service\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_put_service = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.20, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_put_service = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_put_service, section "_ftrace_eval_map", align 4
@.str.21 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_conn_queued\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_queued = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.21, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_queued = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_queued, section "_ftrace_eval_map", align 4
@.str.22 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"rxrpc_conn_reap_service\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_reap_service = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.22, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_reap_service = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_reap_service, section "_ftrace_eval_map", align 4
@.str.23 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rxrpc_conn_seen\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_conn_seen = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.23, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_conn_seen = internal global ptr @__TRACE_SYSTEM_rxrpc_conn_seen, section "_ftrace_eval_map", align 4
@.str.24 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rxrpc_client_activate_chans\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_activate_chans = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.24, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_activate_chans = internal global ptr @__TRACE_SYSTEM_rxrpc_client_activate_chans, section "_ftrace_eval_map", align 4
@.str.25 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_client_alloc\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_alloc = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.25, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_alloc = internal global ptr @__TRACE_SYSTEM_rxrpc_client_alloc, section "_ftrace_eval_map", align 4
@.str.26 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_client_chan_activate\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_chan_activate = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.26, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_chan_activate = internal global ptr @__TRACE_SYSTEM_rxrpc_client_chan_activate, section "_ftrace_eval_map", align 4
@.str.27 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"rxrpc_client_chan_disconnect\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_chan_disconnect = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.27, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_chan_disconnect = internal global ptr @__TRACE_SYSTEM_rxrpc_client_chan_disconnect, section "_ftrace_eval_map", align 4
@.str.28 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_client_chan_pass\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_chan_pass = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.28, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_chan_pass = internal global ptr @__TRACE_SYSTEM_rxrpc_client_chan_pass, section "_ftrace_eval_map", align 4
@.str.29 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"rxrpc_client_chan_wait_failed\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_chan_wait_failed = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.29, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_chan_wait_failed = internal global ptr @__TRACE_SYSTEM_rxrpc_client_chan_wait_failed, section "_ftrace_eval_map", align 4
@.str.30 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_client_cleanup\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_cleanup = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.30, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_cleanup = internal global ptr @__TRACE_SYSTEM_rxrpc_client_cleanup, section "_ftrace_eval_map", align 4
@.str.31 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_client_discard\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_discard = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.31, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_discard = internal global ptr @__TRACE_SYSTEM_rxrpc_client_discard, section "_ftrace_eval_map", align 4
@.str.32 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_client_duplicate\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_duplicate = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.32, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_duplicate = internal global ptr @__TRACE_SYSTEM_rxrpc_client_duplicate, section "_ftrace_eval_map", align 4
@.str.33 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_client_exposed\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_exposed = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.33, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_exposed = internal global ptr @__TRACE_SYSTEM_rxrpc_client_exposed, section "_ftrace_eval_map", align 4
@.str.34 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_client_replace\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_replace = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.34, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_replace = internal global ptr @__TRACE_SYSTEM_rxrpc_client_replace, section "_ftrace_eval_map", align 4
@.str.35 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_client_to_active\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_to_active = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.35, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_to_active = internal global ptr @__TRACE_SYSTEM_rxrpc_client_to_active, section "_ftrace_eval_map", align 4
@.str.36 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_client_to_idle\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_client_to_idle = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.36, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_client_to_idle = internal global ptr @__TRACE_SYSTEM_rxrpc_client_to_idle, section "_ftrace_eval_map", align 4
@.str.37 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_call_connected\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_connected = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.37, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_connected = internal global ptr @__TRACE_SYSTEM_rxrpc_call_connected, section "_ftrace_eval_map", align 4
@.str.38 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rxrpc_call_error\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_error = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.38, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_error = internal global ptr @__TRACE_SYSTEM_rxrpc_call_error, section "_ftrace_eval_map", align 4
@.str.39 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_call_got\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_got = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.39, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_got = internal global ptr @__TRACE_SYSTEM_rxrpc_call_got, section "_ftrace_eval_map", align 4
@.str.40 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_call_got_kernel\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_got_kernel = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.40, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_got_kernel = internal global ptr @__TRACE_SYSTEM_rxrpc_call_got_kernel, section "_ftrace_eval_map", align 4
@.str.41 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_call_got_userid\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_got_userid = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.41, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_got_userid = internal global ptr @__TRACE_SYSTEM_rxrpc_call_got_userid, section "_ftrace_eval_map", align 4
@.str.42 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_call_new_client\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_new_client = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.42, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_new_client = internal global ptr @__TRACE_SYSTEM_rxrpc_call_new_client, section "_ftrace_eval_map", align 4
@.str.43 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_call_new_service\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_new_service = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.43, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_new_service = internal global ptr @__TRACE_SYSTEM_rxrpc_call_new_service, section "_ftrace_eval_map", align 4
@.str.44 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_call_put\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_put = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.44, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_put = internal global ptr @__TRACE_SYSTEM_rxrpc_call_put, section "_ftrace_eval_map", align 4
@.str.45 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_call_put_kernel\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_put_kernel = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.45, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_put_kernel = internal global ptr @__TRACE_SYSTEM_rxrpc_call_put_kernel, section "_ftrace_eval_map", align 4
@.str.46 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_call_put_noqueue\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_put_noqueue = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.46, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_put_noqueue = internal global ptr @__TRACE_SYSTEM_rxrpc_call_put_noqueue, section "_ftrace_eval_map", align 4
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_call_put_userid\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_put_userid = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.47, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_put_userid = internal global ptr @__TRACE_SYSTEM_rxrpc_call_put_userid, section "_ftrace_eval_map", align 4
@.str.48 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_call_queued\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_queued = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.48, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_queued = internal global ptr @__TRACE_SYSTEM_rxrpc_call_queued, section "_ftrace_eval_map", align 4
@.str.49 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_call_queued_ref\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_queued_ref = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.49, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_queued_ref = internal global ptr @__TRACE_SYSTEM_rxrpc_call_queued_ref, section "_ftrace_eval_map", align 4
@.str.50 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_call_release\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_release = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.50, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_release = internal global ptr @__TRACE_SYSTEM_rxrpc_call_release, section "_ftrace_eval_map", align 4
@.str.51 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rxrpc_call_seen\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_call_seen = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.51, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_call_seen = internal global ptr @__TRACE_SYSTEM_rxrpc_call_seen, section "_ftrace_eval_map", align 4
@.str.52 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_transmit_await_reply\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_await_reply = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.52, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_await_reply = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_await_reply, section "_ftrace_eval_map", align 4
@.str.53 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_transmit_end\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_end = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.53, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_end = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_end, section "_ftrace_eval_map", align 4
@.str.54 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_transmit_queue\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_queue = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.54, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_queue = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_queue, section "_ftrace_eval_map", align 4
@.str.55 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_transmit_queue_last\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_queue_last = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.55, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_queue_last = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_queue_last, section "_ftrace_eval_map", align 4
@.str.56 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_transmit_rotate\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_rotate = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.56, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_rotate = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_rotate, section "_ftrace_eval_map", align 4
@.str.57 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_transmit_rotate_last\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_rotate_last = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.57, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_rotate_last = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_rotate_last, section "_ftrace_eval_map", align 4
@.str.58 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_transmit_wait\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_transmit_wait = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.58, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_transmit_wait = internal global ptr @__TRACE_SYSTEM_rxrpc_transmit_wait, section "_ftrace_eval_map", align 4
@.str.59 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_receive_end\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_receive_end = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.59, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_receive_end = internal global ptr @__TRACE_SYSTEM_rxrpc_receive_end, section "_ftrace_eval_map", align 4
@.str.60 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_receive_front\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_receive_front = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.60, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_receive_front = internal global ptr @__TRACE_SYSTEM_rxrpc_receive_front, section "_ftrace_eval_map", align 4
@.str.61 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_receive_incoming\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_receive_incoming = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.61, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_receive_incoming = internal global ptr @__TRACE_SYSTEM_rxrpc_receive_incoming, section "_ftrace_eval_map", align 4
@.str.62 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_receive_queue\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_receive_queue = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.62, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_receive_queue = internal global ptr @__TRACE_SYSTEM_rxrpc_receive_queue, section "_ftrace_eval_map", align 4
@.str.63 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_receive_queue_last\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_receive_queue_last = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.63, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_receive_queue_last = internal global ptr @__TRACE_SYSTEM_rxrpc_receive_queue_last, section "_ftrace_eval_map", align 4
@.str.64 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_receive_rotate\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_receive_rotate = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.64, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_receive_rotate = internal global ptr @__TRACE_SYSTEM_rxrpc_receive_rotate, section "_ftrace_eval_map", align 4
@.str.65 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_recvmsg_cont\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_cont = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.65, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_cont = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_cont, section "_ftrace_eval_map", align 4
@.str.66 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_recvmsg_data_return\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_data_return = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.66, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_data_return = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_data_return, section "_ftrace_eval_map", align 4
@.str.67 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_recvmsg_dequeue\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_dequeue = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.67, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_dequeue = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_dequeue, section "_ftrace_eval_map", align 4
@.str.68 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_recvmsg_enter\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_enter = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.68, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_enter = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_enter, section "_ftrace_eval_map", align 4
@.str.69 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_recvmsg_full\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_full = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.69, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_full = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_full, section "_ftrace_eval_map", align 4
@.str.70 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_recvmsg_hole\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_hole = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.70, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_hole = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_hole, section "_ftrace_eval_map", align 4
@.str.71 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_recvmsg_next\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_next = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.71, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_next = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_next, section "_ftrace_eval_map", align 4
@.str.72 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_recvmsg_requeue\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_requeue = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.72, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_requeue = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_requeue, section "_ftrace_eval_map", align 4
@.str.73 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_recvmsg_return\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_return = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.73, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_return = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_return, section "_ftrace_eval_map", align 4
@.str.74 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_recvmsg_terminal\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_terminal = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.74, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_terminal = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_terminal, section "_ftrace_eval_map", align 4
@.str.75 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"rxrpc_recvmsg_to_be_accepted\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.75, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted, section "_ftrace_eval_map", align 4
@.str.76 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_recvmsg_wait\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_recvmsg_wait = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.76, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_recvmsg_wait = internal global ptr @__TRACE_SYSTEM_rxrpc_recvmsg_wait, section "_ftrace_eval_map", align 4
@.str.77 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_rtt_tx_cancel\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_tx_cancel = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.77, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_tx_cancel = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_cancel, section "_ftrace_eval_map", align 4
@.str.78 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_rtt_tx_data\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_tx_data = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.78, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_tx_data = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_data, section "_ftrace_eval_map", align 4
@.str.79 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_rtt_tx_no_slot\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_tx_no_slot = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.79, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_tx_no_slot = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_no_slot, section "_ftrace_eval_map", align 4
@.str.80 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_rtt_tx_ping\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_tx_ping = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.80, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_tx_ping = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_ping, section "_ftrace_eval_map", align 4
@.str.81 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_rtt_rx_cancel\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_rx_cancel = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.81, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_rx_cancel = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_cancel, section "_ftrace_eval_map", align 4
@.str.82 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_rtt_rx_obsolete\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_rx_obsolete = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.82, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_rx_obsolete = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_obsolete, section "_ftrace_eval_map", align 4
@.str.83 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_rtt_rx_lost\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_rx_lost = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.83, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_rx_lost = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_lost, section "_ftrace_eval_map", align 4
@.str.84 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_rtt_rx_ping_response\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_rx_ping_response = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.84, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_rx_ping_response = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_ping_response, section "_ftrace_eval_map", align 4
@.str.85 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_rtt_rx_requested_ack\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.85, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack, section "_ftrace_eval_map", align 4
@.str.86 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_timer_begin\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_begin = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.86, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_begin = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_begin, section "_ftrace_eval_map", align 4
@.str.87 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_timer_expired\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_expired = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.87, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_expired = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_expired, section "_ftrace_eval_map", align 4
@.str.88 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_timer_exp_ack\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.88, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_ack, section "_ftrace_eval_map", align 4
@.str.89 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_timer_exp_hard\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_hard = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.89, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_hard = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_hard, section "_ftrace_eval_map", align 4
@.str.90 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_timer_exp_idle\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_idle = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.90, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_idle = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_idle, section "_ftrace_eval_map", align 4
@.str.91 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_timer_exp_keepalive\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_keepalive = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.91, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_keepalive = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_keepalive, section "_ftrace_eval_map", align 4
@.str.92 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_timer_exp_lost_ack\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_lost_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.92, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_lost_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_lost_ack, section "_ftrace_eval_map", align 4
@.str.93 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_timer_exp_normal\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_normal = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.93, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_normal = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_normal, section "_ftrace_eval_map", align 4
@.str.94 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_timer_exp_ping\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_ping = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.94, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_ping = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_ping, section "_ftrace_eval_map", align 4
@.str.95 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_timer_exp_resend\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_exp_resend = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.95, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_exp_resend = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_exp_resend, section "_ftrace_eval_map", align 4
@.str.96 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_timer_init_for_reply\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_init_for_reply = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.96, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_init_for_reply = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_init_for_reply, section "_ftrace_eval_map", align 4
@.str.97 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rxrpc_timer_init_for_send_reply\00", [32 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_init_for_send_reply = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.97, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_init_for_send_reply = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_init_for_send_reply, section "_ftrace_eval_map", align 4
@.str.98 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_timer_restart\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_restart = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.98, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_restart = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_restart, section "_ftrace_eval_map", align 4
@.str.99 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"rxrpc_timer_set_for_ack\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.99, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_ack, section "_ftrace_eval_map", align 4
@.str.100 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_timer_set_for_hard\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_hard = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.100, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_hard = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_hard, section "_ftrace_eval_map", align 4
@.str.101 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_timer_set_for_idle\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_idle = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.101, i32 15 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_idle = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_idle, section "_ftrace_eval_map", align 4
@.str.102 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"rxrpc_timer_set_for_keepalive\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_keepalive = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.102, i32 16 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_keepalive = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_keepalive, section "_ftrace_eval_map", align 4
@.str.103 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"rxrpc_timer_set_for_lost_ack\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.103, i32 17 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack, section "_ftrace_eval_map", align 4
@.str.104 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_timer_set_for_normal\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_normal = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.104, i32 18 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_normal = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_normal, section "_ftrace_eval_map", align 4
@.str.105 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_timer_set_for_ping\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_ping = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.105, i32 19 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_ping = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_ping, section "_ftrace_eval_map", align 4
@.str.106 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_timer_set_for_resend\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_resend = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.106, i32 20 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_resend = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_resend, section "_ftrace_eval_map", align 4
@.str.107 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_timer_set_for_send\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_timer_set_for_send = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.107, i32 21 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_timer_set_for_send = internal global ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_send, section "_ftrace_eval_map", align 4
@.str.108 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rxrpc_propose_ack_client_tx_end\00", [32 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.108, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end, section "_ftrace_eval_map", align 4
@.str.109 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"rxrpc_propose_ack_input_data\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_input_data = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.109, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_input_data = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_input_data, section "_ftrace_eval_map", align 4
@.str.110 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"rxrpc_propose_ack_ping_for_check_life\00", [58 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.110, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life, section "_ftrace_eval_map", align 4
@.str.111 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"rxrpc_propose_ack_ping_for_keepalive\00", [59 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.111, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive, section "_ftrace_eval_map", align 4
@.str.112 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"rxrpc_propose_ack_ping_for_lost_ack\00", [60 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.112, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack, section "_ftrace_eval_map", align 4
@.str.113 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"rxrpc_propose_ack_ping_for_lost_reply\00", [58 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.113, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply, section "_ftrace_eval_map", align 4
@.str.114 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"rxrpc_propose_ack_ping_for_params\00", [62 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.114, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params, section "_ftrace_eval_map", align 4
@.str.115 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rxrpc_propose_ack_processing_op\00", [32 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_processing_op = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.115, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_processing_op = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_processing_op, section "_ftrace_eval_map", align 4
@.str.116 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"rxrpc_propose_ack_respond_to_ack\00", [63 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.116, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack, section "_ftrace_eval_map", align 4
@.str.117 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"rxrpc_propose_ack_respond_to_ping\00", [62 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.117, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping, section "_ftrace_eval_map", align 4
@.str.118 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rxrpc_propose_ack_retry_tx\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_retry_tx = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.118, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_retry_tx = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_retry_tx, section "_ftrace_eval_map", align 4
@.str.119 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rxrpc_propose_ack_rotate_rx\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.119, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx, section "_ftrace_eval_map", align 4
@.str.120 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"rxrpc_propose_ack_terminal_ack\00", [33 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.120, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack, section "_ftrace_eval_map", align 4
@.str.121 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_propose_ack_subsume\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_subsume = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.121, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_subsume = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_subsume, section "_ftrace_eval_map", align 4
@.str.122 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_propose_ack_update\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_update = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.122, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_update = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_update, section "_ftrace_eval_map", align 4
@.str.123 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_propose_ack_use\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_propose_ack_use = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.123, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_propose_ack_use = internal global ptr @__TRACE_SYSTEM_rxrpc_propose_ack_use, section "_ftrace_eval_map", align 4
@.str.124 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"RXRPC_CALL_CONGEST_AVOIDANCE\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.124, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE = internal global ptr @__TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE, section "_ftrace_eval_map", align 4
@.str.125 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"RXRPC_CALL_FAST_RETRANSMIT\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.125, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT = internal global ptr @__TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT, section "_ftrace_eval_map", align 4
@.str.126 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"RXRPC_CALL_PACKET_LOSS\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.126, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS = internal global ptr @__TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS, section "_ftrace_eval_map", align 4
@.str.127 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"RXRPC_CALL_SLOW_START\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RXRPC_CALL_SLOW_START = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.127, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RXRPC_CALL_SLOW_START = internal global ptr @__TRACE_SYSTEM_RXRPC_CALL_SLOW_START, section "_ftrace_eval_map", align 4
@.str.128 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rxrpc_cong_begin_retransmission\00", [32 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_begin_retransmission = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.128, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_begin_retransmission = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_begin_retransmission, section "_ftrace_eval_map", align 4
@.str.129 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rxrpc_cong_cleared_nacks\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_cleared_nacks = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.129, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_cleared_nacks = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_cleared_nacks, section "_ftrace_eval_map", align 4
@.str.130 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"rxrpc_cong_new_low_nack\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_new_low_nack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.130, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_new_low_nack = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_new_low_nack, section "_ftrace_eval_map", align 4
@.str.131 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rxrpc_cong_no_change\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_no_change = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.131, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_no_change = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_no_change, section "_ftrace_eval_map", align 4
@.str.132 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_cong_progress\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_progress = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.132, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_progress = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_progress, section "_ftrace_eval_map", align 4
@.str.133 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rxrpc_cong_retransmit_again\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_retransmit_again = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.133, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_retransmit_again = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_retransmit_again, section "_ftrace_eval_map", align 4
@.str.134 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_cong_rtt_window_end\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_rtt_window_end = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.134, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_rtt_window_end = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_rtt_window_end, section "_ftrace_eval_map", align 4
@.str.135 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rxrpc_cong_saw_nack\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_cong_saw_nack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.135, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_cong_saw_nack = internal global ptr @__TRACE_SYSTEM_rxrpc_cong_saw_nack, section "_ftrace_eval_map", align 4
@.str.136 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_tx_point_call_abort\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_call_abort = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.136, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_call_abort = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_abort, section "_ftrace_eval_map", align 4
@.str.137 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"rxrpc_tx_point_call_ack\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_call_ack = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.137, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_call_ack = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_ack, section "_ftrace_eval_map", align 4
@.str.138 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"rxrpc_tx_point_call_data_frag\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_call_data_frag = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.138, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_call_data_frag = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_data_frag, section "_ftrace_eval_map", align 4
@.str.139 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rxrpc_tx_point_call_data_nofrag\00", [32 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.139, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag, section "_ftrace_eval_map", align 4
@.str.140 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"rxrpc_tx_point_call_final_resend\00", [63 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_call_final_resend = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.140, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_call_final_resend = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_final_resend, section "_ftrace_eval_map", align 4
@.str.141 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rxrpc_tx_point_conn_abort\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_conn_abort = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.141, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_conn_abort = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_conn_abort, section "_ftrace_eval_map", align 4
@.str.142 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_tx_point_reject\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_reject = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.142, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_reject = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_reject, section "_ftrace_eval_map", align 4
@.str.143 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"rxrpc_tx_point_rxkad_challenge\00", [33 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.143, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge, section "_ftrace_eval_map", align 4
@.str.144 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"rxrpc_tx_point_rxkad_response\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_rxkad_response = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.144, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_rxkad_response = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_rxkad_response, section "_ftrace_eval_map", align 4
@.str.145 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"rxrpc_tx_point_version_keepalive\00", [63 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_version_keepalive = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.145, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_version_keepalive = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_version_keepalive, section "_ftrace_eval_map", align 4
@.str.146 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"rxrpc_tx_point_version_reply\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rxrpc_tx_point_version_reply = internal global %struct.trace_eval_map { ptr @str__rxrpc__trace_system_name, ptr @.str.146, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_rxrpc_tx_point_version_reply = internal global ptr @__TRACE_SYSTEM_rxrpc_tx_point_version_reply, section "_ftrace_eval_map", align 4
@trace_event_fields_rxrpc_local = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.167, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.169, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_local = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_local, ptr @perf_trace_rxrpc_local, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_local, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_local, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_local, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_local = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_local, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_local = internal global { [238 x i8], [50 x i8] } { [238 x i8] c"\22L=%08x %s u=%d sp=%pSR\22, REC->local, __print_symbolic(REC->op, { rxrpc_local_got, \22GOT\22 }, { rxrpc_local_new, \22NEW\22 }, { rxrpc_local_processing, \22PRO\22 }, { rxrpc_local_put, \22PUT\22 }, { rxrpc_local_queued, \22QUE\22 }), REC->usage, REC->where\00", [50 x i8] zeroinitializer }, align 32
@event_rxrpc_local = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_local, %union.anon.183 { ptr @__tracepoint_rxrpc_local }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_local }, ptr @print_fmt_rxrpc_local, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_local = internal global ptr @event_rxrpc_local, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_peer = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.179, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.169, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_peer = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_peer, ptr @perf_trace_rxrpc_peer, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_peer, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_peer, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_peer, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_peer = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_peer, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_peer = internal global { [202 x i8], [54 x i8] } { [202 x i8] c"\22P=%08x %s u=%d sp=%pSR\22, REC->peer, __print_symbolic(REC->op, { rxrpc_peer_got, \22GOT\22 }, { rxrpc_peer_new, \22NEW\22 }, { rxrpc_peer_processing, \22PRO\22 }, { rxrpc_peer_put, \22PUT\22 }), REC->usage, REC->where\00", [54 x i8] zeroinitializer }, align 32
@event_rxrpc_peer = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_peer, %union.anon.183 { ptr @__tracepoint_rxrpc_peer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_peer }, ptr @print_fmt_rxrpc_peer, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_peer = internal global ptr @event_rxrpc_peer, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_conn = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.181, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.169, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_conn = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_conn, ptr @perf_trace_rxrpc_conn, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_conn, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_conn, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_conn, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_conn = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_conn, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_conn = internal global { [346 x i8], [70 x i8] } { [346 x i8] c"\22C=%08x %s u=%d sp=%pSR\22, REC->conn, __print_symbolic(REC->op, { rxrpc_conn_got, \22GOT\22 }, { rxrpc_conn_new_client, \22NWc\22 }, { rxrpc_conn_new_service, \22NWs\22 }, { rxrpc_conn_put_client, \22PTc\22 }, { rxrpc_conn_put_service, \22PTs\22 }, { rxrpc_conn_queued, \22QUE\22 }, { rxrpc_conn_reap_service, \22RPs\22 }, { rxrpc_conn_seen, \22SEE\22 }), REC->usage, REC->where\00", [70 x i8] zeroinitializer }, align 32
@event_rxrpc_conn = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_conn, %union.anon.183 { ptr @__tracepoint_rxrpc_conn }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_conn }, ptr @print_fmt_rxrpc_conn, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_conn = internal global ptr @event_rxrpc_conn, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_client = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.181, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.191, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.192, %union.anon.181 { %struct.anon.182 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rxrpc_client = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_client, ptr @perf_trace_rxrpc_client, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_client, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_client, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_client, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_client = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_client, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_client = internal global { [606 x i8], [130 x i8] } { [606 x i8] c"\22C=%08x h=%2d %s i=%08x u=%d\22, REC->conn, REC->channel, __print_symbolic(REC->op, { rxrpc_client_activate_chans, \22Activa\22 }, { rxrpc_client_alloc, \22Alloc \22 }, { rxrpc_client_chan_activate, \22ChActv\22 }, { rxrpc_client_chan_disconnect, \22ChDisc\22 }, { rxrpc_client_chan_pass, \22ChPass\22 }, { rxrpc_client_chan_wait_failed, \22ChWtFl\22 }, { rxrpc_client_cleanup, \22Clean \22 }, { rxrpc_client_discard, \22Discar\22 }, { rxrpc_client_duplicate, \22Duplic\22 }, { rxrpc_client_exposed, \22Expose\22 }, { rxrpc_client_replace, \22Replac\22 }, { rxrpc_client_to_active, \22->Actv\22 }, { rxrpc_client_to_idle, \22->Idle\22 }), REC->cid, REC->usage\00", [130 x i8] zeroinitializer }, align 32
@event_rxrpc_client = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_client, %union.anon.183 { ptr @__tracepoint_rxrpc_client }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_client }, ptr @print_fmt_rxrpc_client, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_client = internal global ptr @event_rxrpc_client, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_call = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.169, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.181 { %struct.anon.182 { ptr @.str.208, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rxrpc_call = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_call, ptr @perf_trace_rxrpc_call, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_call, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_call, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_call, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_call = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_call, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_call = internal global { [581 x i8], [155 x i8] } { [581 x i8] c"\22c=%08x %s u=%d sp=%pSR a=%p\22, REC->call, __print_symbolic(REC->op, { rxrpc_call_connected, \22CON\22 }, { rxrpc_call_error, \22*E*\22 }, { rxrpc_call_got, \22GOT\22 }, { rxrpc_call_got_kernel, \22Gke\22 }, { rxrpc_call_got_userid, \22Gus\22 }, { rxrpc_call_new_client, \22NWc\22 }, { rxrpc_call_new_service, \22NWs\22 }, { rxrpc_call_put, \22PUT\22 }, { rxrpc_call_put_kernel, \22Pke\22 }, { rxrpc_call_put_noqueue, \22PNQ\22 }, { rxrpc_call_put_userid, \22Pus\22 }, { rxrpc_call_queued, \22QUE\22 }, { rxrpc_call_queued_ref, \22QUR\22 }, { rxrpc_call_release, \22RLS\22 }, { rxrpc_call_seen, \22SEE\22 }), REC->usage, REC->where, REC->aux\00", [155 x i8] zeroinitializer }, align 32
@event_rxrpc_call = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_call, %union.anon.183 { ptr @__tracepoint_rxrpc_call }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_call }, ptr @print_fmt_rxrpc_call, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_call = internal global ptr @event_rxrpc_call, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_skb = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.219, %union.anon.181 { %struct.anon.182 { ptr @.str.220, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.221, %union.anon.181 { %struct.anon.182 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.223, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.224, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_skb = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_skb, ptr @perf_trace_rxrpc_skb, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_skb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_skb, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_skb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_skb = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_skb, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_skb = internal global { [461 x i8], [115 x i8] } { [461 x i8] c"\22s=%p %cx %s u=%d m=%d p=%pSR\22, REC->skb, REC->flags & 0x02 ? 'T' : 'R', __print_symbolic(REC->op, { rxrpc_skb_cleaned, \22CLN\22 }, { rxrpc_skb_freed, \22FRE\22 }, { rxrpc_skb_got, \22GOT\22 }, { rxrpc_skb_lost, \22*L*\22 }, { rxrpc_skb_new, \22NEW\22 }, { rxrpc_skb_purged, \22PUR\22 }, { rxrpc_skb_received, \22RCV\22 }, { rxrpc_skb_rotated, \22ROT\22 }, { rxrpc_skb_seen, \22SEE\22 }, { rxrpc_skb_unshared, \22UNS\22 }, { rxrpc_skb_unshared_nomem, \22US0\22 }), REC->usage, REC->mod_count, REC->where\00", [115 x i8] zeroinitializer }, align 32
@event_rxrpc_skb = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_skb, %union.anon.183 { ptr @__tracepoint_rxrpc_skb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_skb }, ptr @print_fmt_rxrpc_skb, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_skb = internal global ptr @event_rxrpc_skb, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_packet = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.234, %union.anon.181 { %struct.anon.182 { ptr @.str.235, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_packet = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_packet, ptr @perf_trace_rxrpc_rx_packet, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_packet, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_packet, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_packet, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_packet = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_packet, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_packet = internal global { [488 x i8], [120 x i8] } { [488 x i8] c"\22%08x:%08x:%08x:%04x %08x %08x %02x %02x %s\22, REC->hdr.epoch, REC->hdr.cid, REC->hdr.callNumber, REC->hdr.serviceId, REC->hdr.serial, REC->hdr.seq, REC->hdr.type, REC->hdr.flags, REC->hdr.type <= 15 ? __print_symbolic(REC->hdr.type, { 0, \22?00\22 }, { 1, \22DATA\22 }, { 2, \22ACK\22 }, { 3, \22BUSY\22 }, { 4, \22ABORT\22 }, { 5, \22ACKALL\22 }, { 6, \22CHALL\22 }, { 7, \22RESP\22 }, { 8, \22DEBUG\22 }, { 9, \22?09\22 }, { 10, \22?10\22 }, { 11, \22?11\22 }, { 12, \22?12\22 }, { 13, \22VERSION\22 }, { 14, \22?14\22 }, { 15, \22?15\22 }) : \22?UNK\22\00", [120 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_packet = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_packet, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_packet }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_packet }, ptr @print_fmt_rxrpc_rx_packet, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_packet = internal global ptr @event_rxrpc_rx_packet, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_done = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.254, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.255, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_done = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_done, ptr @perf_trace_rxrpc_rx_done, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_done, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_done = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_done, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_done = internal global { [42 x i8], [54 x i8] } { [42 x i8] c"\22r=%d a=%d\22, REC->result, REC->abort_code\00", [54 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_done, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_done }, ptr @print_fmt_rxrpc_rx_done, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_done = internal global ptr @event_rxrpc_rx_done, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_abort = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.257, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.258, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.260, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.262, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.255, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.263, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_abort = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_abort, ptr @perf_trace_rxrpc_abort, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_abort, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_abort, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_abort, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_abort = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_abort, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_abort = internal global { [124 x i8], [36 x i8] } { [124 x i8] c"\22c=%08x %08x:%08x s=%u a=%d e=%d %s\22, REC->call_nr, REC->cid, REC->call_id, REC->seq, REC->abort_code, REC->error, REC->why\00", [36 x i8] zeroinitializer }, align 32
@event_rxrpc_abort = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_abort, %union.anon.183 { ptr @__tracepoint_rxrpc_abort }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_abort }, ptr @print_fmt_rxrpc_abort, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_abort = internal global ptr @event_rxrpc_abort, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_call_complete = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.265, %union.anon.181 { %struct.anon.182 { ptr @.str.266, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.263, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.255, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_call_complete = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_call_complete, ptr @perf_trace_rxrpc_call_complete, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_call_complete, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_call_complete, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_call_complete, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_call_complete = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_call_complete, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_call_complete = internal global { [310 x i8], [74 x i8] } { [310 x i8] c"\22c=%08x %s r=%d ac=%d\22, REC->call, __print_symbolic(REC->compl, { RXRPC_CALL_SUCCEEDED, \22Succeeded\22 }, { RXRPC_CALL_REMOTELY_ABORTED, \22RemoteAbort\22 }, { RXRPC_CALL_LOCALLY_ABORTED, \22LocalAbort\22 }, { RXRPC_CALL_LOCAL_ERROR, \22LocalError\22 }, { RXRPC_CALL_NETWORK_ERROR, \22NetError\22 }), REC->error, REC->abort_code\00", [74 x i8] zeroinitializer }, align 32
@event_rxrpc_call_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_call_complete, %union.anon.183 { ptr @__tracepoint_rxrpc_call_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_call_complete }, ptr @print_fmt_rxrpc_call_complete, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_call_complete = internal global ptr @event_rxrpc_call_complete, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_transmit = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.273, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.274, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.275, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.276, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rxrpc_transmit = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_transmit, ptr @perf_trace_rxrpc_transmit, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_transmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_transmit, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_transmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_transmit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_transmit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_transmit = internal global { [383 x i8], [65 x i8] } { [383 x i8] c"\22c=%08x %s f=%08x n=%u/%u\22, REC->call, __print_symbolic(REC->why, { rxrpc_transmit_await_reply, \22AWR\22 }, { rxrpc_transmit_end, \22END\22 }, { rxrpc_transmit_queue, \22QUE\22 }, { rxrpc_transmit_queue_last, \22QLS\22 }, { rxrpc_transmit_rotate, \22ROT\22 }, { rxrpc_transmit_rotate_last, \22RLS\22 }, { rxrpc_transmit_wait, \22WAI\22 }), REC->tx_hard_ack + 1, REC->tx_top - REC->tx_hard_ack, REC->tx_winsize\00", [65 x i8] zeroinitializer }, align 32
@event_rxrpc_transmit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_transmit, %union.anon.183 { ptr @__tracepoint_rxrpc_transmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_transmit }, ptr @print_fmt_rxrpc_transmit, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_transmit = internal global ptr @event_rxrpc_transmit, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_data = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.262, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.223, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.284, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_data = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_data, ptr @perf_trace_rxrpc_rx_data, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_data, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_data, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_data, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_data = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_data, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_data = internal global { [98 x i8], [62 x i8] } { [98 x i8] c"\22c=%08x DATA %08x q=%08x fl=%02x a=%02x\22, REC->call, REC->serial, REC->seq, REC->flags, REC->anno\00", [62 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_data = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_data, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_data }, ptr @print_fmt_rxrpc_rx_data, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_data = internal global ptr @event_rxrpc_rx_data, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_ack = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.286, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.287, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.288, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.289, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.290, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_ack = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_ack, ptr @perf_trace_rxrpc_rx_ack, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_ack, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_ack, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_ack, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_ack = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_ack, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_ack = internal global { [306 x i8], [78 x i8] } { [306 x i8] c"\22c=%08x %08x %s r=%08x f=%08x p=%08x n=%u\22, REC->call, REC->serial, __print_symbolic(REC->reason, { 0, \22-0-\22 }, { 1, \22REQ\22 }, { 2, \22DUP\22 }, { 3, \22OOS\22 }, { 4, \22WIN\22 }, { 5, \22MEM\22 }, { 6, \22PNG\22 }, { 7, \22PNR\22 }, { 8, \22DLY\22 }, { 9, \22IDL\22 }, { 10, \22-?-\22 }), REC->ack_serial, REC->first, REC->prev, REC->n_acks\00", [78 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_ack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_ack, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_ack }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_ack }, ptr @print_fmt_rxrpc_rx_ack, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_ack = internal global ptr @event_rxrpc_rx_ack, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_abort = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.255, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_abort = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_abort, ptr @perf_trace_rxrpc_rx_abort, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_abort, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_abort, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_abort, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_abort = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_abort, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_abort = internal global { [67 x i8], [61 x i8] } { [67 x i8] c"\22c=%08x ABORT %08x ac=%d\22, REC->call, REC->serial, REC->abort_code\00", [61 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_abort = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_abort, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_abort }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_abort }, ptr @print_fmt_rxrpc_rx_abort, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_abort = internal global ptr @event_rxrpc_rx_abort, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_rwind_change = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.304, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.305, %union.anon.181 { %struct.anon.182 { ptr @.str.306, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_rwind_change = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_rwind_change, ptr @perf_trace_rxrpc_rx_rwind_change, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_rwind_change, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_rwind_change, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_rwind_change, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_rwind_change = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_rwind_change, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_rwind_change = internal global { [84 x i8], [44 x i8] } { [84 x i8] c"\22c=%08x %08x rw=%u%s\22, REC->call, REC->serial, REC->rwind, REC->wake ? \22 wake\22 : \22\22\00", [44 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_rwind_change = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_rwind_change, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_rwind_change }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_rwind_change }, ptr @print_fmt_rxrpc_rx_rwind_change, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_rwind_change = internal global ptr @event_rxrpc_rx_rwind_change, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_tx_packet = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.310, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.311, %union.anon.181 { %struct.anon.182 { ptr @.str.312, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_tx_packet = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_tx_packet, ptr @perf_trace_rxrpc_tx_packet, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_tx_packet, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_tx_packet, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_tx_packet, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_tx_packet = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_tx_packet, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_tx_packet = internal global { [1195 x i8], [309 x i8] } { [1195 x i8] c"\22c=%08x %08x:%08x:%08x:%04x %08x %08x %02x %02x %s %s\22, REC->call, (( __u32)(__be32)(REC->whdr.epoch)), (( __u32)(__be32)(REC->whdr.cid)), (( __u32)(__be32)(REC->whdr.callNumber)), (( __u16)(__be16)(REC->whdr.serviceId)), (( __u32)(__be32)(REC->whdr.serial)), (( __u32)(__be32)(REC->whdr.seq)), REC->whdr.type, REC->whdr.flags, REC->whdr.type <= 15 ? __print_symbolic(REC->whdr.type, { 0, \22?00\22 }, { 1, \22DATA\22 }, { 2, \22ACK\22 }, { 3, \22BUSY\22 }, { 4, \22ABORT\22 }, { 5, \22ACKALL\22 }, { 6, \22CHALL\22 }, { 7, \22RESP\22 }, { 8, \22DEBUG\22 }, { 9, \22?09\22 }, { 10, \22?10\22 }, { 11, \22?11\22 }, { 12, \22?12\22 }, { 13, \22VERSION\22 }, { 14, \22?14\22 }, { 15, \22?15\22 }) : \22?UNK\22, __print_symbolic(REC->where, { rxrpc_tx_point_call_abort, \22CallAbort\22 }, { rxrpc_tx_point_call_ack, \22CallAck\22 }, { rxrpc_tx_point_call_data_frag, \22CallDataFrag\22 }, { rxrpc_tx_point_call_data_nofrag, \22CallDataNofrag\22 }, { rxrpc_tx_point_call_final_resend, \22CallFinalResend\22 }, { rxrpc_tx_point_conn_abort, \22ConnAbort\22 }, { rxrpc_tx_point_reject, \22Reject\22 }, { rxrpc_tx_point_rxkad_challenge, \22RxkadChall\22 }, { rxrpc_tx_point_rxkad_response, \22RxkadResp\22 }, { rxrpc_tx_point_version_keepalive, \22VerKeepalive\22 }, { rxrpc_tx_point_version_reply, \22VerReply\22 })\00", [309 x i8] zeroinitializer }, align 32
@event_rxrpc_tx_packet = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_tx_packet, %union.anon.183 { ptr @__tracepoint_rxrpc_tx_packet }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_tx_packet }, ptr @print_fmt_rxrpc_tx_packet, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_tx_packet = internal global ptr @event_rxrpc_tx_packet, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_tx_data = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.262, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.260, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.223, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.305, %union.anon.181 { %struct.anon.182 { ptr @.str.326, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.305, %union.anon.181 { %struct.anon.182 { ptr @.str.327, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_tx_data = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_tx_data, ptr @perf_trace_rxrpc_tx_data, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_tx_data, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_tx_data, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_tx_data, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_tx_data = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_tx_data, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_tx_data = internal global { [180 x i8], [44 x i8] } { [180 x i8] c"\22c=%08x DATA %08x:%08x %08x q=%08x fl=%02x%s%s\22, REC->call, REC->cid, REC->call_id, REC->serial, REC->seq, REC->flags, REC->retrans ? \22 *RETRANS*\22 : \22\22, REC->lose ? \22 *LOSE*\22 : \22\22\00", [44 x i8] zeroinitializer }, align 32
@event_rxrpc_tx_data = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_tx_data, %union.anon.183 { ptr @__tracepoint_rxrpc_tx_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_tx_data }, ptr @print_fmt_rxrpc_tx_data, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_tx_data = internal global ptr @event_rxrpc_tx_data, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_tx_ack = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.331, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.286, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.289, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.290, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_tx_ack = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_tx_ack, ptr @perf_trace_rxrpc_tx_ack, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_tx_ack, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_tx_ack, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_tx_ack, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_tx_ack = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_tx_ack, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_tx_ack = internal global { [298 x i8], [86 x i8] } { [298 x i8] c"\22 c=%08x ACK  %08x %s f=%08x r=%08x n=%u\22, REC->call, REC->serial, __print_symbolic(REC->reason, { 0, \22-0-\22 }, { 1, \22REQ\22 }, { 2, \22DUP\22 }, { 3, \22OOS\22 }, { 4, \22WIN\22 }, { 5, \22MEM\22 }, { 6, \22PNG\22 }, { 7, \22PNR\22 }, { 8, \22DLY\22 }, { 9, \22IDL\22 }, { 10, \22-?-\22 }), REC->ack_first, REC->ack_serial, REC->n_acks\00", [86 x i8] zeroinitializer }, align 32
@event_rxrpc_tx_ack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_tx_ack, %union.anon.183 { ptr @__tracepoint_rxrpc_tx_ack }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_tx_ack }, ptr @print_fmt_rxrpc_tx_ack, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_tx_ack = internal global ptr @event_rxrpc_tx_ack, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_receive = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.333, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.262, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.334, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.335, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_receive = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_receive, ptr @perf_trace_rxrpc_receive, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_receive, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_receive, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_receive, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_receive = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_receive, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_receive = internal global { [324 x i8], [92 x i8] } { [324 x i8] c"\22c=%08x %s r=%08x q=%08x w=%08x-%08x\22, REC->call, __print_symbolic(REC->why, { rxrpc_receive_end, \22END\22 }, { rxrpc_receive_front, \22FRN\22 }, { rxrpc_receive_incoming, \22INC\22 }, { rxrpc_receive_queue, \22QUE\22 }, { rxrpc_receive_queue_last, \22QLS\22 }, { rxrpc_receive_rotate, \22ROT\22 }), REC->serial, REC->seq, REC->hard_ack, REC->top\00", [92 x i8] zeroinitializer }, align 32
@event_rxrpc_receive = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_receive, %union.anon.183 { ptr @__tracepoint_rxrpc_receive }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_receive }, ptr @print_fmt_rxrpc_receive, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_receive = internal global ptr @event_rxrpc_receive, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_recvmsg = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.339, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.262, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.340, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.341, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.342, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_recvmsg = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_recvmsg, ptr @perf_trace_rxrpc_recvmsg, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_recvmsg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_recvmsg, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_recvmsg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_recvmsg = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_recvmsg, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_recvmsg = internal global { [532 x i8], [140 x i8] } { [532 x i8] c"\22c=%08x %s q=%08x o=%u l=%u ret=%d\22, REC->call, __print_symbolic(REC->why, { rxrpc_recvmsg_cont, \22CONT\22 }, { rxrpc_recvmsg_data_return, \22DATA\22 }, { rxrpc_recvmsg_dequeue, \22DEQU\22 }, { rxrpc_recvmsg_enter, \22ENTR\22 }, { rxrpc_recvmsg_full, \22FULL\22 }, { rxrpc_recvmsg_hole, \22HOLE\22 }, { rxrpc_recvmsg_next, \22NEXT\22 }, { rxrpc_recvmsg_requeue, \22REQU\22 }, { rxrpc_recvmsg_return, \22RETN\22 }, { rxrpc_recvmsg_terminal, \22TERM\22 }, { rxrpc_recvmsg_to_be_accepted, \22TBAC\22 }, { rxrpc_recvmsg_wait, \22WAIT\22 }), REC->seq, REC->offset, REC->len, REC->ret\00", [140 x i8] zeroinitializer }, align 32
@event_rxrpc_recvmsg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_recvmsg, %union.anon.183 { ptr @__tracepoint_rxrpc_recvmsg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_recvmsg }, ptr @print_fmt_rxrpc_recvmsg, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_recvmsg = internal global ptr @event_rxrpc_recvmsg, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rtt_tx = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.355, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.356, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.357, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rtt_tx = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rtt_tx, ptr @perf_trace_rxrpc_rtt_tx, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rtt_tx, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rtt_tx, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rtt_tx, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rtt_tx = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rtt_tx, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rtt_tx = internal global { [222 x i8], [34 x i8] } { [222 x i8] c"\22c=%08x [%d] %s sr=%08x\22, REC->call, REC->slot, __print_symbolic(REC->why, { rxrpc_rtt_tx_cancel, \22CNCE\22 }, { rxrpc_rtt_tx_data, \22DATA\22 }, { rxrpc_rtt_tx_no_slot, \22FULL\22 }, { rxrpc_rtt_tx_ping, \22PING\22 }), REC->send_serial\00", [34 x i8] zeroinitializer }, align 32
@event_rxrpc_rtt_tx = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rtt_tx, %union.anon.183 { ptr @__tracepoint_rxrpc_rtt_tx }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rtt_tx }, ptr @print_fmt_rxrpc_rtt_tx, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rtt_tx = internal global ptr @event_rxrpc_rtt_tx, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rtt_rx = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.361, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.356, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.357, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.362, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.363, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.364, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rtt_rx = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rtt_rx, ptr @perf_trace_rxrpc_rtt_rx, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rtt_rx, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rtt_rx, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rtt_rx, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rtt_rx = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rtt_rx, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rtt_rx = internal global { [332 x i8], [84 x i8] } { [332 x i8] c"\22c=%08x [%d] %s sr=%08x rr=%08x rtt=%u rto=%u\22, REC->call, REC->slot, __print_symbolic(REC->why, { rxrpc_rtt_rx_cancel, \22CNCL\22 }, { rxrpc_rtt_rx_obsolete, \22OBSL\22 }, { rxrpc_rtt_rx_lost, \22LOST\22 }, { rxrpc_rtt_rx_ping_response, \22PONG\22 }, { rxrpc_rtt_rx_requested_ack, \22RACK\22 }), REC->send_serial, REC->resp_serial, REC->rtt, REC->rto\00", [84 x i8] zeroinitializer }, align 32
@event_rxrpc_rtt_rx = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rtt_rx, %union.anon.183 { ptr @__tracepoint_rxrpc_rtt_rx }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rtt_rx }, ptr @print_fmt_rxrpc_rtt_rx, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rtt_rx = internal global ptr @event_rxrpc_rtt_rx, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_timer = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.371, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.373, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.374, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.375, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.376, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.377, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.378, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.379, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.380, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.372, %union.anon.181 { %struct.anon.182 { ptr @.str.381, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_rxrpc_timer = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_timer, ptr @perf_trace_rxrpc_timer, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_timer, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_timer, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_timer, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_timer = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_timer, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_timer = internal global { [1157 x i8], [315 x i8] } { [1157 x i8] c"\22c=%08x %s a=%ld la=%ld r=%ld xr=%ld xq=%ld xt=%ld t=%ld\22, REC->call, __print_symbolic(REC->why, { rxrpc_timer_begin, \22Begin \22 }, { rxrpc_timer_expired, \22*EXPR*\22 }, { rxrpc_timer_exp_ack, \22ExpAck\22 }, { rxrpc_timer_exp_hard, \22ExpHrd\22 }, { rxrpc_timer_exp_idle, \22ExpIdl\22 }, { rxrpc_timer_exp_keepalive, \22ExpKA \22 }, { rxrpc_timer_exp_lost_ack, \22ExpLoA\22 }, { rxrpc_timer_exp_normal, \22ExpNml\22 }, { rxrpc_timer_exp_ping, \22ExpPng\22 }, { rxrpc_timer_exp_resend, \22ExpRsn\22 }, { rxrpc_timer_init_for_reply, \22IniRpl\22 }, { rxrpc_timer_init_for_send_reply, \22SndRpl\22 }, { rxrpc_timer_restart, \22Restrt\22 }, { rxrpc_timer_set_for_ack, \22SetAck\22 }, { rxrpc_timer_set_for_hard, \22SetHrd\22 }, { rxrpc_timer_set_for_idle, \22SetIdl\22 }, { rxrpc_timer_set_for_keepalive, \22KeepAl\22 }, { rxrpc_timer_set_for_lost_ack, \22SetLoA\22 }, { rxrpc_timer_set_for_normal, \22SetNml\22 }, { rxrpc_timer_set_for_ping, \22SetPng\22 }, { rxrpc_timer_set_for_resend, \22SetRTx\22 }, { rxrpc_timer_set_for_send, \22SetSnd\22 }), REC->ack_at - REC->now, REC->ack_lost_at - REC->now, REC->resend_at - REC->now, REC->expect_rx_by - REC->now, REC->expect_req_by - REC->now, REC->expect_term_by - REC->now, REC->timer - REC->now\00", [315 x i8] zeroinitializer }, align 32
@event_rxrpc_timer = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_timer, %union.anon.183 { ptr @__tracepoint_rxrpc_timer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_timer }, ptr @print_fmt_rxrpc_timer, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_timer = internal global ptr @event_rxrpc_timer, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_lose = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.234, %union.anon.181 { %struct.anon.182 { ptr @.str.235, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_lose = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_lose, ptr @perf_trace_rxrpc_rx_lose, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_lose, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_lose, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_lose, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_lose = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_lose, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_lose = internal global { [495 x i8], [113 x i8] } { [495 x i8] c"\22%08x:%08x:%08x:%04x %08x %08x %02x %02x %s *LOSE*\22, REC->hdr.epoch, REC->hdr.cid, REC->hdr.callNumber, REC->hdr.serviceId, REC->hdr.serial, REC->hdr.seq, REC->hdr.type, REC->hdr.flags, REC->hdr.type <= 15 ? __print_symbolic(REC->hdr.type, { 0, \22?00\22 }, { 1, \22DATA\22 }, { 2, \22ACK\22 }, { 3, \22BUSY\22 }, { 4, \22ABORT\22 }, { 5, \22ACKALL\22 }, { 6, \22CHALL\22 }, { 7, \22RESP\22 }, { 8, \22DEBUG\22 }, { 9, \22?09\22 }, { 10, \22?10\22 }, { 11, \22?11\22 }, { 12, \22?12\22 }, { 13, \22VERSION\22 }, { 14, \22?14\22 }, { 15, \22?15\22 }) : \22?UNK\22\00", [113 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_lose = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_lose, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_lose }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_lose }, ptr @print_fmt_rxrpc_rx_lose, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_lose = internal global ptr @event_rxrpc_rx_lose, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_propose_ack = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.406, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.407, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.305, %union.anon.181 { %struct.anon.182 { ptr @.str.408, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.305, %union.anon.181 { %struct.anon.182 { ptr @.str.409, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.410, %union.anon.181 { %struct.anon.182 { ptr @.str.411, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_propose_ack = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_propose_ack, ptr @perf_trace_rxrpc_propose_ack, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_propose_ack, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_propose_ack, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_propose_ack, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_propose_ack = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_propose_ack, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_propose_ack = internal global { [1097 x i8], [279 x i8] } { [1097 x i8] c"\22c=%08x %s %s r=%08x i=%u b=%u%s\22, REC->call, __print_symbolic(REC->why, { rxrpc_propose_ack_client_tx_end, \22ClTxEnd\22 }, { rxrpc_propose_ack_input_data, \22DataIn \22 }, { rxrpc_propose_ack_ping_for_check_life, \22ChkLife\22 }, { rxrpc_propose_ack_ping_for_keepalive, \22KeepAlv\22 }, { rxrpc_propose_ack_ping_for_lost_ack, \22LostAck\22 }, { rxrpc_propose_ack_ping_for_lost_reply, \22LostRpl\22 }, { rxrpc_propose_ack_ping_for_params, \22Params \22 }, { rxrpc_propose_ack_processing_op, \22ProcOp \22 }, { rxrpc_propose_ack_respond_to_ack, \22Rsp2Ack\22 }, { rxrpc_propose_ack_respond_to_ping, \22Rsp2Png\22 }, { rxrpc_propose_ack_retry_tx, \22RetryTx\22 }, { rxrpc_propose_ack_rotate_rx, \22RxAck  \22 }, { rxrpc_propose_ack_terminal_ack, \22ClTerm \22 }), __print_symbolic(REC->ack_reason, { 0, \22-0-\22 }, { 1, \22REQ\22 }, { 2, \22DUP\22 }, { 3, \22OOS\22 }, { 4, \22WIN\22 }, { 5, \22MEM\22 }, { 6, \22PNG\22 }, { 7, \22PNR\22 }, { 8, \22DLY\22 }, { 9, \22IDL\22 }, { 10, \22-?-\22 }), REC->serial, REC->immediate, REC->background, __print_symbolic(REC->outcome, { rxrpc_propose_ack_subsume, \22 Subsume\22 }, { rxrpc_propose_ack_update, \22 Update\22 }, { rxrpc_propose_ack_use, \22 New\22 })\00", [279 x i8] zeroinitializer }, align 32
@event_rxrpc_propose_ack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_propose_ack, %union.anon.183 { ptr @__tracepoint_rxrpc_propose_ack }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_propose_ack }, ptr @print_fmt_rxrpc_propose_ack, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_propose_ack = internal global ptr @event_rxrpc_propose_ack, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_retransmit = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.262, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.222, %union.anon.181 { %struct.anon.182 { ptr @.str.431, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.432, %union.anon.181 { %struct.anon.182 { ptr @.str.433, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_retransmit = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_retransmit, ptr @perf_trace_rxrpc_retransmit, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_retransmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_retransmit, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_retransmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_retransmit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_retransmit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_retransmit = internal global { [80 x i8], [48 x i8] } { [80 x i8] c"\22c=%08x q=%x a=%02x xp=%lld\22, REC->call, REC->seq, REC->annotation, REC->expiry\00", [48 x i8] zeroinitializer }, align 32
@event_rxrpc_retransmit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_retransmit, %union.anon.183 { ptr @__tracepoint_rxrpc_retransmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_retransmit }, ptr @print_fmt_rxrpc_retransmit, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_retransmit = internal global ptr @event_rxrpc_retransmit, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_congest = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.435, %union.anon.181 { %struct.anon.182 { ptr @.str.436, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.334, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.335, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.437, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.286, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.438, %union.anon.181 { %struct.anon.182 { ptr @.str.439, i32 16, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_congest = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_congest, ptr @perf_trace_rxrpc_congest, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_congest, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_congest, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_congest, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_congest = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_congest, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_congest = internal global { [1194 x i8], [310 x i8] } { [1194 x i8] c"\22c=%08x r=%08x %s q=%08x %s cw=%u ss=%u nr=%u,%u nw=%u,%u r=%u b=%u u=%u d=%u l=%x%s%s%s\22, REC->call, REC->ack_serial, __print_symbolic(REC->sum.ack_reason, { 0, \22-0-\22 }, { 1, \22REQ\22 }, { 2, \22DUP\22 }, { 3, \22OOS\22 }, { 4, \22WIN\22 }, { 5, \22MEM\22 }, { 6, \22PNG\22 }, { 7, \22PNR\22 }, { 8, \22DLY\22 }, { 9, \22IDL\22 }, { 10, \22-?-\22 }), REC->hard_ack, __print_symbolic(REC->sum.mode, { RXRPC_CALL_CONGEST_AVOIDANCE, \22CongAvoid\22 }, { RXRPC_CALL_FAST_RETRANSMIT, \22FastReTx \22 }, { RXRPC_CALL_PACKET_LOSS, \22PktLoss  \22 }, { RXRPC_CALL_SLOW_START, \22SlowStart\22 }), REC->sum.cwnd, REC->sum.ssthresh, REC->sum.nr_acks, REC->sum.nr_nacks, REC->sum.nr_new_acks, REC->sum.nr_new_nacks, REC->sum.nr_rot_new_acks, REC->top - REC->hard_ack, REC->sum.cumulative_acks, REC->sum.dup_acks, REC->lowest_nak, REC->sum.new_low_nack ? \22!\22 : \22\22, __print_symbolic(REC->change, { rxrpc_cong_begin_retransmission, \22 Retrans\22 }, { rxrpc_cong_cleared_nacks, \22 Cleared\22 }, { rxrpc_cong_new_low_nack, \22 NewLowN\22 }, { rxrpc_cong_no_change, \22 -\22 }, { rxrpc_cong_progress, \22 Progres\22 }, { rxrpc_cong_retransmit_again, \22 ReTxAgn\22 }, { rxrpc_cong_rtt_window_end, \22 RttWinE\22 }, { rxrpc_cong_saw_nack, \22 SawNack\22 }), REC->sum.retrans_timeo ? \22 rTxTo\22 : \22\22\00", [310 x i8] zeroinitializer }, align 32
@event_rxrpc_congest = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_congest, %union.anon.183 { ptr @__tracepoint_rxrpc_congest }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_congest }, ptr @print_fmt_rxrpc_congest, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_congest = internal global ptr @event_rxrpc_congest, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_disconnect_call = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.255, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_disconnect_call = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_disconnect_call, ptr @perf_trace_rxrpc_disconnect_call, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_disconnect_call, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_disconnect_call, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_disconnect_call, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_disconnect_call = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_disconnect_call, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_disconnect_call = internal global { [45 x i8], [51 x i8] } { [45 x i8] c"\22c=%08x ab=%08x\22, REC->call, REC->abort_code\00", [51 x i8] zeroinitializer }, align 32
@event_rxrpc_disconnect_call = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_disconnect_call, %union.anon.183 { ptr @__tracepoint_rxrpc_disconnect_call }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_disconnect_call }, ptr @print_fmt_rxrpc_disconnect_call, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_disconnect_call = internal global ptr @event_rxrpc_disconnect_call, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_improper_term = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.255, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_improper_term = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_improper_term, ptr @perf_trace_rxrpc_improper_term, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_improper_term, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_improper_term, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_improper_term, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_improper_term = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_improper_term, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_improper_term = internal global { [45 x i8], [51 x i8] } { [45 x i8] c"\22c=%08x ab=%08x\22, REC->call, REC->abort_code\00", [51 x i8] zeroinitializer }, align 32
@event_rxrpc_improper_term = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_improper_term, %union.anon.183 { ptr @__tracepoint_rxrpc_improper_term }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_improper_term }, ptr @print_fmt_rxrpc_improper_term, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_improper_term = internal global ptr @event_rxrpc_improper_term, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_eproto = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.458, %union.anon.181 { %struct.anon.182 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_eproto = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_eproto, ptr @perf_trace_rxrpc_rx_eproto, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_eproto, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_eproto, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_eproto, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_eproto = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_eproto, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_eproto = internal global { [58 x i8], [38 x i8] } { [58 x i8] c"\22c=%08x EPROTO %08x %s\22, REC->call, REC->serial, REC->why\00", [38 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_eproto = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_eproto, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_eproto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_eproto }, ptr @print_fmt_rxrpc_rx_eproto, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_eproto = internal global ptr @event_rxrpc_rx_eproto, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_connect_call = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.460, %union.anon.181 { %struct.anon.182 { ptr @.str.461, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.260, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_connect_call = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_connect_call, ptr @perf_trace_rxrpc_connect_call, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_connect_call, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_connect_call, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_connect_call, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_connect_call = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_connect_call, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_connect_call = internal global { [86 x i8], [42 x i8] } { [86 x i8] c"\22c=%08x u=%p %08x:%08x\22, REC->call, (void *)REC->user_call_ID, REC->cid, REC->call_id\00", [42 x i8] zeroinitializer }, align 32
@event_rxrpc_connect_call = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_connect_call, %union.anon.183 { ptr @__tracepoint_rxrpc_connect_call }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_connect_call }, ptr @print_fmt_rxrpc_connect_call, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_connect_call = internal global ptr @event_rxrpc_connect_call, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_resend = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.207, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.463, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.464, %union.anon.181 { %struct.anon.182 { ptr @.str.284, i32 64, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_resend = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_resend, ptr @perf_trace_rxrpc_resend, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_resend, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_resend, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_resend, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_resend = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_resend, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_resend = internal global { [55 x i8], [41 x i8] } { [55 x i8] c"\22c=%08x ix=%u a=%64phN\22, REC->call, REC->ix, REC->anno\00", [41 x i8] zeroinitializer }, align 32
@event_rxrpc_resend = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_resend, %union.anon.183 { ptr @__tracepoint_rxrpc_resend }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_resend }, ptr @print_fmt_rxrpc_resend, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_resend = internal global ptr @event_rxrpc_resend, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_icmp = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.179, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.466, %union.anon.181 { %struct.anon.182 { ptr @.str.467, i32 16, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.468, %union.anon.181 { %struct.anon.182 { ptr @.str.469, i32 36, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_icmp = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_icmp, ptr @perf_trace_rxrpc_rx_icmp, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_icmp, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_icmp, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_icmp, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_icmp = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_icmp, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_icmp = internal global { [182 x i8], [42 x i8] } { [182 x i8] c"\22P=%08x o=%u t=%u c=%u i=%u d=%u e=%d %pISp\22, REC->peer, REC->ee.ee_origin, REC->ee.ee_type, REC->ee.ee_code, REC->ee.ee_info, REC->ee.ee_data, REC->ee.ee_errno, &REC->srx.transport\00", [42 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_icmp = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_icmp, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_icmp }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_icmp }, ptr @print_fmt_rxrpc_rx_icmp, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_icmp = internal global ptr @event_rxrpc_rx_icmp, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_tx_fail = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.471, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.181 { %struct.anon.182 { ptr @.str.342, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.310, %union.anon.181 { %struct.anon.182 { ptr @.str.172, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rxrpc_tx_fail = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_tx_fail, ptr @perf_trace_rxrpc_tx_fail, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_tx_fail, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_tx_fail, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_tx_fail, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_tx_fail = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_tx_fail, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_tx_fail = internal global { [618 x i8], [150 x i8] } { [618 x i8] c"\22c=%08x r=%x ret=%d %s\22, REC->debug_id, REC->serial, REC->ret, __print_symbolic(REC->where, { rxrpc_tx_point_call_abort, \22CallAbort\22 }, { rxrpc_tx_point_call_ack, \22CallAck\22 }, { rxrpc_tx_point_call_data_frag, \22CallDataFrag\22 }, { rxrpc_tx_point_call_data_nofrag, \22CallDataNofrag\22 }, { rxrpc_tx_point_call_final_resend, \22CallFinalResend\22 }, { rxrpc_tx_point_conn_abort, \22ConnAbort\22 }, { rxrpc_tx_point_reject, \22Reject\22 }, { rxrpc_tx_point_rxkad_challenge, \22RxkadChall\22 }, { rxrpc_tx_point_rxkad_response, \22RxkadResp\22 }, { rxrpc_tx_point_version_keepalive, \22VerKeepalive\22 }, { rxrpc_tx_point_version_reply, \22VerReply\22 })\00", [150 x i8] zeroinitializer }, align 32
@event_rxrpc_tx_fail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_tx_fail, %union.anon.183 { ptr @__tracepoint_rxrpc_tx_fail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_tx_fail }, ptr @print_fmt_rxrpc_tx_fail, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_tx_fail = internal global ptr @event_rxrpc_tx_fail, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_call_reset = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.471, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.181 { %struct.anon.182 { ptr @.str.260, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.473, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.474, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.475, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.476, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rxrpc_call_reset = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_call_reset, ptr @perf_trace_rxrpc_call_reset, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_call_reset, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_call_reset, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_call_reset, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_call_reset = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_call_reset, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_call_reset = internal global { [148 x i8], [44 x i8] } { [148 x i8] c"\22c=%08x %08x:%08x r=%08x/%08x tx=%08x rx=%08x\22, REC->debug_id, REC->cid, REC->call_id, REC->call_serial, REC->conn_serial, REC->tx_seq, REC->rx_seq\00", [44 x i8] zeroinitializer }, align 32
@event_rxrpc_call_reset = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_call_reset, %union.anon.183 { ptr @__tracepoint_rxrpc_call_reset }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_call_reset }, ptr @print_fmt_rxrpc_call_reset, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_call_reset = internal global ptr @event_rxrpc_call_reset, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_notify_socket = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.471, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_notify_socket = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_notify_socket, ptr @perf_trace_rxrpc_notify_socket, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_notify_socket, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_notify_socket, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_notify_socket, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_notify_socket = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_notify_socket, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_notify_socket = internal global { [44 x i8], [52 x i8] } { [44 x i8] c"\22c=%08x r=%08x\22, REC->debug_id, REC->serial\00", [52 x i8] zeroinitializer }, align 32
@event_rxrpc_notify_socket = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_notify_socket, %union.anon.183 { ptr @__tracepoint_rxrpc_notify_socket }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_notify_socket }, ptr @print_fmt_rxrpc_notify_socket, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_notify_socket = internal global ptr @event_rxrpc_notify_socket, section "_ftrace_events", align 4
@trace_event_fields_rxrpc_rx_discard_ack = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.166, %union.anon.181 { %struct.anon.182 { ptr @.str.471, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.282, %union.anon.181 { %struct.anon.182 { ptr @.str.283, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.479, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.480, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.481, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.261, %union.anon.181 { %struct.anon.182 { ptr @.str.482, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rxrpc_rx_discard_ack = internal global %struct.trace_event_class { ptr @str__rxrpc__trace_system_name, ptr @trace_event_raw_event_rxrpc_rx_discard_ack, ptr @perf_trace_rxrpc_rx_discard_ack, ptr @trace_event_reg, ptr @trace_event_fields_rxrpc_rx_discard_ack, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rxrpc_rx_discard_ack, i64 24), ptr getelementptr (i8, ptr @event_class_rxrpc_rx_discard_ack, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rxrpc_rx_discard_ack = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rxrpc_rx_discard_ack, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rxrpc_rx_discard_ack = internal global { [143 x i8], [49 x i8] } { [143 x i8] c"\22c=%08x r=%08x %08x<%08x %08x<%08x\22, REC->debug_id, REC->serial, REC->first_soft_ack, REC->call_ackr_first, REC->prev_pkt, REC->call_ackr_prev\00", [49 x i8] zeroinitializer }, align 32
@event_rxrpc_rx_discard_ack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rxrpc_rx_discard_ack, %union.anon.183 { ptr @__tracepoint_rxrpc_rx_discard_ack }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rxrpc_rx_discard_ack }, ptr @print_fmt_rxrpc_rx_discard_ack, ptr null, %union.anon.184 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rxrpc_rx_discard_ack = internal global ptr @event_rxrpc_rx_discard_ack, section "_ftrace_events", align 4
@__bpf_trace_tp_map_rxrpc_local = internal global %union.anon.185 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_local, ptr @__bpf_trace_rxrpc_local, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_peer = internal global %union.anon.186 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_peer, ptr @__bpf_trace_rxrpc_peer, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_conn = internal global %union.anon.187 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_conn, ptr @__bpf_trace_rxrpc_conn, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_client = internal global %union.anon.188 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_client, ptr @__bpf_trace_rxrpc_client, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_call = internal global %union.anon.189 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_call, ptr @__bpf_trace_rxrpc_call, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_skb = internal global %union.anon.190 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_skb, ptr @__bpf_trace_rxrpc_skb, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_packet = internal global %union.anon.191 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_packet, ptr @__bpf_trace_rxrpc_rx_packet, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_done = internal global %union.anon.192 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_done, ptr @__bpf_trace_rxrpc_rx_done, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_abort = internal global %union.anon.193 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_abort, ptr @__bpf_trace_rxrpc_abort, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_call_complete = internal global %union.anon.194 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_call_complete, ptr @__bpf_trace_rxrpc_call_complete, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_transmit = internal global %union.anon.195 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_transmit, ptr @__bpf_trace_rxrpc_transmit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_data = internal global %union.anon.196 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_data, ptr @__bpf_trace_rxrpc_rx_data, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_ack = internal global %union.anon.197 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_ack, ptr @__bpf_trace_rxrpc_rx_ack, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_abort = internal global %union.anon.198 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_abort, ptr @__bpf_trace_rxrpc_rx_abort, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_rwind_change = internal global %union.anon.199 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_rwind_change, ptr @__bpf_trace_rxrpc_rx_rwind_change, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_tx_packet = internal global %union.anon.200 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_tx_packet, ptr @__bpf_trace_rxrpc_tx_packet, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_tx_data = internal global %union.anon.201 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_tx_data, ptr @__bpf_trace_rxrpc_tx_data, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_tx_ack = internal global %union.anon.202 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_tx_ack, ptr @__bpf_trace_rxrpc_tx_ack, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_receive = internal global %union.anon.203 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_receive, ptr @__bpf_trace_rxrpc_receive, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_recvmsg = internal global %union.anon.204 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_recvmsg, ptr @__bpf_trace_rxrpc_recvmsg, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rtt_tx = internal global %union.anon.205 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rtt_tx, ptr @__bpf_trace_rxrpc_rtt_tx, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rtt_rx = internal global %union.anon.206 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rtt_rx, ptr @__bpf_trace_rxrpc_rtt_rx, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_timer = internal global %union.anon.207 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_timer, ptr @__bpf_trace_rxrpc_timer, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_lose = internal global %union.anon.208 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_lose, ptr @__bpf_trace_rxrpc_rx_lose, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_propose_ack = internal global %union.anon.209 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_propose_ack, ptr @__bpf_trace_rxrpc_propose_ack, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_retransmit = internal global %union.anon.210 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_retransmit, ptr @__bpf_trace_rxrpc_retransmit, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_congest = internal global %union.anon.211 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_congest, ptr @__bpf_trace_rxrpc_congest, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_disconnect_call = internal global %union.anon.212 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_disconnect_call, ptr @__bpf_trace_rxrpc_disconnect_call, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_improper_term = internal global %union.anon.213 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_improper_term, ptr @__bpf_trace_rxrpc_improper_term, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_eproto = internal global %union.anon.214 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_eproto, ptr @__bpf_trace_rxrpc_rx_eproto, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_connect_call = internal global %union.anon.215 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_connect_call, ptr @__bpf_trace_rxrpc_connect_call, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_resend = internal global %union.anon.216 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_resend, ptr @__bpf_trace_rxrpc_resend, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_icmp = internal global %union.anon.217 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_icmp, ptr @__bpf_trace_rxrpc_rx_icmp, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_tx_fail = internal global %union.anon.218 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_tx_fail, ptr @__bpf_trace_rxrpc_tx_fail, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_call_reset = internal global %union.anon.219 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_call_reset, ptr @__bpf_trace_rxrpc_call_reset, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_notify_socket = internal global %union.anon.220 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_notify_socket, ptr @__bpf_trace_rxrpc_notify_socket, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rxrpc_rx_discard_ack = internal global %union.anon.221 { %struct.bpf_raw_event_map { ptr @__tracepoint_rxrpc_rx_discard_ack, ptr @__bpf_trace_rxrpc_rx_discard_ack, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__UNIQUE_ID_description690 = internal constant [41 x i8] c"rxrpc.description=RxRPC network protocol\00", section ".modinfo", align 1
@__UNIQUE_ID_author691 = internal constant [27 x i8] c"rxrpc.author=Red Hat, Inc.\00", section ".modinfo", align 1
@__UNIQUE_ID_file692 = internal constant [27 x i8] c"rxrpc.file=net/rxrpc/rxrpc\00", section ".modinfo", align 1
@__UNIQUE_ID_license693 = internal constant [18 x i8] c"rxrpc.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_alias694 = internal constant [22 x i8] c"rxrpc.alias=net-pf-33\00", section ".modinfo", align 1
@__param_str_debug = internal constant [12 x i8] c"rxrpc.debug\00", align 1
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@rxrpc_debug = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_debug = internal constant %struct.kernel_param { ptr @__param_str_debug, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.122 { ptr @rxrpc_debug } }, section "__param", align 4
@__UNIQUE_ID_debugtype695 = internal constant [26 x i8] c"rxrpc.parmtype=debug:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_debug696 = internal constant [38 x i8] c"rxrpc.parm=debug:RxRPC debugging mask\00", section ".modinfo", align 1
@rxrpc_debug_id = dso_local global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@__kstrtab_rxrpc_debug_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_debug_id = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_debug_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_debug_id to i32), ptr @__kstrtab_rxrpc_debug_id, ptr @__kstrtabns_rxrpc_debug_id }, section "___ksymtab+rxrpc_debug_id", align 4
@rxrpc_kernel_begin_call._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.148, ptr @.str.149, i32 297, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"[%-6.6s] ==> %s(,,%x,%lx)\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"rxrpc_kernel_begin_call\00", [40 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"net/rxrpc/af_rxrpc.c\00", [43 x i8] zeroinitializer }, align 32
@rxrpc_kernel_begin_call._entry_ptr = internal global ptr @rxrpc_kernel_begin_call._entry, section ".printk_index", align 4
@rxrpc_kernel_begin_call._entry.150 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.148, ptr @.str.149, i32 331, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"[%-6.6s] <== %s() = %p\0A\00", [40 x i8] zeroinitializer }, align 32
@rxrpc_kernel_begin_call._entry_ptr.152 = internal global ptr @rxrpc_kernel_begin_call._entry.150, section ".printk_index", align 4
@__kstrtab_rxrpc_kernel_begin_call = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_kernel_begin_call = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_kernel_begin_call = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_kernel_begin_call to i32), ptr @__kstrtab_rxrpc_kernel_begin_call, ptr @__kstrtabns_rxrpc_kernel_begin_call }, section "___ksymtab+rxrpc_kernel_begin_call", align 4
@rxrpc_kernel_end_call._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.154, ptr @.str.149, i32 354, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"[%-6.6s] ==> %s(%d{%d})\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_kernel_end_call\00", [42 x i8] zeroinitializer }, align 32
@rxrpc_kernel_end_call._entry_ptr = internal global ptr @rxrpc_kernel_end_call._entry, section ".printk_index", align 4
@__kstrtab_rxrpc_kernel_end_call = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_kernel_end_call = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_kernel_end_call = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_kernel_end_call to i32), ptr @__kstrtab_rxrpc_kernel_end_call, ptr @__kstrtabns_rxrpc_kernel_end_call }, section "___ksymtab+rxrpc_kernel_end_call", align 4
@__kstrtab_rxrpc_kernel_check_life = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_kernel_check_life = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_kernel_check_life = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_kernel_check_life to i32), ptr @__kstrtab_rxrpc_kernel_check_life, ptr @__kstrtabns_rxrpc_kernel_check_life }, section "___ksymtab+rxrpc_kernel_check_life", align 4
@__kstrtab_rxrpc_kernel_get_epoch = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_kernel_get_epoch = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_kernel_get_epoch = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_kernel_get_epoch to i32), ptr @__kstrtab_rxrpc_kernel_get_epoch, ptr @__kstrtabns_rxrpc_kernel_get_epoch }, section "___ksymtab+rxrpc_kernel_get_epoch", align 4
@__kstrtab_rxrpc_kernel_new_call_notification = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_kernel_new_call_notification = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_kernel_new_call_notification = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_kernel_new_call_notification to i32), ptr @__kstrtab_rxrpc_kernel_new_call_notification, ptr @__kstrtabns_rxrpc_kernel_new_call_notification }, section "___ksymtab+rxrpc_kernel_new_call_notification", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__kstrtab_rxrpc_kernel_set_max_life = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_kernel_set_max_life = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_kernel_set_max_life = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_kernel_set_max_life to i32), ptr @__kstrtab_rxrpc_kernel_set_max_life, ptr @__kstrtabns_rxrpc_kernel_set_max_life }, section "___ksymtab+rxrpc_kernel_set_max_life", align 4
@__kstrtab_rxrpc_sock_set_min_security_level = external dso_local constant [0 x i8], align 1
@__kstrtabns_rxrpc_sock_set_min_security_level = external dso_local constant [0 x i8], align 1
@__ksymtab_rxrpc_sock_set_min_security_level = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rxrpc_sock_set_min_security_level to i32), ptr @__kstrtab_rxrpc_sock_set_min_security_level, ptr @__kstrtabns_rxrpc_sock_set_min_security_level }, section "___ksymtab+rxrpc_sock_set_min_security_level", align 4
@af_rxrpc_exit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @.str.156, ptr @.str.149, i32 1055, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"[%-6.6s] ==> %s()\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"af_rxrpc_exit\00", [18 x i8] zeroinitializer }, align 32
@af_rxrpc_exit._entry_ptr = internal global ptr @af_rxrpc_exit._entry, section ".printk_index", align 4
@key_type_rxrpc_s = external dso_local global %struct.key_type, align 4
@key_type_rxrpc = external dso_local global %struct.key_type, align 4
@rxrpc_proto = internal global { %struct.proto, [36 x i8] } { %struct.proto { ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 28, i8 0, ptr null, i32 1240, i32 0, i32 0, i32 0, ptr null, ptr null, ptr null, %union.anon.71 zeroinitializer, ptr null, [32 x i8] c"RXRPC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.list_head zeroinitializer, ptr null }, [36 x i8] zeroinitializer }, align 32
@rxrpc_net_ops = external dso_local global %struct.pernet_operations, align 4
@rxrpc_n_tx_skbs = dso_local global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@af_rxrpc_exit._entry.157 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.158, ptr @.str.156, ptr @.str.149, i32 1062, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013rxrpc: Assertion failed - %lu(0x%lx) %s %lu(0x%lx) is false\0A\00", [33 x i8] zeroinitializer }, align 32
@af_rxrpc_exit._entry_ptr.159 = internal global ptr @af_rxrpc_exit._entry.157, section ".printk_index", align 4
@.str.160 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"==\00", [29 x i8] zeroinitializer }, align 32
@rxrpc_n_rx_skbs = dso_local global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@af_rxrpc_exit._entry.161 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.158, ptr @.str.156, ptr @.str.149, i32 1063, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@af_rxrpc_exit._entry_ptr.162 = internal global ptr @af_rxrpc_exit._entry.161, section ".printk_index", align 4
@rxrpc_workqueue = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@rxrpc_call_jar = external dso_local local_unnamed_addr global ptr, align 4
@af_rxrpc_exit._entry.163 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.156, ptr @.str.149, i32 1074, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"[%-6.6s] <== %s()\0A\00", [45 x i8] zeroinitializer }, align 32
@af_rxrpc_exit._entry_ptr.165 = internal global ptr @af_rxrpc_exit._entry.163, section ".printk_index", align 4
@__initcall__kmod_rxrpc__712_1077_af_rxrpc_init6 = internal global ptr @af_rxrpc_init, section ".initcall6.init", align 4
@__exitcall_af_rxrpc_exit = internal global ptr @af_rxrpc_exit, section ".exitcall.exit", align 4
@.str.166 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"local\00", [26 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"op\00", [29 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"usage\00", [26 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const void *\00", [19 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"where\00", [26 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"L=%08x %s u=%d sp=%pSR\0A\00", [40 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_local.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.174 }, %struct.trace_print_flags { i32 1, ptr @.str.175 }, %struct.trace_print_flags { i32 2, ptr @.str.176 }, %struct.trace_print_flags { i32 3, ptr @.str.177 }, %struct.trace_print_flags { i32 4, ptr @.str.178 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"GOT\00", [28 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NEW\00", [28 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PRO\00", [28 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PUT\00", [28 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"QUE\00", [28 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"peer\00", [27 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"P=%08x %s u=%d sp=%pSR\0A\00", [40 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_peer.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.174 }, %struct.trace_print_flags { i32 1, ptr @.str.175 }, %struct.trace_print_flags { i32 2, ptr @.str.176 }, %struct.trace_print_flags { i32 3, ptr @.str.177 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"conn\00", [27 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"C=%08x %s u=%d sp=%pSR\0A\00", [40 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_conn.symbols = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.174 }, %struct.trace_print_flags { i32 1, ptr @.str.183 }, %struct.trace_print_flags { i32 2, ptr @.str.184 }, %struct.trace_print_flags { i32 3, ptr @.str.185 }, %struct.trace_print_flags { i32 4, ptr @.str.186 }, %struct.trace_print_flags { i32 5, ptr @.str.178 }, %struct.trace_print_flags { i32 6, ptr @.str.187 }, %struct.trace_print_flags { i32 7, ptr @.str.188 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NWc\00", [28 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NWs\00", [28 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PTc\00", [28 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PTs\00", [28 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RPs\00", [28 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"SEE\00", [28 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u32\00", [28 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cid\00", [28 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"channel\00", [24 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"enum rxrpc_client_trace\00", [40 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"C=%08x h=%2d %s i=%08x u=%d\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_client.symbols = internal constant { [14 x %struct.trace_print_flags], [48 x i8] } { [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.194 }, %struct.trace_print_flags { i32 1, ptr @.str.195 }, %struct.trace_print_flags { i32 2, ptr @.str.196 }, %struct.trace_print_flags { i32 3, ptr @.str.197 }, %struct.trace_print_flags { i32 4, ptr @.str.198 }, %struct.trace_print_flags { i32 5, ptr @.str.199 }, %struct.trace_print_flags { i32 6, ptr @.str.200 }, %struct.trace_print_flags { i32 7, ptr @.str.201 }, %struct.trace_print_flags { i32 8, ptr @.str.202 }, %struct.trace_print_flags { i32 9, ptr @.str.203 }, %struct.trace_print_flags { i32 10, ptr @.str.204 }, %struct.trace_print_flags { i32 11, ptr @.str.205 }, %struct.trace_print_flags { i32 12, ptr @.str.206 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Activa\00", [25 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Alloc \00", [25 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ChActv\00", [25 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ChDisc\00", [25 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ChPass\00", [25 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ChWtFl\00", [25 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Clean \00", [25 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Discar\00", [25 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Duplic\00", [25 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Expose\00", [25 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Replac\00", [25 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"->Actv\00", [25 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"->Idle\00", [25 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"call\00", [27 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"aux\00", [28 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"c=%08x %s u=%d sp=%pSR a=%p\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_call.symbols = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.210 }, %struct.trace_print_flags { i32 1, ptr @.str.211 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.212 }, %struct.trace_print_flags { i32 4, ptr @.str.213 }, %struct.trace_print_flags { i32 5, ptr @.str.183 }, %struct.trace_print_flags { i32 6, ptr @.str.184 }, %struct.trace_print_flags { i32 7, ptr @.str.177 }, %struct.trace_print_flags { i32 8, ptr @.str.214 }, %struct.trace_print_flags { i32 9, ptr @.str.215 }, %struct.trace_print_flags { i32 10, ptr @.str.216 }, %struct.trace_print_flags { i32 11, ptr @.str.178 }, %struct.trace_print_flags { i32 12, ptr @.str.217 }, %struct.trace_print_flags { i32 13, ptr @.str.218 }, %struct.trace_print_flags { i32 14, ptr @.str.188 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"CON\00", [28 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"*E*\00", [28 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"Gke\00", [28 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"Gus\00", [28 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"Pke\00", [28 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PNQ\00", [28 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"Pus\00", [28 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"QUR\00", [28 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RLS\00", [28 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"struct sk_buff *\00", [47 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"skb\00", [28 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"enum rxrpc_skb_trace\00", [43 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"u8\00", [29 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mod_count\00", [22 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"s=%p %cx %s u=%d m=%d p=%pSR\0A\00", [34 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_skb.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.226 }, %struct.trace_print_flags { i32 1, ptr @.str.227 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.228 }, %struct.trace_print_flags { i32 4, ptr @.str.175 }, %struct.trace_print_flags { i32 5, ptr @.str.229 }, %struct.trace_print_flags { i32 6, ptr @.str.230 }, %struct.trace_print_flags { i32 7, ptr @.str.231 }, %struct.trace_print_flags { i32 8, ptr @.str.188 }, %struct.trace_print_flags { i32 9, ptr @.str.232 }, %struct.trace_print_flags { i32 10, ptr @.str.233 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"CLN\00", [28 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"FRE\00", [28 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"*L*\00", [28 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PUR\00", [28 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RCV\00", [28 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ROT\00", [28 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"UNS\00", [28 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"US0\00", [28 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"struct rxrpc_host_header\00", [39 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"hdr\00", [28 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%08x:%08x:%08x:%04x %08x %08x %02x %02x %s\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_rx_packet.symbols = internal constant { [17 x %struct.trace_print_flags], [56 x i8] } { [17 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.237 }, %struct.trace_print_flags { i32 1, ptr @.str.238 }, %struct.trace_print_flags { i32 2, ptr @.str.239 }, %struct.trace_print_flags { i32 3, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 5, ptr @.str.242 }, %struct.trace_print_flags { i32 6, ptr @.str.243 }, %struct.trace_print_flags { i32 7, ptr @.str.244 }, %struct.trace_print_flags { i32 8, ptr @.str.245 }, %struct.trace_print_flags { i32 9, ptr @.str.246 }, %struct.trace_print_flags { i32 10, ptr @.str.247 }, %struct.trace_print_flags { i32 11, ptr @.str.248 }, %struct.trace_print_flags { i32 12, ptr @.str.249 }, %struct.trace_print_flags { i32 13, ptr @.str.250 }, %struct.trace_print_flags { i32 14, ptr @.str.251 }, %struct.trace_print_flags { i32 15, ptr @.str.252 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?00\00", [28 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DATA\00", [27 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ACK\00", [28 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"BUSY\00", [27 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ABORT\00", [26 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ACKALL\00", [25 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"CHALL\00", [26 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RESP\00", [27 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"DEBUG\00", [26 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?09\00", [28 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?10\00", [28 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?11\00", [28 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?12\00", [28 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"VERSION\00", [24 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?14\00", [28 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"?15\00", [28 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"?UNK\00", [27 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"result\00", [25 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"abort_code\00", [21 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"r=%d a=%d\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"call_nr\00", [24 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"char[4]\00", [24 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"why\00", [28 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"call_id\00", [24 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"rxrpc_seq_t\00", [20 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"seq\00", [28 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"c=%08x %08x:%08x s=%u a=%d e=%d %s\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"enum rxrpc_call_completion\00", [37 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"compl\00", [26 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"c=%08x %s r=%d ac=%d\0A\00", [42 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_call_complete.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.268 }, %struct.trace_print_flags { i32 1, ptr @.str.269 }, %struct.trace_print_flags { i32 2, ptr @.str.270 }, %struct.trace_print_flags { i32 3, ptr @.str.271 }, %struct.trace_print_flags { i32 4, ptr @.str.272 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Succeeded\00", [22 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"RemoteAbort\00", [20 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"LocalAbort\00", [21 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"LocalError\00", [21 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"NetError\00", [23 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"enum rxrpc_transmit_trace\00", [38 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"tx_hard_ack\00", [20 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tx_top\00", [25 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"tx_winsize\00", [21 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"c=%08x %s f=%08x n=%u/%u\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_transmit.symbols = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.278 }, %struct.trace_print_flags { i32 1, ptr @.str.279 }, %struct.trace_print_flags { i32 2, ptr @.str.178 }, %struct.trace_print_flags { i32 3, ptr @.str.280 }, %struct.trace_print_flags { i32 4, ptr @.str.231 }, %struct.trace_print_flags { i32 5, ptr @.str.218 }, %struct.trace_print_flags { i32 6, ptr @.str.281 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"AWR\00", [28 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"END\00", [28 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"QLS\00", [28 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"WAI\00", [28 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_serial_t\00", [17 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"serial\00", [25 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"anno\00", [27 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"c=%08x DATA %08x q=%08x fl=%02x a=%02x\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ack_serial\00", [21 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"first\00", [26 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"prev\00", [27 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reason\00", [25 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"n_acks\00", [25 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"c=%08x %08x %s r=%08x f=%08x p=%08x n=%u\0A\00", [54 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_rx_ack.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.292 }, %struct.trace_print_flags { i32 1, ptr @.str.293 }, %struct.trace_print_flags { i32 2, ptr @.str.294 }, %struct.trace_print_flags { i32 3, ptr @.str.295 }, %struct.trace_print_flags { i32 4, ptr @.str.296 }, %struct.trace_print_flags { i32 5, ptr @.str.297 }, %struct.trace_print_flags { i32 6, ptr @.str.298 }, %struct.trace_print_flags { i32 7, ptr @.str.299 }, %struct.trace_print_flags { i32 8, ptr @.str.300 }, %struct.trace_print_flags { i32 9, ptr @.str.301 }, %struct.trace_print_flags { i32 10, ptr @.str.302 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"-0-\00", [28 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"REQ\00", [28 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DUP\00", [28 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"OOS\00", [28 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"WIN\00", [28 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"MEM\00", [28 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PNG\00", [28 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"PNR\00", [28 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DLY\00", [28 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"IDL\00", [28 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"-?-\00", [28 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"c=%08x ABORT %08x ac=%d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"rwind\00", [26 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wake\00", [27 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"c=%08x %08x rw=%u%s\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c" wake\00", [26 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.310 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"enum rxrpc_tx_point\00", [44 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"struct rxrpc_wire_header\00", [39 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"whdr\00", [27 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"c=%08x %08x:%08x:%08x:%04x %08x %08x %02x %02x %s %s\0A\00", [42 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_tx_packet.symbols = internal constant { [17 x %struct.trace_print_flags], [56 x i8] } { [17 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.237 }, %struct.trace_print_flags { i32 1, ptr @.str.238 }, %struct.trace_print_flags { i32 2, ptr @.str.239 }, %struct.trace_print_flags { i32 3, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 5, ptr @.str.242 }, %struct.trace_print_flags { i32 6, ptr @.str.243 }, %struct.trace_print_flags { i32 7, ptr @.str.244 }, %struct.trace_print_flags { i32 8, ptr @.str.245 }, %struct.trace_print_flags { i32 9, ptr @.str.246 }, %struct.trace_print_flags { i32 10, ptr @.str.247 }, %struct.trace_print_flags { i32 11, ptr @.str.248 }, %struct.trace_print_flags { i32 12, ptr @.str.249 }, %struct.trace_print_flags { i32 13, ptr @.str.250 }, %struct.trace_print_flags { i32 14, ptr @.str.251 }, %struct.trace_print_flags { i32 15, ptr @.str.252 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_tx_packet.symbols.314 = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.315 }, %struct.trace_print_flags { i32 1, ptr @.str.316 }, %struct.trace_print_flags { i32 2, ptr @.str.317 }, %struct.trace_print_flags { i32 3, ptr @.str.318 }, %struct.trace_print_flags { i32 4, ptr @.str.319 }, %struct.trace_print_flags { i32 5, ptr @.str.320 }, %struct.trace_print_flags { i32 8, ptr @.str.321 }, %struct.trace_print_flags { i32 6, ptr @.str.322 }, %struct.trace_print_flags { i32 7, ptr @.str.323 }, %struct.trace_print_flags { i32 9, ptr @.str.324 }, %struct.trace_print_flags { i32 10, ptr @.str.325 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CallAbort\00", [22 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CallAck\00", [24 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"CallDataFrag\00", [19 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"CallDataNofrag\00", [17 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"CallFinalResend\00", [16 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ConnAbort\00", [22 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Reject\00", [25 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"RxkadChall\00", [21 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RxkadResp\00", [22 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"VerKeepalive\00", [19 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"VerReply\00", [23 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"retrans\00", [24 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"lose\00", [27 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"c=%08x DATA %08x:%08x %08x q=%08x fl=%02x%s%s\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c" *RETRANS*\00", [21 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" *LOSE*\00", [24 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ack_first\00", [22 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c" c=%08x ACK  %08x %s f=%08x r=%08x n=%u\0A\00", [55 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_tx_ack.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.292 }, %struct.trace_print_flags { i32 1, ptr @.str.293 }, %struct.trace_print_flags { i32 2, ptr @.str.294 }, %struct.trace_print_flags { i32 3, ptr @.str.295 }, %struct.trace_print_flags { i32 4, ptr @.str.296 }, %struct.trace_print_flags { i32 5, ptr @.str.297 }, %struct.trace_print_flags { i32 6, ptr @.str.298 }, %struct.trace_print_flags { i32 7, ptr @.str.299 }, %struct.trace_print_flags { i32 8, ptr @.str.300 }, %struct.trace_print_flags { i32 9, ptr @.str.301 }, %struct.trace_print_flags { i32 10, ptr @.str.302 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"enum rxrpc_receive_trace\00", [39 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hard_ack\00", [23 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"top\00", [28 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"c=%08x %s r=%08x q=%08x w=%08x-%08x\0A\00", [59 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_receive.symbols = internal constant { [7 x %struct.trace_print_flags], [40 x i8] } { [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.279 }, %struct.trace_print_flags { i32 1, ptr @.str.337 }, %struct.trace_print_flags { i32 2, ptr @.str.338 }, %struct.trace_print_flags { i32 3, ptr @.str.178 }, %struct.trace_print_flags { i32 4, ptr @.str.280 }, %struct.trace_print_flags { i32 5, ptr @.str.231 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"FRN\00", [28 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"INC\00", [28 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"enum rxrpc_recvmsg_trace\00", [39 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ret\00", [28 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"c=%08x %s q=%08x o=%u l=%u ret=%d\0A\00", [61 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_recvmsg.symbols = internal constant { [13 x %struct.trace_print_flags], [56 x i8] } { [13 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.344 }, %struct.trace_print_flags { i32 1, ptr @.str.238 }, %struct.trace_print_flags { i32 2, ptr @.str.345 }, %struct.trace_print_flags { i32 3, ptr @.str.346 }, %struct.trace_print_flags { i32 4, ptr @.str.347 }, %struct.trace_print_flags { i32 5, ptr @.str.348 }, %struct.trace_print_flags { i32 6, ptr @.str.349 }, %struct.trace_print_flags { i32 7, ptr @.str.350 }, %struct.trace_print_flags { i32 8, ptr @.str.351 }, %struct.trace_print_flags { i32 9, ptr @.str.352 }, %struct.trace_print_flags { i32 10, ptr @.str.353 }, %struct.trace_print_flags { i32 11, ptr @.str.354 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"CONT\00", [27 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DEQU\00", [27 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"ENTR\00", [27 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"FULL\00", [27 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"HOLE\00", [27 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NEXT\00", [27 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"REQU\00", [27 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RETN\00", [27 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TERM\00", [27 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"TBAC\00", [27 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"WAIT\00", [27 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"enum rxrpc_rtt_tx_trace\00", [40 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"slot\00", [27 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"send_serial\00", [20 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"c=%08x [%d] %s sr=%08x\0A\00", [40 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_rtt_tx.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.359 }, %struct.trace_print_flags { i32 1, ptr @.str.238 }, %struct.trace_print_flags { i32 2, ptr @.str.347 }, %struct.trace_print_flags { i32 3, ptr @.str.360 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"CNCE\00", [27 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"PING\00", [27 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"enum rxrpc_rtt_rx_trace\00", [40 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"resp_serial\00", [20 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rtt\00", [28 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rto\00", [28 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"c=%08x [%d] %s sr=%08x rr=%08x rtt=%u rto=%u\0A\00", [50 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_rtt_rx.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.366 }, %struct.trace_print_flags { i32 2, ptr @.str.367 }, %struct.trace_print_flags { i32 1, ptr @.str.368 }, %struct.trace_print_flags { i32 3, ptr @.str.369 }, %struct.trace_print_flags { i32 4, ptr @.str.370 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"CNCL\00", [27 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"OBSL\00", [27 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"LOST\00", [27 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"PONG\00", [27 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"RACK\00", [27 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"enum rxrpc_timer_trace\00", [41 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"now\00", [28 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ack_at\00", [25 x i8] zeroinitializer }, align 32
@.str.375 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ack_lost_at\00", [20 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"resend_at\00", [22 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ping_at\00", [24 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"expect_rx_by\00", [19 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"expect_req_by\00", [18 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"expect_term_by\00", [17 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"timer\00", [26 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"c=%08x %s a=%ld la=%ld r=%ld xr=%ld xq=%ld xt=%ld t=%ld\0A\00", [39 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_timer.symbols = internal constant { [23 x %struct.trace_print_flags], [40 x i8] } { [23 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.383 }, %struct.trace_print_flags { i32 9, ptr @.str.384 }, %struct.trace_print_flags { i32 1, ptr @.str.385 }, %struct.trace_print_flags { i32 2, ptr @.str.386 }, %struct.trace_print_flags { i32 3, ptr @.str.387 }, %struct.trace_print_flags { i32 4, ptr @.str.388 }, %struct.trace_print_flags { i32 5, ptr @.str.389 }, %struct.trace_print_flags { i32 6, ptr @.str.390 }, %struct.trace_print_flags { i32 7, ptr @.str.391 }, %struct.trace_print_flags { i32 8, ptr @.str.392 }, %struct.trace_print_flags { i32 10, ptr @.str.393 }, %struct.trace_print_flags { i32 11, ptr @.str.394 }, %struct.trace_print_flags { i32 12, ptr @.str.395 }, %struct.trace_print_flags { i32 13, ptr @.str.396 }, %struct.trace_print_flags { i32 14, ptr @.str.397 }, %struct.trace_print_flags { i32 15, ptr @.str.398 }, %struct.trace_print_flags { i32 16, ptr @.str.399 }, %struct.trace_print_flags { i32 17, ptr @.str.400 }, %struct.trace_print_flags { i32 18, ptr @.str.401 }, %struct.trace_print_flags { i32 19, ptr @.str.402 }, %struct.trace_print_flags { i32 20, ptr @.str.403 }, %struct.trace_print_flags { i32 21, ptr @.str.404 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Begin \00", [25 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"*EXPR*\00", [25 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpAck\00", [25 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpHrd\00", [25 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpIdl\00", [25 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpKA \00", [25 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpLoA\00", [25 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpNml\00", [25 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpPng\00", [25 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ExpRsn\00", [25 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"IniRpl\00", [25 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SndRpl\00", [25 x i8] zeroinitializer }, align 32
@.str.395 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Restrt\00", [25 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetAck\00", [25 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetHrd\00", [25 x i8] zeroinitializer }, align 32
@.str.398 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetIdl\00", [25 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"KeepAl\00", [25 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetLoA\00", [25 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetNml\00", [25 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetPng\00", [25 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetRTx\00", [25 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SetSnd\00", [25 x i8] zeroinitializer }, align 32
@.str.405 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"%08x:%08x:%08x:%04x %08x %08x %02x %02x %s *LOSE*\0A\00", [45 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_rx_lose.symbols = internal constant { [17 x %struct.trace_print_flags], [56 x i8] } { [17 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.237 }, %struct.trace_print_flags { i32 1, ptr @.str.238 }, %struct.trace_print_flags { i32 2, ptr @.str.239 }, %struct.trace_print_flags { i32 3, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 5, ptr @.str.242 }, %struct.trace_print_flags { i32 6, ptr @.str.243 }, %struct.trace_print_flags { i32 7, ptr @.str.244 }, %struct.trace_print_flags { i32 8, ptr @.str.245 }, %struct.trace_print_flags { i32 9, ptr @.str.246 }, %struct.trace_print_flags { i32 10, ptr @.str.247 }, %struct.trace_print_flags { i32 11, ptr @.str.248 }, %struct.trace_print_flags { i32 12, ptr @.str.249 }, %struct.trace_print_flags { i32 13, ptr @.str.250 }, %struct.trace_print_flags { i32 14, ptr @.str.251 }, %struct.trace_print_flags { i32 15, ptr @.str.252 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"enum rxrpc_propose_ack_trace\00", [35 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ack_reason\00", [21 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"immediate\00", [22 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"background\00", [21 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"enum rxrpc_propose_ack_outcome\00", [33 x i8] zeroinitializer }, align 32
@.str.411 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"outcome\00", [24 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"c=%08x %s %s r=%08x i=%u b=%u%s\0A\00", [63 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_propose_ack.symbols = internal constant { [14 x %struct.trace_print_flags], [48 x i8] } { [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.413 }, %struct.trace_print_flags { i32 1, ptr @.str.414 }, %struct.trace_print_flags { i32 2, ptr @.str.415 }, %struct.trace_print_flags { i32 3, ptr @.str.416 }, %struct.trace_print_flags { i32 4, ptr @.str.417 }, %struct.trace_print_flags { i32 5, ptr @.str.418 }, %struct.trace_print_flags { i32 6, ptr @.str.419 }, %struct.trace_print_flags { i32 7, ptr @.str.420 }, %struct.trace_print_flags { i32 8, ptr @.str.421 }, %struct.trace_print_flags { i32 9, ptr @.str.422 }, %struct.trace_print_flags { i32 10, ptr @.str.423 }, %struct.trace_print_flags { i32 11, ptr @.str.424 }, %struct.trace_print_flags { i32 12, ptr @.str.425 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ClTxEnd\00", [24 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"DataIn \00", [24 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ChkLife\00", [24 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"KeepAlv\00", [24 x i8] zeroinitializer }, align 32
@.str.417 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"LostAck\00", [24 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"LostRpl\00", [24 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Params \00", [24 x i8] zeroinitializer }, align 32
@.str.420 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ProcOp \00", [24 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Rsp2Ack\00", [24 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Rsp2Png\00", [24 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RetryTx\00", [24 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RxAck  \00", [24 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ClTerm \00", [24 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_propose_ack.symbols.426 = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.292 }, %struct.trace_print_flags { i32 1, ptr @.str.293 }, %struct.trace_print_flags { i32 2, ptr @.str.294 }, %struct.trace_print_flags { i32 3, ptr @.str.295 }, %struct.trace_print_flags { i32 4, ptr @.str.296 }, %struct.trace_print_flags { i32 5, ptr @.str.297 }, %struct.trace_print_flags { i32 6, ptr @.str.298 }, %struct.trace_print_flags { i32 7, ptr @.str.299 }, %struct.trace_print_flags { i32 8, ptr @.str.300 }, %struct.trace_print_flags { i32 9, ptr @.str.301 }, %struct.trace_print_flags { i32 10, ptr @.str.302 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_propose_ack.symbols.427 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.428 }, %struct.trace_print_flags { i32 1, ptr @.str.429 }, %struct.trace_print_flags { i32 2, ptr @.str.430 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.428 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" Subsume\00", [23 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" Update\00", [24 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" New\00", [27 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"annotation\00", [21 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"s64\00", [28 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"expiry\00", [25 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"c=%08x q=%x a=%02x xp=%lld\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"enum rxrpc_congest_change\00", [38 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"change\00", [25 x i8] zeroinitializer }, align 32
@.str.437 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"lowest_nak\00", [21 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"struct rxrpc_ack_summary\00", [39 x i8] zeroinitializer }, align 32
@.str.439 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"sum\00", [28 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c"c=%08x r=%08x %s q=%08x %s cw=%u ss=%u nr=%u,%u nw=%u,%u r=%u b=%u u=%u d=%u l=%x%s%s%s\0A\00", [39 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_congest.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.292 }, %struct.trace_print_flags { i32 1, ptr @.str.293 }, %struct.trace_print_flags { i32 2, ptr @.str.294 }, %struct.trace_print_flags { i32 3, ptr @.str.295 }, %struct.trace_print_flags { i32 4, ptr @.str.296 }, %struct.trace_print_flags { i32 5, ptr @.str.297 }, %struct.trace_print_flags { i32 6, ptr @.str.298 }, %struct.trace_print_flags { i32 7, ptr @.str.299 }, %struct.trace_print_flags { i32 8, ptr @.str.300 }, %struct.trace_print_flags { i32 9, ptr @.str.301 }, %struct.trace_print_flags { i32 10, ptr @.str.302 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_congest.symbols.441 = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.442 }, %struct.trace_print_flags { i32 3, ptr @.str.443 }, %struct.trace_print_flags { i32 2, ptr @.str.444 }, %struct.trace_print_flags { i32 0, ptr @.str.445 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.442 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CongAvoid\00", [22 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"FastReTx \00", [22 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"PktLoss  \00", [22 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SlowStart\00", [22 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"!\00", [30 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_congest.symbols.447 = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.448 }, %struct.trace_print_flags { i32 1, ptr @.str.449 }, %struct.trace_print_flags { i32 2, ptr @.str.450 }, %struct.trace_print_flags { i32 3, ptr @.str.451 }, %struct.trace_print_flags { i32 4, ptr @.str.452 }, %struct.trace_print_flags { i32 5, ptr @.str.453 }, %struct.trace_print_flags { i32 6, ptr @.str.454 }, %struct.trace_print_flags { i32 7, ptr @.str.455 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" Retrans\00", [23 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" Cleared\00", [23 x i8] zeroinitializer }, align 32
@.str.450 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" NewLowN\00", [23 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c" -\00", [29 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" Progres\00", [23 x i8] zeroinitializer }, align 32
@.str.453 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" ReTxAgn\00", [23 x i8] zeroinitializer }, align 32
@.str.454 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" RttWinE\00", [23 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" SawNack\00", [23 x i8] zeroinitializer }, align 32
@.str.456 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c" rTxTo\00", [25 x i8] zeroinitializer }, align 32
@.str.457 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"c=%08x ab=%08x\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const char *\00", [19 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"c=%08x EPROTO %08x %s\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.460 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"user_call_ID\00", [19 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"c=%08x u=%p %08x:%08x\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.463 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"ix\00", [29 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"u8[64]\00", [25 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"c=%08x ix=%u a=%64phN\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.466 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"struct sock_extended_err\00", [39 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"ee\00", [29 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"struct sockaddr_rxrpc\00", [42 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"srx\00", [28 x i8] zeroinitializer }, align 32
@.str.470 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"P=%08x o=%u t=%u c=%u i=%u d=%u e=%d %pISp\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"debug_id\00", [23 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"c=%08x r=%x ret=%d %s\0A\00", [41 x i8] zeroinitializer }, align 32
@trace_raw_output_rxrpc_tx_fail.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.315 }, %struct.trace_print_flags { i32 1, ptr @.str.316 }, %struct.trace_print_flags { i32 2, ptr @.str.317 }, %struct.trace_print_flags { i32 3, ptr @.str.318 }, %struct.trace_print_flags { i32 4, ptr @.str.319 }, %struct.trace_print_flags { i32 5, ptr @.str.320 }, %struct.trace_print_flags { i32 8, ptr @.str.321 }, %struct.trace_print_flags { i32 6, ptr @.str.322 }, %struct.trace_print_flags { i32 7, ptr @.str.323 }, %struct.trace_print_flags { i32 9, ptr @.str.324 }, %struct.trace_print_flags { i32 10, ptr @.str.325 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.473 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"call_serial\00", [20 x i8] zeroinitializer }, align 32
@.str.474 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"conn_serial\00", [20 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tx_seq\00", [25 x i8] zeroinitializer }, align 32
@.str.476 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rx_seq\00", [25 x i8] zeroinitializer }, align 32
@.str.477 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"c=%08x %08x:%08x r=%08x/%08x tx=%08x rx=%08x\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"c=%08x r=%08x\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.479 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"first_soft_ack\00", [17 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"call_ackr_first\00", [16 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"prev_pkt\00", [23 x i8] zeroinitializer }, align 32
@.str.482 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"call_ackr_prev\00", [17 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"c=%08x r=%08x %08x<%08x %08x<%08x\0A\00", [61 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@rxrpc_validate_address._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.484, ptr @.str.485, ptr @.str.149, i32 122, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.484 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"[%-6.6s]     INET: %pISp\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rxrpc_validate_address\00", [41 x i8] zeroinitializer }, align 32
@rxrpc_validate_address._entry_ptr = internal global ptr @rxrpc_validate_address._entry, section ".printk_index", align 4
@.str.486 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/rxrpc.h\00", [35 x i8] zeroinitializer }, align 32
@trace_rxrpc_timer.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.487 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.488 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@rxrpc_client_conn_ids = external dso_local global %struct.idr, align 4
@.str.489 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_call_jar\00", [17 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.490, ptr @.str.491, ptr @.str.149, i32 978, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.490 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\015rxrpc: Failed to allocate call jar\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.491 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"af_rxrpc_init\00", [18 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr = internal global ptr @af_rxrpc_init._entry, section ".printk_index", align 4
@.str.492 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"krxrpcd\00", [24 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry.493 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.494, ptr @.str.491, ptr @.str.149, i32 984, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.494 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\015rxrpc: Failed to allocate work queue\0A\00", [56 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.495 = internal global ptr @af_rxrpc_init._entry.493, section ".printk_index", align 4
@af_rxrpc_init._entry.496 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.497, ptr @.str.491, ptr @.str.149, i32 990, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.497 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\012rxrpc: Cannot initialise security\0A\00", [59 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.498 = internal global ptr @af_rxrpc_init._entry.496, section ".printk_index", align 4
@af_rxrpc_init._entry.499 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.500, ptr @.str.491, ptr @.str.149, i32 1000, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.500 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\012rxrpc: Cannot register protocol\0A\00", [61 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.501 = internal global ptr @af_rxrpc_init._entry.499, section ".printk_index", align 4
@rxrpc_family_ops = internal constant { %struct.net_proto_family, [20 x i8] } { %struct.net_proto_family { i32 33, ptr @rxrpc_create, ptr null }, [20 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry.502 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.503, ptr @.str.491, ptr @.str.149, i32 1006, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.503 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\012rxrpc: Cannot register socket family\0A\00", [56 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.504 = internal global ptr @af_rxrpc_init._entry.502, section ".printk_index", align 4
@af_rxrpc_init._entry.505 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.506, ptr @.str.491, ptr @.str.149, i32 1012, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.506 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\012rxrpc: Cannot register client key type\0A\00", [54 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.507 = internal global ptr @af_rxrpc_init._entry.505, section ".printk_index", align 4
@af_rxrpc_init._entry.508 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.509, ptr @.str.491, ptr @.str.149, i32 1018, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.509 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\012rxrpc: Cannot register server key type\0A\00", [54 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.510 = internal global ptr @af_rxrpc_init._entry.508, section ".printk_index", align 4
@af_rxrpc_init._entry.511 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.512, ptr @.str.491, ptr @.str.149, i32 1024, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\012rxrpc: Cannot register sysctls\0A\00", [62 x i8] zeroinitializer }, align 32
@af_rxrpc_init._entry_ptr.513 = internal global ptr @af_rxrpc_init._entry.511, section ".printk_index", align 4
@rxrpc_create._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.514, ptr @.str.515, ptr @.str.149, i32 753, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.514 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"[%-6.6s] ==> %s(%p,%d)\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.515 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rxrpc_create\00", [19 x i8] zeroinitializer }, align 32
@rxrpc_create._entry_ptr = internal global ptr @rxrpc_create._entry, section ".printk_index", align 4
@rxrpc_rpc_ops = internal constant { %struct.proto_ops, [52 x i8] } { %struct.proto_ops { i32 33, ptr null, ptr @rxrpc_release, ptr @rxrpc_bind, ptr @rxrpc_connect, ptr @sock_no_socketpair, ptr @sock_no_accept, ptr @sock_no_getname, ptr @rxrpc_poll, ptr @sock_no_ioctl, ptr null, ptr @rxrpc_listen, ptr @rxrpc_shutdown, ptr @rxrpc_setsockopt, ptr @rxrpc_getsockopt, ptr null, ptr @rxrpc_sendmsg, ptr @rxrpc_recvmsg, ptr @sock_no_mmap, ptr @sock_no_sendpage, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@rxrpc_create.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.516 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&rx->incoming_lock\00", [45 x i8] zeroinitializer }, align 32
@rxrpc_create.__key.517 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.518 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&rx->recvmsg_lock\00", [46 x i8] zeroinitializer }, align 32
@rxrpc_create.__key.519 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.520 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&rx->call_lock\00", [17 x i8] zeroinitializer }, align 32
@rxrpc_create._entry.521 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.522, ptr @.str.515, ptr @.str.149, i32 792, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.522 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"[%-6.6s] <== %s() = 0 [%p]\0A\00", [36 x i8] zeroinitializer }, align 32
@rxrpc_create._entry_ptr.523 = internal global ptr @rxrpc_create._entry.521, section ".printk_index", align 4
@rxrpc_release._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.524, ptr @.str.525, ptr @.str.149, i32 910, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.524 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"[%-6.6s] ==> %s(%p{%p})\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.525 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rxrpc_release\00", [18 x i8] zeroinitializer }, align 32
@rxrpc_release._entry_ptr = internal global ptr @rxrpc_release._entry, section ".printk_index", align 4
@rxrpc_release_sock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.526, ptr @.str.527, ptr @.str.149, i32 855, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"[%-6.6s] ==> %s(%p{%d,%d})\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.527 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rxrpc_release_sock\00", [45 x i8] zeroinitializer }, align 32
@rxrpc_release_sock._entry_ptr = internal global ptr @rxrpc_release_sock._entry, section ".printk_index", align 4
@rxrpc_release_sock._entry.528 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.529, ptr @.str.527, ptr @.str.149, i32 899, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"[%-6.6s] <== %s() = 0\0A\00", [41 x i8] zeroinitializer }, align 32
@rxrpc_release_sock._entry_ptr.530 = internal global ptr @rxrpc_release_sock._entry.528, section ".printk_index", align 4
@rxrpc_bind._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.531, ptr @.str.532, ptr @.str.149, i32 137, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.531 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"[%-6.6s] ==> %s(%p,%p,%d)\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.532 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rxrpc_bind\00", [21 x i8] zeroinitializer }, align 32
@rxrpc_bind._entry_ptr = internal global ptr @rxrpc_bind._entry, section ".printk_index", align 4
@rxrpc_bind._entry.533 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.529, ptr @.str.532, ptr @.str.149, i32 191, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rxrpc_bind._entry_ptr.534 = internal global ptr @rxrpc_bind._entry.533, section ".printk_index", align 4
@rxrpc_bind._entry.535 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.536, ptr @.str.532, ptr @.str.149, i32 202, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.536 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"[%-6.6s] <== %s() = %d\0A\00", [40 x i8] zeroinitializer }, align 32
@rxrpc_bind._entry_ptr.537 = internal global ptr @rxrpc_bind._entry.535, section ".printk_index", align 4
@rxrpc_connect._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.538, ptr @.str.539, ptr @.str.149, i32 457, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.538 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"[%-6.6s] ==> %s(%p,%p,%d,%d)\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.539 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rxrpc_connect\00", [18 x i8] zeroinitializer }, align 32
@rxrpc_connect._entry_ptr = internal global ptr @rxrpc_connect._entry, section ".printk_index", align 4
@rxrpc_connect._entry.540 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.541, ptr @.str.539, ptr @.str.149, i32 461, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.541 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"[%-6.6s] <== %s() = %d [bad addr]\0A\00", [61 x i8] zeroinitializer }, align 32
@rxrpc_connect._entry_ptr.542 = internal global ptr @rxrpc_connect._entry.540, section ".printk_index", align 4
@rxrpc_listen._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.514, ptr @.str.543, ptr @.str.149, i32 216, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.543 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rxrpc_listen\00", [19 x i8] zeroinitializer }, align 32
@rxrpc_listen._entry_ptr = internal global ptr @rxrpc_listen._entry, section ".printk_index", align 4
@rxrpc_listen._entry.544 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.545, ptr @.str.543, ptr @.str.149, i32 226, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.545 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\013rxrpc: Assertion failed\0A\00", [37 x i8] zeroinitializer }, align 32
@rxrpc_listen._entry_ptr.546 = internal global ptr @rxrpc_listen._entry.544, section ".printk_index", align 4
@rxrpc_max_backlog = external dso_local global i32, section ".data..read_mostly", align 4
@rxrpc_listen._entry.547 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.536, ptr @.str.543, ptr @.str.149, i32 256, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rxrpc_listen._entry_ptr.548 = internal global ptr @rxrpc_listen._entry.547, section ".printk_index", align 4
@rxrpc_shutdown._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.514, ptr @.str.549, ptr @.str.149, i32 805, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.549 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rxrpc_shutdown\00", [17 x i8] zeroinitializer }, align 32
@rxrpc_shutdown._entry_ptr = internal global ptr @rxrpc_shutdown._entry, section ".printk_index", align 4
@rxrpc_setsockopt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.550, ptr @.str.551, ptr @.str.149, i32 600, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.550 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"[%-6.6s] ==> %s(,%d,%d,,%d)\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.551 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rxrpc_setsockopt\00", [47 x i8] zeroinitializer }, align 32
@rxrpc_setsockopt._entry_ptr = internal global ptr @rxrpc_setsockopt._entry, section ".printk_index", align 4
@.str.554 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@rxrpc_sendmsg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.555, ptr @.str.556, ptr @.str.149, i32 507, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.555 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"[%-6.6s] ==> %s(,{%d},,%zu)\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.556 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rxrpc_sendmsg\00", [18 x i8] zeroinitializer }, align 32
@rxrpc_sendmsg._entry_ptr = internal global ptr @rxrpc_sendmsg._entry, section ".printk_index", align 4
@rxrpc_sendmsg._entry.557 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.541, ptr @.str.556, ptr @.str.149, i32 515, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rxrpc_sendmsg._entry_ptr.558 = internal global ptr @rxrpc_sendmsg._entry.557, section ".printk_index", align 4
@rxrpc_sendmsg._entry.559 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.536, ptr @.str.556, ptr @.str.149, i32 572, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rxrpc_sendmsg._entry_ptr.560 = internal global ptr @rxrpc_sendmsg._entry.559, section ".printk_index", align 4
@rxrpc_write_space._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.561, ptr @.str.562, ptr @.str.149, i32 61, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.561 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"[%-6.6s] ==> %s(%p)\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.562 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rxrpc_write_space\00", [46 x i8] zeroinitializer }, align 32
@rxrpc_write_space._entry_ptr = internal global ptr @rxrpc_write_space._entry, section ".printk_index", align 4
@rxrpc_write_space.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.563 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.564 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@sk_wake_async.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.565 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"include/net/sock.h\00", [45 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.566 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@rxrpc_sock_destructor._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.561, ptr @.str.567, ptr @.str.149, i32 834, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.567 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rxrpc_sock_destructor\00", [42 x i8] zeroinitializer }, align 32
@rxrpc_sock_destructor._entry_ptr = internal global ptr @rxrpc_sock_destructor._entry, section ".printk_index", align 4
@rxrpc_sock_destructor._entry.568 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.569, ptr @.str.567, ptr @.str.149, i32 843, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.569 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Attempt to release alive rxrpc socket: %p\0A\00", [53 x i8] zeroinitializer }, align 32
@rxrpc_sock_destructor._entry_ptr.570 = internal global ptr @rxrpc_sock_destructor._entry.568, section ".printk_index", align 4
@rxrpc_net_id = external dso_local local_unnamed_addr global i32, align 4
@net_generic.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.571 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/net/netns/generic.h\00", [36 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.572 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 10]
@__sancov_gen_cov_switch_values.573 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.574 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 3]
@__sancov_gen_cov_switch_values.575 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.576 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.577 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.578 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.579 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.580 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 1, i64 2, i64 3, i64 5]
@__sancov_gen_cov_switch_values.581 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@___asan_gen_.582 = private unnamed_addr constant [30 x i8] c"str__rxrpc__trace_system_name\00", align 1
@___asan_gen_.583 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.583, i32 36, i32 1 }
@___asan_gen_.617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 456, i32 1 }
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 457, i32 1 }
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 458, i32 1 }
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 459, i32 1 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 460, i32 1 }
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 461, i32 1 }
@___asan_gen_.779 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 462, i32 1 }
@___asan_gen_.815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 463, i32 1 }
@___asan_gen_.827 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 464, i32 1 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 465, i32 1 }
@___asan_gen_.908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 466, i32 1 }
@___asan_gen_.947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 467, i32 1 }
@___asan_gen_.956 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 468, i32 1 }
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 469, i32 1 }
@___asan_gen_.992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 470, i32 1 }
@___asan_gen_.1025 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 471, i32 1 }
@___asan_gen_.1026 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rxrpc_local\00", align 1
@___asan_gen_.1029 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rxrpc_local\00", align 1
@___asan_gen_.1032 = private unnamed_addr constant [22 x i8] c"print_fmt_rxrpc_local\00", align 1
@___asan_gen_.1035 = private unnamed_addr constant [18 x i8] c"event_rxrpc_local\00", align 1
@___asan_gen_.1038 = private unnamed_addr constant [30 x i8] c"trace_event_fields_rxrpc_peer\00", align 1
@___asan_gen_.1041 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_rxrpc_peer\00", align 1
@___asan_gen_.1044 = private unnamed_addr constant [21 x i8] c"print_fmt_rxrpc_peer\00", align 1
@___asan_gen_.1047 = private unnamed_addr constant [17 x i8] c"event_rxrpc_peer\00", align 1
@___asan_gen_.1050 = private unnamed_addr constant [30 x i8] c"trace_event_fields_rxrpc_conn\00", align 1
@___asan_gen_.1053 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_rxrpc_conn\00", align 1
@___asan_gen_.1056 = private unnamed_addr constant [21 x i8] c"print_fmt_rxrpc_conn\00", align 1
@___asan_gen_.1059 = private unnamed_addr constant [17 x i8] c"event_rxrpc_conn\00", align 1
@___asan_gen_.1062 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rxrpc_client\00", align 1
@___asan_gen_.1065 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rxrpc_client\00", align 1
@___asan_gen_.1068 = private unnamed_addr constant [23 x i8] c"print_fmt_rxrpc_client\00", align 1
@___asan_gen_.1071 = private unnamed_addr constant [19 x i8] c"event_rxrpc_client\00", align 1
@___asan_gen_.1074 = private unnamed_addr constant [30 x i8] c"trace_event_fields_rxrpc_call\00", align 1
@___asan_gen_.1077 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_rxrpc_call\00", align 1
@___asan_gen_.1080 = private unnamed_addr constant [21 x i8] c"print_fmt_rxrpc_call\00", align 1
@___asan_gen_.1083 = private unnamed_addr constant [17 x i8] c"event_rxrpc_call\00", align 1
@___asan_gen_.1086 = private unnamed_addr constant [29 x i8] c"trace_event_fields_rxrpc_skb\00", align 1
@___asan_gen_.1089 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_rxrpc_skb\00", align 1
@___asan_gen_.1092 = private unnamed_addr constant [20 x i8] c"print_fmt_rxrpc_skb\00", align 1
@___asan_gen_.1095 = private unnamed_addr constant [16 x i8] c"event_rxrpc_skb\00", align 1
@___asan_gen_.1098 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rxrpc_rx_packet\00", align 1
@___asan_gen_.1101 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rxrpc_rx_packet\00", align 1
@___asan_gen_.1104 = private unnamed_addr constant [26 x i8] c"print_fmt_rxrpc_rx_packet\00", align 1
@___asan_gen_.1107 = private unnamed_addr constant [22 x i8] c"event_rxrpc_rx_packet\00", align 1
@___asan_gen_.1110 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_rx_done\00", align 1
@___asan_gen_.1113 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_rx_done\00", align 1
@___asan_gen_.1116 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_rx_done\00", align 1
@___asan_gen_.1119 = private unnamed_addr constant [20 x i8] c"event_rxrpc_rx_done\00", align 1
@___asan_gen_.1122 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rxrpc_abort\00", align 1
@___asan_gen_.1125 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rxrpc_abort\00", align 1
@___asan_gen_.1128 = private unnamed_addr constant [22 x i8] c"print_fmt_rxrpc_abort\00", align 1
@___asan_gen_.1131 = private unnamed_addr constant [18 x i8] c"event_rxrpc_abort\00", align 1
@___asan_gen_.1134 = private unnamed_addr constant [39 x i8] c"trace_event_fields_rxrpc_call_complete\00", align 1
@___asan_gen_.1137 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_rxrpc_call_complete\00", align 1
@___asan_gen_.1140 = private unnamed_addr constant [30 x i8] c"print_fmt_rxrpc_call_complete\00", align 1
@___asan_gen_.1143 = private unnamed_addr constant [26 x i8] c"event_rxrpc_call_complete\00", align 1
@___asan_gen_.1146 = private unnamed_addr constant [34 x i8] c"trace_event_fields_rxrpc_transmit\00", align 1
@___asan_gen_.1149 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_rxrpc_transmit\00", align 1
@___asan_gen_.1152 = private unnamed_addr constant [25 x i8] c"print_fmt_rxrpc_transmit\00", align 1
@___asan_gen_.1155 = private unnamed_addr constant [21 x i8] c"event_rxrpc_transmit\00", align 1
@___asan_gen_.1158 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_rx_data\00", align 1
@___asan_gen_.1161 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_rx_data\00", align 1
@___asan_gen_.1164 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_rx_data\00", align 1
@___asan_gen_.1167 = private unnamed_addr constant [20 x i8] c"event_rxrpc_rx_data\00", align 1
@___asan_gen_.1170 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rxrpc_rx_ack\00", align 1
@___asan_gen_.1173 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rxrpc_rx_ack\00", align 1
@___asan_gen_.1176 = private unnamed_addr constant [23 x i8] c"print_fmt_rxrpc_rx_ack\00", align 1
@___asan_gen_.1179 = private unnamed_addr constant [19 x i8] c"event_rxrpc_rx_ack\00", align 1
@___asan_gen_.1182 = private unnamed_addr constant [34 x i8] c"trace_event_fields_rxrpc_rx_abort\00", align 1
@___asan_gen_.1185 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_rxrpc_rx_abort\00", align 1
@___asan_gen_.1188 = private unnamed_addr constant [25 x i8] c"print_fmt_rxrpc_rx_abort\00", align 1
@___asan_gen_.1191 = private unnamed_addr constant [21 x i8] c"event_rxrpc_rx_abort\00", align 1
@___asan_gen_.1194 = private unnamed_addr constant [41 x i8] c"trace_event_fields_rxrpc_rx_rwind_change\00", align 1
@___asan_gen_.1197 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_rxrpc_rx_rwind_change\00", align 1
@___asan_gen_.1200 = private unnamed_addr constant [32 x i8] c"print_fmt_rxrpc_rx_rwind_change\00", align 1
@___asan_gen_.1203 = private unnamed_addr constant [28 x i8] c"event_rxrpc_rx_rwind_change\00", align 1
@___asan_gen_.1206 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rxrpc_tx_packet\00", align 1
@___asan_gen_.1209 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rxrpc_tx_packet\00", align 1
@___asan_gen_.1212 = private unnamed_addr constant [26 x i8] c"print_fmt_rxrpc_tx_packet\00", align 1
@___asan_gen_.1215 = private unnamed_addr constant [22 x i8] c"event_rxrpc_tx_packet\00", align 1
@___asan_gen_.1218 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_tx_data\00", align 1
@___asan_gen_.1221 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_tx_data\00", align 1
@___asan_gen_.1224 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_tx_data\00", align 1
@___asan_gen_.1227 = private unnamed_addr constant [20 x i8] c"event_rxrpc_tx_data\00", align 1
@___asan_gen_.1230 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rxrpc_tx_ack\00", align 1
@___asan_gen_.1233 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rxrpc_tx_ack\00", align 1
@___asan_gen_.1236 = private unnamed_addr constant [23 x i8] c"print_fmt_rxrpc_tx_ack\00", align 1
@___asan_gen_.1239 = private unnamed_addr constant [19 x i8] c"event_rxrpc_tx_ack\00", align 1
@___asan_gen_.1242 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_receive\00", align 1
@___asan_gen_.1245 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_receive\00", align 1
@___asan_gen_.1248 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_receive\00", align 1
@___asan_gen_.1251 = private unnamed_addr constant [20 x i8] c"event_rxrpc_receive\00", align 1
@___asan_gen_.1254 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_recvmsg\00", align 1
@___asan_gen_.1257 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_recvmsg\00", align 1
@___asan_gen_.1260 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_recvmsg\00", align 1
@___asan_gen_.1263 = private unnamed_addr constant [20 x i8] c"event_rxrpc_recvmsg\00", align 1
@___asan_gen_.1266 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rxrpc_rtt_tx\00", align 1
@___asan_gen_.1269 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rxrpc_rtt_tx\00", align 1
@___asan_gen_.1272 = private unnamed_addr constant [23 x i8] c"print_fmt_rxrpc_rtt_tx\00", align 1
@___asan_gen_.1275 = private unnamed_addr constant [19 x i8] c"event_rxrpc_rtt_tx\00", align 1
@___asan_gen_.1278 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rxrpc_rtt_rx\00", align 1
@___asan_gen_.1281 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rxrpc_rtt_rx\00", align 1
@___asan_gen_.1284 = private unnamed_addr constant [23 x i8] c"print_fmt_rxrpc_rtt_rx\00", align 1
@___asan_gen_.1287 = private unnamed_addr constant [19 x i8] c"event_rxrpc_rtt_rx\00", align 1
@___asan_gen_.1290 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rxrpc_timer\00", align 1
@___asan_gen_.1293 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rxrpc_timer\00", align 1
@___asan_gen_.1296 = private unnamed_addr constant [22 x i8] c"print_fmt_rxrpc_timer\00", align 1
@___asan_gen_.1299 = private unnamed_addr constant [18 x i8] c"event_rxrpc_timer\00", align 1
@___asan_gen_.1302 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_rx_lose\00", align 1
@___asan_gen_.1305 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_rx_lose\00", align 1
@___asan_gen_.1308 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_rx_lose\00", align 1
@___asan_gen_.1311 = private unnamed_addr constant [20 x i8] c"event_rxrpc_rx_lose\00", align 1
@___asan_gen_.1314 = private unnamed_addr constant [37 x i8] c"trace_event_fields_rxrpc_propose_ack\00", align 1
@___asan_gen_.1317 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_rxrpc_propose_ack\00", align 1
@___asan_gen_.1320 = private unnamed_addr constant [28 x i8] c"print_fmt_rxrpc_propose_ack\00", align 1
@___asan_gen_.1323 = private unnamed_addr constant [24 x i8] c"event_rxrpc_propose_ack\00", align 1
@___asan_gen_.1326 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rxrpc_retransmit\00", align 1
@___asan_gen_.1329 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rxrpc_retransmit\00", align 1
@___asan_gen_.1332 = private unnamed_addr constant [27 x i8] c"print_fmt_rxrpc_retransmit\00", align 1
@___asan_gen_.1335 = private unnamed_addr constant [23 x i8] c"event_rxrpc_retransmit\00", align 1
@___asan_gen_.1338 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_congest\00", align 1
@___asan_gen_.1341 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_congest\00", align 1
@___asan_gen_.1344 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_congest\00", align 1
@___asan_gen_.1347 = private unnamed_addr constant [20 x i8] c"event_rxrpc_congest\00", align 1
@___asan_gen_.1350 = private unnamed_addr constant [41 x i8] c"trace_event_fields_rxrpc_disconnect_call\00", align 1
@___asan_gen_.1353 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_rxrpc_disconnect_call\00", align 1
@___asan_gen_.1356 = private unnamed_addr constant [32 x i8] c"print_fmt_rxrpc_disconnect_call\00", align 1
@___asan_gen_.1359 = private unnamed_addr constant [28 x i8] c"event_rxrpc_disconnect_call\00", align 1
@___asan_gen_.1362 = private unnamed_addr constant [39 x i8] c"trace_event_fields_rxrpc_improper_term\00", align 1
@___asan_gen_.1365 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_rxrpc_improper_term\00", align 1
@___asan_gen_.1368 = private unnamed_addr constant [30 x i8] c"print_fmt_rxrpc_improper_term\00", align 1
@___asan_gen_.1371 = private unnamed_addr constant [26 x i8] c"event_rxrpc_improper_term\00", align 1
@___asan_gen_.1373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1335, i32 1 }
@___asan_gen_.1374 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rxrpc_rx_eproto\00", align 1
@___asan_gen_.1377 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rxrpc_rx_eproto\00", align 1
@___asan_gen_.1380 = private unnamed_addr constant [26 x i8] c"print_fmt_rxrpc_rx_eproto\00", align 1
@___asan_gen_.1383 = private unnamed_addr constant [22 x i8] c"event_rxrpc_rx_eproto\00", align 1
@___asan_gen_.1386 = private unnamed_addr constant [38 x i8] c"trace_event_fields_rxrpc_connect_call\00", align 1
@___asan_gen_.1389 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_rxrpc_connect_call\00", align 1
@___asan_gen_.1392 = private unnamed_addr constant [29 x i8] c"print_fmt_rxrpc_connect_call\00", align 1
@___asan_gen_.1395 = private unnamed_addr constant [25 x i8] c"event_rxrpc_connect_call\00", align 1
@___asan_gen_.1398 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rxrpc_resend\00", align 1
@___asan_gen_.1401 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rxrpc_resend\00", align 1
@___asan_gen_.1404 = private unnamed_addr constant [23 x i8] c"print_fmt_rxrpc_resend\00", align 1
@___asan_gen_.1407 = private unnamed_addr constant [19 x i8] c"event_rxrpc_resend\00", align 1
@___asan_gen_.1410 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_rx_icmp\00", align 1
@___asan_gen_.1413 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_rx_icmp\00", align 1
@___asan_gen_.1416 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_rx_icmp\00", align 1
@___asan_gen_.1419 = private unnamed_addr constant [20 x i8] c"event_rxrpc_rx_icmp\00", align 1
@___asan_gen_.1422 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rxrpc_tx_fail\00", align 1
@___asan_gen_.1425 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rxrpc_tx_fail\00", align 1
@___asan_gen_.1428 = private unnamed_addr constant [24 x i8] c"print_fmt_rxrpc_tx_fail\00", align 1
@___asan_gen_.1431 = private unnamed_addr constant [20 x i8] c"event_rxrpc_tx_fail\00", align 1
@___asan_gen_.1434 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rxrpc_call_reset\00", align 1
@___asan_gen_.1437 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rxrpc_call_reset\00", align 1
@___asan_gen_.1440 = private unnamed_addr constant [27 x i8] c"print_fmt_rxrpc_call_reset\00", align 1
@___asan_gen_.1443 = private unnamed_addr constant [23 x i8] c"event_rxrpc_call_reset\00", align 1
@___asan_gen_.1446 = private unnamed_addr constant [39 x i8] c"trace_event_fields_rxrpc_notify_socket\00", align 1
@___asan_gen_.1449 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_rxrpc_notify_socket\00", align 1
@___asan_gen_.1452 = private unnamed_addr constant [30 x i8] c"print_fmt_rxrpc_notify_socket\00", align 1
@___asan_gen_.1455 = private unnamed_addr constant [26 x i8] c"event_rxrpc_notify_socket\00", align 1
@___asan_gen_.1458 = private unnamed_addr constant [40 x i8] c"trace_event_fields_rxrpc_rx_discard_ack\00", align 1
@___asan_gen_.1461 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_rxrpc_rx_discard_ack\00", align 1
@___asan_gen_.1464 = private unnamed_addr constant [31 x i8] c"print_fmt_rxrpc_rx_discard_ack\00", align 1
@___asan_gen_.1467 = private unnamed_addr constant [27 x i8] c"event_rxrpc_rx_discard_ack\00", align 1
@___asan_gen_.1470 = private unnamed_addr constant [12 x i8] c"rxrpc_debug\00", align 1
@___asan_gen_.1472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 30, i32 14 }
@___asan_gen_.1473 = private unnamed_addr constant [15 x i8] c"rxrpc_debug_id\00", align 1
@___asan_gen_.1475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 38, i32 10 }
@___asan_gen_.1487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 297, i32 2 }
@___asan_gen_.1493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 331, i32 2 }
@___asan_gen_.1502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 354, i32 2 }
@___asan_gen_.1511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1055, i32 2 }
@___asan_gen_.1512 = private unnamed_addr constant [12 x i8] c"rxrpc_proto\00", align 1
@___asan_gen_.1514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 944, i32 21 }
@___asan_gen_.1515 = private unnamed_addr constant [16 x i8] c"rxrpc_n_tx_skbs\00", align 1
@___asan_gen_.1517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 42, i32 10 }
@___asan_gen_.1526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1062, i32 2 }
@___asan_gen_.1527 = private unnamed_addr constant [16 x i8] c"rxrpc_n_rx_skbs\00", align 1
@___asan_gen_.1529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 42, i32 27 }
@___asan_gen_.1532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1063, i32 2 }
@___asan_gen_.1533 = private unnamed_addr constant [16 x i8] c"rxrpc_workqueue\00", align 1
@___asan_gen_.1535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 44, i32 26 }
@___asan_gen_.1541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1074, i32 2 }
@___asan_gen_.1583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 482, i32 1 }
@___asan_gen_.1592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 509, i32 1 }
@___asan_gen_.1619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 536, i32 1 }
@___asan_gen_.1676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 563, i32 1 }
@___asan_gen_.1715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 593, i32 1 }
@___asan_gen_.1763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 623, i32 1 }
@___asan_gen_.1826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 656, i32 1 }
@___asan_gen_.1835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 678, i32 1 }
@___asan_gen_.1859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 696, i32 1 }
@___asan_gen_.1886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 728, i32 1 }
@___asan_gen_.1916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 754, i32 1 }
@___asan_gen_.1928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 783, i32 1 }
@___asan_gen_.1982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 813, i32 1 }
@___asan_gen_.1985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 850, i32 1 }
@___asan_gen_.2003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 874, i32 1 }
@___asan_gen_.2054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 901, i32 1 }
@___asan_gen_.2069 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 933, i32 1 }
@___asan_gen_.2078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 972, i32 1 }
@___asan_gen_.2099 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1006, i32 1 }
@___asan_gen_.2150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1039, i32 1 }
@___asan_gen_.2171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1073, i32 1 }
@___asan_gen_.2204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1100, i32 1 }
@___asan_gen_.2315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1183, i32 1 }
@___asan_gen_.2393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1205, i32 1 }
@___asan_gen_.2405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1243, i32 1 }
@___asan_gen_.2474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1270, i32 1 }
@___asan_gen_.2477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1315, i32 1 }
@___asan_gen_.2483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1355, i32 1 }
@___asan_gen_.2492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1379, i32 1 }
@___asan_gen_.2501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1405, i32 1 }
@___asan_gen_.2516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1428, i32 1 }
@___asan_gen_.2523 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.2525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1457, i32 1 }
@___asan_gen_.2540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1484, i32 1 }
@___asan_gen_.2543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1516, i32 1 }
@___asan_gen_.2558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1536, i32 1 }
@___asan_gen_.2567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 122, i32 2 }
@___asan_gen_.2572 = private unnamed_addr constant [32 x i8] c"../include/trace/events/rxrpc.h\00", align 1
@___asan_gen_.2573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2572, i32 1138, i32 1 }
@___asan_gen_.2575 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.2576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2575, i32 108, i32 2 }
@___asan_gen_.2579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 975, i32 3 }
@___asan_gen_.2588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 978, i32 3 }
@___asan_gen_.2591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 982, i32 36 }
@___asan_gen_.2597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 984, i32 3 }
@___asan_gen_.2603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 990, i32 3 }
@___asan_gen_.2609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1000, i32 3 }
@___asan_gen_.2610 = private unnamed_addr constant [17 x i8] c"rxrpc_family_ops\00", align 1
@___asan_gen_.2612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 951, i32 38 }
@___asan_gen_.2618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1006, i32 3 }
@___asan_gen_.2624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1012, i32 3 }
@___asan_gen_.2630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1018, i32 3 }
@___asan_gen_.2636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 1024, i32 3 }
@___asan_gen_.2645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 753, i32 2 }
@___asan_gen_.2646 = private unnamed_addr constant [14 x i8] c"rxrpc_rpc_ops\00", align 1
@___asan_gen_.2648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 923, i32 31 }
@___asan_gen_.2654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 781, i32 2 }
@___asan_gen_.2660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 785, i32 2 }
@___asan_gen_.2661 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.2666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 786, i32 2 }
@___asan_gen_.2672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 792, i32 2 }
@___asan_gen_.2681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 910, i32 2 }
@___asan_gen_.2690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 855, i32 2 }
@___asan_gen_.2696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 899, i32 2 }
@___asan_gen_.2705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 137, i32 2 }
@___asan_gen_.2708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 191, i32 2 }
@___asan_gen_.2714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 202, i32 2 }
@___asan_gen_.2723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 457, i32 2 }
@___asan_gen_.2729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 461, i32 3 }
@___asan_gen_.2735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 216, i32 2 }
@___asan_gen_.2741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 226, i32 3 }
@___asan_gen_.2744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 256, i32 2 }
@___asan_gen_.2750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 805, i32 2 }
@___asan_gen_.2759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 600, i32 2 }
@___asan_gen_.2761 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.2762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2761, i32 156, i32 2 }
@___asan_gen_.2771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 507, i32 2 }
@___asan_gen_.2774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 515, i32 4 }
@___asan_gen_.2777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 572, i32 2 }
@___asan_gen_.2786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 61, i32 2 }
@___asan_gen_.2792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2797, i32 695, i32 2 }
@___asan_gen_.2794 = private unnamed_addr constant [22 x i8] c"../include/net/sock.h\00", align 1
@___asan_gen_.2795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2794, i32 2444, i32 19 }
@___asan_gen_.2797 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.2798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2797, i32 723, i32 2 }
@___asan_gen_.2804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 834, i32 2 }
@___asan_gen_.2805 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.2809 = private constant [24 x i8] c"../net/rxrpc/af_rxrpc.c\00", align 1
@___asan_gen_.2810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2809, i32 843, i32 3 }
@___asan_gen_.2811 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2812 = private unnamed_addr constant [31 x i8] c"../include/net/netns/generic.h\00", align 1
@___asan_gen_.2813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2812, i32 45, i32 7 }
@llvm.compiler.used = appending global [1279 x ptr] [ptr @TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE, ptr @TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT, ptr @TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS, ptr @TRACE_SYSTEM_RXRPC_CALL_SLOW_START, ptr @TRACE_SYSTEM_rxrpc_call_connected, ptr @TRACE_SYSTEM_rxrpc_call_error, ptr @TRACE_SYSTEM_rxrpc_call_got, ptr @TRACE_SYSTEM_rxrpc_call_got_kernel, ptr @TRACE_SYSTEM_rxrpc_call_got_userid, ptr @TRACE_SYSTEM_rxrpc_call_new_client, ptr @TRACE_SYSTEM_rxrpc_call_new_service, ptr @TRACE_SYSTEM_rxrpc_call_put, ptr @TRACE_SYSTEM_rxrpc_call_put_kernel, ptr @TRACE_SYSTEM_rxrpc_call_put_noqueue, ptr @TRACE_SYSTEM_rxrpc_call_put_userid, ptr @TRACE_SYSTEM_rxrpc_call_queued, ptr @TRACE_SYSTEM_rxrpc_call_queued_ref, ptr @TRACE_SYSTEM_rxrpc_call_release, ptr @TRACE_SYSTEM_rxrpc_call_seen, ptr @TRACE_SYSTEM_rxrpc_client_activate_chans, ptr @TRACE_SYSTEM_rxrpc_client_alloc, ptr @TRACE_SYSTEM_rxrpc_client_chan_activate, ptr @TRACE_SYSTEM_rxrpc_client_chan_disconnect, ptr @TRACE_SYSTEM_rxrpc_client_chan_pass, ptr @TRACE_SYSTEM_rxrpc_client_chan_wait_failed, ptr @TRACE_SYSTEM_rxrpc_client_cleanup, ptr @TRACE_SYSTEM_rxrpc_client_discard, ptr @TRACE_SYSTEM_rxrpc_client_duplicate, ptr @TRACE_SYSTEM_rxrpc_client_exposed, ptr @TRACE_SYSTEM_rxrpc_client_replace, ptr @TRACE_SYSTEM_rxrpc_client_to_active, ptr @TRACE_SYSTEM_rxrpc_client_to_idle, ptr @TRACE_SYSTEM_rxrpc_cong_begin_retransmission, ptr @TRACE_SYSTEM_rxrpc_cong_cleared_nacks, ptr @TRACE_SYSTEM_rxrpc_cong_new_low_nack, ptr @TRACE_SYSTEM_rxrpc_cong_no_change, ptr @TRACE_SYSTEM_rxrpc_cong_progress, ptr @TRACE_SYSTEM_rxrpc_cong_retransmit_again, ptr @TRACE_SYSTEM_rxrpc_cong_rtt_window_end, ptr @TRACE_SYSTEM_rxrpc_cong_saw_nack, ptr @TRACE_SYSTEM_rxrpc_conn_got, ptr @TRACE_SYSTEM_rxrpc_conn_new_client, ptr @TRACE_SYSTEM_rxrpc_conn_new_service, ptr @TRACE_SYSTEM_rxrpc_conn_put_client, ptr @TRACE_SYSTEM_rxrpc_conn_put_service, ptr @TRACE_SYSTEM_rxrpc_conn_queued, ptr @TRACE_SYSTEM_rxrpc_conn_reap_service, ptr @TRACE_SYSTEM_rxrpc_conn_seen, ptr @TRACE_SYSTEM_rxrpc_local_got, ptr @TRACE_SYSTEM_rxrpc_local_new, ptr @TRACE_SYSTEM_rxrpc_local_processing, ptr @TRACE_SYSTEM_rxrpc_local_put, ptr @TRACE_SYSTEM_rxrpc_local_queued, ptr @TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end, ptr @TRACE_SYSTEM_rxrpc_propose_ack_input_data, ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life, ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive, ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack, ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply, ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params, ptr @TRACE_SYSTEM_rxrpc_propose_ack_processing_op, ptr @TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack, ptr @TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping, ptr @TRACE_SYSTEM_rxrpc_propose_ack_retry_tx, ptr @TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx, ptr @TRACE_SYSTEM_rxrpc_propose_ack_subsume, ptr @TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack, ptr @TRACE_SYSTEM_rxrpc_propose_ack_update, ptr @TRACE_SYSTEM_rxrpc_propose_ack_use, ptr @TRACE_SYSTEM_rxrpc_receive_end, ptr @TRACE_SYSTEM_rxrpc_receive_front, ptr @TRACE_SYSTEM_rxrpc_receive_incoming, ptr @TRACE_SYSTEM_rxrpc_receive_queue, ptr @TRACE_SYSTEM_rxrpc_receive_queue_last, ptr @TRACE_SYSTEM_rxrpc_receive_rotate, ptr @TRACE_SYSTEM_rxrpc_recvmsg_cont, ptr @TRACE_SYSTEM_rxrpc_recvmsg_data_return, ptr @TRACE_SYSTEM_rxrpc_recvmsg_dequeue, ptr @TRACE_SYSTEM_rxrpc_recvmsg_enter, ptr @TRACE_SYSTEM_rxrpc_recvmsg_full, ptr @TRACE_SYSTEM_rxrpc_recvmsg_hole, ptr @TRACE_SYSTEM_rxrpc_recvmsg_next, ptr @TRACE_SYSTEM_rxrpc_recvmsg_requeue, ptr @TRACE_SYSTEM_rxrpc_recvmsg_return, ptr @TRACE_SYSTEM_rxrpc_recvmsg_terminal, ptr @TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted, ptr @TRACE_SYSTEM_rxrpc_recvmsg_wait, ptr @TRACE_SYSTEM_rxrpc_rtt_rx_cancel, ptr @TRACE_SYSTEM_rxrpc_rtt_rx_lost, ptr @TRACE_SYSTEM_rxrpc_rtt_rx_obsolete, ptr @TRACE_SYSTEM_rxrpc_rtt_rx_ping_response, ptr @TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack, ptr @TRACE_SYSTEM_rxrpc_rtt_tx_cancel, ptr @TRACE_SYSTEM_rxrpc_rtt_tx_data, ptr @TRACE_SYSTEM_rxrpc_rtt_tx_no_slot, ptr @TRACE_SYSTEM_rxrpc_rtt_tx_ping, ptr @TRACE_SYSTEM_rxrpc_skb_cleaned, ptr @TRACE_SYSTEM_rxrpc_skb_freed, ptr @TRACE_SYSTEM_rxrpc_skb_got, ptr @TRACE_SYSTEM_rxrpc_skb_lost, ptr @TRACE_SYSTEM_rxrpc_skb_new, ptr @TRACE_SYSTEM_rxrpc_skb_purged, ptr @TRACE_SYSTEM_rxrpc_skb_received, ptr @TRACE_SYSTEM_rxrpc_skb_rotated, ptr @TRACE_SYSTEM_rxrpc_skb_seen, ptr @TRACE_SYSTEM_rxrpc_skb_unshared, ptr @TRACE_SYSTEM_rxrpc_skb_unshared_nomem, ptr @TRACE_SYSTEM_rxrpc_timer_begin, ptr @TRACE_SYSTEM_rxrpc_timer_exp_ack, ptr @TRACE_SYSTEM_rxrpc_timer_exp_hard, ptr @TRACE_SYSTEM_rxrpc_timer_exp_idle, ptr @TRACE_SYSTEM_rxrpc_timer_exp_keepalive, ptr @TRACE_SYSTEM_rxrpc_timer_exp_lost_ack, ptr @TRACE_SYSTEM_rxrpc_timer_exp_normal, ptr @TRACE_SYSTEM_rxrpc_timer_exp_ping, ptr @TRACE_SYSTEM_rxrpc_timer_exp_resend, ptr @TRACE_SYSTEM_rxrpc_timer_expired, ptr @TRACE_SYSTEM_rxrpc_timer_init_for_reply, ptr @TRACE_SYSTEM_rxrpc_timer_init_for_send_reply, ptr @TRACE_SYSTEM_rxrpc_timer_restart, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_ack, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_hard, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_idle, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_keepalive, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_normal, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_ping, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_resend, ptr @TRACE_SYSTEM_rxrpc_timer_set_for_send, ptr @TRACE_SYSTEM_rxrpc_transmit_await_reply, ptr @TRACE_SYSTEM_rxrpc_transmit_end, ptr @TRACE_SYSTEM_rxrpc_transmit_queue, ptr @TRACE_SYSTEM_rxrpc_transmit_queue_last, ptr @TRACE_SYSTEM_rxrpc_transmit_rotate, ptr @TRACE_SYSTEM_rxrpc_transmit_rotate_last, ptr @TRACE_SYSTEM_rxrpc_transmit_wait, ptr @TRACE_SYSTEM_rxrpc_tx_point_call_abort, ptr @TRACE_SYSTEM_rxrpc_tx_point_call_ack, ptr @TRACE_SYSTEM_rxrpc_tx_point_call_data_frag, ptr @TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag, ptr @TRACE_SYSTEM_rxrpc_tx_point_call_final_resend, ptr @TRACE_SYSTEM_rxrpc_tx_point_conn_abort, ptr @TRACE_SYSTEM_rxrpc_tx_point_reject, ptr @TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge, ptr @TRACE_SYSTEM_rxrpc_tx_point_rxkad_response, ptr @TRACE_SYSTEM_rxrpc_tx_point_version_keepalive, ptr @TRACE_SYSTEM_rxrpc_tx_point_version_reply, ptr @__TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE, ptr @__TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT, ptr @__TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS, ptr @__TRACE_SYSTEM_RXRPC_CALL_SLOW_START, ptr @__TRACE_SYSTEM_rxrpc_call_connected, ptr @__TRACE_SYSTEM_rxrpc_call_error, ptr @__TRACE_SYSTEM_rxrpc_call_got, ptr @__TRACE_SYSTEM_rxrpc_call_got_kernel, ptr @__TRACE_SYSTEM_rxrpc_call_got_userid, ptr @__TRACE_SYSTEM_rxrpc_call_new_client, ptr @__TRACE_SYSTEM_rxrpc_call_new_service, ptr @__TRACE_SYSTEM_rxrpc_call_put, ptr @__TRACE_SYSTEM_rxrpc_call_put_kernel, ptr @__TRACE_SYSTEM_rxrpc_call_put_noqueue, ptr @__TRACE_SYSTEM_rxrpc_call_put_userid, ptr @__TRACE_SYSTEM_rxrpc_call_queued, ptr @__TRACE_SYSTEM_rxrpc_call_queued_ref, ptr @__TRACE_SYSTEM_rxrpc_call_release, ptr @__TRACE_SYSTEM_rxrpc_call_seen, ptr @__TRACE_SYSTEM_rxrpc_client_activate_chans, ptr @__TRACE_SYSTEM_rxrpc_client_alloc, ptr @__TRACE_SYSTEM_rxrpc_client_chan_activate, ptr @__TRACE_SYSTEM_rxrpc_client_chan_disconnect, ptr @__TRACE_SYSTEM_rxrpc_client_chan_pass, ptr @__TRACE_SYSTEM_rxrpc_client_chan_wait_failed, ptr @__TRACE_SYSTEM_rxrpc_client_cleanup, ptr @__TRACE_SYSTEM_rxrpc_client_discard, ptr @__TRACE_SYSTEM_rxrpc_client_duplicate, ptr @__TRACE_SYSTEM_rxrpc_client_exposed, ptr @__TRACE_SYSTEM_rxrpc_client_replace, ptr @__TRACE_SYSTEM_rxrpc_client_to_active, ptr @__TRACE_SYSTEM_rxrpc_client_to_idle, ptr @__TRACE_SYSTEM_rxrpc_cong_begin_retransmission, ptr @__TRACE_SYSTEM_rxrpc_cong_cleared_nacks, ptr @__TRACE_SYSTEM_rxrpc_cong_new_low_nack, ptr @__TRACE_SYSTEM_rxrpc_cong_no_change, ptr @__TRACE_SYSTEM_rxrpc_cong_progress, ptr @__TRACE_SYSTEM_rxrpc_cong_retransmit_again, ptr @__TRACE_SYSTEM_rxrpc_cong_rtt_window_end, ptr @__TRACE_SYSTEM_rxrpc_cong_saw_nack, ptr @__TRACE_SYSTEM_rxrpc_conn_got, ptr @__TRACE_SYSTEM_rxrpc_conn_new_client, ptr @__TRACE_SYSTEM_rxrpc_conn_new_service, ptr @__TRACE_SYSTEM_rxrpc_conn_put_client, ptr @__TRACE_SYSTEM_rxrpc_conn_put_service, ptr @__TRACE_SYSTEM_rxrpc_conn_queued, ptr @__TRACE_SYSTEM_rxrpc_conn_reap_service, ptr @__TRACE_SYSTEM_rxrpc_conn_seen, ptr @__TRACE_SYSTEM_rxrpc_local_got, ptr @__TRACE_SYSTEM_rxrpc_local_new, ptr @__TRACE_SYSTEM_rxrpc_local_processing, ptr @__TRACE_SYSTEM_rxrpc_local_put, ptr @__TRACE_SYSTEM_rxrpc_local_queued, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_input_data, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_processing_op, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_retry_tx, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_subsume, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_update, ptr @__TRACE_SYSTEM_rxrpc_propose_ack_use, ptr @__TRACE_SYSTEM_rxrpc_receive_end, ptr @__TRACE_SYSTEM_rxrpc_receive_front, ptr @__TRACE_SYSTEM_rxrpc_receive_incoming, ptr @__TRACE_SYSTEM_rxrpc_receive_queue, ptr @__TRACE_SYSTEM_rxrpc_receive_queue_last, ptr @__TRACE_SYSTEM_rxrpc_receive_rotate, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_cont, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_data_return, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_dequeue, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_enter, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_full, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_hole, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_next, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_requeue, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_return, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_terminal, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted, ptr @__TRACE_SYSTEM_rxrpc_recvmsg_wait, ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_cancel, ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_lost, ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_obsolete, ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_ping_response, ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack, ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_cancel, ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_data, ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_no_slot, ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_ping, ptr @__TRACE_SYSTEM_rxrpc_skb_cleaned, ptr @__TRACE_SYSTEM_rxrpc_skb_freed, ptr @__TRACE_SYSTEM_rxrpc_skb_got, ptr @__TRACE_SYSTEM_rxrpc_skb_lost, ptr @__TRACE_SYSTEM_rxrpc_skb_new, ptr @__TRACE_SYSTEM_rxrpc_skb_purged, ptr @__TRACE_SYSTEM_rxrpc_skb_received, ptr @__TRACE_SYSTEM_rxrpc_skb_rotated, ptr @__TRACE_SYSTEM_rxrpc_skb_seen, ptr @__TRACE_SYSTEM_rxrpc_skb_unshared, ptr @__TRACE_SYSTEM_rxrpc_skb_unshared_nomem, ptr @__TRACE_SYSTEM_rxrpc_timer_begin, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_ack, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_hard, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_idle, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_keepalive, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_lost_ack, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_normal, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_ping, ptr @__TRACE_SYSTEM_rxrpc_timer_exp_resend, ptr @__TRACE_SYSTEM_rxrpc_timer_expired, ptr @__TRACE_SYSTEM_rxrpc_timer_init_for_reply, ptr @__TRACE_SYSTEM_rxrpc_timer_init_for_send_reply, ptr @__TRACE_SYSTEM_rxrpc_timer_restart, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_ack, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_hard, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_idle, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_keepalive, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_normal, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_ping, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_resend, ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_send, ptr @__TRACE_SYSTEM_rxrpc_transmit_await_reply, ptr @__TRACE_SYSTEM_rxrpc_transmit_end, ptr @__TRACE_SYSTEM_rxrpc_transmit_queue, ptr @__TRACE_SYSTEM_rxrpc_transmit_queue_last, ptr @__TRACE_SYSTEM_rxrpc_transmit_rotate, ptr @__TRACE_SYSTEM_rxrpc_transmit_rotate_last, ptr @__TRACE_SYSTEM_rxrpc_transmit_wait, ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_abort, ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_ack, ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_data_frag, ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag, ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_final_resend, ptr @__TRACE_SYSTEM_rxrpc_tx_point_conn_abort, ptr @__TRACE_SYSTEM_rxrpc_tx_point_reject, ptr @__TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge, ptr @__TRACE_SYSTEM_rxrpc_tx_point_rxkad_response, ptr @__TRACE_SYSTEM_rxrpc_tx_point_version_keepalive, ptr @__TRACE_SYSTEM_rxrpc_tx_point_version_reply, ptr @__UNIQUE_ID_alias694, ptr @__UNIQUE_ID_author691, ptr @__UNIQUE_ID_debug696, ptr @__UNIQUE_ID_debugtype695, ptr @__UNIQUE_ID_description690, ptr @__UNIQUE_ID_file692, ptr @__UNIQUE_ID_license693, ptr @__bpf_trace_tp_map_rxrpc_abort, ptr @__bpf_trace_tp_map_rxrpc_call, ptr @__bpf_trace_tp_map_rxrpc_call_complete, ptr @__bpf_trace_tp_map_rxrpc_call_reset, ptr @__bpf_trace_tp_map_rxrpc_client, ptr @__bpf_trace_tp_map_rxrpc_congest, ptr @__bpf_trace_tp_map_rxrpc_conn, ptr @__bpf_trace_tp_map_rxrpc_connect_call, ptr @__bpf_trace_tp_map_rxrpc_disconnect_call, ptr @__bpf_trace_tp_map_rxrpc_improper_term, ptr @__bpf_trace_tp_map_rxrpc_local, ptr @__bpf_trace_tp_map_rxrpc_notify_socket, ptr @__bpf_trace_tp_map_rxrpc_peer, ptr @__bpf_trace_tp_map_rxrpc_propose_ack, ptr @__bpf_trace_tp_map_rxrpc_receive, ptr @__bpf_trace_tp_map_rxrpc_recvmsg, ptr @__bpf_trace_tp_map_rxrpc_resend, ptr @__bpf_trace_tp_map_rxrpc_retransmit, ptr @__bpf_trace_tp_map_rxrpc_rtt_rx, ptr @__bpf_trace_tp_map_rxrpc_rtt_tx, ptr @__bpf_trace_tp_map_rxrpc_rx_abort, ptr @__bpf_trace_tp_map_rxrpc_rx_ack, ptr @__bpf_trace_tp_map_rxrpc_rx_data, ptr @__bpf_trace_tp_map_rxrpc_rx_discard_ack, ptr @__bpf_trace_tp_map_rxrpc_rx_done, ptr @__bpf_trace_tp_map_rxrpc_rx_eproto, ptr @__bpf_trace_tp_map_rxrpc_rx_icmp, ptr @__bpf_trace_tp_map_rxrpc_rx_lose, ptr @__bpf_trace_tp_map_rxrpc_rx_packet, ptr @__bpf_trace_tp_map_rxrpc_rx_rwind_change, ptr @__bpf_trace_tp_map_rxrpc_skb, ptr @__bpf_trace_tp_map_rxrpc_timer, ptr @__bpf_trace_tp_map_rxrpc_transmit, ptr @__bpf_trace_tp_map_rxrpc_tx_ack, ptr @__bpf_trace_tp_map_rxrpc_tx_data, ptr @__bpf_trace_tp_map_rxrpc_tx_fail, ptr @__bpf_trace_tp_map_rxrpc_tx_packet, ptr @__event_rxrpc_abort, ptr @__event_rxrpc_call, ptr @__event_rxrpc_call_complete, ptr @__event_rxrpc_call_reset, ptr @__event_rxrpc_client, ptr @__event_rxrpc_congest, ptr @__event_rxrpc_conn, ptr @__event_rxrpc_connect_call, ptr @__event_rxrpc_disconnect_call, ptr @__event_rxrpc_improper_term, ptr @__event_rxrpc_local, ptr @__event_rxrpc_notify_socket, ptr @__event_rxrpc_peer, ptr @__event_rxrpc_propose_ack, ptr @__event_rxrpc_receive, ptr @__event_rxrpc_recvmsg, ptr @__event_rxrpc_resend, ptr @__event_rxrpc_retransmit, ptr @__event_rxrpc_rtt_rx, ptr @__event_rxrpc_rtt_tx, ptr @__event_rxrpc_rx_abort, ptr @__event_rxrpc_rx_ack, ptr @__event_rxrpc_rx_data, ptr @__event_rxrpc_rx_discard_ack, ptr @__event_rxrpc_rx_done, ptr @__event_rxrpc_rx_eproto, ptr @__event_rxrpc_rx_icmp, ptr @__event_rxrpc_rx_lose, ptr @__event_rxrpc_rx_packet, ptr @__event_rxrpc_rx_rwind_change, ptr @__event_rxrpc_skb, ptr @__event_rxrpc_timer, ptr @__event_rxrpc_transmit, ptr @__event_rxrpc_tx_ack, ptr @__event_rxrpc_tx_data, ptr @__event_rxrpc_tx_fail, ptr @__event_rxrpc_tx_packet, ptr @__exitcall_af_rxrpc_exit, ptr @__initcall__kmod_rxrpc__712_1077_af_rxrpc_init6, ptr @__ksymtab_rxrpc_debug_id, ptr @__ksymtab_rxrpc_kernel_begin_call, ptr @__ksymtab_rxrpc_kernel_check_life, ptr @__ksymtab_rxrpc_kernel_end_call, ptr @__ksymtab_rxrpc_kernel_get_epoch, ptr @__ksymtab_rxrpc_kernel_new_call_notification, ptr @__ksymtab_rxrpc_kernel_set_max_life, ptr @__ksymtab_rxrpc_sock_set_min_security_level, ptr @__param_debug, ptr @__tracepoint_ptr_rxrpc_abort, ptr @__tracepoint_ptr_rxrpc_call, ptr @__tracepoint_ptr_rxrpc_call_complete, ptr @__tracepoint_ptr_rxrpc_call_reset, ptr @__tracepoint_ptr_rxrpc_client, ptr @__tracepoint_ptr_rxrpc_congest, ptr @__tracepoint_ptr_rxrpc_conn, ptr @__tracepoint_ptr_rxrpc_connect_call, ptr @__tracepoint_ptr_rxrpc_disconnect_call, ptr @__tracepoint_ptr_rxrpc_improper_term, ptr @__tracepoint_ptr_rxrpc_local, ptr @__tracepoint_ptr_rxrpc_notify_socket, ptr @__tracepoint_ptr_rxrpc_peer, ptr @__tracepoint_ptr_rxrpc_propose_ack, ptr @__tracepoint_ptr_rxrpc_receive, ptr @__tracepoint_ptr_rxrpc_recvmsg, ptr @__tracepoint_ptr_rxrpc_resend, ptr @__tracepoint_ptr_rxrpc_retransmit, ptr @__tracepoint_ptr_rxrpc_rtt_rx, ptr @__tracepoint_ptr_rxrpc_rtt_tx, ptr @__tracepoint_ptr_rxrpc_rx_abort, ptr @__tracepoint_ptr_rxrpc_rx_ack, ptr @__tracepoint_ptr_rxrpc_rx_data, ptr @__tracepoint_ptr_rxrpc_rx_discard_ack, ptr @__tracepoint_ptr_rxrpc_rx_done, ptr @__tracepoint_ptr_rxrpc_rx_eproto, ptr @__tracepoint_ptr_rxrpc_rx_icmp, ptr @__tracepoint_ptr_rxrpc_rx_lose, ptr @__tracepoint_ptr_rxrpc_rx_packet, ptr @__tracepoint_ptr_rxrpc_rx_rwind_change, ptr @__tracepoint_ptr_rxrpc_skb, ptr @__tracepoint_ptr_rxrpc_timer, ptr @__tracepoint_ptr_rxrpc_transmit, ptr @__tracepoint_ptr_rxrpc_tx_ack, ptr @__tracepoint_ptr_rxrpc_tx_data, ptr @__tracepoint_ptr_rxrpc_tx_fail, ptr @__tracepoint_ptr_rxrpc_tx_packet, ptr @__tracepoint_rxrpc_abort, ptr @__tracepoint_rxrpc_call, ptr @__tracepoint_rxrpc_call_complete, ptr @__tracepoint_rxrpc_call_reset, ptr @__tracepoint_rxrpc_client, ptr @__tracepoint_rxrpc_congest, ptr @__tracepoint_rxrpc_conn, ptr @__tracepoint_rxrpc_connect_call, ptr @__tracepoint_rxrpc_disconnect_call, ptr @__tracepoint_rxrpc_improper_term, ptr @__tracepoint_rxrpc_local, ptr @__tracepoint_rxrpc_notify_socket, ptr @__tracepoint_rxrpc_peer, ptr @__tracepoint_rxrpc_propose_ack, ptr @__tracepoint_rxrpc_receive, ptr @__tracepoint_rxrpc_recvmsg, ptr @__tracepoint_rxrpc_resend, ptr @__tracepoint_rxrpc_retransmit, ptr @__tracepoint_rxrpc_rtt_rx, ptr @__tracepoint_rxrpc_rtt_tx, ptr @__tracepoint_rxrpc_rx_abort, ptr @__tracepoint_rxrpc_rx_ack, ptr @__tracepoint_rxrpc_rx_data, ptr @__tracepoint_rxrpc_rx_discard_ack, ptr @__tracepoint_rxrpc_rx_done, ptr @__tracepoint_rxrpc_rx_eproto, ptr @__tracepoint_rxrpc_rx_icmp, ptr @__tracepoint_rxrpc_rx_lose, ptr @__tracepoint_rxrpc_rx_packet, ptr @__tracepoint_rxrpc_rx_rwind_change, ptr @__tracepoint_rxrpc_skb, ptr @__tracepoint_rxrpc_timer, ptr @__tracepoint_rxrpc_transmit, ptr @__tracepoint_rxrpc_tx_ack, ptr @__tracepoint_rxrpc_tx_data, ptr @__tracepoint_rxrpc_tx_fail, ptr @__tracepoint_rxrpc_tx_packet, ptr @af_rxrpc_exit, ptr @af_rxrpc_exit._entry, ptr @af_rxrpc_exit._entry.157, ptr @af_rxrpc_exit._entry.161, ptr @af_rxrpc_exit._entry.163, ptr @af_rxrpc_exit._entry_ptr, ptr @af_rxrpc_exit._entry_ptr.159, ptr @af_rxrpc_exit._entry_ptr.162, ptr @af_rxrpc_exit._entry_ptr.165, ptr @af_rxrpc_init._entry, ptr @af_rxrpc_init._entry.493, ptr @af_rxrpc_init._entry.496, ptr @af_rxrpc_init._entry.499, ptr @af_rxrpc_init._entry.502, ptr @af_rxrpc_init._entry.505, ptr @af_rxrpc_init._entry.508, ptr @af_rxrpc_init._entry.511, ptr @af_rxrpc_init._entry_ptr, ptr @af_rxrpc_init._entry_ptr.495, ptr @af_rxrpc_init._entry_ptr.498, ptr @af_rxrpc_init._entry_ptr.501, ptr @af_rxrpc_init._entry_ptr.504, ptr @af_rxrpc_init._entry_ptr.507, ptr @af_rxrpc_init._entry_ptr.510, ptr @af_rxrpc_init._entry_ptr.513, ptr @event_class_rxrpc_abort, ptr @event_class_rxrpc_call, ptr @event_class_rxrpc_call_complete, ptr @event_class_rxrpc_call_reset, ptr @event_class_rxrpc_client, ptr @event_class_rxrpc_congest, ptr @event_class_rxrpc_conn, ptr @event_class_rxrpc_connect_call, ptr @event_class_rxrpc_disconnect_call, ptr @event_class_rxrpc_improper_term, ptr @event_class_rxrpc_local, ptr @event_class_rxrpc_notify_socket, ptr @event_class_rxrpc_peer, ptr @event_class_rxrpc_propose_ack, ptr @event_class_rxrpc_receive, ptr @event_class_rxrpc_recvmsg, ptr @event_class_rxrpc_resend, ptr @event_class_rxrpc_retransmit, ptr @event_class_rxrpc_rtt_rx, ptr @event_class_rxrpc_rtt_tx, ptr @event_class_rxrpc_rx_abort, ptr @event_class_rxrpc_rx_ack, ptr @event_class_rxrpc_rx_data, ptr @event_class_rxrpc_rx_discard_ack, ptr @event_class_rxrpc_rx_done, ptr @event_class_rxrpc_rx_eproto, ptr @event_class_rxrpc_rx_icmp, ptr @event_class_rxrpc_rx_lose, ptr @event_class_rxrpc_rx_packet, ptr @event_class_rxrpc_rx_rwind_change, ptr @event_class_rxrpc_skb, ptr @event_class_rxrpc_timer, ptr @event_class_rxrpc_transmit, ptr @event_class_rxrpc_tx_ack, ptr @event_class_rxrpc_tx_data, ptr @event_class_rxrpc_tx_fail, ptr @event_class_rxrpc_tx_packet, ptr @event_rxrpc_abort, ptr @event_rxrpc_call, ptr @event_rxrpc_call_complete, ptr @event_rxrpc_call_reset, ptr @event_rxrpc_client, ptr @event_rxrpc_congest, ptr @event_rxrpc_conn, ptr @event_rxrpc_connect_call, ptr @event_rxrpc_disconnect_call, ptr @event_rxrpc_improper_term, ptr @event_rxrpc_local, ptr @event_rxrpc_notify_socket, ptr @event_rxrpc_peer, ptr @event_rxrpc_propose_ack, ptr @event_rxrpc_receive, ptr @event_rxrpc_recvmsg, ptr @event_rxrpc_resend, ptr @event_rxrpc_retransmit, ptr @event_rxrpc_rtt_rx, ptr @event_rxrpc_rtt_tx, ptr @event_rxrpc_rx_abort, ptr @event_rxrpc_rx_ack, ptr @event_rxrpc_rx_data, ptr @event_rxrpc_rx_discard_ack, ptr @event_rxrpc_rx_done, ptr @event_rxrpc_rx_eproto, ptr @event_rxrpc_rx_icmp, ptr @event_rxrpc_rx_lose, ptr @event_rxrpc_rx_packet, ptr @event_rxrpc_rx_rwind_change, ptr @event_rxrpc_skb, ptr @event_rxrpc_timer, ptr @event_rxrpc_transmit, ptr @event_rxrpc_tx_ack, ptr @event_rxrpc_tx_data, ptr @event_rxrpc_tx_fail, ptr @event_rxrpc_tx_packet, ptr @rxrpc_bind._entry, ptr @rxrpc_bind._entry.533, ptr @rxrpc_bind._entry.535, ptr @rxrpc_bind._entry_ptr, ptr @rxrpc_bind._entry_ptr.534, ptr @rxrpc_bind._entry_ptr.537, ptr @rxrpc_connect._entry, ptr @rxrpc_connect._entry.540, ptr @rxrpc_connect._entry_ptr, ptr @rxrpc_connect._entry_ptr.542, ptr @rxrpc_create._entry, ptr @rxrpc_create._entry.521, ptr @rxrpc_create._entry_ptr, ptr @rxrpc_create._entry_ptr.523, ptr @rxrpc_kernel_begin_call._entry, ptr @rxrpc_kernel_begin_call._entry.150, ptr @rxrpc_kernel_begin_call._entry_ptr, ptr @rxrpc_kernel_begin_call._entry_ptr.152, ptr @rxrpc_kernel_end_call._entry, ptr @rxrpc_kernel_end_call._entry_ptr, ptr @rxrpc_listen._entry, ptr @rxrpc_listen._entry.544, ptr @rxrpc_listen._entry.547, ptr @rxrpc_listen._entry_ptr, ptr @rxrpc_listen._entry_ptr.546, ptr @rxrpc_listen._entry_ptr.548, ptr @rxrpc_release._entry, ptr @rxrpc_release._entry_ptr, ptr @rxrpc_release_sock._entry, ptr @rxrpc_release_sock._entry.528, ptr @rxrpc_release_sock._entry_ptr, ptr @rxrpc_release_sock._entry_ptr.530, ptr @rxrpc_sendmsg._entry, ptr @rxrpc_sendmsg._entry.557, ptr @rxrpc_sendmsg._entry.559, ptr @rxrpc_sendmsg._entry_ptr, ptr @rxrpc_sendmsg._entry_ptr.558, ptr @rxrpc_sendmsg._entry_ptr.560, ptr @rxrpc_setsockopt._entry, ptr @rxrpc_setsockopt._entry_ptr, ptr @rxrpc_shutdown._entry, ptr @rxrpc_shutdown._entry_ptr, ptr @rxrpc_sock_destructor._entry, ptr @rxrpc_sock_destructor._entry.568, ptr @rxrpc_sock_destructor._entry_ptr, ptr @rxrpc_sock_destructor._entry_ptr.570, ptr @rxrpc_validate_address._entry, ptr @rxrpc_validate_address._entry_ptr, ptr @rxrpc_write_space._entry, ptr @rxrpc_write_space._entry_ptr, ptr @str__rxrpc__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @trace_event_fields_rxrpc_local, ptr @trace_event_type_funcs_rxrpc_local, ptr @print_fmt_rxrpc_local, ptr @trace_event_fields_rxrpc_peer, ptr @trace_event_type_funcs_rxrpc_peer, ptr @print_fmt_rxrpc_peer, ptr @trace_event_fields_rxrpc_conn, ptr @trace_event_type_funcs_rxrpc_conn, ptr @print_fmt_rxrpc_conn, ptr @trace_event_fields_rxrpc_client, ptr @trace_event_type_funcs_rxrpc_client, ptr @print_fmt_rxrpc_client, ptr @trace_event_fields_rxrpc_call, ptr @trace_event_type_funcs_rxrpc_call, ptr @print_fmt_rxrpc_call, ptr @trace_event_fields_rxrpc_skb, ptr @trace_event_type_funcs_rxrpc_skb, ptr @print_fmt_rxrpc_skb, ptr @trace_event_fields_rxrpc_rx_packet, ptr @trace_event_type_funcs_rxrpc_rx_packet, ptr @print_fmt_rxrpc_rx_packet, ptr @trace_event_fields_rxrpc_rx_done, ptr @trace_event_type_funcs_rxrpc_rx_done, ptr @print_fmt_rxrpc_rx_done, ptr @trace_event_fields_rxrpc_abort, ptr @trace_event_type_funcs_rxrpc_abort, ptr @print_fmt_rxrpc_abort, ptr @trace_event_fields_rxrpc_call_complete, ptr @trace_event_type_funcs_rxrpc_call_complete, ptr @print_fmt_rxrpc_call_complete, ptr @trace_event_fields_rxrpc_transmit, ptr @trace_event_type_funcs_rxrpc_transmit, ptr @print_fmt_rxrpc_transmit, ptr @trace_event_fields_rxrpc_rx_data, ptr @trace_event_type_funcs_rxrpc_rx_data, ptr @print_fmt_rxrpc_rx_data, ptr @trace_event_fields_rxrpc_rx_ack, ptr @trace_event_type_funcs_rxrpc_rx_ack, ptr @print_fmt_rxrpc_rx_ack, ptr @trace_event_fields_rxrpc_rx_abort, ptr @trace_event_type_funcs_rxrpc_rx_abort, ptr @print_fmt_rxrpc_rx_abort, ptr @trace_event_fields_rxrpc_rx_rwind_change, ptr @trace_event_type_funcs_rxrpc_rx_rwind_change, ptr @print_fmt_rxrpc_rx_rwind_change, ptr @trace_event_fields_rxrpc_tx_packet, ptr @trace_event_type_funcs_rxrpc_tx_packet, ptr @print_fmt_rxrpc_tx_packet, ptr @trace_event_fields_rxrpc_tx_data, ptr @trace_event_type_funcs_rxrpc_tx_data, ptr @print_fmt_rxrpc_tx_data, ptr @trace_event_fields_rxrpc_tx_ack, ptr @trace_event_type_funcs_rxrpc_tx_ack, ptr @print_fmt_rxrpc_tx_ack, ptr @trace_event_fields_rxrpc_receive, ptr @trace_event_type_funcs_rxrpc_receive, ptr @print_fmt_rxrpc_receive, ptr @trace_event_fields_rxrpc_recvmsg, ptr @trace_event_type_funcs_rxrpc_recvmsg, ptr @print_fmt_rxrpc_recvmsg, ptr @trace_event_fields_rxrpc_rtt_tx, ptr @trace_event_type_funcs_rxrpc_rtt_tx, ptr @print_fmt_rxrpc_rtt_tx, ptr @trace_event_fields_rxrpc_rtt_rx, ptr @trace_event_type_funcs_rxrpc_rtt_rx, ptr @print_fmt_rxrpc_rtt_rx, ptr @trace_event_fields_rxrpc_timer, ptr @trace_event_type_funcs_rxrpc_timer, ptr @print_fmt_rxrpc_timer, ptr @trace_event_fields_rxrpc_rx_lose, ptr @trace_event_type_funcs_rxrpc_rx_lose, ptr @print_fmt_rxrpc_rx_lose, ptr @trace_event_fields_rxrpc_propose_ack, ptr @trace_event_type_funcs_rxrpc_propose_ack, ptr @print_fmt_rxrpc_propose_ack, ptr @trace_event_fields_rxrpc_retransmit, ptr @trace_event_type_funcs_rxrpc_retransmit, ptr @print_fmt_rxrpc_retransmit, ptr @trace_event_fields_rxrpc_congest, ptr @trace_event_type_funcs_rxrpc_congest, ptr @print_fmt_rxrpc_congest, ptr @trace_event_fields_rxrpc_disconnect_call, ptr @trace_event_type_funcs_rxrpc_disconnect_call, ptr @print_fmt_rxrpc_disconnect_call, ptr @trace_event_fields_rxrpc_improper_term, ptr @trace_event_type_funcs_rxrpc_improper_term, ptr @print_fmt_rxrpc_improper_term, ptr @trace_event_fields_rxrpc_rx_eproto, ptr @trace_event_type_funcs_rxrpc_rx_eproto, ptr @print_fmt_rxrpc_rx_eproto, ptr @trace_event_fields_rxrpc_connect_call, ptr @trace_event_type_funcs_rxrpc_connect_call, ptr @print_fmt_rxrpc_connect_call, ptr @trace_event_fields_rxrpc_resend, ptr @trace_event_type_funcs_rxrpc_resend, ptr @print_fmt_rxrpc_resend, ptr @trace_event_fields_rxrpc_rx_icmp, ptr @trace_event_type_funcs_rxrpc_rx_icmp, ptr @print_fmt_rxrpc_rx_icmp, ptr @trace_event_fields_rxrpc_tx_fail, ptr @trace_event_type_funcs_rxrpc_tx_fail, ptr @print_fmt_rxrpc_tx_fail, ptr @trace_event_fields_rxrpc_call_reset, ptr @trace_event_type_funcs_rxrpc_call_reset, ptr @print_fmt_rxrpc_call_reset, ptr @trace_event_fields_rxrpc_notify_socket, ptr @trace_event_type_funcs_rxrpc_notify_socket, ptr @print_fmt_rxrpc_notify_socket, ptr @trace_event_fields_rxrpc_rx_discard_ack, ptr @trace_event_type_funcs_rxrpc_rx_discard_ack, ptr @print_fmt_rxrpc_rx_discard_ack, ptr @rxrpc_debug, ptr @rxrpc_debug_id, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.151, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @rxrpc_proto, ptr @rxrpc_n_tx_skbs, ptr @.str.158, ptr @.str.160, ptr @rxrpc_n_rx_skbs, ptr @rxrpc_workqueue, ptr @.str.164, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @trace_raw_output_rxrpc_local.symbols, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @trace_raw_output_rxrpc_peer.symbols, ptr @.str.181, ptr @.str.182, ptr @trace_raw_output_rxrpc_conn.symbols, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @trace_raw_output_rxrpc_client.symbols, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @trace_raw_output_rxrpc_call.symbols, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @trace_raw_output_rxrpc_skb.symbols, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @trace_raw_output_rxrpc_rx_packet.symbols, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @trace_raw_output_rxrpc_call_complete.symbols, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @trace_raw_output_rxrpc_transmit.symbols, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @trace_raw_output_rxrpc_rx_ack.symbols, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @trace_raw_output_rxrpc_tx_packet.symbols, ptr @trace_raw_output_rxrpc_tx_packet.symbols.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @trace_raw_output_rxrpc_tx_ack.symbols, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @trace_raw_output_rxrpc_receive.symbols, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @trace_raw_output_rxrpc_recvmsg.symbols, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @trace_raw_output_rxrpc_rtt_tx.symbols, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @trace_raw_output_rxrpc_rtt_rx.symbols, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @trace_raw_output_rxrpc_timer.symbols, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @.str.393, ptr @.str.394, ptr @.str.395, ptr @.str.396, ptr @.str.397, ptr @.str.398, ptr @.str.399, ptr @.str.400, ptr @.str.401, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @trace_raw_output_rxrpc_rx_lose.symbols, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @trace_raw_output_rxrpc_propose_ack.symbols, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @.str.416, ptr @.str.417, ptr @.str.418, ptr @.str.419, ptr @.str.420, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @.str.425, ptr @trace_raw_output_rxrpc_propose_ack.symbols.426, ptr @trace_raw_output_rxrpc_propose_ack.symbols.427, ptr @.str.428, ptr @.str.429, ptr @.str.430, ptr @.str.431, ptr @.str.432, ptr @.str.433, ptr @.str.434, ptr @.str.435, ptr @.str.436, ptr @.str.437, ptr @.str.438, ptr @.str.439, ptr @.str.440, ptr @trace_raw_output_rxrpc_congest.symbols, ptr @trace_raw_output_rxrpc_congest.symbols.441, ptr @.str.442, ptr @.str.443, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @trace_raw_output_rxrpc_congest.symbols.447, ptr @.str.448, ptr @.str.449, ptr @.str.450, ptr @.str.451, ptr @.str.452, ptr @.str.453, ptr @.str.454, ptr @.str.455, ptr @.str.456, ptr @.str.457, ptr @.str.458, ptr @.str.459, ptr @.str.460, ptr @.str.461, ptr @.str.462, ptr @.str.463, ptr @.str.464, ptr @.str.465, ptr @.str.466, ptr @.str.467, ptr @.str.468, ptr @.str.469, ptr @.str.470, ptr @.str.471, ptr @.str.472, ptr @trace_raw_output_rxrpc_tx_fail.symbols, ptr @.str.473, ptr @.str.474, ptr @.str.475, ptr @.str.476, ptr @.str.477, ptr @.str.478, ptr @.str.479, ptr @.str.480, ptr @.str.481, ptr @.str.482, ptr @.str.483, ptr @.str.484, ptr @.str.485, ptr @.str.486, ptr @.str.487, ptr @.str.488, ptr @.str.489, ptr @.str.490, ptr @.str.491, ptr @.str.492, ptr @.str.494, ptr @.str.497, ptr @.str.500, ptr @rxrpc_family_ops, ptr @.str.503, ptr @.str.506, ptr @.str.509, ptr @.str.512, ptr @.str.514, ptr @.str.515, ptr @rxrpc_rpc_ops, ptr @rxrpc_create.__key, ptr @.str.516, ptr @rxrpc_create.__key.517, ptr @.str.518, ptr @rxrpc_create.__key.519, ptr @.str.520, ptr @.str.522, ptr @.str.524, ptr @.str.525, ptr @.str.526, ptr @.str.527, ptr @.str.529, ptr @.str.531, ptr @.str.532, ptr @.str.536, ptr @.str.538, ptr @.str.539, ptr @.str.541, ptr @.str.543, ptr @.str.545, ptr @.str.549, ptr @.str.550, ptr @.str.551, ptr @.str.554, ptr @.str.555, ptr @.str.556, ptr @.str.561, ptr @.str.562, ptr @.str.563, ptr @.str.564, ptr @.str.565, ptr @.str.566, ptr @.str.567, ptr @.str.569, ptr @.str.571], section "llvm.metadata"
@0 = internal global [744 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__rxrpc__trace_system_name to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_local to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_local to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_local to i32), i32 238, i32 288, i32 ptrtoint (ptr @___asan_gen_.1032 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_local to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_peer to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_peer to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_peer to i32), i32 202, i32 256, i32 ptrtoint (ptr @___asan_gen_.1044 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_peer to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_conn to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_conn to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_conn to i32), i32 346, i32 416, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_conn to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_client to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_client to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_client to i32), i32 606, i32 736, i32 ptrtoint (ptr @___asan_gen_.1068 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_client to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_call to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1074 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_call to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_call to i32), i32 581, i32 736, i32 ptrtoint (ptr @___asan_gen_.1080 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_call to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_skb to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1086 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_skb to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1089 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_skb to i32), i32 461, i32 576, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_skb to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_packet to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_packet to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_packet to i32), i32 488, i32 608, i32 ptrtoint (ptr @___asan_gen_.1104 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_packet to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_done to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1110 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_done to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_done to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_abort to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_abort to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1125 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_abort to i32), i32 124, i32 160, i32 ptrtoint (ptr @___asan_gen_.1128 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_abort to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_call_complete to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_call_complete to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1137 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_call_complete to i32), i32 310, i32 384, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_call_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1143 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_transmit to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_transmit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_transmit to i32), i32 383, i32 448, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_transmit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1155 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_data to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_data to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_data to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_ack to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_ack to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_ack to i32), i32 306, i32 384, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_ack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_abort to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_abort to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1185 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_abort to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_abort to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_rwind_change to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1194 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_rwind_change to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1197 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_rwind_change to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_rwind_change to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_tx_packet to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1206 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_tx_packet to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_tx_packet to i32), i32 1195, i32 1504, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_tx_packet to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1215 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_tx_data to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_tx_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_tx_data to i32), i32 180, i32 224, i32 ptrtoint (ptr @___asan_gen_.1224 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_tx_data to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_tx_ack to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_tx_ack to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_tx_ack to i32), i32 298, i32 384, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_tx_ack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_receive to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_receive to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_receive to i32), i32 324, i32 416, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_receive to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_recvmsg to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_recvmsg to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_recvmsg to i32), i32 532, i32 672, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_recvmsg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rtt_tx to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1266 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rtt_tx to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rtt_tx to i32), i32 222, i32 256, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rtt_tx to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rtt_rx to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1278 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rtt_rx to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rtt_rx to i32), i32 332, i32 416, i32 ptrtoint (ptr @___asan_gen_.1284 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rtt_rx to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_timer to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_timer to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_timer to i32), i32 1157, i32 1472, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_timer to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_lose to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1302 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_lose to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_lose to i32), i32 495, i32 608, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_lose to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_propose_ack to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1314 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_propose_ack to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1317 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_propose_ack to i32), i32 1097, i32 1376, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_propose_ack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_retransmit to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_retransmit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1329 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_retransmit to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_retransmit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_congest to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_congest to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1341 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_congest to i32), i32 1194, i32 1504, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_congest to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1347 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_disconnect_call to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1350 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_disconnect_call to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1353 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_disconnect_call to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1356 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_disconnect_call to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1359 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_improper_term to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1362 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_improper_term to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_improper_term to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1368 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_improper_term to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1371 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_eproto to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1374 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_eproto to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1377 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_eproto to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_eproto to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1383 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_connect_call to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1386 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_connect_call to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1389 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_connect_call to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.1392 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_connect_call to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1395 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_resend to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1398 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_resend to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1401 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_resend to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1404 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_resend to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1407 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_icmp to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_icmp to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1413 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_icmp to i32), i32 182, i32 224, i32 ptrtoint (ptr @___asan_gen_.1416 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_icmp to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_tx_fail to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1422 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_tx_fail to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1425 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_tx_fail to i32), i32 618, i32 768, i32 ptrtoint (ptr @___asan_gen_.1428 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_tx_fail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1431 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_call_reset to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1434 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_call_reset to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1437 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_call_reset to i32), i32 148, i32 192, i32 ptrtoint (ptr @___asan_gen_.1440 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_call_reset to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1443 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_notify_socket to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1446 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_notify_socket to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1449 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_notify_socket to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1452 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_notify_socket to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1455 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rxrpc_rx_discard_ack to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1458 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rxrpc_rx_discard_ack to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1461 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rxrpc_rx_discard_ack to i32), i32 143, i32 192, i32 ptrtoint (ptr @___asan_gen_.1464 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rxrpc_rx_discard_ack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1467 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_debug to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1470 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1472 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_debug_id to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1473 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1475 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_kernel_begin_call._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_kernel_begin_call._entry.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_kernel_end_call._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_exit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_proto to i32), i32 252, i32 288, i32 ptrtoint (ptr @___asan_gen_.1512 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_n_tx_skbs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1515 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1517 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_exit._entry.157 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_n_rx_skbs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1527 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1529 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_exit._entry.161 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_workqueue to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1533 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1535 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_exit._entry.163 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_local.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_peer.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_conn.symbols to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_client.symbols to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_call.symbols to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_skb.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_rx_packet.symbols to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_call_complete.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_transmit.symbols to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_rx_ack.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_tx_packet.symbols to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_tx_packet.symbols.314 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_tx_ack.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_receive.symbols to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_recvmsg.symbols to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_rtt_tx.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_rtt_rx.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_timer.symbols to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.395 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.398 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_rx_lose.symbols to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_propose_ack.symbols to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.417 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_propose_ack.symbols.426 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_propose_ack.symbols.427 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.428 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.437 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.439 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_congest.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_congest.symbols.441 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.442 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_congest.symbols.447 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.450 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.453 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.454 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.456 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.457 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.460 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.463 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.466 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rxrpc_tx_fail.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2523 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.476 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.479 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.482 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_validate_address._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.484 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.490 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.493 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.494 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.496 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.497 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.499 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_family_ops to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2610 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.502 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.503 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.505 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.508 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.509 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rxrpc_init._entry.511 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_create._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.514 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_rpc_ops to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.2646 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_create.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2661 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_create.__key.517 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2661 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_create.__key.519 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2661 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_create._entry.521 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.522 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_release._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.524 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.525 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_release_sock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.527 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_release_sock._entry.528 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_bind._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.532 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_bind._entry.533 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_bind._entry.535 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.536 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_connect._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.538 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.539 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_connect._entry.540 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.541 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_listen._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_listen._entry.544 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.545 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_listen._entry.547 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_shutdown._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.549 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_setsockopt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.550 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.551 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.554 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_sendmsg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.555 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.556 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_sendmsg._entry.557 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_sendmsg._entry.559 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_write_space._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.561 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.562 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.563 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.564 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.565 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.566 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_sock_destructor._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.567 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rxrpc_sock_destructor._entry.568 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2805 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.569 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.571 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2811 to i32), i32 ptrtoint (ptr @___asan_gen_.2809 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2813 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_local(ptr nocapture readnone %__data, i32 noundef %local_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_local, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %local_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_peer(ptr nocapture readnone %__data, i32 noundef %peer_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_peer, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %peer_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_conn(ptr nocapture readnone %__data, i32 noundef %conn_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_conn, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %conn_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_client(ptr nocapture readnone %__data, ptr noundef %conn, i32 noundef %channel, i32 noundef %op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_client, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %conn, i32 noundef %channel, i32 noundef %op) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_call(ptr nocapture readnone %__data, i32 noundef %call_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where, ptr noundef %aux) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_call, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %call_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where, ptr noundef %aux) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_skb(ptr nocapture readnone %__data, ptr noundef %skb, i32 noundef %op, i32 noundef %usage, i32 noundef %mod_count, i8 noundef zeroext %flags, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_skb, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb, i32 noundef %op, i32 noundef %usage, i32 noundef %mod_count, i8 noundef zeroext %flags, ptr noundef %where) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_packet(ptr nocapture readnone %__data, ptr noundef %sp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_packet, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sp) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_done(ptr nocapture readnone %__data, i32 noundef %result, i32 noundef %abort_code) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %result, i32 noundef %abort_code) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_abort(ptr nocapture readnone %__data, i32 noundef %call_nr, ptr noundef %why, i32 noundef %cid, i32 noundef %call_id, i32 noundef %seq, i32 noundef %abort_code, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_abort, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %call_nr, ptr noundef %why, i32 noundef %cid, i32 noundef %call_id, i32 noundef %seq, i32 noundef %abort_code, i32 noundef %error) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_call_complete(ptr nocapture readnone %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_call_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_transmit(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_transmit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_data(ptr nocapture readnone %__data, i32 noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i8 noundef zeroext %anno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i8 noundef zeroext %anno) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_ack(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %serial, i32 noundef %ack_serial, i32 noundef %first, i32 noundef %prev, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_ack, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %serial, i32 noundef %ack_serial, i32 noundef %first, i32 noundef %prev, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_abort(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %serial, i32 noundef %abort_code) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_abort, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %serial, i32 noundef %abort_code) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_rwind_change(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %serial, i32 noundef %rwind, i1 noundef zeroext %wake) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_rwind_change, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %serial, i32 noundef %rwind, i1 noundef zeroext %wake) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_tx_packet(ptr nocapture readnone %__data, i32 noundef %call_id, ptr noundef %whdr, i32 noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_tx_packet, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %call_id, ptr noundef %whdr, i32 noundef %where) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_tx_data(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i1 noundef zeroext %retrans, i1 noundef zeroext %lose) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_tx_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body3_crit_edge

entry.do.body3_crit_edge:                         ; preds = %entry
  br label %do.body3

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body3:                                         ; preds = %do.body3.do.body3_crit_edge, %entry.do.body3_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body3.do.body3_crit_edge ], [ %0, %entry.do.body3_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i1 noundef zeroext %retrans, i1 noundef zeroext %lose) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool12.not = icmp eq ptr %6, null
  br i1 %tobool12.not, label %do.body3.if.end_crit_edge, label %do.body3.do.body3_crit_edge

do.body3.do.body3_crit_edge:                      ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body3

do.body3.if.end_crit_edge:                        ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body3.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_tx_ack(ptr nocapture readnone %__data, i32 noundef %call, i32 noundef %serial, i32 noundef %ack_first, i32 noundef %ack_serial, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_tx_ack, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %call, i32 noundef %serial, i32 noundef %ack_first, i32 noundef %ack_serial, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_receive(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why, i32 noundef %serial, i32 noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_receive, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why, i32 noundef %serial, i32 noundef %seq) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_recvmsg(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why, i32 noundef %seq, i32 noundef %offset, i32 noundef %len, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_recvmsg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why, i32 noundef %seq, i32 noundef %offset, i32 noundef %len, i32 noundef %ret) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rtt_tx(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rtt_tx, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rtt_rx(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial, i32 noundef %resp_serial, i32 noundef %rtt, i32 noundef %rto) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rtt_rx, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial, i32 noundef %resp_serial, i32 noundef %rtt, i32 noundef %rto) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_timer(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why, i32 noundef %now) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_timer, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why, i32 noundef %now) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_lose(ptr nocapture readnone %__data, ptr noundef %sp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_lose, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sp) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_propose_ack(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %why, i8 noundef zeroext %ack_reason, i32 noundef %serial, i1 noundef zeroext %immediate, i1 noundef zeroext %background, i32 noundef %outcome) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_propose_ack, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body3_crit_edge

entry.do.body3_crit_edge:                         ; preds = %entry
  br label %do.body3

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body3:                                         ; preds = %do.body3.do.body3_crit_edge, %entry.do.body3_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body3.do.body3_crit_edge ], [ %0, %entry.do.body3_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %why, i8 noundef zeroext %ack_reason, i32 noundef %serial, i1 noundef zeroext %immediate, i1 noundef zeroext %background, i32 noundef %outcome) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool12.not = icmp eq ptr %6, null
  br i1 %tobool12.not, label %do.body3.if.end_crit_edge, label %do.body3.do.body3_crit_edge

do.body3.do.body3_crit_edge:                      ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body3

do.body3.if.end_crit_edge:                        ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body3.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_retransmit(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %seq, i8 noundef zeroext %annotation, i64 noundef %expiry) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_retransmit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %seq, i8 noundef zeroext %annotation, i64 noundef %expiry) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_congest(ptr nocapture readnone %__data, ptr noundef %call, ptr noundef %summary, i32 noundef %ack_serial, i32 noundef %change) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_congest, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, ptr noundef %summary, i32 noundef %ack_serial, i32 noundef %change) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_disconnect_call(ptr nocapture readnone %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_disconnect_call, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_improper_term(ptr nocapture readnone %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_improper_term, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_eproto(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %serial, ptr noundef %why) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_eproto, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %serial, ptr noundef %why) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_connect_call(ptr nocapture readnone %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_connect_call, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_resend(ptr nocapture readnone %__data, ptr noundef %call, i32 noundef %ix) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_resend, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call, i32 noundef %ix) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_icmp(ptr nocapture readnone %__data, ptr noundef %peer, ptr noundef %ee, ptr noundef %srx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_icmp, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %peer, ptr noundef %ee, ptr noundef %srx) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_tx_fail(ptr nocapture readnone %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %ret, i32 noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_tx_fail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %ret, i32 noundef %where) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_call_reset(ptr nocapture readnone %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_call_reset, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %call) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_notify_socket(ptr nocapture readnone %__data, i32 noundef %debug_id, i32 noundef %serial) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_notify_socket, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %debug_id, i32 noundef %serial) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rxrpc_rx_discard_ack(ptr nocapture readnone %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %first_soft_ack, i32 noundef %call_ackr_first, i32 noundef %prev_pkt, i32 noundef %call_ackr_prev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_rx_discard_ack, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %first_soft_ack, i32 noundef %call_ackr_first, i32 noundef %prev_pkt, i32 noundef %call_ackr_prev) #14
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_local(ptr noundef %__data, i32 noundef %local_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %local = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %local to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %local_debug_id, ptr %local, align 4
  %op6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %op6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %op, ptr %op6, align 4
  %usage7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %usage7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %usage, ptr %usage7, align 4
  %where8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %where8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %where, ptr %where8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_local(ptr noundef %__data, i32 noundef %local_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %local = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %local to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %local_debug_id, ptr %local, align 4
  %op17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %op17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %op, ptr %op17, align 4
  %usage18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %usage18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %usage, ptr %usage18, align 4
  %where19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %where19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %where, ptr %where19, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_peer(ptr noundef %__data, i32 noundef %peer_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %peer = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %peer to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %peer_debug_id, ptr %peer, align 4
  %op6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %op6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %op, ptr %op6, align 4
  %usage7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %usage7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %usage, ptr %usage7, align 4
  %where8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %where8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %where, ptr %where8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_peer(ptr noundef %__data, i32 noundef %peer_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %peer = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %peer to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %peer_debug_id, ptr %peer, align 4
  %op17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %op17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %op, ptr %op17, align 4
  %usage18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %usage18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %usage, ptr %usage18, align 4
  %where19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %where19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %where, ptr %where19, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_conn(ptr noundef %__data, i32 noundef %conn_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %conn = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %conn to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %conn_debug_id, ptr %conn, align 4
  %op6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %op6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %op, ptr %op6, align 4
  %usage7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %usage7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %usage, ptr %usage7, align 4
  %where8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %where8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %where, ptr %where8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_conn(ptr noundef %__data, i32 noundef %conn_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %conn = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %conn to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conn_debug_id, ptr %conn, align 4
  %op17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %op17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %op, ptr %op17, align 4
  %usage18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %usage18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %usage, ptr %usage18, align 4
  %where19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %where19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %where, ptr %where19, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_client(ptr noundef %__data, ptr noundef %conn, i32 noundef %channel, i32 noundef %op) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %conn, null
  br i1 %tobool6.not, label %cond.end13.critedge, label %cond.true

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_connection, ptr %conn, i32 0, i32 23
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 8
  %conn7.c41 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %conn7.c41 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %conn7.c41, align 4
  %channel8.c42 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %channel8.c42 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %channel, ptr %channel8.c42, align 4
  %usage = getelementptr inbounds %struct.rxrpc_connection, ptr %conn, i32 0, i32 2
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %usage, i32 noundef 4) #14
  %7 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %usage, align 4
  %usage15.c43 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %usage15.c43 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %usage15.c43, align 4
  %op16.c44 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %op16.c44 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %op, ptr %op16.c44, align 4
  %cid = getelementptr inbounds %struct.anon, ptr %conn, i32 0, i32 1
  %11 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cid, align 4
  br label %cond.end20

cond.end13.critedge:                              ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %conn7.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 1
  %13 = ptrtoint ptr %conn7.c to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %conn7.c, align 4
  %channel8.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %channel8.c to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %channel, ptr %channel8.c, align 4
  %usage15.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %usage15.c to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -2, ptr %usage15.c, align 4
  %op16.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %op16.c to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %op, ptr %op16.c, align 4
  br label %cond.end20

cond.end20:                                       ; preds = %cond.end13.critedge, %cond.true
  %cond21 = phi i32 [ %12, %cond.true ], [ 0, %cond.end13.critedge ]
  %cid22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call3, i32 0, i32 2
  %17 = ptrtoint ptr %cid22 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %cond21, ptr %cid22, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end20, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_client(ptr noundef %__data, ptr noundef %conn, i32 noundef %channel, i32 noundef %op) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %conn, null
  br i1 %tobool17.not, label %cond.end24.critedge, label %cond.true

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_connection, ptr %conn, i32 0, i32 23
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 8
  %conn18.c64 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %conn18.c64 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %conn18.c64, align 4
  %channel19.c65 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %channel19.c65 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %channel, ptr %channel19.c65, align 4
  %usage = getelementptr inbounds %struct.rxrpc_connection, ptr %conn, i32 0, i32 2
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %usage, i32 noundef 4) #14
  %31 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %usage, align 4
  %usage26.c66 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %usage26.c66 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %usage26.c66, align 4
  %op27.c67 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 5
  %34 = ptrtoint ptr %op27.c67 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %op, ptr %op27.c67, align 4
  %cid = getelementptr inbounds %struct.anon, ptr %conn, i32 0, i32 1
  %35 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cid, align 4
  br label %cond.end31

cond.end24.critedge:                              ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  %conn18.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 1
  %37 = ptrtoint ptr %conn18.c to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %conn18.c, align 4
  %channel19.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %channel19.c to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %channel, ptr %channel19.c, align 4
  %usage26.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %usage26.c to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 -2, ptr %usage26.c, align 4
  %op27.c = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %op27.c to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %op, ptr %op27.c, align 4
  br label %cond.end31

cond.end31:                                       ; preds = %cond.end24.critedge, %cond.true
  %cond32 = phi i32 [ %36, %cond.true ], [ 0, %cond.end24.critedge ]
  %cid33 = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %call13, i32 0, i32 2
  %41 = ptrtoint ptr %cid33 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %cond32, ptr %cid33, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end31, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_call(ptr noundef %__data, i32 noundef %call_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where, ptr noundef %aux) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %call6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call_debug_id, ptr %call6, align 4
  %op7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %op7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %op, ptr %op7, align 4
  %usage8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %usage8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %usage, ptr %usage8, align 4
  %where9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %where9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %where, ptr %where9, align 4
  %aux10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %aux10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %aux, ptr %aux10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_call(ptr noundef %__data, i32 noundef %call_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where, ptr noundef %aux) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %call17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %call_debug_id, ptr %call17, align 4
  %op18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %op18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %op, ptr %op18, align 4
  %usage19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %usage19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %usage, ptr %usage19, align 4
  %where20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %where20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %where, ptr %where20, align 4
  %aux21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %aux21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %aux, ptr %aux21, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_skb(ptr noundef %__data, ptr noundef %skb, i32 noundef %op, i32 noundef %usage, i32 noundef %mod_count, i8 noundef zeroext %flags, ptr noundef %where) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %skb6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skb6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %skb6, align 4
  %flags7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call3, i32 0, i32 3
  %4 = ptrtoint ptr %flags7 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %flags, ptr %flags7, align 4
  %op8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %op8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %op, ptr %op8, align 4
  %usage9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %usage9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %usage, ptr %usage9, align 4
  %mod_count10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %mod_count10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %mod_count, ptr %mod_count10, align 4
  %where11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %where11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %where, ptr %where11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_skb(ptr noundef %__data, ptr noundef %skb, i32 noundef %op, i32 noundef %usage, i32 noundef %mod_count, i8 noundef zeroext %flags, ptr noundef %where) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skb17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skb17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %skb, ptr %skb17, align 4
  %flags18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call13, i32 0, i32 3
  %28 = ptrtoint ptr %flags18 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %flags, ptr %flags18, align 4
  %op19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %op19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %op, ptr %op19, align 4
  %usage20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %usage20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %usage, ptr %usage20, align 4
  %mod_count21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %mod_count21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %mod_count, ptr %mod_count21, align 4
  %where22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %where22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %where, ptr %where22, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_packet(ptr noundef %__data, ptr nocapture noundef readonly %sp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %hdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %call3, i32 0, i32 1
  %hdr6 = getelementptr inbounds %struct.rxrpc_skb_priv, ptr %sp, i32 0, i32 4
  %3 = call ptr @memcpy(ptr %hdr, ptr %hdr6, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_packet(ptr noundef %__data, ptr nocapture noundef readonly %sp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %hdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %call13, i32 0, i32 1
  %hdr17 = getelementptr inbounds %struct.rxrpc_skb_priv, ptr %sp, i32 0, i32 4
  %27 = call ptr @memcpy(ptr %hdr, ptr %hdr17, i32 28)
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_done(ptr noundef %__data, i32 noundef %result, i32 noundef %abort_code) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %result6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_done, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %result6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %result, ptr %result6, align 4
  %abort_code7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_done, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %abort_code7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %abort_code, ptr %abort_code7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_done(ptr noundef %__data, i32 noundef %result, i32 noundef %abort_code) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %result17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_done, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %result17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %result, ptr %result17, align 4
  %abort_code18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_done, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %abort_code18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %abort_code, ptr %abort_code18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_abort(ptr noundef %__data, i32 noundef %call_nr, ptr nocapture noundef readonly %why, i32 noundef %cid, i32 noundef %call_id, i32 noundef %seq, i32 noundef %abort_code, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %why6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %why to i32
  call void @__asan_loadN_noabort(i32 %3, i32 4)
  %4 = load i32, ptr %why, align 1
  %5 = ptrtoint ptr %why6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %why6, align 4
  %call_nr7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %call_nr7 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call_nr, ptr %call_nr7, align 4
  %cid8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %cid8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %cid, ptr %cid8, align 4
  %call_id9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %call_id9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call_id, ptr %call_id9, align 4
  %abort_code10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 6
  %9 = ptrtoint ptr %abort_code10 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %abort_code, ptr %abort_code10, align 4
  %error11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 7
  %10 = ptrtoint ptr %error11 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %error, ptr %error11, align 4
  %seq12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %seq12 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %seq, ptr %seq12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_abort(ptr noundef %__data, i32 noundef %call_nr, ptr nocapture noundef readonly %why, i32 noundef %cid, i32 noundef %call_id, i32 noundef %seq, i32 noundef %abort_code, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %why17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %why to i32
  call void @__asan_loadN_noabort(i32 %27, i32 4)
  %28 = load i32, ptr %why, align 1
  %29 = ptrtoint ptr %why17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %why17, align 4
  %call_nr18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %call_nr18 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %call_nr, ptr %call_nr18, align 4
  %cid19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %cid19 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %cid, ptr %cid19, align 4
  %call_id20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %call_id20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %call_id, ptr %call_id20, align 4
  %abort_code21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 6
  %33 = ptrtoint ptr %abort_code21 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %abort_code, ptr %abort_code21, align 4
  %error22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 7
  %34 = ptrtoint ptr %error22 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %error, ptr %error22, align 4
  %seq23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %seq23 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %seq, ptr %seq23, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_call_complete(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %completion = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 41
  %6 = ptrtoint ptr %completion to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %completion, align 4
  %compl = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call4, i32 0, i32 2
  %8 = ptrtoint ptr %compl to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %compl, align 4
  %error = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 39
  %9 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %error, align 4
  %error8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call4, i32 0, i32 3
  %11 = ptrtoint ptr %error8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %error8, align 4
  %abort_code = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 38
  %12 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %abort_code, align 8
  %abort_code9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call4, i32 0, i32 4
  %14 = ptrtoint ptr %abort_code9 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %abort_code9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_call_complete(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %completion = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 41
  %30 = ptrtoint ptr %completion to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %completion, align 4
  %compl = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call14, i32 0, i32 2
  %32 = ptrtoint ptr %compl to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %compl, align 4
  %error = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 39
  %33 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %error, align 4
  %error19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call14, i32 0, i32 3
  %35 = ptrtoint ptr %error19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %error19, align 4
  %abort_code = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 38
  %36 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %abort_code, align 8
  %abort_code20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %call14, i32 0, i32 4
  %38 = ptrtoint ptr %abort_code20 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %abort_code20, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_transmit(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %why8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %why8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why8, align 4
  %tx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 54
  %7 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tx_hard_ack, align 8
  %tx_hard_ack9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call4, i32 0, i32 3
  %9 = ptrtoint ptr %tx_hard_ack9 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %tx_hard_ack9, align 4
  %tx_top = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 55
  %10 = ptrtoint ptr %tx_top to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tx_top, align 4
  %tx_top10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call4, i32 0, i32 4
  %12 = ptrtoint ptr %tx_top10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %tx_top10, align 4
  %tx_winsize = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 69
  %13 = ptrtoint ptr %tx_winsize to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %tx_winsize, align 1
  %conv = zext i8 %14 to i32
  %tx_winsize11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call4, i32 0, i32 5
  %15 = ptrtoint ptr %tx_winsize11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv, ptr %tx_winsize11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_transmit(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %why19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %why19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why19, align 4
  %tx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 54
  %31 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %tx_hard_ack, align 8
  %tx_hard_ack20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call14, i32 0, i32 3
  %33 = ptrtoint ptr %tx_hard_ack20 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %tx_hard_ack20, align 4
  %tx_top = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 55
  %34 = ptrtoint ptr %tx_top to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %tx_top, align 4
  %tx_top21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call14, i32 0, i32 4
  %36 = ptrtoint ptr %tx_top21 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %tx_top21, align 4
  %tx_winsize = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 69
  %37 = ptrtoint ptr %tx_winsize to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %tx_winsize, align 1
  %conv = zext i8 %38 to i32
  %tx_winsize22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %call14, i32 0, i32 5
  %39 = ptrtoint ptr %tx_winsize22 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %conv, ptr %tx_winsize22, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_data(ptr noundef %__data, i32 noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i8 noundef zeroext %anno) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call4, i32 0, i32 1
  %3 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %call7, align 4
  %seq8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call4, i32 0, i32 2
  %4 = ptrtoint ptr %seq8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %seq, ptr %seq8, align 4
  %serial9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call4, i32 0, i32 3
  %5 = ptrtoint ptr %serial9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %serial, ptr %serial9, align 4
  %flags10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call4, i32 0, i32 4
  %6 = ptrtoint ptr %flags10 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %flags, ptr %flags10, align 4
  %anno11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call4, i32 0, i32 5
  %7 = ptrtoint ptr %anno11 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %anno, ptr %anno11, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_data(ptr noundef %__data, i32 noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i8 noundef zeroext %anno) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %call, ptr %call18, align 4
  %seq19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %seq19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %seq, ptr %seq19, align 4
  %serial20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %serial20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %serial, ptr %serial20, align 4
  %flags21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call14, i32 0, i32 4
  %30 = ptrtoint ptr %flags21 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %flags, ptr %flags21, align 4
  %anno22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %call14, i32 0, i32 5
  %31 = ptrtoint ptr %anno22 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %anno, ptr %anno22, align 1
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_ack(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %serial, i32 noundef %ack_serial, i32 noundef %first, i32 noundef %prev, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %serial8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %serial8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %serial, ptr %serial8, align 4
  %ack_serial9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %ack_serial9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %ack_serial, ptr %ack_serial9, align 4
  %first10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %first10 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %first, ptr %first10, align 4
  %prev11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 5
  %9 = ptrtoint ptr %prev11 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %prev, ptr %prev11, align 4
  %reason12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 6
  %10 = ptrtoint ptr %reason12 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %reason, ptr %reason12, align 4
  %n_acks13 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call4, i32 0, i32 7
  %11 = ptrtoint ptr %n_acks13 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %n_acks, ptr %n_acks13, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_ack(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %serial, i32 noundef %ack_serial, i32 noundef %first, i32 noundef %prev, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %serial19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %serial19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %serial, ptr %serial19, align 4
  %ack_serial20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %ack_serial20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %ack_serial, ptr %ack_serial20, align 4
  %first21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 4
  %32 = ptrtoint ptr %first21 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %first, ptr %first21, align 4
  %prev22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 5
  %33 = ptrtoint ptr %prev22 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %prev, ptr %prev22, align 4
  %reason23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 6
  %34 = ptrtoint ptr %reason23 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %reason, ptr %reason23, align 4
  %n_acks24 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %call14, i32 0, i32 7
  %35 = ptrtoint ptr %n_acks24 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %n_acks, ptr %n_acks24, align 1
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_abort(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %serial, i32 noundef %abort_code) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %serial8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %serial8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %serial, ptr %serial8, align 4
  %abort_code9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %abort_code9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %abort_code, ptr %abort_code9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_abort(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %serial, i32 noundef %abort_code) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %serial19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %serial19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %serial, ptr %serial19, align 4
  %abort_code20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %abort_code20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %abort_code, ptr %abort_code20, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 20, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_rwind_change(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %serial, i32 noundef %rwind, i1 noundef zeroext %wake) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %frombool = zext i1 %wake to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call8, align 4
  %serial9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %serial9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %serial, ptr %serial9, align 4
  %rwind10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %rwind10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %rwind, ptr %rwind10, align 4
  %wake12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %wake12 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %frombool, ptr %wake12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_rwind_change(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %serial, i32 noundef %rwind, i1 noundef zeroext %wake) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %frombool = zext i1 %wake to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true9, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true9:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true9.cleanup_crit_edge, label %land.lhs.true9.if.end_crit_edge

land.lhs.true9.if.end_crit_edge:                  ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true9.cleanup_crit_edge:                 ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true9.if.end_crit_edge, %entry.if.end_crit_edge
  %call15 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end.cleanup_crit_edge, label %if.end18

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call15, i32 0, i32 1
  %29 = ptrtoint ptr %call19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call19, align 4
  %serial20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call15, i32 0, i32 2
  %30 = ptrtoint ptr %serial20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %serial, ptr %serial20, align 4
  %rwind21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call15, i32 0, i32 3
  %31 = ptrtoint ptr %rwind21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %rwind, ptr %rwind21, align 4
  %wake23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %call15, i32 0, i32 4
  %32 = ptrtoint ptr %wake23 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %frombool, ptr %wake23, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call15, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end.cleanup_crit_edge, %land.lhs.true9.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_tx_packet(ptr noundef %__data, i32 noundef %call_id, ptr nocapture noundef readonly %whdr, i32 noundef %where) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %call6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call_id, ptr %call6, align 4
  %whdr7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %call3, i32 0, i32 3
  %4 = call ptr @memcpy(ptr %whdr7, ptr %whdr, i32 28)
  %where8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %where8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %where, ptr %where8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_tx_packet(ptr noundef %__data, i32 noundef %call_id, ptr nocapture noundef readonly %whdr, i32 noundef %where) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %call17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %call_id, ptr %call17, align 4
  %whdr18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %call13, i32 0, i32 3
  %28 = call ptr @memcpy(ptr %whdr18, ptr %whdr, i32 28)
  %where19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %where19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %where, ptr %where19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_tx_data(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i1 noundef zeroext %retrans, i1 noundef zeroext %lose) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %frombool = zext i1 %retrans to i8
  %frombool1 = zext i1 %lose to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call6 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end.cleanup_crit_edge, label %if.end9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 1
  %5 = ptrtoint ptr %call10 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call10, align 4
  %cid = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 47
  %6 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cid, align 8
  %cid11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 4
  %8 = ptrtoint ptr %cid11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cid11, align 4
  %call_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 46
  %9 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call_id, align 4
  %call_id12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 5
  %11 = ptrtoint ptr %call_id12 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %call_id12, align 4
  %seq13 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 2
  %12 = ptrtoint ptr %seq13 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %seq, ptr %seq13, align 4
  %serial14 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 3
  %13 = ptrtoint ptr %serial14 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %serial, ptr %serial14, align 4
  %flags15 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 6
  %14 = ptrtoint ptr %flags15 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %flags, ptr %flags15, align 4
  %retrans17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 7
  %15 = ptrtoint ptr %retrans17 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %frombool, ptr %retrans17, align 1
  %lose20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call6, i32 0, i32 8
  %16 = ptrtoint ptr %lose20 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %frombool1, ptr %lose20, align 2
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_tx_data(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i1 noundef zeroext %retrans, i1 noundef zeroext %lose) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %frombool = zext i1 %retrans to i8
  %frombool1 = zext i1 %lose to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true11, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true11:                                  ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true11.cleanup_crit_edge, label %land.lhs.true11.if.end_crit_edge

land.lhs.true11.if.end_crit_edge:                 ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true11.if.end_crit_edge, %entry.if.end_crit_edge
  %call17 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.end.cleanup_crit_edge, label %if.end20

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 1
  %29 = ptrtoint ptr %call21 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call21, align 4
  %cid = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 47
  %30 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cid, align 8
  %cid22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 4
  %32 = ptrtoint ptr %cid22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cid22, align 4
  %call_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 46
  %33 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %call_id, align 4
  %call_id23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 5
  %35 = ptrtoint ptr %call_id23 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %call_id23, align 4
  %seq24 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 2
  %36 = ptrtoint ptr %seq24 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %seq, ptr %seq24, align 4
  %serial25 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 3
  %37 = ptrtoint ptr %serial25 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %serial, ptr %serial25, align 4
  %flags26 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 6
  %38 = ptrtoint ptr %flags26 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %flags, ptr %flags26, align 4
  %retrans28 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 7
  %39 = ptrtoint ptr %retrans28 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %frombool, ptr %retrans28, align 1
  %lose31 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %call17, i32 0, i32 8
  %40 = ptrtoint ptr %lose31 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %frombool1, ptr %lose31, align 2
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call17, i32 noundef 36, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.end.cleanup_crit_edge, %land.lhs.true11.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_tx_ack(ptr noundef %__data, i32 noundef %call, i32 noundef %serial, i32 noundef %ack_first, i32 noundef %ack_serial, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call4, i32 0, i32 1
  %3 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %call7, align 4
  %serial8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call4, i32 0, i32 2
  %4 = ptrtoint ptr %serial8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %serial, ptr %serial8, align 4
  %ack_first9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call4, i32 0, i32 3
  %5 = ptrtoint ptr %ack_first9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %ack_first, ptr %ack_first9, align 4
  %ack_serial10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call4, i32 0, i32 4
  %6 = ptrtoint ptr %ack_serial10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %ack_serial, ptr %ack_serial10, align 4
  %reason11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call4, i32 0, i32 5
  %7 = ptrtoint ptr %reason11 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %reason, ptr %reason11, align 4
  %n_acks12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call4, i32 0, i32 6
  %8 = ptrtoint ptr %n_acks12 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %n_acks, ptr %n_acks12, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_tx_ack(ptr noundef %__data, i32 noundef %call, i32 noundef %serial, i32 noundef %ack_first, i32 noundef %ack_serial, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %call, ptr %call18, align 4
  %serial19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %serial19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %serial, ptr %serial19, align 4
  %ack_first20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %ack_first20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %ack_first, ptr %ack_first20, align 4
  %ack_serial21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call14, i32 0, i32 4
  %30 = ptrtoint ptr %ack_serial21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %ack_serial, ptr %ack_serial21, align 4
  %reason22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call14, i32 0, i32 5
  %31 = ptrtoint ptr %reason22 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %reason, ptr %reason22, align 4
  %n_acks23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %call14, i32 0, i32 6
  %32 = ptrtoint ptr %n_acks23 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %n_acks, ptr %n_acks23, align 1
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_receive(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %serial, i32 noundef %seq) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %why8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %why8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why8, align 4
  %serial9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %serial9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %serial, ptr %serial9, align 4
  %seq10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %seq10 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %seq, ptr %seq10, align 4
  %rx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 64
  %9 = ptrtoint ptr %rx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rx_hard_ack, align 8
  %hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call4, i32 0, i32 5
  %11 = ptrtoint ptr %hard_ack to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %hard_ack, align 4
  %rx_top = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 65
  %12 = ptrtoint ptr %rx_top to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rx_top, align 4
  %top = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call4, i32 0, i32 6
  %14 = ptrtoint ptr %top to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %top, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_receive(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %serial, i32 noundef %seq) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %why19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %why19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why19, align 4
  %serial20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %serial20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %serial, ptr %serial20, align 4
  %seq21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call14, i32 0, i32 4
  %32 = ptrtoint ptr %seq21 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %seq, ptr %seq21, align 4
  %rx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 64
  %33 = ptrtoint ptr %rx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rx_hard_ack, align 8
  %hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call14, i32 0, i32 5
  %35 = ptrtoint ptr %hard_ack to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %hard_ack, align 4
  %rx_top = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 65
  %36 = ptrtoint ptr %rx_top to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rx_top, align 4
  %top = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %call14, i32 0, i32 6
  %38 = ptrtoint ptr %top to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %top, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_recvmsg(ptr noundef %__data, ptr noundef readonly %call, i32 noundef %why, i32 noundef %seq, i32 noundef %offset, i32 noundef %len, i32 noundef %ret) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %tobool7.not = icmp eq ptr %call, null
  br i1 %tobool7.not, label %if.end6.cond.end_crit_edge, label %cond.true

if.end6.cond.end_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end6.cond.end_crit_edge
  %cond = phi i32 [ %4, %cond.true ], [ 0, %if.end6.cond.end_crit_edge ]
  %call8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %cond, ptr %call8, align 4
  %why9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %why9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why9, align 4
  %seq10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %seq10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %seq, ptr %seq10, align 4
  %offset11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %offset11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %offset, ptr %offset11, align 4
  %len12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call4, i32 0, i32 5
  %9 = ptrtoint ptr %len12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %len, ptr %len12, align 4
  %ret13 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call4, i32 0, i32 6
  %10 = ptrtoint ptr %ret13 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %ret, ptr %ret13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_recvmsg(ptr noundef %__data, ptr noundef readonly %call, i32 noundef %why, i32 noundef %seq, i32 noundef %offset, i32 noundef %len, i32 noundef %ret) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool18.not = icmp eq ptr %call, null
  br i1 %tobool18.not, label %if.end17.cond.end_crit_edge, label %cond.true

if.end17.cond.end_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end17.cond.end_crit_edge
  %cond = phi i32 [ %28, %cond.true ], [ 0, %if.end17.cond.end_crit_edge ]
  %call19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %cond, ptr %call19, align 4
  %why20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %why20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why20, align 4
  %seq21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %seq21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %seq, ptr %seq21, align 4
  %offset22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call14, i32 0, i32 4
  %32 = ptrtoint ptr %offset22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %offset, ptr %offset22, align 4
  %len23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call14, i32 0, i32 5
  %33 = ptrtoint ptr %len23 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %len, ptr %len23, align 4
  %ret24 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %call14, i32 0, i32 6
  %34 = ptrtoint ptr %ret24 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %ret, ptr %ret24, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rtt_tx(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %why8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %why8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why8, align 4
  %slot9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %slot9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %slot, ptr %slot9, align 4
  %send_serial10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %send_serial10 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %send_serial, ptr %send_serial10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rtt_tx(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %why19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %why19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why19, align 4
  %slot20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %slot20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %slot, ptr %slot20, align 4
  %send_serial21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %call14, i32 0, i32 4
  %32 = ptrtoint ptr %send_serial21 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %send_serial, ptr %send_serial21, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rtt_rx(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial, i32 noundef %resp_serial, i32 noundef %rtt, i32 noundef %rto) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %why8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %why8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why8, align 4
  %slot9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %slot9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %slot, ptr %slot9, align 4
  %send_serial10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %send_serial10 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %send_serial, ptr %send_serial10, align 4
  %resp_serial11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 5
  %9 = ptrtoint ptr %resp_serial11 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %resp_serial, ptr %resp_serial11, align 4
  %rtt12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 6
  %10 = ptrtoint ptr %rtt12 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %rtt, ptr %rtt12, align 4
  %rto13 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call4, i32 0, i32 7
  %11 = ptrtoint ptr %rto13 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %rto, ptr %rto13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rtt_rx(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial, i32 noundef %resp_serial, i32 noundef %rtt, i32 noundef %rto) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %why19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %why19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why19, align 4
  %slot20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %slot20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %slot, ptr %slot20, align 4
  %send_serial21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 4
  %32 = ptrtoint ptr %send_serial21 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %send_serial, ptr %send_serial21, align 4
  %resp_serial22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 5
  %33 = ptrtoint ptr %resp_serial22 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %resp_serial, ptr %resp_serial22, align 4
  %rtt23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 6
  %34 = ptrtoint ptr %rtt23 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %rtt, ptr %rtt23, align 4
  %rto24 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %call14, i32 0, i32 7
  %35 = ptrtoint ptr %rto24 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %rto, ptr %rto24, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_timer(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %now) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %why8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %why8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why8, align 4
  %now9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %now9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %now, ptr %now9, align 4
  %ack_at = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 7
  %8 = ptrtoint ptr %ack_at to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ack_at, align 8
  %ack_at10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 4
  %10 = ptrtoint ptr %ack_at10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %ack_at10, align 4
  %ack_lost_at = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 8
  %11 = ptrtoint ptr %ack_lost_at to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ack_lost_at, align 4
  %ack_lost_at11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 5
  %13 = ptrtoint ptr %ack_lost_at11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %ack_lost_at11, align 4
  %resend_at = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 9
  %14 = ptrtoint ptr %resend_at to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %resend_at, align 8
  %resend_at12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 6
  %16 = ptrtoint ptr %resend_at12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %resend_at12, align 4
  %expect_rx_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 12
  %17 = ptrtoint ptr %expect_rx_by to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %expect_rx_by, align 4
  %expect_rx_by13 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 8
  %19 = ptrtoint ptr %expect_rx_by13 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %expect_rx_by13, align 4
  %expect_req_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 13
  %20 = ptrtoint ptr %expect_req_by to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %expect_req_by, align 8
  %expect_req_by14 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 9
  %22 = ptrtoint ptr %expect_req_by14 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %expect_req_by14, align 4
  %expect_term_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 14
  %23 = ptrtoint ptr %expect_term_by to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %expect_term_by, align 4
  %expect_term_by15 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 10
  %25 = ptrtoint ptr %expect_term_by15 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %expect_term_by15, align 4
  %expires = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 18, i32 1
  %26 = ptrtoint ptr %expires to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %expires, align 4
  %timer16 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call4, i32 0, i32 11
  %28 = ptrtoint ptr %timer16 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %timer16, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_timer(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i32 noundef %now) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %why19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %why19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why19, align 4
  %now20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %now20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %now, ptr %now20, align 4
  %ack_at = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 7
  %32 = ptrtoint ptr %ack_at to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ack_at, align 8
  %ack_at21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 4
  %34 = ptrtoint ptr %ack_at21 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %ack_at21, align 4
  %ack_lost_at = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 8
  %35 = ptrtoint ptr %ack_lost_at to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %ack_lost_at, align 4
  %ack_lost_at22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 5
  %37 = ptrtoint ptr %ack_lost_at22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %ack_lost_at22, align 4
  %resend_at = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 9
  %38 = ptrtoint ptr %resend_at to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %resend_at, align 8
  %resend_at23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 6
  %40 = ptrtoint ptr %resend_at23 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %resend_at23, align 4
  %expect_rx_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 12
  %41 = ptrtoint ptr %expect_rx_by to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %expect_rx_by, align 4
  %expect_rx_by24 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 8
  %43 = ptrtoint ptr %expect_rx_by24 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %expect_rx_by24, align 4
  %expect_req_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 13
  %44 = ptrtoint ptr %expect_req_by to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %expect_req_by, align 8
  %expect_req_by25 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 9
  %46 = ptrtoint ptr %expect_req_by25 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %expect_req_by25, align 4
  %expect_term_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 14
  %47 = ptrtoint ptr %expect_term_by to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %expect_term_by, align 4
  %expect_term_by26 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 10
  %49 = ptrtoint ptr %expect_term_by26 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %expect_term_by26, align 4
  %expires = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 18, i32 1
  %50 = ptrtoint ptr %expires to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %expires, align 4
  %timer27 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %call14, i32 0, i32 11
  %52 = ptrtoint ptr %timer27 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %timer27, align 4
  %53 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rctx, align 4
  %55 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 52, i32 noundef %54, ptr noundef %__data, i64 noundef 1, ptr noundef %56, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_lose(ptr noundef %__data, ptr nocapture noundef readonly %sp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %hdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %call3, i32 0, i32 1
  %hdr6 = getelementptr inbounds %struct.rxrpc_skb_priv, ptr %sp, i32 0, i32 4
  %3 = call ptr @memcpy(ptr %hdr, ptr %hdr6, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_lose(ptr noundef %__data, ptr nocapture noundef readonly %sp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %hdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %call13, i32 0, i32 1
  %hdr17 = getelementptr inbounds %struct.rxrpc_skb_priv, ptr %sp, i32 0, i32 4
  %27 = call ptr @memcpy(ptr %hdr, ptr %hdr17, i32 28)
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_propose_ack(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i8 noundef zeroext %ack_reason, i32 noundef %serial, i1 noundef zeroext %immediate, i1 noundef zeroext %background, i32 noundef %outcome) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %frombool = zext i1 %immediate to i8
  %frombool1 = zext i1 %background to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call6 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #14
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end.cleanup_crit_edge, label %if.end9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 1
  %5 = ptrtoint ptr %call10 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call10, align 4
  %why11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 2
  %6 = ptrtoint ptr %why11 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %why, ptr %why11, align 4
  %serial12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 3
  %7 = ptrtoint ptr %serial12 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %serial, ptr %serial12, align 4
  %ack_reason13 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 4
  %8 = ptrtoint ptr %ack_reason13 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %ack_reason, ptr %ack_reason13, align 4
  %immediate15 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 5
  %9 = ptrtoint ptr %immediate15 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %frombool, ptr %immediate15, align 1
  %background18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 6
  %10 = ptrtoint ptr %background18 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %frombool1, ptr %background18, align 2
  %outcome20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call6, i32 0, i32 7
  %11 = ptrtoint ptr %outcome20 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %outcome, ptr %outcome20, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_propose_ack(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %why, i8 noundef zeroext %ack_reason, i32 noundef %serial, i1 noundef zeroext %immediate, i1 noundef zeroext %background, i32 noundef %outcome) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  %frombool = zext i1 %immediate to i8
  %frombool1 = zext i1 %background to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true11, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true11:                                  ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true11.cleanup_crit_edge, label %land.lhs.true11.if.end_crit_edge

land.lhs.true11.if.end_crit_edge:                 ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true11.if.end_crit_edge, %entry.if.end_crit_edge
  %call17 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.end.cleanup_crit_edge, label %if.end20

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 1
  %29 = ptrtoint ptr %call21 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call21, align 4
  %why22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 2
  %30 = ptrtoint ptr %why22 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %why, ptr %why22, align 4
  %serial23 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 3
  %31 = ptrtoint ptr %serial23 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %serial, ptr %serial23, align 4
  %ack_reason24 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 4
  %32 = ptrtoint ptr %ack_reason24 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %ack_reason, ptr %ack_reason24, align 4
  %immediate26 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 5
  %33 = ptrtoint ptr %immediate26 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %frombool, ptr %immediate26, align 1
  %background29 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 6
  %34 = ptrtoint ptr %background29 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %frombool1, ptr %background29, align 2
  %outcome31 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %call17, i32 0, i32 7
  %35 = ptrtoint ptr %outcome31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %outcome, ptr %outcome31, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call17, i32 noundef 28, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.end.cleanup_crit_edge, %land.lhs.true11.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_retransmit(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %seq, i8 noundef zeroext %annotation, i64 noundef %expiry) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 8
  %seq8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %seq8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %seq, ptr %seq8, align 4
  %annotation9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %annotation9 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %annotation, ptr %annotation9, align 8
  %expiry10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call4, i32 0, i32 4
  %8 = ptrtoint ptr %expiry10 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %expiry, ptr %expiry10, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_retransmit(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %seq, i8 noundef zeroext %annotation, i64 noundef %expiry) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 8
  %seq19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %seq19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %seq, ptr %seq19, align 4
  %annotation20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %annotation20 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %annotation, ptr %annotation20, align 8
  %expiry21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %call14, i32 0, i32 4
  %32 = ptrtoint ptr %expiry21 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %expiry, ptr %expiry21, align 8
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_congest(ptr noundef %__data, ptr nocapture noundef readonly %call, ptr nocapture noundef readonly %summary, i32 noundef %ack_serial, i32 noundef %change) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %change8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %change8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %change, ptr %change8, align 4
  %tx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 54
  %7 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tx_hard_ack, align 8
  %hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 3
  %9 = ptrtoint ptr %hard_ack to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %hard_ack, align 4
  %tx_top = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 55
  %10 = ptrtoint ptr %tx_top to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tx_top, align 4
  %top = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 4
  %12 = ptrtoint ptr %top to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %top, align 4
  %acks_lowest_nak = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 83
  %13 = ptrtoint ptr %acks_lowest_nak to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %acks_lowest_nak, align 8
  %lowest_nak = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 5
  %15 = ptrtoint ptr %lowest_nak to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %lowest_nak, align 4
  %ack_serial9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 6
  %16 = ptrtoint ptr %ack_serial9 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %ack_serial, ptr %ack_serial9, align 4
  %sum = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call4, i32 0, i32 7
  %17 = call ptr @memcpy(ptr %sum, ptr %summary, i32 16)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_congest(ptr noundef %__data, ptr nocapture noundef readonly %call, ptr nocapture noundef readonly %summary, i32 noundef %ack_serial, i32 noundef %change) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %change19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %change19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %change, ptr %change19, align 4
  %tx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 54
  %31 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %tx_hard_ack, align 8
  %hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 3
  %33 = ptrtoint ptr %hard_ack to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %hard_ack, align 4
  %tx_top = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 55
  %34 = ptrtoint ptr %tx_top to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %tx_top, align 4
  %top = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 4
  %36 = ptrtoint ptr %top to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %top, align 4
  %acks_lowest_nak = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 83
  %37 = ptrtoint ptr %acks_lowest_nak to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %acks_lowest_nak, align 8
  %lowest_nak = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 5
  %39 = ptrtoint ptr %lowest_nak to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %lowest_nak, align 4
  %ack_serial20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 6
  %40 = ptrtoint ptr %ack_serial20 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %ack_serial, ptr %ack_serial20, align 4
  %sum = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %call14, i32 0, i32 7
  %41 = call ptr @memcpy(ptr %sum, ptr %summary, i32 16)
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 52, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_disconnect_call(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_disconnect_call, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %abort_code = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 38
  %6 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %abort_code, align 8
  %abort_code8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_disconnect_call, ptr %call4, i32 0, i32 2
  %8 = ptrtoint ptr %abort_code8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %abort_code8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_disconnect_call(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_disconnect_call, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %abort_code = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 38
  %30 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %abort_code, align 8
  %abort_code19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_disconnect_call, ptr %call14, i32 0, i32 2
  %32 = ptrtoint ptr %abort_code19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %abort_code19, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_improper_term(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_improper_term, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %abort_code = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 38
  %6 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %abort_code, align 8
  %abort_code8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_improper_term, ptr %call4, i32 0, i32 2
  %8 = ptrtoint ptr %abort_code8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %abort_code8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_improper_term(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_improper_term, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %abort_code = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 38
  %30 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %abort_code, align 8
  %abort_code19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_improper_term, ptr %call14, i32 0, i32 2
  %32 = ptrtoint ptr %abort_code19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %abort_code19, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_eproto(ptr noundef %__data, ptr noundef readonly %call, i32 noundef %serial, ptr noundef %why) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %tobool7.not = icmp eq ptr %call, null
  br i1 %tobool7.not, label %if.end6.cond.end_crit_edge, label %cond.true

if.end6.cond.end_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end6.cond.end_crit_edge
  %cond = phi i32 [ %4, %cond.true ], [ 0, %if.end6.cond.end_crit_edge ]
  %call8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %cond, ptr %call8, align 4
  %serial9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %serial9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %serial, ptr %serial9, align 4
  %why10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %call4, i32 0, i32 3
  %7 = ptrtoint ptr %why10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %why, ptr %why10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_eproto(ptr noundef %__data, ptr noundef readonly %call, i32 noundef %serial, ptr noundef %why) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool18.not = icmp eq ptr %call, null
  br i1 %tobool18.not, label %if.end17.cond.end_crit_edge, label %cond.true

if.end17.cond.end_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end17.cond.end_crit_edge
  %cond = phi i32 [ %28, %cond.true ], [ 0, %if.end17.cond.end_crit_edge ]
  %call19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %cond, ptr %call19, align 4
  %serial20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %serial20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %serial, ptr %serial20, align 4
  %why21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %call14, i32 0, i32 3
  %31 = ptrtoint ptr %why21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %why, ptr %why21, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 20, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_connect_call(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %user_call_ID = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 32
  %6 = ptrtoint ptr %user_call_ID to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %user_call_ID, align 8
  %user_call_ID8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call4, i32 0, i32 2
  %8 = ptrtoint ptr %user_call_ID8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %user_call_ID8, align 4
  %cid = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 47
  %9 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cid, align 8
  %cid9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call4, i32 0, i32 3
  %11 = ptrtoint ptr %cid9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %cid9, align 4
  %call_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 46
  %12 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call_id, align 4
  %call_id10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call4, i32 0, i32 4
  %14 = ptrtoint ptr %call_id10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %call_id10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_connect_call(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %user_call_ID = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 32
  %30 = ptrtoint ptr %user_call_ID to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %user_call_ID, align 8
  %user_call_ID19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call14, i32 0, i32 2
  %32 = ptrtoint ptr %user_call_ID19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %user_call_ID19, align 4
  %cid = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 47
  %33 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cid, align 8
  %cid20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call14, i32 0, i32 3
  %35 = ptrtoint ptr %cid20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %cid20, align 4
  %call_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 46
  %36 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %call_id, align 4
  %call_id21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %call14, i32 0, i32 4
  %38 = ptrtoint ptr %call_id21 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %call_id21, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_resend(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %ix) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %call7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call7, align 4
  %ix8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %call4, i32 0, i32 2
  %6 = ptrtoint ptr %ix8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %ix, ptr %ix8, align 4
  %anno = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %call4, i32 0, i32 3
  %rxtx_annotations = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 53
  %7 = ptrtoint ptr %rxtx_annotations to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rxtx_annotations, align 4
  %9 = call ptr @memcpy(ptr %anno, ptr %8, i32 64)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_resend(ptr noundef %__data, ptr nocapture noundef readonly %call, i32 noundef %ix) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %call18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call18, align 4
  %ix19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %call14, i32 0, i32 2
  %30 = ptrtoint ptr %ix19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %ix, ptr %ix19, align 4
  %anno = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %call14, i32 0, i32 3
  %rxtx_annotations = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 53
  %31 = ptrtoint ptr %rxtx_annotations to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %rxtx_annotations, align 4
  %33 = call ptr @memcpy(ptr %anno, ptr %32, i32 64)
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 84, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_icmp(ptr noundef %__data, ptr nocapture noundef readonly %peer, ptr nocapture noundef readonly %ee, ptr nocapture noundef readonly %srx) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_peer, ptr %peer, i32 0, i32 15
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %peer6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %peer6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %peer6, align 4
  %ee7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %call3, i32 0, i32 2
  %6 = call ptr @memcpy(ptr %ee7, ptr %ee, i32 16)
  %srx8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %call3, i32 0, i32 3
  %7 = call ptr @memcpy(ptr %srx8, ptr %srx, i32 36)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_icmp(ptr noundef %__data, ptr nocapture noundef readonly %peer, ptr nocapture noundef readonly %ee, ptr nocapture noundef readonly %srx) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_peer, ptr %peer, i32 0, i32 15
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %peer17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %peer17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %peer17, align 4
  %ee18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %call13, i32 0, i32 2
  %30 = call ptr @memcpy(ptr %ee18, ptr %ee, i32 16)
  %srx19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %call13, i32 0, i32 3
  %31 = call ptr @memcpy(ptr %srx19, ptr %srx, i32 36)
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_tx_fail(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %ret, i32 noundef %where) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %debug_id6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %debug_id, ptr %debug_id6, align 4
  %serial7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %serial7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %serial, ptr %serial7, align 4
  %ret8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %ret8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %ret, ptr %ret8, align 4
  %where9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %where9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %where, ptr %where9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_tx_fail(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %ret, i32 noundef %where) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %debug_id17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %debug_id, ptr %debug_id17, align 4
  %serial18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %serial18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %serial, ptr %serial18, align 4
  %ret19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %ret19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %ret, ptr %ret19, align 4
  %where20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %where20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %where, ptr %where20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_call_reset(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call4 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #14
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %3 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %debug_id, align 4
  %debug_id7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 1
  %5 = ptrtoint ptr %debug_id7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %debug_id7, align 4
  %cid = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 47
  %6 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cid, align 8
  %cid8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 2
  %8 = ptrtoint ptr %cid8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cid8, align 4
  %call_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 46
  %9 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call_id, align 4
  %call_id9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 3
  %11 = ptrtoint ptr %call_id9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %call_id9, align 4
  %rx_serial = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 67
  %12 = ptrtoint ptr %rx_serial to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rx_serial, align 4
  %call_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 4
  %14 = ptrtoint ptr %call_serial to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %call_serial, align 4
  %conn = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 1
  %15 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %conn, align 8
  %hi_serial = getelementptr inbounds %struct.rxrpc_connection, ptr %16, i32 0, i32 25
  %17 = ptrtoint ptr %hi_serial to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %hi_serial, align 8
  %conn_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 5
  %19 = ptrtoint ptr %conn_serial to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %conn_serial, align 4
  %tx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 54
  %20 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %tx_hard_ack, align 8
  %tx_seq = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 6
  %22 = ptrtoint ptr %tx_seq to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %tx_seq, align 4
  %ackr_seen = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 78
  %23 = ptrtoint ptr %ackr_seen to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ackr_seen, align 4
  %rx_seq = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call4, i32 0, i32 7
  %25 = ptrtoint ptr %rx_seq to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %rx_seq, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_call_reset(ptr noundef %__data, ptr nocapture noundef readonly %call) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %27 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %debug_id, align 4
  %debug_id18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 1
  %29 = ptrtoint ptr %debug_id18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %debug_id18, align 4
  %cid = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 47
  %30 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cid, align 8
  %cid19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 2
  %32 = ptrtoint ptr %cid19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cid19, align 4
  %call_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 46
  %33 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %call_id, align 4
  %call_id20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 3
  %35 = ptrtoint ptr %call_id20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %call_id20, align 4
  %rx_serial = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 67
  %36 = ptrtoint ptr %rx_serial to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rx_serial, align 4
  %call_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 4
  %38 = ptrtoint ptr %call_serial to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %call_serial, align 4
  %conn = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 1
  %39 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %conn, align 8
  %hi_serial = getelementptr inbounds %struct.rxrpc_connection, ptr %40, i32 0, i32 25
  %41 = ptrtoint ptr %hi_serial to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %hi_serial, align 8
  %conn_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 5
  %43 = ptrtoint ptr %conn_serial to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %conn_serial, align 4
  %tx_hard_ack = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 54
  %44 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %tx_hard_ack, align 8
  %tx_seq = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 6
  %46 = ptrtoint ptr %tx_seq to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %tx_seq, align 4
  %ackr_seen = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 78
  %47 = ptrtoint ptr %ackr_seen to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %ackr_seen, align 4
  %rx_seq = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %call14, i32 0, i32 7
  %49 = ptrtoint ptr %rx_seq to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %rx_seq, align 4
  %50 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rctx, align 4
  %52 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %51, ptr noundef %__data, i64 noundef 1, ptr noundef %53, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_notify_socket(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_notify_socket, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %debug_id6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %debug_id, ptr %debug_id6, align 4
  %serial7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_notify_socket, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %serial7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %serial, ptr %serial7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_notify_socket(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_notify_socket, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %debug_id17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %debug_id, ptr %debug_id17, align 4
  %serial18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_notify_socket, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %serial18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %serial, ptr %serial18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rxrpc_rx_discard_ack(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %first_soft_ack, i32 noundef %call_ackr_first, i32 noundef %prev_pkt, i32 noundef %call_ackr_prev) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #14
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1503

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1504

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #14
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #14
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %debug_id6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %debug_id6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %debug_id, ptr %debug_id6, align 4
  %serial7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %serial7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %serial, ptr %serial7, align 4
  %first_soft_ack8 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %first_soft_ack8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %first_soft_ack, ptr %first_soft_ack8, align 4
  %call_ackr_first9 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %call_ackr_first9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call_ackr_first, ptr %call_ackr_first9, align 4
  %prev_pkt10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %prev_pkt10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %prev_pkt, ptr %prev_pkt10, align 4
  %call_ackr_prev11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %call_ackr_prev11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call_ackr_prev, ptr %call_ackr_prev11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rxrpc_rx_discard_ack(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %first_soft_ack, i32 noundef %call_ackr_first, i32 noundef %prev_pkt, i32 noundef %call_ackr_prev) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #14
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #14
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1505
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #14
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #14
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #14
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %debug_id17 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %debug_id17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %debug_id, ptr %debug_id17, align 4
  %serial18 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %serial18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %serial, ptr %serial18, align 4
  %first_soft_ack19 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %first_soft_ack19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %first_soft_ack, ptr %first_soft_ack19, align 4
  %call_ackr_first20 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %call_ackr_first20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %call_ackr_first, ptr %call_ackr_first20, align 4
  %prev_pkt21 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %prev_pkt21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %prev_pkt, ptr %prev_pkt21, align 4
  %call_ackr_prev22 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %call_ackr_prev22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %call_ackr_prev, ptr %call_ackr_prev22, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_local(ptr noundef %__data, i32 noundef %local_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %local_debug_id to i64
  %conv4 = zext i32 %op to i64
  %conv8 = zext i32 %usage to i64
  %0 = ptrtoint ptr %where to i32
  %conv12 = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_peer(ptr noundef %__data, i32 noundef %peer_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %peer_debug_id to i64
  %conv4 = zext i32 %op to i64
  %conv8 = zext i32 %usage to i64
  %0 = ptrtoint ptr %where to i32
  %conv12 = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_conn(ptr noundef %__data, i32 noundef %conn_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %conn_debug_id to i64
  %conv4 = zext i32 %op to i64
  %conv8 = zext i32 %usage to i64
  %0 = ptrtoint ptr %where to i32
  %conv12 = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_client(ptr noundef %__data, ptr noundef %conn, i32 noundef %channel, i32 noundef %op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %conn to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %channel to i64
  %conv8 = zext i32 %op to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_call(ptr noundef %__data, i32 noundef %call_debug_id, i32 noundef %op, i32 noundef %usage, ptr noundef %where, ptr noundef %aux) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %call_debug_id to i64
  %conv4 = zext i32 %op to i64
  %conv8 = zext i32 %usage to i64
  %0 = ptrtoint ptr %where to i32
  %conv12 = zext i32 %0 to i64
  %1 = ptrtoint ptr %aux to i32
  %conv16 = zext i32 %1 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_skb(ptr noundef %__data, ptr noundef %skb, i32 noundef %op, i32 noundef %usage, i32 noundef %mod_count, i8 noundef zeroext %flags, ptr noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %op to i64
  %conv8 = zext i32 %usage to i64
  %conv12 = zext i32 %mod_count to i64
  %conv16 = zext i8 %flags to i64
  %1 = ptrtoint ptr %where to i32
  %conv20 = zext i32 %1 to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_packet(ptr noundef %__data, ptr noundef %sp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %sp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_done(ptr noundef %__data, i32 noundef %result, i32 noundef %abort_code) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %result to i64
  %conv4 = zext i32 %abort_code to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_abort(ptr noundef %__data, i32 noundef %call_nr, ptr noundef %why, i32 noundef %cid, i32 noundef %call_id, i32 noundef %seq, i32 noundef %abort_code, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %call_nr to i64
  %0 = ptrtoint ptr %why to i32
  %conv4 = zext i32 %0 to i64
  %conv8 = zext i32 %cid to i64
  %conv12 = zext i32 %call_id to i64
  %conv16 = zext i32 %seq to i64
  %conv20 = zext i32 %abort_code to i64
  %conv24 = zext i32 %error to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_call_complete(ptr noundef %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_transmit(ptr noundef %__data, ptr noundef %call, i32 noundef %why) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %why to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_data(ptr noundef %__data, i32 noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i8 noundef zeroext %anno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %call to i64
  %conv4 = zext i32 %seq to i64
  %conv8 = zext i32 %serial to i64
  %conv12 = zext i8 %flags to i64
  %conv16 = zext i8 %anno to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_ack(ptr noundef %__data, ptr noundef %call, i32 noundef %serial, i32 noundef %ack_serial, i32 noundef %first, i32 noundef %prev, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %serial to i64
  %conv8 = zext i32 %ack_serial to i64
  %conv12 = zext i32 %first to i64
  %conv16 = zext i32 %prev to i64
  %conv20 = zext i8 %reason to i64
  %conv24 = zext i8 %n_acks to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_abort(ptr noundef %__data, ptr noundef %call, i32 noundef %serial, i32 noundef %abort_code) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %serial to i64
  %conv8 = zext i32 %abort_code to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_rwind_change(ptr noundef %__data, ptr noundef %call, i32 noundef %serial, i32 noundef %rwind, i1 noundef zeroext %wake) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %serial to i64
  %conv8 = zext i32 %rwind to i64
  %conv13 = zext i1 %wake to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv13) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_tx_packet(ptr noundef %__data, i32 noundef %call_id, ptr noundef %whdr, i32 noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %call_id to i64
  %0 = ptrtoint ptr %whdr to i32
  %conv4 = zext i32 %0 to i64
  %conv8 = zext i32 %where to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_tx_data(ptr noundef %__data, ptr noundef %call, i32 noundef %seq, i32 noundef %serial, i8 noundef zeroext %flags, i1 noundef zeroext %retrans, i1 noundef zeroext %lose) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv5 = zext i32 %seq to i64
  %conv9 = zext i32 %serial to i64
  %conv13 = zext i8 %flags to i64
  %conv18 = zext i1 %retrans to i64
  %conv24 = zext i1 %lose to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv5, i64 noundef %conv9, i64 noundef %conv13, i64 noundef %conv18, i64 noundef %conv24) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_tx_ack(ptr noundef %__data, i32 noundef %call, i32 noundef %serial, i32 noundef %ack_first, i32 noundef %ack_serial, i8 noundef zeroext %reason, i8 noundef zeroext %n_acks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %call to i64
  %conv4 = zext i32 %serial to i64
  %conv8 = zext i32 %ack_first to i64
  %conv12 = zext i32 %ack_serial to i64
  %conv16 = zext i8 %reason to i64
  %conv20 = zext i8 %n_acks to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_receive(ptr noundef %__data, ptr noundef %call, i32 noundef %why, i32 noundef %serial, i32 noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %why to i64
  %conv8 = zext i32 %serial to i64
  %conv12 = zext i32 %seq to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_recvmsg(ptr noundef %__data, ptr noundef %call, i32 noundef %why, i32 noundef %seq, i32 noundef %offset, i32 noundef %len, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %why to i64
  %conv8 = zext i32 %seq to i64
  %conv12 = zext i32 %offset to i64
  %conv16 = zext i32 %len to i64
  %conv20 = zext i32 %ret to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rtt_tx(ptr noundef %__data, ptr noundef %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %why to i64
  %conv8 = zext i32 %slot to i64
  %conv12 = zext i32 %send_serial to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rtt_rx(ptr noundef %__data, ptr noundef %call, i32 noundef %why, i32 noundef %slot, i32 noundef %send_serial, i32 noundef %resp_serial, i32 noundef %rtt, i32 noundef %rto) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %why to i64
  %conv8 = zext i32 %slot to i64
  %conv12 = zext i32 %send_serial to i64
  %conv16 = zext i32 %resp_serial to i64
  %conv20 = zext i32 %rtt to i64
  %conv24 = zext i32 %rto to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_timer(ptr noundef %__data, ptr noundef %call, i32 noundef %why, i32 noundef %now) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %why to i64
  %conv8 = zext i32 %now to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_lose(ptr noundef %__data, ptr noundef %sp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %sp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_propose_ack(ptr noundef %__data, ptr noundef %call, i32 noundef %why, i8 noundef zeroext %ack_reason, i32 noundef %serial, i1 noundef zeroext %immediate, i1 noundef zeroext %background, i32 noundef %outcome) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv5 = zext i32 %why to i64
  %conv9 = zext i8 %ack_reason to i64
  %conv13 = zext i32 %serial to i64
  %conv18 = zext i1 %immediate to i64
  %conv24 = zext i1 %background to i64
  %conv28 = zext i32 %outcome to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv5, i64 noundef %conv9, i64 noundef %conv13, i64 noundef %conv18, i64 noundef %conv24, i64 noundef %conv28) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_retransmit(ptr noundef %__data, ptr noundef %call, i32 noundef %seq, i8 noundef zeroext %annotation, i64 noundef %expiry) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %seq to i64
  %conv8 = zext i8 %annotation to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %expiry) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_congest(ptr noundef %__data, ptr noundef %call, ptr noundef %summary, i32 noundef %ack_serial, i32 noundef %change) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %summary to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %ack_serial to i64
  %conv12 = zext i32 %change to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_disconnect_call(ptr noundef %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_improper_term(ptr noundef %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_eproto(ptr noundef %__data, ptr noundef %call, i32 noundef %serial, ptr noundef %why) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %serial to i64
  %1 = ptrtoint ptr %why to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_connect_call(ptr noundef %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_resend(ptr noundef %__data, ptr noundef %call, i32 noundef %ix) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %ix to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_icmp(ptr noundef %__data, ptr noundef %peer, ptr noundef %ee, ptr noundef %srx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %peer to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ee to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %srx to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_tx_fail(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %ret, i32 noundef %where) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %debug_id to i64
  %conv4 = zext i32 %serial to i64
  %conv8 = zext i32 %ret to i64
  %conv12 = zext i32 %where to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_call_reset(ptr noundef %__data, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %call to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_notify_socket(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %debug_id to i64
  %conv4 = zext i32 %serial to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rxrpc_rx_discard_ack(ptr noundef %__data, i32 noundef %debug_id, i32 noundef %serial, i32 noundef %first_soft_ack, i32 noundef %call_ackr_first, i32 noundef %prev_pkt, i32 noundef %call_ackr_prev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %debug_id to i64
  %conv4 = zext i32 %serial to i64
  %conv8 = zext i32 %first_soft_ack to i64
  %conv12 = zext i32 %call_ackr_first to i64
  %conv16 = zext i32 %prev_pkt to i64
  %conv20 = zext i32 %call_ackr_prev to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rxrpc_kernel_begin_call(ptr nocapture noundef readonly %sock, ptr noundef %srx, ptr noundef %key, i32 noundef %user_call_ID, i64 noundef %tx_total_len, i32 noundef %gfp, ptr noundef %notify_rx, i1 noundef zeroext %upgrade, i32 noundef %interruptibility, i32 noundef %debug_id) #0 align 64 {
entry:
  %cp = alloca %struct.rxrpc_conn_parameters, align 4
  %p = alloca %struct.rxrpc_call_params, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %upgrade to i8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %cp) #14
  %0 = getelementptr inbounds %struct.rxrpc_conn_parameters, ptr %cp, i32 0, i32 1
  %1 = getelementptr inbounds %struct.rxrpc_conn_parameters, ptr %cp, i32 0, i32 2
  %2 = getelementptr inbounds %struct.rxrpc_conn_parameters, ptr %cp, i32 0, i32 3
  %3 = getelementptr inbounds %struct.rxrpc_conn_parameters, ptr %cp, i32 0, i32 4
  %4 = getelementptr inbounds %struct.rxrpc_conn_parameters, ptr %cp, i32 0, i32 5
  %5 = getelementptr inbounds %struct.rxrpc_conn_parameters, ptr %cp, i32 0, i32 6
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %p) #14
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %6 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sk, align 16
  %8 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end9_crit_edge, label %do.end, !prof !1503

entry.do.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end9

do.end:                                           ; preds = %entry
  %9 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 101
  %tobool.not.i = icmp eq ptr %key, null
  br i1 %tobool.not.i, label %do.end.key_serial.exit_crit_edge, label %cond.true.i

do.end.key_serial.exit_crit_edge:                 ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %key_serial.exit

cond.true.i:                                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  %serial.i = getelementptr inbounds %struct.key, ptr %key, i32 0, i32 1
  %13 = ptrtoint ptr %serial.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %serial.i, align 4
  br label %key_serial.exit

key_serial.exit:                                  ; preds = %cond.true.i, %do.end.key_serial.exit_crit_edge
  %cond.i = phi i32 [ %14, %cond.true.i ], [ 0, %do.end.key_serial.exit_crit_edge ]
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef %comm, ptr noundef nonnull @.str.148, i32 noundef %cond.i, i32 noundef %user_call_ID) #17
  br label %do.end9

do.end9:                                          ; preds = %key_serial.exit, %entry.do.end9_crit_edge
  %15 = ptrtoint ptr %srx to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %srx, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 33, i16 %16)
  %cmp1.not.i = icmp eq i16 %16, 33
  br i1 %cmp1.not.i, label %if.end4.i, label %do.end9.cleanup_crit_edge

do.end9.cleanup_crit_edge:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4.i:                                        ; preds = %do.end9
  %transport_type.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %srx, i32 0, i32 2
  %17 = ptrtoint ptr %transport_type.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %transport_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %18)
  %cmp6.not.i = icmp eq i16 %18, 2
  br i1 %cmp6.not.i, label %if.end9.i, label %if.end4.i.cleanup_crit_edge

if.end4.i.cleanup_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9.i:                                        ; preds = %if.end4.i
  %transport_len.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %srx, i32 0, i32 3
  %19 = ptrtoint ptr %transport_len.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %transport_len.i, align 2
  %21 = add i16 %20, -29
  call void @__sanitizer_cov_trace_const_cmp2(i16 -27, i16 %21)
  %22 = icmp ult i16 %21, -27
  br i1 %22, label %if.end9.i.cleanup_crit_edge, label %if.end18.i

if.end9.i.cleanup_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18.i:                                       ; preds = %if.end9.i
  %transport.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %srx, i32 0, i32 4
  %23 = ptrtoint ptr %transport.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %transport.i, align 4
  %family.i = getelementptr inbounds %struct.rxrpc_sock, ptr %7, i32 0, i32 19
  %25 = ptrtoint ptr %family.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %family.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %24)
  %cmp25.i = icmp ne i16 %24, 2
  %27 = and i16 %26, -9
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %27)
  %28 = icmp eq i16 %27, 2
  %29 = or i1 %cmp25.i, %28
  br i1 %29, label %if.end33.i, label %if.end18.i.cleanup_crit_edge

if.end18.i.cleanup_crit_edge:                     ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end33.i:                                       ; preds = %if.end18.i
  %30 = zext i16 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values)
  switch i16 %24, label %if.end33.i.cleanup_crit_edge [
    i16 2, label %sw.bb.i
    i16 10, label %sw.bb42.i
  ]

if.end33.i.cleanup_crit_edge:                     ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %20)
  %cmp38.i = icmp ult i16 %20, 16
  br i1 %cmp38.i, label %sw.bb.i.cleanup_crit_edge, label %if.then51.i

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb42.i:                                        ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 28, i16 %20)
  %cmp45.i = icmp ult i16 %20, 28
  br i1 %cmp45.i, label %sw.bb42.i.cleanup_crit_edge, label %sw.bb42.i.do.body.i_crit_edge

sw.bb42.i.do.body.i_crit_edge:                    ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

sw.bb42.i.cleanup_crit_edge:                      ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then51.i:                                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %srx, i32 16
  %31 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 12)
  br label %do.body.i

do.body.i:                                        ; preds = %if.then51.i, %sw.bb42.i.do.body.i_crit_edge
  %32 = load i32, ptr @rxrpc_debug, align 4
  %and.i79 = and i32 %32, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i79)
  %tobool.not.i80 = icmp eq i32 %and.i79, 0
  br i1 %tobool.not.i80, label %do.body.i.if.end13_crit_edge, label %do.end.i, !prof !1503

do.body.i.if.end13_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %33 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i, align 8
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 101
  %call59.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %comm.i, ptr noundef %transport.i) #17
  br label %if.end13

if.end13:                                         ; preds = %do.end.i, %do.body.i.if.end13_crit_edge
  tail call void @lock_sock_nested(ptr noundef %7, i32 noundef 0) #14
  %tobool15.not = icmp eq ptr %key, null
  br i1 %tobool15.not, label %if.end18, label %if.end13.land.lhs.true_crit_edge

if.end13.land.lhs.true_crit_edge:                 ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.end18:                                         ; preds = %if.end13
  %key17 = getelementptr inbounds %struct.rxrpc_sock, ptr %7, i32 0, i32 10
  %37 = ptrtoint ptr %key17 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %key17, align 8
  %tobool19.not = icmp eq ptr %38, null
  br i1 %tobool19.not, label %if.end18.if.end22_crit_edge, label %if.end18.land.lhs.true_crit_edge

if.end18.land.lhs.true_crit_edge:                 ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.end18.if.end22_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

land.lhs.true:                                    ; preds = %if.end18.land.lhs.true_crit_edge, %if.end13.land.lhs.true_crit_edge
  %key.addr.087 = phi ptr [ %38, %if.end18.land.lhs.true_crit_edge ], [ %key, %if.end13.land.lhs.true_crit_edge ]
  %39 = getelementptr inbounds %struct.key, ptr %key.addr.087, i32 0, i32 17
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %tobool20.not = icmp eq ptr %41, null
  %spec.store.select = select i1 %tobool20.not, ptr null, ptr %key.addr.087
  br label %if.end22

if.end22:                                         ; preds = %land.lhs.true, %if.end18.if.end22_crit_edge
  %key.addr.1 = phi ptr [ %spec.store.select, %land.lhs.true ], [ null, %if.end18.if.end22_crit_edge ]
  %42 = getelementptr inbounds i8, ptr %p, i32 8
  %43 = call ptr @memset(ptr %42, i32 0, i32 24)
  %user_call_ID23 = getelementptr inbounds %struct.rxrpc_call_params, ptr %p, i32 0, i32 1
  %44 = ptrtoint ptr %user_call_ID23 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %user_call_ID, ptr %user_call_ID23, align 8
  %45 = ptrtoint ptr %p to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %tx_total_len, ptr %p, align 8
  %interruptibility25 = getelementptr inbounds %struct.rxrpc_call_params, ptr %p, i32 0, i32 5
  %46 = ptrtoint ptr %interruptibility25 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %interruptibility, ptr %interruptibility25, align 4
  %kernel = getelementptr inbounds %struct.rxrpc_call_params, ptr %p, i32 0, i32 4
  %47 = ptrtoint ptr %kernel to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 1, ptr %kernel, align 1
  %48 = getelementptr inbounds i8, ptr %cp, i32 4
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %48, align 4
  %local = getelementptr inbounds %struct.rxrpc_sock, ptr %7, i32 0, i32 3
  %50 = ptrtoint ptr %local to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %local, align 8
  %52 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %51, ptr %cp, align 4
  %53 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %key.addr.1, ptr %1, align 4
  %min_sec_level = getelementptr inbounds %struct.rxrpc_sock, ptr %7, i32 0, i32 15
  %54 = ptrtoint ptr %min_sec_level to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %min_sec_level, align 4
  %56 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %5, align 4
  %57 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 0, ptr %2, align 4
  %58 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %frombool, ptr %3, align 1
  %srx_service = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %srx, i32 0, i32 1
  %59 = ptrtoint ptr %srx_service to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %srx_service, align 2
  %61 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %61)
  store i16 %60, ptr %4, align 2
  %call31 = call ptr @rxrpc_new_client_call(ptr noundef %7, ptr noundef nonnull %cp, ptr noundef %srx, ptr noundef nonnull %p, i32 noundef %gfp, i32 noundef %debug_id) #14
  %cmp.i = icmp ugt ptr %call31, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end22.if.end35_crit_edge, label %if.then33

if.end22.if.end35_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.then33:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  %notify_rx34 = getelementptr inbounds %struct.rxrpc_call, ptr %call31, i32 0, i32 20
  %62 = ptrtoint ptr %notify_rx34 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %notify_rx, ptr %notify_rx34, align 8
  %user_mutex = getelementptr inbounds %struct.rxrpc_call, ptr %call31, i32 0, i32 6
  call void @mutex_unlock(ptr noundef %user_mutex) #14
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.end22.if.end35_crit_edge
  %63 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %0, align 4
  call void @rxrpc_put_peer(ptr noundef %64) #14
  %65 = load i32, ptr @rxrpc_debug, align 4
  %and37 = and i32 %65, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %if.end35.cleanup_crit_edge, label %do.end48, !prof !1503

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end48:                                         ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %66 = call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i81 = and i32 %66, -16384
  %67 = inttoptr i32 %and.i81 to ptr
  %task51 = getelementptr inbounds %struct.thread_info, ptr %67, i32 0, i32 2
  %68 = ptrtoint ptr %task51 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %task51, align 8
  %comm52 = getelementptr inbounds %struct.task_struct, ptr %69, i32 0, i32 101
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, ptr noundef %comm52, ptr noundef nonnull @.str.148, ptr noundef %call31) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end48, %if.end35.cleanup_crit_edge, %sw.bb42.i.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end33.i.cleanup_crit_edge, %if.end18.i.cleanup_crit_edge, %if.end9.i.cleanup_crit_edge, %if.end4.i.cleanup_crit_edge, %do.end9.cleanup_crit_edge
  %retval.0 = phi ptr [ %call31, %do.end48 ], [ %call31, %if.end35.cleanup_crit_edge ], [ inttoptr (i32 -97 to ptr), %if.end33.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %sw.bb42.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %sw.bb.i.cleanup_crit_edge ], [ inttoptr (i32 -97 to ptr), %if.end18.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end9.i.cleanup_crit_edge ], [ inttoptr (i32 -94 to ptr), %if.end4.i.cleanup_crit_edge ], [ inttoptr (i32 -97 to ptr), %do.end9.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %p) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %cp) #14
  ret ptr %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rxrpc_new_client_call(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_put_peer(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rxrpc_kernel_end_call(ptr nocapture noundef readonly %sock, ptr noundef %call) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end7_crit_edge, label %do.end, !prof !1503

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %1 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %debug_id = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 48
  %5 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %debug_id, align 4
  %usage = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 42
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %usage, i32 noundef 4) #14
  %7 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %usage, align 4
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef %comm, ptr noundef nonnull @.str.154, i32 noundef %6, i32 noundef %8) #17
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  %user_mutex = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %user_mutex, i32 noundef 0) #14
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %9 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sk, align 16
  tail call void @rxrpc_release_call(ptr noundef %10, ptr noundef %call) #14
  %notify_rx = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 20
  %11 = ptrtoint ptr %notify_rx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %notify_rx, align 8
  %tobool9.not = icmp eq ptr %12, null
  br i1 %tobool9.not, label %do.end7.if.end13_crit_edge, label %if.then10

do.end7.if.end13_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then10:                                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  %notify_lock = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 36
  tail call void @_raw_spin_lock_bh(ptr noundef %notify_lock) #14
  %13 = ptrtoint ptr %notify_rx to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @rxrpc_dummy_notify_rx, ptr %notify_rx, align 8
  tail call void @_raw_spin_unlock_bh(ptr noundef %notify_lock) #14
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %do.end7.if.end13_crit_edge
  tail call void @mutex_unlock(ptr noundef %user_mutex) #14
  tail call void @rxrpc_put_call(ptr noundef %call, i32 noundef 8) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_release_call(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rxrpc_dummy_notify_rx(ptr nocapture noundef %sk, ptr nocapture noundef %rxcall, i32 noundef %call_user_ID) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_put_call(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @rxrpc_kernel_check_life(ptr nocapture readnone %sock, ptr nocapture noundef readonly %call) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 40
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %1)
  %cmp = icmp ne i32 %1, 11
  ret i1 %cmp
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rxrpc_kernel_get_epoch(ptr nocapture readnone %sock, ptr nocapture noundef readonly %call) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %conn = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 1
  %0 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %conn, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 8
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @rxrpc_kernel_new_call_notification(ptr nocapture noundef readonly %sock, ptr noundef %notify_new_call, ptr noundef %discard_new_call) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %notify_new_call1 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %notify_new_call1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %notify_new_call, ptr %notify_new_call1, align 8
  %discard_new_call2 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %discard_new_call2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %discard_new_call, ptr %discard_new_call2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rxrpc_kernel_set_max_life(ptr nocapture readnone %sock, ptr noundef %call, i32 noundef %hard_timeout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %user_mutex = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 6
  tail call void @mutex_lock_nested(ptr noundef %user_mutex, i32 noundef 0) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %0, %hard_timeout
  %expect_term_by = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 14
  %1 = ptrtoint ptr %expect_term_by to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile i32 %add, ptr %expect_term_by, align 4
  tail call fastcc void @trace_rxrpc_timer(ptr noundef %call, i32 noundef %0) #14
  %timer.i = getelementptr inbounds %struct.rxrpc_call, ptr %call, i32 0, i32 18
  %call1.i = tail call i32 @timer_reduce(ptr noundef %timer.i, i32 noundef %add) #14
  tail call void @mutex_unlock(ptr noundef %user_mutex) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rxrpc_sock_set_min_security_level(ptr noundef %sk, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %0 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not = icmp eq i8 %1, 0
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %val)
  %cmp2 = icmp ugt i32 %val, 2
  br i1 %cmp2, label %if.end.return_crit_edge, label %if.end5

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_sock_nested(ptr noundef %sk, i32 noundef 0) #14
  %min_sec_level = getelementptr inbounds %struct.rxrpc_sock, ptr %sk, i32 0, i32 15
  %2 = ptrtoint ptr %min_sec_level to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %val, ptr %min_sec_level, align 4
  tail call void @release_sock(ptr noundef %sk) #14
  br label %return

return:                                           ; preds = %if.end5, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -106, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_sock(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @af_rxrpc_exit() #8 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end, !prof !1503

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %1 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.155, ptr noundef %comm, ptr noundef nonnull @.str.156) #17
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  tail call void @rxrpc_sysctl_exit() #14
  tail call void @unregister_key_type(ptr noundef nonnull @key_type_rxrpc_s) #14
  tail call void @unregister_key_type(ptr noundef nonnull @key_type_rxrpc) #14
  tail call void @sock_unregister(i32 noundef 33) #14
  tail call void @proto_unregister(ptr noundef nonnull @rxrpc_proto) #14
  tail call void @unregister_pernet_device(ptr noundef nonnull @rxrpc_net_ops) #14
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @rxrpc_n_tx_skbs, i32 noundef 4) #14
  %5 = load volatile i32, ptr @rxrpc_n_tx_skbs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.not = icmp eq i32 %5, 0
  br i1 %cmp.not, label %if.end27, label %do.end18, !prof !1503

do.end18:                                         ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #16
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.158, i32 noundef %5, i32 noundef %5, ptr noundef nonnull @.str.160, i32 noundef 0, i32 noundef 0) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/rxrpc/af_rxrpc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1062, 0\0A.popsection", ""() #14, !srcloc !1506
  unreachable

if.end27:                                         ; preds = %do.end5
  %call.i.i88 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @rxrpc_n_rx_skbs, i32 noundef 4) #14
  %6 = load volatile i32, ptr @rxrpc_n_rx_skbs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp34.not = icmp eq i32 %6, 0
  br i1 %cmp34.not, label %if.end55, label %do.end46, !prof !1503

do.end46:                                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.158, i32 noundef %6, i32 noundef %6, ptr noundef nonnull @.str.160, i32 noundef 0, i32 noundef 0) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/rxrpc/af_rxrpc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1063, 0\0A.popsection", ""() #14, !srcloc !1507
  unreachable

if.end55:                                         ; preds = %if.end27
  tail call void @rcu_barrier() #14
  tail call void @rxrpc_destroy_client_conn_ids() #14
  %7 = load ptr, ptr @rxrpc_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef %7) #14
  tail call void @rxrpc_exit_security() #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rxrpc_call_jar to i32))
  %8 = load ptr, ptr @rxrpc_call_jar, align 4
  tail call void @kmem_cache_destroy(ptr noundef %8) #14
  %9 = load i32, ptr @rxrpc_debug, align 4
  %and59 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.end55.do.end79_crit_edge, label %do.end70, !prof !1503

if.end55.do.end79_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end79

do.end70:                                         ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  %10 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i89 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i89 to ptr
  %task73 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task73 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task73, align 8
  %comm74 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 101
  %call76 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164, ptr noundef %comm74, ptr noundef nonnull @.str.156) #17
  br label %do.end79

do.end79:                                         ; preds = %do.end70, %if.end55.do.end79_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_sysctl_exit() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_key_type(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_unregister(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @proto_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_pernet_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_destroy_client_conn_ids() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_exit_security() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @af_rxrpc_init() #8 section ".init.text" align 64 {
entry:
  %tmp = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #14
  %0 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %tmp, align 4, !annotation !1505
  call void @get_random_bytes(ptr noundef nonnull %tmp, i32 noundef 4) #14
  %1 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %tmp, align 4
  %and = and i32 %2, 1073741823
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  %spec.store.select = select i1 %cmp, i32 1, i32 %and
  %3 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %spec.store.select, ptr %tmp, align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.idr, ptr @rxrpc_client_conn_ids, i32 0, i32 2) to i32))
  store volatile i32 %spec.store.select, ptr getelementptr inbounds (%struct.idr, ptr @rxrpc_client_conn_ids, i32 0, i32 2), align 4
  %call = call ptr @kmem_cache_create(ptr noundef nonnull @.str.489, i32 noundef 784, i32 noundef 0, i32 noundef 8192, ptr noundef null) #14
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rxrpc_call_jar to i32))
  store ptr %call, ptr @rxrpc_call_jar, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end4, label %if.end7

do.end4:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call6 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.490) #17
  br label %cleanup

if.end7:                                          ; preds = %entry
  %call8 = call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.492, i32 noundef 0, i32 noundef 1) #14
  store ptr %call8, ptr @rxrpc_workqueue, align 4
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %do.end13, label %if.end16

do.end13:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %call15 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.494) #17
  br label %error_work_queue

if.end16:                                         ; preds = %if.end7
  %call17 = call i32 @rxrpc_init_security() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %do.end22, label %if.end25

do.end22:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.497) #17
  br label %error_security

if.end25:                                         ; preds = %if.end16
  %call26 = call i32 @register_pernet_device(ptr noundef nonnull @rxrpc_net_ops) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end29, label %if.end25.error_pernet_crit_edge

if.end25.error_pernet_crit_edge:                  ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_pernet

if.end29:                                         ; preds = %if.end25
  %call30 = call i32 @proto_register(ptr noundef nonnull @rxrpc_proto, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %cmp31 = icmp slt i32 %call30, 0
  br i1 %cmp31, label %do.end35, label %if.end38

do.end35:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %call37 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.500) #17
  br label %error_proto

if.end38:                                         ; preds = %if.end29
  %call39 = call i32 @sock_register(ptr noundef nonnull @rxrpc_family_ops) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %cmp40 = icmp slt i32 %call39, 0
  br i1 %cmp40, label %do.end44, label %if.end47

do.end44:                                         ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  %call46 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.503) #17
  br label %error_sock

if.end47:                                         ; preds = %if.end38
  %call48 = call i32 @register_key_type(ptr noundef nonnull @key_type_rxrpc) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %cmp49 = icmp slt i32 %call48, 0
  br i1 %cmp49, label %do.end53, label %if.end56

do.end53:                                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #16
  %call55 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.506) #17
  br label %error_key_type

if.end56:                                         ; preds = %if.end47
  %call57 = call i32 @register_key_type(ptr noundef nonnull @key_type_rxrpc_s) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %cmp58 = icmp slt i32 %call57, 0
  br i1 %cmp58, label %do.end62, label %if.end65

do.end62:                                         ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #16
  %call64 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.509) #17
  br label %error_key_type_s

if.end65:                                         ; preds = %if.end56
  %call66 = call i32 @rxrpc_sysctl_init() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %cmp67 = icmp slt i32 %call66, 0
  br i1 %cmp67, label %do.end71, label %if.end65.cleanup_crit_edge

if.end65.cleanup_crit_edge:                       ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end71:                                         ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #16
  %call73 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.512) #17
  call void @unregister_key_type(ptr noundef nonnull @key_type_rxrpc_s) #14
  br label %error_key_type_s

error_key_type_s:                                 ; preds = %do.end71, %do.end62
  %ret.0 = phi i32 [ %call57, %do.end62 ], [ %call66, %do.end71 ]
  call void @unregister_key_type(ptr noundef nonnull @key_type_rxrpc) #14
  br label %error_key_type

error_key_type:                                   ; preds = %error_key_type_s, %do.end53
  %ret.1 = phi i32 [ %call48, %do.end53 ], [ %ret.0, %error_key_type_s ]
  call void @sock_unregister(i32 noundef 33) #14
  br label %error_sock

error_sock:                                       ; preds = %error_key_type, %do.end44
  %ret.2 = phi i32 [ %call39, %do.end44 ], [ %ret.1, %error_key_type ]
  call void @proto_unregister(ptr noundef nonnull @rxrpc_proto) #14
  br label %error_proto

error_proto:                                      ; preds = %error_sock, %do.end35
  %ret.3 = phi i32 [ %call30, %do.end35 ], [ %ret.2, %error_sock ]
  call void @unregister_pernet_device(ptr noundef nonnull @rxrpc_net_ops) #14
  br label %error_pernet

error_pernet:                                     ; preds = %error_proto, %if.end25.error_pernet_crit_edge
  %ret.4 = phi i32 [ %call26, %if.end25.error_pernet_crit_edge ], [ %ret.3, %error_proto ]
  call void @rxrpc_exit_security() #14
  br label %error_security

error_security:                                   ; preds = %error_pernet, %do.end22
  %ret.5 = phi i32 [ %call17, %do.end22 ], [ %ret.4, %error_pernet ]
  %4 = load ptr, ptr @rxrpc_workqueue, align 4
  call void @destroy_workqueue(ptr noundef %4) #14
  br label %error_work_queue

error_work_queue:                                 ; preds = %error_security, %do.end13
  %ret.6 = phi i32 [ %ret.5, %error_security ], [ -12, %do.end13 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rxrpc_call_jar to i32))
  %5 = load ptr, ptr @rxrpc_call_jar, align 4
  call void @kmem_cache_destroy(ptr noundef %5) #14
  br label %cleanup

cleanup:                                          ; preds = %error_work_queue, %if.end65.cleanup_crit_edge, %do.end4
  %retval.0 = phi i32 [ 0, %if.end65.cleanup_crit_edge ], [ %ret.6, %error_work_queue ], [ -12, %do.end4 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_local(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %local = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %local to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %local, align 4
  %op = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %op, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_local.symbols) #14
  %usage = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usage, align 4
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_local, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %where, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.173, i32 noundef %3, ptr noundef %call1, i32 noundef %7, ptr noundef %9) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_peer(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %peer = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %peer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %peer, align 4
  %op = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %op, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_peer.symbols) #14
  %usage = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usage, align 4
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_peer, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %where, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.180, i32 noundef %3, ptr noundef %call1, i32 noundef %7, ptr noundef %9) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_conn(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %conn = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %conn, align 4
  %op = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %op, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_conn.symbols) #14
  %usage = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usage, align 4
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_conn, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %where, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.182, i32 noundef %3, ptr noundef %call1, i32 noundef %7, ptr noundef %9) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_client(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %conn = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %conn, align 4
  %channel = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %channel to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %channel, align 4
  %op = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %op, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rxrpc_client.symbols) #14
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cid, align 4
  %usage = getelementptr inbounds %struct.trace_event_raw_rxrpc_client, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %usage, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.193, i32 noundef %3, i32 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_call(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %op = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %op, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_call.symbols) #14
  %usage = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usage, align 4
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %where, align 4
  %aux = getelementptr inbounds %struct.trace_event_raw_rxrpc_call, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %aux, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.209, i32 noundef %3, ptr noundef %call2, i32 noundef %7, ptr noundef %9, ptr noundef %11) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_skb(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %skb = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skb, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %flags1, align 4
  %6 = and i8 %5, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  %cond = select i1 %tobool.not, i32 82, i32 84
  %op = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %1, i32 0, i32 2
  %7 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %op, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %8, ptr noundef nonnull @trace_raw_output_rxrpc_skb.symbols) #14
  %usage = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %1, i32 0, i32 4
  %9 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %usage, align 4
  %mod_count = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %1, i32 0, i32 5
  %11 = ptrtoint ptr %mod_count to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mod_count, align 4
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_skb, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %where, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.225, ptr noundef %3, i32 noundef %cond, ptr noundef %call2, i32 noundef %10, i32 noundef %12, ptr noundef %14) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_packet(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %hdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hdr, align 4
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cid, align 4
  %callNumber = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 2
  %6 = ptrtoint ptr %callNumber to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %callNumber, align 4
  %serviceId = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 10
  %8 = ptrtoint ptr %serviceId to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %serviceId, align 2
  %conv = zext i16 %9 to i32
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %serial, align 4
  %seq6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %seq6 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %seq6, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 5
  %14 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %type, align 4
  %conv8 = zext i8 %15 to i32
  %flags10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_packet, ptr %1, i32 0, i32 1, i32 6
  %16 = ptrtoint ptr %flags10 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %flags10, align 1
  %conv11 = zext i8 %17 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %15)
  %cmp15 = icmp ult i8 %15, 16
  br i1 %cmp15, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call20 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv8, ptr noundef nonnull @trace_raw_output_rxrpc_rx_packet.symbols) #14
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call20, %cond.true ], [ @.str.253, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.236, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %conv, i32 noundef %11, i32 noundef %13, i32 noundef %conv8, i32 noundef %conv11, ptr noundef %cond) #14
  %call21 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call21, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_done(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %result = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_done, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %result to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %result, align 4
  %abort_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_done, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %abort_code, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.256, i32 noundef %3, i32 noundef %5) #14
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_abort(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call_nr = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call_nr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call_nr, align 4
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cid, align 4
  %call_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call_id, align 4
  %seq1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %seq1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seq1, align 4
  %abort_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %abort_code, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %error, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_abort, ptr %1, i32 0, i32 2
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.264, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %why) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_call_complete(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %compl = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %compl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %compl, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_call_complete.symbols) #14
  %error = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  %abort_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_complete, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %abort_code, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.267, i32 noundef %3, ptr noundef %call2, i32 noundef %7, i32 noundef %9) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_transmit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_transmit.symbols) #14
  %tx_hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %tx_hard_ack to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tx_hard_ack, align 4
  %add = add i32 %7, 1
  %tx_top = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %tx_top to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %tx_top, align 4
  %sub = sub i32 %9, %7
  %tx_winsize = getelementptr inbounds %struct.trace_event_raw_rxrpc_transmit, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %tx_winsize to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tx_winsize, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.277, i32 noundef %3, ptr noundef %call2, i32 noundef %add, i32 noundef %sub, i32 noundef %11) #14
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_data(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %seq2 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %seq2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %seq2, align 4
  %flags3 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %flags3 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %flags3, align 4
  %conv = zext i8 %9 to i32
  %anno = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_data, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %anno to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %anno, align 1
  %conv4 = zext i8 %11 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.285, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %conv, i32 noundef %conv4) #14
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_ack(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %reason to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %reason, align 4
  %conv = zext i8 %7 to i32
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_rxrpc_rx_ack.symbols) #14
  %ack_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %ack_serial to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ack_serial, align 4
  %first = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %first, align 4
  %prev = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %prev, align 4
  %n_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_ack, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %n_acks to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %n_acks, align 1
  %conv3 = zext i8 %15 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.291, i32 noundef %3, i32 noundef %5, ptr noundef %call2, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %conv3) #14
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_abort(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %abort_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_abort, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %abort_code, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.303, i32 noundef %3, i32 noundef %5, i32 noundef %7) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_rwind_change(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %rwind = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %rwind to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rwind, align 4
  %wake = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_rwind_change, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %wake to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %wake, align 4, !range !1508
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  %cond = select i1 %tobool.not, ptr @.str.309, ptr @.str.308
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.307, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef nonnull %cond) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_tx_packet(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %whdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %whdr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %whdr, align 4
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 1
  %6 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cid, align 4
  %callNumber = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 2
  %8 = ptrtoint ptr %callNumber to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %callNumber, align 4
  %serviceId = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 10
  %10 = ptrtoint ptr %serviceId to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %serviceId, align 2
  %conv = zext i16 %11 to i32
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 4
  %12 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %serial, align 4
  %seq7 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 3
  %14 = ptrtoint ptr %seq7 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %seq7, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 5
  %16 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type, align 4
  %conv9 = zext i8 %17 to i32
  %flags11 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 3, i32 6
  %18 = ptrtoint ptr %flags11 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %flags11, align 1
  %conv12 = zext i8 %19 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %17)
  %cmp16 = icmp ult i8 %17, 16
  br i1 %cmp16, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call21 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv9, ptr noundef nonnull @trace_raw_output_rxrpc_tx_packet.symbols) #14
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call21, %cond.true ], [ @.str.253, %if.end.cond.end_crit_edge ]
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_packet, ptr %1, i32 0, i32 2
  %20 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %where, align 4
  %call23 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %21, ptr noundef nonnull @trace_raw_output_rxrpc_tx_packet.symbols.314) #14
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.313, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %conv, i32 noundef %13, i32 noundef %15, i32 noundef %conv9, i32 noundef %conv12, ptr noundef %cond, ptr noundef %call23) #14
  %call24 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call24, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_tx_data(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cid, align 4
  %call_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call_id, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %serial, align 4
  %seq2 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %seq2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %seq2, align 4
  %flags3 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %flags3 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %flags3, align 4
  %conv = zext i8 %13 to i32
  %retrans = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %retrans to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %retrans, align 1, !range !1508
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  %cond = select i1 %tobool.not, ptr @.str.309, ptr @.str.329
  %lose = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_data, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %lose to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %lose, align 2, !range !1508
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool5.not = icmp eq i8 %17, 0
  %cond7 = select i1 %tobool5.not, ptr @.str.309, ptr @.str.330
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.328, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %conv, ptr noundef nonnull %cond, ptr noundef nonnull %cond7) #14
  %call8 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_tx_ack(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %reason to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %reason, align 4
  %conv = zext i8 %7 to i32
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_rxrpc_tx_ack.symbols) #14
  %ack_first = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %ack_first to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ack_first, align 4
  %ack_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %ack_serial to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ack_serial, align 4
  %n_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_ack, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %n_acks to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %n_acks, align 1
  %conv3 = zext i8 %13 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.332, i32 noundef %3, i32 noundef %5, ptr noundef %call2, i32 noundef %9, i32 noundef %11, i32 noundef %conv3) #14
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_receive(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_receive.symbols) #14
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %serial, align 4
  %seq3 = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %seq3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seq3, align 4
  %hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %hard_ack to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %hard_ack, align 4
  %top = getelementptr inbounds %struct.trace_event_raw_rxrpc_receive, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %top to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %top, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.336, i32 noundef %3, ptr noundef %call2, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #14
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_recvmsg(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_recvmsg.symbols) #14
  %seq3 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %seq3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %seq3, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %offset, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len, align 4
  %ret4 = getelementptr inbounds %struct.trace_event_raw_rxrpc_recvmsg, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %ret4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ret4, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.343, i32 noundef %3, ptr noundef %call2, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #14
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rtt_tx(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %slot = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %slot, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rxrpc_rtt_tx.symbols) #14
  %send_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_tx, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %send_serial to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %send_serial, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.358, i32 noundef %3, i32 noundef %5, ptr noundef %call2, i32 noundef %9) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rtt_rx(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %slot = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %slot to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %slot, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rxrpc_rtt_rx.symbols) #14
  %send_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %send_serial to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %send_serial, align 4
  %resp_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %resp_serial to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %resp_serial, align 4
  %rtt = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %rtt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rtt, align 4
  %rto = getelementptr inbounds %struct.trace_event_raw_rxrpc_rtt_rx, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %rto to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rto, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.365, i32 noundef %3, i32 noundef %5, ptr noundef %call2, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_timer(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_timer.symbols) #14
  %ack_at = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %ack_at to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ack_at, align 4
  %now = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %now to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %now, align 4
  %sub = sub i32 %7, %9
  %ack_lost_at = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %ack_lost_at to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ack_lost_at, align 4
  %sub4 = sub i32 %11, %9
  %resend_at = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %resend_at to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %resend_at, align 4
  %sub6 = sub i32 %13, %9
  %expect_rx_by = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %expect_rx_by to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %expect_rx_by, align 4
  %sub8 = sub i32 %15, %9
  %expect_req_by = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %expect_req_by to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %expect_req_by, align 4
  %sub10 = sub i32 %17, %9
  %expect_term_by = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %expect_term_by to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %expect_term_by, align 4
  %sub12 = sub i32 %19, %9
  %timer = getelementptr inbounds %struct.trace_event_raw_rxrpc_timer, ptr %1, i32 0, i32 11
  %20 = ptrtoint ptr %timer to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %timer, align 4
  %sub14 = sub i32 %21, %9
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.382, i32 noundef %3, ptr noundef %call2, i32 noundef %sub, i32 noundef %sub4, i32 noundef %sub6, i32 noundef %sub8, i32 noundef %sub10, i32 noundef %sub12, i32 noundef %sub14) #14
  %call15 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_lose(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %hdr = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hdr, align 4
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cid, align 4
  %callNumber = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 2
  %6 = ptrtoint ptr %callNumber to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %callNumber, align 4
  %serviceId = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 10
  %8 = ptrtoint ptr %serviceId to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %serviceId, align 2
  %conv = zext i16 %9 to i32
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %serial, align 4
  %seq6 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %seq6 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %seq6, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 5
  %14 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %type, align 4
  %conv8 = zext i8 %15 to i32
  %flags10 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_lose, ptr %1, i32 0, i32 1, i32 6
  %16 = ptrtoint ptr %flags10 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %flags10, align 1
  %conv11 = zext i8 %17 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %15)
  %cmp15 = icmp ult i8 %15, 16
  br i1 %cmp15, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call20 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv8, ptr noundef nonnull @trace_raw_output_rxrpc_rx_lose.symbols) #14
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call20, %cond.true ], [ @.str.253, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.405, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %conv, i32 noundef %11, i32 noundef %13, i32 noundef %conv8, i32 noundef %conv11, ptr noundef %cond) #14
  %call21 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call21, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_propose_ack(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %why, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_rxrpc_propose_ack.symbols) #14
  %ack_reason = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %ack_reason to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %ack_reason, align 4
  %conv = zext i8 %7 to i32
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_rxrpc_propose_ack.symbols.426) #14
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %serial, align 4
  %immediate = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %immediate to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %immediate, align 1, !range !1508
  %12 = zext i8 %11 to i32
  %background = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %background to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %background, align 2, !range !1508
  %15 = zext i8 %14 to i32
  %outcome = getelementptr inbounds %struct.trace_event_raw_rxrpc_propose_ack, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %outcome to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %outcome, align 4
  %call9 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %17, ptr noundef nonnull @trace_raw_output_rxrpc_propose_ack.symbols.427) #14
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.412, i32 noundef %3, ptr noundef %call2, ptr noundef %call4, i32 noundef %9, i32 noundef %12, i32 noundef %15, ptr noundef %call9) #14
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_retransmit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 8
  %seq2 = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %seq2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %seq2, align 4
  %annotation = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %annotation to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %annotation, align 8
  %conv = zext i8 %7 to i32
  %expiry = getelementptr inbounds %struct.trace_event_raw_rxrpc_retransmit, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %expiry to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %expiry, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.434, i32 noundef %3, i32 noundef %5, i32 noundef %conv, i64 noundef %9) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_congest(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %ack_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %ack_serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ack_serial, align 4
  %sum = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %sum to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %sum, align 4
  %conv = zext i8 %7 to i32
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_rxrpc_congest.symbols) #14
  %hard_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %hard_ack to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %hard_ack, align 4
  %mode = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 9
  %10 = ptrtoint ptr %mode to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %mode, align 1
  %bf.cast = zext i8 %bf.load to i32
  %call5 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %bf.cast, ptr noundef nonnull @trace_raw_output_rxrpc_congest.symbols.441) #14
  %cwnd = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 10
  %11 = ptrtoint ptr %cwnd to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %cwnd, align 2
  %conv7 = zext i8 %12 to i32
  %ssthresh = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 11
  %13 = ptrtoint ptr %ssthresh to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %ssthresh, align 1
  %conv9 = zext i8 %14 to i32
  %nr_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 1
  %15 = ptrtoint ptr %nr_acks to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %nr_acks, align 1
  %conv11 = zext i8 %16 to i32
  %nr_nacks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 2
  %17 = ptrtoint ptr %nr_nacks to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %nr_nacks, align 2
  %conv13 = zext i8 %18 to i32
  %nr_new_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 3
  %19 = ptrtoint ptr %nr_new_acks to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %nr_new_acks, align 1
  %conv15 = zext i8 %20 to i32
  %nr_new_nacks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 4
  %21 = ptrtoint ptr %nr_new_nacks to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %nr_new_nacks, align 4
  %conv17 = zext i8 %22 to i32
  %nr_rot_new_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 5
  %23 = ptrtoint ptr %nr_rot_new_acks to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %nr_rot_new_acks, align 1
  %conv19 = zext i8 %24 to i32
  %top = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 4
  %25 = ptrtoint ptr %top to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %top, align 4
  %27 = ptrtoint ptr %hard_ack to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %hard_ack, align 4
  %sub = sub i32 %26, %28
  %cumulative_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 13
  %29 = ptrtoint ptr %cumulative_acks to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %cumulative_acks, align 1
  %conv22 = zext i8 %30 to i32
  %dup_acks = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 12
  %31 = ptrtoint ptr %dup_acks to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %dup_acks, align 4
  %conv24 = zext i8 %32 to i32
  %lowest_nak = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 5
  %33 = ptrtoint ptr %lowest_nak to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %lowest_nak, align 4
  %new_low_nack = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 6
  %35 = ptrtoint ptr %new_low_nack to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %new_low_nack, align 2, !range !1508
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.not = icmp eq i8 %36, 0
  %cond = select i1 %tobool.not, ptr @.str.309, ptr @.str.446
  %change = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 2
  %37 = ptrtoint ptr %change to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %change, align 4
  %call28 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %38, ptr noundef nonnull @trace_raw_output_rxrpc_congest.symbols.447) #14
  %retrans_timeo = getelementptr inbounds %struct.trace_event_raw_rxrpc_congest, ptr %1, i32 0, i32 7, i32 7
  %39 = ptrtoint ptr %retrans_timeo to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %retrans_timeo, align 1, !range !1508
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool30.not = icmp eq i8 %40, 0
  %cond32 = select i1 %tobool30.not, ptr @.str.309, ptr @.str.456
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.440, i32 noundef %3, i32 noundef %5, ptr noundef %call2, i32 noundef %9, ptr noundef %call5, i32 noundef %conv7, i32 noundef %conv9, i32 noundef %conv11, i32 noundef %conv13, i32 noundef %conv15, i32 noundef %conv17, i32 noundef %conv19, i32 noundef %sub, i32 noundef %conv22, i32 noundef %conv24, i32 noundef %34, ptr noundef nonnull %cond, ptr noundef %call28, ptr noundef nonnull %cond32) #14
  %call33 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call33, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_disconnect_call(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_disconnect_call, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %abort_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_disconnect_call, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %abort_code, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.457, i32 noundef %3, i32 noundef %5) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_improper_term(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_improper_term, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %abort_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_improper_term, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %abort_code to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %abort_code, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.457, i32 noundef %3, i32 noundef %5) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_eproto(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %why = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_eproto, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %why to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %why, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.459, i32 noundef %3, i32 noundef %5, ptr noundef %7) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_connect_call(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %user_call_ID = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %user_call_ID to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %user_call_ID, align 4
  %6 = inttoptr i32 %5 to ptr
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cid, align 4
  %call_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_connect_call, ptr %1, i32 0, i32 4
  %9 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.462, i32 noundef %3, ptr noundef %6, i32 noundef %8, i32 noundef %10) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_resend(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %call1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %ix = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ix to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ix, align 4
  %anno = getelementptr inbounds %struct.trace_event_raw_rxrpc_resend, ptr %1, i32 0, i32 3
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.465, i32 noundef %3, i32 noundef %5, ptr noundef %anno) #14
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_icmp(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %peer = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %peer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %peer, align 4
  %ee = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 2
  %ee_origin = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 2, i32 1
  %4 = ptrtoint ptr %ee_origin to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %ee_origin, align 4
  %conv = zext i8 %5 to i32
  %ee_type = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 2, i32 2
  %6 = ptrtoint ptr %ee_type to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %ee_type, align 1
  %conv2 = zext i8 %7 to i32
  %ee_code = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 2, i32 3
  %8 = ptrtoint ptr %ee_code to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %ee_code, align 2
  %conv4 = zext i8 %9 to i32
  %ee_info = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 2, i32 5
  %10 = ptrtoint ptr %ee_info to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ee_info, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 2, i32 6
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %15 = ptrtoint ptr %ee to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ee, align 4
  %transport = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_icmp, ptr %1, i32 0, i32 3, i32 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.470, i32 noundef %3, i32 noundef %conv, i32 noundef %conv2, i32 noundef %conv4, i32 noundef %11, i32 noundef %14, i32 noundef %16, ptr noundef %transport) #14
  %call8 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_tx_fail(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %debug_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %debug_id, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %ret1 = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ret1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ret1, align 4
  %where = getelementptr inbounds %struct.trace_event_raw_rxrpc_tx_fail, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %where, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_rxrpc_tx_fail.symbols) #14
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.472, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %call2) #14
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_call_reset(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %debug_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %debug_id, align 4
  %cid = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cid, align 4
  %call_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %call_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call_id, align 4
  %call_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %call_serial to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call_serial, align 4
  %conn_serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %conn_serial to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %conn_serial, align 4
  %tx_seq = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %tx_seq to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tx_seq, align 4
  %rx_seq = getelementptr inbounds %struct.trace_event_raw_rxrpc_call_reset, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %rx_seq to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rx_seq, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.477, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #14
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_notify_socket(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %debug_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_notify_socket, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %debug_id, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_notify_socket, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.478, i32 noundef %3, i32 noundef %5) #14
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rxrpc_rx_discard_ack(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %debug_id = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %debug_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %debug_id, align 4
  %serial = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %serial to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %serial, align 4
  %first_soft_ack = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %first_soft_ack to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %first_soft_ack, align 4
  %call_ackr_first = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %call_ackr_first to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call_ackr_first, align 4
  %prev_pkt = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %prev_pkt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %prev_pkt, align 4
  %call_ackr_prev = getelementptr inbounds %struct.trace_event_raw_rxrpc_rx_discard_ack, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %call_ackr_prev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call_ackr_prev, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.483, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #14
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #9

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #9

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_sock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rxrpc_timer(ptr noundef %call, i32 noundef %now) unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_timer, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rxrpc_timer, %do.body)) #14
          to label %if.end49 [label %do.body], !srcloc !1509

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1503

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.488, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end70_crit_edge, label %if.end32

cpu_online.exit.if.end70_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70

if.end32:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1510
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_timer, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end49.critedge, label %if.end32.do.body2.i_crit_edge

if.end32.do.body2.i_crit_edge:                    ; preds = %if.end32
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end32.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end32.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %call, i32 noundef 14, i32 noundef %now) #14
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1511
  br label %if.end49.sink.split

if.end49.critedge:                                ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1511
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %if.end49.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end49.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end49.cpu_online.exit14_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end49
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !1503

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.488, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end49.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end70_crit_edge, label %if.then53

cpu_online.exit14.if.end70_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70

if.then53:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1512
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rxrpc_timer, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %if.then53.do.end68_crit_edge

if.then53.do.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %land.lhs.true.do.end68_crit_edge, label %land.lhs.true63

land.lhs.true.do.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end68

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_rxrpc_timer.__warned, align 1
  br i1 %.b1, label %land.lhs.true63.do.end68_crit_edge, label %if.then65

land.lhs.true63.do.end68_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end68

if.then65:                                        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_rxrpc_timer.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.486, i32 noundef 1181, ptr noundef nonnull @.str.487) #14
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63.do.end68_crit_edge, %land.lhs.true.do.end68_crit_edge, %if.then53.do.end68_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1513
  %38 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit14.if.end70_crit_edge, %cpu_online.exit.if.end70_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @timer_reduce(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @rxrpc_init_security() local_unnamed_addr #3 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proto_register(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_key_type(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @rxrpc_sysctl_init() local_unnamed_addr #3 section ".init.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_create(ptr noundef %net, ptr noundef %sock, i32 noundef %protocol, i32 noundef %kern) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end6_crit_edge, label %do.end, !prof !1503

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %1 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.514, ptr noundef %comm, ptr noundef nonnull @.str.515, ptr noundef %sock, i32 noundef %protocol) #17
  br label %do.end6

do.end6:                                          ; preds = %do.end, %entry.do.end6_crit_edge
  %5 = zext i32 %protocol to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.572)
  switch i32 %protocol, label %do.end6.cleanup_crit_edge [
    i32 2, label %do.end6.if.end9_crit_edge
    i32 10, label %do.end6.if.end9_crit_edge85
  ]

do.end6.if.end9_crit_edge85:                      ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

do.end6.if.end9_crit_edge:                        ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

do.end6.cleanup_crit_edge:                        ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %do.end6.if.end9_crit_edge, %do.end6.if.end9_crit_edge85
  %type = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 1
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %7)
  %cmp10.not = icmp eq i16 %7, 2
  br i1 %cmp10.not, label %if.end13, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  %ops = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 5
  %8 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @rxrpc_rpc_ops, ptr %ops, align 4
  %9 = ptrtoint ptr %sock to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %sock, align 128
  %call14 = tail call ptr @sk_alloc(ptr noundef %net, i32 noundef 33, i32 noundef 3264, ptr noundef nonnull @rxrpc_proto, i32 noundef %kern) #14
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end13.cleanup_crit_edge, label %if.end17

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %if.end13
  tail call void @sock_init_data(ptr noundef %sock, ptr noundef nonnull %call14) #14
  %10 = getelementptr inbounds %struct.sock_common, ptr %call14, i32 0, i32 13
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %or.i.i = or i32 %12, 8388608
  store i32 %or.i.i, ptr %10, align 4
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %call14, i32 0, i32 4
  %13 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %13)
  store volatile i8 0, ptr %skc_state, align 2
  %sk_write_space = getelementptr inbounds %struct.sock, ptr %call14, i32 0, i32 78
  %14 = ptrtoint ptr %sk_write_space to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @rxrpc_write_space, ptr %sk_write_space, align 4
  %sk_max_ack_backlog = getelementptr inbounds %struct.sock, ptr %call14, i32 0, i32 54
  %15 = ptrtoint ptr %sk_max_ack_backlog to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %sk_max_ack_backlog, align 8
  %sk_destruct = getelementptr inbounds %struct.sock, ptr %call14, i32 0, i32 82
  %16 = ptrtoint ptr %sk_destruct to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @rxrpc_sock_destructor, ptr %sk_destruct, align 4
  %conv19 = trunc i32 %protocol to i16
  %family = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 19
  %17 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %conv19, ptr %family, align 8
  %calls = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 12
  %18 = ptrtoint ptr %calls to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %calls, align 8
  %incoming_lock = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 5
  tail call void @__raw_spin_lock_init(ptr noundef %incoming_lock, ptr noundef nonnull @.str.516, ptr noundef nonnull @rxrpc_create.__key, i16 noundef signext 3) #14
  %sock_calls = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 6
  %19 = ptrtoint ptr %sock_calls to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %sock_calls, ptr %sock_calls, align 4
  %prev.i = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 6, i32 1
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %sock_calls, ptr %prev.i, align 4
  %to_be_accepted = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 7
  %21 = ptrtoint ptr %to_be_accepted to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %to_be_accepted, ptr %to_be_accepted, align 4
  %prev.i82 = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 7, i32 1
  %22 = ptrtoint ptr %prev.i82 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %to_be_accepted, ptr %prev.i82, align 4
  %recvmsg_q = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 8
  %23 = ptrtoint ptr %recvmsg_q to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %recvmsg_q, ptr %recvmsg_q, align 4
  %prev.i83 = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 8, i32 1
  %24 = ptrtoint ptr %prev.i83 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %recvmsg_q, ptr %prev.i83, align 4
  %recvmsg_lock = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 9
  tail call void @__rwlock_init(ptr noundef %recvmsg_lock, ptr noundef nonnull @.str.518, ptr noundef nonnull @rxrpc_create.__key.517) #14
  %call_lock = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 14
  tail call void @__rwlock_init(ptr noundef %call_lock, ptr noundef nonnull @.str.520, ptr noundef nonnull @rxrpc_create.__key.519) #14
  %srx = getelementptr inbounds %struct.rxrpc_sock, ptr %call14, i32 0, i32 20
  %25 = call ptr @memset(ptr %srx, i32 0, i32 36)
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %call14, i32 0, i32 9
  %26 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %skc_net.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rxrpc_net_id to i32))
  %28 = load i32, ptr @rxrpc_net_id, align 4
  %29 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %32, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1514
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i.i.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i.i.i, label %if.end17.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end17.rcu_read_lock.exit.i.i_crit_edge:        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end17
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.563, i32 noundef 696, ptr noundef nonnull @.str.564) #14
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %if.end17.rcu_read_lock.exit.i.i_crit_edge
  %gen.i.i = getelementptr inbounds %struct.net, ptr %27, i32 0, i32 43
  %33 = ptrtoint ptr %gen.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %gen.i.i, align 128
  %call.i.i = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %rcu_read_lock.exit.i.i.do.end7.i.i_crit_edge

rcu_read_lock.exit.i.i.do.end7.i.i_crit_edge:     ; preds = %rcu_read_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7.i.i

land.lhs.true.i.i:                                ; preds = %rcu_read_lock.exit.i.i
  %call2.i.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i.do.end7.i.i_crit_edge, label %land.lhs.true4.i.i

land.lhs.true.i.i.do.end7.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7.i.i

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i.i
  %.b9.i.i = load i1, ptr @net_generic.__warned, align 1
  br i1 %.b9.i.i, label %land.lhs.true4.i.i.do.end7.i.i_crit_edge, label %if.then.i.i

land.lhs.true4.i.i.do.end7.i.i_crit_edge:         ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7.i.i

if.then.i.i:                                      ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @net_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.571, i32 noundef 45, ptr noundef nonnull @.str.487) #14
  br label %do.end7.i.i

do.end7.i.i:                                      ; preds = %if.then.i.i, %land.lhs.true4.i.i.do.end7.i.i_crit_edge, %land.lhs.true.i.i.do.end7.i.i_crit_edge, %rcu_read_lock.exit.i.i.do.end7.i.i_crit_edge
  %arrayidx.i.i = getelementptr [0 x ptr], ptr %34, i32 0, i32 %28
  %35 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i.i, align 4
  %call.i10.i.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i10.i.i, label %do.end7.i.i.rxrpc_net.exit_crit_edge, label %land.lhs.true.i13.i.i

do.end7.i.i.rxrpc_net.exit_crit_edge:             ; preds = %do.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rxrpc_net.exit

land.lhs.true.i13.i.i:                            ; preds = %do.end7.i.i
  %call1.i11.i.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11.i.i)
  %tobool.not.i12.i.i = icmp eq i32 %call1.i11.i.i, 0
  br i1 %tobool.not.i12.i.i, label %land.lhs.true.i13.i.i.rxrpc_net.exit_crit_edge, label %land.lhs.true2.i15.i.i

land.lhs.true.i13.i.i.rxrpc_net.exit_crit_edge:   ; preds = %land.lhs.true.i13.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rxrpc_net.exit

land.lhs.true2.i15.i.i:                           ; preds = %land.lhs.true.i13.i.i
  %.b4.i14.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14.i.i, label %land.lhs.true2.i15.i.i.rxrpc_net.exit_crit_edge, label %if.then.i16.i.i

land.lhs.true2.i15.i.i.rxrpc_net.exit_crit_edge:  ; preds = %land.lhs.true2.i15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rxrpc_net.exit

if.then.i16.i.i:                                  ; preds = %land.lhs.true2.i15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.563, i32 noundef 724, ptr noundef nonnull @.str.566) #14
  br label %rxrpc_net.exit

rxrpc_net.exit:                                   ; preds = %if.then.i16.i.i, %land.lhs.true2.i15.i.i.rxrpc_net.exit_crit_edge, %land.lhs.true.i13.i.i.rxrpc_net.exit_crit_edge, %do.end7.i.i.rxrpc_net.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1515
  %37 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i17.i.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i17.i.i to ptr
  %preempt_count.i.i.i.i18.i.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i18.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i18.i.i, align 4
  %sub.i.i.i.i.i = add i32 %40, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i18.i.i, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  %peer_keepalive_timer = getelementptr inbounds %struct.rxrpc_net, ptr %36, i32 0, i32 27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %41 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %41, 1
  %call33 = tail call i32 @timer_reduce(ptr noundef %peer_keepalive_timer, i32 noundef %add) #14
  %42 = load i32, ptr @rxrpc_debug, align 4
  %and35 = and i32 %42, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and35)
  %tobool36.not = icmp eq i32 %and35, 0
  br i1 %tobool36.not, label %rxrpc_net.exit.cleanup_crit_edge, label %do.end46, !prof !1503

rxrpc_net.exit.cleanup_crit_edge:                 ; preds = %rxrpc_net.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end46:                                         ; preds = %rxrpc_net.exit
  call void @__sanitizer_cov_trace_pc() #16
  %43 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i84 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i84 to ptr
  %task49 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 2
  %45 = ptrtoint ptr %task49 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %task49, align 8
  %comm50 = getelementptr inbounds %struct.task_struct, ptr %46, i32 0, i32 101
  %call52 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.522, ptr noundef %comm50, ptr noundef nonnull @.str.515, ptr noundef nonnull %call14) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end46, %rxrpc_net.exit.cleanup_crit_edge, %if.end13.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %do.end6.cleanup_crit_edge
  %retval.0 = phi i32 [ -93, %do.end6.cleanup_crit_edge ], [ -94, %if.end9.cleanup_crit_edge ], [ -12, %if.end13.cleanup_crit_edge ], [ 0, %do.end46 ], [ 0, %rxrpc_net.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sk_alloc(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_init_data(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rxrpc_write_space(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end, !prof !1503

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %1 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.561, ptr noundef %comm, ptr noundef nonnull @.str.562, ptr noundef %sk) #17
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  %5 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1514
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %do.end5.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

do.end5.rcu_read_lock.exit_crit_edge:             ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %do.end5
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.563, i32 noundef 696, ptr noundef nonnull @.str.564) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %do.end5.rcu_read_lock.exit_crit_edge
  %sk_wmem_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc.i, i32 noundef 4) #14
  %9 = ptrtoint ptr %sk_wmem_alloc.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %sk_wmem_alloc.i, align 4
  %sk_sndbuf.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %11 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sk_sndbuf.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %12)
  %cmp.i.not = icmp ult i32 %10, %12
  br i1 %cmp.i.not, label %if.then8, label %rcu_read_lock.exit.if.end27_crit_edge

rcu_read_lock.exit.if.end27_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.then8:                                         ; preds = %rcu_read_lock.exit
  %13 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %13, align 8
  %call13 = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %land.lhs.true, label %if.then8.do.end22_crit_edge

if.then8.do.end22_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end22

land.lhs.true:                                    ; preds = %if.then8
  %call15 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %land.lhs.true.do.end22_crit_edge, label %land.lhs.true17

land.lhs.true.do.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end22

land.lhs.true17:                                  ; preds = %land.lhs.true
  %.b32 = load i1, ptr @rxrpc_write_space.__warned, align 1
  br i1 %.b32, label %land.lhs.true17.do.end22_crit_edge, label %if.then19

land.lhs.true17.do.end22_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end22

if.then19:                                        ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rxrpc_write_space.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 64, ptr noundef nonnull @.str.487) #14
  br label %do.end22

do.end22:                                         ; preds = %if.then19, %land.lhs.true17.do.end22_crit_edge, %land.lhs.true.do.end22_crit_edge, %if.then8.do.end22_crit_edge
  %tobool.not.i33 = icmp eq ptr %15, null
  br i1 %tobool.not.i33, label %do.end22.if.end26_crit_edge, label %skwq_has_sleeper.exit

do.end22.if.end26_crit_edge:                      ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

skwq_has_sleeper.exit:                            ; preds = %do.end22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !1516
  %head.i.i.i = getelementptr inbounds %struct.wait_queue_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i.i.i.not = icmp eq ptr %17, %head.i.i.i
  br i1 %cmp.i.i.i.i.not, label %skwq_has_sleeper.exit.if.end26_crit_edge, label %if.then25

skwq_has_sleeper.exit.if.end26_crit_edge:         ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then25:                                        ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__wake_up(ptr noundef nonnull %15, i32 noundef 1, i32 noundef 1, ptr noundef null) #14
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %skwq_has_sleeper.exit.if.end26_crit_edge, %do.end22.if.end26_crit_edge
  %18 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  %21 = and i32 %20, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.i.not.i = icmp eq i32 %21, 0
  br i1 %tobool.i.not.i, label %if.end26.if.end27_crit_edge, label %if.then.i34

if.end26.if.end27_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.then.i34:                                      ; preds = %if.end26
  %22 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %25, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1514
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i.i, label %if.then.i34.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then.i34.rcu_read_lock.exit.i_crit_edge:       ; preds = %if.then.i34
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then.i34
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.563, i32 noundef 696, ptr noundef nonnull @.str.564) #14
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then.i34.rcu_read_lock.exit.i_crit_edge
  %26 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %13, align 8
  %call2.i = tail call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i35 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i35, label %land.lhs.true.i36, label %rcu_read_lock.exit.i.do.end9.i_crit_edge

rcu_read_lock.exit.i.do.end9.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end9.i

land.lhs.true.i36:                                ; preds = %rcu_read_lock.exit.i
  %call3.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i36.do.end9.i_crit_edge, label %land.lhs.true5.i

land.lhs.true.i36.do.end9.i_crit_edge:            ; preds = %land.lhs.true.i36
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end9.i

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i36
  %.b1.i = load i1, ptr @sk_wake_async.__warned, align 1
  br i1 %.b1.i, label %land.lhs.true5.i.do.end9.i_crit_edge, label %if.then7.i

land.lhs.true5.i.do.end9.i_crit_edge:             ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end9.i

if.then7.i:                                       ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @sk_wake_async.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.565, i32 noundef 2444, ptr noundef nonnull @.str.487) #14
  br label %do.end9.i

do.end9.i:                                        ; preds = %if.then7.i, %land.lhs.true5.i.do.end9.i_crit_edge, %land.lhs.true.i36.do.end9.i_crit_edge, %rcu_read_lock.exit.i.do.end9.i_crit_edge
  %call11.i = tail call i32 @sock_wake_async(ptr noundef %27, i32 noundef 2, i32 noundef 2) #14
  %call.i2.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i2.i, label %do.end9.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i5.i

do.end9.i.rcu_read_unlock.exit.i_crit_edge:       ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit.i

land.lhs.true.i5.i:                               ; preds = %do.end9.i
  %call1.i3.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i3.i)
  %tobool.not.i4.i = icmp eq i32 %call1.i3.i, 0
  br i1 %tobool.not.i4.i, label %land.lhs.true.i5.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i7.i

land.lhs.true.i5.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i7.i:                              ; preds = %land.lhs.true.i5.i
  %.b4.i6.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i6.i, label %land.lhs.true2.i7.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i8.i

land.lhs.true2.i7.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit.i

if.then.i8.i:                                     ; preds = %land.lhs.true2.i7.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.563, i32 noundef 724, ptr noundef nonnull @.str.566) #14
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i8.i, %land.lhs.true2.i7.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i5.i.rcu_read_unlock.exit.i_crit_edge, %do.end9.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1515
  %28 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i9.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i.i9.i to ptr
  %preempt_count.i.i.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i.i.i10.i, align 4
  %sub.i.i.i.i = add i32 %31, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i10.i, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  br label %if.end27

if.end27:                                         ; preds = %rcu_read_unlock.exit.i, %if.end26.if.end27_crit_edge, %rcu_read_lock.exit.if.end27_crit_edge
  %call.i37 = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i37, label %if.end27.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i40

if.end27.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true.i40:                                ; preds = %if.end27
  %call1.i38 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i38)
  %tobool.not.i39 = icmp eq i32 %call1.i38, 0
  br i1 %tobool.not.i39, label %land.lhs.true.i40.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i42

land.lhs.true.i40.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i40
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true2.i42:                               ; preds = %land.lhs.true.i40
  %.b4.i41 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i41, label %land.lhs.true2.i42.rcu_read_unlock.exit_crit_edge, label %if.then.i43

land.lhs.true2.i42.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i42
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

if.then.i43:                                      ; preds = %land.lhs.true2.i42
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.563, i32 noundef 724, ptr noundef nonnull @.str.566) #14
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i43, %land.lhs.true2.i42.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i40.rcu_read_unlock.exit_crit_edge, %if.end27.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !1515
  %32 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i44 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i.i.i44 to ptr
  %preempt_count.i.i.i.i45 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i.i.i45 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i.i.i45, align 4
  %sub.i.i.i = add i32 %35, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i45, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rxrpc_sock_destructor(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end, !prof !1503

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %1 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.561, ptr noundef %comm, ptr noundef nonnull @.str.567, ptr noundef %sk) #17
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8
  tail call void @rxrpc_purge_queue(ptr noundef %sk_receive_queue) #14
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #14
  %5 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %sk_wmem_alloc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not = icmp eq i32 %6, 0
  br i1 %tobool7.not, label %do.end5.if.end28_crit_edge, label %do.end22, !prof !1503

do.end5.if.end28_crit_edge:                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

do.end22:                                         ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.149, i32 noundef 838, i32 noundef 9, ptr noundef null) #14
  br label %if.end28

if.end28:                                         ; preds = %do.end22, %do.end5.if.end28_crit_edge
  %pprev.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 15, i32 0, i32 1
  %7 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %if.end28.if.end61_crit_edge, label %do.end55, !prof !1503

if.end28.if.end61_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

do.end55:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.149, i32 noundef 839, i32 noundef 9, ptr noundef null) #14
  br label %if.end61

if.end61:                                         ; preds = %do.end55, %if.end28.if.end61_crit_edge
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %9 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sk_socket, align 8
  %tobool70.not = icmp eq ptr %10, null
  br i1 %tobool70.not, label %if.end61.if.end92_crit_edge, label %do.end86, !prof !1503

if.end61.if.end92_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92

do.end86:                                         ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.149, i32 noundef 840, i32 noundef 9, ptr noundef null) #14
  br label %if.end92

if.end92:                                         ; preds = %do.end86, %if.end61.if.end92_crit_edge
  %11 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %14 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i.not = icmp eq i32 %14, 0
  br i1 %tobool.i.not, label %do.end104, label %if.end92.if.end107_crit_edge

if.end92.if.end107_crit_edge:                     ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end107

do.end104:                                        ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  %call106 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.569, ptr noundef %sk) #17
  br label %if.end107

if.end107:                                        ; preds = %do.end104, %if.end92.if.end107_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rwlock_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_release(ptr noundef %sock) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %2 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end7_crit_edge, label %do.end, !prof !1503

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.524, ptr noundef %comm, ptr noundef nonnull @.str.525, ptr noundef %sock, ptr noundef %1) #17
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  %tobool8.not = icmp eq ptr %1, null
  br i1 %tobool8.not, label %do.end7.cleanup_crit_edge, label %if.end10

do.end7.cleanup_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %do.end7
  %7 = ptrtoint ptr %sk1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %sk1, align 16
  %8 = load i32, ptr @rxrpc_debug, align 4
  %and.i17 = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i17)
  %tobool.not.i = icmp eq i32 %and.i17, 0
  br i1 %tobool.not.i, label %if.end10.do.end9.i_crit_edge, label %do.end.i, !prof !1503

if.end10.do.end9.i_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end9.i

do.end.i:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i, align 8
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 101
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %13 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %14 to i32
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %skc_refcnt.i, i32 noundef 4) #14
  %15 = ptrtoint ptr %skc_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %skc_refcnt.i, align 4
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.526, ptr noundef %comm.i, ptr noundef nonnull @.str.527, ptr noundef nonnull %1, i32 noundef %conv.i, i32 noundef %16) #17
  br label %do.end9.i

do.end9.i:                                        ; preds = %do.end.i, %if.end10.do.end9.i_crit_edge
  %sk_callback_lock.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i.i) #14
  %17 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %or.i.i.i.i = or i32 %19, 1
  store i32 %or.i.i.i.i, ptr %17, align 4
  %sk_socket.i.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 71
  %20 = ptrtoint ptr %sk_socket.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %sk_socket.i.i.i, align 8
  %21 = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 17
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %21, align 8
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i.i) #14
  %sk_shutdown.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 66
  %23 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 3, ptr %sk_shutdown.i, align 2
  %skc_state11.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %24 = ptrtoint ptr %skc_state11.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load volatile i8, ptr %skc_state11.i, align 2
  %.off.i = add i8 %25, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 4
  br i1 %switch.i, label %sw.bb.i, label %do.end9.i.sw.epilog.i_crit_edge

do.end9.i.sw.epilog.i_crit_edge:                  ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  %local.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 3
  %26 = ptrtoint ptr %local.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %local.i, align 8
  %service_closed.i = getelementptr inbounds %struct.rxrpc_local, ptr %27, i32 0, i32 17
  %28 = ptrtoint ptr %service_closed.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 1, ptr %service_closed.i, align 1
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb.i, %do.end9.i.sw.epilog.i_crit_edge
  %sk_receive_queue.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 8
  %lock.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 8, i32 2
  tail call void @_raw_spin_lock_bh(ptr noundef %lock.i) #14
  %29 = ptrtoint ptr %skc_state11.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store volatile i8 7, ptr %skc_state11.i, align 2
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i) #14
  %local17.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 3
  %30 = ptrtoint ptr %local17.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %local17.i, align 8
  %tobool18.not.i = icmp eq ptr %31, null
  br i1 %tobool18.not.i, label %sw.epilog.i.if.end71.i_crit_edge, label %land.lhs.true.i

sw.epilog.i.if.end71.i_crit_edge:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71.i

land.lhs.true.i:                                  ; preds = %sw.epilog.i
  %service.i = getelementptr inbounds %struct.rxrpc_local, ptr %31, i32 0, i32 7
  %32 = ptrtoint ptr %service.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %service.i, align 4
  %cmp.i = icmp eq ptr %33, %1
  br i1 %cmp.i, label %if.then26.i, label %land.lhs.true.i.if.end71.i_crit_edge

land.lhs.true.i.if.end71.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71.i

if.then26.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %services_lock.i = getelementptr inbounds %struct.rxrpc_local, ptr %31, i32 0, i32 14
  tail call void @_raw_write_lock(ptr noundef %services_lock.i) #14
  %34 = ptrtoint ptr %local17.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %local17.i, align 8
  %service38.i = getelementptr inbounds %struct.rxrpc_local, ptr %35, i32 0, i32 7
  %36 = ptrtoint ptr %service38.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr null, ptr %service38.i, align 4
  %37 = load ptr, ptr %local17.i, align 8
  %services_lock70.i = getelementptr inbounds %struct.rxrpc_local, ptr %37, i32 0, i32 14
  tail call void @_raw_write_unlock(ptr noundef %services_lock70.i) #14
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.then26.i, %land.lhs.true.i.if.end71.i_crit_edge, %sw.epilog.i.if.end71.i_crit_edge
  tail call void @rxrpc_discard_prealloc(ptr noundef nonnull %1) #14
  tail call void @rxrpc_release_calls_on_socket(ptr noundef nonnull %1) #14
  %38 = load ptr, ptr @rxrpc_workqueue, align 4
  tail call void @flush_workqueue(ptr noundef %38) #14
  tail call void @rxrpc_purge_queue(ptr noundef %sk_receive_queue.i) #14
  %39 = ptrtoint ptr %local17.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %local17.i, align 8
  tail call void @rxrpc_unuse_local(ptr noundef %40) #14
  %41 = ptrtoint ptr %local17.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %local17.i, align 8
  tail call void @rxrpc_put_local(ptr noundef %42) #14
  %43 = ptrtoint ptr %local17.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr null, ptr %local17.i, align 8
  %key.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 10
  %44 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %key.i, align 8
  tail call void @key_put(ptr noundef %45) #14
  %46 = ptrtoint ptr %key.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %key.i, align 8
  %securities.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 11
  %47 = ptrtoint ptr %securities.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %securities.i, align 4
  tail call void @key_put(ptr noundef %48) #14
  %49 = ptrtoint ptr %securities.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %securities.i, align 4
  %skc_refcnt.i.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 19
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !1517
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #14
  %50 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #14, !srcloc !1518
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %50, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.sock_put.exit.i_crit_edge, label %if.then10.i.i.i.i.i, !prof !1503

if.end5.i.i.i.i.i.sock_put.exit.i_crit_edge:      ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sock_put.exit.i

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef 3) #14
  br label %sock_put.exit.i

if.then.i.i:                                      ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !1519
  tail call void @sk_free(ptr noundef nonnull %1) #14
  br label %sock_put.exit.i

sock_put.exit.i:                                  ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.sock_put.exit.i_crit_edge
  %51 = load i32, ptr @rxrpc_debug, align 4
  %and79.i = and i32 %51, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79.i)
  %tobool80.not.i = icmp eq i32 %and79.i, 0
  br i1 %tobool80.not.i, label %sock_put.exit.i.cleanup_crit_edge, label %do.end90.i, !prof !1503

sock_put.exit.i.cleanup_crit_edge:                ; preds = %sock_put.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end90.i:                                       ; preds = %sock_put.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %52 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i1.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i1.i to ptr
  %task93.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %task93.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task93.i, align 8
  %comm94.i = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 101
  %call96.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.529, ptr noundef %comm94.i, ptr noundef nonnull @.str.527) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end90.i, %sock_put.exit.i.cleanup_crit_edge, %do.end7.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_bind(ptr nocapture noundef readonly %sock, ptr noundef %saddr, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %2 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end7_crit_edge, label %do.end, !prof !1503

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.531, ptr noundef %comm, ptr noundef nonnull @.str.532, ptr noundef %1, ptr noundef %saddr, i32 noundef %len) #17
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %len)
  %cmp.i = icmp ult i32 %len, 36
  br i1 %cmp.i, label %do.end7.do.body133_crit_edge, label %if.end.i

do.end7.do.body133_crit_edge:                     ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

if.end.i:                                         ; preds = %do.end7
  %7 = ptrtoint ptr %saddr to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %saddr, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 33, i16 %8)
  %cmp1.not.i = icmp eq i16 %8, 33
  br i1 %cmp1.not.i, label %if.end4.i, label %if.end.i.do.body133_crit_edge

if.end.i.do.body133_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

if.end4.i:                                        ; preds = %if.end.i
  %transport_type.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %saddr, i32 0, i32 2
  %9 = ptrtoint ptr %transport_type.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %transport_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %10)
  %cmp6.not.i = icmp eq i16 %10, 2
  br i1 %cmp6.not.i, label %if.end9.i, label %if.end4.i.do.body133_crit_edge

if.end4.i.do.body133_crit_edge:                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

if.end9.i:                                        ; preds = %if.end4.i
  %sub.i = add i32 %len, -8
  %transport_len.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %saddr, i32 0, i32 3
  %11 = ptrtoint ptr %transport_len.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %transport_len.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %12)
  %cmp11.i = icmp ult i16 %12, 2
  %conv10.i = zext i16 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %conv10.i)
  %cmp15.i = icmp slt i32 %sub.i, %conv10.i
  %or.cond.i = or i1 %cmp11.i, %cmp15.i
  br i1 %or.cond.i, label %if.end9.i.do.body133_crit_edge, label %if.end18.i

if.end9.i.do.body133_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

if.end18.i:                                       ; preds = %if.end9.i
  %transport.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %saddr, i32 0, i32 4
  %13 = ptrtoint ptr %transport.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %transport.i, align 4
  %family.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 19
  %15 = ptrtoint ptr %family.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %family.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %14)
  %cmp25.i = icmp ne i16 %14, 2
  %17 = and i16 %16, -9
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %17)
  %18 = icmp eq i16 %17, 2
  %19 = or i1 %cmp25.i, %18
  br i1 %19, label %if.end33.i, label %if.end18.i.do.body133_crit_edge

if.end18.i.do.body133_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

if.end33.i:                                       ; preds = %if.end18.i
  %20 = zext i16 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.573)
  switch i16 %14, label %if.end33.i.do.body133_crit_edge [
    i16 2, label %sw.bb.i
    i16 10, label %sw.bb42.i
  ]

if.end33.i.do.body133_crit_edge:                  ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

sw.bb.i:                                          ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %12)
  %cmp38.i = icmp ult i16 %12, 16
  br i1 %cmp38.i, label %sw.bb.i.do.body133_crit_edge, label %sw.bb.i.if.then51.i_crit_edge

sw.bb.i.if.then51.i_crit_edge:                    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then51.i

sw.bb.i.do.body133_crit_edge:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

sw.bb42.i:                                        ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 28, i16 %12)
  %cmp45.i = icmp ult i16 %12, 28
  br i1 %cmp45.i, label %sw.bb42.i.do.body133_crit_edge, label %sw.epilog.i

sw.bb42.i.do.body133_crit_edge:                   ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body133

sw.epilog.i:                                      ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %sub.i)
  %cmp49.i = icmp ugt i32 %sub.i, 36
  br i1 %cmp49.i, label %sw.epilog.i.if.then51.i_crit_edge, label %sw.epilog.i.do.body.i_crit_edge

sw.epilog.i.do.body.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

sw.epilog.i.if.then51.i_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then51.i

if.then51.i:                                      ; preds = %sw.epilog.i.if.then51.i_crit_edge, %sw.bb.i.if.then51.i_crit_edge
  %tail.084.i = phi i32 [ 36, %sw.epilog.i.if.then51.i_crit_edge ], [ 16, %sw.bb.i.if.then51.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %saddr, i32 %tail.084.i
  %sub52.i = sub i32 %sub.i, %tail.084.i
  %21 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 %sub52.i)
  br label %do.body.i

do.body.i:                                        ; preds = %if.then51.i, %sw.epilog.i.do.body.i_crit_edge
  %22 = load i32, ptr @rxrpc_debug, align 4
  %and.i198 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i198)
  %tobool.not.i = icmp eq i32 %and.i198, 0
  br i1 %tobool.not.i, label %do.body.i.if.end10_crit_edge, label %do.end.i, !prof !1503

do.body.i.if.end10_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %23 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i, align 8
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 101
  %call59.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %comm.i, ptr noundef %transport.i) #17
  br label %if.end10

if.end10:                                         ; preds = %do.end.i, %do.body.i.if.end10_crit_edge
  %srx_service = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %saddr, i32 0, i32 1
  %27 = ptrtoint ptr %srx_service to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %srx_service, align 2
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #14
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %29 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load volatile i8, ptr %skc_state, align 2
  %31 = zext i8 %30 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.574)
  switch i8 %30, label %if.end10.error_unlock_crit_edge [
    i8 0, label %sw.bb
    i8 3, label %sw.bb82
  ]

if.end10.error_unlock_crit_edge:                  ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_unlock

sw.bb:                                            ; preds = %if.end10
  %srx13 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20
  %32 = call ptr @memcpy(ptr %srx13, ptr %saddr, i32 36)
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 9
  %33 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %skc_net.i, align 4
  %call17 = tail call ptr @rxrpc_lookup_local(ptr noundef %34, ptr noundef %srx13) #14
  %cmp.i199 = icmp ugt ptr %call17, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i199, label %if.then19, label %if.end21

if.then19:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %35 = ptrtoint ptr %call17 to i32
  br label %error_unlock

if.end21:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool22.not = icmp eq i16 %28, 0
  br i1 %tobool22.not, label %if.else76, label %if.then23

if.then23:                                        ; preds = %if.end21
  %services_lock = getelementptr inbounds %struct.rxrpc_local, ptr %call17, i32 0, i32 14
  tail call void @_raw_write_lock(ptr noundef %services_lock) #14
  %service = getelementptr inbounds %struct.rxrpc_local, ptr %call17, i32 0, i32 7
  %36 = ptrtoint ptr %service to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile ptr, ptr %service, align 4
  %tobool29.not = icmp eq ptr %37, null
  br i1 %tobool29.not, label %if.end31, label %service_in_use

if.end31:                                         ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #16
  %local32 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 3
  %38 = ptrtoint ptr %local32 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call17, ptr %local32, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !1520
  %39 = ptrtoint ptr %service to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %1, ptr %service, align 4
  tail call void @_raw_write_unlock(ptr noundef %services_lock) #14
  br label %sw.epilog

if.else76:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %local77 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 3
  %40 = ptrtoint ptr %local77 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %call17, ptr %local77, align 8
  br label %sw.epilog

sw.bb82:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %cmp84 = icmp eq i16 %28, 0
  br i1 %cmp84, label %sw.bb82.error_unlock_crit_edge, label %if.end87

sw.bb82.error_unlock_crit_edge:                   ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_unlock

if.end87:                                         ; preds = %sw.bb82
  %srx_service90 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20, i32 1
  %41 = ptrtoint ptr %srx_service90 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %srx_service90, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %28, i16 %42)
  %cmp92 = icmp eq i16 %28, %42
  br i1 %cmp92, label %if.end87.error_unlock_crit_edge, label %if.end95

if.end87.error_unlock_crit_edge:                  ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_unlock

if.end95:                                         ; preds = %if.end87
  %srx89 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20
  %43 = ptrtoint ptr %srx_service to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %42, ptr %srx_service, align 2
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(36) %saddr, ptr noundef dereferenceable(36) %srx89, i32 36) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp101.not = icmp eq i32 %bcmp, 0
  br i1 %cmp101.not, label %if.end104, label %if.end95.error_unlock_crit_edge

if.end95.error_unlock_crit_edge:                  ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_unlock

if.end104:                                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #16
  %second_service = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 17
  %44 = ptrtoint ptr %second_service to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %28, ptr %second_service, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end104, %if.else76, %if.end31
  %.sink = phi i8 [ 3, %if.end31 ], [ 2, %if.else76 ], [ 4, %if.end104 ]
  %45 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %45)
  store volatile i8 %.sink, ptr %skc_state, align 2
  tail call void @release_sock(ptr noundef %1) #14
  %46 = load i32, ptr @rxrpc_debug, align 4
  %and110 = and i32 %46, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and110)
  %tobool111.not = icmp eq i32 %and110, 0
  br i1 %tobool111.not, label %sw.epilog.cleanup_crit_edge, label %do.end121, !prof !1503

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end121:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %47 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i200 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i200 to ptr
  %task124 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 2
  %49 = ptrtoint ptr %task124 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %task124, align 8
  %comm125 = getelementptr inbounds %struct.task_struct, ptr %50, i32 0, i32 101
  %call127 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.529, ptr noundef %comm125, ptr noundef nonnull @.str.532) #17
  br label %cleanup

service_in_use:                                   ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_write_unlock(ptr noundef %services_lock) #14
  tail call void @rxrpc_unuse_local(ptr noundef %call17) #14
  tail call void @rxrpc_put_local(ptr noundef %call17) #14
  br label %error_unlock

error_unlock:                                     ; preds = %service_in_use, %if.end95.error_unlock_crit_edge, %if.end87.error_unlock_crit_edge, %sw.bb82.error_unlock_crit_edge, %if.then19, %if.end10.error_unlock_crit_edge
  %ret.0 = phi i32 [ -22, %sw.bb82.error_unlock_crit_edge ], [ -98, %if.end87.error_unlock_crit_edge ], [ -22, %if.end95.error_unlock_crit_edge ], [ %35, %if.then19 ], [ -98, %service_in_use ], [ -22, %if.end10.error_unlock_crit_edge ]
  tail call void @release_sock(ptr noundef %1) #14
  br label %do.body133

do.body133:                                       ; preds = %error_unlock, %sw.bb42.i.do.body133_crit_edge, %sw.bb.i.do.body133_crit_edge, %if.end33.i.do.body133_crit_edge, %if.end18.i.do.body133_crit_edge, %if.end9.i.do.body133_crit_edge, %if.end4.i.do.body133_crit_edge, %if.end.i.do.body133_crit_edge, %do.end7.do.body133_crit_edge
  %ret.1 = phi i32 [ %ret.0, %error_unlock ], [ -97, %if.end33.i.do.body133_crit_edge ], [ -22, %sw.bb42.i.do.body133_crit_edge ], [ -22, %sw.bb.i.do.body133_crit_edge ], [ -97, %if.end18.i.do.body133_crit_edge ], [ -22, %if.end9.i.do.body133_crit_edge ], [ -94, %if.end4.i.do.body133_crit_edge ], [ -97, %if.end.i.do.body133_crit_edge ], [ -22, %do.end7.do.body133_crit_edge ]
  %51 = load i32, ptr @rxrpc_debug, align 4
  %and134 = and i32 %51, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134)
  %tobool135.not = icmp eq i32 %and134, 0
  br i1 %tobool135.not, label %do.body133.cleanup_crit_edge, label %do.end145, !prof !1503

do.body133.cleanup_crit_edge:                     ; preds = %do.body133
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end145:                                        ; preds = %do.body133
  call void @__sanitizer_cov_trace_pc() #16
  %52 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i201 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i201 to ptr
  %task148 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %task148 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task148, align 8
  %comm149 = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 101
  %call151 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.536, ptr noundef %comm149, ptr noundef nonnull @.str.532, i32 noundef %ret.1) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end145, %do.body133.cleanup_crit_edge, %do.end121, %sw.epilog.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end121 ], [ 0, %sw.epilog.cleanup_crit_edge ], [ %ret.1, %do.end145 ], [ %ret.1, %do.body133.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_connect(ptr nocapture noundef readonly %sock, ptr noundef %addr, i32 noundef %addr_len, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %2 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end7_crit_edge, label %do.end, !prof !1503

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.538, ptr noundef %comm, ptr noundef nonnull @.str.539, ptr noundef %1, ptr noundef %addr, i32 noundef %addr_len, i32 noundef %flags) #17
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %addr_len)
  %cmp.i = icmp ult i32 %addr_len, 36
  br i1 %cmp.i, label %do.end7.do.body10_crit_edge, label %if.end.i

do.end7.do.body10_crit_edge:                      ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

if.end.i:                                         ; preds = %do.end7
  %7 = ptrtoint ptr %addr to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %addr, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 33, i16 %8)
  %cmp1.not.i = icmp eq i16 %8, 33
  br i1 %cmp1.not.i, label %if.end4.i, label %if.end.i.do.body10_crit_edge

if.end.i.do.body10_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

if.end4.i:                                        ; preds = %if.end.i
  %transport_type.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %addr, i32 0, i32 2
  %9 = ptrtoint ptr %transport_type.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %transport_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %10)
  %cmp6.not.i = icmp eq i16 %10, 2
  br i1 %cmp6.not.i, label %if.end9.i, label %if.end4.i.do.body10_crit_edge

if.end4.i.do.body10_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

if.end9.i:                                        ; preds = %if.end4.i
  %sub.i = add i32 %addr_len, -8
  %transport_len.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %addr, i32 0, i32 3
  %11 = ptrtoint ptr %transport_len.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %transport_len.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %12)
  %cmp11.i = icmp ult i16 %12, 2
  %conv10.i = zext i16 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %conv10.i)
  %cmp15.i = icmp slt i32 %sub.i, %conv10.i
  %or.cond.i = or i1 %cmp11.i, %cmp15.i
  br i1 %or.cond.i, label %if.end9.i.do.body10_crit_edge, label %if.end18.i

if.end9.i.do.body10_crit_edge:                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

if.end18.i:                                       ; preds = %if.end9.i
  %transport.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %addr, i32 0, i32 4
  %13 = ptrtoint ptr %transport.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %transport.i, align 4
  %family.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 19
  %15 = ptrtoint ptr %family.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %family.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %14)
  %cmp25.i = icmp ne i16 %14, 2
  %17 = and i16 %16, -9
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %17)
  %18 = icmp eq i16 %17, 2
  %19 = or i1 %cmp25.i, %18
  br i1 %19, label %if.end33.i, label %if.end18.i.do.body10_crit_edge

if.end18.i.do.body10_crit_edge:                   ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

if.end33.i:                                       ; preds = %if.end18.i
  %20 = zext i16 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.575)
  switch i16 %14, label %if.end33.i.do.body10_crit_edge [
    i16 2, label %sw.bb.i
    i16 10, label %sw.bb42.i
  ]

if.end33.i.do.body10_crit_edge:                   ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

sw.bb.i:                                          ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %12)
  %cmp38.i = icmp ult i16 %12, 16
  br i1 %cmp38.i, label %sw.bb.i.do.body10_crit_edge, label %sw.bb.i.if.then51.i_crit_edge

sw.bb.i.if.then51.i_crit_edge:                    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then51.i

sw.bb.i.do.body10_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

sw.bb42.i:                                        ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 28, i16 %12)
  %cmp45.i = icmp ult i16 %12, 28
  br i1 %cmp45.i, label %sw.bb42.i.do.body10_crit_edge, label %sw.epilog.i

sw.bb42.i.do.body10_crit_edge:                    ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body10

sw.epilog.i:                                      ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %sub.i)
  %cmp49.i = icmp ugt i32 %sub.i, 36
  br i1 %cmp49.i, label %sw.epilog.i.if.then51.i_crit_edge, label %sw.epilog.i.do.body.i_crit_edge

sw.epilog.i.do.body.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

sw.epilog.i.if.then51.i_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then51.i

if.then51.i:                                      ; preds = %sw.epilog.i.if.then51.i_crit_edge, %sw.bb.i.if.then51.i_crit_edge
  %tail.084.i = phi i32 [ 36, %sw.epilog.i.if.then51.i_crit_edge ], [ 16, %sw.bb.i.if.then51.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %addr, i32 %tail.084.i
  %sub52.i = sub i32 %sub.i, %tail.084.i
  %21 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 %sub52.i)
  br label %do.body.i

do.body.i:                                        ; preds = %if.then51.i, %sw.epilog.i.do.body.i_crit_edge
  %22 = load i32, ptr @rxrpc_debug, align 4
  %and.i62 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i62)
  %tobool.not.i = icmp eq i32 %and.i62, 0
  br i1 %tobool.not.i, label %do.body.i.if.end32_crit_edge, label %do.end.i, !prof !1503

do.body.i.if.end32_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %23 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i, align 8
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 101
  %call59.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %comm.i, ptr noundef %transport.i) #17
  br label %if.end32

do.body10:                                        ; preds = %sw.bb42.i.do.body10_crit_edge, %sw.bb.i.do.body10_crit_edge, %if.end33.i.do.body10_crit_edge, %if.end18.i.do.body10_crit_edge, %if.end9.i.do.body10_crit_edge, %if.end4.i.do.body10_crit_edge, %if.end.i.do.body10_crit_edge, %do.end7.do.body10_crit_edge
  %retval.0.i.ph = phi i32 [ -97, %if.end33.i.do.body10_crit_edge ], [ -22, %sw.bb42.i.do.body10_crit_edge ], [ -22, %sw.bb.i.do.body10_crit_edge ], [ -97, %if.end18.i.do.body10_crit_edge ], [ -22, %if.end9.i.do.body10_crit_edge ], [ -94, %if.end4.i.do.body10_crit_edge ], [ -97, %if.end.i.do.body10_crit_edge ], [ -22, %do.end7.do.body10_crit_edge ]
  %27 = load i32, ptr @rxrpc_debug, align 4
  %and11 = and i32 %27, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %do.body10.cleanup_crit_edge, label %do.end22, !prof !1503

do.body10.cleanup_crit_edge:                      ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end22:                                         ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #16
  %28 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i63 = and i32 %28, -16384
  %29 = inttoptr i32 %and.i63 to ptr
  %task25 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task25 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task25, align 8
  %comm26 = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 101
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.541, ptr noundef %comm26, ptr noundef nonnull @.str.539, i32 noundef %retval.0.i.ph) #17
  br label %cleanup

if.end32:                                         ; preds = %do.end.i, %do.body.i.if.end32_crit_edge
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #14
  %flags34 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 13
  %32 = ptrtoint ptr %flags34 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %flags34, align 4
  %and1.i = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool36.not = icmp eq i32 %and1.i, 0
  br i1 %tobool36.not, label %if.end38, label %if.end32.error_crit_edge

if.end32.error_crit_edge:                         ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end38:                                         ; preds = %if.end32
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %34 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load volatile i8, ptr %skc_state, align 2
  %36 = zext i8 %35 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.576)
  switch i8 %35, label %if.end38.error_crit_edge [
    i8 0, label %sw.bb
    i8 1, label %if.end38.sw.epilog_crit_edge
    i8 2, label %if.end38.sw.epilog_crit_edge67
  ]

if.end38.sw.epilog_crit_edge67:                   ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.end38.sw.epilog_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.end38.error_crit_edge:                         ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

sw.bb:                                            ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %37)
  store volatile i8 1, ptr %skc_state, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %if.end38.sw.epilog_crit_edge, %if.end38.sw.epilog_crit_edge67
  %connect_srx = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 21
  %38 = call ptr @memcpy(ptr %connect_srx, ptr %addr, i32 36)
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags34) #14
  br label %error

error:                                            ; preds = %sw.epilog, %if.end38.error_crit_edge, %if.end32.error_crit_edge
  %ret.0 = phi i32 [ -106, %if.end32.error_crit_edge ], [ 0, %sw.epilog ], [ -16, %if.end38.error_crit_edge ]
  tail call void @release_sock(ptr noundef %1) #14
  br label %cleanup

cleanup:                                          ; preds = %error, %do.end22, %do.body10.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %error ], [ %retval.0.i.ph, %do.end22 ], [ %retval.0.i.ph, %do.body10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_socketpair(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_accept(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_getname(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_poll(ptr noundef %file, ptr noundef %sock, ptr noundef %wait) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %cmp.i.i = icmp eq ptr %wait, null
  br i1 %cmp.i.i, label %entry.sock_poll_wait.exit_crit_edge, label %poll_does_not_wait.exit.i

entry.sock_poll_wait.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sock_poll_wait.exit

poll_does_not_wait.exit.i:                        ; preds = %entry
  %2 = ptrtoint ptr %wait to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wait, align 4
  %cmp1.i.i = icmp eq ptr %3, null
  br i1 %cmp1.i.i, label %poll_does_not_wait.exit.i.sock_poll_wait.exit_crit_edge, label %poll_wait.exit.i

poll_does_not_wait.exit.i.sock_poll_wait.exit_crit_edge: ; preds = %poll_does_not_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sock_poll_wait.exit

poll_wait.exit.i:                                 ; preds = %poll_does_not_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %wq.i = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 7
  tail call void %3(ptr noundef %file, ptr noundef nonnull %wq.i, ptr noundef nonnull %wait) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !1521
  br label %sock_poll_wait.exit

sock_poll_wait.exit:                              ; preds = %poll_wait.exit.i, %poll_does_not_wait.exit.i.sock_poll_wait.exit_crit_edge, %entry.sock_poll_wait.exit_crit_edge
  %recvmsg_q = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %recvmsg_q to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %recvmsg_q, align 4
  %cmp.i.not = icmp eq ptr %5, %recvmsg_q
  %spec.select = select i1 %cmp.i.not, i32 0, i32 65
  %sk_wmem_alloc.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc.i, i32 noundef 4) #14
  %6 = ptrtoint ptr %sk_wmem_alloc.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_wmem_alloc.i, align 4
  %sk_sndbuf.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 21
  %8 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sk_sndbuf.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp.i11.not = icmp ult i32 %7, %9
  %or5 = or i32 %spec.select, 260
  %mask.1 = select i1 %cmp.i11.not, i32 %or5, i32 %spec.select
  ret i32 %mask.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_ioctl(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_listen(ptr nocapture noundef readonly %sock, i32 noundef %backlog) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %2 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end8_crit_edge, label %do.end, !prof !1503

entry.do.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end8

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.514, ptr noundef %comm, ptr noundef nonnull @.str.543, ptr noundef %1, i32 noundef %backlog) #17
  br label %do.end8

do.end8:                                          ; preds = %do.end, %entry.do.end8_crit_edge
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #14
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %7 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load volatile i8, ptr %skc_state, align 2
  %9 = zext i8 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.577)
  switch i8 %8, label %do.end8.sw.default_crit_edge [
    i8 0, label %do.end8.sw.epilog_crit_edge
    i8 3, label %do.end8.do.body12_crit_edge
    i8 4, label %do.end8.do.body12_crit_edge115
    i8 5, label %sw.bb62
  ]

do.end8.do.body12_crit_edge115:                   ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body12

do.end8.do.body12_crit_edge:                      ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body12

do.end8.sw.epilog_crit_edge:                      ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

do.end8.sw.default_crit_edge:                     ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.default

do.body12:                                        ; preds = %do.end8.do.body12_crit_edge, %do.end8.do.body12_crit_edge115
  %local = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %local to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %local, align 8
  %cmp.not = icmp eq ptr %11, null
  br i1 %cmp.not, label %do.end25, label %do.end39, !prof !1504

do.end25:                                         ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #16
  %call27 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.545) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/rxrpc/af_rxrpc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 226, 0\0A.popsection", ""() #14, !srcloc !1522
  unreachable

do.end39:                                         ; preds = %do.body12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rxrpc_max_backlog to i32))
  %12 = load volatile i32, ptr @rxrpc_max_backlog, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %backlog)
  %cmp41 = icmp eq i32 %backlog, 2147483647
  br i1 %cmp41, label %do.end39.if.end50_crit_edge, label %if.else

do.end39.if.end50_crit_edge:                      ; preds = %do.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.else:                                          ; preds = %do.end39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %backlog)
  %cmp44 = icmp slt i32 %backlog, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %backlog)
  %cmp46 = icmp ult i32 %12, %backlog
  %or.cond = select i1 %cmp44, i1 true, i1 %cmp46
  br i1 %or.cond, label %if.else.sw.epilog_crit_edge, label %if.else.if.end50_crit_edge

if.else.if.end50_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.else.sw.epilog_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.end50:                                         ; preds = %if.else.if.end50_crit_edge, %do.end39.if.end50_crit_edge
  %backlog.addr.0 = phi i32 [ %12, %do.end39.if.end50_crit_edge ], [ %backlog, %if.else.if.end50_crit_edge ]
  %sk_max_ack_backlog = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 54
  %13 = ptrtoint ptr %sk_max_ack_backlog to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sk_max_ack_backlog, align 8
  store i32 %backlog.addr.0, ptr %sk_max_ack_backlog, align 8
  %call52 = tail call i32 @rxrpc_service_prealloc(ptr noundef %1, i32 noundef 3264) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %cmp53 = icmp eq i32 %call52, 0
  br i1 %cmp53, label %if.then55, label %if.else59

if.then55:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %15)
  store volatile i8 5, ptr %skc_state, align 2
  br label %sw.epilog

if.else59:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %sk_max_ack_backlog to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %14, ptr %sk_max_ack_backlog, align 8
  br label %sw.epilog

sw.bb62:                                          ; preds = %do.end8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %backlog)
  %cmp63 = icmp eq i32 %backlog, 0
  br i1 %cmp63, label %if.then65, label %sw.bb62.sw.default_crit_edge

sw.bb62.sw.default_crit_edge:                     ; preds = %sw.bb62
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.default

if.then65:                                        ; preds = %sw.bb62
  call void @__sanitizer_cov_trace_pc() #16
  %17 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %17)
  store volatile i8 6, ptr %skc_state, align 2
  %sk_max_ack_backlog69 = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 54
  %18 = ptrtoint ptr %sk_max_ack_backlog69 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %sk_max_ack_backlog69, align 8
  tail call void @rxrpc_discard_prealloc(ptr noundef %1) #14
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb62.sw.default_crit_edge, %do.end8.sw.default_crit_edge
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then65, %if.else59, %if.then55, %if.else.sw.epilog_crit_edge, %do.end8.sw.epilog_crit_edge
  %ret.0 = phi i32 [ -16, %sw.default ], [ 0, %if.then65 ], [ 0, %if.then55 ], [ %call52, %if.else59 ], [ -22, %if.else.sw.epilog_crit_edge ], [ -99, %do.end8.sw.epilog_crit_edge ]
  tail call void @release_sock(ptr noundef %1) #14
  %19 = load i32, ptr @rxrpc_debug, align 4
  %and73 = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %sw.epilog.do.end93_crit_edge, label %do.end84, !prof !1503

sw.epilog.do.end93_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end93

do.end84:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %20 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i114 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i114 to ptr
  %task87 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task87 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task87, align 8
  %comm88 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 101
  %call90 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.536, ptr noundef %comm88, ptr noundef nonnull @.str.543, i32 noundef %ret.0) #17
  br label %do.end93

do.end93:                                         ; preds = %do.end84, %sw.epilog.do.end93_crit_edge
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_shutdown(ptr nocapture noundef readonly %sock, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %2 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end8_crit_edge, label %do.end, !prof !1503

entry.do.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end8

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.514, ptr noundef %comm, ptr noundef nonnull @.str.549, ptr noundef %1, i32 noundef %flags) #17
  br label %do.end8

do.end8:                                          ; preds = %do.end, %entry.do.end8_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %flags)
  %cmp.not = icmp eq i32 %flags, 2
  br i1 %cmp.not, label %if.end10, label %do.end8.cleanup_crit_edge

do.end8.cleanup_crit_edge:                        ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %do.end8
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %7 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %8)
  %cmp11 = icmp eq i8 %8, 7
  br i1 %cmp11, label %if.end10.cleanup_crit_edge, label %if.end14

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #14
  %lock = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 8, i32 2
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #14
  %9 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %10)
  %cmp18 = icmp ult i8 %10, 7
  br i1 %cmp18, label %if.then20, label %if.end14.if.end23_crit_edge

if.end14.if.end23_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then20:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %11)
  store volatile i8 7, ptr %skc_state, align 2
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 66
  %12 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 3, ptr %sk_shutdown, align 2
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end14.if.end23_crit_edge
  %ret.0 = phi i32 [ 0, %if.then20 ], [ -108, %if.end14.if.end23_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock) #14
  tail call void @rxrpc_discard_prealloc(ptr noundef %1) #14
  tail call void @release_sock(ptr noundef %1) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end10.cleanup_crit_edge, %do.end8.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end23 ], [ -95, %do.end8.cleanup_crit_edge ], [ -108, %if.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_setsockopt(ptr nocapture noundef readonly %sock, i32 noundef %level, i32 noundef %optname, [2 x i32] %optval.coerce, i32 noundef %optlen) #0 align 64 {
entry:
  %min_sec_level = alloca i32, align 4
  %service_upgrade = alloca [2 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %min_sec_level) #14
  %2 = ptrtoint ptr %min_sec_level to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %min_sec_level, align 4, !annotation !1505
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %service_upgrade) #14
  %3 = ptrtoint ptr %service_upgrade to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %service_upgrade, align 2, !annotation !1505
  %4 = getelementptr inbounds [2 x i16], ptr %service_upgrade, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 -1, ptr %4, align 2, !annotation !1505
  %6 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end7_crit_edge, label %do.end, !prof !1503

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %7 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %10, i32 0, i32 101
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.550, ptr noundef %comm, ptr noundef nonnull @.str.551, i32 noundef %level, i32 noundef %optname, i32 noundef %optlen) #17
  br label %do.end7

do.end7:                                          ; preds = %do.end, %entry.do.end7_crit_edge
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 272, i32 %level)
  %cmp = icmp eq i32 %level, 272
  br i1 %cmp, label %if.then9, label %do.end7.error_crit_edge

do.end7.error_crit_edge:                          ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.then9:                                         ; preds = %do.end7
  %11 = zext i32 %optname to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.578)
  switch i32 %optname, label %if.then9.error_crit_edge [
    i32 3, label %sw.bb
    i32 1, label %sw.bb18
    i32 2, label %sw.bb31
    i32 4, label %sw.bb45
    i32 5, label %sw.bb68
  ]

if.then9.error_crit_edge:                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

sw.bb:                                            ; preds = %if.then9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %optlen)
  %cmp10.not = icmp eq i32 %optlen, 0
  br i1 %cmp10.not, label %if.end12, label %sw.bb.error_crit_edge

sw.bb.error_crit_edge:                            ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end12:                                         ; preds = %sw.bb
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %cmp14.not = icmp eq i8 %13, 0
  br i1 %cmp14.not, label %if.end17, label %if.end12.error_crit_edge

if.end12.error_crit_edge:                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end17:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %exclusive = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 16
  %14 = ptrtoint ptr %exclusive to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %exclusive, align 8
  br label %error

sw.bb18:                                          ; preds = %if.then9
  %key = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 10
  %15 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %key, align 8
  %tobool19.not = icmp eq ptr %16, null
  br i1 %tobool19.not, label %if.end21, label %sw.bb18.error_crit_edge

sw.bb18.error_crit_edge:                          ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end21:                                         ; preds = %sw.bb18
  %skc_state24 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %17 = ptrtoint ptr %skc_state24 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load volatile i8, ptr %skc_state24, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %cmp26.not = icmp eq i8 %18, 0
  br i1 %cmp26.not, label %if.end29, label %if.end21.error_crit_edge

if.end21.error_crit_edge:                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end29:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %call30 = tail call i32 @rxrpc_request_key(ptr noundef %1, [2 x i32] %optval.coerce, i32 noundef %optlen) #14
  br label %error

sw.bb31:                                          ; preds = %if.then9
  %key32 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 10
  %19 = ptrtoint ptr %key32 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %key32, align 8
  %tobool33.not = icmp eq ptr %20, null
  br i1 %tobool33.not, label %if.end35, label %sw.bb31.error_crit_edge

sw.bb31.error_crit_edge:                          ; preds = %sw.bb31
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end35:                                         ; preds = %sw.bb31
  %skc_state38 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %21 = ptrtoint ptr %skc_state38 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load volatile i8, ptr %skc_state38, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %cmp40.not = icmp eq i8 %22, 0
  br i1 %cmp40.not, label %if.end43, label %if.end35.error_crit_edge

if.end35.error_crit_edge:                         ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end43:                                         ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %call44 = tail call i32 @rxrpc_server_keyring(ptr noundef %1, [2 x i32] %optval.coerce, i32 noundef %optlen) #14
  br label %error

sw.bb45:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %optlen)
  %cmp46.not = icmp eq i32 %optlen, 4
  br i1 %cmp46.not, label %if.end49, label %sw.bb45.error_crit_edge

sw.bb45.error_crit_edge:                          ; preds = %sw.bb45
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end49:                                         ; preds = %sw.bb45
  %skc_state52 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %23 = ptrtoint ptr %skc_state52 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load volatile i8, ptr %skc_state52, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %cmp54.not = icmp eq i8 %24, 0
  br i1 %cmp54.not, label %if.end57, label %if.end49.error_crit_edge

if.end49.error_crit_edge:                         ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end57:                                         ; preds = %if.end49
  %call58 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %min_sec_level, [2 x i32] %optval.coerce)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %cmp59 = icmp slt i32 %call58, 0
  br i1 %cmp59, label %if.end57.error_crit_edge, label %if.end62

if.end57.error_crit_edge:                         ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end62:                                         ; preds = %if.end57
  %25 = ptrtoint ptr %min_sec_level to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %min_sec_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %26)
  %cmp63 = icmp ugt i32 %26, 2
  br i1 %cmp63, label %if.end62.error_crit_edge, label %if.end66

if.end62.error_crit_edge:                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end66:                                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #16
  %min_sec_level67 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 15
  %27 = ptrtoint ptr %min_sec_level67 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %min_sec_level67, align 4
  br label %error

sw.bb68:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %optlen)
  %cmp69.not = icmp eq i32 %optlen, 4
  br i1 %cmp69.not, label %lor.lhs.false, label %sw.bb68.error_crit_edge

sw.bb68.error_crit_edge:                          ; preds = %sw.bb68
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

lor.lhs.false:                                    ; preds = %sw.bb68
  %service_upgrade71 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 18
  %28 = ptrtoint ptr %service_upgrade71 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %service_upgrade71, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %cmp73.not = icmp eq i16 %29, 0
  br i1 %cmp73.not, label %if.end76, label %lor.lhs.false.error_crit_edge

lor.lhs.false.error_crit_edge:                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end76:                                         ; preds = %lor.lhs.false
  %skc_state79 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %30 = ptrtoint ptr %skc_state79 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load volatile i8, ptr %skc_state79, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %31)
  %cmp81.not = icmp eq i8 %31, 4
  br i1 %cmp81.not, label %if.end84, label %if.end76.error_crit_edge

if.end76.error_crit_edge:                         ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end84:                                         ; preds = %if.end76
  %call86 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %service_upgrade, [2 x i32] %optval.coerce)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %cmp87.not = icmp eq i32 %call86, 0
  br i1 %cmp87.not, label %if.end90, label %if.end84.error_crit_edge

if.end84.error_crit_edge:                         ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

if.end90:                                         ; preds = %if.end84
  %32 = ptrtoint ptr %service_upgrade to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %service_upgrade, align 2
  %srx_service = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20, i32 1
  %34 = ptrtoint ptr %srx_service to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %srx_service, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %35)
  %cmp93.not = icmp eq i16 %33, %35
  br i1 %cmp93.not, label %lor.lhs.false95, label %if.end90.land.lhs.true_crit_edge

if.end90.land.lhs.true_crit_edge:                 ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

lor.lhs.false95:                                  ; preds = %if.end90
  %36 = ptrtoint ptr %4 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %4, align 2
  %second_service = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 17
  %38 = ptrtoint ptr %second_service to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %second_service, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %37, i16 %39)
  %cmp99.not = icmp eq i16 %37, %39
  br i1 %cmp99.not, label %lor.lhs.false95.if.end116_crit_edge, label %lor.lhs.false95.land.lhs.true_crit_edge

lor.lhs.false95.land.lhs.true_crit_edge:          ; preds = %lor.lhs.false95
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

lor.lhs.false95.if.end116_crit_edge:              ; preds = %lor.lhs.false95
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

land.lhs.true:                                    ; preds = %lor.lhs.false95.land.lhs.true_crit_edge, %if.end90.land.lhs.true_crit_edge
  %second_service103 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 17
  %40 = ptrtoint ptr %second_service103 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %second_service103, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %41)
  %cmp105.not = icmp eq i16 %33, %41
  br i1 %cmp105.not, label %lor.lhs.false107, label %land.lhs.true.error_crit_edge

land.lhs.true.error_crit_edge:                    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

lor.lhs.false107:                                 ; preds = %land.lhs.true
  %42 = ptrtoint ptr %4 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %4, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %43, i16 %35)
  %cmp113.not = icmp eq i16 %43, %35
  br i1 %cmp113.not, label %lor.lhs.false107.if.end116_crit_edge, label %lor.lhs.false107.error_crit_edge

lor.lhs.false107.error_crit_edge:                 ; preds = %lor.lhs.false107
  call void @__sanitizer_cov_trace_pc() #16
  br label %error

lor.lhs.false107.if.end116_crit_edge:             ; preds = %lor.lhs.false107
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116

if.end116:                                        ; preds = %lor.lhs.false107.if.end116_crit_edge, %lor.lhs.false95.if.end116_crit_edge
  %44 = ptrtoint ptr %service_upgrade71 to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %33, ptr %service_upgrade71, align 4
  %45 = ptrtoint ptr %4 to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %4, align 2
  %to = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 18, i32 1
  %47 = ptrtoint ptr %to to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %46, ptr %to, align 2
  br label %error

error:                                            ; preds = %if.end116, %lor.lhs.false107.error_crit_edge, %land.lhs.true.error_crit_edge, %if.end84.error_crit_edge, %if.end76.error_crit_edge, %lor.lhs.false.error_crit_edge, %sw.bb68.error_crit_edge, %if.end66, %if.end62.error_crit_edge, %if.end57.error_crit_edge, %if.end49.error_crit_edge, %sw.bb45.error_crit_edge, %if.end43, %if.end35.error_crit_edge, %sw.bb31.error_crit_edge, %if.end29, %if.end21.error_crit_edge, %sw.bb18.error_crit_edge, %if.end17, %if.end12.error_crit_edge, %sw.bb.error_crit_edge, %if.then9.error_crit_edge, %do.end7.error_crit_edge
  %ret.0 = phi i32 [ -22, %sw.bb68.error_crit_edge ], [ -22, %lor.lhs.false.error_crit_edge ], [ -106, %if.end76.error_crit_edge ], [ -14, %if.end84.error_crit_edge ], [ -22, %land.lhs.true.error_crit_edge ], [ -22, %lor.lhs.false107.error_crit_edge ], [ -22, %sw.bb45.error_crit_edge ], [ -106, %if.end49.error_crit_edge ], [ %call58, %if.end57.error_crit_edge ], [ -22, %if.end62.error_crit_edge ], [ -22, %sw.bb31.error_crit_edge ], [ -106, %if.end35.error_crit_edge ], [ %call44, %if.end43 ], [ -22, %sw.bb18.error_crit_edge ], [ -106, %if.end21.error_crit_edge ], [ %call30, %if.end29 ], [ -22, %sw.bb.error_crit_edge ], [ -106, %if.end12.error_crit_edge ], [ 0, %do.end7.error_crit_edge ], [ 0, %if.then9.error_crit_edge ], [ 0, %if.end116 ], [ 0, %if.end66 ], [ 0, %if.end17 ]
  call void @release_sock(ptr noundef %1) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %service_upgrade) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %min_sec_level) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_getsockopt(ptr nocapture noundef readnone %sock, i32 noundef %level, i32 noundef %optname, ptr noundef %optval, ptr noundef %_optlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 272, i32 %level)
  %cmp.not = icmp eq i32 %level, 272
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.149, i32 noundef 699) #14
  %0 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 4
  %2 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #10, !srcloc !1523
  %and.i = and i32 %2, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  %3 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %_optlen, i32 -1226833921) #14, !srcloc !1526
  %asmresult = extractvalue { i32, i32 } %3, 0
  %asmresult1 = extractvalue { i32, i32 } %3, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %2) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %optname)
  %cond = icmp eq i32 %optname, 6
  br i1 %cond, label %sw.bb, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb:                                            ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %asmresult1)
  %cmp5 = icmp ult i32 %asmresult1, 4
  br i1 %cmp5, label %sw.bb.cleanup_crit_edge, label %if.end7

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %sw.bb
  tail call void @__might_fault(ptr noundef nonnull @.str.149, i32 noundef 706) #14
  %4 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i37 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i37 to ptr
  %cpu_domain.i.i38 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 4
  %6 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i38) #10, !srcloc !1523
  %and.i39 = and i32 %6, -13
  %or.i40 = or i32 %and.i39, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i40) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  %7 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %optval, i32 14, i32 -1226833921) #14, !srcloc !1527
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %6) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool17.not = icmp eq i32 %7, 0
  br i1 %tobool17.not, label %lor.lhs.false, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__might_fault(ptr noundef nonnull @.str.149, i32 noundef 707) #14
  %8 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i41 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i41 to ptr
  %cpu_domain.i.i42 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 4
  %10 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i42) #10, !srcloc !1523
  %and.i43 = and i32 %10, -13
  %or.i44 = or i32 %and.i43, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i44) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  %11 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %_optlen, i32 4, i32 -1226833921) #14, !srcloc !1528
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %10) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool33.not = icmp eq i32 %11, 0
  %spec.select = select i1 %tobool33.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false, %if.end7.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %entry.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ -525, %sw.bb.cleanup_crit_edge ], [ -14, %if.end7.cleanup_crit_edge ], [ -95, %if.end4.cleanup_crit_edge ], [ %spec.select, %lor.lhs.false ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rxrpc_sendmsg(ptr nocapture noundef readonly %sock, ptr noundef %m, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %2 = load i32, ptr @rxrpc_debug, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end8_crit_edge, label %do.end, !prof !1503

entry.do.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end8

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %7 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %8 to i32
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.555, ptr noundef %comm, ptr noundef nonnull @.str.556, i32 noundef %conv, i32 noundef %len) #17
  br label %do.end8

do.end8:                                          ; preds = %do.end, %entry.do.end8_crit_edge
  %msg_flags = getelementptr inbounds %struct.msghdr, ptr %m, i32 0, i32 6
  %9 = ptrtoint ptr %msg_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %msg_flags, align 4
  %and9 = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end12, label %do.end8.cleanup_crit_edge

do.end8.cleanup_crit_edge:                        ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end12:                                         ; preds = %do.end8
  %11 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %m, align 8
  %tobool13.not = icmp eq ptr %12, null
  br i1 %tobool13.not, label %if.end12.if.end42_crit_edge, label %if.then14

if.end12.if.end42_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42

if.then14:                                        ; preds = %if.end12
  %msg_namelen = getelementptr inbounds %struct.msghdr, ptr %m, i32 0, i32 1
  %13 = ptrtoint ptr %msg_namelen to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %msg_namelen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %14)
  %cmp.i = icmp ult i32 %14, 36
  br i1 %cmp.i, label %if.then14.do.body19_crit_edge, label %if.end.i

if.then14.do.body19_crit_edge:                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

if.end.i:                                         ; preds = %if.then14
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %12, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 33, i16 %16)
  %cmp1.not.i = icmp eq i16 %16, 33
  br i1 %cmp1.not.i, label %if.end4.i, label %if.end.i.do.body19_crit_edge

if.end.i.do.body19_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

if.end4.i:                                        ; preds = %if.end.i
  %transport_type.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %12, i32 0, i32 2
  %17 = ptrtoint ptr %transport_type.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %transport_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %18)
  %cmp6.not.i = icmp eq i16 %18, 2
  br i1 %cmp6.not.i, label %if.end9.i, label %if.end4.i.do.body19_crit_edge

if.end4.i.do.body19_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

if.end9.i:                                        ; preds = %if.end4.i
  %sub.i = add i32 %14, -8
  %transport_len.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %12, i32 0, i32 3
  %19 = ptrtoint ptr %transport_len.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %transport_len.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %20)
  %cmp11.i = icmp ult i16 %20, 2
  %conv10.i = zext i16 %20 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %conv10.i)
  %cmp15.i = icmp slt i32 %sub.i, %conv10.i
  %or.cond.i = or i1 %cmp11.i, %cmp15.i
  br i1 %or.cond.i, label %if.end9.i.do.body19_crit_edge, label %if.end18.i

if.end9.i.do.body19_crit_edge:                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

if.end18.i:                                       ; preds = %if.end9.i
  %transport.i = getelementptr inbounds %struct.sockaddr_rxrpc, ptr %12, i32 0, i32 4
  %21 = ptrtoint ptr %transport.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %transport.i, align 4
  %family.i = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 19
  %23 = ptrtoint ptr %family.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %family.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %22)
  %cmp25.i = icmp ne i16 %22, 2
  %25 = and i16 %24, -9
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %25)
  %26 = icmp eq i16 %25, 2
  %27 = or i1 %cmp25.i, %26
  br i1 %27, label %if.end33.i, label %if.end18.i.do.body19_crit_edge

if.end18.i.do.body19_crit_edge:                   ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

if.end33.i:                                       ; preds = %if.end18.i
  %28 = zext i16 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.579)
  switch i16 %22, label %if.end33.i.do.body19_crit_edge [
    i16 2, label %sw.bb.i
    i16 10, label %sw.bb42.i
  ]

if.end33.i.do.body19_crit_edge:                   ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

sw.bb.i:                                          ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %20)
  %cmp38.i = icmp ult i16 %20, 16
  br i1 %cmp38.i, label %sw.bb.i.do.body19_crit_edge, label %sw.bb.i.if.then51.i_crit_edge

sw.bb.i.if.then51.i_crit_edge:                    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then51.i

sw.bb.i.do.body19_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

sw.bb42.i:                                        ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 28, i16 %20)
  %cmp45.i = icmp ult i16 %20, 28
  br i1 %cmp45.i, label %sw.bb42.i.do.body19_crit_edge, label %sw.epilog.i

sw.bb42.i.do.body19_crit_edge:                    ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body19

sw.epilog.i:                                      ; preds = %sw.bb42.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %sub.i)
  %cmp49.i = icmp ugt i32 %sub.i, 36
  br i1 %cmp49.i, label %sw.epilog.i.if.then51.i_crit_edge, label %sw.epilog.i.do.body.i_crit_edge

sw.epilog.i.do.body.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

sw.epilog.i.if.then51.i_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then51.i

if.then51.i:                                      ; preds = %sw.epilog.i.if.then51.i_crit_edge, %sw.bb.i.if.then51.i_crit_edge
  %tail.084.i = phi i32 [ 36, %sw.epilog.i.if.then51.i_crit_edge ], [ 16, %sw.bb.i.if.then51.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %12, i32 %tail.084.i
  %sub52.i = sub i32 %sub.i, %tail.084.i
  %29 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 %sub52.i)
  br label %do.body.i

do.body.i:                                        ; preds = %if.then51.i, %sw.epilog.i.do.body.i_crit_edge
  %30 = load i32, ptr @rxrpc_debug, align 4
  %and.i140 = and i32 %30, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i140)
  %tobool.not.i = icmp eq i32 %and.i140, 0
  br i1 %tobool.not.i, label %do.body.i.if.end42_crit_edge, label %do.end.i, !prof !1503

do.body.i.if.end42_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %31 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i, align 8
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 101
  %call59.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.484, ptr noundef %comm.i, ptr noundef %transport.i) #17
  br label %if.end42

do.body19:                                        ; preds = %sw.bb42.i.do.body19_crit_edge, %sw.bb.i.do.body19_crit_edge, %if.end33.i.do.body19_crit_edge, %if.end18.i.do.body19_crit_edge, %if.end9.i.do.body19_crit_edge, %if.end4.i.do.body19_crit_edge, %if.end.i.do.body19_crit_edge, %if.then14.do.body19_crit_edge
  %retval.0.i.ph = phi i32 [ -97, %if.end33.i.do.body19_crit_edge ], [ -22, %sw.bb42.i.do.body19_crit_edge ], [ -22, %sw.bb.i.do.body19_crit_edge ], [ -97, %if.end18.i.do.body19_crit_edge ], [ -22, %if.end9.i.do.body19_crit_edge ], [ -94, %if.end4.i.do.body19_crit_edge ], [ -97, %if.end.i.do.body19_crit_edge ], [ -22, %if.then14.do.body19_crit_edge ]
  %35 = load i32, ptr @rxrpc_debug, align 4
  %and20 = and i32 %35, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %do.body19.cleanup_crit_edge, label %do.end31, !prof !1503

do.body19.cleanup_crit_edge:                      ; preds = %do.body19
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end31:                                         ; preds = %do.body19
  call void @__sanitizer_cov_trace_pc() #16
  %36 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i141 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i141 to ptr
  %task34 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task34 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task34, align 8
  %comm35 = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 101
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.541, ptr noundef %comm35, ptr noundef nonnull @.str.556, i32 noundef %retval.0.i.ph) #17
  br label %cleanup

if.end42:                                         ; preds = %do.end.i, %do.body.i.if.end42_crit_edge, %if.end12.if.end42_crit_edge
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #14
  %skc_state46 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %40 = ptrtoint ptr %skc_state46 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load volatile i8, ptr %skc_state46, align 2
  %42 = zext i8 %41 to i64
  call void @__sanitizer_cov_trace_switch(i64 %42, ptr @__sancov_gen_cov_switch_values.580)
  switch i8 %41, label %if.end42.error_unlock_crit_edge [
    i8 0, label %if.end42.sw.bb_crit_edge
    i8 1, label %if.end42.sw.bb_crit_edge147
    i8 2, label %if.end42.sw.bb70_crit_edge
    i8 3, label %if.end42.sw.bb79_crit_edge
    i8 5, label %if.end42.sw.bb79_crit_edge148
  ]

if.end42.sw.bb79_crit_edge148:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb79

if.end42.sw.bb79_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb79

if.end42.sw.bb70_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb70

if.end42.sw.bb_crit_edge147:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end42.sw.bb_crit_edge:                         ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end42.error_unlock_crit_edge:                  ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_unlock

sw.bb:                                            ; preds = %if.end42.sw.bb_crit_edge, %if.end42.sw.bb_crit_edge147
  %srx = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20
  %43 = ptrtoint ptr %srx to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 33, ptr %srx, align 4
  %srx_service = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20, i32 1
  %44 = ptrtoint ptr %srx_service to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 0, ptr %srx_service, align 2
  %transport_type = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20, i32 2
  %45 = ptrtoint ptr %transport_type to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 2, ptr %transport_type, align 4
  %family = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 19
  %46 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %family, align 8
  %transport = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20, i32 4
  %48 = ptrtoint ptr %transport to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %47, ptr %transport, align 4
  %49 = zext i16 %47 to i64
  call void @__sanitizer_cov_trace_switch(i64 %49, ptr @__sancov_gen_cov_switch_values.581)
  switch i16 %47, label %sw.bb.error_unlock_crit_edge [
    i16 2, label %sw.bb.sw.epilog_crit_edge
    i16 10, label %sw.bb55
  ]

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb.error_unlock_crit_edge:                     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %error_unlock

sw.bb55:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb55, %sw.bb.sw.epilog_crit_edge
  %.sink = phi i16 [ 28, %sw.bb55 ], [ 16, %sw.bb.sw.epilog_crit_edge ]
  %transport_len57 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 20, i32 3
  %50 = ptrtoint ptr %transport_len57 to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %.sink, ptr %transport_len57, align 2
  %51 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %sk, align 16
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %52, i32 0, i32 9
  %53 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %skc_net.i, align 4
  %call61 = tail call ptr @rxrpc_lookup_local(ptr noundef %54, ptr noundef %srx) #14
  %cmp.i142 = icmp ugt ptr %call61, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i142, label %if.then63, label %if.end65

if.then63:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %55 = ptrtoint ptr %call61 to i32
  br label %error_unlock

if.end65:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %local66 = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 3
  %56 = ptrtoint ptr %local66 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %call61, ptr %local66, align 8
  %57 = ptrtoint ptr %skc_state46 to i32
  call void @__asan_store1_noabort(i32 %57)
  store volatile i8 2, ptr %skc_state46, align 2
  br label %sw.bb70

sw.bb70:                                          ; preds = %if.end65, %if.end42.sw.bb70_crit_edge
  %58 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %m, align 8
  %tobool72.not = icmp eq ptr %59, null
  br i1 %tobool72.not, label %land.lhs.true, label %sw.bb70.sw.bb79_crit_edge

sw.bb70.sw.bb79_crit_edge:                        ; preds = %sw.bb70
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb79

land.lhs.true:                                    ; preds = %sw.bb70
  %flags = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 13
  %60 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %flags, align 4
  %and1.i = and i32 %61, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool74.not = icmp eq i32 %and1.i, 0
  br i1 %tobool74.not, label %land.lhs.true.sw.bb79_crit_edge, label %if.then75

land.lhs.true.sw.bb79_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb79

if.then75:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %connect_srx = getelementptr inbounds %struct.rxrpc_sock, ptr %1, i32 0, i32 21
  %62 = ptrtoint ptr %m to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %connect_srx, ptr %m, align 8
  %msg_namelen77 = getelementptr inbounds %struct.msghdr, ptr %m, i32 0, i32 1
  %63 = ptrtoint ptr %msg_namelen77 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 36, ptr %msg_namelen77, align 4
  br label %sw.bb79

sw.bb79:                                          ; preds = %if.then75, %land.lhs.true.sw.bb79_crit_edge, %sw.bb70.sw.bb79_crit_edge, %if.end42.sw.bb79_crit_edge, %if.end42.sw.bb79_crit_edge148
  %call80 = tail call i32 @rxrpc_do_sendmsg(ptr noundef %1, ptr noundef %m, i32 noundef %len) #14
  br label %do.body83

error_unlock:                                     ; preds = %if.then63, %sw.bb.error_unlock_crit_edge, %if.end42.error_unlock_crit_edge
  %ret.0 = phi i32 [ %55, %if.then63 ], [ -97, %sw.bb.error_unlock_crit_edge ], [ -22, %if.end42.error_unlock_crit_edge ]
  tail call void @release_sock(ptr noundef %1) #14
  br label %do.body83

do.body83:                                        ; preds = %error_unlock, %sw.bb79
  %ret.1 = phi i32 [ %ret.0, %error_unlock ], [ %call80, %sw.bb79 ]
  %64 = load i32, ptr @rxrpc_debug, align 4
  %and84 = and i32 %64, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %do.body83.cleanup_crit_edge, label %do.end95, !prof !1503

do.body83.cleanup_crit_edge:                      ; preds = %do.body83
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end95:                                         ; preds = %do.body83
  call void @__sanitizer_cov_trace_pc() #16
  %65 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i143 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i143 to ptr
  %task98 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 2
  %67 = ptrtoint ptr %task98 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %task98, align 8
  %comm99 = getelementptr inbounds %struct.task_struct, ptr %68, i32 0, i32 101
  %call101 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.536, ptr noundef %comm99, ptr noundef nonnull @.str.556, i32 noundef %ret.1) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end95, %do.body83.cleanup_crit_edge, %do.end31, %do.body19.cleanup_crit_edge, %do.end8.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %do.end8.cleanup_crit_edge ], [ %retval.0.i.ph, %do.end31 ], [ %retval.0.i.ph, %do.body19.cleanup_crit_edge ], [ %ret.1, %do.end95 ], [ %ret.1, %do.body83.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rxrpc_recvmsg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_mmap(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_sendpage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_discard_prealloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_release_calls_on_socket(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_purge_queue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_unuse_local(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rxrpc_put_local(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @key_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rxrpc_lookup_local(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rxrpc_service_prealloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rxrpc_request_key(ptr noundef, [2 x i32], i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rxrpc_server_keyring(ptr noundef, [2 x i32], i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_from_sockptr(ptr noundef %dst, [2 x i32] %src.coerce) unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %src.coerce.fca.0.extract.i = extractvalue [2 x i32] %src.coerce, 0
  %0 = inttoptr i32 %src.coerce.fca.0.extract.i to ptr
  %sockptr.coerce.fca.1.extract.i.i = extractvalue [2 x i32] %src.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sockptr.coerce.fca.1.extract.i.i)
  %bf.cast.i.i = icmp slt i32 %sockptr.coerce.fca.1.extract.i.i, 0
  br i1 %bf.cast.i.i, label %if.end.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.554, i32 noundef 156) #14
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #14
  br i1 %call.i.i.i, label %if.then.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.then.i.i.if.then11.i.i.i_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 4, i32 -1226833920) #19, !srcloc !1529
  %asmresult.i.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !1503

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dst, i32 noundef 4) #14
  %2 = tail call i32 @llvm.read_register.i32(metadata !1493) #14
  %and.i.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !1523
  %and.i.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  %call1.i.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %dst, ptr noundef %0, i32 noundef 4) #14
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #14, !srcloc !1524
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #14, !srcloc !1525
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !1503

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i.i.i

if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %copy_from_sockptr_offset.exit

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.then.i.i.if.then11.i.i.i_crit_edge
  %res.03.i.i.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 4, %if.then.i.i.if.then11.i.i.i_crit_edge ], [ 4, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 4, %res.03.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %dst, i32 %sub.i.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.03.i.i.i)
  br label %copy_from_sockptr_offset.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_loadN_noabort(i32 %6, i32 4)
  %7 = load i32, ptr %0, align 1
  %8 = ptrtoint ptr %dst to i32
  call void @__asan_storeN_noabort(i32 %8, i32 4)
  store i32 %7, ptr %dst, align 1
  br label %copy_from_sockptr_offset.exit

copy_from_sockptr_offset.exit:                    ; preds = %if.end.i, %if.then11.i.i.i, %if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ %res.03.i.i.i, %if.then11.i.i.i ], [ 0, %if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rxrpc_do_sendmsg(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_wake_async(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 744)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 744)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #10 = { nounwind readonly }
attributes #11 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { argmemonly nofree nounwind readonly willreturn }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { nobuiltin }
attributes #19 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !100, !102, !103, !104, !106, !107, !108, !110, !111, !112, !114, !115, !116, !118, !119, !120, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !148, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !525, !526, !527, !528, !529, !530, !531, !532, !533, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !755, !757, !759, !760, !762, !764, !765, !767, !769, !771, !772, !773, !774, !775, !777, !778, !779, !781, !783, !784, !785, !786, !788, !790, !792, !794, !796, !798, !800, !801, !802, !803, !805, !806, !807, !808, !810, !811, !813, !814, !815, !817, !819, !821, !823, !825, !827, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1330, !1331, !1333, !1335, !1337, !1338, !1339, !1340, !1342, !1344, !1345, !1346, !1348, !1349, !1350, !1352, !1353, !1354, !1356, !1357, !1358, !1360, !1361, !1362, !1364, !1365, !1366, !1368, !1369, !1370, !1372, !1374, !1375, !1376, !1377, !1379, !1380, !1382, !1383, !1385, !1386, !1388, !1389, !1390, !1392, !1394, !1395, !1396, !1397, !1399, !1400, !1401, !1402, !1404, !1405, !1406, !1408, !1409, !1410, !1411, !1413, !1414, !1416, !1417, !1418, !1420, !1421, !1422, !1423, !1425, !1426, !1427, !1429, !1430, !1431, !1433, !1434, !1435, !1437, !1438, !1440, !1441, !1442, !1444, !1445, !1446, !1447, !1449, !1450, !1452, !1454, !1456, !1457, !1458, !1459, !1461, !1462, !1464, !1465, !1467, !1468, !1469, !1470, !1472, !1474, !1475, !1476, !1478, !1479, !1481, !1482, !1484, !1485, !1486, !1488, !1489, !1490, !1492}
!llvm.named.register.sp = !{!1493}
!llvm.module.flags = !{!1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501}
!llvm.ident = !{!1502}

!0 = !{ptr @__tracepoint_rxrpc_local, !1, !"__tracepoint_rxrpc_local", i1 false, i1 false}
!1 = !{!"../include/trace/events/rxrpc.h", i32 482, i32 1}
!2 = !{ptr @__tracepoint_ptr_rxrpc_local, !1, !"__tracepoint_ptr_rxrpc_local", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_rxrpc_local, !1, !"__SCK__tp_func_rxrpc_local", i1 false, i1 false}
!4 = !{ptr @__tracepoint_rxrpc_peer, !5, !"__tracepoint_rxrpc_peer", i1 false, i1 false}
!5 = !{!"../include/trace/events/rxrpc.h", i32 509, i32 1}
!6 = !{ptr @__tracepoint_ptr_rxrpc_peer, !5, !"__tracepoint_ptr_rxrpc_peer", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_rxrpc_peer, !5, !"__SCK__tp_func_rxrpc_peer", i1 false, i1 false}
!8 = !{ptr @__tracepoint_rxrpc_conn, !9, !"__tracepoint_rxrpc_conn", i1 false, i1 false}
!9 = !{!"../include/trace/events/rxrpc.h", i32 536, i32 1}
!10 = !{ptr @__tracepoint_ptr_rxrpc_conn, !9, !"__tracepoint_ptr_rxrpc_conn", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_rxrpc_conn, !9, !"__SCK__tp_func_rxrpc_conn", i1 false, i1 false}
!12 = !{ptr @__tracepoint_rxrpc_client, !13, !"__tracepoint_rxrpc_client", i1 false, i1 false}
!13 = !{!"../include/trace/events/rxrpc.h", i32 563, i32 1}
!14 = !{ptr @__tracepoint_ptr_rxrpc_client, !13, !"__tracepoint_ptr_rxrpc_client", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_rxrpc_client, !13, !"__SCK__tp_func_rxrpc_client", i1 false, i1 false}
!16 = !{ptr @__tracepoint_rxrpc_call, !17, !"__tracepoint_rxrpc_call", i1 false, i1 false}
!17 = !{!"../include/trace/events/rxrpc.h", i32 593, i32 1}
!18 = !{ptr @__tracepoint_ptr_rxrpc_call, !17, !"__tracepoint_ptr_rxrpc_call", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_rxrpc_call, !17, !"__SCK__tp_func_rxrpc_call", i1 false, i1 false}
!20 = !{ptr @__tracepoint_rxrpc_skb, !21, !"__tracepoint_rxrpc_skb", i1 false, i1 false}
!21 = !{!"../include/trace/events/rxrpc.h", i32 623, i32 1}
!22 = !{ptr @__tracepoint_ptr_rxrpc_skb, !21, !"__tracepoint_ptr_rxrpc_skb", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_rxrpc_skb, !21, !"__SCK__tp_func_rxrpc_skb", i1 false, i1 false}
!24 = !{ptr @__tracepoint_rxrpc_rx_packet, !25, !"__tracepoint_rxrpc_rx_packet", i1 false, i1 false}
!25 = !{!"../include/trace/events/rxrpc.h", i32 656, i32 1}
!26 = !{ptr @__tracepoint_ptr_rxrpc_rx_packet, !25, !"__tracepoint_ptr_rxrpc_rx_packet", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_rxrpc_rx_packet, !25, !"__SCK__tp_func_rxrpc_rx_packet", i1 false, i1 false}
!28 = !{ptr @__tracepoint_rxrpc_rx_done, !29, !"__tracepoint_rxrpc_rx_done", i1 false, i1 false}
!29 = !{!"../include/trace/events/rxrpc.h", i32 678, i32 1}
!30 = !{ptr @__tracepoint_ptr_rxrpc_rx_done, !29, !"__tracepoint_ptr_rxrpc_rx_done", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_rxrpc_rx_done, !29, !"__SCK__tp_func_rxrpc_rx_done", i1 false, i1 false}
!32 = !{ptr @__tracepoint_rxrpc_abort, !33, !"__tracepoint_rxrpc_abort", i1 false, i1 false}
!33 = !{!"../include/trace/events/rxrpc.h", i32 696, i32 1}
!34 = !{ptr @__tracepoint_ptr_rxrpc_abort, !33, !"__tracepoint_ptr_rxrpc_abort", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_rxrpc_abort, !33, !"__SCK__tp_func_rxrpc_abort", i1 false, i1 false}
!36 = !{ptr @__tracepoint_rxrpc_call_complete, !37, !"__tracepoint_rxrpc_call_complete", i1 false, i1 false}
!37 = !{!"../include/trace/events/rxrpc.h", i32 728, i32 1}
!38 = !{ptr @__tracepoint_ptr_rxrpc_call_complete, !37, !"__tracepoint_ptr_rxrpc_call_complete", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_rxrpc_call_complete, !37, !"__SCK__tp_func_rxrpc_call_complete", i1 false, i1 false}
!40 = !{ptr @__tracepoint_rxrpc_transmit, !41, !"__tracepoint_rxrpc_transmit", i1 false, i1 false}
!41 = !{!"../include/trace/events/rxrpc.h", i32 754, i32 1}
!42 = !{ptr @__tracepoint_ptr_rxrpc_transmit, !41, !"__tracepoint_ptr_rxrpc_transmit", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_rxrpc_transmit, !41, !"__SCK__tp_func_rxrpc_transmit", i1 false, i1 false}
!44 = !{ptr @__tracepoint_rxrpc_rx_data, !45, !"__tracepoint_rxrpc_rx_data", i1 false, i1 false}
!45 = !{!"../include/trace/events/rxrpc.h", i32 783, i32 1}
!46 = !{ptr @__tracepoint_ptr_rxrpc_rx_data, !45, !"__tracepoint_ptr_rxrpc_rx_data", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_rxrpc_rx_data, !45, !"__SCK__tp_func_rxrpc_rx_data", i1 false, i1 false}
!48 = !{ptr @__tracepoint_rxrpc_rx_ack, !49, !"__tracepoint_rxrpc_rx_ack", i1 false, i1 false}
!49 = !{!"../include/trace/events/rxrpc.h", i32 813, i32 1}
!50 = !{ptr @__tracepoint_ptr_rxrpc_rx_ack, !49, !"__tracepoint_ptr_rxrpc_rx_ack", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_rxrpc_rx_ack, !49, !"__SCK__tp_func_rxrpc_rx_ack", i1 false, i1 false}
!52 = !{ptr @__tracepoint_rxrpc_rx_abort, !53, !"__tracepoint_rxrpc_rx_abort", i1 false, i1 false}
!53 = !{!"../include/trace/events/rxrpc.h", i32 850, i32 1}
!54 = !{ptr @__tracepoint_ptr_rxrpc_rx_abort, !53, !"__tracepoint_ptr_rxrpc_rx_abort", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_rxrpc_rx_abort, !53, !"__SCK__tp_func_rxrpc_rx_abort", i1 false, i1 false}
!56 = !{ptr @__tracepoint_rxrpc_rx_rwind_change, !57, !"__tracepoint_rxrpc_rx_rwind_change", i1 false, i1 false}
!57 = !{!"../include/trace/events/rxrpc.h", i32 874, i32 1}
!58 = !{ptr @__tracepoint_ptr_rxrpc_rx_rwind_change, !57, !"__tracepoint_ptr_rxrpc_rx_rwind_change", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_rxrpc_rx_rwind_change, !57, !"__SCK__tp_func_rxrpc_rx_rwind_change", i1 false, i1 false}
!60 = !{ptr @__tracepoint_rxrpc_tx_packet, !61, !"__tracepoint_rxrpc_tx_packet", i1 false, i1 false}
!61 = !{!"../include/trace/events/rxrpc.h", i32 901, i32 1}
!62 = !{ptr @__tracepoint_ptr_rxrpc_tx_packet, !61, !"__tracepoint_ptr_rxrpc_tx_packet", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_rxrpc_tx_packet, !61, !"__SCK__tp_func_rxrpc_tx_packet", i1 false, i1 false}
!64 = !{ptr @__tracepoint_rxrpc_tx_data, !65, !"__tracepoint_rxrpc_tx_data", i1 false, i1 false}
!65 = !{!"../include/trace/events/rxrpc.h", i32 933, i32 1}
!66 = !{ptr @__tracepoint_ptr_rxrpc_tx_data, !65, !"__tracepoint_ptr_rxrpc_tx_data", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_rxrpc_tx_data, !65, !"__SCK__tp_func_rxrpc_tx_data", i1 false, i1 false}
!68 = !{ptr @__tracepoint_rxrpc_tx_ack, !69, !"__tracepoint_rxrpc_tx_ack", i1 false, i1 false}
!69 = !{!"../include/trace/events/rxrpc.h", i32 972, i32 1}
!70 = !{ptr @__tracepoint_ptr_rxrpc_tx_ack, !69, !"__tracepoint_ptr_rxrpc_tx_ack", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_rxrpc_tx_ack, !69, !"__SCK__tp_func_rxrpc_tx_ack", i1 false, i1 false}
!72 = !{ptr @__tracepoint_rxrpc_receive, !73, !"__tracepoint_rxrpc_receive", i1 false, i1 false}
!73 = !{!"../include/trace/events/rxrpc.h", i32 1006, i32 1}
!74 = !{ptr @__tracepoint_ptr_rxrpc_receive, !73, !"__tracepoint_ptr_rxrpc_receive", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_rxrpc_receive, !73, !"__SCK__tp_func_rxrpc_receive", i1 false, i1 false}
!76 = !{ptr @__tracepoint_rxrpc_recvmsg, !77, !"__tracepoint_rxrpc_recvmsg", i1 false, i1 false}
!77 = !{!"../include/trace/events/rxrpc.h", i32 1039, i32 1}
!78 = !{ptr @__tracepoint_ptr_rxrpc_recvmsg, !77, !"__tracepoint_ptr_rxrpc_recvmsg", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_rxrpc_recvmsg, !77, !"__SCK__tp_func_rxrpc_recvmsg", i1 false, i1 false}
!80 = !{ptr @__tracepoint_rxrpc_rtt_tx, !81, !"__tracepoint_rxrpc_rtt_tx", i1 false, i1 false}
!81 = !{!"../include/trace/events/rxrpc.h", i32 1073, i32 1}
!82 = !{ptr @__tracepoint_ptr_rxrpc_rtt_tx, !81, !"__tracepoint_ptr_rxrpc_rtt_tx", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_rxrpc_rtt_tx, !81, !"__SCK__tp_func_rxrpc_rtt_tx", i1 false, i1 false}
!84 = !{ptr @__tracepoint_rxrpc_rtt_rx, !85, !"__tracepoint_rxrpc_rtt_rx", i1 false, i1 false}
!85 = !{!"../include/trace/events/rxrpc.h", i32 1100, i32 1}
!86 = !{ptr @__tracepoint_ptr_rxrpc_rtt_rx, !85, !"__tracepoint_ptr_rxrpc_rtt_rx", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_rxrpc_rtt_rx, !85, !"__SCK__tp_func_rxrpc_rtt_rx", i1 false, i1 false}
!88 = !{ptr @__tracepoint_rxrpc_timer, !89, !"__tracepoint_rxrpc_timer", i1 false, i1 false}
!89 = !{!"../include/trace/events/rxrpc.h", i32 1138, i32 1}
!90 = !{ptr @__tracepoint_ptr_rxrpc_timer, !89, !"__tracepoint_ptr_rxrpc_timer", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_rxrpc_timer, !89, !"__SCK__tp_func_rxrpc_timer", i1 false, i1 false}
!92 = !{ptr @__tracepoint_rxrpc_rx_lose, !93, !"__tracepoint_rxrpc_rx_lose", i1 false, i1 false}
!93 = !{!"../include/trace/events/rxrpc.h", i32 1183, i32 1}
!94 = !{ptr @__tracepoint_ptr_rxrpc_rx_lose, !93, !"__tracepoint_ptr_rxrpc_rx_lose", i1 false, i1 false}
!95 = !{ptr @__SCK__tp_func_rxrpc_rx_lose, !93, !"__SCK__tp_func_rxrpc_rx_lose", i1 false, i1 false}
!96 = !{ptr @__tracepoint_rxrpc_propose_ack, !97, !"__tracepoint_rxrpc_propose_ack", i1 false, i1 false}
!97 = !{!"../include/trace/events/rxrpc.h", i32 1205, i32 1}
!98 = !{ptr @__tracepoint_ptr_rxrpc_propose_ack, !97, !"__tracepoint_ptr_rxrpc_propose_ack", i1 false, i1 false}
!99 = !{ptr @__SCK__tp_func_rxrpc_propose_ack, !97, !"__SCK__tp_func_rxrpc_propose_ack", i1 false, i1 false}
!100 = !{ptr @__tracepoint_rxrpc_retransmit, !101, !"__tracepoint_rxrpc_retransmit", i1 false, i1 false}
!101 = !{!"../include/trace/events/rxrpc.h", i32 1243, i32 1}
!102 = !{ptr @__tracepoint_ptr_rxrpc_retransmit, !101, !"__tracepoint_ptr_rxrpc_retransmit", i1 false, i1 false}
!103 = !{ptr @__SCK__tp_func_rxrpc_retransmit, !101, !"__SCK__tp_func_rxrpc_retransmit", i1 false, i1 false}
!104 = !{ptr @__tracepoint_rxrpc_congest, !105, !"__tracepoint_rxrpc_congest", i1 false, i1 false}
!105 = !{!"../include/trace/events/rxrpc.h", i32 1270, i32 1}
!106 = !{ptr @__tracepoint_ptr_rxrpc_congest, !105, !"__tracepoint_ptr_rxrpc_congest", i1 false, i1 false}
!107 = !{ptr @__SCK__tp_func_rxrpc_congest, !105, !"__SCK__tp_func_rxrpc_congest", i1 false, i1 false}
!108 = !{ptr @__tracepoint_rxrpc_disconnect_call, !109, !"__tracepoint_rxrpc_disconnect_call", i1 false, i1 false}
!109 = !{!"../include/trace/events/rxrpc.h", i32 1315, i32 1}
!110 = !{ptr @__tracepoint_ptr_rxrpc_disconnect_call, !109, !"__tracepoint_ptr_rxrpc_disconnect_call", i1 false, i1 false}
!111 = !{ptr @__SCK__tp_func_rxrpc_disconnect_call, !109, !"__SCK__tp_func_rxrpc_disconnect_call", i1 false, i1 false}
!112 = !{ptr @__tracepoint_rxrpc_improper_term, !113, !"__tracepoint_rxrpc_improper_term", i1 false, i1 false}
!113 = !{!"../include/trace/events/rxrpc.h", i32 1335, i32 1}
!114 = !{ptr @__tracepoint_ptr_rxrpc_improper_term, !113, !"__tracepoint_ptr_rxrpc_improper_term", i1 false, i1 false}
!115 = !{ptr @__SCK__tp_func_rxrpc_improper_term, !113, !"__SCK__tp_func_rxrpc_improper_term", i1 false, i1 false}
!116 = !{ptr @__tracepoint_rxrpc_rx_eproto, !117, !"__tracepoint_rxrpc_rx_eproto", i1 false, i1 false}
!117 = !{!"../include/trace/events/rxrpc.h", i32 1355, i32 1}
!118 = !{ptr @__tracepoint_ptr_rxrpc_rx_eproto, !117, !"__tracepoint_ptr_rxrpc_rx_eproto", i1 false, i1 false}
!119 = !{ptr @__SCK__tp_func_rxrpc_rx_eproto, !117, !"__SCK__tp_func_rxrpc_rx_eproto", i1 false, i1 false}
!120 = !{ptr @__tracepoint_rxrpc_connect_call, !121, !"__tracepoint_rxrpc_connect_call", i1 false, i1 false}
!121 = !{!"../include/trace/events/rxrpc.h", i32 1379, i32 1}
!122 = !{ptr @__tracepoint_ptr_rxrpc_connect_call, !121, !"__tracepoint_ptr_rxrpc_connect_call", i1 false, i1 false}
!123 = !{ptr @__SCK__tp_func_rxrpc_connect_call, !121, !"__SCK__tp_func_rxrpc_connect_call", i1 false, i1 false}
!124 = !{ptr @__tracepoint_rxrpc_resend, !125, !"__tracepoint_rxrpc_resend", i1 false, i1 false}
!125 = !{!"../include/trace/events/rxrpc.h", i32 1405, i32 1}
!126 = !{ptr @__tracepoint_ptr_rxrpc_resend, !125, !"__tracepoint_ptr_rxrpc_resend", i1 false, i1 false}
!127 = !{ptr @__SCK__tp_func_rxrpc_resend, !125, !"__SCK__tp_func_rxrpc_resend", i1 false, i1 false}
!128 = !{ptr @__tracepoint_rxrpc_rx_icmp, !129, !"__tracepoint_rxrpc_rx_icmp", i1 false, i1 false}
!129 = !{!"../include/trace/events/rxrpc.h", i32 1428, i32 1}
!130 = !{ptr @__tracepoint_ptr_rxrpc_rx_icmp, !129, !"__tracepoint_ptr_rxrpc_rx_icmp", i1 false, i1 false}
!131 = !{ptr @__SCK__tp_func_rxrpc_rx_icmp, !129, !"__SCK__tp_func_rxrpc_rx_icmp", i1 false, i1 false}
!132 = !{ptr @__tracepoint_rxrpc_tx_fail, !133, !"__tracepoint_rxrpc_tx_fail", i1 false, i1 false}
!133 = !{!"../include/trace/events/rxrpc.h", i32 1457, i32 1}
!134 = !{ptr @__tracepoint_ptr_rxrpc_tx_fail, !133, !"__tracepoint_ptr_rxrpc_tx_fail", i1 false, i1 false}
!135 = !{ptr @__SCK__tp_func_rxrpc_tx_fail, !133, !"__SCK__tp_func_rxrpc_tx_fail", i1 false, i1 false}
!136 = !{ptr @__tracepoint_rxrpc_call_reset, !137, !"__tracepoint_rxrpc_call_reset", i1 false, i1 false}
!137 = !{!"../include/trace/events/rxrpc.h", i32 1484, i32 1}
!138 = !{ptr @__tracepoint_ptr_rxrpc_call_reset, !137, !"__tracepoint_ptr_rxrpc_call_reset", i1 false, i1 false}
!139 = !{ptr @__SCK__tp_func_rxrpc_call_reset, !137, !"__SCK__tp_func_rxrpc_call_reset", i1 false, i1 false}
!140 = !{ptr @__tracepoint_rxrpc_notify_socket, !141, !"__tracepoint_rxrpc_notify_socket", i1 false, i1 false}
!141 = !{!"../include/trace/events/rxrpc.h", i32 1516, i32 1}
!142 = !{ptr @__tracepoint_ptr_rxrpc_notify_socket, !141, !"__tracepoint_ptr_rxrpc_notify_socket", i1 false, i1 false}
!143 = !{ptr @__SCK__tp_func_rxrpc_notify_socket, !141, !"__SCK__tp_func_rxrpc_notify_socket", i1 false, i1 false}
!144 = !{ptr @__tracepoint_rxrpc_rx_discard_ack, !145, !"__tracepoint_rxrpc_rx_discard_ack", i1 false, i1 false}
!145 = !{!"../include/trace/events/rxrpc.h", i32 1536, i32 1}
!146 = !{ptr @__tracepoint_ptr_rxrpc_rx_discard_ack, !145, !"__tracepoint_ptr_rxrpc_rx_discard_ack", i1 false, i1 false}
!147 = !{ptr @__SCK__tp_func_rxrpc_rx_discard_ack, !145, !"__SCK__tp_func_rxrpc_rx_discard_ack", i1 false, i1 false}
!148 = !{ptr @.str, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../include/trace/events/rxrpc.h", i32 456, i32 1}
!150 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_cleaned, !149, !"__TRACE_SYSTEM_rxrpc_skb_cleaned", i1 false, i1 false}
!151 = !{ptr @TRACE_SYSTEM_rxrpc_skb_cleaned, !149, !"TRACE_SYSTEM_rxrpc_skb_cleaned", i1 false, i1 false}
!152 = !{ptr @.str.1, !149, !"<string literal>", i1 false, i1 false}
!153 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_freed, !149, !"__TRACE_SYSTEM_rxrpc_skb_freed", i1 false, i1 false}
!154 = !{ptr @TRACE_SYSTEM_rxrpc_skb_freed, !149, !"TRACE_SYSTEM_rxrpc_skb_freed", i1 false, i1 false}
!155 = !{ptr @.str.2, !149, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_got, !149, !"__TRACE_SYSTEM_rxrpc_skb_got", i1 false, i1 false}
!157 = !{ptr @TRACE_SYSTEM_rxrpc_skb_got, !149, !"TRACE_SYSTEM_rxrpc_skb_got", i1 false, i1 false}
!158 = !{ptr @.str.3, !149, !"<string literal>", i1 false, i1 false}
!159 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_lost, !149, !"__TRACE_SYSTEM_rxrpc_skb_lost", i1 false, i1 false}
!160 = !{ptr @TRACE_SYSTEM_rxrpc_skb_lost, !149, !"TRACE_SYSTEM_rxrpc_skb_lost", i1 false, i1 false}
!161 = !{ptr @.str.4, !149, !"<string literal>", i1 false, i1 false}
!162 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_new, !149, !"__TRACE_SYSTEM_rxrpc_skb_new", i1 false, i1 false}
!163 = !{ptr @TRACE_SYSTEM_rxrpc_skb_new, !149, !"TRACE_SYSTEM_rxrpc_skb_new", i1 false, i1 false}
!164 = !{ptr @.str.5, !149, !"<string literal>", i1 false, i1 false}
!165 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_purged, !149, !"__TRACE_SYSTEM_rxrpc_skb_purged", i1 false, i1 false}
!166 = !{ptr @TRACE_SYSTEM_rxrpc_skb_purged, !149, !"TRACE_SYSTEM_rxrpc_skb_purged", i1 false, i1 false}
!167 = !{ptr @.str.6, !149, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_received, !149, !"__TRACE_SYSTEM_rxrpc_skb_received", i1 false, i1 false}
!169 = !{ptr @TRACE_SYSTEM_rxrpc_skb_received, !149, !"TRACE_SYSTEM_rxrpc_skb_received", i1 false, i1 false}
!170 = !{ptr @.str.7, !149, !"<string literal>", i1 false, i1 false}
!171 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_rotated, !149, !"__TRACE_SYSTEM_rxrpc_skb_rotated", i1 false, i1 false}
!172 = !{ptr @TRACE_SYSTEM_rxrpc_skb_rotated, !149, !"TRACE_SYSTEM_rxrpc_skb_rotated", i1 false, i1 false}
!173 = !{ptr @.str.8, !149, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_seen, !149, !"__TRACE_SYSTEM_rxrpc_skb_seen", i1 false, i1 false}
!175 = !{ptr @TRACE_SYSTEM_rxrpc_skb_seen, !149, !"TRACE_SYSTEM_rxrpc_skb_seen", i1 false, i1 false}
!176 = !{ptr @.str.9, !149, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_unshared, !149, !"__TRACE_SYSTEM_rxrpc_skb_unshared", i1 false, i1 false}
!178 = !{ptr @TRACE_SYSTEM_rxrpc_skb_unshared, !149, !"TRACE_SYSTEM_rxrpc_skb_unshared", i1 false, i1 false}
!179 = !{ptr @.str.10, !149, !"<string literal>", i1 false, i1 false}
!180 = !{ptr @__TRACE_SYSTEM_rxrpc_skb_unshared_nomem, !149, !"__TRACE_SYSTEM_rxrpc_skb_unshared_nomem", i1 false, i1 false}
!181 = !{ptr @TRACE_SYSTEM_rxrpc_skb_unshared_nomem, !149, !"TRACE_SYSTEM_rxrpc_skb_unshared_nomem", i1 false, i1 false}
!182 = !{ptr @.str.11, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../include/trace/events/rxrpc.h", i32 457, i32 1}
!184 = !{ptr @__TRACE_SYSTEM_rxrpc_local_got, !183, !"__TRACE_SYSTEM_rxrpc_local_got", i1 false, i1 false}
!185 = !{ptr @TRACE_SYSTEM_rxrpc_local_got, !183, !"TRACE_SYSTEM_rxrpc_local_got", i1 false, i1 false}
!186 = !{ptr @.str.12, !183, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @__TRACE_SYSTEM_rxrpc_local_new, !183, !"__TRACE_SYSTEM_rxrpc_local_new", i1 false, i1 false}
!188 = !{ptr @TRACE_SYSTEM_rxrpc_local_new, !183, !"TRACE_SYSTEM_rxrpc_local_new", i1 false, i1 false}
!189 = !{ptr @.str.13, !183, !"<string literal>", i1 false, i1 false}
!190 = !{ptr @__TRACE_SYSTEM_rxrpc_local_processing, !183, !"__TRACE_SYSTEM_rxrpc_local_processing", i1 false, i1 false}
!191 = !{ptr @TRACE_SYSTEM_rxrpc_local_processing, !183, !"TRACE_SYSTEM_rxrpc_local_processing", i1 false, i1 false}
!192 = !{ptr @.str.14, !183, !"<string literal>", i1 false, i1 false}
!193 = !{ptr @__TRACE_SYSTEM_rxrpc_local_put, !183, !"__TRACE_SYSTEM_rxrpc_local_put", i1 false, i1 false}
!194 = !{ptr @TRACE_SYSTEM_rxrpc_local_put, !183, !"TRACE_SYSTEM_rxrpc_local_put", i1 false, i1 false}
!195 = !{ptr @.str.15, !183, !"<string literal>", i1 false, i1 false}
!196 = !{ptr @__TRACE_SYSTEM_rxrpc_local_queued, !183, !"__TRACE_SYSTEM_rxrpc_local_queued", i1 false, i1 false}
!197 = !{ptr @TRACE_SYSTEM_rxrpc_local_queued, !183, !"TRACE_SYSTEM_rxrpc_local_queued", i1 false, i1 false}
!198 = !{ptr @.str.16, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../include/trace/events/rxrpc.h", i32 458, i32 1}
!200 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_got, !199, !"__TRACE_SYSTEM_rxrpc_conn_got", i1 false, i1 false}
!201 = !{ptr @TRACE_SYSTEM_rxrpc_conn_got, !199, !"TRACE_SYSTEM_rxrpc_conn_got", i1 false, i1 false}
!202 = !{ptr @.str.17, !199, !"<string literal>", i1 false, i1 false}
!203 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_new_client, !199, !"__TRACE_SYSTEM_rxrpc_conn_new_client", i1 false, i1 false}
!204 = !{ptr @TRACE_SYSTEM_rxrpc_conn_new_client, !199, !"TRACE_SYSTEM_rxrpc_conn_new_client", i1 false, i1 false}
!205 = !{ptr @.str.18, !199, !"<string literal>", i1 false, i1 false}
!206 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_new_service, !199, !"__TRACE_SYSTEM_rxrpc_conn_new_service", i1 false, i1 false}
!207 = !{ptr @TRACE_SYSTEM_rxrpc_conn_new_service, !199, !"TRACE_SYSTEM_rxrpc_conn_new_service", i1 false, i1 false}
!208 = !{ptr @.str.19, !199, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_put_client, !199, !"__TRACE_SYSTEM_rxrpc_conn_put_client", i1 false, i1 false}
!210 = !{ptr @TRACE_SYSTEM_rxrpc_conn_put_client, !199, !"TRACE_SYSTEM_rxrpc_conn_put_client", i1 false, i1 false}
!211 = !{ptr @.str.20, !199, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_put_service, !199, !"__TRACE_SYSTEM_rxrpc_conn_put_service", i1 false, i1 false}
!213 = !{ptr @TRACE_SYSTEM_rxrpc_conn_put_service, !199, !"TRACE_SYSTEM_rxrpc_conn_put_service", i1 false, i1 false}
!214 = !{ptr @.str.21, !199, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_queued, !199, !"__TRACE_SYSTEM_rxrpc_conn_queued", i1 false, i1 false}
!216 = !{ptr @TRACE_SYSTEM_rxrpc_conn_queued, !199, !"TRACE_SYSTEM_rxrpc_conn_queued", i1 false, i1 false}
!217 = !{ptr @.str.22, !199, !"<string literal>", i1 false, i1 false}
!218 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_reap_service, !199, !"__TRACE_SYSTEM_rxrpc_conn_reap_service", i1 false, i1 false}
!219 = !{ptr @TRACE_SYSTEM_rxrpc_conn_reap_service, !199, !"TRACE_SYSTEM_rxrpc_conn_reap_service", i1 false, i1 false}
!220 = !{ptr @.str.23, !199, !"<string literal>", i1 false, i1 false}
!221 = !{ptr @__TRACE_SYSTEM_rxrpc_conn_seen, !199, !"__TRACE_SYSTEM_rxrpc_conn_seen", i1 false, i1 false}
!222 = !{ptr @TRACE_SYSTEM_rxrpc_conn_seen, !199, !"TRACE_SYSTEM_rxrpc_conn_seen", i1 false, i1 false}
!223 = !{ptr @.str.24, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../include/trace/events/rxrpc.h", i32 459, i32 1}
!225 = !{ptr @__TRACE_SYSTEM_rxrpc_client_activate_chans, !224, !"__TRACE_SYSTEM_rxrpc_client_activate_chans", i1 false, i1 false}
!226 = !{ptr @TRACE_SYSTEM_rxrpc_client_activate_chans, !224, !"TRACE_SYSTEM_rxrpc_client_activate_chans", i1 false, i1 false}
!227 = !{ptr @.str.25, !224, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @__TRACE_SYSTEM_rxrpc_client_alloc, !224, !"__TRACE_SYSTEM_rxrpc_client_alloc", i1 false, i1 false}
!229 = !{ptr @TRACE_SYSTEM_rxrpc_client_alloc, !224, !"TRACE_SYSTEM_rxrpc_client_alloc", i1 false, i1 false}
!230 = !{ptr @.str.26, !224, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @__TRACE_SYSTEM_rxrpc_client_chan_activate, !224, !"__TRACE_SYSTEM_rxrpc_client_chan_activate", i1 false, i1 false}
!232 = !{ptr @TRACE_SYSTEM_rxrpc_client_chan_activate, !224, !"TRACE_SYSTEM_rxrpc_client_chan_activate", i1 false, i1 false}
!233 = !{ptr @.str.27, !224, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @__TRACE_SYSTEM_rxrpc_client_chan_disconnect, !224, !"__TRACE_SYSTEM_rxrpc_client_chan_disconnect", i1 false, i1 false}
!235 = !{ptr @TRACE_SYSTEM_rxrpc_client_chan_disconnect, !224, !"TRACE_SYSTEM_rxrpc_client_chan_disconnect", i1 false, i1 false}
!236 = !{ptr @.str.28, !224, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @__TRACE_SYSTEM_rxrpc_client_chan_pass, !224, !"__TRACE_SYSTEM_rxrpc_client_chan_pass", i1 false, i1 false}
!238 = !{ptr @TRACE_SYSTEM_rxrpc_client_chan_pass, !224, !"TRACE_SYSTEM_rxrpc_client_chan_pass", i1 false, i1 false}
!239 = !{ptr @.str.29, !224, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @__TRACE_SYSTEM_rxrpc_client_chan_wait_failed, !224, !"__TRACE_SYSTEM_rxrpc_client_chan_wait_failed", i1 false, i1 false}
!241 = !{ptr @TRACE_SYSTEM_rxrpc_client_chan_wait_failed, !224, !"TRACE_SYSTEM_rxrpc_client_chan_wait_failed", i1 false, i1 false}
!242 = !{ptr @.str.30, !224, !"<string literal>", i1 false, i1 false}
!243 = !{ptr @__TRACE_SYSTEM_rxrpc_client_cleanup, !224, !"__TRACE_SYSTEM_rxrpc_client_cleanup", i1 false, i1 false}
!244 = !{ptr @TRACE_SYSTEM_rxrpc_client_cleanup, !224, !"TRACE_SYSTEM_rxrpc_client_cleanup", i1 false, i1 false}
!245 = !{ptr @.str.31, !224, !"<string literal>", i1 false, i1 false}
!246 = !{ptr @__TRACE_SYSTEM_rxrpc_client_discard, !224, !"__TRACE_SYSTEM_rxrpc_client_discard", i1 false, i1 false}
!247 = !{ptr @TRACE_SYSTEM_rxrpc_client_discard, !224, !"TRACE_SYSTEM_rxrpc_client_discard", i1 false, i1 false}
!248 = !{ptr @.str.32, !224, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @__TRACE_SYSTEM_rxrpc_client_duplicate, !224, !"__TRACE_SYSTEM_rxrpc_client_duplicate", i1 false, i1 false}
!250 = !{ptr @TRACE_SYSTEM_rxrpc_client_duplicate, !224, !"TRACE_SYSTEM_rxrpc_client_duplicate", i1 false, i1 false}
!251 = !{ptr @.str.33, !224, !"<string literal>", i1 false, i1 false}
!252 = !{ptr @__TRACE_SYSTEM_rxrpc_client_exposed, !224, !"__TRACE_SYSTEM_rxrpc_client_exposed", i1 false, i1 false}
!253 = !{ptr @TRACE_SYSTEM_rxrpc_client_exposed, !224, !"TRACE_SYSTEM_rxrpc_client_exposed", i1 false, i1 false}
!254 = !{ptr @.str.34, !224, !"<string literal>", i1 false, i1 false}
!255 = !{ptr @__TRACE_SYSTEM_rxrpc_client_replace, !224, !"__TRACE_SYSTEM_rxrpc_client_replace", i1 false, i1 false}
!256 = !{ptr @TRACE_SYSTEM_rxrpc_client_replace, !224, !"TRACE_SYSTEM_rxrpc_client_replace", i1 false, i1 false}
!257 = !{ptr @.str.35, !224, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @__TRACE_SYSTEM_rxrpc_client_to_active, !224, !"__TRACE_SYSTEM_rxrpc_client_to_active", i1 false, i1 false}
!259 = !{ptr @TRACE_SYSTEM_rxrpc_client_to_active, !224, !"TRACE_SYSTEM_rxrpc_client_to_active", i1 false, i1 false}
!260 = !{ptr @.str.36, !224, !"<string literal>", i1 false, i1 false}
!261 = !{ptr @__TRACE_SYSTEM_rxrpc_client_to_idle, !224, !"__TRACE_SYSTEM_rxrpc_client_to_idle", i1 false, i1 false}
!262 = !{ptr @TRACE_SYSTEM_rxrpc_client_to_idle, !224, !"TRACE_SYSTEM_rxrpc_client_to_idle", i1 false, i1 false}
!263 = !{ptr @.str.37, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../include/trace/events/rxrpc.h", i32 460, i32 1}
!265 = !{ptr @__TRACE_SYSTEM_rxrpc_call_connected, !264, !"__TRACE_SYSTEM_rxrpc_call_connected", i1 false, i1 false}
!266 = !{ptr @TRACE_SYSTEM_rxrpc_call_connected, !264, !"TRACE_SYSTEM_rxrpc_call_connected", i1 false, i1 false}
!267 = !{ptr @.str.38, !264, !"<string literal>", i1 false, i1 false}
!268 = !{ptr @__TRACE_SYSTEM_rxrpc_call_error, !264, !"__TRACE_SYSTEM_rxrpc_call_error", i1 false, i1 false}
!269 = !{ptr @TRACE_SYSTEM_rxrpc_call_error, !264, !"TRACE_SYSTEM_rxrpc_call_error", i1 false, i1 false}
!270 = !{ptr @.str.39, !264, !"<string literal>", i1 false, i1 false}
!271 = !{ptr @__TRACE_SYSTEM_rxrpc_call_got, !264, !"__TRACE_SYSTEM_rxrpc_call_got", i1 false, i1 false}
!272 = !{ptr @TRACE_SYSTEM_rxrpc_call_got, !264, !"TRACE_SYSTEM_rxrpc_call_got", i1 false, i1 false}
!273 = !{ptr @.str.40, !264, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @__TRACE_SYSTEM_rxrpc_call_got_kernel, !264, !"__TRACE_SYSTEM_rxrpc_call_got_kernel", i1 false, i1 false}
!275 = !{ptr @TRACE_SYSTEM_rxrpc_call_got_kernel, !264, !"TRACE_SYSTEM_rxrpc_call_got_kernel", i1 false, i1 false}
!276 = !{ptr @.str.41, !264, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @__TRACE_SYSTEM_rxrpc_call_got_userid, !264, !"__TRACE_SYSTEM_rxrpc_call_got_userid", i1 false, i1 false}
!278 = !{ptr @TRACE_SYSTEM_rxrpc_call_got_userid, !264, !"TRACE_SYSTEM_rxrpc_call_got_userid", i1 false, i1 false}
!279 = !{ptr @.str.42, !264, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @__TRACE_SYSTEM_rxrpc_call_new_client, !264, !"__TRACE_SYSTEM_rxrpc_call_new_client", i1 false, i1 false}
!281 = !{ptr @TRACE_SYSTEM_rxrpc_call_new_client, !264, !"TRACE_SYSTEM_rxrpc_call_new_client", i1 false, i1 false}
!282 = !{ptr @.str.43, !264, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @__TRACE_SYSTEM_rxrpc_call_new_service, !264, !"__TRACE_SYSTEM_rxrpc_call_new_service", i1 false, i1 false}
!284 = !{ptr @TRACE_SYSTEM_rxrpc_call_new_service, !264, !"TRACE_SYSTEM_rxrpc_call_new_service", i1 false, i1 false}
!285 = !{ptr @.str.44, !264, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @__TRACE_SYSTEM_rxrpc_call_put, !264, !"__TRACE_SYSTEM_rxrpc_call_put", i1 false, i1 false}
!287 = !{ptr @TRACE_SYSTEM_rxrpc_call_put, !264, !"TRACE_SYSTEM_rxrpc_call_put", i1 false, i1 false}
!288 = !{ptr @.str.45, !264, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @__TRACE_SYSTEM_rxrpc_call_put_kernel, !264, !"__TRACE_SYSTEM_rxrpc_call_put_kernel", i1 false, i1 false}
!290 = !{ptr @TRACE_SYSTEM_rxrpc_call_put_kernel, !264, !"TRACE_SYSTEM_rxrpc_call_put_kernel", i1 false, i1 false}
!291 = !{ptr @.str.46, !264, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @__TRACE_SYSTEM_rxrpc_call_put_noqueue, !264, !"__TRACE_SYSTEM_rxrpc_call_put_noqueue", i1 false, i1 false}
!293 = !{ptr @TRACE_SYSTEM_rxrpc_call_put_noqueue, !264, !"TRACE_SYSTEM_rxrpc_call_put_noqueue", i1 false, i1 false}
!294 = !{ptr @.str.47, !264, !"<string literal>", i1 false, i1 false}
!295 = !{ptr @__TRACE_SYSTEM_rxrpc_call_put_userid, !264, !"__TRACE_SYSTEM_rxrpc_call_put_userid", i1 false, i1 false}
!296 = !{ptr @TRACE_SYSTEM_rxrpc_call_put_userid, !264, !"TRACE_SYSTEM_rxrpc_call_put_userid", i1 false, i1 false}
!297 = !{ptr @.str.48, !264, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @__TRACE_SYSTEM_rxrpc_call_queued, !264, !"__TRACE_SYSTEM_rxrpc_call_queued", i1 false, i1 false}
!299 = !{ptr @TRACE_SYSTEM_rxrpc_call_queued, !264, !"TRACE_SYSTEM_rxrpc_call_queued", i1 false, i1 false}
!300 = !{ptr @.str.49, !264, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @__TRACE_SYSTEM_rxrpc_call_queued_ref, !264, !"__TRACE_SYSTEM_rxrpc_call_queued_ref", i1 false, i1 false}
!302 = !{ptr @TRACE_SYSTEM_rxrpc_call_queued_ref, !264, !"TRACE_SYSTEM_rxrpc_call_queued_ref", i1 false, i1 false}
!303 = !{ptr @.str.50, !264, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @__TRACE_SYSTEM_rxrpc_call_release, !264, !"__TRACE_SYSTEM_rxrpc_call_release", i1 false, i1 false}
!305 = !{ptr @TRACE_SYSTEM_rxrpc_call_release, !264, !"TRACE_SYSTEM_rxrpc_call_release", i1 false, i1 false}
!306 = !{ptr @.str.51, !264, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @__TRACE_SYSTEM_rxrpc_call_seen, !264, !"__TRACE_SYSTEM_rxrpc_call_seen", i1 false, i1 false}
!308 = !{ptr @TRACE_SYSTEM_rxrpc_call_seen, !264, !"TRACE_SYSTEM_rxrpc_call_seen", i1 false, i1 false}
!309 = !{ptr @.str.52, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../include/trace/events/rxrpc.h", i32 461, i32 1}
!311 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_await_reply, !310, !"__TRACE_SYSTEM_rxrpc_transmit_await_reply", i1 false, i1 false}
!312 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_await_reply, !310, !"TRACE_SYSTEM_rxrpc_transmit_await_reply", i1 false, i1 false}
!313 = !{ptr @.str.53, !310, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_end, !310, !"__TRACE_SYSTEM_rxrpc_transmit_end", i1 false, i1 false}
!315 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_end, !310, !"TRACE_SYSTEM_rxrpc_transmit_end", i1 false, i1 false}
!316 = !{ptr @.str.54, !310, !"<string literal>", i1 false, i1 false}
!317 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_queue, !310, !"__TRACE_SYSTEM_rxrpc_transmit_queue", i1 false, i1 false}
!318 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_queue, !310, !"TRACE_SYSTEM_rxrpc_transmit_queue", i1 false, i1 false}
!319 = !{ptr @.str.55, !310, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_queue_last, !310, !"__TRACE_SYSTEM_rxrpc_transmit_queue_last", i1 false, i1 false}
!321 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_queue_last, !310, !"TRACE_SYSTEM_rxrpc_transmit_queue_last", i1 false, i1 false}
!322 = !{ptr @.str.56, !310, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_rotate, !310, !"__TRACE_SYSTEM_rxrpc_transmit_rotate", i1 false, i1 false}
!324 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_rotate, !310, !"TRACE_SYSTEM_rxrpc_transmit_rotate", i1 false, i1 false}
!325 = !{ptr @.str.57, !310, !"<string literal>", i1 false, i1 false}
!326 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_rotate_last, !310, !"__TRACE_SYSTEM_rxrpc_transmit_rotate_last", i1 false, i1 false}
!327 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_rotate_last, !310, !"TRACE_SYSTEM_rxrpc_transmit_rotate_last", i1 false, i1 false}
!328 = !{ptr @.str.58, !310, !"<string literal>", i1 false, i1 false}
!329 = !{ptr @__TRACE_SYSTEM_rxrpc_transmit_wait, !310, !"__TRACE_SYSTEM_rxrpc_transmit_wait", i1 false, i1 false}
!330 = !{ptr @TRACE_SYSTEM_rxrpc_transmit_wait, !310, !"TRACE_SYSTEM_rxrpc_transmit_wait", i1 false, i1 false}
!331 = !{ptr @.str.59, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../include/trace/events/rxrpc.h", i32 462, i32 1}
!333 = !{ptr @__TRACE_SYSTEM_rxrpc_receive_end, !332, !"__TRACE_SYSTEM_rxrpc_receive_end", i1 false, i1 false}
!334 = !{ptr @TRACE_SYSTEM_rxrpc_receive_end, !332, !"TRACE_SYSTEM_rxrpc_receive_end", i1 false, i1 false}
!335 = !{ptr @.str.60, !332, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @__TRACE_SYSTEM_rxrpc_receive_front, !332, !"__TRACE_SYSTEM_rxrpc_receive_front", i1 false, i1 false}
!337 = !{ptr @TRACE_SYSTEM_rxrpc_receive_front, !332, !"TRACE_SYSTEM_rxrpc_receive_front", i1 false, i1 false}
!338 = !{ptr @.str.61, !332, !"<string literal>", i1 false, i1 false}
!339 = !{ptr @__TRACE_SYSTEM_rxrpc_receive_incoming, !332, !"__TRACE_SYSTEM_rxrpc_receive_incoming", i1 false, i1 false}
!340 = !{ptr @TRACE_SYSTEM_rxrpc_receive_incoming, !332, !"TRACE_SYSTEM_rxrpc_receive_incoming", i1 false, i1 false}
!341 = !{ptr @.str.62, !332, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @__TRACE_SYSTEM_rxrpc_receive_queue, !332, !"__TRACE_SYSTEM_rxrpc_receive_queue", i1 false, i1 false}
!343 = !{ptr @TRACE_SYSTEM_rxrpc_receive_queue, !332, !"TRACE_SYSTEM_rxrpc_receive_queue", i1 false, i1 false}
!344 = !{ptr @.str.63, !332, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @__TRACE_SYSTEM_rxrpc_receive_queue_last, !332, !"__TRACE_SYSTEM_rxrpc_receive_queue_last", i1 false, i1 false}
!346 = !{ptr @TRACE_SYSTEM_rxrpc_receive_queue_last, !332, !"TRACE_SYSTEM_rxrpc_receive_queue_last", i1 false, i1 false}
!347 = !{ptr @.str.64, !332, !"<string literal>", i1 false, i1 false}
!348 = !{ptr @__TRACE_SYSTEM_rxrpc_receive_rotate, !332, !"__TRACE_SYSTEM_rxrpc_receive_rotate", i1 false, i1 false}
!349 = !{ptr @TRACE_SYSTEM_rxrpc_receive_rotate, !332, !"TRACE_SYSTEM_rxrpc_receive_rotate", i1 false, i1 false}
!350 = !{ptr @.str.65, !351, !"<string literal>", i1 false, i1 false}
!351 = !{!"../include/trace/events/rxrpc.h", i32 463, i32 1}
!352 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_cont, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_cont", i1 false, i1 false}
!353 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_cont, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_cont", i1 false, i1 false}
!354 = !{ptr @.str.66, !351, !"<string literal>", i1 false, i1 false}
!355 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_data_return, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_data_return", i1 false, i1 false}
!356 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_data_return, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_data_return", i1 false, i1 false}
!357 = !{ptr @.str.67, !351, !"<string literal>", i1 false, i1 false}
!358 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_dequeue, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_dequeue", i1 false, i1 false}
!359 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_dequeue, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_dequeue", i1 false, i1 false}
!360 = !{ptr @.str.68, !351, !"<string literal>", i1 false, i1 false}
!361 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_enter, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_enter", i1 false, i1 false}
!362 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_enter, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_enter", i1 false, i1 false}
!363 = !{ptr @.str.69, !351, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_full, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_full", i1 false, i1 false}
!365 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_full, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_full", i1 false, i1 false}
!366 = !{ptr @.str.70, !351, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_hole, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_hole", i1 false, i1 false}
!368 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_hole, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_hole", i1 false, i1 false}
!369 = !{ptr @.str.71, !351, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_next, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_next", i1 false, i1 false}
!371 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_next, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_next", i1 false, i1 false}
!372 = !{ptr @.str.72, !351, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_requeue, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_requeue", i1 false, i1 false}
!374 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_requeue, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_requeue", i1 false, i1 false}
!375 = !{ptr @.str.73, !351, !"<string literal>", i1 false, i1 false}
!376 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_return, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_return", i1 false, i1 false}
!377 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_return, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_return", i1 false, i1 false}
!378 = !{ptr @.str.74, !351, !"<string literal>", i1 false, i1 false}
!379 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_terminal, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_terminal", i1 false, i1 false}
!380 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_terminal, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_terminal", i1 false, i1 false}
!381 = !{ptr @.str.75, !351, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted", i1 false, i1 false}
!383 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_to_be_accepted", i1 false, i1 false}
!384 = !{ptr @.str.76, !351, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @__TRACE_SYSTEM_rxrpc_recvmsg_wait, !351, !"__TRACE_SYSTEM_rxrpc_recvmsg_wait", i1 false, i1 false}
!386 = !{ptr @TRACE_SYSTEM_rxrpc_recvmsg_wait, !351, !"TRACE_SYSTEM_rxrpc_recvmsg_wait", i1 false, i1 false}
!387 = !{ptr @.str.77, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../include/trace/events/rxrpc.h", i32 464, i32 1}
!389 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_cancel, !388, !"__TRACE_SYSTEM_rxrpc_rtt_tx_cancel", i1 false, i1 false}
!390 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_tx_cancel, !388, !"TRACE_SYSTEM_rxrpc_rtt_tx_cancel", i1 false, i1 false}
!391 = !{ptr @.str.78, !388, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_data, !388, !"__TRACE_SYSTEM_rxrpc_rtt_tx_data", i1 false, i1 false}
!393 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_tx_data, !388, !"TRACE_SYSTEM_rxrpc_rtt_tx_data", i1 false, i1 false}
!394 = !{ptr @.str.79, !388, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_no_slot, !388, !"__TRACE_SYSTEM_rxrpc_rtt_tx_no_slot", i1 false, i1 false}
!396 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_tx_no_slot, !388, !"TRACE_SYSTEM_rxrpc_rtt_tx_no_slot", i1 false, i1 false}
!397 = !{ptr @.str.80, !388, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_tx_ping, !388, !"__TRACE_SYSTEM_rxrpc_rtt_tx_ping", i1 false, i1 false}
!399 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_tx_ping, !388, !"TRACE_SYSTEM_rxrpc_rtt_tx_ping", i1 false, i1 false}
!400 = !{ptr @.str.81, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../include/trace/events/rxrpc.h", i32 465, i32 1}
!402 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_cancel, !401, !"__TRACE_SYSTEM_rxrpc_rtt_rx_cancel", i1 false, i1 false}
!403 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_rx_cancel, !401, !"TRACE_SYSTEM_rxrpc_rtt_rx_cancel", i1 false, i1 false}
!404 = !{ptr @.str.82, !401, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_obsolete, !401, !"__TRACE_SYSTEM_rxrpc_rtt_rx_obsolete", i1 false, i1 false}
!406 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_rx_obsolete, !401, !"TRACE_SYSTEM_rxrpc_rtt_rx_obsolete", i1 false, i1 false}
!407 = !{ptr @.str.83, !401, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_lost, !401, !"__TRACE_SYSTEM_rxrpc_rtt_rx_lost", i1 false, i1 false}
!409 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_rx_lost, !401, !"TRACE_SYSTEM_rxrpc_rtt_rx_lost", i1 false, i1 false}
!410 = !{ptr @.str.84, !401, !"<string literal>", i1 false, i1 false}
!411 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_ping_response, !401, !"__TRACE_SYSTEM_rxrpc_rtt_rx_ping_response", i1 false, i1 false}
!412 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_rx_ping_response, !401, !"TRACE_SYSTEM_rxrpc_rtt_rx_ping_response", i1 false, i1 false}
!413 = !{ptr @.str.85, !401, !"<string literal>", i1 false, i1 false}
!414 = !{ptr @__TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack, !401, !"__TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack", i1 false, i1 false}
!415 = !{ptr @TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack, !401, !"TRACE_SYSTEM_rxrpc_rtt_rx_requested_ack", i1 false, i1 false}
!416 = !{ptr @.str.86, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../include/trace/events/rxrpc.h", i32 466, i32 1}
!418 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_begin, !417, !"__TRACE_SYSTEM_rxrpc_timer_begin", i1 false, i1 false}
!419 = !{ptr @TRACE_SYSTEM_rxrpc_timer_begin, !417, !"TRACE_SYSTEM_rxrpc_timer_begin", i1 false, i1 false}
!420 = !{ptr @.str.87, !417, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_expired, !417, !"__TRACE_SYSTEM_rxrpc_timer_expired", i1 false, i1 false}
!422 = !{ptr @TRACE_SYSTEM_rxrpc_timer_expired, !417, !"TRACE_SYSTEM_rxrpc_timer_expired", i1 false, i1 false}
!423 = !{ptr @.str.88, !417, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_ack, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_ack", i1 false, i1 false}
!425 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_ack, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_ack", i1 false, i1 false}
!426 = !{ptr @.str.89, !417, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_hard, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_hard", i1 false, i1 false}
!428 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_hard, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_hard", i1 false, i1 false}
!429 = !{ptr @.str.90, !417, !"<string literal>", i1 false, i1 false}
!430 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_idle, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_idle", i1 false, i1 false}
!431 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_idle, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_idle", i1 false, i1 false}
!432 = !{ptr @.str.91, !417, !"<string literal>", i1 false, i1 false}
!433 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_keepalive, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_keepalive", i1 false, i1 false}
!434 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_keepalive, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_keepalive", i1 false, i1 false}
!435 = !{ptr @.str.92, !417, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_lost_ack, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_lost_ack", i1 false, i1 false}
!437 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_lost_ack, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_lost_ack", i1 false, i1 false}
!438 = !{ptr @.str.93, !417, !"<string literal>", i1 false, i1 false}
!439 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_normal, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_normal", i1 false, i1 false}
!440 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_normal, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_normal", i1 false, i1 false}
!441 = !{ptr @.str.94, !417, !"<string literal>", i1 false, i1 false}
!442 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_ping, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_ping", i1 false, i1 false}
!443 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_ping, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_ping", i1 false, i1 false}
!444 = !{ptr @.str.95, !417, !"<string literal>", i1 false, i1 false}
!445 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_exp_resend, !417, !"__TRACE_SYSTEM_rxrpc_timer_exp_resend", i1 false, i1 false}
!446 = !{ptr @TRACE_SYSTEM_rxrpc_timer_exp_resend, !417, !"TRACE_SYSTEM_rxrpc_timer_exp_resend", i1 false, i1 false}
!447 = !{ptr @.str.96, !417, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_init_for_reply, !417, !"__TRACE_SYSTEM_rxrpc_timer_init_for_reply", i1 false, i1 false}
!449 = !{ptr @TRACE_SYSTEM_rxrpc_timer_init_for_reply, !417, !"TRACE_SYSTEM_rxrpc_timer_init_for_reply", i1 false, i1 false}
!450 = !{ptr @.str.97, !417, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_init_for_send_reply, !417, !"__TRACE_SYSTEM_rxrpc_timer_init_for_send_reply", i1 false, i1 false}
!452 = !{ptr @TRACE_SYSTEM_rxrpc_timer_init_for_send_reply, !417, !"TRACE_SYSTEM_rxrpc_timer_init_for_send_reply", i1 false, i1 false}
!453 = !{ptr @.str.98, !417, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_restart, !417, !"__TRACE_SYSTEM_rxrpc_timer_restart", i1 false, i1 false}
!455 = !{ptr @TRACE_SYSTEM_rxrpc_timer_restart, !417, !"TRACE_SYSTEM_rxrpc_timer_restart", i1 false, i1 false}
!456 = !{ptr @.str.99, !417, !"<string literal>", i1 false, i1 false}
!457 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_ack, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_ack", i1 false, i1 false}
!458 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_ack, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_ack", i1 false, i1 false}
!459 = !{ptr @.str.100, !417, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_hard, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_hard", i1 false, i1 false}
!461 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_hard, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_hard", i1 false, i1 false}
!462 = !{ptr @.str.101, !417, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_idle, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_idle", i1 false, i1 false}
!464 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_idle, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_idle", i1 false, i1 false}
!465 = !{ptr @.str.102, !417, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_keepalive, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_keepalive", i1 false, i1 false}
!467 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_keepalive, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_keepalive", i1 false, i1 false}
!468 = !{ptr @.str.103, !417, !"<string literal>", i1 false, i1 false}
!469 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack", i1 false, i1 false}
!470 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_lost_ack", i1 false, i1 false}
!471 = !{ptr @.str.104, !417, !"<string literal>", i1 false, i1 false}
!472 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_normal, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_normal", i1 false, i1 false}
!473 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_normal, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_normal", i1 false, i1 false}
!474 = !{ptr @.str.105, !417, !"<string literal>", i1 false, i1 false}
!475 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_ping, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_ping", i1 false, i1 false}
!476 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_ping, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_ping", i1 false, i1 false}
!477 = !{ptr @.str.106, !417, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_resend, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_resend", i1 false, i1 false}
!479 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_resend, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_resend", i1 false, i1 false}
!480 = !{ptr @.str.107, !417, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @__TRACE_SYSTEM_rxrpc_timer_set_for_send, !417, !"__TRACE_SYSTEM_rxrpc_timer_set_for_send", i1 false, i1 false}
!482 = !{ptr @TRACE_SYSTEM_rxrpc_timer_set_for_send, !417, !"TRACE_SYSTEM_rxrpc_timer_set_for_send", i1 false, i1 false}
!483 = !{ptr @.str.108, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../include/trace/events/rxrpc.h", i32 467, i32 1}
!485 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end", i1 false, i1 false}
!486 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_client_tx_end", i1 false, i1 false}
!487 = !{ptr @.str.109, !484, !"<string literal>", i1 false, i1 false}
!488 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_input_data, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_input_data", i1 false, i1 false}
!489 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_input_data, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_input_data", i1 false, i1 false}
!490 = !{ptr @.str.110, !484, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life", i1 false, i1 false}
!492 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_ping_for_check_life", i1 false, i1 false}
!493 = !{ptr @.str.111, !484, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive", i1 false, i1 false}
!495 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_ping_for_keepalive", i1 false, i1 false}
!496 = !{ptr @.str.112, !484, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack", i1 false, i1 false}
!498 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_ack", i1 false, i1 false}
!499 = !{ptr @.str.113, !484, !"<string literal>", i1 false, i1 false}
!500 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply", i1 false, i1 false}
!501 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_ping_for_lost_reply", i1 false, i1 false}
!502 = !{ptr @.str.114, !484, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params", i1 false, i1 false}
!504 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_ping_for_params", i1 false, i1 false}
!505 = !{ptr @.str.115, !484, !"<string literal>", i1 false, i1 false}
!506 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_processing_op, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_processing_op", i1 false, i1 false}
!507 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_processing_op, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_processing_op", i1 false, i1 false}
!508 = !{ptr @.str.116, !484, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack", i1 false, i1 false}
!510 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ack", i1 false, i1 false}
!511 = !{ptr @.str.117, !484, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping", i1 false, i1 false}
!513 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_respond_to_ping", i1 false, i1 false}
!514 = !{ptr @.str.118, !484, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_retry_tx, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_retry_tx", i1 false, i1 false}
!516 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_retry_tx, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_retry_tx", i1 false, i1 false}
!517 = !{ptr @.str.119, !484, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx", i1 false, i1 false}
!519 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_rotate_rx", i1 false, i1 false}
!520 = !{ptr @.str.120, !484, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack, !484, !"__TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack", i1 false, i1 false}
!522 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack, !484, !"TRACE_SYSTEM_rxrpc_propose_ack_terminal_ack", i1 false, i1 false}
!523 = !{ptr @.str.121, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../include/trace/events/rxrpc.h", i32 468, i32 1}
!525 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_subsume, !524, !"__TRACE_SYSTEM_rxrpc_propose_ack_subsume", i1 false, i1 false}
!526 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_subsume, !524, !"TRACE_SYSTEM_rxrpc_propose_ack_subsume", i1 false, i1 false}
!527 = !{ptr @.str.122, !524, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_update, !524, !"__TRACE_SYSTEM_rxrpc_propose_ack_update", i1 false, i1 false}
!529 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_update, !524, !"TRACE_SYSTEM_rxrpc_propose_ack_update", i1 false, i1 false}
!530 = !{ptr @.str.123, !524, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @__TRACE_SYSTEM_rxrpc_propose_ack_use, !524, !"__TRACE_SYSTEM_rxrpc_propose_ack_use", i1 false, i1 false}
!532 = !{ptr @TRACE_SYSTEM_rxrpc_propose_ack_use, !524, !"TRACE_SYSTEM_rxrpc_propose_ack_use", i1 false, i1 false}
!533 = !{ptr @.str.124, !534, !"<string literal>", i1 false, i1 false}
!534 = !{!"../include/trace/events/rxrpc.h", i32 469, i32 1}
!535 = !{ptr @__TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE, !534, !"__TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE", i1 false, i1 false}
!536 = !{ptr @TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE, !534, !"TRACE_SYSTEM_RXRPC_CALL_CONGEST_AVOIDANCE", i1 false, i1 false}
!537 = !{ptr @.str.125, !534, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @__TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT, !534, !"__TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT", i1 false, i1 false}
!539 = !{ptr @TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT, !534, !"TRACE_SYSTEM_RXRPC_CALL_FAST_RETRANSMIT", i1 false, i1 false}
!540 = !{ptr @.str.126, !534, !"<string literal>", i1 false, i1 false}
!541 = !{ptr @__TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS, !534, !"__TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS", i1 false, i1 false}
!542 = !{ptr @TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS, !534, !"TRACE_SYSTEM_RXRPC_CALL_PACKET_LOSS", i1 false, i1 false}
!543 = !{ptr @.str.127, !534, !"<string literal>", i1 false, i1 false}
!544 = !{ptr @__TRACE_SYSTEM_RXRPC_CALL_SLOW_START, !534, !"__TRACE_SYSTEM_RXRPC_CALL_SLOW_START", i1 false, i1 false}
!545 = !{ptr @TRACE_SYSTEM_RXRPC_CALL_SLOW_START, !534, !"TRACE_SYSTEM_RXRPC_CALL_SLOW_START", i1 false, i1 false}
!546 = !{ptr @.str.128, !547, !"<string literal>", i1 false, i1 false}
!547 = !{!"../include/trace/events/rxrpc.h", i32 470, i32 1}
!548 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_begin_retransmission, !547, !"__TRACE_SYSTEM_rxrpc_cong_begin_retransmission", i1 false, i1 false}
!549 = !{ptr @TRACE_SYSTEM_rxrpc_cong_begin_retransmission, !547, !"TRACE_SYSTEM_rxrpc_cong_begin_retransmission", i1 false, i1 false}
!550 = !{ptr @.str.129, !547, !"<string literal>", i1 false, i1 false}
!551 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_cleared_nacks, !547, !"__TRACE_SYSTEM_rxrpc_cong_cleared_nacks", i1 false, i1 false}
!552 = !{ptr @TRACE_SYSTEM_rxrpc_cong_cleared_nacks, !547, !"TRACE_SYSTEM_rxrpc_cong_cleared_nacks", i1 false, i1 false}
!553 = !{ptr @.str.130, !547, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_new_low_nack, !547, !"__TRACE_SYSTEM_rxrpc_cong_new_low_nack", i1 false, i1 false}
!555 = !{ptr @TRACE_SYSTEM_rxrpc_cong_new_low_nack, !547, !"TRACE_SYSTEM_rxrpc_cong_new_low_nack", i1 false, i1 false}
!556 = !{ptr @.str.131, !547, !"<string literal>", i1 false, i1 false}
!557 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_no_change, !547, !"__TRACE_SYSTEM_rxrpc_cong_no_change", i1 false, i1 false}
!558 = !{ptr @TRACE_SYSTEM_rxrpc_cong_no_change, !547, !"TRACE_SYSTEM_rxrpc_cong_no_change", i1 false, i1 false}
!559 = !{ptr @.str.132, !547, !"<string literal>", i1 false, i1 false}
!560 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_progress, !547, !"__TRACE_SYSTEM_rxrpc_cong_progress", i1 false, i1 false}
!561 = !{ptr @TRACE_SYSTEM_rxrpc_cong_progress, !547, !"TRACE_SYSTEM_rxrpc_cong_progress", i1 false, i1 false}
!562 = !{ptr @.str.133, !547, !"<string literal>", i1 false, i1 false}
!563 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_retransmit_again, !547, !"__TRACE_SYSTEM_rxrpc_cong_retransmit_again", i1 false, i1 false}
!564 = !{ptr @TRACE_SYSTEM_rxrpc_cong_retransmit_again, !547, !"TRACE_SYSTEM_rxrpc_cong_retransmit_again", i1 false, i1 false}
!565 = !{ptr @.str.134, !547, !"<string literal>", i1 false, i1 false}
!566 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_rtt_window_end, !547, !"__TRACE_SYSTEM_rxrpc_cong_rtt_window_end", i1 false, i1 false}
!567 = !{ptr @TRACE_SYSTEM_rxrpc_cong_rtt_window_end, !547, !"TRACE_SYSTEM_rxrpc_cong_rtt_window_end", i1 false, i1 false}
!568 = !{ptr @.str.135, !547, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @__TRACE_SYSTEM_rxrpc_cong_saw_nack, !547, !"__TRACE_SYSTEM_rxrpc_cong_saw_nack", i1 false, i1 false}
!570 = !{ptr @TRACE_SYSTEM_rxrpc_cong_saw_nack, !547, !"TRACE_SYSTEM_rxrpc_cong_saw_nack", i1 false, i1 false}
!571 = !{ptr @.str.136, !572, !"<string literal>", i1 false, i1 false}
!572 = !{!"../include/trace/events/rxrpc.h", i32 471, i32 1}
!573 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_abort, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_call_abort", i1 false, i1 false}
!574 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_call_abort, !572, !"TRACE_SYSTEM_rxrpc_tx_point_call_abort", i1 false, i1 false}
!575 = !{ptr @.str.137, !572, !"<string literal>", i1 false, i1 false}
!576 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_ack, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_call_ack", i1 false, i1 false}
!577 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_call_ack, !572, !"TRACE_SYSTEM_rxrpc_tx_point_call_ack", i1 false, i1 false}
!578 = !{ptr @.str.138, !572, !"<string literal>", i1 false, i1 false}
!579 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_data_frag, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_call_data_frag", i1 false, i1 false}
!580 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_call_data_frag, !572, !"TRACE_SYSTEM_rxrpc_tx_point_call_data_frag", i1 false, i1 false}
!581 = !{ptr @.str.139, !572, !"<string literal>", i1 false, i1 false}
!582 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag", i1 false, i1 false}
!583 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag, !572, !"TRACE_SYSTEM_rxrpc_tx_point_call_data_nofrag", i1 false, i1 false}
!584 = !{ptr @.str.140, !572, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_call_final_resend, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_call_final_resend", i1 false, i1 false}
!586 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_call_final_resend, !572, !"TRACE_SYSTEM_rxrpc_tx_point_call_final_resend", i1 false, i1 false}
!587 = !{ptr @.str.141, !572, !"<string literal>", i1 false, i1 false}
!588 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_conn_abort, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_conn_abort", i1 false, i1 false}
!589 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_conn_abort, !572, !"TRACE_SYSTEM_rxrpc_tx_point_conn_abort", i1 false, i1 false}
!590 = !{ptr @.str.142, !572, !"<string literal>", i1 false, i1 false}
!591 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_reject, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_reject", i1 false, i1 false}
!592 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_reject, !572, !"TRACE_SYSTEM_rxrpc_tx_point_reject", i1 false, i1 false}
!593 = !{ptr @.str.143, !572, !"<string literal>", i1 false, i1 false}
!594 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge", i1 false, i1 false}
!595 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge, !572, !"TRACE_SYSTEM_rxrpc_tx_point_rxkad_challenge", i1 false, i1 false}
!596 = !{ptr @.str.144, !572, !"<string literal>", i1 false, i1 false}
!597 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_rxkad_response, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_rxkad_response", i1 false, i1 false}
!598 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_rxkad_response, !572, !"TRACE_SYSTEM_rxrpc_tx_point_rxkad_response", i1 false, i1 false}
!599 = !{ptr @.str.145, !572, !"<string literal>", i1 false, i1 false}
!600 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_version_keepalive, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_version_keepalive", i1 false, i1 false}
!601 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_version_keepalive, !572, !"TRACE_SYSTEM_rxrpc_tx_point_version_keepalive", i1 false, i1 false}
!602 = !{ptr @.str.146, !572, !"<string literal>", i1 false, i1 false}
!603 = !{ptr @__TRACE_SYSTEM_rxrpc_tx_point_version_reply, !572, !"__TRACE_SYSTEM_rxrpc_tx_point_version_reply", i1 false, i1 false}
!604 = !{ptr @TRACE_SYSTEM_rxrpc_tx_point_version_reply, !572, !"TRACE_SYSTEM_rxrpc_tx_point_version_reply", i1 false, i1 false}
!605 = !{ptr @event_class_rxrpc_local, !1, !"event_class_rxrpc_local", i1 false, i1 false}
!606 = !{ptr @event_rxrpc_local, !1, !"event_rxrpc_local", i1 false, i1 false}
!607 = !{ptr @__event_rxrpc_local, !1, !"__event_rxrpc_local", i1 false, i1 false}
!608 = !{ptr @event_class_rxrpc_peer, !5, !"event_class_rxrpc_peer", i1 false, i1 false}
!609 = !{ptr @event_rxrpc_peer, !5, !"event_rxrpc_peer", i1 false, i1 false}
!610 = !{ptr @__event_rxrpc_peer, !5, !"__event_rxrpc_peer", i1 false, i1 false}
!611 = !{ptr @event_class_rxrpc_conn, !9, !"event_class_rxrpc_conn", i1 false, i1 false}
!612 = !{ptr @event_rxrpc_conn, !9, !"event_rxrpc_conn", i1 false, i1 false}
!613 = !{ptr @__event_rxrpc_conn, !9, !"__event_rxrpc_conn", i1 false, i1 false}
!614 = !{ptr @event_class_rxrpc_client, !13, !"event_class_rxrpc_client", i1 false, i1 false}
!615 = !{ptr @event_rxrpc_client, !13, !"event_rxrpc_client", i1 false, i1 false}
!616 = !{ptr @__event_rxrpc_client, !13, !"__event_rxrpc_client", i1 false, i1 false}
!617 = !{ptr @event_class_rxrpc_call, !17, !"event_class_rxrpc_call", i1 false, i1 false}
!618 = !{ptr @event_rxrpc_call, !17, !"event_rxrpc_call", i1 false, i1 false}
!619 = !{ptr @__event_rxrpc_call, !17, !"__event_rxrpc_call", i1 false, i1 false}
!620 = !{ptr @event_class_rxrpc_skb, !21, !"event_class_rxrpc_skb", i1 false, i1 false}
!621 = !{ptr @event_rxrpc_skb, !21, !"event_rxrpc_skb", i1 false, i1 false}
!622 = !{ptr @__event_rxrpc_skb, !21, !"__event_rxrpc_skb", i1 false, i1 false}
!623 = !{ptr @event_class_rxrpc_rx_packet, !25, !"event_class_rxrpc_rx_packet", i1 false, i1 false}
!624 = !{ptr @event_rxrpc_rx_packet, !25, !"event_rxrpc_rx_packet", i1 false, i1 false}
!625 = !{ptr @__event_rxrpc_rx_packet, !25, !"__event_rxrpc_rx_packet", i1 false, i1 false}
!626 = !{ptr @event_class_rxrpc_rx_done, !29, !"event_class_rxrpc_rx_done", i1 false, i1 false}
!627 = !{ptr @event_rxrpc_rx_done, !29, !"event_rxrpc_rx_done", i1 false, i1 false}
!628 = !{ptr @__event_rxrpc_rx_done, !29, !"__event_rxrpc_rx_done", i1 false, i1 false}
!629 = !{ptr @event_class_rxrpc_abort, !33, !"event_class_rxrpc_abort", i1 false, i1 false}
!630 = !{ptr @event_rxrpc_abort, !33, !"event_rxrpc_abort", i1 false, i1 false}
!631 = !{ptr @__event_rxrpc_abort, !33, !"__event_rxrpc_abort", i1 false, i1 false}
!632 = !{ptr @event_class_rxrpc_call_complete, !37, !"event_class_rxrpc_call_complete", i1 false, i1 false}
!633 = !{ptr @event_rxrpc_call_complete, !37, !"event_rxrpc_call_complete", i1 false, i1 false}
!634 = !{ptr @__event_rxrpc_call_complete, !37, !"__event_rxrpc_call_complete", i1 false, i1 false}
!635 = !{ptr @event_class_rxrpc_transmit, !41, !"event_class_rxrpc_transmit", i1 false, i1 false}
!636 = !{ptr @event_rxrpc_transmit, !41, !"event_rxrpc_transmit", i1 false, i1 false}
!637 = !{ptr @__event_rxrpc_transmit, !41, !"__event_rxrpc_transmit", i1 false, i1 false}
!638 = !{ptr @event_class_rxrpc_rx_data, !45, !"event_class_rxrpc_rx_data", i1 false, i1 false}
!639 = !{ptr @event_rxrpc_rx_data, !45, !"event_rxrpc_rx_data", i1 false, i1 false}
!640 = !{ptr @__event_rxrpc_rx_data, !45, !"__event_rxrpc_rx_data", i1 false, i1 false}
!641 = !{ptr @event_class_rxrpc_rx_ack, !49, !"event_class_rxrpc_rx_ack", i1 false, i1 false}
!642 = !{ptr @event_rxrpc_rx_ack, !49, !"event_rxrpc_rx_ack", i1 false, i1 false}
!643 = !{ptr @__event_rxrpc_rx_ack, !49, !"__event_rxrpc_rx_ack", i1 false, i1 false}
!644 = !{ptr @event_class_rxrpc_rx_abort, !53, !"event_class_rxrpc_rx_abort", i1 false, i1 false}
!645 = !{ptr @event_rxrpc_rx_abort, !53, !"event_rxrpc_rx_abort", i1 false, i1 false}
!646 = !{ptr @__event_rxrpc_rx_abort, !53, !"__event_rxrpc_rx_abort", i1 false, i1 false}
!647 = !{ptr @event_class_rxrpc_rx_rwind_change, !57, !"event_class_rxrpc_rx_rwind_change", i1 false, i1 false}
!648 = !{ptr @event_rxrpc_rx_rwind_change, !57, !"event_rxrpc_rx_rwind_change", i1 false, i1 false}
!649 = !{ptr @__event_rxrpc_rx_rwind_change, !57, !"__event_rxrpc_rx_rwind_change", i1 false, i1 false}
!650 = !{ptr @event_class_rxrpc_tx_packet, !61, !"event_class_rxrpc_tx_packet", i1 false, i1 false}
!651 = !{ptr @event_rxrpc_tx_packet, !61, !"event_rxrpc_tx_packet", i1 false, i1 false}
!652 = !{ptr @__event_rxrpc_tx_packet, !61, !"__event_rxrpc_tx_packet", i1 false, i1 false}
!653 = !{ptr @event_class_rxrpc_tx_data, !65, !"event_class_rxrpc_tx_data", i1 false, i1 false}
!654 = !{ptr @event_rxrpc_tx_data, !65, !"event_rxrpc_tx_data", i1 false, i1 false}
!655 = !{ptr @__event_rxrpc_tx_data, !65, !"__event_rxrpc_tx_data", i1 false, i1 false}
!656 = !{ptr @event_class_rxrpc_tx_ack, !69, !"event_class_rxrpc_tx_ack", i1 false, i1 false}
!657 = !{ptr @event_rxrpc_tx_ack, !69, !"event_rxrpc_tx_ack", i1 false, i1 false}
!658 = !{ptr @__event_rxrpc_tx_ack, !69, !"__event_rxrpc_tx_ack", i1 false, i1 false}
!659 = !{ptr @event_class_rxrpc_receive, !73, !"event_class_rxrpc_receive", i1 false, i1 false}
!660 = !{ptr @event_rxrpc_receive, !73, !"event_rxrpc_receive", i1 false, i1 false}
!661 = !{ptr @__event_rxrpc_receive, !73, !"__event_rxrpc_receive", i1 false, i1 false}
!662 = !{ptr @event_class_rxrpc_recvmsg, !77, !"event_class_rxrpc_recvmsg", i1 false, i1 false}
!663 = !{ptr @event_rxrpc_recvmsg, !77, !"event_rxrpc_recvmsg", i1 false, i1 false}
!664 = !{ptr @__event_rxrpc_recvmsg, !77, !"__event_rxrpc_recvmsg", i1 false, i1 false}
!665 = !{ptr @event_class_rxrpc_rtt_tx, !81, !"event_class_rxrpc_rtt_tx", i1 false, i1 false}
!666 = !{ptr @event_rxrpc_rtt_tx, !81, !"event_rxrpc_rtt_tx", i1 false, i1 false}
!667 = !{ptr @__event_rxrpc_rtt_tx, !81, !"__event_rxrpc_rtt_tx", i1 false, i1 false}
!668 = !{ptr @event_class_rxrpc_rtt_rx, !85, !"event_class_rxrpc_rtt_rx", i1 false, i1 false}
!669 = !{ptr @event_rxrpc_rtt_rx, !85, !"event_rxrpc_rtt_rx", i1 false, i1 false}
!670 = !{ptr @__event_rxrpc_rtt_rx, !85, !"__event_rxrpc_rtt_rx", i1 false, i1 false}
!671 = !{ptr @event_class_rxrpc_timer, !89, !"event_class_rxrpc_timer", i1 false, i1 false}
!672 = !{ptr @event_rxrpc_timer, !89, !"event_rxrpc_timer", i1 false, i1 false}
!673 = !{ptr @__event_rxrpc_timer, !89, !"__event_rxrpc_timer", i1 false, i1 false}
!674 = !{ptr @event_class_rxrpc_rx_lose, !93, !"event_class_rxrpc_rx_lose", i1 false, i1 false}
!675 = !{ptr @event_rxrpc_rx_lose, !93, !"event_rxrpc_rx_lose", i1 false, i1 false}
!676 = !{ptr @__event_rxrpc_rx_lose, !93, !"__event_rxrpc_rx_lose", i1 false, i1 false}
!677 = !{ptr @event_class_rxrpc_propose_ack, !97, !"event_class_rxrpc_propose_ack", i1 false, i1 false}
!678 = !{ptr @event_rxrpc_propose_ack, !97, !"event_rxrpc_propose_ack", i1 false, i1 false}
!679 = !{ptr @__event_rxrpc_propose_ack, !97, !"__event_rxrpc_propose_ack", i1 false, i1 false}
!680 = !{ptr @event_class_rxrpc_retransmit, !101, !"event_class_rxrpc_retransmit", i1 false, i1 false}
!681 = !{ptr @event_rxrpc_retransmit, !101, !"event_rxrpc_retransmit", i1 false, i1 false}
!682 = !{ptr @__event_rxrpc_retransmit, !101, !"__event_rxrpc_retransmit", i1 false, i1 false}
!683 = !{ptr @event_class_rxrpc_congest, !105, !"event_class_rxrpc_congest", i1 false, i1 false}
!684 = !{ptr @event_rxrpc_congest, !105, !"event_rxrpc_congest", i1 false, i1 false}
!685 = !{ptr @__event_rxrpc_congest, !105, !"__event_rxrpc_congest", i1 false, i1 false}
!686 = !{ptr @event_class_rxrpc_disconnect_call, !109, !"event_class_rxrpc_disconnect_call", i1 false, i1 false}
!687 = !{ptr @event_rxrpc_disconnect_call, !109, !"event_rxrpc_disconnect_call", i1 false, i1 false}
!688 = !{ptr @__event_rxrpc_disconnect_call, !109, !"__event_rxrpc_disconnect_call", i1 false, i1 false}
!689 = !{ptr @event_class_rxrpc_improper_term, !113, !"event_class_rxrpc_improper_term", i1 false, i1 false}
!690 = !{ptr @event_rxrpc_improper_term, !113, !"event_rxrpc_improper_term", i1 false, i1 false}
!691 = !{ptr @__event_rxrpc_improper_term, !113, !"__event_rxrpc_improper_term", i1 false, i1 false}
!692 = !{ptr @event_class_rxrpc_rx_eproto, !117, !"event_class_rxrpc_rx_eproto", i1 false, i1 false}
!693 = !{ptr @event_rxrpc_rx_eproto, !117, !"event_rxrpc_rx_eproto", i1 false, i1 false}
!694 = !{ptr @__event_rxrpc_rx_eproto, !117, !"__event_rxrpc_rx_eproto", i1 false, i1 false}
!695 = !{ptr @event_class_rxrpc_connect_call, !121, !"event_class_rxrpc_connect_call", i1 false, i1 false}
!696 = !{ptr @event_rxrpc_connect_call, !121, !"event_rxrpc_connect_call", i1 false, i1 false}
!697 = !{ptr @__event_rxrpc_connect_call, !121, !"__event_rxrpc_connect_call", i1 false, i1 false}
!698 = !{ptr @event_class_rxrpc_resend, !125, !"event_class_rxrpc_resend", i1 false, i1 false}
!699 = !{ptr @event_rxrpc_resend, !125, !"event_rxrpc_resend", i1 false, i1 false}
!700 = !{ptr @__event_rxrpc_resend, !125, !"__event_rxrpc_resend", i1 false, i1 false}
!701 = !{ptr @event_class_rxrpc_rx_icmp, !129, !"event_class_rxrpc_rx_icmp", i1 false, i1 false}
!702 = !{ptr @event_rxrpc_rx_icmp, !129, !"event_rxrpc_rx_icmp", i1 false, i1 false}
!703 = !{ptr @__event_rxrpc_rx_icmp, !129, !"__event_rxrpc_rx_icmp", i1 false, i1 false}
!704 = !{ptr @event_class_rxrpc_tx_fail, !133, !"event_class_rxrpc_tx_fail", i1 false, i1 false}
!705 = !{ptr @event_rxrpc_tx_fail, !133, !"event_rxrpc_tx_fail", i1 false, i1 false}
!706 = !{ptr @__event_rxrpc_tx_fail, !133, !"__event_rxrpc_tx_fail", i1 false, i1 false}
!707 = !{ptr @event_class_rxrpc_call_reset, !137, !"event_class_rxrpc_call_reset", i1 false, i1 false}
!708 = !{ptr @event_rxrpc_call_reset, !137, !"event_rxrpc_call_reset", i1 false, i1 false}
!709 = !{ptr @__event_rxrpc_call_reset, !137, !"__event_rxrpc_call_reset", i1 false, i1 false}
!710 = !{ptr @event_class_rxrpc_notify_socket, !141, !"event_class_rxrpc_notify_socket", i1 false, i1 false}
!711 = !{ptr @event_rxrpc_notify_socket, !141, !"event_rxrpc_notify_socket", i1 false, i1 false}
!712 = !{ptr @__event_rxrpc_notify_socket, !141, !"__event_rxrpc_notify_socket", i1 false, i1 false}
!713 = !{ptr @event_class_rxrpc_rx_discard_ack, !145, !"event_class_rxrpc_rx_discard_ack", i1 false, i1 false}
!714 = !{ptr @event_rxrpc_rx_discard_ack, !145, !"event_rxrpc_rx_discard_ack", i1 false, i1 false}
!715 = !{ptr @__event_rxrpc_rx_discard_ack, !145, !"__event_rxrpc_rx_discard_ack", i1 false, i1 false}
!716 = !{ptr @__bpf_trace_tp_map_rxrpc_local, !1, !"__bpf_trace_tp_map_rxrpc_local", i1 false, i1 false}
!717 = !{ptr @__bpf_trace_tp_map_rxrpc_peer, !5, !"__bpf_trace_tp_map_rxrpc_peer", i1 false, i1 false}
!718 = !{ptr @__bpf_trace_tp_map_rxrpc_conn, !9, !"__bpf_trace_tp_map_rxrpc_conn", i1 false, i1 false}
!719 = !{ptr @__bpf_trace_tp_map_rxrpc_client, !13, !"__bpf_trace_tp_map_rxrpc_client", i1 false, i1 false}
!720 = !{ptr @__bpf_trace_tp_map_rxrpc_call, !17, !"__bpf_trace_tp_map_rxrpc_call", i1 false, i1 false}
!721 = !{ptr @__bpf_trace_tp_map_rxrpc_skb, !21, !"__bpf_trace_tp_map_rxrpc_skb", i1 false, i1 false}
!722 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_packet, !25, !"__bpf_trace_tp_map_rxrpc_rx_packet", i1 false, i1 false}
!723 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_done, !29, !"__bpf_trace_tp_map_rxrpc_rx_done", i1 false, i1 false}
!724 = !{ptr @__bpf_trace_tp_map_rxrpc_abort, !33, !"__bpf_trace_tp_map_rxrpc_abort", i1 false, i1 false}
!725 = !{ptr @__bpf_trace_tp_map_rxrpc_call_complete, !37, !"__bpf_trace_tp_map_rxrpc_call_complete", i1 false, i1 false}
!726 = !{ptr @__bpf_trace_tp_map_rxrpc_transmit, !41, !"__bpf_trace_tp_map_rxrpc_transmit", i1 false, i1 false}
!727 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_data, !45, !"__bpf_trace_tp_map_rxrpc_rx_data", i1 false, i1 false}
!728 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_ack, !49, !"__bpf_trace_tp_map_rxrpc_rx_ack", i1 false, i1 false}
!729 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_abort, !53, !"__bpf_trace_tp_map_rxrpc_rx_abort", i1 false, i1 false}
!730 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_rwind_change, !57, !"__bpf_trace_tp_map_rxrpc_rx_rwind_change", i1 false, i1 false}
!731 = !{ptr @__bpf_trace_tp_map_rxrpc_tx_packet, !61, !"__bpf_trace_tp_map_rxrpc_tx_packet", i1 false, i1 false}
!732 = !{ptr @__bpf_trace_tp_map_rxrpc_tx_data, !65, !"__bpf_trace_tp_map_rxrpc_tx_data", i1 false, i1 false}
!733 = !{ptr @__bpf_trace_tp_map_rxrpc_tx_ack, !69, !"__bpf_trace_tp_map_rxrpc_tx_ack", i1 false, i1 false}
!734 = !{ptr @__bpf_trace_tp_map_rxrpc_receive, !73, !"__bpf_trace_tp_map_rxrpc_receive", i1 false, i1 false}
!735 = !{ptr @__bpf_trace_tp_map_rxrpc_recvmsg, !77, !"__bpf_trace_tp_map_rxrpc_recvmsg", i1 false, i1 false}
!736 = !{ptr @__bpf_trace_tp_map_rxrpc_rtt_tx, !81, !"__bpf_trace_tp_map_rxrpc_rtt_tx", i1 false, i1 false}
!737 = !{ptr @__bpf_trace_tp_map_rxrpc_rtt_rx, !85, !"__bpf_trace_tp_map_rxrpc_rtt_rx", i1 false, i1 false}
!738 = !{ptr @__bpf_trace_tp_map_rxrpc_timer, !89, !"__bpf_trace_tp_map_rxrpc_timer", i1 false, i1 false}
!739 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_lose, !93, !"__bpf_trace_tp_map_rxrpc_rx_lose", i1 false, i1 false}
!740 = !{ptr @__bpf_trace_tp_map_rxrpc_propose_ack, !97, !"__bpf_trace_tp_map_rxrpc_propose_ack", i1 false, i1 false}
!741 = !{ptr @__bpf_trace_tp_map_rxrpc_retransmit, !101, !"__bpf_trace_tp_map_rxrpc_retransmit", i1 false, i1 false}
!742 = !{ptr @__bpf_trace_tp_map_rxrpc_congest, !105, !"__bpf_trace_tp_map_rxrpc_congest", i1 false, i1 false}
!743 = !{ptr @__bpf_trace_tp_map_rxrpc_disconnect_call, !109, !"__bpf_trace_tp_map_rxrpc_disconnect_call", i1 false, i1 false}
!744 = !{ptr @__bpf_trace_tp_map_rxrpc_improper_term, !113, !"__bpf_trace_tp_map_rxrpc_improper_term", i1 false, i1 false}
!745 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_eproto, !117, !"__bpf_trace_tp_map_rxrpc_rx_eproto", i1 false, i1 false}
!746 = !{ptr @__bpf_trace_tp_map_rxrpc_connect_call, !121, !"__bpf_trace_tp_map_rxrpc_connect_call", i1 false, i1 false}
!747 = !{ptr @__bpf_trace_tp_map_rxrpc_resend, !125, !"__bpf_trace_tp_map_rxrpc_resend", i1 false, i1 false}
!748 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_icmp, !129, !"__bpf_trace_tp_map_rxrpc_rx_icmp", i1 false, i1 false}
!749 = !{ptr @__bpf_trace_tp_map_rxrpc_tx_fail, !133, !"__bpf_trace_tp_map_rxrpc_tx_fail", i1 false, i1 false}
!750 = !{ptr @__bpf_trace_tp_map_rxrpc_call_reset, !137, !"__bpf_trace_tp_map_rxrpc_call_reset", i1 false, i1 false}
!751 = !{ptr @__bpf_trace_tp_map_rxrpc_notify_socket, !141, !"__bpf_trace_tp_map_rxrpc_notify_socket", i1 false, i1 false}
!752 = !{ptr @__bpf_trace_tp_map_rxrpc_rx_discard_ack, !145, !"__bpf_trace_tp_map_rxrpc_rx_discard_ack", i1 false, i1 false}
!753 = !{ptr @__UNIQUE_ID_description690, !754, !"__UNIQUE_ID_description690", i1 false, i1 false}
!754 = !{!"../net/rxrpc/af_rxrpc.c", i32 25, i32 1}
!755 = !{ptr @__UNIQUE_ID_author691, !756, !"__UNIQUE_ID_author691", i1 false, i1 false}
!756 = !{!"../net/rxrpc/af_rxrpc.c", i32 26, i32 1}
!757 = !{ptr @__UNIQUE_ID_file692, !758, !"__UNIQUE_ID_file692", i1 false, i1 false}
!758 = !{!"../net/rxrpc/af_rxrpc.c", i32 27, i32 1}
!759 = !{ptr @__UNIQUE_ID_license693, !758, !"__UNIQUE_ID_license693", i1 false, i1 false}
!760 = !{ptr @__UNIQUE_ID_alias694, !761, !"__UNIQUE_ID_alias694", i1 false, i1 false}
!761 = !{!"../net/rxrpc/af_rxrpc.c", i32 28, i32 1}
!762 = !{ptr @__param_debug, !763, !"__param_debug", i1 false, i1 false}
!763 = !{!"../net/rxrpc/af_rxrpc.c", i32 31, i32 1}
!764 = !{ptr @__UNIQUE_ID_debugtype695, !763, !"__UNIQUE_ID_debugtype695", i1 false, i1 false}
!765 = !{ptr @__UNIQUE_ID_debug696, !766, !"__UNIQUE_ID_debug696", i1 false, i1 false}
!766 = !{!"../net/rxrpc/af_rxrpc.c", i32 32, i32 1}
!767 = !{ptr @__ksymtab_rxrpc_debug_id, !768, !"__ksymtab_rxrpc_debug_id", i1 false, i1 false}
!768 = !{!"../net/rxrpc/af_rxrpc.c", i32 39, i32 1}
!769 = !{ptr @.str.147, !770, !"<string literal>", i1 false, i1 false}
!770 = !{!"../net/rxrpc/af_rxrpc.c", i32 297, i32 2}
!771 = !{ptr @.str.148, !770, !"<string literal>", i1 false, i1 false}
!772 = !{ptr @.str.149, !770, !"<string literal>", i1 false, i1 false}
!773 = !{ptr @rxrpc_kernel_begin_call._entry, !770, !"_entry", i1 false, i1 false}
!774 = !{ptr @rxrpc_kernel_begin_call._entry_ptr, !770, !"_entry_ptr", i1 false, i1 false}
!775 = !{ptr @.str.151, !776, !"<string literal>", i1 false, i1 false}
!776 = !{!"../net/rxrpc/af_rxrpc.c", i32 331, i32 2}
!777 = !{ptr @rxrpc_kernel_begin_call._entry.150, !776, !"_entry", i1 false, i1 false}
!778 = !{ptr @rxrpc_kernel_begin_call._entry_ptr.152, !776, !"_entry_ptr", i1 false, i1 false}
!779 = !{ptr @__ksymtab_rxrpc_kernel_begin_call, !780, !"__ksymtab_rxrpc_kernel_begin_call", i1 false, i1 false}
!780 = !{!"../net/rxrpc/af_rxrpc.c", i32 334, i32 1}
!781 = !{ptr @.str.153, !782, !"<string literal>", i1 false, i1 false}
!782 = !{!"../net/rxrpc/af_rxrpc.c", i32 354, i32 2}
!783 = !{ptr @.str.154, !782, !"<string literal>", i1 false, i1 false}
!784 = !{ptr @rxrpc_kernel_end_call._entry, !782, !"_entry", i1 false, i1 false}
!785 = !{ptr @rxrpc_kernel_end_call._entry_ptr, !782, !"_entry_ptr", i1 false, i1 false}
!786 = !{ptr @__ksymtab_rxrpc_kernel_end_call, !787, !"__ksymtab_rxrpc_kernel_end_call", i1 false, i1 false}
!787 = !{!"../net/rxrpc/af_rxrpc.c", i32 369, i32 1}
!788 = !{ptr @__ksymtab_rxrpc_kernel_check_life, !789, !"__ksymtab_rxrpc_kernel_check_life", i1 false, i1 false}
!789 = !{!"../net/rxrpc/af_rxrpc.c", i32 384, i32 1}
!790 = !{ptr @__ksymtab_rxrpc_kernel_get_epoch, !791, !"__ksymtab_rxrpc_kernel_get_epoch", i1 false, i1 false}
!791 = !{!"../net/rxrpc/af_rxrpc.c", i32 398, i32 1}
!792 = !{ptr @__ksymtab_rxrpc_kernel_new_call_notification, !793, !"__ksymtab_rxrpc_kernel_new_call_notification", i1 false, i1 false}
!793 = !{!"../net/rxrpc/af_rxrpc.c", i32 418, i32 1}
!794 = !{ptr @__ksymtab_rxrpc_kernel_set_max_life, !795, !"__ksymtab_rxrpc_kernel_set_max_life", i1 false, i1 false}
!795 = !{!"../net/rxrpc/af_rxrpc.c", i32 443, i32 1}
!796 = !{ptr @__ksymtab_rxrpc_sock_set_min_security_level, !797, !"__ksymtab_rxrpc_sock_set_min_security_level", i1 false, i1 false}
!797 = !{!"../net/rxrpc/af_rxrpc.c", i32 587, i32 1}
!798 = !{ptr @.str.155, !799, !"<string literal>", i1 false, i1 false}
!799 = !{!"../net/rxrpc/af_rxrpc.c", i32 1055, i32 2}
!800 = !{ptr @.str.156, !799, !"<string literal>", i1 false, i1 false}
!801 = !{ptr @af_rxrpc_exit._entry, !799, !"_entry", i1 false, i1 false}
!802 = !{ptr @af_rxrpc_exit._entry_ptr, !799, !"_entry_ptr", i1 false, i1 false}
!803 = !{ptr @.str.158, !804, !"<string literal>", i1 false, i1 false}
!804 = !{!"../net/rxrpc/af_rxrpc.c", i32 1062, i32 2}
!805 = !{ptr @af_rxrpc_exit._entry.157, !804, !"_entry", i1 false, i1 false}
!806 = !{ptr @af_rxrpc_exit._entry_ptr.159, !804, !"_entry_ptr", i1 false, i1 false}
!807 = !{ptr @.str.160, !804, !"<string literal>", i1 false, i1 false}
!808 = !{ptr @af_rxrpc_exit._entry.161, !809, !"_entry", i1 false, i1 false}
!809 = !{!"../net/rxrpc/af_rxrpc.c", i32 1063, i32 2}
!810 = !{ptr @af_rxrpc_exit._entry_ptr.162, !809, !"_entry_ptr", i1 false, i1 false}
!811 = !{ptr @.str.164, !812, !"<string literal>", i1 false, i1 false}
!812 = !{!"../net/rxrpc/af_rxrpc.c", i32 1074, i32 2}
!813 = !{ptr @af_rxrpc_exit._entry.163, !812, !"_entry", i1 false, i1 false}
!814 = !{ptr @af_rxrpc_exit._entry_ptr.165, !812, !"_entry_ptr", i1 false, i1 false}
!815 = !{ptr @__initcall__kmod_rxrpc__712_1077_af_rxrpc_init6, !816, !"__initcall__kmod_rxrpc__712_1077_af_rxrpc_init6", i1 false, i1 false}
!816 = !{!"../net/rxrpc/af_rxrpc.c", i32 1077, i32 1}
!817 = !{ptr @__exitcall_af_rxrpc_exit, !818, !"__exitcall_af_rxrpc_exit", i1 false, i1 false}
!818 = !{!"../net/rxrpc/af_rxrpc.c", i32 1078, i32 1}
!819 = !{ptr @rxrpc_debug, !820, !"rxrpc_debug", i1 false, i1 false}
!820 = !{!"../net/rxrpc/af_rxrpc.c", i32 30, i32 14}
!821 = !{ptr @rxrpc_debug_id, !822, !"rxrpc_debug_id", i1 false, i1 false}
!822 = !{!"../net/rxrpc/af_rxrpc.c", i32 38, i32 10}
!823 = !{ptr @rxrpc_n_tx_skbs, !824, !"rxrpc_n_tx_skbs", i1 false, i1 false}
!824 = !{!"../net/rxrpc/af_rxrpc.c", i32 42, i32 10}
!825 = !{ptr @rxrpc_n_rx_skbs, !826, !"rxrpc_n_rx_skbs", i1 false, i1 false}
!826 = !{!"../net/rxrpc/af_rxrpc.c", i32 42, i32 27}
!827 = !{ptr @rxrpc_workqueue, !828, !"rxrpc_workqueue", i1 false, i1 false}
!828 = !{!"../net/rxrpc/af_rxrpc.c", i32 44, i32 26}
!829 = !{ptr @__tpstrtab_rxrpc_local, !1, !"__tpstrtab_rxrpc_local", i1 false, i1 false}
!830 = !{ptr @__tpstrtab_rxrpc_peer, !5, !"__tpstrtab_rxrpc_peer", i1 false, i1 false}
!831 = !{ptr @__tpstrtab_rxrpc_conn, !9, !"__tpstrtab_rxrpc_conn", i1 false, i1 false}
!832 = !{ptr @__tpstrtab_rxrpc_client, !13, !"__tpstrtab_rxrpc_client", i1 false, i1 false}
!833 = !{ptr @__tpstrtab_rxrpc_call, !17, !"__tpstrtab_rxrpc_call", i1 false, i1 false}
!834 = !{ptr @__tpstrtab_rxrpc_skb, !21, !"__tpstrtab_rxrpc_skb", i1 false, i1 false}
!835 = !{ptr @__tpstrtab_rxrpc_rx_packet, !25, !"__tpstrtab_rxrpc_rx_packet", i1 false, i1 false}
!836 = !{ptr @__tpstrtab_rxrpc_rx_done, !29, !"__tpstrtab_rxrpc_rx_done", i1 false, i1 false}
!837 = !{ptr @__tpstrtab_rxrpc_abort, !33, !"__tpstrtab_rxrpc_abort", i1 false, i1 false}
!838 = !{ptr @__tpstrtab_rxrpc_call_complete, !37, !"__tpstrtab_rxrpc_call_complete", i1 false, i1 false}
!839 = !{ptr @__tpstrtab_rxrpc_transmit, !41, !"__tpstrtab_rxrpc_transmit", i1 false, i1 false}
!840 = !{ptr @__tpstrtab_rxrpc_rx_data, !45, !"__tpstrtab_rxrpc_rx_data", i1 false, i1 false}
!841 = !{ptr @__tpstrtab_rxrpc_rx_ack, !49, !"__tpstrtab_rxrpc_rx_ack", i1 false, i1 false}
!842 = !{ptr @__tpstrtab_rxrpc_rx_abort, !53, !"__tpstrtab_rxrpc_rx_abort", i1 false, i1 false}
!843 = !{ptr @__tpstrtab_rxrpc_rx_rwind_change, !57, !"__tpstrtab_rxrpc_rx_rwind_change", i1 false, i1 false}
!844 = !{ptr @__tpstrtab_rxrpc_tx_packet, !61, !"__tpstrtab_rxrpc_tx_packet", i1 false, i1 false}
!845 = !{ptr @__tpstrtab_rxrpc_tx_data, !65, !"__tpstrtab_rxrpc_tx_data", i1 false, i1 false}
!846 = !{ptr @__tpstrtab_rxrpc_tx_ack, !69, !"__tpstrtab_rxrpc_tx_ack", i1 false, i1 false}
!847 = !{ptr @__tpstrtab_rxrpc_receive, !73, !"__tpstrtab_rxrpc_receive", i1 false, i1 false}
!848 = !{ptr @__tpstrtab_rxrpc_recvmsg, !77, !"__tpstrtab_rxrpc_recvmsg", i1 false, i1 false}
!849 = !{ptr @__tpstrtab_rxrpc_rtt_tx, !81, !"__tpstrtab_rxrpc_rtt_tx", i1 false, i1 false}
!850 = !{ptr @__tpstrtab_rxrpc_rtt_rx, !85, !"__tpstrtab_rxrpc_rtt_rx", i1 false, i1 false}
!851 = !{ptr @__tpstrtab_rxrpc_timer, !89, !"__tpstrtab_rxrpc_timer", i1 false, i1 false}
!852 = !{ptr @__tpstrtab_rxrpc_rx_lose, !93, !"__tpstrtab_rxrpc_rx_lose", i1 false, i1 false}
!853 = !{ptr @__tpstrtab_rxrpc_propose_ack, !97, !"__tpstrtab_rxrpc_propose_ack", i1 false, i1 false}
!854 = !{ptr @__tpstrtab_rxrpc_retransmit, !101, !"__tpstrtab_rxrpc_retransmit", i1 false, i1 false}
!855 = !{ptr @__tpstrtab_rxrpc_congest, !105, !"__tpstrtab_rxrpc_congest", i1 false, i1 false}
!856 = !{ptr @__tpstrtab_rxrpc_disconnect_call, !109, !"__tpstrtab_rxrpc_disconnect_call", i1 false, i1 false}
!857 = !{ptr @__tpstrtab_rxrpc_improper_term, !113, !"__tpstrtab_rxrpc_improper_term", i1 false, i1 false}
!858 = !{ptr @__tpstrtab_rxrpc_rx_eproto, !117, !"__tpstrtab_rxrpc_rx_eproto", i1 false, i1 false}
!859 = !{ptr @__tpstrtab_rxrpc_connect_call, !121, !"__tpstrtab_rxrpc_connect_call", i1 false, i1 false}
!860 = !{ptr @__tpstrtab_rxrpc_resend, !125, !"__tpstrtab_rxrpc_resend", i1 false, i1 false}
!861 = !{ptr @__tpstrtab_rxrpc_rx_icmp, !129, !"__tpstrtab_rxrpc_rx_icmp", i1 false, i1 false}
!862 = !{ptr @__tpstrtab_rxrpc_tx_fail, !133, !"__tpstrtab_rxrpc_tx_fail", i1 false, i1 false}
!863 = !{ptr @__tpstrtab_rxrpc_call_reset, !137, !"__tpstrtab_rxrpc_call_reset", i1 false, i1 false}
!864 = !{ptr @__tpstrtab_rxrpc_notify_socket, !141, !"__tpstrtab_rxrpc_notify_socket", i1 false, i1 false}
!865 = !{ptr @__tpstrtab_rxrpc_rx_discard_ack, !145, !"__tpstrtab_rxrpc_rx_discard_ack", i1 false, i1 false}
!866 = !{ptr @str__rxrpc__trace_system_name, !867, !"str__rxrpc__trace_system_name", i1 false, i1 false}
!867 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!868 = !{ptr @.str.166, !1, !"<string literal>", i1 false, i1 false}
!869 = !{ptr @.str.167, !1, !"<string literal>", i1 false, i1 false}
!870 = !{ptr @.str.168, !1, !"<string literal>", i1 false, i1 false}
!871 = !{ptr @.str.169, !1, !"<string literal>", i1 false, i1 false}
!872 = !{ptr @.str.170, !1, !"<string literal>", i1 false, i1 false}
!873 = !{ptr @.str.171, !1, !"<string literal>", i1 false, i1 false}
!874 = !{ptr @.str.172, !1, !"<string literal>", i1 false, i1 false}
!875 = !{ptr @trace_event_fields_rxrpc_local, !1, !"trace_event_fields_rxrpc_local", i1 false, i1 false}
!876 = !{ptr @trace_event_type_funcs_rxrpc_local, !1, !"trace_event_type_funcs_rxrpc_local", i1 false, i1 false}
!877 = !{ptr @.str.173, !1, !"<string literal>", i1 false, i1 false}
!878 = !{ptr @.str.174, !1, !"<string literal>", i1 false, i1 false}
!879 = !{ptr @.str.175, !1, !"<string literal>", i1 false, i1 false}
!880 = !{ptr @.str.176, !1, !"<string literal>", i1 false, i1 false}
!881 = !{ptr @.str.177, !1, !"<string literal>", i1 false, i1 false}
!882 = !{ptr @.str.178, !1, !"<string literal>", i1 false, i1 false}
!883 = !{ptr @trace_raw_output_rxrpc_local.symbols, !1, !"symbols", i1 false, i1 false}
!884 = !{ptr @print_fmt_rxrpc_local, !1, !"print_fmt_rxrpc_local", i1 false, i1 false}
!885 = !{ptr @.str.179, !5, !"<string literal>", i1 false, i1 false}
!886 = !{ptr @trace_event_fields_rxrpc_peer, !5, !"trace_event_fields_rxrpc_peer", i1 false, i1 false}
!887 = !{ptr @trace_event_type_funcs_rxrpc_peer, !5, !"trace_event_type_funcs_rxrpc_peer", i1 false, i1 false}
!888 = !{ptr @.str.180, !5, !"<string literal>", i1 false, i1 false}
!889 = !{ptr @trace_raw_output_rxrpc_peer.symbols, !5, !"symbols", i1 false, i1 false}
!890 = !{ptr @print_fmt_rxrpc_peer, !5, !"print_fmt_rxrpc_peer", i1 false, i1 false}
!891 = !{ptr @.str.181, !9, !"<string literal>", i1 false, i1 false}
!892 = !{ptr @trace_event_fields_rxrpc_conn, !9, !"trace_event_fields_rxrpc_conn", i1 false, i1 false}
!893 = !{ptr @trace_event_type_funcs_rxrpc_conn, !9, !"trace_event_type_funcs_rxrpc_conn", i1 false, i1 false}
!894 = !{ptr @.str.182, !9, !"<string literal>", i1 false, i1 false}
!895 = !{ptr @.str.183, !9, !"<string literal>", i1 false, i1 false}
!896 = !{ptr @.str.184, !9, !"<string literal>", i1 false, i1 false}
!897 = !{ptr @.str.185, !9, !"<string literal>", i1 false, i1 false}
!898 = !{ptr @.str.186, !9, !"<string literal>", i1 false, i1 false}
!899 = !{ptr @.str.187, !9, !"<string literal>", i1 false, i1 false}
!900 = !{ptr @.str.188, !9, !"<string literal>", i1 false, i1 false}
!901 = !{ptr @trace_raw_output_rxrpc_conn.symbols, !9, !"symbols", i1 false, i1 false}
!902 = !{ptr @print_fmt_rxrpc_conn, !9, !"print_fmt_rxrpc_conn", i1 false, i1 false}
!903 = !{ptr @.str.189, !13, !"<string literal>", i1 false, i1 false}
!904 = !{ptr @.str.190, !13, !"<string literal>", i1 false, i1 false}
!905 = !{ptr @.str.191, !13, !"<string literal>", i1 false, i1 false}
!906 = !{ptr @.str.192, !13, !"<string literal>", i1 false, i1 false}
!907 = !{ptr @trace_event_fields_rxrpc_client, !13, !"trace_event_fields_rxrpc_client", i1 false, i1 false}
!908 = !{ptr @trace_event_type_funcs_rxrpc_client, !13, !"trace_event_type_funcs_rxrpc_client", i1 false, i1 false}
!909 = !{ptr @.str.193, !13, !"<string literal>", i1 false, i1 false}
!910 = !{ptr @.str.194, !13, !"<string literal>", i1 false, i1 false}
!911 = !{ptr @.str.195, !13, !"<string literal>", i1 false, i1 false}
!912 = !{ptr @.str.196, !13, !"<string literal>", i1 false, i1 false}
!913 = !{ptr @.str.197, !13, !"<string literal>", i1 false, i1 false}
!914 = !{ptr @.str.198, !13, !"<string literal>", i1 false, i1 false}
!915 = !{ptr @.str.199, !13, !"<string literal>", i1 false, i1 false}
!916 = !{ptr @.str.200, !13, !"<string literal>", i1 false, i1 false}
!917 = !{ptr @.str.201, !13, !"<string literal>", i1 false, i1 false}
!918 = !{ptr @.str.202, !13, !"<string literal>", i1 false, i1 false}
!919 = !{ptr @.str.203, !13, !"<string literal>", i1 false, i1 false}
!920 = !{ptr @.str.204, !13, !"<string literal>", i1 false, i1 false}
!921 = !{ptr @.str.205, !13, !"<string literal>", i1 false, i1 false}
!922 = !{ptr @.str.206, !13, !"<string literal>", i1 false, i1 false}
!923 = !{ptr @trace_raw_output_rxrpc_client.symbols, !13, !"symbols", i1 false, i1 false}
!924 = !{ptr @print_fmt_rxrpc_client, !13, !"print_fmt_rxrpc_client", i1 false, i1 false}
!925 = !{ptr @.str.207, !17, !"<string literal>", i1 false, i1 false}
!926 = !{ptr @.str.208, !17, !"<string literal>", i1 false, i1 false}
!927 = !{ptr @trace_event_fields_rxrpc_call, !17, !"trace_event_fields_rxrpc_call", i1 false, i1 false}
!928 = !{ptr @trace_event_type_funcs_rxrpc_call, !17, !"trace_event_type_funcs_rxrpc_call", i1 false, i1 false}
!929 = !{ptr @.str.209, !17, !"<string literal>", i1 false, i1 false}
!930 = !{ptr @.str.210, !17, !"<string literal>", i1 false, i1 false}
!931 = !{ptr @.str.211, !17, !"<string literal>", i1 false, i1 false}
!932 = !{ptr @.str.212, !17, !"<string literal>", i1 false, i1 false}
!933 = !{ptr @.str.213, !17, !"<string literal>", i1 false, i1 false}
!934 = !{ptr @.str.214, !17, !"<string literal>", i1 false, i1 false}
!935 = !{ptr @.str.215, !17, !"<string literal>", i1 false, i1 false}
!936 = !{ptr @.str.216, !17, !"<string literal>", i1 false, i1 false}
!937 = !{ptr @.str.217, !17, !"<string literal>", i1 false, i1 false}
!938 = !{ptr @.str.218, !17, !"<string literal>", i1 false, i1 false}
!939 = !{ptr @trace_raw_output_rxrpc_call.symbols, !17, !"symbols", i1 false, i1 false}
!940 = !{ptr @print_fmt_rxrpc_call, !17, !"print_fmt_rxrpc_call", i1 false, i1 false}
!941 = !{ptr @.str.219, !21, !"<string literal>", i1 false, i1 false}
!942 = !{ptr @.str.220, !21, !"<string literal>", i1 false, i1 false}
!943 = !{ptr @.str.221, !21, !"<string literal>", i1 false, i1 false}
!944 = !{ptr @.str.222, !21, !"<string literal>", i1 false, i1 false}
!945 = !{ptr @.str.223, !21, !"<string literal>", i1 false, i1 false}
!946 = !{ptr @.str.224, !21, !"<string literal>", i1 false, i1 false}
!947 = !{ptr @trace_event_fields_rxrpc_skb, !21, !"trace_event_fields_rxrpc_skb", i1 false, i1 false}
!948 = !{ptr @trace_event_type_funcs_rxrpc_skb, !21, !"trace_event_type_funcs_rxrpc_skb", i1 false, i1 false}
!949 = !{ptr @.str.225, !21, !"<string literal>", i1 false, i1 false}
!950 = !{ptr @.str.226, !21, !"<string literal>", i1 false, i1 false}
!951 = !{ptr @.str.227, !21, !"<string literal>", i1 false, i1 false}
!952 = !{ptr @.str.228, !21, !"<string literal>", i1 false, i1 false}
!953 = !{ptr @.str.229, !21, !"<string literal>", i1 false, i1 false}
!954 = !{ptr @.str.230, !21, !"<string literal>", i1 false, i1 false}
!955 = !{ptr @.str.231, !21, !"<string literal>", i1 false, i1 false}
!956 = !{ptr @.str.232, !21, !"<string literal>", i1 false, i1 false}
!957 = !{ptr @.str.233, !21, !"<string literal>", i1 false, i1 false}
!958 = !{ptr @trace_raw_output_rxrpc_skb.symbols, !21, !"symbols", i1 false, i1 false}
!959 = !{ptr @print_fmt_rxrpc_skb, !21, !"print_fmt_rxrpc_skb", i1 false, i1 false}
!960 = !{ptr @.str.234, !25, !"<string literal>", i1 false, i1 false}
!961 = !{ptr @.str.235, !25, !"<string literal>", i1 false, i1 false}
!962 = !{ptr @trace_event_fields_rxrpc_rx_packet, !25, !"trace_event_fields_rxrpc_rx_packet", i1 false, i1 false}
!963 = !{ptr @trace_event_type_funcs_rxrpc_rx_packet, !25, !"trace_event_type_funcs_rxrpc_rx_packet", i1 false, i1 false}
!964 = !{ptr @.str.236, !25, !"<string literal>", i1 false, i1 false}
!965 = !{ptr @.str.237, !25, !"<string literal>", i1 false, i1 false}
!966 = !{ptr @.str.238, !25, !"<string literal>", i1 false, i1 false}
!967 = !{ptr @.str.239, !25, !"<string literal>", i1 false, i1 false}
!968 = !{ptr @.str.240, !25, !"<string literal>", i1 false, i1 false}
!969 = !{ptr @.str.241, !25, !"<string literal>", i1 false, i1 false}
!970 = !{ptr @.str.242, !25, !"<string literal>", i1 false, i1 false}
!971 = !{ptr @.str.243, !25, !"<string literal>", i1 false, i1 false}
!972 = !{ptr @.str.244, !25, !"<string literal>", i1 false, i1 false}
!973 = !{ptr @.str.245, !25, !"<string literal>", i1 false, i1 false}
!974 = !{ptr @.str.246, !25, !"<string literal>", i1 false, i1 false}
!975 = !{ptr @.str.247, !25, !"<string literal>", i1 false, i1 false}
!976 = !{ptr @.str.248, !25, !"<string literal>", i1 false, i1 false}
!977 = !{ptr @.str.249, !25, !"<string literal>", i1 false, i1 false}
!978 = !{ptr @.str.250, !25, !"<string literal>", i1 false, i1 false}
!979 = !{ptr @.str.251, !25, !"<string literal>", i1 false, i1 false}
!980 = !{ptr @.str.252, !25, !"<string literal>", i1 false, i1 false}
!981 = !{ptr @trace_raw_output_rxrpc_rx_packet.symbols, !25, !"symbols", i1 false, i1 false}
!982 = !{ptr @.str.253, !25, !"<string literal>", i1 false, i1 false}
!983 = !{ptr @print_fmt_rxrpc_rx_packet, !25, !"print_fmt_rxrpc_rx_packet", i1 false, i1 false}
!984 = !{ptr @.str.254, !29, !"<string literal>", i1 false, i1 false}
!985 = !{ptr @.str.255, !29, !"<string literal>", i1 false, i1 false}
!986 = !{ptr @trace_event_fields_rxrpc_rx_done, !29, !"trace_event_fields_rxrpc_rx_done", i1 false, i1 false}
!987 = !{ptr @trace_event_type_funcs_rxrpc_rx_done, !29, !"trace_event_type_funcs_rxrpc_rx_done", i1 false, i1 false}
!988 = !{ptr @.str.256, !29, !"<string literal>", i1 false, i1 false}
!989 = !{ptr @print_fmt_rxrpc_rx_done, !29, !"print_fmt_rxrpc_rx_done", i1 false, i1 false}
!990 = !{ptr @.str.257, !33, !"<string literal>", i1 false, i1 false}
!991 = !{ptr @.str.258, !33, !"<string literal>", i1 false, i1 false}
!992 = !{ptr @.str.259, !33, !"<string literal>", i1 false, i1 false}
!993 = !{ptr @.str.260, !33, !"<string literal>", i1 false, i1 false}
!994 = !{ptr @.str.261, !33, !"<string literal>", i1 false, i1 false}
!995 = !{ptr @.str.262, !33, !"<string literal>", i1 false, i1 false}
!996 = !{ptr @.str.263, !33, !"<string literal>", i1 false, i1 false}
!997 = !{ptr @trace_event_fields_rxrpc_abort, !33, !"trace_event_fields_rxrpc_abort", i1 false, i1 false}
!998 = !{ptr @trace_event_type_funcs_rxrpc_abort, !33, !"trace_event_type_funcs_rxrpc_abort", i1 false, i1 false}
!999 = !{ptr @.str.264, !33, !"<string literal>", i1 false, i1 false}
!1000 = !{ptr @print_fmt_rxrpc_abort, !33, !"print_fmt_rxrpc_abort", i1 false, i1 false}
!1001 = !{ptr @.str.265, !37, !"<string literal>", i1 false, i1 false}
!1002 = !{ptr @.str.266, !37, !"<string literal>", i1 false, i1 false}
!1003 = !{ptr @trace_event_fields_rxrpc_call_complete, !37, !"trace_event_fields_rxrpc_call_complete", i1 false, i1 false}
!1004 = !{ptr @trace_event_type_funcs_rxrpc_call_complete, !37, !"trace_event_type_funcs_rxrpc_call_complete", i1 false, i1 false}
!1005 = !{ptr @.str.267, !37, !"<string literal>", i1 false, i1 false}
!1006 = !{ptr @.str.268, !37, !"<string literal>", i1 false, i1 false}
!1007 = !{ptr @.str.269, !37, !"<string literal>", i1 false, i1 false}
!1008 = !{ptr @.str.270, !37, !"<string literal>", i1 false, i1 false}
!1009 = !{ptr @.str.271, !37, !"<string literal>", i1 false, i1 false}
!1010 = !{ptr @.str.272, !37, !"<string literal>", i1 false, i1 false}
!1011 = !{ptr @trace_raw_output_rxrpc_call_complete.symbols, !37, !"symbols", i1 false, i1 false}
!1012 = !{ptr @print_fmt_rxrpc_call_complete, !37, !"print_fmt_rxrpc_call_complete", i1 false, i1 false}
!1013 = !{ptr @.str.273, !41, !"<string literal>", i1 false, i1 false}
!1014 = !{ptr @.str.274, !41, !"<string literal>", i1 false, i1 false}
!1015 = !{ptr @.str.275, !41, !"<string literal>", i1 false, i1 false}
!1016 = !{ptr @.str.276, !41, !"<string literal>", i1 false, i1 false}
!1017 = !{ptr @trace_event_fields_rxrpc_transmit, !41, !"trace_event_fields_rxrpc_transmit", i1 false, i1 false}
!1018 = !{ptr @trace_event_type_funcs_rxrpc_transmit, !41, !"trace_event_type_funcs_rxrpc_transmit", i1 false, i1 false}
!1019 = !{ptr @.str.277, !41, !"<string literal>", i1 false, i1 false}
!1020 = !{ptr @.str.278, !41, !"<string literal>", i1 false, i1 false}
!1021 = !{ptr @.str.279, !41, !"<string literal>", i1 false, i1 false}
!1022 = !{ptr @.str.280, !41, !"<string literal>", i1 false, i1 false}
!1023 = !{ptr @.str.281, !41, !"<string literal>", i1 false, i1 false}
!1024 = !{ptr @trace_raw_output_rxrpc_transmit.symbols, !41, !"symbols", i1 false, i1 false}
!1025 = !{ptr @print_fmt_rxrpc_transmit, !41, !"print_fmt_rxrpc_transmit", i1 false, i1 false}
!1026 = !{ptr @.str.282, !45, !"<string literal>", i1 false, i1 false}
!1027 = !{ptr @.str.283, !45, !"<string literal>", i1 false, i1 false}
!1028 = !{ptr @.str.284, !45, !"<string literal>", i1 false, i1 false}
!1029 = !{ptr @trace_event_fields_rxrpc_rx_data, !45, !"trace_event_fields_rxrpc_rx_data", i1 false, i1 false}
!1030 = !{ptr @trace_event_type_funcs_rxrpc_rx_data, !45, !"trace_event_type_funcs_rxrpc_rx_data", i1 false, i1 false}
!1031 = !{ptr @.str.285, !45, !"<string literal>", i1 false, i1 false}
!1032 = !{ptr @print_fmt_rxrpc_rx_data, !45, !"print_fmt_rxrpc_rx_data", i1 false, i1 false}
!1033 = !{ptr @.str.286, !49, !"<string literal>", i1 false, i1 false}
!1034 = !{ptr @.str.287, !49, !"<string literal>", i1 false, i1 false}
!1035 = !{ptr @.str.288, !49, !"<string literal>", i1 false, i1 false}
!1036 = !{ptr @.str.289, !49, !"<string literal>", i1 false, i1 false}
!1037 = !{ptr @.str.290, !49, !"<string literal>", i1 false, i1 false}
!1038 = !{ptr @trace_event_fields_rxrpc_rx_ack, !49, !"trace_event_fields_rxrpc_rx_ack", i1 false, i1 false}
!1039 = !{ptr @trace_event_type_funcs_rxrpc_rx_ack, !49, !"trace_event_type_funcs_rxrpc_rx_ack", i1 false, i1 false}
!1040 = !{ptr @.str.291, !49, !"<string literal>", i1 false, i1 false}
!1041 = !{ptr @.str.292, !49, !"<string literal>", i1 false, i1 false}
!1042 = !{ptr @.str.293, !49, !"<string literal>", i1 false, i1 false}
!1043 = !{ptr @.str.294, !49, !"<string literal>", i1 false, i1 false}
!1044 = !{ptr @.str.295, !49, !"<string literal>", i1 false, i1 false}
!1045 = !{ptr @.str.296, !49, !"<string literal>", i1 false, i1 false}
!1046 = !{ptr @.str.297, !49, !"<string literal>", i1 false, i1 false}
!1047 = !{ptr @.str.298, !49, !"<string literal>", i1 false, i1 false}
!1048 = !{ptr @.str.299, !49, !"<string literal>", i1 false, i1 false}
!1049 = !{ptr @.str.300, !49, !"<string literal>", i1 false, i1 false}
!1050 = !{ptr @.str.301, !49, !"<string literal>", i1 false, i1 false}
!1051 = !{ptr @.str.302, !49, !"<string literal>", i1 false, i1 false}
!1052 = !{ptr @trace_raw_output_rxrpc_rx_ack.symbols, !49, !"symbols", i1 false, i1 false}
!1053 = !{ptr @print_fmt_rxrpc_rx_ack, !49, !"print_fmt_rxrpc_rx_ack", i1 false, i1 false}
!1054 = !{ptr @trace_event_fields_rxrpc_rx_abort, !53, !"trace_event_fields_rxrpc_rx_abort", i1 false, i1 false}
!1055 = !{ptr @trace_event_type_funcs_rxrpc_rx_abort, !53, !"trace_event_type_funcs_rxrpc_rx_abort", i1 false, i1 false}
!1056 = !{ptr @.str.303, !53, !"<string literal>", i1 false, i1 false}
!1057 = !{ptr @print_fmt_rxrpc_rx_abort, !53, !"print_fmt_rxrpc_rx_abort", i1 false, i1 false}
!1058 = !{ptr @.str.304, !57, !"<string literal>", i1 false, i1 false}
!1059 = !{ptr @.str.305, !57, !"<string literal>", i1 false, i1 false}
!1060 = !{ptr @.str.306, !57, !"<string literal>", i1 false, i1 false}
!1061 = !{ptr @trace_event_fields_rxrpc_rx_rwind_change, !57, !"trace_event_fields_rxrpc_rx_rwind_change", i1 false, i1 false}
!1062 = !{ptr @trace_event_type_funcs_rxrpc_rx_rwind_change, !57, !"trace_event_type_funcs_rxrpc_rx_rwind_change", i1 false, i1 false}
!1063 = !{ptr @.str.307, !57, !"<string literal>", i1 false, i1 false}
!1064 = !{ptr @.str.308, !57, !"<string literal>", i1 false, i1 false}
!1065 = !{ptr @.str.309, !57, !"<string literal>", i1 false, i1 false}
!1066 = !{ptr @print_fmt_rxrpc_rx_rwind_change, !57, !"print_fmt_rxrpc_rx_rwind_change", i1 false, i1 false}
!1067 = !{ptr @.str.310, !61, !"<string literal>", i1 false, i1 false}
!1068 = !{ptr @.str.311, !61, !"<string literal>", i1 false, i1 false}
!1069 = !{ptr @.str.312, !61, !"<string literal>", i1 false, i1 false}
!1070 = !{ptr @trace_event_fields_rxrpc_tx_packet, !61, !"trace_event_fields_rxrpc_tx_packet", i1 false, i1 false}
!1071 = !{ptr @trace_event_type_funcs_rxrpc_tx_packet, !61, !"trace_event_type_funcs_rxrpc_tx_packet", i1 false, i1 false}
!1072 = !{ptr @.str.313, !61, !"<string literal>", i1 false, i1 false}
!1073 = !{ptr @trace_raw_output_rxrpc_tx_packet.symbols, !61, !"symbols", i1 false, i1 false}
!1074 = !{ptr @.str.315, !61, !"<string literal>", i1 false, i1 false}
!1075 = !{ptr @.str.316, !61, !"<string literal>", i1 false, i1 false}
!1076 = !{ptr @.str.317, !61, !"<string literal>", i1 false, i1 false}
!1077 = !{ptr @.str.318, !61, !"<string literal>", i1 false, i1 false}
!1078 = !{ptr @.str.319, !61, !"<string literal>", i1 false, i1 false}
!1079 = !{ptr @.str.320, !61, !"<string literal>", i1 false, i1 false}
!1080 = !{ptr @.str.321, !61, !"<string literal>", i1 false, i1 false}
!1081 = !{ptr @.str.322, !61, !"<string literal>", i1 false, i1 false}
!1082 = !{ptr @.str.323, !61, !"<string literal>", i1 false, i1 false}
!1083 = !{ptr @.str.324, !61, !"<string literal>", i1 false, i1 false}
!1084 = !{ptr @.str.325, !61, !"<string literal>", i1 false, i1 false}
!1085 = !{ptr @trace_raw_output_rxrpc_tx_packet.symbols.314, !61, !"symbols", i1 false, i1 false}
!1086 = !{ptr @print_fmt_rxrpc_tx_packet, !61, !"print_fmt_rxrpc_tx_packet", i1 false, i1 false}
!1087 = !{ptr @.str.326, !65, !"<string literal>", i1 false, i1 false}
!1088 = !{ptr @.str.327, !65, !"<string literal>", i1 false, i1 false}
!1089 = !{ptr @trace_event_fields_rxrpc_tx_data, !65, !"trace_event_fields_rxrpc_tx_data", i1 false, i1 false}
!1090 = !{ptr @trace_event_type_funcs_rxrpc_tx_data, !65, !"trace_event_type_funcs_rxrpc_tx_data", i1 false, i1 false}
!1091 = !{ptr @.str.328, !65, !"<string literal>", i1 false, i1 false}
!1092 = !{ptr @.str.329, !65, !"<string literal>", i1 false, i1 false}
!1093 = !{ptr @.str.330, !65, !"<string literal>", i1 false, i1 false}
!1094 = !{ptr @print_fmt_rxrpc_tx_data, !65, !"print_fmt_rxrpc_tx_data", i1 false, i1 false}
!1095 = !{ptr @.str.331, !69, !"<string literal>", i1 false, i1 false}
!1096 = !{ptr @trace_event_fields_rxrpc_tx_ack, !69, !"trace_event_fields_rxrpc_tx_ack", i1 false, i1 false}
!1097 = !{ptr @trace_event_type_funcs_rxrpc_tx_ack, !69, !"trace_event_type_funcs_rxrpc_tx_ack", i1 false, i1 false}
!1098 = !{ptr @.str.332, !69, !"<string literal>", i1 false, i1 false}
!1099 = !{ptr @trace_raw_output_rxrpc_tx_ack.symbols, !69, !"symbols", i1 false, i1 false}
!1100 = !{ptr @print_fmt_rxrpc_tx_ack, !69, !"print_fmt_rxrpc_tx_ack", i1 false, i1 false}
!1101 = !{ptr @.str.333, !73, !"<string literal>", i1 false, i1 false}
!1102 = !{ptr @.str.334, !73, !"<string literal>", i1 false, i1 false}
!1103 = !{ptr @.str.335, !73, !"<string literal>", i1 false, i1 false}
!1104 = !{ptr @trace_event_fields_rxrpc_receive, !73, !"trace_event_fields_rxrpc_receive", i1 false, i1 false}
!1105 = !{ptr @trace_event_type_funcs_rxrpc_receive, !73, !"trace_event_type_funcs_rxrpc_receive", i1 false, i1 false}
!1106 = !{ptr @.str.336, !73, !"<string literal>", i1 false, i1 false}
!1107 = !{ptr @.str.337, !73, !"<string literal>", i1 false, i1 false}
!1108 = !{ptr @.str.338, !73, !"<string literal>", i1 false, i1 false}
!1109 = !{ptr @trace_raw_output_rxrpc_receive.symbols, !73, !"symbols", i1 false, i1 false}
!1110 = !{ptr @print_fmt_rxrpc_receive, !73, !"print_fmt_rxrpc_receive", i1 false, i1 false}
!1111 = !{ptr @.str.339, !77, !"<string literal>", i1 false, i1 false}
!1112 = !{ptr @.str.340, !77, !"<string literal>", i1 false, i1 false}
!1113 = !{ptr @.str.341, !77, !"<string literal>", i1 false, i1 false}
!1114 = !{ptr @.str.342, !77, !"<string literal>", i1 false, i1 false}
!1115 = !{ptr @trace_event_fields_rxrpc_recvmsg, !77, !"trace_event_fields_rxrpc_recvmsg", i1 false, i1 false}
!1116 = !{ptr @trace_event_type_funcs_rxrpc_recvmsg, !77, !"trace_event_type_funcs_rxrpc_recvmsg", i1 false, i1 false}
!1117 = !{ptr @.str.343, !77, !"<string literal>", i1 false, i1 false}
!1118 = !{ptr @.str.344, !77, !"<string literal>", i1 false, i1 false}
!1119 = !{ptr @.str.345, !77, !"<string literal>", i1 false, i1 false}
!1120 = !{ptr @.str.346, !77, !"<string literal>", i1 false, i1 false}
!1121 = !{ptr @.str.347, !77, !"<string literal>", i1 false, i1 false}
!1122 = !{ptr @.str.348, !77, !"<string literal>", i1 false, i1 false}
!1123 = !{ptr @.str.349, !77, !"<string literal>", i1 false, i1 false}
!1124 = !{ptr @.str.350, !77, !"<string literal>", i1 false, i1 false}
!1125 = !{ptr @.str.351, !77, !"<string literal>", i1 false, i1 false}
!1126 = !{ptr @.str.352, !77, !"<string literal>", i1 false, i1 false}
!1127 = !{ptr @.str.353, !77, !"<string literal>", i1 false, i1 false}
!1128 = !{ptr @.str.354, !77, !"<string literal>", i1 false, i1 false}
!1129 = !{ptr @trace_raw_output_rxrpc_recvmsg.symbols, !77, !"symbols", i1 false, i1 false}
!1130 = !{ptr @print_fmt_rxrpc_recvmsg, !77, !"print_fmt_rxrpc_recvmsg", i1 false, i1 false}
!1131 = !{ptr @.str.355, !81, !"<string literal>", i1 false, i1 false}
!1132 = !{ptr @.str.356, !81, !"<string literal>", i1 false, i1 false}
!1133 = !{ptr @.str.357, !81, !"<string literal>", i1 false, i1 false}
!1134 = !{ptr @trace_event_fields_rxrpc_rtt_tx, !81, !"trace_event_fields_rxrpc_rtt_tx", i1 false, i1 false}
!1135 = !{ptr @trace_event_type_funcs_rxrpc_rtt_tx, !81, !"trace_event_type_funcs_rxrpc_rtt_tx", i1 false, i1 false}
!1136 = !{ptr @.str.358, !81, !"<string literal>", i1 false, i1 false}
!1137 = !{ptr @.str.359, !81, !"<string literal>", i1 false, i1 false}
!1138 = !{ptr @.str.360, !81, !"<string literal>", i1 false, i1 false}
!1139 = !{ptr @trace_raw_output_rxrpc_rtt_tx.symbols, !81, !"symbols", i1 false, i1 false}
!1140 = !{ptr @print_fmt_rxrpc_rtt_tx, !81, !"print_fmt_rxrpc_rtt_tx", i1 false, i1 false}
!1141 = !{ptr @.str.361, !85, !"<string literal>", i1 false, i1 false}
!1142 = !{ptr @.str.362, !85, !"<string literal>", i1 false, i1 false}
!1143 = !{ptr @.str.363, !85, !"<string literal>", i1 false, i1 false}
!1144 = !{ptr @.str.364, !85, !"<string literal>", i1 false, i1 false}
!1145 = !{ptr @trace_event_fields_rxrpc_rtt_rx, !85, !"trace_event_fields_rxrpc_rtt_rx", i1 false, i1 false}
!1146 = !{ptr @trace_event_type_funcs_rxrpc_rtt_rx, !85, !"trace_event_type_funcs_rxrpc_rtt_rx", i1 false, i1 false}
!1147 = !{ptr @.str.365, !85, !"<string literal>", i1 false, i1 false}
!1148 = !{ptr @.str.366, !85, !"<string literal>", i1 false, i1 false}
!1149 = !{ptr @.str.367, !85, !"<string literal>", i1 false, i1 false}
!1150 = !{ptr @.str.368, !85, !"<string literal>", i1 false, i1 false}
!1151 = !{ptr @.str.369, !85, !"<string literal>", i1 false, i1 false}
!1152 = !{ptr @.str.370, !85, !"<string literal>", i1 false, i1 false}
!1153 = !{ptr @trace_raw_output_rxrpc_rtt_rx.symbols, !85, !"symbols", i1 false, i1 false}
!1154 = !{ptr @print_fmt_rxrpc_rtt_rx, !85, !"print_fmt_rxrpc_rtt_rx", i1 false, i1 false}
!1155 = !{ptr @.str.371, !89, !"<string literal>", i1 false, i1 false}
!1156 = !{ptr @.str.372, !89, !"<string literal>", i1 false, i1 false}
!1157 = !{ptr @.str.373, !89, !"<string literal>", i1 false, i1 false}
!1158 = !{ptr @.str.374, !89, !"<string literal>", i1 false, i1 false}
!1159 = !{ptr @.str.375, !89, !"<string literal>", i1 false, i1 false}
!1160 = !{ptr @.str.376, !89, !"<string literal>", i1 false, i1 false}
!1161 = !{ptr @.str.377, !89, !"<string literal>", i1 false, i1 false}
!1162 = !{ptr @.str.378, !89, !"<string literal>", i1 false, i1 false}
!1163 = !{ptr @.str.379, !89, !"<string literal>", i1 false, i1 false}
!1164 = !{ptr @.str.380, !89, !"<string literal>", i1 false, i1 false}
!1165 = !{ptr @.str.381, !89, !"<string literal>", i1 false, i1 false}
!1166 = !{ptr @trace_event_fields_rxrpc_timer, !89, !"trace_event_fields_rxrpc_timer", i1 false, i1 false}
!1167 = !{ptr @trace_event_type_funcs_rxrpc_timer, !89, !"trace_event_type_funcs_rxrpc_timer", i1 false, i1 false}
!1168 = !{ptr @.str.382, !89, !"<string literal>", i1 false, i1 false}
!1169 = !{ptr @.str.383, !89, !"<string literal>", i1 false, i1 false}
!1170 = !{ptr @.str.384, !89, !"<string literal>", i1 false, i1 false}
!1171 = !{ptr @.str.385, !89, !"<string literal>", i1 false, i1 false}
!1172 = !{ptr @.str.386, !89, !"<string literal>", i1 false, i1 false}
!1173 = !{ptr @.str.387, !89, !"<string literal>", i1 false, i1 false}
!1174 = !{ptr @.str.388, !89, !"<string literal>", i1 false, i1 false}
!1175 = !{ptr @.str.389, !89, !"<string literal>", i1 false, i1 false}
!1176 = !{ptr @.str.390, !89, !"<string literal>", i1 false, i1 false}
!1177 = !{ptr @.str.391, !89, !"<string literal>", i1 false, i1 false}
!1178 = !{ptr @.str.392, !89, !"<string literal>", i1 false, i1 false}
!1179 = !{ptr @.str.393, !89, !"<string literal>", i1 false, i1 false}
!1180 = !{ptr @.str.394, !89, !"<string literal>", i1 false, i1 false}
!1181 = !{ptr @.str.395, !89, !"<string literal>", i1 false, i1 false}
!1182 = !{ptr @.str.396, !89, !"<string literal>", i1 false, i1 false}
!1183 = !{ptr @.str.397, !89, !"<string literal>", i1 false, i1 false}
!1184 = !{ptr @.str.398, !89, !"<string literal>", i1 false, i1 false}
!1185 = !{ptr @.str.399, !89, !"<string literal>", i1 false, i1 false}
!1186 = !{ptr @.str.400, !89, !"<string literal>", i1 false, i1 false}
!1187 = !{ptr @.str.401, !89, !"<string literal>", i1 false, i1 false}
!1188 = !{ptr @.str.402, !89, !"<string literal>", i1 false, i1 false}
!1189 = !{ptr @.str.403, !89, !"<string literal>", i1 false, i1 false}
!1190 = !{ptr @.str.404, !89, !"<string literal>", i1 false, i1 false}
!1191 = !{ptr @trace_raw_output_rxrpc_timer.symbols, !89, !"symbols", i1 false, i1 false}
!1192 = !{ptr @print_fmt_rxrpc_timer, !89, !"print_fmt_rxrpc_timer", i1 false, i1 false}
!1193 = !{ptr @trace_event_fields_rxrpc_rx_lose, !93, !"trace_event_fields_rxrpc_rx_lose", i1 false, i1 false}
!1194 = !{ptr @trace_event_type_funcs_rxrpc_rx_lose, !93, !"trace_event_type_funcs_rxrpc_rx_lose", i1 false, i1 false}
!1195 = !{ptr @.str.405, !93, !"<string literal>", i1 false, i1 false}
!1196 = !{ptr @trace_raw_output_rxrpc_rx_lose.symbols, !93, !"symbols", i1 false, i1 false}
!1197 = !{ptr @print_fmt_rxrpc_rx_lose, !93, !"print_fmt_rxrpc_rx_lose", i1 false, i1 false}
!1198 = !{ptr @.str.406, !97, !"<string literal>", i1 false, i1 false}
!1199 = !{ptr @.str.407, !97, !"<string literal>", i1 false, i1 false}
!1200 = !{ptr @.str.408, !97, !"<string literal>", i1 false, i1 false}
!1201 = !{ptr @.str.409, !97, !"<string literal>", i1 false, i1 false}
!1202 = !{ptr @.str.410, !97, !"<string literal>", i1 false, i1 false}
!1203 = !{ptr @.str.411, !97, !"<string literal>", i1 false, i1 false}
!1204 = !{ptr @trace_event_fields_rxrpc_propose_ack, !97, !"trace_event_fields_rxrpc_propose_ack", i1 false, i1 false}
!1205 = !{ptr @trace_event_type_funcs_rxrpc_propose_ack, !97, !"trace_event_type_funcs_rxrpc_propose_ack", i1 false, i1 false}
!1206 = !{ptr @.str.412, !97, !"<string literal>", i1 false, i1 false}
!1207 = !{ptr @.str.413, !97, !"<string literal>", i1 false, i1 false}
!1208 = !{ptr @.str.414, !97, !"<string literal>", i1 false, i1 false}
!1209 = !{ptr @.str.415, !97, !"<string literal>", i1 false, i1 false}
!1210 = !{ptr @.str.416, !97, !"<string literal>", i1 false, i1 false}
!1211 = !{ptr @.str.417, !97, !"<string literal>", i1 false, i1 false}
!1212 = !{ptr @.str.418, !97, !"<string literal>", i1 false, i1 false}
!1213 = !{ptr @.str.419, !97, !"<string literal>", i1 false, i1 false}
!1214 = !{ptr @.str.420, !97, !"<string literal>", i1 false, i1 false}
!1215 = !{ptr @.str.421, !97, !"<string literal>", i1 false, i1 false}
!1216 = !{ptr @.str.422, !97, !"<string literal>", i1 false, i1 false}
!1217 = !{ptr @.str.423, !97, !"<string literal>", i1 false, i1 false}
!1218 = !{ptr @.str.424, !97, !"<string literal>", i1 false, i1 false}
!1219 = !{ptr @.str.425, !97, !"<string literal>", i1 false, i1 false}
!1220 = !{ptr @trace_raw_output_rxrpc_propose_ack.symbols, !97, !"symbols", i1 false, i1 false}
!1221 = !{ptr @trace_raw_output_rxrpc_propose_ack.symbols.426, !97, !"symbols", i1 false, i1 false}
!1222 = !{ptr @.str.428, !97, !"<string literal>", i1 false, i1 false}
!1223 = !{ptr @.str.429, !97, !"<string literal>", i1 false, i1 false}
!1224 = !{ptr @.str.430, !97, !"<string literal>", i1 false, i1 false}
!1225 = !{ptr @trace_raw_output_rxrpc_propose_ack.symbols.427, !97, !"symbols", i1 false, i1 false}
!1226 = !{ptr @print_fmt_rxrpc_propose_ack, !97, !"print_fmt_rxrpc_propose_ack", i1 false, i1 false}
!1227 = !{ptr @.str.431, !101, !"<string literal>", i1 false, i1 false}
!1228 = !{ptr @.str.432, !101, !"<string literal>", i1 false, i1 false}
!1229 = !{ptr @.str.433, !101, !"<string literal>", i1 false, i1 false}
!1230 = !{ptr @trace_event_fields_rxrpc_retransmit, !101, !"trace_event_fields_rxrpc_retransmit", i1 false, i1 false}
!1231 = !{ptr @trace_event_type_funcs_rxrpc_retransmit, !101, !"trace_event_type_funcs_rxrpc_retransmit", i1 false, i1 false}
!1232 = !{ptr @.str.434, !101, !"<string literal>", i1 false, i1 false}
!1233 = !{ptr @print_fmt_rxrpc_retransmit, !101, !"print_fmt_rxrpc_retransmit", i1 false, i1 false}
!1234 = !{ptr @.str.435, !105, !"<string literal>", i1 false, i1 false}
!1235 = !{ptr @.str.436, !105, !"<string literal>", i1 false, i1 false}
!1236 = !{ptr @.str.437, !105, !"<string literal>", i1 false, i1 false}
!1237 = !{ptr @.str.438, !105, !"<string literal>", i1 false, i1 false}
!1238 = !{ptr @.str.439, !105, !"<string literal>", i1 false, i1 false}
!1239 = !{ptr @trace_event_fields_rxrpc_congest, !105, !"trace_event_fields_rxrpc_congest", i1 false, i1 false}
!1240 = !{ptr @trace_event_type_funcs_rxrpc_congest, !105, !"trace_event_type_funcs_rxrpc_congest", i1 false, i1 false}
!1241 = !{ptr @.str.440, !105, !"<string literal>", i1 false, i1 false}
!1242 = !{ptr @trace_raw_output_rxrpc_congest.symbols, !105, !"symbols", i1 false, i1 false}
!1243 = !{ptr @.str.442, !105, !"<string literal>", i1 false, i1 false}
!1244 = !{ptr @.str.443, !105, !"<string literal>", i1 false, i1 false}
!1245 = !{ptr @.str.444, !105, !"<string literal>", i1 false, i1 false}
!1246 = !{ptr @.str.445, !105, !"<string literal>", i1 false, i1 false}
!1247 = !{ptr @trace_raw_output_rxrpc_congest.symbols.441, !105, !"symbols", i1 false, i1 false}
!1248 = !{ptr @.str.446, !105, !"<string literal>", i1 false, i1 false}
!1249 = !{ptr @.str.448, !105, !"<string literal>", i1 false, i1 false}
!1250 = !{ptr @.str.449, !105, !"<string literal>", i1 false, i1 false}
!1251 = !{ptr @.str.450, !105, !"<string literal>", i1 false, i1 false}
!1252 = !{ptr @.str.451, !105, !"<string literal>", i1 false, i1 false}
!1253 = !{ptr @.str.452, !105, !"<string literal>", i1 false, i1 false}
!1254 = !{ptr @.str.453, !105, !"<string literal>", i1 false, i1 false}
!1255 = !{ptr @.str.454, !105, !"<string literal>", i1 false, i1 false}
!1256 = !{ptr @.str.455, !105, !"<string literal>", i1 false, i1 false}
!1257 = !{ptr @trace_raw_output_rxrpc_congest.symbols.447, !105, !"symbols", i1 false, i1 false}
!1258 = !{ptr @.str.456, !105, !"<string literal>", i1 false, i1 false}
!1259 = !{ptr @print_fmt_rxrpc_congest, !105, !"print_fmt_rxrpc_congest", i1 false, i1 false}
!1260 = !{ptr @trace_event_fields_rxrpc_disconnect_call, !109, !"trace_event_fields_rxrpc_disconnect_call", i1 false, i1 false}
!1261 = !{ptr @trace_event_type_funcs_rxrpc_disconnect_call, !109, !"trace_event_type_funcs_rxrpc_disconnect_call", i1 false, i1 false}
!1262 = !{ptr @.str.457, !109, !"<string literal>", i1 false, i1 false}
!1263 = !{ptr @print_fmt_rxrpc_disconnect_call, !109, !"print_fmt_rxrpc_disconnect_call", i1 false, i1 false}
!1264 = !{ptr @trace_event_fields_rxrpc_improper_term, !113, !"trace_event_fields_rxrpc_improper_term", i1 false, i1 false}
!1265 = !{ptr @trace_event_type_funcs_rxrpc_improper_term, !113, !"trace_event_type_funcs_rxrpc_improper_term", i1 false, i1 false}
!1266 = !{ptr @print_fmt_rxrpc_improper_term, !113, !"print_fmt_rxrpc_improper_term", i1 false, i1 false}
!1267 = !{ptr @.str.458, !117, !"<string literal>", i1 false, i1 false}
!1268 = !{ptr @trace_event_fields_rxrpc_rx_eproto, !117, !"trace_event_fields_rxrpc_rx_eproto", i1 false, i1 false}
!1269 = !{ptr @trace_event_type_funcs_rxrpc_rx_eproto, !117, !"trace_event_type_funcs_rxrpc_rx_eproto", i1 false, i1 false}
!1270 = !{ptr @.str.459, !117, !"<string literal>", i1 false, i1 false}
!1271 = !{ptr @print_fmt_rxrpc_rx_eproto, !117, !"print_fmt_rxrpc_rx_eproto", i1 false, i1 false}
!1272 = !{ptr @.str.460, !121, !"<string literal>", i1 false, i1 false}
!1273 = !{ptr @.str.461, !121, !"<string literal>", i1 false, i1 false}
!1274 = !{ptr @trace_event_fields_rxrpc_connect_call, !121, !"trace_event_fields_rxrpc_connect_call", i1 false, i1 false}
!1275 = !{ptr @trace_event_type_funcs_rxrpc_connect_call, !121, !"trace_event_type_funcs_rxrpc_connect_call", i1 false, i1 false}
!1276 = !{ptr @.str.462, !121, !"<string literal>", i1 false, i1 false}
!1277 = !{ptr @print_fmt_rxrpc_connect_call, !121, !"print_fmt_rxrpc_connect_call", i1 false, i1 false}
!1278 = !{ptr @.str.463, !125, !"<string literal>", i1 false, i1 false}
!1279 = !{ptr @.str.464, !125, !"<string literal>", i1 false, i1 false}
!1280 = !{ptr @trace_event_fields_rxrpc_resend, !125, !"trace_event_fields_rxrpc_resend", i1 false, i1 false}
!1281 = !{ptr @trace_event_type_funcs_rxrpc_resend, !125, !"trace_event_type_funcs_rxrpc_resend", i1 false, i1 false}
!1282 = !{ptr @.str.465, !125, !"<string literal>", i1 false, i1 false}
!1283 = !{ptr @print_fmt_rxrpc_resend, !125, !"print_fmt_rxrpc_resend", i1 false, i1 false}
!1284 = !{ptr @.str.466, !129, !"<string literal>", i1 false, i1 false}
!1285 = !{ptr @.str.467, !129, !"<string literal>", i1 false, i1 false}
!1286 = !{ptr @.str.468, !129, !"<string literal>", i1 false, i1 false}
!1287 = !{ptr @.str.469, !129, !"<string literal>", i1 false, i1 false}
!1288 = !{ptr @trace_event_fields_rxrpc_rx_icmp, !129, !"trace_event_fields_rxrpc_rx_icmp", i1 false, i1 false}
!1289 = !{ptr @trace_event_type_funcs_rxrpc_rx_icmp, !129, !"trace_event_type_funcs_rxrpc_rx_icmp", i1 false, i1 false}
!1290 = !{ptr @.str.470, !129, !"<string literal>", i1 false, i1 false}
!1291 = !{ptr @print_fmt_rxrpc_rx_icmp, !129, !"print_fmt_rxrpc_rx_icmp", i1 false, i1 false}
!1292 = !{ptr @.str.471, !133, !"<string literal>", i1 false, i1 false}
!1293 = !{ptr @trace_event_fields_rxrpc_tx_fail, !133, !"trace_event_fields_rxrpc_tx_fail", i1 false, i1 false}
!1294 = !{ptr @trace_event_type_funcs_rxrpc_tx_fail, !133, !"trace_event_type_funcs_rxrpc_tx_fail", i1 false, i1 false}
!1295 = !{ptr @.str.472, !133, !"<string literal>", i1 false, i1 false}
!1296 = !{ptr @trace_raw_output_rxrpc_tx_fail.symbols, !133, !"symbols", i1 false, i1 false}
!1297 = !{ptr @print_fmt_rxrpc_tx_fail, !133, !"print_fmt_rxrpc_tx_fail", i1 false, i1 false}
!1298 = !{ptr @.str.473, !137, !"<string literal>", i1 false, i1 false}
!1299 = !{ptr @.str.474, !137, !"<string literal>", i1 false, i1 false}
!1300 = !{ptr @.str.475, !137, !"<string literal>", i1 false, i1 false}
!1301 = !{ptr @.str.476, !137, !"<string literal>", i1 false, i1 false}
!1302 = !{ptr @trace_event_fields_rxrpc_call_reset, !137, !"trace_event_fields_rxrpc_call_reset", i1 false, i1 false}
!1303 = !{ptr @trace_event_type_funcs_rxrpc_call_reset, !137, !"trace_event_type_funcs_rxrpc_call_reset", i1 false, i1 false}
!1304 = !{ptr @.str.477, !137, !"<string literal>", i1 false, i1 false}
!1305 = !{ptr @print_fmt_rxrpc_call_reset, !137, !"print_fmt_rxrpc_call_reset", i1 false, i1 false}
!1306 = !{ptr @trace_event_fields_rxrpc_notify_socket, !141, !"trace_event_fields_rxrpc_notify_socket", i1 false, i1 false}
!1307 = !{ptr @trace_event_type_funcs_rxrpc_notify_socket, !141, !"trace_event_type_funcs_rxrpc_notify_socket", i1 false, i1 false}
!1308 = !{ptr @.str.478, !141, !"<string literal>", i1 false, i1 false}
!1309 = !{ptr @print_fmt_rxrpc_notify_socket, !141, !"print_fmt_rxrpc_notify_socket", i1 false, i1 false}
!1310 = !{ptr @.str.479, !145, !"<string literal>", i1 false, i1 false}
!1311 = !{ptr @.str.480, !145, !"<string literal>", i1 false, i1 false}
!1312 = !{ptr @.str.481, !145, !"<string literal>", i1 false, i1 false}
!1313 = !{ptr @.str.482, !145, !"<string literal>", i1 false, i1 false}
!1314 = !{ptr @trace_event_fields_rxrpc_rx_discard_ack, !145, !"trace_event_fields_rxrpc_rx_discard_ack", i1 false, i1 false}
!1315 = !{ptr @trace_event_type_funcs_rxrpc_rx_discard_ack, !145, !"trace_event_type_funcs_rxrpc_rx_discard_ack", i1 false, i1 false}
!1316 = !{ptr @.str.483, !145, !"<string literal>", i1 false, i1 false}
!1317 = !{ptr @print_fmt_rxrpc_rx_discard_ack, !145, !"print_fmt_rxrpc_rx_discard_ack", i1 false, i1 false}
!1318 = !{ptr @__param_str_debug, !763, !"__param_str_debug", i1 false, i1 false}
!1319 = !{ptr @.str.484, !1320, !"<string literal>", i1 false, i1 false}
!1320 = !{!"../net/rxrpc/af_rxrpc.c", i32 122, i32 2}
!1321 = !{ptr @.str.485, !1320, !"<string literal>", i1 false, i1 false}
!1322 = !{ptr @rxrpc_validate_address._entry, !1320, !"_entry", i1 false, i1 false}
!1323 = !{ptr @rxrpc_validate_address._entry_ptr, !1320, !"_entry_ptr", i1 false, i1 false}
!1324 = distinct !{null, !89, !"__already_done", i1 false, i1 false}
!1325 = !{ptr @.str.486, !89, !"<string literal>", i1 false, i1 false}
!1326 = distinct !{null, !89, !"__warned", i1 false, i1 false}
!1327 = !{ptr @.str.487, !89, !"<string literal>", i1 false, i1 false}
!1328 = distinct !{null, !1329, !"__already_done", i1 false, i1 false}
!1329 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!1330 = !{ptr @.str.488, !1329, !"<string literal>", i1 false, i1 false}
!1331 = !{ptr @rxrpc_proto, !1332, !"rxrpc_proto", i1 false, i1 false}
!1332 = !{!"../net/rxrpc/af_rxrpc.c", i32 944, i32 21}
!1333 = !{ptr @.str.489, !1334, !"<string literal>", i1 false, i1 false}
!1334 = !{!"../net/rxrpc/af_rxrpc.c", i32 975, i32 3}
!1335 = !{ptr @.str.490, !1336, !"<string literal>", i1 false, i1 false}
!1336 = !{!"../net/rxrpc/af_rxrpc.c", i32 978, i32 3}
!1337 = !{ptr @.str.491, !1336, !"<string literal>", i1 false, i1 false}
!1338 = !{ptr @af_rxrpc_init._entry, !1336, !"_entry", i1 false, i1 false}
!1339 = !{ptr @af_rxrpc_init._entry_ptr, !1336, !"_entry_ptr", i1 false, i1 false}
!1340 = !{ptr @.str.492, !1341, !"<string literal>", i1 false, i1 false}
!1341 = !{!"../net/rxrpc/af_rxrpc.c", i32 982, i32 36}
!1342 = !{ptr @.str.494, !1343, !"<string literal>", i1 false, i1 false}
!1343 = !{!"../net/rxrpc/af_rxrpc.c", i32 984, i32 3}
!1344 = !{ptr @af_rxrpc_init._entry.493, !1343, !"_entry", i1 false, i1 false}
!1345 = !{ptr @af_rxrpc_init._entry_ptr.495, !1343, !"_entry_ptr", i1 false, i1 false}
!1346 = !{ptr @.str.497, !1347, !"<string literal>", i1 false, i1 false}
!1347 = !{!"../net/rxrpc/af_rxrpc.c", i32 990, i32 3}
!1348 = !{ptr @af_rxrpc_init._entry.496, !1347, !"_entry", i1 false, i1 false}
!1349 = !{ptr @af_rxrpc_init._entry_ptr.498, !1347, !"_entry_ptr", i1 false, i1 false}
!1350 = !{ptr @.str.500, !1351, !"<string literal>", i1 false, i1 false}
!1351 = !{!"../net/rxrpc/af_rxrpc.c", i32 1000, i32 3}
!1352 = !{ptr @af_rxrpc_init._entry.499, !1351, !"_entry", i1 false, i1 false}
!1353 = !{ptr @af_rxrpc_init._entry_ptr.501, !1351, !"_entry_ptr", i1 false, i1 false}
!1354 = !{ptr @.str.503, !1355, !"<string literal>", i1 false, i1 false}
!1355 = !{!"../net/rxrpc/af_rxrpc.c", i32 1006, i32 3}
!1356 = !{ptr @af_rxrpc_init._entry.502, !1355, !"_entry", i1 false, i1 false}
!1357 = !{ptr @af_rxrpc_init._entry_ptr.504, !1355, !"_entry_ptr", i1 false, i1 false}
!1358 = !{ptr @.str.506, !1359, !"<string literal>", i1 false, i1 false}
!1359 = !{!"../net/rxrpc/af_rxrpc.c", i32 1012, i32 3}
!1360 = !{ptr @af_rxrpc_init._entry.505, !1359, !"_entry", i1 false, i1 false}
!1361 = !{ptr @af_rxrpc_init._entry_ptr.507, !1359, !"_entry_ptr", i1 false, i1 false}
!1362 = !{ptr @.str.509, !1363, !"<string literal>", i1 false, i1 false}
!1363 = !{!"../net/rxrpc/af_rxrpc.c", i32 1018, i32 3}
!1364 = !{ptr @af_rxrpc_init._entry.508, !1363, !"_entry", i1 false, i1 false}
!1365 = !{ptr @af_rxrpc_init._entry_ptr.510, !1363, !"_entry_ptr", i1 false, i1 false}
!1366 = !{ptr @.str.512, !1367, !"<string literal>", i1 false, i1 false}
!1367 = !{!"../net/rxrpc/af_rxrpc.c", i32 1024, i32 3}
!1368 = !{ptr @af_rxrpc_init._entry.511, !1367, !"_entry", i1 false, i1 false}
!1369 = !{ptr @af_rxrpc_init._entry_ptr.513, !1367, !"_entry_ptr", i1 false, i1 false}
!1370 = !{ptr @rxrpc_family_ops, !1371, !"rxrpc_family_ops", i1 false, i1 false}
!1371 = !{!"../net/rxrpc/af_rxrpc.c", i32 951, i32 38}
!1372 = !{ptr @.str.514, !1373, !"<string literal>", i1 false, i1 false}
!1373 = !{!"../net/rxrpc/af_rxrpc.c", i32 753, i32 2}
!1374 = !{ptr @.str.515, !1373, !"<string literal>", i1 false, i1 false}
!1375 = !{ptr @rxrpc_create._entry, !1373, !"_entry", i1 false, i1 false}
!1376 = !{ptr @rxrpc_create._entry_ptr, !1373, !"_entry_ptr", i1 false, i1 false}
!1377 = !{ptr @rxrpc_create.__key, !1378, !"__key", i1 false, i1 false}
!1378 = !{!"../net/rxrpc/af_rxrpc.c", i32 781, i32 2}
!1379 = !{ptr @.str.516, !1378, !"<string literal>", i1 false, i1 false}
!1380 = !{ptr @rxrpc_create.__key.517, !1381, !"__key", i1 false, i1 false}
!1381 = !{!"../net/rxrpc/af_rxrpc.c", i32 785, i32 2}
!1382 = !{ptr @.str.518, !1381, !"<string literal>", i1 false, i1 false}
!1383 = !{ptr @rxrpc_create.__key.519, !1384, !"__key", i1 false, i1 false}
!1384 = !{!"../net/rxrpc/af_rxrpc.c", i32 786, i32 2}
!1385 = !{ptr @.str.520, !1384, !"<string literal>", i1 false, i1 false}
!1386 = !{ptr @.str.522, !1387, !"<string literal>", i1 false, i1 false}
!1387 = !{!"../net/rxrpc/af_rxrpc.c", i32 792, i32 2}
!1388 = !{ptr @rxrpc_create._entry.521, !1387, !"_entry", i1 false, i1 false}
!1389 = !{ptr @rxrpc_create._entry_ptr.523, !1387, !"_entry_ptr", i1 false, i1 false}
!1390 = !{ptr @rxrpc_rpc_ops, !1391, !"rxrpc_rpc_ops", i1 false, i1 false}
!1391 = !{!"../net/rxrpc/af_rxrpc.c", i32 923, i32 31}
!1392 = !{ptr @.str.524, !1393, !"<string literal>", i1 false, i1 false}
!1393 = !{!"../net/rxrpc/af_rxrpc.c", i32 910, i32 2}
!1394 = !{ptr @.str.525, !1393, !"<string literal>", i1 false, i1 false}
!1395 = !{ptr @rxrpc_release._entry, !1393, !"_entry", i1 false, i1 false}
!1396 = !{ptr @rxrpc_release._entry_ptr, !1393, !"_entry_ptr", i1 false, i1 false}
!1397 = !{ptr @.str.526, !1398, !"<string literal>", i1 false, i1 false}
!1398 = !{!"../net/rxrpc/af_rxrpc.c", i32 855, i32 2}
!1399 = !{ptr @.str.527, !1398, !"<string literal>", i1 false, i1 false}
!1400 = !{ptr @rxrpc_release_sock._entry, !1398, !"_entry", i1 false, i1 false}
!1401 = !{ptr @rxrpc_release_sock._entry_ptr, !1398, !"_entry_ptr", i1 false, i1 false}
!1402 = !{ptr @.str.529, !1403, !"<string literal>", i1 false, i1 false}
!1403 = !{!"../net/rxrpc/af_rxrpc.c", i32 899, i32 2}
!1404 = !{ptr @rxrpc_release_sock._entry.528, !1403, !"_entry", i1 false, i1 false}
!1405 = !{ptr @rxrpc_release_sock._entry_ptr.530, !1403, !"_entry_ptr", i1 false, i1 false}
!1406 = !{ptr @.str.531, !1407, !"<string literal>", i1 false, i1 false}
!1407 = !{!"../net/rxrpc/af_rxrpc.c", i32 137, i32 2}
!1408 = !{ptr @.str.532, !1407, !"<string literal>", i1 false, i1 false}
!1409 = !{ptr @rxrpc_bind._entry, !1407, !"_entry", i1 false, i1 false}
!1410 = !{ptr @rxrpc_bind._entry_ptr, !1407, !"_entry_ptr", i1 false, i1 false}
!1411 = !{ptr @rxrpc_bind._entry.533, !1412, !"_entry", i1 false, i1 false}
!1412 = !{!"../net/rxrpc/af_rxrpc.c", i32 191, i32 2}
!1413 = !{ptr @rxrpc_bind._entry_ptr.534, !1412, !"_entry_ptr", i1 false, i1 false}
!1414 = !{ptr @.str.536, !1415, !"<string literal>", i1 false, i1 false}
!1415 = !{!"../net/rxrpc/af_rxrpc.c", i32 202, i32 2}
!1416 = !{ptr @rxrpc_bind._entry.535, !1415, !"_entry", i1 false, i1 false}
!1417 = !{ptr @rxrpc_bind._entry_ptr.537, !1415, !"_entry_ptr", i1 false, i1 false}
!1418 = !{ptr @.str.538, !1419, !"<string literal>", i1 false, i1 false}
!1419 = !{!"../net/rxrpc/af_rxrpc.c", i32 457, i32 2}
!1420 = !{ptr @.str.539, !1419, !"<string literal>", i1 false, i1 false}
!1421 = !{ptr @rxrpc_connect._entry, !1419, !"_entry", i1 false, i1 false}
!1422 = !{ptr @rxrpc_connect._entry_ptr, !1419, !"_entry_ptr", i1 false, i1 false}
!1423 = !{ptr @.str.541, !1424, !"<string literal>", i1 false, i1 false}
!1424 = !{!"../net/rxrpc/af_rxrpc.c", i32 461, i32 3}
!1425 = !{ptr @rxrpc_connect._entry.540, !1424, !"_entry", i1 false, i1 false}
!1426 = !{ptr @rxrpc_connect._entry_ptr.542, !1424, !"_entry_ptr", i1 false, i1 false}
!1427 = !{ptr @.str.543, !1428, !"<string literal>", i1 false, i1 false}
!1428 = !{!"../net/rxrpc/af_rxrpc.c", i32 216, i32 2}
!1429 = !{ptr @rxrpc_listen._entry, !1428, !"_entry", i1 false, i1 false}
!1430 = !{ptr @rxrpc_listen._entry_ptr, !1428, !"_entry_ptr", i1 false, i1 false}
!1431 = !{ptr @.str.545, !1432, !"<string literal>", i1 false, i1 false}
!1432 = !{!"../net/rxrpc/af_rxrpc.c", i32 226, i32 3}
!1433 = !{ptr @rxrpc_listen._entry.544, !1432, !"_entry", i1 false, i1 false}
!1434 = !{ptr @rxrpc_listen._entry_ptr.546, !1432, !"_entry_ptr", i1 false, i1 false}
!1435 = !{ptr @rxrpc_listen._entry.547, !1436, !"_entry", i1 false, i1 false}
!1436 = !{!"../net/rxrpc/af_rxrpc.c", i32 256, i32 2}
!1437 = !{ptr @rxrpc_listen._entry_ptr.548, !1436, !"_entry_ptr", i1 false, i1 false}
!1438 = !{ptr @.str.549, !1439, !"<string literal>", i1 false, i1 false}
!1439 = !{!"../net/rxrpc/af_rxrpc.c", i32 805, i32 2}
!1440 = !{ptr @rxrpc_shutdown._entry, !1439, !"_entry", i1 false, i1 false}
!1441 = !{ptr @rxrpc_shutdown._entry_ptr, !1439, !"_entry_ptr", i1 false, i1 false}
!1442 = !{ptr @.str.550, !1443, !"<string literal>", i1 false, i1 false}
!1443 = !{!"../net/rxrpc/af_rxrpc.c", i32 600, i32 2}
!1444 = !{ptr @.str.551, !1443, !"<string literal>", i1 false, i1 false}
!1445 = !{ptr @rxrpc_setsockopt._entry, !1443, !"_entry", i1 false, i1 false}
!1446 = !{ptr @rxrpc_setsockopt._entry_ptr, !1443, !"_entry_ptr", i1 false, i1 false}
!1447 = distinct !{null, !1448, !"__already_done", i1 false, i1 false}
!1448 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!1449 = distinct !{null, !1448, !"<string literal>", i1 false, i1 false}
!1450 = distinct !{null, !1451, !"<string literal>", i1 false, i1 false}
!1451 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!1452 = !{ptr @.str.554, !1453, !"<string literal>", i1 false, i1 false}
!1453 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!1454 = !{ptr @.str.555, !1455, !"<string literal>", i1 false, i1 false}
!1455 = !{!"../net/rxrpc/af_rxrpc.c", i32 507, i32 2}
!1456 = !{ptr @.str.556, !1455, !"<string literal>", i1 false, i1 false}
!1457 = !{ptr @rxrpc_sendmsg._entry, !1455, !"_entry", i1 false, i1 false}
!1458 = !{ptr @rxrpc_sendmsg._entry_ptr, !1455, !"_entry_ptr", i1 false, i1 false}
!1459 = !{ptr @rxrpc_sendmsg._entry.557, !1460, !"_entry", i1 false, i1 false}
!1460 = !{!"../net/rxrpc/af_rxrpc.c", i32 515, i32 4}
!1461 = !{ptr @rxrpc_sendmsg._entry_ptr.558, !1460, !"_entry_ptr", i1 false, i1 false}
!1462 = !{ptr @rxrpc_sendmsg._entry.559, !1463, !"_entry", i1 false, i1 false}
!1463 = !{!"../net/rxrpc/af_rxrpc.c", i32 572, i32 2}
!1464 = !{ptr @rxrpc_sendmsg._entry_ptr.560, !1463, !"_entry_ptr", i1 false, i1 false}
!1465 = !{ptr @.str.561, !1466, !"<string literal>", i1 false, i1 false}
!1466 = !{!"../net/rxrpc/af_rxrpc.c", i32 61, i32 2}
!1467 = !{ptr @.str.562, !1466, !"<string literal>", i1 false, i1 false}
!1468 = !{ptr @rxrpc_write_space._entry, !1466, !"_entry", i1 false, i1 false}
!1469 = !{ptr @rxrpc_write_space._entry_ptr, !1466, !"_entry_ptr", i1 false, i1 false}
!1470 = distinct !{null, !1471, !"__warned", i1 false, i1 false}
!1471 = !{!"../net/rxrpc/af_rxrpc.c", i32 64, i32 26}
!1472 = distinct !{null, !1473, !"__warned", i1 false, i1 false}
!1473 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!1474 = !{ptr @.str.563, !1473, !"<string literal>", i1 false, i1 false}
!1475 = !{ptr @.str.564, !1473, !"<string literal>", i1 false, i1 false}
!1476 = distinct !{null, !1477, !"__warned", i1 false, i1 false}
!1477 = !{!"../include/net/sock.h", i32 2444, i32 19}
!1478 = !{ptr @.str.565, !1477, !"<string literal>", i1 false, i1 false}
!1479 = distinct !{null, !1480, !"__warned", i1 false, i1 false}
!1480 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!1481 = !{ptr @.str.566, !1480, !"<string literal>", i1 false, i1 false}
!1482 = !{ptr @.str.567, !1483, !"<string literal>", i1 false, i1 false}
!1483 = !{!"../net/rxrpc/af_rxrpc.c", i32 834, i32 2}
!1484 = !{ptr @rxrpc_sock_destructor._entry, !1483, !"_entry", i1 false, i1 false}
!1485 = !{ptr @rxrpc_sock_destructor._entry_ptr, !1483, !"_entry_ptr", i1 false, i1 false}
!1486 = !{ptr @.str.569, !1487, !"<string literal>", i1 false, i1 false}
!1487 = !{!"../net/rxrpc/af_rxrpc.c", i32 843, i32 3}
!1488 = !{ptr @rxrpc_sock_destructor._entry.568, !1487, !"_entry", i1 false, i1 false}
!1489 = !{ptr @rxrpc_sock_destructor._entry_ptr.570, !1487, !"_entry_ptr", i1 false, i1 false}
!1490 = distinct !{null, !1491, !"__warned", i1 false, i1 false}
!1491 = !{!"../include/net/netns/generic.h", i32 45, i32 7}
!1492 = !{ptr @.str.571, !1491, !"<string literal>", i1 false, i1 false}
!1493 = !{!"sp"}
!1494 = !{i32 1, !"wchar_size", i32 2}
!1495 = !{i32 1, !"min_enum_size", i32 4}
!1496 = !{i32 8, !"branch-target-enforcement", i32 0}
!1497 = !{i32 8, !"sign-return-address", i32 0}
!1498 = !{i32 8, !"sign-return-address-all", i32 0}
!1499 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1500 = !{i32 7, !"uwtable", i32 1}
!1501 = !{i32 7, !"frame-pointer", i32 2}
!1502 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1503 = !{!"branch_weights", i32 2000, i32 1}
!1504 = !{!"branch_weights", i32 1, i32 2000}
!1505 = !{!"auto-init"}
!1506 = !{i64 2162014727, i64 2162015213, i64 2162014764, i64 2162014820, i64 2162014854, i64 2162014878, i64 2162014919, i64 2162014940, i64 2162014968, i64 2162015002}
!1507 = !{i64 2162018830, i64 2162019316, i64 2162018867, i64 2162018923, i64 2162018957, i64 2162018981, i64 2162019022, i64 2162019043, i64 2162019071, i64 2162019105}
!1508 = !{i8 0, i8 2}
!1509 = !{i64 2148977226, i64 2148977231, i64 2148977244, i64 2148977288, i64 2148977322, i64 2148977343}
!1510 = !{i64 2157865857}
!1511 = !{i64 2157866070}
!1512 = !{i64 2149388567}
!1513 = !{i64 2149389603}
!1514 = !{i64 2149380008}
!1515 = !{i64 2149380274}
!1516 = !{i64 2149473732}
!1517 = !{i64 2148453404}
!1518 = !{i64 2148367844, i64 2148367876, i64 2148367905, i64 2148367939, i64 2148367970, i64 2148367993}
!1519 = !{i64 2149329518}
!1520 = !{i64 2161867451}
!1521 = !{i64 2156780907}
!1522 = !{i64 2161878802, i64 2161879287, i64 2161878839, i64 2161878895, i64 2161878929, i64 2161878953, i64 2161878994, i64 2161879015, i64 2161879043, i64 2161879077}
!1523 = !{i64 4969532}
!1524 = !{i64 4969729}
!1525 = !{i64 2152454962}
!1526 = !{i64 2161938899, i64 2161939179, i64 2161939513, i64 2161939847}
!1527 = !{i64 2161948478, i64 2161948758, i64 2161949092, i64 2161949426}
!1528 = !{i64 2161957282, i64 2161957562, i64 2161957896, i64 2161958230}
!1529 = !{i64 2152473977, i64 2152474002}
