; ModuleID = '/llk/IR_all_yes/net/sunrpc/clnt.c_pt.bc'
source_filename = "../net/sunrpc/clnt.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+rpc_create\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_create\09\09\09\09"
module asm "\09.long\09__crc_rpc_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_create:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_create\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clone_client\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clone_client\09\09\09\09"
module asm "\09.long\09__crc_rpc_clone_client\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clone_client:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clone_client\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clone_client:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clone_client_set_auth\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clone_client_set_auth\09\09\09\09"
module asm "\09.long\09__crc_rpc_clone_client_set_auth\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clone_client_set_auth:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clone_client_set_auth\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clone_client_set_auth:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_switch_client_transport\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_switch_client_transport\09\09\09\09"
module asm "\09.long\09__crc_rpc_switch_client_transport\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_switch_client_transport:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_switch_client_transport\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_switch_client_transport:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_iterate_for_each_xprt\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_iterate_for_each_xprt\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_iterate_for_each_xprt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_iterate_for_each_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_iterate_for_each_xprt\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_iterate_for_each_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_killall_tasks\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_killall_tasks\09\09\09\09"
module asm "\09.long\09__crc_rpc_killall_tasks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_killall_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_killall_tasks\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_killall_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_shutdown_client\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_shutdown_client\09\09\09\09"
module asm "\09.long\09__crc_rpc_shutdown_client\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_shutdown_client:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_shutdown_client\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_shutdown_client:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_release_client\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_release_client\09\09\09\09"
module asm "\09.long\09__crc_rpc_release_client\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_release_client:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_release_client\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_release_client:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_bind_new_program\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_bind_new_program\09\09\09\09"
module asm "\09.long\09__crc_rpc_bind_new_program\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_bind_new_program:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_bind_new_program\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_bind_new_program:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_task_release_transport\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_task_release_transport\09\09\09\09"
module asm "\09.long\09__crc_rpc_task_release_transport\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_task_release_transport:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_task_release_transport\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_task_release_transport:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_run_task\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_run_task\09\09\09\09"
module asm "\09.long\09__crc_rpc_run_task\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_run_task:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_run_task\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_run_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_call_sync\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_call_sync\09\09\09\09"
module asm "\09.long\09__crc_rpc_call_sync\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_call_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_call_sync\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_call_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_call_async\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_call_async\09\09\09\09"
module asm "\09.long\09__crc_rpc_call_async\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_call_async:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_call_async\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_call_async:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_prepare_reply_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_prepare_reply_pages\09\09\09\09"
module asm "\09.long\09__crc_rpc_prepare_reply_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_prepare_reply_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_prepare_reply_pages\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_prepare_reply_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_call_start\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_call_start\09\09\09\09"
module asm "\09.long\09__crc_rpc_call_start\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_call_start:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_call_start\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_call_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_peeraddr\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_peeraddr\09\09\09\09"
module asm "\09.long\09__crc_rpc_peeraddr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_peeraddr:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_peeraddr\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_peeraddr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_peeraddr2str\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_peeraddr2str\09\09\09\09"
module asm "\09.long\09__crc_rpc_peeraddr2str\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_peeraddr2str:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_peeraddr2str\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_peeraddr2str:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_localaddr\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_localaddr\09\09\09\09"
module asm "\09.long\09__crc_rpc_localaddr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_localaddr:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_localaddr\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_localaddr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_setbufsize\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_setbufsize\09\09\09\09"
module asm "\09.long\09__crc_rpc_setbufsize\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_setbufsize:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_setbufsize\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_setbufsize:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_net_ns\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_net_ns\09\09\09\09"
module asm "\09.long\09__crc_rpc_net_ns\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_net_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_net_ns\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_net_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_max_payload\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_max_payload\09\09\09\09"
module asm "\09.long\09__crc_rpc_max_payload\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_max_payload:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_max_payload\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_max_payload:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_max_bc_payload\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_max_bc_payload\09\09\09\09"
module asm "\09.long\09__crc_rpc_max_bc_payload\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_max_bc_payload:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_max_bc_payload\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_max_bc_payload:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_num_bc_slots\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_num_bc_slots\09\09\09\09"
module asm "\09.long\09__crc_rpc_num_bc_slots\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_num_bc_slots:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_num_bc_slots\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_num_bc_slots:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_force_rebind\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_force_rebind\09\09\09\09"
module asm "\09.long\09__crc_rpc_force_rebind\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_force_rebind:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_force_rebind\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_force_rebind:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_restart_call\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_restart_call\09\09\09\09"
module asm "\09.long\09__crc_rpc_restart_call\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_restart_call:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_restart_call\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_restart_call:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_restart_call_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_restart_call_prepare\09\09\09\09"
module asm "\09.long\09__crc_rpc_restart_call_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_restart_call_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_restart_call_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_restart_call_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_call_null\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_call_null\09\09\09\09"
module asm "\09.long\09__crc_rpc_call_null\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_call_null:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_call_null\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_call_null:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_test_and_add_xprt\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_test_and_add_xprt\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_test_and_add_xprt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_test_and_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_test_and_add_xprt\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_test_and_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_setup_test_and_add_xprt\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_setup_test_and_add_xprt\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_setup_test_and_add_xprt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_setup_test_and_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_setup_test_and_add_xprt\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_setup_test_and_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_add_xprt\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_add_xprt\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_add_xprt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_add_xprt\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_set_connect_timeout\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_set_connect_timeout\09\09\09\09"
module asm "\09.long\09__crc_rpc_set_connect_timeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_set_connect_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_set_connect_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_set_connect_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_xprt_switch_put\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_xprt_switch_put\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_xprt_switch_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_xprt_switch_put:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_xprt_switch_put\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_xprt_switch_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_xprt_switch_add_xprt\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_xprt_switch_add_xprt\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_xprt_switch_add_xprt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_xprt_switch_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_xprt_switch_add_xprt\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_xprt_switch_add_xprt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_xprt_switch_has_addr\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_xprt_switch_has_addr\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_xprt_switch_has_addr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_xprt_switch_has_addr:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_xprt_switch_has_addr\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_xprt_switch_has_addr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_swap_activate\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_swap_activate\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_swap_activate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_swap_activate:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_swap_activate\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_swap_activate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_clnt_swap_deactivate\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_clnt_swap_deactivate\09\09\09\09"
module asm "\09.long\09__crc_rpc_clnt_swap_deactivate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_clnt_swap_deactivate:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_clnt_swap_deactivate\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_clnt_swap_deactivate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.notifier_block = type { ptr, ptr, i32 }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.rpc_call_ops = type { ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon.1 }
%union.anon.1 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.110 }
%struct.atomic_t = type { i32 }
%union.anon.110 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.rpc_procinfo = type { i32, ptr, ptr, i32, i32, i32, i32, ptr }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.xprt_create = type { i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32 }
%struct.rpc_create_args = type { ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32 }
%struct.svc_xprt = type { ptr, ptr, %struct.kref, %struct.list_head, %struct.list_head, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.spinlock, ptr, %struct.list_head, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, [58 x i8], %struct.list_head, ptr, ptr, ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.__kernel_sockaddr_storage = type { %union.anon.127 }
%union.anon.127 = type { ptr, [124 x i8] }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.62 }
%union.anon.62 = type { [4 x i32] }
%struct.rpc_xprt = type { %struct.kref, ptr, i32, ptr, %struct.__kernel_sockaddr_storage, i32, i32, i32, i32, i32, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.list_head, i32, i32, i32, i32, i8, %struct.atomic_t, i32, %struct.list_head, i32, i32, i32, %struct.work_struct, %struct.timer_list, i32, i32, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.spinlock, %struct.spinlock, i32, ptr, %struct.list_head, %struct.atomic_t, ptr, ptr, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.rb_root, %struct.anon.131, ptr, ptr, [6 x ptr], ptr, %struct.callback_head, ptr, ptr, i8 }
%struct.rpc_wait_queue = type { %struct.spinlock, [4 x %struct.list_head], i8, i8, i8, i16, %struct.rpc_timer, ptr }
%struct.rpc_timer = type { %struct.list_head, i32, %struct.delayed_work }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.rb_root = type { ptr }
%struct.anon.131 = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.callback_head = type { ptr, ptr }
%struct.rpc_task_setup = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i8 }
%struct.rpc_task = type { %struct.atomic_t, i32, %struct.list_head, ptr, ptr, i32, i32, ptr, %union.anon.2, i32, %struct.rpc_message, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i32, i16, i16, i16, i8 }
%union.anon.2 = type { %struct.work_struct }
%struct.rpc_clnt = type { %struct.refcount_struct, i32, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.spinlock, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i8, ptr, ptr, %struct.atomic_t, i32, [65 x i8], %struct.rpc_pipe_dir_head, ptr, %struct.rpc_rtt, %struct.rpc_timeout, ptr, ptr, ptr, ptr, %union.anon.132, ptr, i32 }
%struct.rpc_pipe_dir_head = type { %struct.list_head, ptr }
%struct.rpc_rtt = type { i32, [5 x i32], [5 x i32], [5 x i32] }
%struct.rpc_timeout = type { i32, i32, i32, i32, i8 }
%union.anon.132 = type { %struct.work_struct }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.xprt_class = type { %struct.list_head, i32, ptr, ptr, [32 x i8], [0 x ptr] }
%struct.rpc_xprt_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.rpc_auth = type { i32, i32, i32, i32, i32, ptr, i32, %struct.refcount_struct, ptr }
%struct.sunrpc_net = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.list_head, %struct.spinlock, ptr, ptr, %struct.spinlock, i32, i8, %struct.mutex, ptr, i32, i32, %struct.atomic_t, ptr }
%struct.rpc_auth_create_args = type { i32, ptr }
%struct.rpc_program = type { ptr, i32, i32, ptr, ptr, ptr }
%struct.rpc_xprt_iter = type { ptr, ptr, ptr }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.rpc_xprt_switch = type { %struct.spinlock, %struct.kref, i32, i32, i32, i32, %struct.atomic_t, %struct.list_head, ptr, ptr, ptr, %struct.callback_head }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.30 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.30 = type { %struct.callback_head }
%struct.rpc_rqst = type { ptr, %struct.xdr_buf, %struct.xdr_buf, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.anon.126, %struct.list_head, %struct.list_head, ptr, i32, ptr, i32, i32, i32, %struct.xdr_buf, i32, i32, i32, i64, i32, i32, %struct.atomic_t, i32, i64, i32, %struct.list_head, i32, %struct.list_head }
%union.anon.126 = type { %struct.rb_node }
%struct.rb_node = type { i32, ptr, ptr }
%struct.xdr_buf = type { [1 x %struct.kvec], [1 x %struct.kvec], ptr, ptr, i32, i32, i32, i32, i32 }
%struct.kvec = type { ptr, i32 }
%struct.rpc_cred = type { %struct.hlist_node, %struct.list_head, %struct.callback_head, ptr, ptr, i32, i32, %struct.refcount_struct, ptr }
%struct.rpc_version = type { i32, i32, ptr, ptr }
%struct.rpc_stat = type { ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.28, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.28 = type { %struct.anon.29 }
%struct.anon.29 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.81, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.81 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.sk_buff_head = type { %union.anon.69, i32, %struct.spinlock }
%union.anon.69 = type { %struct.anon.70 }
%struct.anon.70 = type { ptr, ptr }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.rpc_cb_add_xprt_calldata = type { ptr, ptr }
%struct.rpc_add_xprt_test = type { ptr, ptr }
%struct.connect_timeout_data = type { i32, i32 }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.100, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.11 }
%union.anon.11 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.13 }
%union.anon.13 = type { %struct.anon.14 }
%struct.anon.14 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.100 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.nsproxy = type { %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.new_utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.xdr_stream = type { ptr, ptr, ptr, ptr, %struct.kvec, ptr, i32, ptr }

@rpc_clients_block = internal global { %struct.notifier_block, [20 x i8] } { %struct.notifier_block { ptr @rpc_pipefs_event, ptr null, i32 1 }, [20 x i8] zeroinitializer }, align 32
@rpc_clids = internal global { %struct.ida, [44 x i8] } { %struct.ida { %struct.xarray { %struct.spinlock { %union.anon { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.25, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108869, ptr null } }, [44 x i8] zeroinitializer }, align 32
@rpc_create.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"net/sunrpc/clnt.c\00", [46 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%pI4\00", [27 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%pI6\00", [27 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_create = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_create to i32), ptr @__kstrtab_rpc_create, ptr @__kstrtabns_rpc_create }, section "___ksymtab_gpl+rpc_create", align 4
@__kstrtab_rpc_clone_client = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clone_client = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clone_client = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clone_client to i32), ptr @__kstrtab_rpc_clone_client, ptr @__kstrtabns_rpc_clone_client }, section "___ksymtab_gpl+rpc_clone_client", align 4
@__kstrtab_rpc_clone_client_set_auth = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clone_client_set_auth = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clone_client_set_auth = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clone_client_set_auth to i32), ptr @__kstrtab_rpc_clone_client_set_auth, ptr @__kstrtabns_rpc_clone_client_set_auth }, section "___ksymtab_gpl+rpc_clone_client_set_auth", align 4
@__kstrtab_rpc_switch_client_transport = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_switch_client_transport = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_switch_client_transport = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_switch_client_transport to i32), ptr @__kstrtab_rpc_switch_client_transport, ptr @__kstrtabns_rpc_switch_client_transport }, section "___ksymtab_gpl+rpc_switch_client_transport", align 4
@__kstrtab_rpc_clnt_iterate_for_each_xprt = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_iterate_for_each_xprt = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_iterate_for_each_xprt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_iterate_for_each_xprt to i32), ptr @__kstrtab_rpc_clnt_iterate_for_each_xprt, ptr @__kstrtabns_rpc_clnt_iterate_for_each_xprt }, section "___ksymtab_gpl+rpc_clnt_iterate_for_each_xprt", align 4
@__kstrtab_rpc_killall_tasks = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_killall_tasks = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_killall_tasks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_killall_tasks to i32), ptr @__kstrtab_rpc_killall_tasks, ptr @__kstrtabns_rpc_killall_tasks }, section "___ksymtab_gpl+rpc_killall_tasks", align 4
@destroy_wait = internal global { %struct.wait_queue_head, [44 x i8] } { %struct.wait_queue_head { %struct.spinlock { %union.anon { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.34, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @destroy_wait, i64 44), ptr getelementptr (i8, ptr @destroy_wait, i64 44) } }, [44 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_shutdown_client = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_shutdown_client = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_shutdown_client = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_shutdown_client to i32), ptr @__kstrtab_rpc_shutdown_client, ptr @__kstrtabns_rpc_shutdown_client }, section "___ksymtab_gpl+rpc_shutdown_client", align 4
@__kstrtab_rpc_release_client = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_release_client = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_release_client = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_release_client to i32), ptr @__kstrtab_rpc_release_client, ptr @__kstrtabns_rpc_release_client }, section "___ksymtab_gpl+rpc_release_client", align 4
@__kstrtab_rpc_bind_new_program = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_bind_new_program = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_bind_new_program = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_bind_new_program to i32), ptr @__kstrtab_rpc_bind_new_program, ptr @__kstrtabns_rpc_bind_new_program }, section "___ksymtab_gpl+rpc_bind_new_program", align 4
@rpc_task_get_xprt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.4 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_task_release_transport = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_task_release_transport = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_task_release_transport = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_task_release_transport to i32), ptr @__kstrtab_rpc_task_release_transport, ptr @__kstrtabns_rpc_task_release_transport }, section "___ksymtab_gpl+rpc_task_release_transport", align 4
@__kstrtab_rpc_run_task = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_run_task = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_run_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_run_task to i32), ptr @__kstrtab_rpc_run_task, ptr @__kstrtabns_rpc_run_task }, section "___ksymtab_gpl+rpc_run_task", align 4
@rpc_default_ops = internal constant { %struct.rpc_call_ops, [16 x i8] } { %struct.rpc_call_ops { ptr null, ptr @rpc_default_callback, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@rpc_call_sync.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_rpc_call_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_call_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_call_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_call_sync to i32), ptr @__kstrtab_rpc_call_sync, ptr @__kstrtabns_rpc_call_sync }, section "___ksymtab_gpl+rpc_call_sync", align 4
@__kstrtab_rpc_call_async = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_call_async = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_call_async = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_call_async to i32), ptr @__kstrtab_rpc_call_async, ptr @__kstrtabns_rpc_call_async }, section "___ksymtab_gpl+rpc_call_async", align 4
@__const.rpc_run_bc_task.task_setup_data = private unnamed_addr constant { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i8, [1 x i8] } { ptr null, ptr null, ptr null, ptr null, ptr null, ptr @rpc_default_ops, ptr null, ptr null, i16 17408, i8 0, [1 x i8] zeroinitializer }, align 4
@rpc_debug = external dso_local local_unnamed_addr global i32, align 4
@rpc_run_bc_task._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.6, ptr @.str, i32 1225, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"RPC: rpc_run_bc_task req= %p\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rpc_run_bc_task\00", [16 x i8] zeroinitializer }, align 32
@rpc_run_bc_task._entry_ptr = internal global ptr @rpc_run_bc_task._entry, section ".printk_index", align 4
@rpc_run_bc_task.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rpc_run_bc_task._entry.7 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.6, ptr @.str, i32 1237, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"RPC: rpc_run_bc_task: task= %p\0A\00", [32 x i8] zeroinitializer }, align 32
@rpc_run_bc_task._entry_ptr.9 = internal global ptr @rpc_run_bc_task._entry.7, section ".printk_index", align 4
@__kstrtab_rpc_prepare_reply_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_prepare_reply_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_prepare_reply_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_prepare_reply_pages to i32), ptr @__kstrtab_rpc_prepare_reply_pages, ptr @__kstrtabns_rpc_prepare_reply_pages }, section "___ksymtab_gpl+rpc_prepare_reply_pages", align 4
@__kstrtab_rpc_call_start = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_call_start = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_call_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_call_start to i32), ptr @__kstrtab_rpc_call_start, ptr @__kstrtabns_rpc_call_start }, section "___ksymtab_gpl+rpc_call_start", align 4
@rpc_peeraddr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_peeraddr = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_peeraddr = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_peeraddr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_peeraddr to i32), ptr @__kstrtab_rpc_peeraddr, ptr @__kstrtabns_rpc_peeraddr }, section "___ksymtab_gpl+rpc_peeraddr", align 4
@rpc_peeraddr2str.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.10 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"unprintable\00", [20 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_peeraddr2str = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_peeraddr2str = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_peeraddr2str = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_peeraddr2str to i32), ptr @__kstrtab_rpc_peeraddr2str, ptr @__kstrtabns_rpc_peeraddr2str }, section "___ksymtab_gpl+rpc_peeraddr2str", align 4
@rpc_localaddr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_localaddr = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_localaddr = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_localaddr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_localaddr to i32), ptr @__kstrtab_rpc_localaddr, ptr @__kstrtabns_rpc_localaddr }, section "___ksymtab_gpl+rpc_localaddr", align 4
@rpc_setbufsize.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_setbufsize = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_setbufsize = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_setbufsize = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_setbufsize to i32), ptr @__kstrtab_rpc_setbufsize, ptr @__kstrtabns_rpc_setbufsize }, section "___ksymtab_gpl+rpc_setbufsize", align 4
@rpc_net_ns.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_net_ns = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_net_ns = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_net_ns = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_net_ns to i32), ptr @__kstrtab_rpc_net_ns, ptr @__kstrtabns_rpc_net_ns }, section "___ksymtab_gpl+rpc_net_ns", align 4
@rpc_max_payload.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_max_payload = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_max_payload = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_max_payload = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_max_payload to i32), ptr @__kstrtab_rpc_max_payload, ptr @__kstrtabns_rpc_max_payload }, section "___ksymtab_gpl+rpc_max_payload", align 4
@rpc_max_bc_payload.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_max_bc_payload = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_max_bc_payload = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_max_bc_payload = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_max_bc_payload to i32), ptr @__kstrtab_rpc_max_bc_payload, ptr @__kstrtabns_rpc_max_bc_payload }, section "___ksymtab_gpl+rpc_max_bc_payload", align 4
@rpc_num_bc_slots.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_num_bc_slots = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_num_bc_slots = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_num_bc_slots = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_num_bc_slots to i32), ptr @__kstrtab_rpc_num_bc_slots, ptr @__kstrtabns_rpc_num_bc_slots }, section "___ksymtab_gpl+rpc_num_bc_slots", align 4
@rpc_force_rebind.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_force_rebind = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_force_rebind = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_force_rebind = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_force_rebind to i32), ptr @__kstrtab_rpc_force_rebind, ptr @__kstrtabns_rpc_force_rebind }, section "___ksymtab_gpl+rpc_force_rebind", align 4
@__kstrtab_rpc_restart_call = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_restart_call = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_restart_call = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_restart_call to i32), ptr @__kstrtab_rpc_restart_call, ptr @__kstrtabns_rpc_restart_call }, section "___ksymtab_gpl+rpc_restart_call", align 4
@__kstrtab_rpc_restart_call_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_restart_call_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_restart_call_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_restart_call_prepare to i32), ptr @__kstrtab_rpc_restart_call_prepare, ptr @__kstrtabns_rpc_restart_call_prepare }, section "___ksymtab_gpl+rpc_restart_call_prepare", align 4
@.str.11 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NULL\00", [27 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"no proc\00", [24 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_call_null = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_call_null = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_call_null = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_call_null to i32), ptr @__kstrtab_rpc_call_null, ptr @__kstrtabns_rpc_call_null }, section "___ksymtab_gpl+rpc_call_null", align 4
@rpc_clnt_test_and_add_xprt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.14, ptr @.str, i32 2791, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\014SUNRPC: reached max allowed number (%d) did not add transport to server: %s\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rpc_clnt_test_and_add_xprt\00", [37 x i8] zeroinitializer }, align 32
@rpc_clnt_test_and_add_xprt._entry_ptr = internal global ptr @rpc_clnt_test_and_add_xprt._entry, section ".printk_index", align 4
@rpc_cb_add_xprt_call_ops = internal constant { %struct.rpc_call_ops, [16 x i8] } { %struct.rpc_call_ops { ptr @rpc_null_call_prepare, ptr @rpc_cb_add_xprt_done, ptr null, ptr @rpc_cb_add_xprt_release }, [16 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_clnt_test_and_add_xprt = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_test_and_add_xprt = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_test_and_add_xprt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_test_and_add_xprt to i32), ptr @__kstrtab_rpc_clnt_test_and_add_xprt, ptr @__kstrtabns_rpc_clnt_test_and_add_xprt }, section "___ksymtab_gpl+rpc_clnt_test_and_add_xprt", align 4
@rpc_clnt_setup_test_and_add_xprt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str, i32 2872, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016RPC:   rpc_clnt_test_xprt failed: %d addr %s not added\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"rpc_clnt_setup_test_and_add_xprt\00", [63 x i8] zeroinitializer }, align 32
@rpc_clnt_setup_test_and_add_xprt._entry_ptr = internal global ptr @rpc_clnt_setup_test_and_add_xprt._entry, section ".printk_index", align 4
@__kstrtab_rpc_clnt_setup_test_and_add_xprt = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_setup_test_and_add_xprt = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_setup_test_and_add_xprt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_setup_test_and_add_xprt to i32), ptr @__kstrtab_rpc_clnt_setup_test_and_add_xprt, ptr @__kstrtabns_rpc_clnt_setup_test_and_add_xprt }, section "___ksymtab_gpl+rpc_clnt_setup_test_and_add_xprt", align 4
@rpc_clnt_add_xprt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_clnt_add_xprt = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_add_xprt = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_add_xprt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_add_xprt to i32), ptr @__kstrtab_rpc_clnt_add_xprt, ptr @__kstrtabns_rpc_clnt_add_xprt }, section "___ksymtab_gpl+rpc_clnt_add_xprt", align 4
@__kstrtab_rpc_set_connect_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_set_connect_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_set_connect_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_set_connect_timeout to i32), ptr @__kstrtab_rpc_set_connect_timeout, ptr @__kstrtabns_rpc_set_connect_timeout }, section "___ksymtab_gpl+rpc_set_connect_timeout", align 4
@rpc_clnt_xprt_switch_put.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_clnt_xprt_switch_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_xprt_switch_put = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_xprt_switch_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_xprt_switch_put to i32), ptr @__kstrtab_rpc_clnt_xprt_switch_put, ptr @__kstrtabns_rpc_clnt_xprt_switch_put }, section "___ksymtab_gpl+rpc_clnt_xprt_switch_put", align 4
@rpc_clnt_xprt_switch_add_xprt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_clnt_xprt_switch_add_xprt = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_xprt_switch_add_xprt = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_xprt_switch_add_xprt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_xprt_switch_add_xprt to i32), ptr @__kstrtab_rpc_clnt_xprt_switch_add_xprt, ptr @__kstrtabns_rpc_clnt_xprt_switch_add_xprt }, section "___ksymtab_gpl+rpc_clnt_xprt_switch_add_xprt", align 4
@rpc_clnt_xprt_switch_has_addr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rpc_clnt_xprt_switch_has_addr = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_xprt_switch_has_addr = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_xprt_switch_has_addr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_xprt_switch_has_addr to i32), ptr @__kstrtab_rpc_clnt_xprt_switch_has_addr, ptr @__kstrtabns_rpc_clnt_xprt_switch_has_addr }, section "___ksymtab_gpl+rpc_clnt_xprt_switch_has_addr", align 4
@sunrpc_net_id = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_rpc_clnt_swap_activate = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_swap_activate = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_swap_activate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_swap_activate to i32), ptr @__kstrtab_rpc_clnt_swap_activate, ptr @__kstrtabns_rpc_clnt_swap_activate }, section "___ksymtab_gpl+rpc_clnt_swap_activate", align 4
@__kstrtab_rpc_clnt_swap_deactivate = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_clnt_swap_deactivate = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_clnt_swap_deactivate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_clnt_swap_deactivate to i32), ptr @__kstrtab_rpc_clnt_swap_deactivate, ptr @__kstrtabns_rpc_clnt_swap_deactivate }, section "___ksymtab_gpl+rpc_clnt_swap_deactivate", align 4
@__rpc_clnt_handle_event._entry = internal constant %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str, i32 198, ptr null, ptr null }, align 1
@.str.17 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\013%s: unknown event: %ld\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"__rpc_clnt_handle_event\00", [40 x i8] zeroinitializer }, align 32
@__rpc_clnt_handle_event._entry_ptr = internal global ptr @__rpc_clnt_handle_event._entry, section ".printk_index", align 4
@rpc_setup_pipedir_sb.clntid = internal global { i32, [28 x i8] } zeroinitializer, align 32
@rpc_setup_pipedir_sb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str, i32 128, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016RPC: pipefs directory doesn't exist: %s\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rpc_setup_pipedir_sb\00", [43 x i8] zeroinitializer }, align 32
@rpc_setup_pipedir_sb._entry_ptr = internal global ptr @rpc_setup_pipedir_sb._entry, section ".printk_index", align 4
@.str.21 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"clnt%x\00", [25 x i8] zeroinitializer }, align 32
@rpc_setup_pipedir_sb._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.20, ptr @.str, i32 141, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\016RPC: Couldn't create pipefs entry %s/%s, error %ld\0A\00", [42 x i8] zeroinitializer }, align 32
@rpc_setup_pipedir_sb._entry_ptr.24 = internal global ptr @rpc_setup_pipedir_sb._entry.22, section ".printk_index", align 4
@.str.25 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rpc_clids.xa_lock\00", [46 x i8] zeroinitializer }, align 32
@rpc_create_xprt.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rpc_new_client.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.26 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&clnt->cl_lock\00", [17 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/cred.h\00", [43 x i8] zeroinitializer }, align 32
@__tracepoint_rpc_clnt_new = external dso_local global %struct.tracepoint, align 4
@.str.28 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/sunrpc.h\00", [34 x i8] zeroinitializer }, align 32
@trace_rpc_clnt_new.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.29 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@__tracepoint_rpc_clnt_new_err = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_new_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rpc_clone_client.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rpc_clone_client.__warned.30 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_clnt_clone_err = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_clone_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_clnt_set_transport.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.31 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"suspicious rcu_dereference_protected() usage\00", [51 x i8] zeroinitializer }, align 32
@rpc_client_register._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str, i32 319, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"RPC:       Couldn't create auth handle (flavor %u)\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rpc_client_register\00", [44 x i8] zeroinitializer }, align 32
@rpc_client_register._entry_ptr = internal global ptr @rpc_client_register._entry, section ".printk_index", align 4
@__tracepoint_rpc_clnt_replace_xprt = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_replace_xprt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_clnt_replace_xprt_err = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_replace_xprt_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_clnt_xprt_iter_init.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_clnt_killall = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_killall.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_clnt_shutdown = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_shutdown.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.34 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"destroy_wait.lock\00", [46 x i8] zeroinitializer }, align 32
@rpc_free_client.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.35 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"(work_completion)(&clnt->cl_work)\00", [62 x i8] zeroinitializer }, align 32
@__tracepoint_rpc_clnt_release = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_release.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_clnt_free = external dso_local global %struct.tracepoint, align 4
@trace_rpc_clnt_free.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.36 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.38 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@rpc_task_release_xprt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_task_get_first_xprt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_xdr_reply_pages = external dso_local global %struct.tracepoint, align 4
@trace_rpc_xdr_reply_pages.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_sockname._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.40, ptr @.str, i32 1345, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"RPC:       can't create UDP socket (%d)\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rpc_sockname\00", [19 x i8] zeroinitializer }, align 32
@rpc_sockname._entry_ptr = internal global ptr @rpc_sockname._entry, section ".printk_index", align 4
@rpc_inaddr_loopback = internal constant { %struct.sockaddr_in, [16 x i8] } { %struct.sockaddr_in { i16 2, i16 0, %struct.in_addr zeroinitializer, [8 x i8] zeroinitializer }, [16 x i8] zeroinitializer }, align 32
@rpc_sockname._entry.41 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.40, ptr @.str, i32 1365, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"RPC:       can't bind UDP socket (%d)\0A\00", [57 x i8] zeroinitializer }, align 32
@rpc_sockname._entry_ptr.43 = internal global ptr @rpc_sockname._entry.41, section ".printk_index", align 4
@rpc_sockname._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.40, ptr @.str, i32 1371, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RPC:       can't connect UDP socket (%d)\0A\00", [54 x i8] zeroinitializer }, align 32
@rpc_sockname._entry_ptr.46 = internal global ptr @rpc_sockname._entry.44, section ".printk_index", align 4
@rpc_sockname._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.40, ptr @.str, i32 1377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"RPC:       getsockname failed (%d)\0A\00", [60 x i8] zeroinitializer }, align 32
@rpc_sockname._entry_ptr.49 = internal global ptr @rpc_sockname._entry.47, section ".printk_index", align 4
@rpc_sockname._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.40, ptr @.str, i32 1386, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"RPC:       %s succeeded\0A\00", [39 x i8] zeroinitializer }, align 32
@rpc_sockname._entry_ptr.52 = internal global ptr @rpc_sockname._entry.50, section ".printk_index", align 4
@rpc_in6addr_loopback = internal constant { { i16, i16, i32, { { [16 x i8] } }, i32 }, [36 x i8] } { { i16, i16, i32, { { [16 x i8] } }, i32 } { i16 10, i16 0, i32 0, { { [16 x i8] } } zeroinitializer, i32 0 }, [36 x i8] zeroinitializer }, align 32
@rpc_anyaddr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.55, ptr @.str, i32 1419, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"RPC:       %s: address family not supported\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"rpc_anyaddr\00", [20 x i8] zeroinitializer }, align 32
@rpc_anyaddr._entry_ptr = internal global ptr @rpc_anyaddr._entry, section ".printk_index", align 4
@rpc_anyaddr._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.55, ptr @.str, i32 1422, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"RPC:       %s: succeeded\0A\00", [38 x i8] zeroinitializer }, align 32
@rpc_anyaddr._entry_ptr.58 = internal global ptr @rpc_anyaddr._entry.56, section ".printk_index", align 4
@__tracepoint_rpc_request = external dso_local global %struct.tracepoint, align 4
@trace_rpc_request.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_bad_callhdr = external dso_local global %struct.tracepoint, align 4
@trace_rpc_bad_callhdr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@call_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.60, ptr @.str, i32 2371, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: RPC call returned error %d\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"call_status\00", [20 x i8] zeroinitializer }, align 32
@call_status._entry_ptr = internal global ptr @call_status._entry, section ".printk_index", align 4
@call_decode._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.61, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.call_decode = private unnamed_addr constant [12 x i8] c"call_decode\00", align 1
@call_decode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @__func__.call_decode, ptr @.str, i32 2472, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\015%s: server %s OK\0A\00", [44 x i8] zeroinitializer }, align 32
@call_decode._entry_ptr = internal global ptr @call_decode._entry, section ".printk_index", align 4
@__tracepoint_rpc_xdr_recvfrom = external dso_local global %struct.tracepoint, align 4
@trace_rpc_xdr_recvfrom.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_decode_header._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str, i32 2668, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014RPC: server %s requires stronger authentication.\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rpc_decode_header\00", [46 x i8] zeroinitializer }, align 32
@rpc_decode_header._entry_ptr = internal global ptr @rpc_decode_header._entry, section ".printk_index", align 4
@__tracepoint_rpc__prog_unavail = external dso_local global %struct.tracepoint, align 4
@trace_rpc__prog_unavail.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__prog_mismatch = external dso_local global %struct.tracepoint, align 4
@trace_rpc__prog_mismatch.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__proc_unavail = external dso_local global %struct.tracepoint, align 4
@trace_rpc__proc_unavail.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__garbage_args = external dso_local global %struct.tracepoint, align 4
@trace_rpc__garbage_args.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__unparsable = external dso_local global %struct.tracepoint, align 4
@trace_rpc__unparsable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_bad_verifier = external dso_local global %struct.tracepoint, align 4
@trace_rpc_bad_verifier.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__mismatch = external dso_local global %struct.tracepoint, align 4
@trace_rpc__mismatch.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__stale_creds = external dso_local global %struct.tracepoint, align 4
@trace_rpc__stale_creds.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__bad_creds = external dso_local global %struct.tracepoint, align 4
@trace_rpc__bad_creds.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc__auth_tooweak = external dso_local global %struct.tracepoint, align 4
@trace_rpc__auth_tooweak.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_call_status = external dso_local global %struct.tracepoint, align 4
@trace_rpc_call_status.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xprt_ping = external dso_local global %struct.tracepoint, align 4
@trace_xprt_ping.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_check_timeout._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.61, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.rpc_check_timeout = private unnamed_addr constant [18 x i8] c"rpc_check_timeout\00", align 1
@rpc_check_timeout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @__func__.rpc_check_timeout, ptr @.str, i32 2426, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\015%s: server %s not responding, timed out\0A\00", [53 x i8] zeroinitializer }, align 32
@rpc_check_timeout._entry_ptr = internal global ptr @rpc_check_timeout._entry, section ".printk_index", align 4
@rpc_check_timeout._rs.66 = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.61, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@rpc_check_timeout._entry.67 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.68, ptr @__func__.rpc_check_timeout, ptr @.str, i32 2441, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\015%s: server %s not responding, still trying\0A\00", [50 x i8] zeroinitializer }, align 32
@rpc_check_timeout._entry_ptr.69 = internal global ptr @rpc_check_timeout._entry.67, section ".printk_index", align 4
@__tracepoint_rpc_timeout_status = external dso_local global %struct.tracepoint, align 4
@trace_rpc_timeout_status.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_call_rpcerror = external dso_local global %struct.tracepoint, align 4
@trace_rpc_call_rpcerror.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpcb_prog_unavail_err = external dso_local global %struct.tracepoint, align 4
@trace_rpcb_prog_unavail_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpcb_timeout_err = external dso_local global %struct.tracepoint, align 4
@trace_rpcb_timeout_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpcb_bind_version_err = external dso_local global %struct.tracepoint, align 4
@trace_rpcb_bind_version_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpcb_unreachable_err = external dso_local global %struct.tracepoint, align 4
@trace_rpcb_unreachable_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpcb_unrecognized_err = external dso_local global %struct.tracepoint, align 4
@trace_rpcb_unrecognized_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@call_connect_status.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_connect_status = external dso_local global %struct.tracepoint, align 4
@trace_rpc_connect_status.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_buf_alloc = external dso_local global %struct.tracepoint, align 4
@trace_rpc_buf_alloc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_retry_refresh_status = external dso_local global %struct.tracepoint, align 4
@trace_rpc_retry_refresh_status.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rpc_refresh_status = external dso_local global %struct.tracepoint, align 4
@trace_rpc_refresh_status.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@call_bc_transmit_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.71, ptr @.str, i32 2300, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\015RPC: Could not send backchannel reply error: %d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"call_bc_transmit_status\00", [40 x i8] zeroinitializer }, align 32
@call_bc_transmit_status._entry_ptr = internal global ptr @call_bc_transmit_status._entry, section ".printk_index", align 4
@call_bc_transmit_status._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.71, ptr @.str, i32 2310, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@call_bc_transmit_status._entry_ptr.73 = internal global ptr @call_bc_transmit_status._entry.72, section ".printk_index", align 4
@rpcproc_null = internal constant { %struct.rpc_procinfo, [32 x i8] } { %struct.rpc_procinfo { i32 0, ptr @rpcproc_encode_null, ptr @rpcproc_decode_null, i32 0, i32 0, i32 0, i32 0, ptr null }, [32 x i8] zeroinitializer }, align 32
@__const.rpc_call_null_helper.msg = private unnamed_addr constant %struct.rpc_message { ptr @rpcproc_null, ptr null, ptr null, ptr null }, align 4
@rpc_null_ops = internal constant { %struct.rpc_call_ops, [16 x i8] } { %struct.rpc_call_ops { ptr @rpc_null_call_prepare, ptr @rpc_default_callback, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@net_generic.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.74 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/net/netns/generic.h\00", [36 x i8] zeroinitializer }, align 32
@rpc_show_header._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str, i32 3018, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016-pid- flgs status -client- --rqstp- -timeout ---ops--\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rpc_show_header\00", [16 x i8] zeroinitializer }, align 32
@rpc_show_header._entry_ptr = internal global ptr @rpc_show_header._entry, section ".printk_index", align 4
@.str.77 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@rpc_show_task._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str, i32 3033, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016%5u %04x %6d %8p %8p %8ld %8p %sv%u %s a:%ps q:%s\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rpc_show_task\00", [18 x i8] zeroinitializer }, align 32
@rpc_show_task._entry_ptr = internal global ptr @rpc_show_task._entry, section ".printk_index", align 4
@.str.80 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 16, i64 1, i64 2, i64 10]
@__sancov_gen_cov_switch_values.81 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.82 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.83 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.84 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.85 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.86 = internal global [4 x i64] [i64 2, i64 32, i64 4294967284, i64 4294967285]
@__sancov_gen_cov_switch_values.87 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 4294967169, i64 4294967186, i64 4294967285]
@__sancov_gen_cov_switch_values.88 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967284]
@__sancov_gen_cov_switch_values.89 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 4294967169, i64 4294967284, i64 4294967285]
@__sancov_gen_cov_switch_values.90 = internal global [17 x i64] [i64 15, i64 32, i64 4294967183, i64 4294967184, i64 4294967185, i64 4294967189, i64 4294967191, i64 4294967192, i64 4294967193, i64 4294967195, i64 4294967196, i64 4294967198, i64 4294967222, i64 4294967239, i64 4294967264, i64 4294967285, i64 4294967295]
@__sancov_gen_cov_switch_values.91 = internal global [16 x i64] [i64 14, i64 32, i64 4294967183, i64 4294967184, i64 4294967185, i64 4294967186, i64 4294967189, i64 4294967192, i64 4294967193, i64 4294967195, i64 4294967196, i64 4294967198, i64 4294967264, i64 4294967285, i64 4294967291, i64 4294967295]
@__sancov_gen_cov_switch_values.92 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967167, i64 4294967285]
@__sancov_gen_cov_switch_values.93 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.94 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.95 = internal global [9 x i64] [i64 7, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 13, i64 14]
@__sancov_gen_cov_switch_values.96 = internal global [18 x i64] [i64 16, i64 32, i64 4294967183, i64 4294967184, i64 4294967185, i64 4294967186, i64 4294967189, i64 4294967191, i64 4294967192, i64 4294967193, i64 4294967195, i64 4294967196, i64 4294967200, i64 4294967203, i64 4294967264, i64 4294967283, i64 4294967284, i64 4294967285]
@__sancov_gen_cov_switch_values.97 = internal global [15 x i64] [i64 13, i64 32, i64 4294967183, i64 4294967185, i64 4294967186, i64 4294967189, i64 4294967191, i64 4294967192, i64 4294967193, i64 4294967195, i64 4294967196, i64 4294967198, i64 4294967225, i64 4294967264, i64 4294967285]
@__sancov_gen_cov_switch_values.98 = internal global [16 x i64] [i64 14, i64 32, i64 0, i64 4294967183, i64 4294967184, i64 4294967185, i64 4294967186, i64 4294967189, i64 4294967191, i64 4294967192, i64 4294967195, i64 4294967196, i64 4294967198, i64 4294967239, i64 4294967264, i64 4294967285]
@___asan_gen_.99 = private unnamed_addr constant [18 x i8] c"rpc_clients_block\00", align 1
@___asan_gen_.101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 249, i32 30 }
@___asan_gen_.102 = private unnamed_addr constant [10 x i8] c"rpc_clids\00", align 1
@___asan_gen_.107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 534, i32 3 }
@___asan_gen_.110 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 561, i32 45 }
@___asan_gen_.113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 565, i32 45 }
@___asan_gen_.116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 569, i32 45 }
@___asan_gen_.117 = private unnamed_addr constant [13 x i8] c"destroy_wait\00", align 1
@___asan_gen_.122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 996, i32 8 }
@___asan_gen_.123 = private unnamed_addr constant [16 x i8] c"rpc_default_ops\00", align 1
@___asan_gen_.125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1117, i32 34 }
@___asan_gen_.134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1225, i32 2 }
@___asan_gen_.140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1237, i32 2 }
@___asan_gen_.143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1314, i32 10 }
@___asan_gen_.146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1604, i32 11 }
@___asan_gen_.149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1606, i32 10 }
@___asan_gen_.158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2789, i32 3 }
@___asan_gen_.159 = private unnamed_addr constant [25 x i8] c"rpc_cb_add_xprt_call_ops\00", align 1
@___asan_gen_.161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2767, i32 34 }
@___asan_gen_.170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2871, i32 2 }
@___asan_gen_.176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 198, i32 3 }
@___asan_gen_.177 = private unnamed_addr constant [7 x i8] c"clntid\00", align 1
@___asan_gen_.179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 121, i32 18 }
@___asan_gen_.188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 128, i32 3 }
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 132, i32 32 }
@___asan_gen_.197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 139, i32 3 }
@___asan_gen_.200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 336, i32 8 }
@___asan_gen_.206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 405, i32 2 }
@___asan_gen_.208 = private unnamed_addr constant [24 x i8] c"../include/linux/cred.h\00", align 1
@___asan_gen_.209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.208, i32 253, i32 2 }
@___asan_gen_.211 = private unnamed_addr constant [33 x i8] c"../include/trace/events/sunrpc.h\00", align 1
@___asan_gen_.212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.211, i32 142, i32 1 }
@___asan_gen_.214 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.214, i32 108, i32 2 }
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 271, i32 8 }
@___asan_gen_.227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 318, i32 3 }
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 55, i32 8 }
@___asan_gen_.231 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 910, i32 2 }
@___asan_gen_.242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.244, i32 695, i32 2 }
@___asan_gen_.244 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.244, i32 723, i32 2 }
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1345, i32 3 }
@___asan_gen_.255 = private unnamed_addr constant [20 x i8] c"rpc_inaddr_loopback\00", align 1
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1318, i32 33 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1365, i32 3 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1371, i32 3 }
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1377, i32 3 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1386, i32 2 }
@___asan_gen_.282 = private unnamed_addr constant [21 x i8] c"rpc_in6addr_loopback\00", align 1
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1323, i32 34 }
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1418, i32 3 }
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 1422, i32 2 }
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2370, i32 4 }
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2470, i32 4 }
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2667, i32 3 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2423, i32 4 }
@___asan_gen_.339 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2438, i32 4 }
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2299, i32 3 }
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2309, i32 3 }
@___asan_gen_.360 = private unnamed_addr constant [13 x i8] c"rpcproc_null\00", align 1
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2687, i32 34 }
@___asan_gen_.363 = private unnamed_addr constant [13 x i8] c"rpc_null_ops\00", align 1
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 2699, i32 34 }
@___asan_gen_.367 = private unnamed_addr constant [31 x i8] c"../include/net/netns/generic.h\00", align 1
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.367, i32 45, i32 7 }
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 3017, i32 2 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 3024, i32 26 }
@___asan_gen_.381 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.388 = private constant [21 x i8] c"../net/sunrpc/clnt.c\00", align 1
@___asan_gen_.389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.388, i32 3029, i32 2 }
@___asan_gen_.390 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.391 = private unnamed_addr constant [32 x i8] c"../include/linux/sunrpc/sched.h\00", align 1
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.391, i32 275, i32 37 }
@llvm.compiler.used = appending global [159 x ptr] [ptr @__ksymtab_rpc_bind_new_program, ptr @__ksymtab_rpc_call_async, ptr @__ksymtab_rpc_call_null, ptr @__ksymtab_rpc_call_start, ptr @__ksymtab_rpc_call_sync, ptr @__ksymtab_rpc_clnt_add_xprt, ptr @__ksymtab_rpc_clnt_iterate_for_each_xprt, ptr @__ksymtab_rpc_clnt_setup_test_and_add_xprt, ptr @__ksymtab_rpc_clnt_swap_activate, ptr @__ksymtab_rpc_clnt_swap_deactivate, ptr @__ksymtab_rpc_clnt_test_and_add_xprt, ptr @__ksymtab_rpc_clnt_xprt_switch_add_xprt, ptr @__ksymtab_rpc_clnt_xprt_switch_has_addr, ptr @__ksymtab_rpc_clnt_xprt_switch_put, ptr @__ksymtab_rpc_clone_client, ptr @__ksymtab_rpc_clone_client_set_auth, ptr @__ksymtab_rpc_create, ptr @__ksymtab_rpc_force_rebind, ptr @__ksymtab_rpc_killall_tasks, ptr @__ksymtab_rpc_localaddr, ptr @__ksymtab_rpc_max_bc_payload, ptr @__ksymtab_rpc_max_payload, ptr @__ksymtab_rpc_net_ns, ptr @__ksymtab_rpc_num_bc_slots, ptr @__ksymtab_rpc_peeraddr, ptr @__ksymtab_rpc_peeraddr2str, ptr @__ksymtab_rpc_prepare_reply_pages, ptr @__ksymtab_rpc_release_client, ptr @__ksymtab_rpc_restart_call, ptr @__ksymtab_rpc_restart_call_prepare, ptr @__ksymtab_rpc_run_task, ptr @__ksymtab_rpc_set_connect_timeout, ptr @__ksymtab_rpc_setbufsize, ptr @__ksymtab_rpc_shutdown_client, ptr @__ksymtab_rpc_switch_client_transport, ptr @__ksymtab_rpc_task_release_transport, ptr @__rpc_clnt_handle_event._entry, ptr @__rpc_clnt_handle_event._entry_ptr, ptr @call_bc_transmit_status._entry, ptr @call_bc_transmit_status._entry.72, ptr @call_bc_transmit_status._entry_ptr, ptr @call_bc_transmit_status._entry_ptr.73, ptr @call_decode._entry, ptr @call_decode._entry_ptr, ptr @call_status._entry, ptr @call_status._entry_ptr, ptr @rpc_anyaddr._entry, ptr @rpc_anyaddr._entry.56, ptr @rpc_anyaddr._entry_ptr, ptr @rpc_anyaddr._entry_ptr.58, ptr @rpc_check_timeout._entry, ptr @rpc_check_timeout._entry.67, ptr @rpc_check_timeout._entry_ptr, ptr @rpc_check_timeout._entry_ptr.69, ptr @rpc_client_register._entry, ptr @rpc_client_register._entry_ptr, ptr @rpc_clnt_setup_test_and_add_xprt._entry, ptr @rpc_clnt_setup_test_and_add_xprt._entry_ptr, ptr @rpc_clnt_test_and_add_xprt._entry, ptr @rpc_clnt_test_and_add_xprt._entry_ptr, ptr @rpc_decode_header._entry, ptr @rpc_decode_header._entry_ptr, ptr @rpc_run_bc_task._entry, ptr @rpc_run_bc_task._entry.7, ptr @rpc_run_bc_task._entry_ptr, ptr @rpc_run_bc_task._entry_ptr.9, ptr @rpc_setup_pipedir_sb._entry, ptr @rpc_setup_pipedir_sb._entry.22, ptr @rpc_setup_pipedir_sb._entry_ptr, ptr @rpc_setup_pipedir_sb._entry_ptr.24, ptr @rpc_show_header._entry, ptr @rpc_show_header._entry_ptr, ptr @rpc_show_task._entry, ptr @rpc_show_task._entry_ptr, ptr @rpc_sockname._entry, ptr @rpc_sockname._entry.41, ptr @rpc_sockname._entry.44, ptr @rpc_sockname._entry.47, ptr @rpc_sockname._entry.50, ptr @rpc_sockname._entry_ptr, ptr @rpc_sockname._entry_ptr.43, ptr @rpc_sockname._entry_ptr.46, ptr @rpc_sockname._entry_ptr.49, ptr @rpc_sockname._entry_ptr.52, ptr @rpc_clients_block, ptr @rpc_clids, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @destroy_wait, ptr @.str.4, ptr @rpc_default_ops, ptr @.str.5, ptr @.str.6, ptr @.str.8, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @rpc_cb_add_xprt_call_ops, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @rpc_setup_pipedir_sb.clntid, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @.str.25, ptr @rpc_new_client.__key, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @rpc_free_client.__key, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @rpc_inaddr_loopback, ptr @.str.42, ptr @.str.45, ptr @.str.48, ptr @.str.51, ptr @rpc_in6addr_loopback, ptr @.str.54, ptr @.str.55, ptr @.str.57, ptr @.str.59, ptr @.str.60, ptr @call_decode._rs, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @rpc_check_timeout._rs, ptr @.str.65, ptr @rpc_check_timeout._rs.66, ptr @.str.68, ptr @.str.70, ptr @.str.71, ptr @rpcproc_null, ptr @rpc_null_ops, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80], section "llvm.metadata"
@0 = internal global [98 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_clients_block to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.99 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_clids to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.102 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @destroy_wait to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.117 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_default_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.123 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_run_bc_task._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_run_bc_task._entry.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_clnt_test_and_add_xprt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_cb_add_xprt_call_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_clnt_setup_test_and_add_xprt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_setup_pipedir_sb.clntid to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_setup_pipedir_sb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_setup_pipedir_sb._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_new_client.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_client_register._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_free_client.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_sockname._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_inaddr_loopback to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_sockname._entry.41 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_sockname._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_sockname._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_sockname._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_in6addr_loopback to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_anyaddr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_anyaddr._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @call_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @call_decode._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @call_decode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_decode_header._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_check_timeout._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_check_timeout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_check_timeout._rs.66 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_check_timeout._entry.67 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @call_bc_transmit_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @call_bc_transmit_status._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpcproc_null to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_null_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_show_header._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_show_task._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_clients_notifier_register() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rpc_pipefs_notifier_register(ptr noundef nonnull @rpc_clients_block) #18
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpc_pipefs_notifier_register(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_clients_notifier_unregister() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rpc_pipefs_notifier_unregister(ptr noundef nonnull @rpc_clients_block) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_pipefs_notifier_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_cleanup_clids() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ida_destroy(ptr noundef nonnull @rpc_clids) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_create(ptr nocapture noundef readonly %args) #0 align 64 {
entry:
  %xprtargs = alloca %struct.xprt_create, align 4
  %servername4 = alloca [48 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %xprtargs) #18
  %protocol = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 1
  %0 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %protocol, align 4
  %2 = ptrtoint ptr %xprtargs to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %xprtargs, align 4
  %net = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 1
  %3 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %args, align 4
  %5 = ptrtoint ptr %net to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %net, align 4
  %srcaddr = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 2
  %saddress = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 4
  %6 = ptrtoint ptr %saddress to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %saddress, align 4
  %8 = ptrtoint ptr %srcaddr to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %srcaddr, align 4
  %dstaddr = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 3
  %address = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 2
  %9 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %address, align 4
  %11 = ptrtoint ptr %dstaddr to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %10, ptr %dstaddr, align 4
  %addrlen = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 4
  %addrsize = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 3
  %12 = ptrtoint ptr %addrsize to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %addrsize, align 4
  %14 = ptrtoint ptr %addrlen to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %addrlen, align 4
  %servername = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 5
  %servername2 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 6
  %15 = ptrtoint ptr %servername2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %servername2, align 4
  %17 = ptrtoint ptr %servername to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %servername, align 4
  %bc_xprt = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 6
  %bc_xprt3 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 15
  %18 = ptrtoint ptr %bc_xprt3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %bc_xprt3, align 4
  %20 = ptrtoint ptr %bc_xprt to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %bc_xprt, align 4
  %bc_xps = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 7
  %21 = ptrtoint ptr %bc_xps to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %bc_xps, align 4
  %flags = getelementptr inbounds %struct.xprt_create, ptr %xprtargs, i32 0, i32 8
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %flags, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %servername4) #18
  %23 = call ptr @memset(ptr %servername4, i32 255, i32 48)
  %tobool.not = icmp eq ptr %19, null
  br i1 %tobool.not, label %entry.if.end50_crit_edge, label %if.then

entry.if.end50_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %tobool7.not = icmp sgt i32 %1, -1
  br i1 %tobool7.not, label %land.rhs, label %if.then.if.end37_crit_edge

if.then.if.end37_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end37

land.rhs:                                         ; preds = %if.then
  %.b165 = load i1, ptr @rpc_create.__already_done, align 1
  br i1 %.b165, label %land.rhs.if.end37_crit_edge, label %if.then16, !prof !419

land.rhs.if.end37_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end37

if.then16:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_create.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 534, i32 noundef 9, ptr noundef null) #18
  br label %if.end37

if.end37:                                         ; preds = %if.then16, %land.rhs.if.end37_crit_edge, %if.then.if.end37_crit_edge
  %24 = ptrtoint ptr %bc_xprt3 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bc_xprt3, align 4
  %xpt_bc_xprt = getelementptr inbounds %struct.svc_xprt, ptr %25, i32 0, i32 21
  %26 = ptrtoint ptr %xpt_bc_xprt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %xpt_bc_xprt, align 4
  %tobool46.not = icmp eq ptr %27, null
  br i1 %tobool46.not, label %if.end37.if.end50_crit_edge, label %if.then47

if.end37.if.end50_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.then47:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #20
  %call = tail call ptr @xprt_get(ptr noundef nonnull %27) #18
  %call48 = tail call fastcc ptr @rpc_create_xprt(ptr noundef %args, ptr noundef nonnull %27)
  br label %cleanup124

if.end50:                                         ; preds = %if.end37.if.end50_crit_edge, %entry.if.end50_crit_edge
  %flags51 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 13
  %28 = ptrtoint ptr %flags51 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags51, align 4
  %and52 = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.end50.if.end56_crit_edge, label %if.then54

if.end50.if.end56_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end56

if.then54:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #20
  %30 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags, align 4
  %or = or i32 %31, 1
  store i32 %or, ptr %flags, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end50.if.end56_crit_edge
  %and58 = and i32 %29, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end56.if.end63_crit_edge, label %if.then60

if.end56.if.end63_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end63

if.then60:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #20
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags, align 4
  %or62 = or i32 %33, 2
  store i32 %or62, ptr %flags, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then60, %if.end56.if.end63_crit_edge
  %34 = ptrtoint ptr %servername to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %servername, align 4
  %cmp = icmp eq ptr %35, null
  br i1 %cmp, label %if.then65, label %if.end63.if.end83_crit_edge

if.end63.if.end83_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end83

if.then65:                                        ; preds = %if.end63
  %36 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %address, align 4
  %38 = ptrtoint ptr %servername4 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 0, ptr %servername4, align 1
  %39 = ptrtoint ptr %37 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %37, align 2
  %41 = zext i16 %40 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values)
  switch i16 %40, label %if.then65.cleanup124_crit_edge [
    i16 1, label %sw.bb
    i16 2, label %sw.bb72
    i16 10, label %sw.bb75
  ]

if.then65.cleanup124_crit_edge:                   ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

sw.bb:                                            ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #20
  %sun_path = getelementptr inbounds %struct.sockaddr_un, ptr %37, i32 0, i32 1
  %call71 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %servername4, i32 noundef 48, ptr noundef nonnull @.str.1, ptr noundef %sun_path)
  br label %cleanup.thread

sw.bb72:                                          ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #20
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, ptr %37, i32 0, i32 2
  %call74 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %servername4, i32 noundef 48, ptr noundef nonnull @.str.2, ptr noundef %sin_addr)
  br label %cleanup.thread

sw.bb75:                                          ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #20
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, ptr %37, i32 0, i32 3
  %call77 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %servername4, i32 noundef 48, ptr noundef nonnull @.str.3, ptr noundef %sin6_addr)
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %sw.bb75, %sw.bb72, %sw.bb
  %42 = ptrtoint ptr %servername to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %servername4, ptr %servername, align 4
  br label %if.end83

if.end83:                                         ; preds = %cleanup.thread, %if.end63.if.end83_crit_edge
  %call84 = call ptr @xprt_create_transport(ptr noundef nonnull %xprtargs) #18
  %cmp.i = icmp ugt ptr %call84, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end83.cleanup124_crit_edge, label %if.end87

if.end83.cleanup124_crit_edge:                    ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

if.end87:                                         ; preds = %if.end83
  %resvport = getelementptr inbounds %struct.rpc_xprt, ptr %call84, i32 0, i32 19
  %43 = ptrtoint ptr %resvport to i32
  call void @__asan_load1_noabort(i32 %43)
  %bf.load = load i8, ptr %resvport, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %resvport, align 4
  %44 = ptrtoint ptr %flags51 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flags51, align 4
  %and89 = and i32 %45, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  br i1 %tobool90.not, label %if.end87.if.end96_crit_edge, label %if.then91

if.end87.if.end96_crit_edge:                      ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end96

if.then91:                                        ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #20
  %bf.clear = and i8 %bf.load, 127
  %46 = ptrtoint ptr %resvport to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %bf.clear, ptr %resvport, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then91, %if.end87.if.end96_crit_edge
  %47 = ptrtoint ptr %resvport to i32
  call void @__asan_load1_noabort(i32 %47)
  %bf.load97 = load i8, ptr %resvport, align 4
  %bf.clear98 = and i8 %bf.load97, -65
  store i8 %bf.clear98, ptr %resvport, align 4
  %48 = ptrtoint ptr %flags51 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flags51, align 4
  %and101 = and i32 %49, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and101)
  %tobool102.not = icmp eq i32 %and101, 0
  br i1 %tobool102.not, label %if.end96.if.end108_crit_edge, label %if.then103

if.end96.if.end108_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end108

if.then103:                                       ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #20
  %bf.set107 = or i8 %bf.load97, 64
  %50 = ptrtoint ptr %resvport to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %bf.set107, ptr %resvport, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then103, %if.end96.if.end108_crit_edge
  %call109 = call fastcc ptr @rpc_create_xprt(ptr noundef %args, ptr noundef %call84)
  %cmp.i166 = icmp ugt ptr %call109, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i166, label %if.end108.cleanup124_crit_edge, label %lor.lhs.false

if.end108.cleanup124_crit_edge:                   ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

lor.lhs.false:                                    ; preds = %if.end108
  %nconnect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 12
  %51 = ptrtoint ptr %nconnect to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %nconnect, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %52)
  %cmp112 = icmp ult i32 %52, 2
  br i1 %cmp112, label %lor.lhs.false.cleanup124_crit_edge, label %for.cond.preheader

lor.lhs.false.cleanup124_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

for.cond.preheader:                               ; preds = %lor.lhs.false
  %53 = ptrtoint ptr %nconnect to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %nconnect, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp117169.not = icmp eq i32 %54, 1
  br i1 %cmp117169.not, label %for.cond.preheader.cleanup124_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.cleanup124_crit_edge:          ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

for.cond:                                         ; preds = %for.body
  %inc = add nuw i32 %i.0170, 1
  %55 = ptrtoint ptr %nconnect to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %nconnect, align 4
  %sub = add i32 %56, -1
  %cmp117 = icmp ult i32 %inc, %sub
  br i1 %cmp117, label %for.cond.for.body_crit_edge, label %for.cond.cleanup124_crit_edge

for.cond.cleanup124_crit_edge:                    ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0170 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call119 = call i32 @rpc_clnt_add_xprt(ptr noundef %call109, ptr noundef nonnull %xprtargs, ptr noundef null, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call119)
  %cmp120 = icmp slt i32 %call119, 0
  br i1 %cmp120, label %for.body.cleanup124_crit_edge, label %for.cond

for.body.cleanup124_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup124

cleanup124:                                       ; preds = %for.body.cleanup124_crit_edge, %for.cond.cleanup124_crit_edge, %for.cond.preheader.cleanup124_crit_edge, %lor.lhs.false.cleanup124_crit_edge, %if.end108.cleanup124_crit_edge, %if.end83.cleanup124_crit_edge, %if.then65.cleanup124_crit_edge, %if.then47
  %retval.1 = phi ptr [ %call48, %if.then47 ], [ %call84, %if.end83.cleanup124_crit_edge ], [ %call109, %lor.lhs.false.cleanup124_crit_edge ], [ %call109, %if.end108.cleanup124_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then65.cleanup124_crit_edge ], [ %call109, %for.cond.preheader.cleanup124_crit_edge ], [ %call109, %for.cond.cleanup124_crit_edge ], [ %call109, %for.body.cleanup124_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %servername4) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %xprtargs) #18
  ret ptr %retval.1
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @rpc_create_xprt(ptr nocapture noundef readonly %args, ptr noundef %xprt) unnamed_addr #0 align 64 {
entry:
  %msg.i.i = alloca %struct.rpc_message, align 4
  %task_setup_data.i.i = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %bc_xprt = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 15
  %0 = ptrtoint ptr %bc_xprt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bc_xprt, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %xpt_bc_xps = getelementptr inbounds %struct.svc_xprt, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %xpt_bc_xps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %xpt_bc_xps, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %protocol = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 1
  %4 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %tobool3.not = icmp sgt i32 %5, -1
  br i1 %tobool3.not, label %land.rhs, label %if.then.if.end33_crit_edge

if.then.if.end33_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end33

land.rhs:                                         ; preds = %if.then
  %.b152 = load i1, ptr @rpc_create_xprt.__already_done, align 1
  br i1 %.b152, label %land.rhs.if.end33_crit_edge, label %if.then12, !prof !419

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end33

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_create_xprt.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 462, i32 noundef 9, ptr noundef null) #18
  br label %if.end33

if.end33:                                         ; preds = %if.then12, %land.rhs.if.end33_crit_edge, %if.then.if.end33_crit_edge
  %6 = ptrtoint ptr %bc_xprt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bc_xprt, align 4
  %xpt_bc_xps42 = getelementptr inbounds %struct.svc_xprt, ptr %7, i32 0, i32 22
  %8 = ptrtoint ptr %xpt_bc_xps42 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %xpt_bc_xps42, align 4
  %call = tail call ptr @xprt_switch_get(ptr noundef %9) #18
  br label %if.end54

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %call43 = tail call ptr @xprt_switch_alloc(ptr noundef %xprt, i32 noundef 3264) #18
  %cmp = icmp eq ptr %call43, null
  br i1 %cmp, label %if.then44, label %if.end46

if.then44:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_put(ptr noundef %xprt) #18
  br label %cleanup117

if.end46:                                         ; preds = %if.else
  %bc_xprt47 = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 40
  %10 = ptrtoint ptr %bc_xprt47 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bc_xprt47, align 4
  %tobool48.not = icmp eq ptr %11, null
  br i1 %tobool48.not, label %if.end46.if.end54_crit_edge, label %if.then49

if.end46.if.end54_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end54

if.then49:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  %call50 = tail call ptr @xprt_switch_get(ptr noundef nonnull %call43) #18
  %12 = ptrtoint ptr %bc_xprt47 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bc_xprt47, align 4
  %xpt_bc_xps52 = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %xpt_bc_xps52 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call43, ptr %xpt_bc_xps52, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then49, %if.end46.if.end54_crit_edge, %if.end33
  %xps.0 = phi ptr [ %9, %if.end33 ], [ %call43, %if.then49 ], [ %call43, %if.end46.if.end54_crit_edge ]
  %call55 = tail call fastcc ptr @rpc_new_client(ptr noundef %args, ptr noundef %xps.0, ptr noundef %xprt, ptr noundef null)
  %cmp.i = icmp ugt ptr %call55, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end54.cleanup117_crit_edge, label %if.end58

if.end54.cleanup117_crit_edge:                    ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup117

if.end58:                                         ; preds = %if.end54
  %flags = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 13
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags, align 4
  %and59 = and i32 %16, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.then61, label %if.end58.if.end67_crit_edge

if.end58.if.end67_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end67

if.then61:                                        ; preds = %if.end58
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %msg.i.i) #18
  %17 = call ptr @memcpy(ptr %msg.i.i, ptr @__const.rpc_call_null_helper.msg, i32 16)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data.i.i) #18
  %18 = getelementptr inbounds i8, ptr %task_setup_data.i.i, i32 32
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 101712127, ptr %18, align 4, !annotation !420
  %20 = ptrtoint ptr %task_setup_data.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %task_setup_data.i.i, align 4
  %rpc_client.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %rpc_client.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call55, ptr %rpc_client.i.i, align 4
  %rpc_xprt.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 2
  %22 = ptrtoint ptr %rpc_xprt.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %rpc_xprt.i.i, align 4
  %rpc_op_cred.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 3
  %23 = ptrtoint ptr %rpc_op_cred.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %rpc_op_cred.i.i, align 4
  %rpc_message.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 4
  %24 = ptrtoint ptr %rpc_message.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %msg.i.i, ptr %rpc_message.i.i, align 4
  %callback_ops.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 5
  %25 = ptrtoint ptr %callback_ops.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @rpc_null_ops, ptr %callback_ops.i.i, align 4
  %callback_data.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 6
  %26 = ptrtoint ptr %callback_data.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %callback_data.i.i, align 4
  %workqueue.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 7
  %27 = ptrtoint ptr %workqueue.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %workqueue.i.i, align 4
  %call.i.i = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data.i.i) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data.i.i) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %msg.i.i) #18
  %cmp.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #20
  %28 = ptrtoint ptr %call.i.i to i32
  br label %rpc_ping.exit

if.end.i:                                         ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #20
  %tk_status.i = getelementptr inbounds %struct.rpc_task, ptr %call.i.i, i32 0, i32 1
  %29 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %tk_status.i, align 4
  call void @rpc_put_task(ptr noundef %call.i.i) #18
  br label %rpc_ping.exit

rpc_ping.exit:                                    ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %28, %if.then.i ], [ %30, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp63.not = icmp eq i32 %retval.0.i, 0
  br i1 %cmp63.not, label %rpc_ping.exit.if.end67_crit_edge, label %cleanup

rpc_ping.exit.if.end67_crit_edge:                 ; preds = %rpc_ping.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end67

cleanup:                                          ; preds = %rpc_ping.exit
  call void @__sanitizer_cov_trace_pc() #20
  call void @rpc_shutdown_client(ptr noundef %call55)
  %31 = inttoptr i32 %retval.0.i to ptr
  br label %cleanup117

if.end67:                                         ; preds = %rpc_ping.exit.if.end67_crit_edge, %if.end58.if.end67_crit_edge
  %cl_softrtry = getelementptr inbounds %struct.rpc_clnt, ptr %call55, i32 0, i32 14
  %32 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %cl_softrtry, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %cl_softrtry, align 4
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags, align 4
  %and69 = and i32 %34, 1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %if.end67.if.end84_crit_edge, label %if.then71

if.end67.if.end84_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end84

if.then71:                                        ; preds = %if.end67
  %bf.clear = and i8 %bf.load, 127
  %35 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %bf.clear, ptr %cl_softrtry, align 4
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags, align 4
  %and77 = and i32 %37, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  br i1 %tobool78.not, label %if.then71.if.end84_crit_edge, label %if.then79

if.then71.if.end84_crit_edge:                     ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end84

if.then79:                                        ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #20
  %bf.clear81 = and i8 %bf.load, 63
  %bf.set82 = or i8 %bf.clear81, 64
  %38 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %bf.set82, ptr %cl_softrtry, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then79, %if.then71.if.end84_crit_edge, %if.end67.if.end84_crit_edge
  %39 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags, align 4
  %and86 = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  br i1 %tobool87.not, label %if.end84.if.end92_crit_edge, label %if.then88

if.end84.if.end92_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end92

if.then88:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #20
  %41 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_load1_noabort(i32 %41)
  %bf.load89 = load i8, ptr %cl_softrtry, align 4
  %bf.set91 = or i8 %bf.load89, 8
  store i8 %bf.set91, ptr %cl_softrtry, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then88, %if.end84.if.end92_crit_edge
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags, align 4
  %and94 = and i32 %43, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and94)
  %tobool95.not = icmp eq i32 %and94, 0
  br i1 %tobool95.not, label %if.end92.if.end100_crit_edge, label %if.then96

if.end92.if.end100_crit_edge:                     ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end100

if.then96:                                        ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #20
  %44 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_load1_noabort(i32 %44)
  %bf.load97 = load i8, ptr %cl_softrtry, align 4
  %bf.set99 = or i8 %bf.load97, 16
  store i8 %bf.set99, ptr %cl_softrtry, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.then96, %if.end92.if.end100_crit_edge
  %45 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %flags, align 4
  %and102 = and i32 %46, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and102)
  %tobool103.not = icmp eq i32 %and102, 0
  br i1 %tobool103.not, label %if.end100.if.end108_crit_edge, label %if.then104

if.end100.if.end108_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end108

if.then104:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #20
  %47 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_load1_noabort(i32 %47)
  %bf.load105 = load i8, ptr %cl_softrtry, align 4
  %bf.set107 = or i8 %bf.load105, 32
  store i8 %bf.set107, ptr %cl_softrtry, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then104, %if.end100.if.end108_crit_edge
  %48 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flags, align 4
  %and110 = and i32 %49, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and110)
  %tobool111.not = icmp eq i32 %and110, 0
  br i1 %tobool111.not, label %if.then112, label %if.end108.cleanup117_crit_edge

if.end108.cleanup117_crit_edge:                   ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup117

if.then112:                                       ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #20
  %50 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load113 = load i8, ptr %cl_softrtry, align 4
  %bf.set115 = or i8 %bf.load113, 4
  store i8 %bf.set115, ptr %cl_softrtry, align 4
  br label %cleanup117

cleanup117:                                       ; preds = %if.then112, %if.end108.cleanup117_crit_edge, %cleanup, %if.end54.cleanup117_crit_edge, %if.then44
  %retval.1 = phi ptr [ %31, %cleanup ], [ inttoptr (i32 -12 to ptr), %if.then44 ], [ %call55, %if.end54.cleanup117_crit_edge ], [ %call55, %if.then112 ], [ %call55, %if.end108.cleanup117_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_create_transport(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_clnt_add_xprt(ptr noundef %clnt, ptr noundef %xprtargs, ptr noundef readonly %setup, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b84 = load i1, ptr @rpc_clnt_add_xprt.__warned, align 1
  br i1 %.b84, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_clnt_add_xprt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2906, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %call9 = tail call ptr @xprt_switch_get(ptr noundef %6) #18
  %call10 = tail call ptr @xprt_iter_xprt(ptr noundef %4) #18
  %cmp = icmp eq ptr %call9, null
  %cmp11 = icmp eq ptr %call10, null
  %or.cond = select i1 %cmp, i1 true, i1 %cmp11
  br i1 %or.cond, label %if.then12, label %if.end13

if.then12:                                        ; preds = %do.end7
  %call.i85 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i85, label %if.then12.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i88

if.then12.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i88:                                ; preds = %if.then12
  %call1.i86 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i86)
  %tobool.not.i87 = icmp eq i32 %call1.i86, 0
  br i1 %tobool.not.i87, label %land.lhs.true.i88.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i90

land.lhs.true.i88.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i88
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i90:                               ; preds = %land.lhs.true.i88
  %.b4.i89 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i89, label %land.lhs.true2.i90.rcu_read_unlock.exit_crit_edge, label %if.then.i91

land.lhs.true2.i90.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i91:                                      ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i91, %land.lhs.true2.i90.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i88.rcu_read_unlock.exit_crit_edge, %if.then12.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %7 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i92 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i92 to ptr
  %preempt_count.i.i.i.i93 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i93 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i93, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i93, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  tail call void @xprt_switch_put(ptr noundef %call9) #18
  br label %cleanup

if.end13:                                         ; preds = %do.end7
  %resvport14 = getelementptr inbounds %struct.rpc_xprt, ptr %call10, i32 0, i32 19
  %11 = ptrtoint ptr %resvport14 to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load = load i8, ptr %resvport14, align 4
  %connect_timeout18 = getelementptr inbounds %struct.rpc_xprt, ptr %call10, i32 0, i32 30
  %12 = ptrtoint ptr %connect_timeout18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %connect_timeout18, align 8
  %max_reconnect_timeout = getelementptr inbounds %struct.rpc_xprt, ptr %call10, i32 0, i32 31
  %14 = ptrtoint ptr %max_reconnect_timeout to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %max_reconnect_timeout, align 4
  %xprt_class = getelementptr inbounds %struct.rpc_xprt, ptr %call10, i32 0, i32 54
  %16 = ptrtoint ptr %xprt_class to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %xprt_class, align 4
  %ident19 = getelementptr inbounds %struct.xprt_class, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %ident19 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ident19, align 4
  %call.i94 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i94, label %if.end13.rcu_read_unlock.exit104_crit_edge, label %land.lhs.true.i97

if.end13.rcu_read_unlock.exit104_crit_edge:       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit104

land.lhs.true.i97:                                ; preds = %if.end13
  %call1.i95 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i95)
  %tobool.not.i96 = icmp eq i32 %call1.i95, 0
  br i1 %tobool.not.i96, label %land.lhs.true.i97.rcu_read_unlock.exit104_crit_edge, label %land.lhs.true2.i99

land.lhs.true.i97.rcu_read_unlock.exit104_crit_edge: ; preds = %land.lhs.true.i97
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit104

land.lhs.true2.i99:                               ; preds = %land.lhs.true.i97
  %.b4.i98 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i98, label %land.lhs.true2.i99.rcu_read_unlock.exit104_crit_edge, label %if.then.i100

land.lhs.true2.i99.rcu_read_unlock.exit104_crit_edge: ; preds = %land.lhs.true2.i99
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit104

if.then.i100:                                     ; preds = %land.lhs.true2.i99
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit104

rcu_read_unlock.exit104:                          ; preds = %if.then.i100, %land.lhs.true2.i99.rcu_read_unlock.exit104_crit_edge, %land.lhs.true.i97.rcu_read_unlock.exit104_crit_edge, %if.end13.rcu_read_unlock.exit104_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %20 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i101 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i101 to ptr
  %preempt_count.i.i.i.i102 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i102 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i102, align 4
  %sub.i.i.i103 = add i32 %23, -1
  store volatile i32 %sub.i.i.i103, ptr %preempt_count.i.i.i.i102, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  %24 = ptrtoint ptr %xprtargs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %xprtargs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool21.not = icmp eq i32 %25, 0
  br i1 %tobool21.not, label %if.then22, label %rcu_read_unlock.exit104.if.end24_crit_edge

rcu_read_unlock.exit104.if.end24_crit_edge:       ; preds = %rcu_read_unlock.exit104
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end24

if.then22:                                        ; preds = %rcu_read_unlock.exit104
  call void @__sanitizer_cov_trace_pc() #20
  %26 = ptrtoint ptr %xprtargs to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %19, ptr %xprtargs, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %rcu_read_unlock.exit104.if.end24_crit_edge
  %call25 = tail call ptr @xprt_create_transport(ptr noundef %xprtargs) #18
  %cmp.i = icmp ugt ptr %call25, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #20
  %27 = ptrtoint ptr %call25 to i32
  br label %out_put_switch

if.end29:                                         ; preds = %if.end24
  %resvport30 = getelementptr inbounds %struct.rpc_xprt, ptr %call25, i32 0, i32 19
  %28 = ptrtoint ptr %resvport30 to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load31 = load i8, ptr %resvport30, align 4
  %bf.clear32 = and i8 %bf.load31, 63
  %bf.set = and i8 %bf.load, -64
  %bf.set38 = or i8 %bf.set, %bf.clear32
  store i8 %bf.set38, ptr %resvport30, align 4
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %call25, i32 0, i32 1
  %29 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops, align 4
  %set_connect_timeout = getelementptr inbounds %struct.rpc_xprt_ops, ptr %30, i32 0, i32 17
  %31 = ptrtoint ptr %set_connect_timeout to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %set_connect_timeout, align 4
  %cmp39.not = icmp eq ptr %32, null
  br i1 %cmp39.not, label %if.end29.if.end43_crit_edge, label %if.then40

if.end29.if.end43_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end43

if.then40:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #20
  tail call void %32(ptr noundef %call25, i32 noundef %13, i32 noundef %15) #18
  br label %if.end43

if.end43:                                         ; preds = %if.then40, %if.end29.if.end43_crit_edge
  tail call void @rpc_xprt_switch_set_roundrobin(ptr noundef nonnull %call9) #18
  %tobool44.not = icmp eq ptr %setup, null
  br i1 %tobool44.not, label %if.end43.if.end50_crit_edge, label %if.then45

if.end43.if.end50_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.then45:                                        ; preds = %if.end43
  %call46 = tail call i32 %setup(ptr noundef %clnt, ptr noundef nonnull %call9, ptr noundef %call25, ptr noundef %data) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %cmp47.not = icmp eq i32 %call46, 0
  br i1 %cmp47.not, label %if.then45.if.end50_crit_edge, label %if.then45.out_put_xprt_crit_edge

if.then45.out_put_xprt_crit_edge:                 ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_put_xprt

if.then45.if.end50_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end50

if.end50:                                         ; preds = %if.then45.if.end50_crit_edge, %if.end43.if.end50_crit_edge
  tail call void @rpc_xprt_switch_add_xprt(ptr noundef nonnull %call9, ptr noundef %call25) #18
  br label %out_put_xprt

out_put_xprt:                                     ; preds = %if.end50, %if.then45.out_put_xprt_crit_edge
  %ret.1 = phi i32 [ %call46, %if.then45.out_put_xprt_crit_edge ], [ 0, %if.end50 ]
  tail call void @xprt_put(ptr noundef %call25) #18
  br label %out_put_switch

out_put_switch:                                   ; preds = %out_put_xprt, %if.then27
  %ret.2 = phi i32 [ %27, %if.then27 ], [ %ret.1, %out_put_xprt ]
  tail call void @xprt_switch_put(ptr noundef nonnull %call9) #18
  br label %cleanup

cleanup:                                          ; preds = %out_put_switch, %rcu_read_unlock.exit
  %retval.0 = phi i32 [ -11, %rcu_read_unlock.exit ], [ %ret.2, %out_put_switch ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_clone_client(ptr noundef %clnt) #0 align 64 {
entry:
  %args = alloca %struct.rpc_create_args, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args) #18
  %0 = getelementptr inbounds i8, ptr %args, i32 44
  %1 = call ptr @memset(ptr %0, i32 255, i32 28)
  %program = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 8
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 24
  %2 = call ptr @memset(ptr %args, i32 0, i32 32)
  %3 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %cl_program, align 4
  %5 = ptrtoint ptr %program to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %program, align 4
  %prognumber = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 9
  %cl_prog = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 8
  %6 = ptrtoint ptr %cl_prog to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_prog, align 4
  %8 = ptrtoint ptr %prognumber to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %prognumber, align 4
  %version = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 10
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 9
  %9 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cl_vers, align 4
  %11 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %version, align 4
  %authflavor = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 11
  %cl_auth = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 11
  %12 = ptrtoint ptr %cl_auth to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cl_auth, align 4
  %au_flavor = getelementptr inbounds %struct.rpc_auth, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %au_flavor to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %au_flavor, align 4
  %16 = ptrtoint ptr %authflavor to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %authflavor, align 4
  %nconnect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 12
  %cred = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 16
  %cl_cred = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 29
  %17 = call ptr @memset(ptr %nconnect, i32 0, i32 16)
  %18 = ptrtoint ptr %cl_cred to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %cl_cred, align 4
  %20 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %cred, align 4
  %max_connect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 17
  %21 = ptrtoint ptr %max_connect to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %max_connect, align 4
  %call = call fastcc ptr @__rpc_clone_client(ptr noundef nonnull %args, ptr noundef %clnt)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args) #18
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__rpc_clone_client(ptr nocapture noundef %args, ptr noundef %clnt) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b119 = load i1, ptr @__rpc_clone_client.__warned, align 1
  br i1 %.b119, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @__rpc_clone_client.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 624, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %call9 = tail call ptr @xprt_get(ptr noundef %5) #18
  %6 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %6, align 4
  %call15 = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %land.lhs.true17, label %do.end7.do.end25_crit_edge

do.end7.do.end25_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end25

land.lhs.true17:                                  ; preds = %do.end7
  %call18 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %land.lhs.true17.do.end25_crit_edge, label %land.lhs.true20

land.lhs.true17.do.end25_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end25

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %.b117118 = load i1, ptr @__rpc_clone_client.__warned.30, align 1
  br i1 %.b117118, label %land.lhs.true20.do.end25_crit_edge, label %if.then22

land.lhs.true20.do.end25_crit_edge:               ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end25

if.then22:                                        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @__rpc_clone_client.__warned.30, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 625, ptr noundef nonnull @.str.4) #18
  br label %do.end25

do.end25:                                         ; preds = %if.then22, %land.lhs.true20.do.end25_crit_edge, %land.lhs.true17.do.end25_crit_edge, %do.end7.do.end25_crit_edge
  %call27 = tail call ptr @xprt_switch_get(ptr noundef %8) #18
  %call.i120 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i120, label %do.end25.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i123

do.end25.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end25
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i123:                               ; preds = %do.end25
  %call1.i121 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i121)
  %tobool.not.i122 = icmp eq i32 %call1.i121, 0
  br i1 %tobool.not.i122, label %land.lhs.true.i123.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i125

land.lhs.true.i123.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i123
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i125:                              ; preds = %land.lhs.true.i123
  %.b4.i124 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i124, label %land.lhs.true2.i125.rcu_read_unlock.exit_crit_edge, label %if.then.i126

land.lhs.true2.i125.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i125
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i126:                                     ; preds = %land.lhs.true2.i125
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i126, %land.lhs.true2.i125.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i123.rcu_read_unlock.exit_crit_edge, %do.end25.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i127 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i127 to ptr
  %preempt_count.i.i.i.i128 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i128 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i128, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i128, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  %cmp = icmp eq ptr %call9, null
  %cmp28 = icmp eq ptr %call27, null
  %or.cond = select i1 %cmp, i1 true, i1 %cmp28
  br i1 %or.cond, label %if.then29, label %if.end30

if.then29:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_put(ptr noundef %call9) #18
  tail call void @xprt_switch_put(ptr noundef %call27) #18
  tail call fastcc void @trace_rpc_clnt_clone_err(ptr noundef %clnt)
  br label %cleanup

if.end30:                                         ; preds = %rcu_read_unlock.exit
  %servername = getelementptr inbounds %struct.rpc_xprt, ptr %call9, i32 0, i32 50
  %13 = ptrtoint ptr %servername to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %servername, align 4
  %servername31 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 6
  %15 = ptrtoint ptr %servername31 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %14, ptr %servername31, align 4
  %cl_nodename = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 19
  %nodename = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 7
  %16 = ptrtoint ptr %nodename to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %cl_nodename, ptr %nodename, align 4
  %call32 = tail call fastcc ptr @rpc_new_client(ptr noundef %args, ptr noundef nonnull %call27, ptr noundef nonnull %call9, ptr noundef %clnt)
  %cmp.i = icmp ugt ptr %call32, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end30.cleanup_crit_edge, label %if.end35

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end35:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #20
  %cl_autobind = getelementptr inbounds %struct.rpc_clnt, ptr %call32, i32 0, i32 14
  %17 = ptrtoint ptr %cl_autobind to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load = load i8, ptr %cl_autobind, align 4
  %bf.clear = and i8 %bf.load, -9
  store i8 %bf.clear, ptr %cl_autobind, align 4
  %cl_softrtry = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 14
  %18 = ptrtoint ptr %cl_softrtry to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load36 = load i8, ptr %cl_softrtry, align 4
  %bf.lshr = and i8 %bf.load36, -128
  %bf.clear39 = and i8 %bf.load, 119
  %bf.set40 = or i8 %bf.lshr, %bf.clear39
  store i8 %bf.set40, ptr %cl_autobind, align 4
  %bf.load41 = load i8, ptr %cl_softrtry, align 4
  %bf.clear43 = and i8 %bf.load41, 64
  %bf.clear49 = and i8 %bf.set40, -73
  %bf.set50 = or i8 %bf.clear49, %bf.clear43
  store i8 %bf.set50, ptr %cl_autobind, align 4
  %bf.load52 = load i8, ptr %cl_softrtry, align 4
  %bf.clear54 = and i8 %bf.load52, 16
  %bf.clear60 = and i8 %bf.set50, -25
  %bf.set61 = or i8 %bf.clear60, %bf.clear54
  store i8 %bf.set61, ptr %cl_autobind, align 4
  %bf.load63 = load i8, ptr %cl_softrtry, align 4
  %bf.clear65 = and i8 %bf.load63, 32
  %bf.clear71 = and i8 %bf.set61, -41
  %bf.set72 = or i8 %bf.clear71, %bf.clear65
  store i8 %bf.set72, ptr %cl_autobind, align 4
  %bf.load74 = load i8, ptr %cl_softrtry, align 4
  %bf.clear76 = and i8 %bf.load74, 4
  %bf.clear82 = and i8 %bf.set72, -13
  %bf.set83 = or i8 %bf.clear82, %bf.clear76
  store i8 %bf.set83, ptr %cl_autobind, align 4
  %cl_principal = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 25
  %19 = ptrtoint ptr %cl_principal to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cl_principal, align 4
  %cl_principal85 = getelementptr inbounds %struct.rpc_clnt, ptr %call32, i32 0, i32 25
  %21 = ptrtoint ptr %cl_principal85 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %cl_principal85, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.end30.cleanup_crit_edge, %if.then29
  %retval.0 = phi ptr [ inttoptr (i32 -12 to ptr), %if.then29 ], [ %call32, %if.end35 ], [ %call32, %if.end30.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_clone_client_set_auth(ptr noundef %clnt, i32 noundef %flavor) #0 align 64 {
entry:
  %args = alloca %struct.rpc_create_args, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args) #18
  %program = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 8
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 24
  %0 = call ptr @memset(ptr %args, i32 0, i32 32)
  %1 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cl_program, align 4
  %3 = ptrtoint ptr %program to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %program, align 4
  %prognumber = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 9
  %cl_prog = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 8
  %4 = ptrtoint ptr %cl_prog to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_prog, align 4
  %6 = ptrtoint ptr %prognumber to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %prognumber, align 4
  %version = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 10
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 9
  %7 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cl_vers, align 4
  %9 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %version, align 4
  %authflavor = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 11
  %10 = ptrtoint ptr %authflavor to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %flavor, ptr %authflavor, align 4
  %nconnect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 12
  %cred = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 16
  %cl_cred = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 29
  %11 = call ptr @memset(ptr %nconnect, i32 0, i32 16)
  %12 = ptrtoint ptr %cl_cred to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cl_cred, align 4
  %14 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %cred, align 4
  %max_connect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 17
  %15 = ptrtoint ptr %max_connect to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %max_connect, align 4
  %call = call fastcc ptr @__rpc_clone_client(ptr noundef nonnull %args, ptr noundef %clnt)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args) #18
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_switch_client_transport(ptr noundef %clnt, ptr noundef %args, ptr noundef %timeout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @xprt_create_transport(ptr noundef %args) #18
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call ptr @xprt_switch_alloc(ptr noundef %call, i32 noundef 3264) #18
  %cmp = icmp eq ptr %call3, null
  br i1 %cmp, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_put(ptr noundef %call) #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %cl_auth = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 11
  %1 = ptrtoint ptr %cl_auth to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cl_auth, align 4
  %au_flavor = getelementptr inbounds %struct.rpc_auth, ptr %2, i32 0, i32 6
  %3 = ptrtoint ptr %au_flavor to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %au_flavor, align 4
  %cl_timeout = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 16
  %5 = ptrtoint ptr %cl_timeout to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cl_timeout, align 4
  %call6 = tail call fastcc ptr @rpc_clnt_set_transport(ptr noundef %clnt, ptr noundef %call, ptr noundef %timeout)
  %7 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %call7 = tail call ptr @xprt_iter_xchg_switch(ptr noundef %7, ptr noundef nonnull %call3) #18
  %call.i = tail call ptr @rpc_net_ns(ptr noundef %clnt) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %8 = load i32, ptr @sunrpc_net_id, align 4
  %call1.i = tail call fastcc ptr @net_generic(ptr noundef %call.i, i32 noundef %8) #18
  %rpc_client_lock.i = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %rpc_client_lock.i) #18
  %cl_clients.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cl_clients.i) #18
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end5.rpc_unregister_client.exit_crit_edge

if.end5.rpc_unregister_client.exit_crit_edge:     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_unregister_client.exit

if.end.i.i.i:                                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  %prev.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2, i32 1
  %9 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i.i, align 4
  %11 = ptrtoint ptr %cl_clients.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cl_clients.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %rpc_unregister_client.exit

rpc_unregister_client.exit:                       ; preds = %if.end.i.i.i, %if.end5.rpc_unregister_client.exit_crit_edge
  %15 = ptrtoint ptr %cl_clients.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 256 to ptr), ptr %cl_clients.i, align 4
  %prev.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i) #18
  %call.i57 = tail call i32 @rpc_remove_client_dir(ptr noundef %clnt) #18
  tail call void @rpc_sysfs_client_destroy(ptr noundef %clnt) #18
  tail call void @rpc_clnt_debugfs_unregister(ptr noundef %clnt) #18
  %cl_parent = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 21
  %17 = ptrtoint ptr %cl_parent to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cl_parent, align 4
  store ptr %clnt, ptr %cl_parent, align 4
  %call9 = tail call fastcc i32 @rpc_client_register(ptr noundef %clnt, i32 noundef %4, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %if.end11, label %out_revert

if.end11:                                         ; preds = %rpc_unregister_client.exit
  tail call void @synchronize_rcu() #18
  %cmp12.not = icmp eq ptr %18, %clnt
  br i1 %cmp12.not, label %if.end11.if.end14_crit_edge, label %if.then13

if.end11.if.end14_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end14

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_release_client(ptr noundef %18)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11.if.end14_crit_edge
  tail call void @xprt_switch_put(ptr noundef %call7) #18
  tail call void @xprt_put(ptr noundef %call6) #18
  tail call fastcc void @trace_rpc_clnt_replace_xprt(ptr noundef %clnt)
  br label %cleanup

out_revert:                                       ; preds = %rpc_unregister_client.exit
  call void @__sanitizer_cov_trace_pc() #20
  %call15 = tail call ptr @xprt_iter_xchg_switch(ptr noundef %7, ptr noundef %call7) #18
  %call16 = tail call fastcc ptr @rpc_clnt_set_transport(ptr noundef %clnt, ptr noundef %call6, ptr noundef %6)
  %19 = ptrtoint ptr %cl_parent to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %cl_parent, align 4
  %call18 = tail call fastcc i32 @rpc_client_register(ptr noundef %clnt, i32 noundef %4, ptr noundef null)
  tail call void @xprt_switch_put(ptr noundef %call15) #18
  tail call void @xprt_put(ptr noundef %call) #18
  tail call fastcc void @trace_rpc_clnt_replace_xprt_err(ptr noundef %clnt)
  br label %cleanup

cleanup:                                          ; preds = %out_revert, %if.end14, %if.then4, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ -12, %if.then4 ], [ %call9, %out_revert ], [ 0, %if.end14 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_switch_alloc(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @rpc_clnt_set_transport(ptr noundef %clnt, ptr noundef %xprt, ptr noundef %timeout) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_lock = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 5
  tail call void @_raw_spin_lock(ptr noundef %cl_lock) #18
  %dep_map = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 5, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true4

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b56 = load i1, ptr @rpc_clnt_set_transport.__warned, align 1
  br i1 %.b56, label %land.lhs.true4.do.end_crit_edge, label %if.then

land.lhs.true4.do.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_clnt_set_transport.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 272, ptr noundef nonnull @.str.31) #18
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true4.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %0 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cl_xprt, align 4
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool7.not = icmp eq i32 %4, 0
  br i1 %tobool7.not, label %if.then8, label %do.end.if.end9_crit_edge

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end9

if.then8:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #20
  %cl_autobind = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 14
  %5 = ptrtoint ptr %cl_autobind to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %cl_autobind, align 4
  %bf.set = or i8 %bf.load, 8
  store i8 %bf.set, ptr %cl_autobind, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %do.end.if.end9_crit_edge
  %cl_timeout = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 16
  %6 = ptrtoint ptr %cl_timeout to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %timeout, ptr %cl_timeout, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !423
  %7 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %xprt, ptr %cl_xprt, align 4
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock) #18
  ret ptr %1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_iter_xchg_switch(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_sysfs_client_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_clnt_debugfs_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @rpc_client_register(ptr noundef %clnt, i32 noundef %pseudoflavor, ptr noundef %client_name) unnamed_addr #0 align 64 {
entry:
  %auth_args = alloca %struct.rpc_auth_create_args, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %auth_args) #18
  %0 = getelementptr inbounds %struct.rpc_auth_create_args, ptr %auth_args, i32 0, i32 1
  %1 = ptrtoint ptr %auth_args to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %pseudoflavor, ptr %auth_args, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %client_name, ptr %0, align 4
  %call = tail call ptr @rpc_net_ns(ptr noundef %clnt)
  tail call void @rpc_clnt_debugfs_register(ptr noundef %clnt) #18
  %call2 = tail call ptr @rpc_get_sb_net(ptr noundef %call) #18
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end9.critedge, label %if.then

if.then:                                          ; preds = %entry
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 24
  %3 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %cl_program.i, align 4
  %pipe_dir_name.i = getelementptr inbounds %struct.rpc_program, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %pipe_dir_name.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pipe_dir_name.i, align 4
  %cmp.not.i = icmp eq ptr %6, null
  br i1 %cmp.not.i, label %if.then.if.then8.critedge_crit_edge, label %if.then.i

if.then.if.then8.critedge_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then8.critedge

if.then.i:                                        ; preds = %if.then
  %call.i = tail call fastcc ptr @rpc_setup_pipedir_sb(ptr noundef nonnull %call2, ptr noundef %clnt) #18
  %cmp.i.i.not = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  %7 = ptrtoint ptr %call.i to i32
  br i1 %cmp.i.i.not, label %if.then.i.if.then26_crit_edge, label %if.then.i.if.then8.critedge_crit_edge

if.then.i.if.then8.critedge_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then8.critedge

if.then.i.if.then26_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then26

if.then8.critedge:                                ; preds = %if.then.i.if.then8.critedge_crit_edge, %if.then.if.then8.critedge_crit_edge
  %call.i49 = tail call ptr @rpc_net_ns(ptr noundef %clnt) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %8 = load i32, ptr @sunrpc_net_id, align 4
  %call1.i = tail call fastcc ptr @net_generic(ptr noundef %call.i49, i32 noundef %8) #18
  %rpc_client_lock.i = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %rpc_client_lock.i) #18
  %cl_clients.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2
  %all_clients.i = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i, i32 0, i32 8
  %9 = ptrtoint ptr %all_clients.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %all_clients.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %cl_clients.i, ptr noundef %all_clients.i, ptr noundef %10) #18
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then8.critedge.rpc_register_client.exit_crit_edge

if.then8.critedge.rpc_register_client.exit_crit_edge: ; preds = %if.then8.critedge
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_register_client.exit

if.end.i.i.i:                                     ; preds = %if.then8.critedge
  call void @__sanitizer_cov_trace_pc() #20
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %cl_clients.i, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %cl_clients.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %10, ptr %cl_clients.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2, i32 1
  %13 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %all_clients.i, ptr %prev3.i.i.i, align 4
  %14 = ptrtoint ptr %all_clients.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %cl_clients.i, ptr %all_clients.i, align 4
  br label %rpc_register_client.exit

rpc_register_client.exit:                         ; preds = %if.end.i.i.i, %if.then8.critedge.rpc_register_client.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i) #18
  tail call void @rpc_put_sb_net(ptr noundef %call) #18
  br label %if.end9

if.end9.critedge:                                 ; preds = %entry
  %call.i50 = tail call ptr @rpc_net_ns(ptr noundef %clnt) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %15 = load i32, ptr @sunrpc_net_id, align 4
  %call1.i51 = tail call fastcc ptr @net_generic(ptr noundef %call.i50, i32 noundef %15) #18
  %rpc_client_lock.i52 = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i51, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %rpc_client_lock.i52) #18
  %cl_clients.i53 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2
  %all_clients.i54 = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i51, i32 0, i32 8
  %16 = ptrtoint ptr %all_clients.i54 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %all_clients.i54, align 4
  %call.i.i.i55 = tail call zeroext i1 @__list_add_valid(ptr noundef %cl_clients.i53, ptr noundef %all_clients.i54, ptr noundef %17) #18
  br i1 %call.i.i.i55, label %if.end.i.i.i58, label %if.end9.critedge.rpc_register_client.exit59_crit_edge

if.end9.critedge.rpc_register_client.exit59_crit_edge: ; preds = %if.end9.critedge
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_register_client.exit59

if.end.i.i.i58:                                   ; preds = %if.end9.critedge
  call void @__sanitizer_cov_trace_pc() #20
  %prev1.i.i.i56 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i56 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %cl_clients.i53, ptr %prev1.i.i.i56, align 4
  %19 = ptrtoint ptr %cl_clients.i53 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %cl_clients.i53, align 4
  %prev3.i.i.i57 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2, i32 1
  %20 = ptrtoint ptr %prev3.i.i.i57 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %all_clients.i54, ptr %prev3.i.i.i57, align 4
  %21 = ptrtoint ptr %all_clients.i54 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %cl_clients.i53, ptr %all_clients.i54, align 4
  br label %rpc_register_client.exit59

rpc_register_client.exit59:                       ; preds = %if.end.i.i.i58, %if.end9.critedge.rpc_register_client.exit59_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i52) #18
  br label %if.end9

if.end9:                                          ; preds = %rpc_register_client.exit59, %rpc_register_client.exit
  %call10 = call ptr @rpcauth_create(ptr noundef nonnull %auth_args, ptr noundef %clnt) #18
  %cmp.i = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.body, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.body:                                          ; preds = %if.end9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %22 = load i32, ptr @rpc_debug, align 4
  %and = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool13.not = icmp eq i32 %and, 0
  br i1 %tobool13.not, label %do.body.do.end21_crit_edge, label %do.end, !prof !419

do.body.do.end21_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end21

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.32, i32 noundef %pseudoflavor) #21
  br label %do.end21

do.end21:                                         ; preds = %do.end, %do.body.do.end21_crit_edge
  %23 = ptrtoint ptr %call10 to i32
  %call24 = call ptr @rpc_get_sb_net(ptr noundef %call) #18
  %call.i60 = call ptr @rpc_net_ns(ptr noundef %clnt) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %24 = load i32, ptr @sunrpc_net_id, align 4
  %call1.i61 = call fastcc ptr @net_generic(ptr noundef %call.i60, i32 noundef %24) #18
  %rpc_client_lock.i62 = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i61, i32 0, i32 9
  call void @_raw_spin_lock(ptr noundef %rpc_client_lock.i62) #18
  %cl_clients.i63 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2
  %call.i.i.i64 = call zeroext i1 @__list_del_entry_valid(ptr noundef %cl_clients.i63) #18
  br i1 %call.i.i.i64, label %if.end.i.i.i65, label %do.end21.out_crit_edge

do.end21.out_crit_edge:                           ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

if.end.i.i.i65:                                   ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #20
  %prev.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2, i32 1
  %25 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev.i.i.i, align 4
  %27 = ptrtoint ptr %cl_clients.i63 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %cl_clients.i63, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev1.i.i.i.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %28, ptr %26, align 4
  br label %out

out:                                              ; preds = %if.end.i.i.i65, %do.end21.out_crit_edge
  %31 = ptrtoint ptr %cl_clients.i63 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 256 to ptr), ptr %cl_clients.i63, align 4
  %prev.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 2, i32 1
  %32 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i62) #18
  %call.i66 = call i32 @rpc_remove_client_dir(ptr noundef %clnt) #18
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %out.if.end27_crit_edge, label %out.if.then26_crit_edge

out.if.then26_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then26

out.if.end27_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end27

if.then26:                                        ; preds = %out.if.then26_crit_edge, %if.then.i.if.then26_crit_edge
  %err.072 = phi i32 [ %23, %out.if.then26_crit_edge ], [ %7, %if.then.i.if.then26_crit_edge ]
  call void @rpc_put_sb_net(ptr noundef %call) #18
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %out.if.end27_crit_edge
  %err.073 = phi i32 [ %err.072, %if.then26 ], [ %23, %out.if.end27_crit_edge ]
  call void @rpc_sysfs_client_destroy(ptr noundef %clnt) #18
  call void @rpc_clnt_debugfs_unregister(ptr noundef %clnt) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.end9.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.073, %if.end27 ], [ 0, %if.end9.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %auth_args) #18
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_release_client(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  br label %do.body

do.body:                                          ; preds = %rpc_free_client.exit.i.do.body_crit_edge, %entry
  %clnt.addr.0 = phi ptr [ %clnt, %entry ], [ %7, %rpc_free_client.exit.i.do.body_crit_edge ]
  %cl_tasks = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 3
  %0 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i.not = icmp eq ptr %1, %cl_tasks
  br i1 %cmp.i.not, label %if.then, label %do.body.if.end_crit_edge

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__wake_up(ptr noundef nonnull @destroy_wait, i32 noundef 3, i32 noundef 1, ptr noundef null) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body.if.end_crit_edge
  %call1 = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %clnt.addr.0) #18
  br i1 %call1, label %if.end.do.end_crit_edge, label %if.end3

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.end3:                                          ; preds = %if.end
  %cl_auth.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 11
  %2 = ptrtoint ptr %cl_auth.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cl_auth.i, align 4
  %cmp.not.i = icmp eq ptr %3, null
  br i1 %cmp.not.i, label %if.end3.if.end.i_crit_edge, label %if.then.i

if.end3.if.end.i_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end.i

if.then.i:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpcauth_release(ptr noundef nonnull %3) #18
  %4 = ptrtoint ptr %cl_auth.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %cl_auth.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end3.if.end.i_crit_edge
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %clnt.addr.0, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !424
  tail call void @llvm.prefetch.p0(ptr %clnt.addr.0, i32 1, i32 3, i32 1) #18
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %clnt.addr.0, ptr %clnt.addr.0, i32 1, ptr elementtype(i32) %clnt.addr.0) #18, !srcloc !425
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then3.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end.i
  %asmresult.i.i.i.i.i.i.i.le = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.le)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.le, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.do.end_crit_edge, label %if.then10.i.i.i.i, !prof !419

if.end5.i.i.i.i.do.end_crit_edge:                 ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @refcount_warn_saturate(ptr noundef %clnt.addr.0, i32 noundef 3) #18
  br label %do.end

if.then3.i:                                       ; preds = %if.end.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !426
  tail call fastcc void @trace_rpc_clnt_release(ptr noundef %clnt.addr.0) #18
  %cl_parent.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 21
  %6 = ptrtoint ptr %cl_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cl_parent.i.i, align 4
  %call.i.i.i = tail call ptr @rpc_net_ns(ptr noundef %clnt.addr.0) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %8 = load i32, ptr @sunrpc_net_id, align 4
  %call1.i.i.i = tail call fastcc ptr @net_generic(ptr noundef %call.i.i.i, i32 noundef %8) #18
  %rpc_client_lock.i.i.i = getelementptr inbounds %struct.sunrpc_net, ptr %call1.i.i.i, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %rpc_client_lock.i.i.i) #18
  %cl_clients.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cl_clients.i.i.i) #18
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then3.i.rpc_unregister_client.exit.i.i_crit_edge

if.then3.i.rpc_unregister_client.exit.i.i_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_unregister_client.exit.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #20
  %prev.i.i.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 2, i32 1
  %9 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %11 = ptrtoint ptr %cl_clients.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cl_clients.i.i.i, align 4
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %rpc_unregister_client.exit.i.i

rpc_unregister_client.exit.i.i:                   ; preds = %if.end.i.i.i.i.i, %if.then3.i.rpc_unregister_client.exit.i.i_crit_edge
  %15 = ptrtoint ptr %cl_clients.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 256 to ptr), ptr %cl_clients.i.i.i, align 4
  %prev.i.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 2, i32 1
  %16 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i.i.i) #18
  %cl_metrics.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 13
  %17 = ptrtoint ptr %cl_metrics.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cl_metrics.i.i, align 4
  tail call void @rpc_free_iostats(ptr noundef %18) #18
  %19 = ptrtoint ptr %cl_metrics.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %cl_metrics.i.i, align 4
  %20 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 28
  tail call void @xprt_iter_destroy(ptr noundef %20) #18
  %cl_cred.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 29
  %21 = ptrtoint ptr %cl_cred.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %cl_cred.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i.i, label %rpc_unregister_client.exit.i.i.rpc_free_client.exit.i_crit_edge, label %do.body.i.i.i

rpc_unregister_client.exit.i.i.rpc_free_client.exit.i_crit_edge: ; preds = %rpc_unregister_client.exit.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_free_client.exit.i

do.body.i.i.i:                                    ; preds = %rpc_unregister_client.exit.i.i
  %call.i.i.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %22) #18
  br i1 %call.i.i.i.i, label %if.then.i.i.i.i, label %do.body.i.i.i.__validate_creds.exit.i.i.i_crit_edge, !prof !427

do.body.i.i.i.__validate_creds.exit.i.i.i_crit_edge: ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__validate_creds.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__invalid_creds(ptr noundef nonnull %22, ptr noundef nonnull @.str.27, i32 noundef 286) #18
  br label %__validate_creds.exit.i.i.i

__validate_creds.exit.i.i.i:                      ; preds = %if.then.i.i.i.i, %do.body.i.i.i.__validate_creds.exit.i.i.i_crit_edge
  %call.i.i.i18.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %22, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !428
  tail call void @llvm.prefetch.p0(ptr nonnull %22, i32 1, i32 3, i32 1) #18
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %22, ptr nonnull %22, i32 1, ptr nonnull elementtype(i32) %22) #18, !srcloc !429
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %23, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %if.then1.i.i.i, label %__validate_creds.exit.i.i.i.rpc_free_client.exit.i_crit_edge

__validate_creds.exit.i.i.i.rpc_free_client.exit.i_crit_edge: ; preds = %__validate_creds.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_free_client.exit.i

if.then1.i.i.i:                                   ; preds = %__validate_creds.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__put_cred(ptr noundef nonnull %22) #18
  br label %rpc_free_client.exit.i

rpc_free_client.exit.i:                           ; preds = %if.then1.i.i.i, %__validate_creds.exit.i.i.i.rpc_free_client.exit.i_crit_edge, %rpc_unregister_client.exit.i.i.rpc_free_client.exit.i_crit_edge
  %cmp.not.i.i = icmp eq ptr %7, %clnt.addr.0
  tail call void @__init_work(ptr noundef %20, i32 noundef 0) #18
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -64, ptr %20, align 4
  %lockdep_map.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 28, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i.i, ptr noundef nonnull @.str.35, ptr noundef nonnull @rpc_free_client.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  %entry3.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 28, i32 0, i32 1
  %25 = ptrtoint ptr %entry3.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %entry3.i.i, ptr %entry3.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 28, i32 0, i32 1, i32 1
  %26 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %entry3.i.i, ptr %prev.i.i.i, align 4
  %func.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0, i32 0, i32 28, i32 0, i32 2
  %27 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @rpc_free_client_work, ptr %func.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %28 = load ptr, ptr @system_wq, align 4
  %call.i.i19.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %20) #18
  %cmp.not = icmp eq ptr %7, null
  %or.cond = or i1 %cmp.not.i.i, %cmp.not
  br i1 %or.cond, label %rpc_free_client.exit.i.do.end_crit_edge, label %rpc_free_client.exit.i.do.body_crit_edge

rpc_free_client.exit.i.do.body_crit_edge:         ; preds = %rpc_free_client.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body

rpc_free_client.exit.i.do.end_crit_edge:          ; preds = %rpc_free_client.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

do.end:                                           ; preds = %rpc_free_client.exit.i.do.end_crit_edge, %if.then10.i.i.i.i, %if.end5.i.i.i.i.do.end_crit_edge, %if.end.do.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_switch_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_replace_xprt(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_replace_xprt, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !432
  %call42 = tail call i32 @__traceiter_rpc_clnt_replace_xprt(ptr noundef null, ptr noundef %clnt) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !433
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_replace_xprt.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_replace_xprt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 139, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_replace_xprt_err(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt_err, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_replace_xprt_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !436
  %call42 = tail call i32 @__traceiter_rpc_clnt_replace_xprt_err(ptr noundef null, ptr noundef %clnt) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !437
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_replace_xprt_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_replace_xprt_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_replace_xprt_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 140, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_clnt_iterate_for_each_xprt(ptr noundef %clnt, ptr nocapture noundef readonly %fn, ptr noundef %data) #0 align 64 {
entry:
  %xpi = alloca %struct.rpc_xprt_iter, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %xpi) #18
  %0 = ptrtoint ptr %xpi to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %xpi, align 4, !annotation !420
  %1 = getelementptr inbounds %struct.rpc_xprt_iter, ptr %xpi, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !420
  %3 = getelementptr inbounds %struct.rpc_xprt_iter, ptr %xpi, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %3, align 4, !annotation !420
  %5 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %9 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %9, align 4
  %call.i = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end7.i_crit_edge

rcu_read_lock.exit.i.do.end7.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b14.i = load i1, ptr @rpc_clnt_xprt_iter_init.__warned, align 1
  br i1 %.b14.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_clnt_xprt_iter_init.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 786, ptr noundef nonnull @.str.4) #18
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %rcu_read_lock.exit.i.do.end7.i_crit_edge
  %call9.i = tail call ptr @xprt_switch_get(ptr noundef %11) #18
  %call.i15.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i15.i, label %do.end7.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i18.i

do.end7.i.rcu_read_unlock.exit.i_crit_edge:       ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit.i

land.lhs.true.i18.i:                              ; preds = %do.end7.i
  %call1.i16.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16.i)
  %tobool.not.i17.i = icmp eq i32 %call1.i16.i, 0
  br i1 %tobool.not.i17.i, label %land.lhs.true.i18.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i20.i

land.lhs.true.i18.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i20.i:                             ; preds = %land.lhs.true.i18.i
  %.b4.i19.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19.i, label %land.lhs.true2.i20.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i21.i

land.lhs.true2.i20.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i20.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit.i

if.then.i21.i:                                    ; preds = %land.lhs.true2.i20.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i21.i, %land.lhs.true2.i20.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i18.i.rcu_read_unlock.exit.i_crit_edge, %do.end7.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %12 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i22.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i22.i to ptr
  %preempt_count.i.i.i.i23.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i23.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i23.i, align 4
  %sub.i.i.i.i = add i32 %15, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i23.i, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  %cmp.i = icmp eq ptr %call9.i, null
  br i1 %cmp.i, label %rcu_read_unlock.exit.i.cleanup8_crit_edge, label %rpc_clnt_xprt_iter_init.exit

rcu_read_unlock.exit.i.cleanup8_crit_edge:        ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup8

rpc_clnt_xprt_iter_init.exit:                     ; preds = %rcu_read_unlock.exit.i
  call void @xprt_iter_init_listall(ptr noundef nonnull %xpi, ptr noundef nonnull %call9.i) #18
  call void @xprt_switch_put(ptr noundef nonnull %call9.i) #18
  %call122 = call ptr @xprt_iter_get_next(ptr noundef nonnull %xpi) #18
  %tobool2.not23 = icmp eq ptr %call122, null
  br i1 %tobool2.not23, label %rpc_clnt_xprt_iter_init.exit.for.end_crit_edge, label %rpc_clnt_xprt_iter_init.exit.if.end4_crit_edge

rpc_clnt_xprt_iter_init.exit.if.end4_crit_edge:   ; preds = %rpc_clnt_xprt_iter_init.exit
  br label %if.end4

rpc_clnt_xprt_iter_init.exit.for.end_crit_edge:   ; preds = %rpc_clnt_xprt_iter_init.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.cond:                                         ; preds = %if.end4
  %call1 = call ptr @xprt_iter_get_next(ptr noundef nonnull %xpi) #18
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %for.cond.for.end_crit_edge, label %for.cond.if.end4_crit_edge

for.cond.if.end4_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end4

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

if.end4:                                          ; preds = %for.cond.if.end4_crit_edge, %rpc_clnt_xprt_iter_init.exit.if.end4_crit_edge
  %call124 = phi ptr [ %call1, %for.cond.if.end4_crit_edge ], [ %call122, %rpc_clnt_xprt_iter_init.exit.if.end4_crit_edge ]
  %call5 = call i32 %fn(ptr noundef %clnt, ptr noundef nonnull %call124, ptr noundef %data) #18
  call void @xprt_put(ptr noundef nonnull %call124) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %if.end4.for.end_crit_edge, label %for.cond

if.end4.for.end_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.end:                                          ; preds = %if.end4.for.end_crit_edge, %for.cond.for.end_crit_edge, %rpc_clnt_xprt_iter_init.exit.for.end_crit_edge
  %ret.1.ph = phi i32 [ 0, %rpc_clnt_xprt_iter_init.exit.for.end_crit_edge ], [ %call5, %if.end4.for.end_crit_edge ], [ %call5, %for.cond.for.end_crit_edge ]
  call void @xprt_iter_destroy(ptr noundef nonnull %xpi) #18
  br label %cleanup8

cleanup8:                                         ; preds = %for.end, %rcu_read_unlock.exit.i.cleanup8_crit_edge
  %retval.0 = phi i32 [ %ret.1.ph, %for.end ], [ -11, %rcu_read_unlock.exit.i.cleanup8_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %xpi) #18
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_iter_get_next(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_iter_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_killall_tasks(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_tasks = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 3
  %0 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i.not = icmp eq ptr %1, %cl_tasks
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @trace_rpc_clnt_killall(ptr noundef %clnt)
  %cl_lock = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 5
  tail call void @_raw_spin_lock(ptr noundef %cl_lock) #18
  %2 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn16 = load ptr, ptr %cl_tasks, align 4
  %cmp.not17 = icmp eq ptr %.pn16, %cl_tasks
  br i1 %cmp.not17, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn18 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn16, %if.end.for.body_crit_edge ]
  %rovr.0 = getelementptr i8, ptr %.pn18, i32 -8
  tail call void @rpc_signal_task(ptr noundef %rovr.0) #18
  %3 = ptrtoint ptr %.pn18 to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn = load ptr, ptr %.pn18, align 4
  %cmp.not = icmp eq ptr %.pn, %cl_tasks
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock) #18
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_killall(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_killall, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_killall, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !438
  %call42 = tail call i32 @__traceiter_rpc_clnt_killall(ptr noundef null, ptr noundef %clnt) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !439
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_killall, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_killall, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_killall.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_killall.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 136, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_signal_task(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_shutdown_client(ptr noundef %clnt) #0 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 860) #18
  tail call fastcc void @trace_rpc_clnt_shutdown(ptr noundef %clnt)
  %cl_tasks = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 3
  %0 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i.not67 = icmp eq ptr %1, %cl_tasks
  br i1 %cmp.i.not67, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %cl_lock.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 5
  br label %while.body

while.body:                                       ; preds = %if.end42.while.body_crit_edge, %while.body.lr.ph
  %2 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i.not.i = icmp eq ptr %3, %cl_tasks
  br i1 %cmp.i.not.i, label %while.body.rpc_killall_tasks.exit_crit_edge, label %if.end.i

while.body.rpc_killall_tasks.exit_crit_edge:      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_killall_tasks.exit

if.end.i:                                         ; preds = %while.body
  call fastcc void @trace_rpc_clnt_killall(ptr noundef %clnt) #18
  call void @_raw_spin_lock(ptr noundef %cl_lock.i) #18
  %4 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn16.i = load ptr, ptr %cl_tasks, align 4
  %cmp.not17.i = icmp eq ptr %.pn16.i, %cl_tasks
  br i1 %cmp.not17.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %.pn18.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn16.i, %if.end.i.for.body.i_crit_edge ]
  %rovr.0.i = getelementptr i8, ptr %.pn18.i, i32 -8
  call void @rpc_signal_task(ptr noundef %rovr.0.i) #18
  %5 = ptrtoint ptr %.pn18.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i = load ptr, ptr %.pn18.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %cl_tasks
  br i1 %cmp.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %cl_lock.i) #18
  br label %rpc_killall_tasks.exit

rpc_killall_tasks.exit:                           ; preds = %for.end.i, %while.body.rpc_killall_tasks.exit_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 867) #18
  %6 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i57.not = icmp eq ptr %7, %cl_tasks
  br i1 %cmp.i57.not, label %rpc_killall_tasks.exit.if.end42_crit_edge, label %if.then17

rpc_killall_tasks.exit.if.end42_crit_edge:        ; preds = %rpc_killall_tasks.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end42

if.then17:                                        ; preds = %rpc_killall_tasks.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #18
  %8 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #18
  %call1964 = call i32 @prepare_to_wait_event(ptr noundef nonnull @destroy_wait, ptr noundef nonnull %__wq_entry, i32 noundef 2) #18
  %9 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i59.not65 = icmp eq ptr %10, %cl_tasks
  br i1 %cmp.i59.not65, label %if.then17.for.end_crit_edge, label %if.then17.cleanup_crit_edge

if.then17.cleanup_crit_edge:                      ; preds = %if.then17
  br label %cleanup

if.then17.for.end_crit_edge:                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.then17.cleanup_crit_edge
  %__ret18.166 = phi i32 [ %__ret18.1, %cleanup.cleanup_crit_edge ], [ 100, %if.then17.cleanup_crit_edge ]
  %call40 = call i32 @schedule_timeout(i32 noundef %__ret18.166) #18
  %call19 = call i32 @prepare_to_wait_event(ptr noundef nonnull @destroy_wait, ptr noundef nonnull %__wq_entry, i32 noundef 2) #18
  %11 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i59.not = icmp eq ptr %12, %cl_tasks
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool27.not = icmp eq i32 %call40, 0
  %13 = select i1 %cmp.i59.not, i1 %tobool27.not, i1 false
  %__ret18.1 = select i1 %13, i32 1, i32 %call40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret18.1)
  %tobool33.not = icmp eq i32 %__ret18.1, 0
  %14 = select i1 %cmp.i59.not, i1 true, i1 %tobool33.not
  br i1 %14, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.then17.for.end_crit_edge
  call void @finish_wait(ptr noundef nonnull @destroy_wait, ptr noundef nonnull %__wq_entry) #18
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #18
  br label %if.end42

if.end42:                                         ; preds = %for.end, %rpc_killall_tasks.exit.if.end42_crit_edge
  %15 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %cl_tasks, align 4
  %cmp.i.not = icmp eq ptr %16, %cl_tasks
  br i1 %cmp.i.not, label %if.end42.while.end_crit_edge, label %if.end42.while.body_crit_edge

if.end42.while.body_crit_edge:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.body

if.end42.while.end_crit_edge:                     ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.end

while.end:                                        ; preds = %if.end42.while.end_crit_edge, %entry.while.end_crit_edge
  call void @rpc_release_client(ptr noundef %clnt)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_shutdown(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_shutdown, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_shutdown, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !440
  %call42 = tail call i32 @__traceiter_rpc_clnt_shutdown(ptr noundef null, ptr noundef %clnt) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !441
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_shutdown, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_shutdown, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_shutdown.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_shutdown.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 137, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @refcount_dec_not_one(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_bind_new_program(ptr noundef %old, ptr noundef %program, i32 noundef %vers) #0 align 64 {
entry:
  %msg.i.i = alloca %struct.rpc_message, align 4
  %task_setup_data.i.i = alloca %struct.rpc_task_setup, align 4
  %args = alloca %struct.rpc_create_args, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args) #18
  %0 = getelementptr inbounds i8, ptr %args, i32 44
  %1 = call ptr @memset(ptr %0, i32 255, i32 28)
  %program1 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 8
  %2 = call ptr @memset(ptr %args, i32 0, i32 32)
  %3 = ptrtoint ptr %program1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %program, ptr %program1, align 4
  %prognumber = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 9
  %number = getelementptr inbounds %struct.rpc_program, ptr %program, i32 0, i32 1
  %4 = ptrtoint ptr %number to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %number, align 4
  %6 = ptrtoint ptr %prognumber to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %prognumber, align 4
  %version = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 10
  %7 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %vers, ptr %version, align 4
  %authflavor = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 11
  %cl_auth = getelementptr inbounds %struct.rpc_clnt, ptr %old, i32 0, i32 11
  %8 = ptrtoint ptr %cl_auth to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cl_auth, align 4
  %au_flavor = getelementptr inbounds %struct.rpc_auth, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %au_flavor to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %au_flavor, align 4
  %12 = ptrtoint ptr %authflavor to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %authflavor, align 4
  %nconnect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 12
  %cred = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 16
  %cl_cred = getelementptr inbounds %struct.rpc_clnt, ptr %old, i32 0, i32 29
  %13 = call ptr @memset(ptr %nconnect, i32 0, i32 16)
  %14 = ptrtoint ptr %cl_cred to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cl_cred, align 4
  %16 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %cred, align 4
  %max_connect = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 17
  %17 = ptrtoint ptr %max_connect to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %max_connect, align 4
  %call = call fastcc ptr @__rpc_clone_client(ptr noundef nonnull %args, ptr noundef %old)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %msg.i.i) #18
  %18 = call ptr @memcpy(ptr %msg.i.i, ptr @__const.rpc_call_null_helper.msg, i32 16)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data.i.i) #18
  %19 = getelementptr inbounds i8, ptr %task_setup_data.i.i, i32 32
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 101712127, ptr %19, align 4, !annotation !420
  %21 = ptrtoint ptr %task_setup_data.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %task_setup_data.i.i, align 4
  %rpc_client.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %rpc_client.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call, ptr %rpc_client.i.i, align 4
  %rpc_xprt.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 2
  %23 = ptrtoint ptr %rpc_xprt.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %rpc_xprt.i.i, align 4
  %rpc_op_cred.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 3
  %24 = ptrtoint ptr %rpc_op_cred.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %rpc_op_cred.i.i, align 4
  %rpc_message.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 4
  %25 = ptrtoint ptr %rpc_message.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %msg.i.i, ptr %rpc_message.i.i, align 4
  %callback_ops.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 5
  %26 = ptrtoint ptr %callback_ops.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @rpc_null_ops, ptr %callback_ops.i.i, align 4
  %callback_data.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 6
  %27 = ptrtoint ptr %callback_data.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %callback_data.i.i, align 4
  %workqueue.i.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i.i, i32 0, i32 7
  %28 = ptrtoint ptr %workqueue.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %workqueue.i.i, align 4
  %call.i.i = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data.i.i) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data.i.i) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %msg.i.i) #18
  %cmp.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %29 = ptrtoint ptr %call.i.i to i32
  br label %rpc_ping.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %tk_status.i = getelementptr inbounds %struct.rpc_task, ptr %call.i.i, i32 0, i32 1
  %30 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %tk_status.i, align 4
  call void @rpc_put_task(ptr noundef %call.i.i) #18
  br label %rpc_ping.exit

rpc_ping.exit:                                    ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %29, %if.then.i ], [ %31, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp.not = icmp eq i32 %retval.0.i, 0
  br i1 %cmp.not, label %rpc_ping.exit.out_crit_edge, label %if.then4

rpc_ping.exit.out_crit_edge:                      ; preds = %rpc_ping.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

if.then4:                                         ; preds = %rpc_ping.exit
  call void @__sanitizer_cov_trace_pc() #20
  call void @rpc_shutdown_client(ptr noundef %call)
  %32 = inttoptr i32 %retval.0.i to ptr
  br label %out

out:                                              ; preds = %if.then4, %rpc_ping.exit.out_crit_edge, %entry.out_crit_edge
  %clnt.0 = phi ptr [ %call, %entry.out_crit_edge ], [ %32, %if.then4 ], [ %call, %rpc_ping.exit.out_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args) #18
  ret ptr %clnt.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_task_get_xprt(ptr noundef %clnt, ptr noundef %xprt) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %xprt, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end10_crit_edge

rcu_read_lock.exit.do.end10_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end10

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end10_crit_edge, label %land.lhs.true5

land.lhs.true.do.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end10

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b14 = load i1, ptr @rpc_task_get_xprt.__warned, align 1
  br i1 %.b14, label %land.lhs.true5.do.end10_crit_edge, label %if.then7

land.lhs.true5.do.end10_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end10

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_task_get_xprt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 996, ptr noundef nonnull @.str.4) #18
  br label %do.end10

do.end10:                                         ; preds = %if.then7, %land.lhs.true5.do.end10_crit_edge, %land.lhs.true.do.end10_crit_edge, %rcu_read_lock.exit.do.end10_crit_edge
  %xps_queuelen = getelementptr inbounds %struct.rpc_xprt_switch, ptr %6, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %xps_queuelen, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %xps_queuelen, i32 1, i32 3, i32 1) #18
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %xps_queuelen, ptr %xps_queuelen, i32 1, ptr elementtype(i32) %xps_queuelen) #18, !srcloc !442
  %call.i16 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i16, label %do.end10.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i19

do.end10.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i19:                                ; preds = %do.end10
  %call1.i17 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i17)
  %tobool.not.i18 = icmp eq i32 %call1.i17, 0
  br i1 %tobool.not.i18, label %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i21

land.lhs.true.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i19
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i21:                               ; preds = %land.lhs.true.i19
  %.b4.i20 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i20, label %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, label %if.then.i22

land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i22:                                      ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i22, %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, %do.end10.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %8 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i23 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i23 to ptr
  %preempt_count.i.i.i.i24 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i24, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i24, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  %queuelen = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 32
  %call.i.i15 = tail call zeroext i1 @__kasan_check_write(ptr noundef %queuelen, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %queuelen, i32 1, i32 3, i32 1) #18
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %queuelen, ptr %queuelen, i32 1, ptr elementtype(i32) %queuelen) #18, !srcloc !442
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  ret ptr %xprt
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %call = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_task_release_transport(ptr nocapture noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %0 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_xprt, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %tk_xprt, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client, align 4
  %tobool2.not = icmp eq ptr %4, null
  br i1 %tobool2.not, label %if.then.if.end5.sink.split_crit_edge, label %if.then3

if.then.if.end5.sink.split_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end5.sink.split

if.then3:                                         ; preds = %if.then
  %queuelen.i = getelementptr inbounds %struct.rpc_xprt, ptr %1, i32 0, i32 32
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %queuelen.i, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %queuelen.i, i32 1, i32 3, i32 1) #18
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %queuelen.i, ptr %queuelen.i, i32 1, ptr elementtype(i32) %queuelen.i) #18, !srcloc !443
  %6 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i.i, label %if.then3.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then3.rcu_read_lock.exit.i_crit_edge:          ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then3
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then3.rcu_read_lock.exit.i_crit_edge
  %10 = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 28
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %10, align 4
  %call.i = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end7.i_crit_edge

rcu_read_lock.exit.i.do.end7.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b10.i = load i1, ptr @rpc_task_release_xprt.__warned, align 1
  br i1 %.b10.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_task_release_xprt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1011, ptr noundef nonnull @.str.4) #18
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %rcu_read_lock.exit.i.do.end7.i_crit_edge
  %xps_queuelen.i = getelementptr inbounds %struct.rpc_xprt_switch, ptr %12, i32 0, i32 6
  %call.i.i11.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %xps_queuelen.i, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %xps_queuelen.i, i32 1, i32 3, i32 1) #18
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %xps_queuelen.i, ptr %xps_queuelen.i, i32 1, ptr elementtype(i32) %xps_queuelen.i) #18, !srcloc !443
  %call.i12.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i12.i, label %do.end7.i.rpc_task_release_xprt.exit_crit_edge, label %land.lhs.true.i15.i

do.end7.i.rpc_task_release_xprt.exit_crit_edge:   ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_release_xprt.exit

land.lhs.true.i15.i:                              ; preds = %do.end7.i
  %call1.i13.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i13.i)
  %tobool.not.i14.i = icmp eq i32 %call1.i13.i, 0
  br i1 %tobool.not.i14.i, label %land.lhs.true.i15.i.rpc_task_release_xprt.exit_crit_edge, label %land.lhs.true2.i17.i

land.lhs.true.i15.i.rpc_task_release_xprt.exit_crit_edge: ; preds = %land.lhs.true.i15.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_release_xprt.exit

land.lhs.true2.i17.i:                             ; preds = %land.lhs.true.i15.i
  %.b4.i16.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i16.i, label %land.lhs.true2.i17.i.rpc_task_release_xprt.exit_crit_edge, label %if.then.i18.i

land.lhs.true2.i17.i.rpc_task_release_xprt.exit_crit_edge: ; preds = %land.lhs.true2.i17.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_release_xprt.exit

if.then.i18.i:                                    ; preds = %land.lhs.true2.i17.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rpc_task_release_xprt.exit

rpc_task_release_xprt.exit:                       ; preds = %if.then.i18.i, %land.lhs.true2.i17.i.rpc_task_release_xprt.exit_crit_edge, %land.lhs.true.i15.i.rpc_task_release_xprt.exit_crit_edge, %do.end7.i.rpc_task_release_xprt.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %14 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i19.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i19.i to ptr
  %preempt_count.i.i.i.i20.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i20.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i20.i, align 4
  %sub.i.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i20.i, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  br label %if.end5.sink.split

if.end5.sink.split:                               ; preds = %rpc_task_release_xprt.exit, %if.then.if.end5.sink.split_crit_edge
  tail call void @xprt_put(ptr noundef nonnull %1) #18
  br label %if.end5

if.end5:                                          ; preds = %if.end5.sink.split, %entry.if.end5_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_task_release_client(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %0 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_client, align 4
  tail call void @rpc_task_release_transport(ptr noundef %task)
  %cmp.not = icmp eq ptr %1, null
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  %cl_lock = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 5
  tail call void @_raw_spin_lock(ptr noundef %cl_lock) #18
  %tk_task = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 2
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %tk_task) #18
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  %prev.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 2, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %tk_task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tk_task, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %8 = ptrtoint ptr %tk_task to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 256 to ptr), ptr %tk_task, align 4
  %prev.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 2, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock) #18
  %10 = ptrtoint ptr %tk_client to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %tk_client, align 4
  tail call void @rpc_release_client(ptr noundef nonnull %1)
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_run_task(ptr noundef %task_setup_data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @rpc_new_task(ptr noundef %task_setup_data) #18
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 20
  %0 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %tk_flags, align 4
  %2 = and i16 %1, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool.not = icmp eq i16 %2, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %or = or i16 %1, -32768
  %3 = ptrtoint ptr %tk_flags to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 %or, ptr %tk_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %rpc_client = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 1
  %4 = ptrtoint ptr %rpc_client to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rpc_client, align 4
  tail call fastcc void @rpc_task_set_transport(ptr noundef %call, ptr noundef %5) #18
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %tk_client.i, align 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %5, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %5, i32 1, i32 3, i32 1) #18
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %5, ptr %5, i32 1, ptr elementtype(i32) %5) #18, !srcloc !444
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !427

if.end.if.end15.sink.split.i.i.i.i_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %8 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %.not.i.i.i.i = icmp sgt i32 %8, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !419

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %5, i32 noundef %.sink.i.i.i.i) #18
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %cl_softrtry.i = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 14
  %9 = ptrtoint ptr %cl_softrtry.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load.i = load i8, ptr %cl_softrtry.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %refcount_inc.exit.i.if.end.i_crit_edge, label %if.then.i

refcount_inc.exit.i.if.end.i_crit_edge:           ; preds = %refcount_inc.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end.i

if.then.i:                                        ; preds = %refcount_inc.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  %10 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %tk_flags, align 4
  %12 = or i16 %11, 512
  store i16 %12, ptr %tk_flags, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %refcount_inc.exit.i.if.end.i_crit_edge
  %13 = ptrtoint ptr %cl_softrtry.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load2.i = load i8, ptr %cl_softrtry.i, align 4
  %14 = and i8 %bf.load2.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool5.not.i = icmp eq i8 %14, 0
  br i1 %tobool5.not.i, label %if.end.i.if.end11.i_crit_edge, label %if.then6.i

if.end.i.if.end11.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end11.i

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #20
  %15 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %tk_flags, align 4
  %17 = or i16 %16, 4096
  store i16 %17, ptr %tk_flags, align 4
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then6.i, %if.end.i.if.end11.i_crit_edge
  %18 = ptrtoint ptr %cl_softrtry.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load12.i = load i8, ptr %cl_softrtry.i, align 4
  %19 = and i8 %bf.load12.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool16.not.i = icmp eq i8 %19, 0
  br i1 %tobool16.not.i, label %if.end11.i.if.end22.i_crit_edge, label %if.then17.i

if.end11.i.if.end22.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end22.i

if.then17.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #20
  %20 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %tk_flags, align 4
  %22 = or i16 %21, 16384
  store i16 %22, ptr %tk_flags, align 4
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then17.i, %if.end11.i.if.end22.i_crit_edge
  %cl_swapper.i = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 17
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %cl_swapper.i, i32 noundef 4) #18
  %23 = ptrtoint ptr %cl_swapper.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %cl_swapper.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool23.not.i = icmp eq i32 %24, 0
  br i1 %tobool23.not.i, label %if.end22.i.if.end29.i_crit_edge, label %if.then24.i

if.end22.i.if.end29.i_crit_edge:                  ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end29.i

if.then24.i:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #20
  %25 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %tk_flags, align 4
  %27 = or i16 %26, 2
  store i16 %27, ptr %tk_flags, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then24.i, %if.end22.i.if.end29.i_crit_edge
  %cl_lock.i = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 5
  tail call void @_raw_spin_lock(ptr noundef %cl_lock.i) #18
  %tk_task.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 2
  %cl_tasks.i = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 3
  %prev.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 3, i32 1
  %28 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i, align 4
  %call.i.i46.i = tail call zeroext i1 @__list_add_valid(ptr noundef %tk_task.i, ptr noundef %29, ptr noundef %cl_tasks.i) #18
  br i1 %call.i.i46.i, label %if.end.i.i.i, label %if.end29.i.rpc_task_set_client.exit_crit_edge

if.end29.i.rpc_task_set_client.exit_crit_edge:    ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_set_client.exit

if.end.i.i.i:                                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #20
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %tk_task.i, ptr %prev.i.i, align 4
  %31 = ptrtoint ptr %tk_task.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %cl_tasks.i, ptr %tk_task.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 2, i32 1
  %32 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev3.i.i.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %tk_task.i, ptr %29, align 4
  br label %rpc_task_set_client.exit

rpc_task_set_client.exit:                         ; preds = %if.end.i.i.i, %if.end29.i.rpc_task_set_client.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock.i) #18
  %rpc_message = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 4
  %34 = ptrtoint ptr %rpc_message to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rpc_message, align 4
  %cmp.not.i = icmp eq ptr %35, null
  br i1 %cmp.not.i, label %rpc_task_set_client.exit.rpc_task_set_rpc_message.exit_crit_edge, label %if.then.i19

rpc_task_set_client.exit.rpc_task_set_rpc_message.exit_crit_edge: ; preds = %rpc_task_set_client.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_set_rpc_message.exit

if.then.i19:                                      ; preds = %rpc_task_set_client.exit
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tk_msg.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 10
  %38 = ptrtoint ptr %tk_msg.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %tk_msg.i, align 4
  %rpc_argp.i = getelementptr inbounds %struct.rpc_message, ptr %35, i32 0, i32 1
  %39 = ptrtoint ptr %rpc_argp.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rpc_argp.i, align 4
  %rpc_argp3.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 10, i32 1
  %41 = ptrtoint ptr %rpc_argp3.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %40, ptr %rpc_argp3.i, align 4
  %rpc_resp.i = getelementptr inbounds %struct.rpc_message, ptr %35, i32 0, i32 2
  %42 = ptrtoint ptr %rpc_resp.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %rpc_resp.i, align 4
  %rpc_resp5.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 10, i32 2
  %44 = ptrtoint ptr %rpc_resp5.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %43, ptr %rpc_resp5.i, align 4
  %rpc_cred.i = getelementptr inbounds %struct.rpc_message, ptr %35, i32 0, i32 3
  %45 = ptrtoint ptr %rpc_cred.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %rpc_cred.i, align 4
  %rpc_cred7.i = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 10, i32 3
  %47 = ptrtoint ptr %rpc_cred7.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %rpc_cred7.i, align 4
  %48 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %tk_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %49)
  %tobool.not.i18 = icmp slt i16 %49, 0
  %tobool.not.i.i = icmp eq ptr %46, null
  %or.cond.i = select i1 %tobool.not.i18, i1 true, i1 %tobool.not.i.i
  br i1 %or.cond.i, label %if.then.i19.rpc_task_set_rpc_message.exit_crit_edge, label %do.body.i.i

if.then.i19.rpc_task_set_rpc_message.exit_crit_edge: ; preds = %if.then.i19
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_set_rpc_message.exit

do.body.i.i:                                      ; preds = %if.then.i19
  %call.i.i.i20 = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %46) #18
  br i1 %call.i.i.i20, label %if.then.i.i.i, label %do.body.i.i.__validate_creds.exit.i.i_crit_edge, !prof !427

do.body.i.i.__validate_creds.exit.i.i_crit_edge:  ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__validate_creds.exit.i.i

if.then.i.i.i:                                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__invalid_creds(ptr noundef nonnull %46, ptr noundef nonnull @.str.27, i32 noundef 253) #18
  br label %__validate_creds.exit.i.i

__validate_creds.exit.i.i:                        ; preds = %if.then.i.i.i, %do.body.i.i.__validate_creds.exit.i.i_crit_edge
  %50 = getelementptr inbounds %struct.cred, ptr %46, i32 0, i32 28
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %50, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %46, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr nonnull %46, i32 1, i32 3, i32 1) #18
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %46, ptr nonnull %46, i32 1, ptr nonnull elementtype(i32) %46) #18, !srcloc !442
  br label %rpc_task_set_rpc_message.exit

rpc_task_set_rpc_message.exit:                    ; preds = %__validate_creds.exit.i.i, %if.then.i19.rpc_task_set_rpc_message.exit_crit_edge, %rpc_task_set_client.exit.rpc_task_set_rpc_message.exit_crit_edge
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 4
  %53 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %tk_action, align 4
  %cmp = icmp eq ptr %54, null
  br i1 %cmp, label %if.then5, label %rpc_task_set_rpc_message.exit.if.end6_crit_edge

rpc_task_set_rpc_message.exit.if.end6_crit_edge:  ; preds = %rpc_task_set_rpc_message.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end6

if.then5:                                         ; preds = %rpc_task_set_rpc_message.exit
  call void @__sanitizer_cov_trace_pc() #20
  %55 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @call_start, ptr %tk_action, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %rpc_task_set_rpc_message.exit.if.end6_crit_edge
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %call, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %call, i32 1, i32 3, i32 1) #18
  %56 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %call, ptr %call, i32 1, ptr elementtype(i32) %call) #18, !srcloc !442
  tail call void @rpc_execute(ptr noundef %call) #18
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_new_task(ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @rpc_call_start(ptr nocapture noundef writeonly %task) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %0 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @call_start, ptr %tk_action, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_execute(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_call_sync(ptr noundef %clnt, ptr noundef %msg, i32 noundef %flags) #0 align 64 {
entry:
  %task_setup_data = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data) #18
  %0 = getelementptr inbounds i8, ptr %task_setup_data, i32 32
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !420
  %2 = ptrtoint ptr %task_setup_data to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %task_setup_data, align 4
  %rpc_client = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 1
  %3 = ptrtoint ptr %rpc_client to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %clnt, ptr %rpc_client, align 4
  %rpc_xprt = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 2
  %4 = ptrtoint ptr %rpc_xprt to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %rpc_xprt, align 4
  %rpc_op_cred = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 3
  %5 = ptrtoint ptr %rpc_op_cred to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %rpc_op_cred, align 4
  %rpc_message = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 4
  %6 = ptrtoint ptr %rpc_message to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %msg, ptr %rpc_message, align 4
  %callback_ops = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 5
  %7 = ptrtoint ptr %callback_ops to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @rpc_default_ops, ptr %callback_ops, align 4
  %callback_data = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 6
  %8 = ptrtoint ptr %callback_data to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %callback_data, align 4
  %workqueue = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 7
  %9 = ptrtoint ptr %workqueue to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %workqueue, align 4
  %flags2 = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 8
  %conv = trunc i32 %flags to i16
  %10 = ptrtoint ptr %flags2 to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %conv, ptr %flags2, align 4
  %priority = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 9
  %11 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %priority, align 2
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end44, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b58 = load i1, ptr @rpc_call_sync.__already_done, align 1
  br i1 %.b58, label %land.rhs.if.then41_crit_edge, label %if.then, !prof !419

land.rhs.if.then41_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then41

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_call_sync.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1163, i32 noundef 9, ptr noundef null) #18
  br label %if.then41

if.then41:                                        ; preds = %if.then, %land.rhs.if.then41_crit_edge
  %12 = ptrtoint ptr %callback_ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %callback_ops, align 4
  %14 = ptrtoint ptr %callback_data to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %callback_data, align 4
  tail call void @rpc_release_calldata(ptr noundef %13, ptr noundef %15) #18
  br label %cleanup

if.end44:                                         ; preds = %entry
  %call = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #20
  %16 = ptrtoint ptr %call to i32
  br label %cleanup

if.end48:                                         ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #20
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %call, i32 0, i32 1
  %17 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %tk_status, align 4
  call void @rpc_put_task(ptr noundef %call) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %if.then46, %if.then41
  %retval.0 = phi i32 [ -22, %if.then41 ], [ %16, %if.then46 ], [ %18, %if.end48 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data) #18
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_release_calldata(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_put_task(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_call_async(ptr noundef %clnt, ptr noundef %msg, i32 noundef %flags, ptr noundef %tk_ops, ptr noundef %data) #0 align 64 {
entry:
  %task_setup_data = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data) #18
  %0 = getelementptr inbounds i8, ptr %task_setup_data, i32 32
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !420
  %2 = ptrtoint ptr %task_setup_data to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %task_setup_data, align 4
  %rpc_client = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 1
  %3 = ptrtoint ptr %rpc_client to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %clnt, ptr %rpc_client, align 4
  %rpc_xprt = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 2
  %4 = ptrtoint ptr %rpc_xprt to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %rpc_xprt, align 4
  %rpc_op_cred = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 3
  %5 = ptrtoint ptr %rpc_op_cred to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %rpc_op_cred, align 4
  %rpc_message = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 4
  %6 = ptrtoint ptr %rpc_message to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %msg, ptr %rpc_message, align 4
  %callback_ops = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 5
  %7 = ptrtoint ptr %callback_ops to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %tk_ops, ptr %callback_ops, align 4
  %callback_data = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 6
  %8 = ptrtoint ptr %callback_data to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %data, ptr %callback_data, align 4
  %workqueue = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 7
  %9 = ptrtoint ptr %workqueue to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %workqueue, align 4
  %flags2 = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 8
  %10 = trunc i32 %flags to i16
  %conv = or i16 %10, 1
  %11 = ptrtoint ptr %flags2 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %conv, ptr %flags2, align 4
  %priority = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data, i32 0, i32 9
  %12 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %priority, align 2
  %call = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %13 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  call void @rpc_put_task(ptr noundef %call) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %13, %if.then ], [ 0, %if.end ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_run_bc_task(ptr noundef %req) local_unnamed_addr #0 align 64 {
entry:
  %task_setup_data = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data) #18
  %0 = call ptr @memcpy(ptr %task_setup_data, ptr @__const.rpc_run_bc_task.task_setup_data, i32 36)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %1 = load i32, ptr @rpc_debug, align 4
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end, !prof !419

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5, ptr noundef %req) #21
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  %call6 = call ptr @rpc_new_task(ptr noundef nonnull %task_setup_data) #18
  call void @xprt_init_bc_request(ptr noundef %req, ptr noundef %call6) #18
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %call6, i32 0, i32 4
  %2 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @call_bc_encode, ptr %tk_action, align 4
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %call6, i32 noundef 4) #18
  call void @llvm.prefetch.p0(ptr %call6, i32 1, i32 3, i32 1) #18
  %3 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %call6, ptr %call6, i32 1, ptr elementtype(i32) %call6) #18, !srcloc !442
  %call.i.i85 = call zeroext i1 @__kasan_check_read(ptr noundef %call6, i32 noundef 4) #18
  %4 = ptrtoint ptr %call6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %call6, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp.not = icmp eq i32 %5, 2
  br i1 %cmp.not, label %do.end5.if.end49_crit_edge, label %land.rhs

do.end5.if.end49_crit_edge:                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end49

land.rhs:                                         ; preds = %do.end5
  %.b84 = load i1, ptr @rpc_run_bc_task.__already_done, align 1
  br i1 %.b84, label %land.rhs.if.end49_crit_edge, label %if.then23, !prof !419

land.rhs.if.end49_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end49

if.then23:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_run_bc_task.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1234, i32 noundef 9, ptr noundef null) #18
  br label %if.end49

if.end49:                                         ; preds = %if.then23, %land.rhs.if.end49_crit_edge, %do.end5.if.end49_crit_edge
  call void @rpc_execute(ptr noundef %call6) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %6 = load i32, ptr @rpc_debug, align 4
  %and58 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end49.do.end74_crit_edge, label %do.end69, !prof !419

if.end49.do.end74_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end74

do.end69:                                         ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #20
  %call71 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef %call6) #21
  br label %do.end74

do.end74:                                         ; preds = %do.end69, %if.end49.do.end74_crit_edge
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data) #18
  ret ptr %call6
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_init_bc_request(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_bc_encode(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @xprt_request_enqueue_transmit(ptr noundef %task) #18
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %0 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @call_bc_transmit, ptr %tk_action, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_prepare_reply_pages(ptr noundef %req, ptr noundef %pages, i32 noundef %base, i32 noundef %len, i32 noundef %hdrsize) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %rq_cred = getelementptr inbounds %struct.rpc_rqst, ptr %req, i32 0, i32 4
  %0 = ptrtoint ptr %rq_cred to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq_cred, align 8
  %cr_auth = getelementptr inbounds %struct.rpc_cred, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cr_auth to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cr_auth, align 4
  %au_ralign = getelementptr inbounds %struct.rpc_auth, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %au_ralign to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %au_ralign, align 4
  %add = add i32 %hdrsize, 4
  %add1 = add i32 %add, %5
  %rq_rcv_buf = getelementptr inbounds %struct.rpc_rqst, ptr %req, i32 0, i32 2
  %shl = shl i32 %add1, 2
  tail call void @xdr_inline_pages(ptr noundef %rq_rcv_buf, i32 noundef %shl, ptr noundef %pages, i32 noundef %base, i32 noundef %len) #18
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %req, i32 0, i32 3
  %6 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rq_task, align 4
  tail call fastcc void @trace_rpc_xdr_reply_pages(ptr noundef %7, ptr noundef %rq_rcv_buf)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdr_inline_pages(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_xdr_reply_pages(ptr noundef %task, ptr noundef %xdr) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_reply_pages, i32 0, i32 1), ptr blockaddress(@trace_rpc_xdr_reply_pages, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !445
  %call42 = tail call i32 @__traceiter_rpc_xdr_reply_pages(ptr noundef null, ptr noundef %task, ptr noundef %xdr) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !446
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_reply_pages, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_reply_pages, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_xdr_reply_pages.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_xdr_reply_pages.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 106, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_start(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %0 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_client, align 4
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %2 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_msg, align 4
  %p_statidx = getelementptr inbounds %struct.rpc_procinfo, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %p_statidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %p_statidx, align 4
  tail call fastcc void @trace_rpc_request(ptr noundef %task)
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 24
  %6 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cl_program, align 4
  %version = getelementptr inbounds %struct.rpc_program, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %version, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 9
  %10 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cl_vers, align 4
  %arrayidx = getelementptr ptr, ptr %9, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %counts = getelementptr inbounds %struct.rpc_version, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %counts to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %counts, align 4
  %arrayidx5 = getelementptr i32, ptr %15, i32 %5
  %16 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx5, align 4
  %inc = add i32 %17, 1
  store i32 %inc, ptr %arrayidx5, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cl_stats = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 12
  %18 = ptrtoint ptr %cl_stats to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %cl_stats, align 4
  %rpccnt = getelementptr inbounds %struct.rpc_stat, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %rpccnt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %rpccnt, align 4
  %inc6 = add i32 %21, 1
  store i32 %inc6, ptr %rpccnt, align 4
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %22 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @call_reserve, ptr %tk_action, align 4
  tail call fastcc void @rpc_task_set_transport(ptr noundef %task, ptr noundef %1)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_peeraddr(ptr noundef %clnt, ptr nocapture noundef writeonly %buf, i32 noundef %bufsize) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b15 = load i1, ptr @rpc_peeraddr.__warned, align 1
  br i1 %.b15, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_peeraddr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1283, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %addrlen = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %addrlen to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %addrlen, align 8
  %8 = tail call i32 @llvm.umin.i32(i32 %7, i32 %bufsize)
  %addr = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 4
  %9 = call ptr @memcpy(ptr %buf, ptr %addr, i32 %8)
  %call.i16 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i16, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i19

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i19:                                ; preds = %do.end7
  %call1.i17 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i17)
  %tobool.not.i18 = icmp eq i32 %call1.i17, 0
  br i1 %tobool.not.i18, label %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i21

land.lhs.true.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i19
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i21:                               ; preds = %land.lhs.true.i19
  %.b4.i20 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i20, label %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, label %if.then.i22

land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i22:                                      ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i22, %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %10 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i23 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i23 to ptr
  %preempt_count.i.i.i.i24 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i24, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i24, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_peeraddr2str(ptr noundef %clnt, i32 noundef %format) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %0 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end7_crit_edge

entry.do.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b14 = load i1, ptr @rpc_peeraddr2str.__warned, align 1
  br i1 %.b14, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_peeraddr2str.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1309, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %entry.do.end7_crit_edge
  %arrayidx = getelementptr %struct.rpc_xprt, ptr %1, i32 0, i32 51, i32 %format
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %cmp.not = icmp eq ptr %3, null
  %.str.10. = select i1 %cmp.not, ptr @.str.10, ptr %3
  ret ptr %.str.10.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_localaddr(ptr noundef %clnt, ptr noundef %buf, i32 noundef %buflen) #0 align 64 {
entry:
  %sock.i = alloca ptr, align 4
  %address = alloca %struct.__kernel_sockaddr_storage, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %address) #18
  %0 = call ptr @memset(ptr %address, i32 255, i32 128)
  %1 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %4, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %5 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b27 = load i1, ptr @rpc_localaddr.__warned, align 1
  br i1 %.b27, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_localaddr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1452, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %addrlen = getelementptr inbounds %struct.rpc_xprt, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %addrlen to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %addrlen, align 8
  %addr = getelementptr inbounds %struct.rpc_xprt, ptr %6, i32 0, i32 4
  %9 = call ptr @memcpy(ptr %address, ptr %addr, i32 %8)
  %xprt_net = getelementptr inbounds %struct.rpc_xprt, ptr %6, i32 0, i32 49
  %10 = ptrtoint ptr %xprt_net to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %xprt_net, align 8
  %count.i = getelementptr inbounds %struct.net, ptr %11, i32 0, i32 14, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #18
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #18, !srcloc !444
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %do.end7.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !427

do.end7.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %do.end7
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %13 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %.not.i.i.i.i = icmp sgt i32 %13, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_net.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !419

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_net.exit_crit_edge:           ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_net.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %do.end7.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %do.end7.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #18
  br label %get_net.exit

get_net.exit:                                     ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_net.exit_crit_edge
  %call.i28 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i28, label %get_net.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i31

get_net.exit.rcu_read_unlock.exit_crit_edge:      ; preds = %get_net.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i31:                                ; preds = %get_net.exit
  %call1.i29 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i29)
  %tobool.not.i30 = icmp eq i32 %call1.i29, 0
  br i1 %tobool.not.i30, label %land.lhs.true.i31.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i33

land.lhs.true.i31.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i31
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i33:                               ; preds = %land.lhs.true.i31
  %.b4.i32 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i32, label %land.lhs.true2.i33.rcu_read_unlock.exit_crit_edge, label %if.then.i34

land.lhs.true2.i33.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i33
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i34:                                      ; preds = %land.lhs.true2.i33
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i34, %land.lhs.true2.i33.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i31.rcu_read_unlock.exit_crit_edge, %get_net.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %14 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i35 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i35 to ptr
  %preempt_count.i.i.i.i36 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i36, align 4
  %sub.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i36, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  %18 = ptrtoint ptr %address to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %address, align 4
  %20 = zext i16 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.81)
  switch i16 %19, label %rcu_read_unlock.exit.rpc_set_port.exit_crit_edge [
    i16 2, label %sw.bb.i
    i16 10, label %sw.bb1.i
  ]

rcu_read_unlock.exit.rpc_set_port.exit_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_set_port.exit

sw.bb.i:                                          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #20
  %sin_port.i = getelementptr inbounds %struct.sockaddr_in, ptr %address, i32 0, i32 1
  br label %sw.epilog.sink.split.i

sw.bb1.i:                                         ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #20
  %sin6_port.i = getelementptr inbounds %struct.sockaddr_in6, ptr %address, i32 0, i32 1
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %sw.bb1.i, %sw.bb.i
  %sin6_port.sink.i = phi ptr [ %sin6_port.i, %sw.bb1.i ], [ %sin_port.i, %sw.bb.i ]
  %21 = ptrtoint ptr %sin6_port.sink.i to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 0, ptr %sin6_port.sink.i, align 2
  br label %rpc_set_port.exit

rpc_set_port.exit:                                ; preds = %sw.epilog.sink.split.i, %rcu_read_unlock.exit.rpc_set_port.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sock.i) #18
  %22 = ptrtoint ptr %sock.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 -1 to ptr), ptr %sock.i, align 4, !annotation !420
  %conv.i = zext i16 %19 to i32
  %call.i37 = call i32 @__sock_create(ptr noundef %11, i32 noundef %conv.i, i32 noundef 2, i32 noundef 17, ptr noundef nonnull %sock.i, i32 noundef 1) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i37)
  %cmp.i = icmp slt i32 %call.i37, 0
  br i1 %cmp.i, label %do.body.i, label %if.end9.i

do.body.i:                                        ; preds = %rpc_set_port.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %23 = load i32, ptr @rpc_debug, align 4
  %and.i = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i38 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i38, label %do.body.i.rpc_sockname.exit_crit_edge, label %do.end.i, !prof !419

do.body.i.rpc_sockname.exit_crit_edge:            ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_sockname.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #20
  %call6.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, i32 noundef %call.i37) #21
  br label %rpc_sockname.exit

if.end9.i:                                        ; preds = %rpc_set_port.exit
  %24 = ptrtoint ptr %address to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %address, align 4
  %26 = zext i16 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.82)
  switch i16 %25, label %if.end9.i.rpc_sockname.exit_crit_edge [
    i16 2, label %sw.bb.i39
    i16 10, label %sw.bb13.i
  ]

if.end9.i.rpc_sockname.exit_crit_edge:            ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_sockname.exit

sw.bb.i39:                                        ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #20
  %27 = ptrtoint ptr %sock.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sock.i, align 4
  %call12.i = call i32 @kernel_bind(ptr noundef %28, ptr noundef nonnull @rpc_inaddr_loopback, i32 noundef 16) #18
  br label %sw.epilog.i

sw.bb13.i:                                        ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #20
  %29 = ptrtoint ptr %sock.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %sock.i, align 4
  %call14.i = call i32 @kernel_bind(ptr noundef %30, ptr noundef nonnull @rpc_in6addr_loopback, i32 noundef 28) #18
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb13.i, %sw.bb.i39
  %err.0.i = phi i32 [ %call14.i, %sw.bb13.i ], [ %call12.i, %sw.bb.i39 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i)
  %cmp15.i = icmp slt i32 %err.0.i, 0
  br i1 %cmp15.i, label %do.body18.i, label %if.end36.i

do.body18.i:                                      ; preds = %sw.epilog.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %31 = load i32, ptr @rpc_debug, align 4
  %and19.i = and i32 %31, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i)
  %tobool20.not.i = icmp eq i32 %and19.i, 0
  br i1 %tobool20.not.i, label %do.body18.i.out_release.i_crit_edge, label %do.end30.i, !prof !419

do.body18.i.out_release.i_crit_edge:              ; preds = %do.body18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_release.i

do.end30.i:                                       ; preds = %do.body18.i
  call void @__sanitizer_cov_trace_pc() #20
  %call32.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42, i32 noundef %err.0.i) #21
  br label %out_release.i

if.end36.i:                                       ; preds = %sw.epilog.i
  %32 = ptrtoint ptr %sock.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %sock.i, align 4
  %call37.i = call i32 @kernel_connect(ptr noundef %33, ptr noundef nonnull %address, i32 noundef %8, i32 noundef 0) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i)
  %cmp38.i = icmp slt i32 %call37.i, 0
  br i1 %cmp38.i, label %do.body41.i, label %if.end59.i

do.body41.i:                                      ; preds = %if.end36.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %34 = load i32, ptr @rpc_debug, align 4
  %and42.i = and i32 %34, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42.i)
  %tobool43.not.i = icmp eq i32 %and42.i, 0
  br i1 %tobool43.not.i, label %do.body41.i.out_release.i_crit_edge, label %do.end53.i, !prof !419

do.body41.i.out_release.i_crit_edge:              ; preds = %do.body41.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_release.i

do.end53.i:                                       ; preds = %do.body41.i
  call void @__sanitizer_cov_trace_pc() #20
  %call55.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.45, i32 noundef %call37.i) #21
  br label %out_release.i

if.end59.i:                                       ; preds = %if.end36.i
  %35 = ptrtoint ptr %sock.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sock.i, align 4
  %call60.i = call i32 @kernel_getsockname(ptr noundef %36, ptr noundef %buf) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60.i)
  %cmp61.i = icmp slt i32 %call60.i, 0
  br i1 %cmp61.i, label %do.body64.i, label %if.end82.i

do.body64.i:                                      ; preds = %if.end59.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %37 = load i32, ptr @rpc_debug, align 4
  %and65.i = and i32 %37, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65.i)
  %tobool66.not.i = icmp eq i32 %and65.i, 0
  br i1 %tobool66.not.i, label %do.body64.i.out_release.i_crit_edge, label %do.end76.i, !prof !419

do.body64.i.out_release.i_crit_edge:              ; preds = %do.body64.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_release.i

do.end76.i:                                       ; preds = %do.body64.i
  call void @__sanitizer_cov_trace_pc() #20
  %call78.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.48, i32 noundef %call60.i) #21
  br label %out_release.i

if.end82.i:                                       ; preds = %if.end59.i
  %38 = ptrtoint ptr %buf to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %buf, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %39)
  %cmp85.i = icmp eq i16 %39, 10
  br i1 %cmp85.i, label %if.then87.i, label %if.end82.i.do.body89.i_crit_edge

if.end82.i.do.body89.i_crit_edge:                 ; preds = %if.end82.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body89.i

if.then87.i:                                      ; preds = %if.end82.i
  call void @__sanitizer_cov_trace_pc() #20
  %sin6_scope_id.i = getelementptr inbounds %struct.sockaddr_in6, ptr %buf, i32 0, i32 4
  %40 = ptrtoint ptr %sin6_scope_id.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %sin6_scope_id.i, align 4
  br label %do.body89.i

do.body89.i:                                      ; preds = %if.then87.i, %if.end82.i.do.body89.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %41 = load i32, ptr @rpc_debug, align 4
  %and90.i = and i32 %41, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90.i)
  %tobool91.not.i = icmp eq i32 %and90.i, 0
  br i1 %tobool91.not.i, label %do.body89.i.out_release.i_crit_edge, label %do.end101.i, !prof !419

do.body89.i.out_release.i_crit_edge:              ; preds = %do.body89.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_release.i

do.end101.i:                                      ; preds = %do.body89.i
  call void @__sanitizer_cov_trace_pc() #20
  %call103.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51, ptr noundef nonnull @.str.40) #21
  br label %out_release.i

out_release.i:                                    ; preds = %do.end101.i, %do.body89.i.out_release.i_crit_edge, %do.end76.i, %do.body64.i.out_release.i_crit_edge, %do.end53.i, %do.body41.i.out_release.i_crit_edge, %do.end30.i, %do.body18.i.out_release.i_crit_edge
  %err.1.i = phi i32 [ %err.0.i, %do.end30.i ], [ %err.0.i, %do.body18.i.out_release.i_crit_edge ], [ %call37.i, %do.end53.i ], [ %call37.i, %do.body41.i.out_release.i_crit_edge ], [ %call60.i, %do.end76.i ], [ %call60.i, %do.body64.i.out_release.i_crit_edge ], [ 0, %do.end101.i ], [ 0, %do.body89.i.out_release.i_crit_edge ]
  %42 = ptrtoint ptr %sock.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %sock.i, align 4
  call void @sock_release(ptr noundef %43) #18
  br label %rpc_sockname.exit

rpc_sockname.exit:                                ; preds = %out_release.i, %if.end9.i.rpc_sockname.exit_crit_edge, %do.end.i, %do.body.i.rpc_sockname.exit_crit_edge
  %err.2.i = phi i32 [ -97, %do.end.i ], [ -97, %do.body.i.rpc_sockname.exit_crit_edge ], [ %err.1.i, %out_release.i ], [ -97, %if.end9.i.rpc_sockname.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sock.i) #18
  %call.i.i.i.i.i.i41 = call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !424
  call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #18
  %44 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #18, !srcloc !425
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %44, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i43, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %rpc_sockname.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i42 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i42, label %if.end5.i.i.i.i.put_net.exit_crit_edge, label %if.then10.i.i.i.i, !prof !419

if.end5.i.i.i.i.put_net.exit_crit_edge:           ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %put_net.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef 3) #18
  br label %put_net.exit

if.then.i43:                                      ; preds = %rpc_sockname.exit
  call void @__sanitizer_cov_trace_pc() #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !426
  call void @__put_net(ptr noundef %11) #18
  br label %put_net.exit

put_net.exit:                                     ; preds = %if.then.i43, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_net.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.2.i)
  %cmp.not = icmp eq i32 %err.2.i, 0
  br i1 %cmp.not, label %put_net.exit.cleanup_crit_edge, label %if.then11

put_net.exit.cleanup_crit_edge:                   ; preds = %put_net.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then11:                                        ; preds = %put_net.exit
  %45 = ptrtoint ptr %address to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %address, align 4
  %47 = zext i16 %46 to i64
  call void @__sanitizer_cov_trace_switch(i64 %47, ptr @__sancov_gen_cov_switch_values.83)
  switch i16 %46, label %do.body.i49 [
    i16 2, label %sw.bb.i45
    i16 10, label %sw.bb1.i46
  ]

sw.bb.i45:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %buflen)
  %cmp.i44 = icmp ult i32 %buflen, 16
  br i1 %cmp.i44, label %sw.bb.i45.cleanup_crit_edge, label %if.end.i

sw.bb.i45.cleanup_crit_edge:                      ; preds = %sw.bb.i45
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.i:                                         ; preds = %sw.bb.i45
  call void @__sanitizer_cov_trace_pc() #20
  %48 = call ptr @memcpy(ptr %buf, ptr @rpc_inaddr_loopback, i32 16)
  br label %do.body11.i

sw.bb1.i46:                                       ; preds = %if.then11
  call void @__sanitizer_cov_trace_const_cmp4(i32 28, i32 %buflen)
  %cmp2.i = icmp ult i32 %buflen, 28
  br i1 %cmp2.i, label %sw.bb1.i46.cleanup_crit_edge, label %if.end4.i

sw.bb1.i46.cleanup_crit_edge:                     ; preds = %sw.bb1.i46
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end4.i:                                        ; preds = %sw.bb1.i46
  call void @__sanitizer_cov_trace_pc() #20
  %49 = call ptr @memcpy(ptr %buf, ptr @rpc_in6addr_loopback, i32 28)
  br label %do.body11.i

do.body.i49:                                      ; preds = %if.then11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %50 = load i32, ptr @rpc_debug, align 4
  %and.i47 = and i32 %50, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i47)
  %tobool.not.i48 = icmp eq i32 %and.i47, 0
  br i1 %tobool.not.i48, label %do.body.i49.cleanup_crit_edge, label %do.body.i49.return.sink.split.i_crit_edge, !prof !419

do.body.i49.return.sink.split.i_crit_edge:        ; preds = %do.body.i49
  call void @__sanitizer_cov_trace_pc() #20
  br label %return.sink.split.i

do.body.i49.cleanup_crit_edge:                    ; preds = %do.body.i49
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

do.body11.i:                                      ; preds = %if.end4.i, %if.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rpc_debug to i32))
  %51 = load i32, ptr @rpc_debug, align 4
  %and12.i = and i32 %51, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  br i1 %tobool13.not.i, label %do.body11.i.cleanup_crit_edge, label %do.body11.i.return.sink.split.i_crit_edge, !prof !419

do.body11.i.return.sink.split.i_crit_edge:        ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %return.sink.split.i

do.body11.i.cleanup_crit_edge:                    ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

return.sink.split.i:                              ; preds = %do.body11.i.return.sink.split.i_crit_edge, %do.body.i49.return.sink.split.i_crit_edge
  %.str.57.sink.i = phi ptr [ @.str.54, %do.body.i49.return.sink.split.i_crit_edge ], [ @.str.57, %do.body11.i.return.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi i32 [ -97, %do.body.i49.return.sink.split.i_crit_edge ], [ 0, %do.body11.i.return.sink.split.i_crit_edge ]
  %call24.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.57.sink.i, ptr noundef nonnull @.str.55) #21
  br label %cleanup

cleanup:                                          ; preds = %return.sink.split.i, %do.body11.i.cleanup_crit_edge, %do.body.i49.cleanup_crit_edge, %sw.bb1.i46.cleanup_crit_edge, %sw.bb.i45.cleanup_crit_edge, %put_net.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %put_net.exit.cleanup_crit_edge ], [ -22, %sw.bb.i45.cleanup_crit_edge ], [ -22, %sw.bb1.i46.cleanup_crit_edge ], [ -97, %do.body.i49.cleanup_crit_edge ], [ 0, %do.body11.i.cleanup_crit_edge ], [ %retval.0.ph.i, %return.sink.split.i ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %address) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_setbufsize(ptr noundef %clnt, i32 noundef %sndsize, i32 noundef %rcvsize) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b16 = load i1, ptr @rpc_setbufsize.__warned, align 1
  br i1 %.b16, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_setbufsize.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1474, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool9.not = icmp eq ptr %9, null
  br i1 %tobool9.not, label %do.end7.if.end13_crit_edge, label %if.then10

do.end7.if.end13_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end13

if.then10:                                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  tail call void %9(ptr noundef %5, i32 noundef %sndsize, i32 noundef %rcvsize) #18
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %do.end7.if.end13_crit_edge
  %call.i17 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i17, label %if.end13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i20

if.end13.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i20:                                ; preds = %if.end13
  %call1.i18 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i18)
  %tobool.not.i19 = icmp eq i32 %call1.i18, 0
  br i1 %tobool.not.i19, label %land.lhs.true.i20.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i22

land.lhs.true.i20.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i20
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i22:                               ; preds = %land.lhs.true.i20
  %.b4.i21 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i21, label %land.lhs.true2.i22.rcu_read_unlock.exit_crit_edge, label %if.then.i23

land.lhs.true2.i22.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i22
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i23:                                      ; preds = %land.lhs.true2.i22
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i23, %land.lhs.true2.i22.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i20.rcu_read_unlock.exit_crit_edge, %if.end13.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %10 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i24 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i24 to ptr
  %preempt_count.i.i.i.i25 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i25 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i25, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i25, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_net_ns(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b9 = load i1, ptr @rpc_net_ns.__warned, align 1
  br i1 %.b9, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_net_ns.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1491, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %xprt_net = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 49
  %6 = ptrtoint ptr %xprt_net to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %xprt_net, align 8
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i10, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %do.end7
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %8 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i17 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret ptr %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_max_payload(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b9 = load i1, ptr @rpc_max_payload.__warned, align 1
  br i1 %.b9, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_max_payload.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1511, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %max_payload = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %max_payload to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_payload, align 8
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i10, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %do.end7
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %8 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i17 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_max_bc_payload(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b11 = load i1, ptr @rpc_max_bc_payload.__warned, align 1
  br i1 %.b11, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_max_bc_payload.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1527, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %bc_maxpayload = getelementptr inbounds %struct.rpc_xprt_ops, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %bc_maxpayload to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bc_maxpayload, align 4
  %call9 = tail call i32 %9(ptr noundef %5) #18
  %call.i12 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i12, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i15

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i15:                                ; preds = %do.end7
  %call1.i13 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i13)
  %tobool.not.i14 = icmp eq i32 %call1.i13, 0
  br i1 %tobool.not.i14, label %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i17

land.lhs.true.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i17:                               ; preds = %land.lhs.true.i15
  %.b4.i16 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i16, label %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, label %if.then.i18

land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i18:                                      ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i18, %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %10 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i19 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i19 to ptr
  %preempt_count.i.i.i.i20 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i20 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i20, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i20, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret i32 %call9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_num_bc_slots(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %4 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b11 = load i1, ptr @rpc_num_bc_slots.__warned, align 1
  br i1 %.b11, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_num_bc_slots.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1540, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %bc_num_slots = getelementptr inbounds %struct.rpc_xprt_ops, ptr %7, i32 0, i32 24
  %8 = ptrtoint ptr %bc_num_slots to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bc_num_slots, align 4
  %call9 = tail call i32 %9(ptr noundef %5) #18
  %call.i12 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i12, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i15

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i15:                                ; preds = %do.end7
  %call1.i13 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i13)
  %tobool.not.i14 = icmp eq i32 %call1.i13, 0
  br i1 %tobool.not.i14, label %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i17

land.lhs.true.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i17:                               ; preds = %land.lhs.true.i15
  %.b4.i16 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i16, label %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, label %if.then.i18

land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i18:                                      ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i18, %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %10 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i19 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i19 to ptr
  %preempt_count.i.i.i.i20 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i20 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i20, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i20, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret i32 %call9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_force_rebind(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_autobind = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 14
  %0 = ptrtoint ptr %cl_autobind to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %cl_autobind, align 4
  %1 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end11_crit_edge, label %if.then

entry.if.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end11

if.then:                                          ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %cl_xprt = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %6 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %cl_xprt, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end9_crit_edge

rcu_read_lock.exit.do.end9_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end9

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end9_crit_edge, label %land.lhs.true5

land.lhs.true.do.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end9

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b13 = load i1, ptr @rpc_force_rebind.__warned, align 1
  br i1 %.b13, label %land.lhs.true5.do.end9_crit_edge, label %if.then7

land.lhs.true5.do.end9_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end9

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_force_rebind.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1556, ptr noundef nonnull @.str.4) #18
  br label %do.end9

do.end9:                                          ; preds = %if.then7, %land.lhs.true5.do.end9_crit_edge, %land.lhs.true.do.end9_crit_edge, %rcu_read_lock.exit.do.end9_crit_edge
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %7, i32 0, i32 18
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %state.i) #18
  %call.i14 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i14, label %do.end9.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i17

do.end9.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i17:                                ; preds = %do.end9
  %call1.i15 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i15)
  %tobool.not.i16 = icmp eq i32 %call1.i15, 0
  br i1 %tobool.not.i16, label %land.lhs.true.i17.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i19

land.lhs.true.i17.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i17
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i19:                               ; preds = %land.lhs.true.i17
  %.b4.i18 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i18, label %land.lhs.true2.i19.rcu_read_unlock.exit_crit_edge, label %if.then.i20

land.lhs.true2.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i19
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i20:                                      ; preds = %land.lhs.true2.i19
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i20, %land.lhs.true2.i19.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i17.rcu_read_unlock.exit_crit_edge, %do.end9.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %8 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i21 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i21 to ptr
  %preempt_count.i.i.i.i22 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i22 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i22, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i22, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  br label %if.end11

if.end11:                                         ; preds = %rcu_read_unlock.exit, %entry.if.end11_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local i32 @rpc_restart_call(ptr nocapture noundef writeonly %task) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %tk_status.i, align 4
  %tk_rpc_status.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %1 = ptrtoint ptr %tk_rpc_status.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %tk_rpc_status.i, align 8
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %2 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @call_start, ptr %tk_action.i, align 4
  ret i32 1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rpc_restart_call_prepare(ptr nocapture noundef %task) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_ops = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 12
  %0 = ptrtoint ptr %tk_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_ops, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %cmp.not = icmp eq ptr %3, null
  %spec.select = select i1 %cmp.not, ptr @call_start, ptr @rpc_prepare_task
  %4 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %4, align 4
  %6 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %6, align 8
  %8 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %spec.select, ptr %8, align 4
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_prepare_task(ptr noundef) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @rpc_proc_name(ptr nocapture noundef readonly %task) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %0 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_msg, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %p_name = getelementptr inbounds %struct.rpc_procinfo, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %p_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %p_name, align 4
  %tobool1.not = icmp eq ptr %3, null
  %.str.11. = select i1 %tobool1.not, ptr @.str.11, ptr %3
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %.str.11., %if.then ], [ @.str.12, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_call_null(ptr noundef %clnt, ptr noundef %cred, i32 noundef %flags) #0 align 64 {
entry:
  %msg.i = alloca %struct.rpc_message, align 4
  %task_setup_data.i = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %msg.i) #18
  %0 = call ptr @memcpy(ptr %msg.i, ptr @__const.rpc_call_null_helper.msg, i32 16)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data.i) #18
  %1 = getelementptr inbounds i8, ptr %task_setup_data.i, i32 32
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -65281, ptr %1, align 4, !annotation !420
  %3 = ptrtoint ptr %task_setup_data.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %task_setup_data.i, align 4
  %rpc_client.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 1
  %4 = ptrtoint ptr %rpc_client.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %clnt, ptr %rpc_client.i, align 4
  %rpc_xprt.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 2
  %5 = ptrtoint ptr %rpc_xprt.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %rpc_xprt.i, align 4
  %rpc_op_cred.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 3
  %6 = ptrtoint ptr %rpc_op_cred.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %cred, ptr %rpc_op_cred.i, align 4
  %rpc_message.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 4
  %7 = ptrtoint ptr %rpc_message.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %msg.i, ptr %rpc_message.i, align 4
  %callback_ops.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 5
  %8 = ptrtoint ptr %callback_ops.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @rpc_null_ops, ptr %callback_ops.i, align 4
  %callback_data.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 6
  %9 = ptrtoint ptr %callback_data.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %callback_data.i, align 4
  %workqueue.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 7
  %10 = ptrtoint ptr %workqueue.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %workqueue.i, align 4
  %11 = trunc i32 %flags to i16
  %conv.i = or i16 %11, 1552
  store i16 %conv.i, ptr %1, align 4
  %call.i = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data.i) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data.i) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %msg.i) #18
  ret ptr %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_clnt_test_and_add_xprt(ptr noundef %clnt, ptr noundef %xps, ptr noundef %xprt, ptr nocapture readnone %dummy) #0 align 64 {
entry:
  %msg.i = alloca %struct.rpc_message, align 4
  %task_setup_data.i = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %xps_nunique_destaddr_xprts = getelementptr inbounds %struct.rpc_xprt_switch, ptr %xps, i32 0, i32 5
  %0 = ptrtoint ptr %xps_nunique_destaddr_xprts to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %xps_nunique_destaddr_xprts, align 4
  %add = add i32 %1, 1
  %cl_max_connect = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 30
  %2 = ptrtoint ptr %cl_max_connect to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_max_connect, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %3)
  %cmp = icmp ugt i32 %add, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %8 = ptrtoint ptr %cl_max_connect to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_max_connect, align 4
  %cl_xprt.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %10 = ptrtoint ptr %cl_xprt.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %cl_xprt.i, align 4
  %call.i30 = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i30)
  %tobool.not.i31 = icmp eq i32 %call.i30, 0
  br i1 %tobool.not.i31, label %land.lhs.true.i32, label %rcu_read_lock.exit.rpc_peeraddr2str.exit_crit_edge

rcu_read_lock.exit.rpc_peeraddr2str.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_peeraddr2str.exit

land.lhs.true.i32:                                ; preds = %rcu_read_lock.exit
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i32.rpc_peeraddr2str.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i32.rpc_peeraddr2str.exit_crit_edge: ; preds = %land.lhs.true.i32
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_peeraddr2str.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i32
  %.b14.i = load i1, ptr @rpc_peeraddr2str.__warned, align 1
  br i1 %.b14.i, label %land.lhs.true4.i.rpc_peeraddr2str.exit_crit_edge, label %if.then.i33

land.lhs.true4.i.rpc_peeraddr2str.exit_crit_edge: ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_peeraddr2str.exit

if.then.i33:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_peeraddr2str.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1309, ptr noundef nonnull @.str.4) #18
  br label %rpc_peeraddr2str.exit

rpc_peeraddr2str.exit:                            ; preds = %if.then.i33, %land.lhs.true4.i.rpc_peeraddr2str.exit_crit_edge, %land.lhs.true.i32.rpc_peeraddr2str.exit_crit_edge, %rcu_read_lock.exit.rpc_peeraddr2str.exit_crit_edge
  %arrayidx.i = getelementptr %struct.rpc_xprt, ptr %11, i32 0, i32 51, i32 0
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i, align 4
  %cmp.not.i = icmp eq ptr %13, null
  %.str.10..i = select i1 %cmp.not.i, ptr @.str.10, ptr %13
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13, i32 noundef %9, ptr noundef %.str.10..i) #21
  %call.i34 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i34, label %rpc_peeraddr2str.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i37

rpc_peeraddr2str.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rpc_peeraddr2str.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i37:                                ; preds = %rpc_peeraddr2str.exit
  %call1.i35 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i35)
  %tobool.not.i36 = icmp eq i32 %call1.i35, 0
  br i1 %tobool.not.i36, label %land.lhs.true.i37.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i39

land.lhs.true.i37.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i37
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i39:                               ; preds = %land.lhs.true.i37
  %.b4.i38 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i38, label %land.lhs.true2.i39.rcu_read_unlock.exit_crit_edge, label %if.then.i40

land.lhs.true2.i39.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i39
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i40:                                      ; preds = %land.lhs.true2.i39
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i40, %land.lhs.true2.i39.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i37.rcu_read_unlock.exit_crit_edge, %rpc_peeraddr2str.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %14 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i41 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i41 to ptr
  %preempt_count.i.i.i.i42 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i42 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i42, align 4
  %sub.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i42, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %18 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %18, i32 noundef 3136, i32 noundef 8) #22
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = tail call ptr @xprt_switch_get(ptr noundef %xps) #18
  %19 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call6, ptr %call7.i, align 8
  %call8 = tail call ptr @xprt_get(ptr noundef %xprt) #18
  %xprt9 = getelementptr inbounds %struct.rpc_cb_add_xprt_calldata, ptr %call7.i, i32 0, i32 1
  %20 = ptrtoint ptr %xprt9 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call8, ptr %xprt9, align 4
  %addr = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 4
  %call11 = tail call zeroext i1 @rpc_xprt_switch_has_addr(ptr noundef %call6, ptr noundef %addr) #18
  br i1 %call11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  %21 = ptrtoint ptr %xprt9 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %xprt9, align 4
  tail call void @xprt_put(ptr noundef %22) #18
  %23 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %call7.i, align 8
  tail call void @xprt_switch_put(ptr noundef %24) #18
  tail call void @kfree(ptr noundef nonnull %call7.i) #18
  br label %cleanup

if.end13:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %msg.i) #18
  %25 = call ptr @memcpy(ptr %msg.i, ptr @__const.rpc_call_null_helper.msg, i32 16)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data.i) #18
  %26 = getelementptr inbounds i8, ptr %task_setup_data.i, i32 32
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 101777663, ptr %26, align 4, !annotation !420
  %28 = ptrtoint ptr %task_setup_data.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %task_setup_data.i, align 4
  %rpc_client.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 1
  %29 = ptrtoint ptr %rpc_client.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %clnt, ptr %rpc_client.i, align 4
  %rpc_xprt.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 2
  %30 = ptrtoint ptr %rpc_xprt.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %xprt, ptr %rpc_xprt.i, align 4
  %rpc_op_cred.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 3
  %31 = ptrtoint ptr %rpc_op_cred.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %rpc_op_cred.i, align 4
  %rpc_message.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 4
  %32 = ptrtoint ptr %rpc_message.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %msg.i, ptr %rpc_message.i, align 4
  %callback_ops.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 5
  %33 = ptrtoint ptr %callback_ops.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @rpc_cb_add_xprt_call_ops, ptr %callback_ops.i, align 4
  %callback_data.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 6
  %34 = ptrtoint ptr %callback_data.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %call7.i, ptr %callback_data.i, align 4
  %workqueue.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 7
  %35 = ptrtoint ptr %workqueue.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %workqueue.i, align 4
  %call.i43 = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data.i) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data.i) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %msg.i) #18
  %36 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %call7.i, align 8
  %xps_nunique_destaddr_xprts16 = getelementptr inbounds %struct.rpc_xprt_switch, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %xps_nunique_destaddr_xprts16 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %xps_nunique_destaddr_xprts16, align 4
  %inc = add i32 %39, 1
  store i32 %inc, ptr %xps_nunique_destaddr_xprts16, align 4
  call void @rpc_put_task(ptr noundef %call.i43) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.then12, %if.end.cleanup_crit_edge, %rcu_read_unlock.exit
  %retval.0 = phi i32 [ -22, %rcu_read_unlock.exit ], [ -12, %if.end.cleanup_crit_edge ], [ 1, %if.end13 ], [ 1, %if.then12 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_switch_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rpc_xprt_switch_has_addr(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rpc_cb_add_xprt_release(ptr noundef %calldata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %xprt = getelementptr inbounds %struct.rpc_cb_add_xprt_calldata, ptr %calldata, i32 0, i32 1
  %0 = ptrtoint ptr %xprt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xprt, align 4
  tail call void @xprt_put(ptr noundef %1) #18
  %2 = ptrtoint ptr %calldata to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %calldata, align 4
  tail call void @xprt_switch_put(ptr noundef %3) #18
  tail call void @kfree(ptr noundef %calldata) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_clnt_setup_test_and_add_xprt(ptr noundef %clnt, ptr noundef %xps, ptr noundef %xprt, ptr nocapture noundef readonly %data) #0 align 64 {
entry:
  %msg.i = alloca %struct.rpc_message, align 4
  %task_setup_data.i = alloca %struct.rpc_task_setup, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @xprt_get(ptr noundef %xprt) #18
  %call1 = tail call ptr @xprt_switch_get(ptr noundef %xps) #18
  %addr = getelementptr inbounds %struct.rpc_xprt, ptr %call, i32 0, i32 4
  %call2 = tail call zeroext i1 @rpc_xprt_switch_has_addr(ptr noundef %xps, ptr noundef %addr) #18
  br i1 %call2, label %entry.out_err_crit_edge, label %if.end

entry.out_err_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %msg.i) #18
  %0 = call ptr @memcpy(ptr %msg.i, ptr @__const.rpc_call_null_helper.msg, i32 16)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %task_setup_data.i) #18
  %1 = getelementptr inbounds i8, ptr %task_setup_data.i, i32 32
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 101712127, ptr %1, align 4, !annotation !420
  %3 = ptrtoint ptr %task_setup_data.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %task_setup_data.i, align 4
  %rpc_client.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 1
  %4 = ptrtoint ptr %rpc_client.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %clnt, ptr %rpc_client.i, align 4
  %rpc_xprt.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 2
  %5 = ptrtoint ptr %rpc_xprt.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call, ptr %rpc_xprt.i, align 4
  %rpc_op_cred.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 3
  %6 = ptrtoint ptr %rpc_op_cred.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %rpc_op_cred.i, align 4
  %rpc_message.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 4
  %7 = ptrtoint ptr %rpc_message.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %msg.i, ptr %rpc_message.i, align 4
  %callback_ops.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 5
  %8 = ptrtoint ptr %callback_ops.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @rpc_null_ops, ptr %callback_ops.i, align 4
  %callback_data.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 6
  %9 = ptrtoint ptr %callback_data.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %callback_data.i, align 4
  %workqueue.i = getelementptr inbounds %struct.rpc_task_setup, ptr %task_setup_data.i, i32 0, i32 7
  %10 = ptrtoint ptr %workqueue.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %workqueue.i, align 4
  %call.i = call ptr @rpc_run_task(ptr noundef nonnull %task_setup_data.i) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %task_setup_data.i) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %msg.i) #18
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %11 = ptrtoint ptr %call.i to i32
  br label %out_err

if.end7:                                          ; preds = %if.end
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %call.i, i32 0, i32 1
  %12 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tk_status, align 4
  call void @rpc_put_task(ptr noundef %call.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp = icmp slt i32 %13, 0
  br i1 %cmp, label %if.end7.out_err_crit_edge, label %if.end9

if.end7.out_err_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end9:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data, align 4
  %data10 = getelementptr inbounds %struct.rpc_add_xprt_test, ptr %data, i32 0, i32 1
  %16 = ptrtoint ptr %data10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data10, align 4
  call void %15(ptr noundef %clnt, ptr noundef %call, ptr noundef %17) #18
  call void @xprt_put(ptr noundef %call) #18
  call void @xprt_switch_put(ptr noundef %xps) #18
  br label %cleanup

out_err:                                          ; preds = %if.end7.out_err_crit_edge, %if.then5, %entry.out_err_crit_edge
  %status.0 = phi i32 [ -98, %entry.out_err_crit_edge ], [ %11, %if.then5 ], [ %13, %if.end7.out_err_crit_edge ]
  call void @xprt_put(ptr noundef %call) #18
  call void @xprt_switch_put(ptr noundef %xps) #18
  %address_strings = getelementptr inbounds %struct.rpc_xprt, ptr %call, i32 0, i32 51
  %18 = ptrtoint ptr %address_strings to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %address_strings, align 8
  %call11 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, i32 noundef %status.0, ptr noundef %19) #21
  br label %cleanup

cleanup:                                          ; preds = %out_err, %if.end9
  %retval.0 = phi i32 [ %status.0, %out_err ], [ 1, %if.end9 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_iter_xprt(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_xprt_switch_set_roundrobin(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_xprt_switch_add_xprt(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_set_connect_timeout(ptr noundef %clnt, i32 noundef %connect_timeout, i32 noundef %reconnect_timeout) #0 align 64 {
entry:
  %timeout = alloca %struct.connect_timeout_data, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %timeout) #18
  %0 = getelementptr inbounds %struct.connect_timeout_data, ptr %timeout, i32 0, i32 1
  %1 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %connect_timeout, ptr %timeout, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %reconnect_timeout, ptr %0, align 4
  %call = call i32 @rpc_clnt_iterate_for_each_xprt(ptr noundef %clnt, ptr noundef nonnull @rpc_xprt_set_connect_timeout, ptr noundef nonnull %timeout)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %timeout) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rpc_xprt_set_connect_timeout(ptr nocapture noundef readnone %clnt, ptr noundef %xprt, ptr nocapture noundef readonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 1
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 4
  %set_connect_timeout = getelementptr inbounds %struct.rpc_xprt_ops, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %set_connect_timeout to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %set_connect_timeout, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %data, align 4
  %reconnect_timeout = getelementptr inbounds %struct.connect_timeout_data, ptr %data, i32 0, i32 1
  %6 = ptrtoint ptr %reconnect_timeout to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %reconnect_timeout, align 4
  tail call void %3(ptr noundef %xprt, i32 noundef %5, i32 noundef %7) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_clnt_xprt_switch_put(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b9 = load i1, ptr @rpc_clnt_xprt_switch_put.__warned, align 1
  br i1 %.b9, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_clnt_xprt_switch_put.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2986, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  tail call void @xprt_switch_put(ptr noundef %6) #18
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i10, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %do.end7
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %7 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i17 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_clnt_xprt_switch_add_xprt(ptr noundef %clnt, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b9 = load i1, ptr @rpc_clnt_xprt_switch_add_xprt.__warned, align 1
  br i1 %.b9, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_clnt_xprt_switch_add_xprt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2994, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  tail call void @rpc_xprt_switch_add_xprt(ptr noundef %6, ptr noundef %xprt) #18
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i10, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %do.end7
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %7 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i17 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rpc_clnt_xprt_switch_has_addr(ptr noundef %clnt, ptr noundef %sap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 4
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b11 = load i1, ptr @rpc_clnt_xprt_switch_has_addr.__warned, align 1
  br i1 %.b11, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_clnt_xprt_switch_has_addr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3007, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %call9 = tail call zeroext i1 @rpc_xprt_switch_has_addr(ptr noundef %6, ptr noundef %sap) #18
  %call.i12 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i12, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i15

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i15:                                ; preds = %do.end7
  %call1.i13 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i13)
  %tobool.not.i14 = icmp eq i32 %call1.i13, 0
  br i1 %tobool.not.i14, label %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i17

land.lhs.true.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i17:                               ; preds = %land.lhs.true.i15
  %.b4.i16 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i16, label %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, label %if.then.i18

land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i18:                                      ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i18, %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %7 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i19 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i19 to ptr
  %preempt_count.i.i.i.i20 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i20 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i20, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i20, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret i1 %call9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_show_tasks(ptr noundef %net) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %0 = load i32, ptr @sunrpc_net_id, align 4
  %call = tail call fastcc ptr @net_generic(ptr noundef %net, i32 noundef %0)
  %rpc_client_lock = getelementptr inbounds %struct.sunrpc_net, ptr %call, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %rpc_client_lock) #18
  %all_clients = getelementptr inbounds %struct.sunrpc_net, ptr %call, i32 0, i32 8
  %1 = ptrtoint ptr %all_clients to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn44 = load ptr, ptr %all_clients, align 4
  %cmp.not46 = icmp eq ptr %.pn44, %all_clients
  br i1 %cmp.not46, label %entry.for.end23_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end23_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end23

for.body:                                         ; preds = %for.end.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn48 = phi ptr [ %.pn, %for.end.for.body_crit_edge ], [ %.pn44, %entry.for.body_crit_edge ]
  %header.047 = phi i32 [ %header.1.lcssa, %for.end.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %clnt.049 = getelementptr i8, ptr %.pn48, i32 -8
  %cl_lock = getelementptr i8, ptr %.pn48, i32 20
  tail call void @_raw_spin_lock(ptr noundef %cl_lock) #18
  %cl_tasks = getelementptr i8, ptr %.pn48, i32 8
  %2 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn3738 = load ptr, ptr %cl_tasks, align 4
  %cmp8.not40 = icmp eq ptr %.pn3738, %cl_tasks
  br i1 %cmp8.not40, label %for.body.for.end_crit_edge, label %for.body10.lr.ph

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.body10.lr.ph:                                 ; preds = %for.body
  %cl_program.i = getelementptr i8, ptr %.pn48, i32 284
  %cl_vers.i = getelementptr i8, ptr %.pn48, i32 76
  %task.043.peel = getelementptr i8, ptr %.pn3738, i32 -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %header.047)
  %tobool.not.peel = icmp eq i32 %header.047, 0
  br i1 %tobool.not.peel, label %if.then.peel, label %for.body10.lr.ph.if.end.peel_crit_edge

for.body10.lr.ph.if.end.peel_crit_edge:           ; preds = %for.body10.lr.ph
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end.peel

if.then.peel:                                     ; preds = %for.body10.lr.ph
  call void @__sanitizer_cov_trace_pc() #20
  %call.i.peel = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75) #21
  br label %if.end.peel

if.end.peel:                                      ; preds = %if.then.peel, %for.body10.lr.ph.if.end.peel_crit_edge
  %tk_runstate.i.peel = getelementptr i8, ptr %.pn3738, i32 20
  %3 = ptrtoint ptr %tk_runstate.i.peel to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %tk_runstate.i.peel, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.peel = icmp eq i32 %5, 0
  br i1 %tobool.not.i.peel, label %if.end.peel.do.end.i.peel_crit_edge, label %if.then.i.peel

if.end.peel.do.end.i.peel_crit_edge:              ; preds = %if.end.peel
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i.peel

if.then.i.peel:                                   ; preds = %if.end.peel
  %tk_waitqueue.i.peel = getelementptr i8, ptr %.pn3738, i32 24
  %6 = ptrtoint ptr %tk_waitqueue.i.peel to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_waitqueue.i.peel, align 8
  %tobool.not.i.i.peel = icmp eq ptr %7, null
  br i1 %tobool.not.i.i.peel, label %if.then.i.peel.do.end.i.peel_crit_edge, label %land.lhs.true.i.i.peel

if.then.i.peel.do.end.i.peel_crit_edge:           ; preds = %if.then.i.peel
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i.peel

land.lhs.true.i.i.peel:                           ; preds = %if.then.i.peel
  call void @__sanitizer_cov_trace_pc() #20
  %name.i.i.peel = getelementptr inbounds %struct.rpc_wait_queue, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %name.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %name.i.i.peel, align 4
  %tobool1.not.i.i.peel = icmp eq ptr %9, null
  %spec.select.i.i.peel = select i1 %tobool1.not.i.i.peel, ptr @.str.80, ptr %9
  br label %do.end.i.peel

do.end.i.peel:                                    ; preds = %land.lhs.true.i.i.peel, %if.then.i.peel.do.end.i.peel_crit_edge, %if.end.peel.do.end.i.peel_crit_edge
  %rpc_waitq.0.i.peel = phi ptr [ @.str.77, %if.end.peel.do.end.i.peel_crit_edge ], [ @.str.80, %if.then.i.peel.do.end.i.peel_crit_edge ], [ %spec.select.i.i.peel, %land.lhs.true.i.i.peel ]
  %tk_pid.i.peel = getelementptr i8, ptr %.pn3738, i32 136
  %10 = ptrtoint ptr %tk_pid.i.peel to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %tk_pid.i.peel, align 8
  %tk_flags.i.peel = getelementptr i8, ptr %.pn3738, i32 132
  %12 = ptrtoint ptr %tk_flags.i.peel to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %tk_flags.i.peel, align 4
  %tk_status.i.peel = getelementptr i8, ptr %.pn3738, i32 -4
  %14 = ptrtoint ptr %tk_status.i.peel to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tk_status.i.peel, align 4
  %tk_rqstp.i.peel = getelementptr i8, ptr %.pn3738, i32 112
  %16 = ptrtoint ptr %tk_rqstp.i.peel to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tk_rqstp.i.peel, align 8
  %call3.i.peel = tail call i32 @rpc_task_timeout(ptr noundef %task.043.peel) #18
  %tk_ops.i.peel = getelementptr i8, ptr %.pn3738, i32 96
  %18 = ptrtoint ptr %tk_ops.i.peel to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tk_ops.i.peel, align 8
  %20 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cl_program.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %24 = ptrtoint ptr %cl_vers.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cl_vers.i, align 4
  %tk_msg.i.i.peel = getelementptr i8, ptr %.pn3738, i32 76
  %26 = ptrtoint ptr %tk_msg.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tk_msg.i.i.peel, align 4
  %tobool.not.i17.i.peel = icmp eq ptr %27, null
  br i1 %tobool.not.i17.i.peel, label %do.end.i.peel.rpc_show_task.exit.peel_crit_edge, label %if.then.i.i.peel

do.end.i.peel.rpc_show_task.exit.peel_crit_edge:  ; preds = %do.end.i.peel
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_show_task.exit.peel

if.then.i.i.peel:                                 ; preds = %do.end.i.peel
  call void @__sanitizer_cov_trace_pc() #20
  %p_name.i.i.peel = getelementptr inbounds %struct.rpc_procinfo, ptr %27, i32 0, i32 7
  %28 = ptrtoint ptr %p_name.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %p_name.i.i.peel, align 4
  %tobool1.not.i18.i.peel = icmp eq ptr %29, null
  %.str.11..i.i.peel = select i1 %tobool1.not.i18.i.peel, ptr @.str.11, ptr %29
  br label %rpc_show_task.exit.peel

rpc_show_task.exit.peel:                          ; preds = %if.then.i.i.peel, %do.end.i.peel.rpc_show_task.exit.peel_crit_edge
  %retval.0.i.i.peel = phi ptr [ %.str.11..i.i.peel, %if.then.i.i.peel ], [ @.str.12, %do.end.i.peel.rpc_show_task.exit.peel_crit_edge ]
  %conv2.i.peel = zext i16 %13 to i32
  %conv.i.peel = zext i16 %11 to i32
  %tk_action.i.peel = getelementptr i8, ptr %.pn3738, i32 12
  %30 = ptrtoint ptr %tk_action.i.peel to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_action.i.peel, align 4
  %call5.i.peel = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, i32 noundef %conv.i.peel, i32 noundef %conv2.i.peel, i32 noundef %15, ptr noundef %clnt.049, ptr noundef %17, i32 noundef %call3.i.peel, ptr noundef %19, ptr noundef %23, i32 noundef %25, ptr noundef %retval.0.i.i.peel, ptr noundef %31, ptr noundef %rpc_waitq.0.i.peel) #21
  %32 = ptrtoint ptr %.pn3738 to i32
  call void @__asan_load4_noabort(i32 %32)
  %.pn37.peel = load ptr, ptr %.pn3738, align 4
  %cmp8.not.peel = icmp eq ptr %.pn37.peel, %cl_tasks
  br i1 %cmp8.not.peel, label %rpc_show_task.exit.peel.for.end_crit_edge, label %rpc_show_task.exit.peel.if.end_crit_edge

rpc_show_task.exit.peel.if.end_crit_edge:         ; preds = %rpc_show_task.exit.peel
  br label %if.end

rpc_show_task.exit.peel.for.end_crit_edge:        ; preds = %rpc_show_task.exit.peel
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

if.end:                                           ; preds = %rpc_show_task.exit.if.end_crit_edge, %rpc_show_task.exit.peel.if.end_crit_edge
  %.pn3742 = phi ptr [ %.pn37, %rpc_show_task.exit.if.end_crit_edge ], [ %.pn37.peel, %rpc_show_task.exit.peel.if.end_crit_edge ]
  %task.043 = getelementptr i8, ptr %.pn3742, i32 -8
  %tk_runstate.i = getelementptr i8, ptr %.pn3742, i32 20
  %33 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %tk_runstate.i, align 4
  %35 = and i32 %34, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.not.i = icmp eq i32 %35, 0
  br i1 %tobool.not.i, label %if.end.do.end.i_crit_edge, label %if.then.i

if.end.do.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

if.then.i:                                        ; preds = %if.end
  %tk_waitqueue.i = getelementptr i8, ptr %.pn3742, i32 24
  %36 = ptrtoint ptr %tk_waitqueue.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tk_waitqueue.i, align 8
  %tobool.not.i.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i, label %if.then.i.do.end.i_crit_edge, label %land.lhs.true.i.i

if.then.i.do.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end.i

land.lhs.true.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #20
  %name.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %37, i32 0, i32 7
  %38 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %name.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %39, null
  %spec.select.i.i = select i1 %tobool1.not.i.i, ptr @.str.80, ptr %39
  br label %do.end.i

do.end.i:                                         ; preds = %land.lhs.true.i.i, %if.then.i.do.end.i_crit_edge, %if.end.do.end.i_crit_edge
  %rpc_waitq.0.i = phi ptr [ @.str.77, %if.end.do.end.i_crit_edge ], [ @.str.80, %if.then.i.do.end.i_crit_edge ], [ %spec.select.i.i, %land.lhs.true.i.i ]
  %tk_pid.i = getelementptr i8, ptr %.pn3742, i32 136
  %40 = ptrtoint ptr %tk_pid.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %tk_pid.i, align 8
  %tk_flags.i = getelementptr i8, ptr %.pn3742, i32 132
  %42 = ptrtoint ptr %tk_flags.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %tk_flags.i, align 4
  %tk_status.i = getelementptr i8, ptr %.pn3742, i32 -4
  %44 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %tk_status.i, align 4
  %tk_rqstp.i = getelementptr i8, ptr %.pn3742, i32 112
  %46 = ptrtoint ptr %tk_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %tk_rqstp.i, align 8
  %call3.i = tail call i32 @rpc_task_timeout(ptr noundef %task.043) #18
  %tk_ops.i = getelementptr i8, ptr %.pn3742, i32 96
  %48 = ptrtoint ptr %tk_ops.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %tk_ops.i, align 8
  %50 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %cl_program.i, align 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 4
  %54 = ptrtoint ptr %cl_vers.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cl_vers.i, align 4
  %tk_msg.i.i = getelementptr i8, ptr %.pn3742, i32 76
  %56 = ptrtoint ptr %tk_msg.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %tk_msg.i.i, align 4
  %tobool.not.i17.i = icmp eq ptr %57, null
  br i1 %tobool.not.i17.i, label %do.end.i.rpc_show_task.exit_crit_edge, label %if.then.i.i

do.end.i.rpc_show_task.exit_crit_edge:            ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_show_task.exit

if.then.i.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #20
  %p_name.i.i = getelementptr inbounds %struct.rpc_procinfo, ptr %57, i32 0, i32 7
  %58 = ptrtoint ptr %p_name.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %p_name.i.i, align 4
  %tobool1.not.i18.i = icmp eq ptr %59, null
  %.str.11..i.i = select i1 %tobool1.not.i18.i, ptr @.str.11, ptr %59
  br label %rpc_show_task.exit

rpc_show_task.exit:                               ; preds = %if.then.i.i, %do.end.i.rpc_show_task.exit_crit_edge
  %retval.0.i.i = phi ptr [ %.str.11..i.i, %if.then.i.i ], [ @.str.12, %do.end.i.rpc_show_task.exit_crit_edge ]
  %conv2.i = zext i16 %43 to i32
  %conv.i = zext i16 %41 to i32
  %tk_action.i = getelementptr i8, ptr %.pn3742, i32 12
  %60 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tk_action.i, align 4
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, i32 noundef %conv.i, i32 noundef %conv2.i, i32 noundef %45, ptr noundef %clnt.049, ptr noundef %47, i32 noundef %call3.i, ptr noundef %49, ptr noundef %53, i32 noundef %55, ptr noundef %retval.0.i.i, ptr noundef %61, ptr noundef %rpc_waitq.0.i) #21
  %62 = ptrtoint ptr %.pn3742 to i32
  call void @__asan_load4_noabort(i32 %62)
  %.pn37 = load ptr, ptr %.pn3742, align 4
  %cmp8.not = icmp eq ptr %.pn37, %cl_tasks
  br i1 %cmp8.not, label %rpc_show_task.exit.for.end_crit_edge, label %rpc_show_task.exit.if.end_crit_edge, !llvm.loop !447

rpc_show_task.exit.if.end_crit_edge:              ; preds = %rpc_show_task.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

rpc_show_task.exit.for.end_crit_edge:             ; preds = %rpc_show_task.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

for.end:                                          ; preds = %rpc_show_task.exit.for.end_crit_edge, %rpc_show_task.exit.peel.for.end_crit_edge, %for.body.for.end_crit_edge
  %header.1.lcssa = phi i32 [ %header.047, %for.body.for.end_crit_edge ], [ 1, %rpc_show_task.exit.peel.for.end_crit_edge ], [ 1, %rpc_show_task.exit.for.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock) #18
  %63 = ptrtoint ptr %.pn48 to i32
  call void @__asan_load4_noabort(i32 %63)
  %.pn = load ptr, ptr %.pn48, align 4
  %cmp.not = icmp eq ptr %.pn, %all_clients
  br i1 %cmp.not, label %for.end.for.end23_crit_edge, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body

for.end.for.end23_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end23

for.end23:                                        ; preds = %for.end.for.end23_crit_edge, %entry.for.end23_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock) #18
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @net_generic(ptr noundef %net, i32 noundef %id) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %gen = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 43
  %4 = ptrtoint ptr %gen to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %gen, align 128
  %call = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b9 = load i1, ptr @net_generic.__warned, align 1
  br i1 %.b9, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @net_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.74, i32 noundef 45, ptr noundef nonnull @.str.4) #18
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %arrayidx = getelementptr [0 x ptr], ptr %5, i32 0, i32 %id
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i10, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %do.end7
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %8 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i17 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  ret ptr %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_clnt_swap_activate(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_swapper = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 17
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cl_swapper, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !449
  tail call void @llvm.prefetch.p0(ptr %cl_swapper, i32 1, i32 3, i32 1) #18
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cl_swapper, ptr %cl_swapper, i32 1, ptr elementtype(i32) %cl_swapper) #18, !srcloc !450
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !451
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i)
  %cmp = icmp eq i32 %asmresult.i.i.i.i, 1
  br i1 %cmp, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %call1 = tail call i32 @rpc_clnt_iterate_for_each_xprt(ptr noundef %clnt, ptr noundef nonnull @rpc_clnt_swap_activate_callback, ptr noundef null)
  br label %return

return:                                           ; preds = %if.then, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call1, %if.then ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rpc_clnt_swap_activate_callback(ptr nocapture noundef readnone %clnt, ptr noundef %xprt, ptr nocapture noundef readnone %dummy) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %ops.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 1
  %0 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops.i, align 4
  %enable_swap.i = getelementptr inbounds %struct.rpc_xprt_ops, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %enable_swap.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %enable_swap.i, align 4
  %call.i = tail call i32 %3(ptr noundef %xprt) #18
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_clnt_swap_deactivate(ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_swapper = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 17
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cl_swapper, i32 noundef 4) #18
  %0 = ptrtoint ptr %cl_swapper to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %cl_swapper, align 4
  br label %do.body1.i.i

do.body1.i.i:                                     ; preds = %arch_atomic_cmpxchg.exit.i.i.i.do.body1.i.i_crit_edge, %entry
  %c.0.i.i = phi i32 [ %1, %entry ], [ %asmresult3.i.i.i.i.i, %arch_atomic_cmpxchg.exit.i.i.i.do.body1.i.i_crit_edge ]
  %sub.i.i = add i32 %c.0.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %do.body1.i.i.if.end_crit_edge, label %do.cond3.i.i, !prof !427

do.body1.i.i.if.end_crit_edge:                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

do.cond3.i.i:                                     ; preds = %do.body1.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !452
  tail call void @llvm.prefetch.p0(ptr %cl_swapper, i32 1, i32 3, i32 1) #18
  br label %do.body.i.i.i.i.i

do.body.i.i.i.i.i:                                ; preds = %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, %do.cond3.i.i
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %cl_swapper, ptr %cl_swapper, i32 %c.0.i.i, i32 %sub.i.i, ptr elementtype(i32) %cl_swapper) #18, !srcloc !453
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  %tobool.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %arch_atomic_cmpxchg.exit.i.i.i, label %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge:    ; preds = %do.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body.i.i.i.i.i

arch_atomic_cmpxchg.exit.i.i.i:                   ; preds = %do.body.i.i.i.i.i
  %asmresult3.i.i.i.i.i = extractvalue { i32, i32 } %2, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !454
  %cmp.not.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i, %c.0.i.i
  br i1 %cmp.not.i.i.i, label %atomic_dec_if_positive.exit, label %arch_atomic_cmpxchg.exit.i.i.i.do.body1.i.i_crit_edge, !prof !419

arch_atomic_cmpxchg.exit.i.i.i.do.body1.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.body1.i.i

atomic_dec_if_positive.exit:                      ; preds = %arch_atomic_cmpxchg.exit.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp = icmp eq i32 %sub.i.i, 0
  br i1 %cmp, label %if.then, label %atomic_dec_if_positive.exit.if.end_crit_edge

atomic_dec_if_positive.exit.if.end_crit_edge:     ; preds = %atomic_dec_if_positive.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %atomic_dec_if_positive.exit
  call void @__sanitizer_cov_trace_pc() #20
  %call1 = tail call i32 @rpc_clnt_iterate_for_each_xprt(ptr noundef %clnt, ptr noundef nonnull @rpc_clnt_swap_deactivate_callback, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then, %atomic_dec_if_positive.exit.if.end_crit_edge, %do.body1.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rpc_clnt_swap_deactivate_callback(ptr nocapture noundef readnone %clnt, ptr noundef %xprt, ptr nocapture noundef readnone %dummy) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %ops.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 1
  %0 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops.i, align 4
  %disable_swap.i = getelementptr inbounds %struct.rpc_xprt_ops, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %disable_swap.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %disable_swap.i, align 4
  tail call void %3(ptr noundef %xprt) #18
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rpc_pipefs_event(ptr nocapture noundef readnone %nb, i32 noundef %event, ptr noundef %ptr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info = getelementptr inbounds %struct.super_block, ptr %ptr, i32 0, i32 33
  br label %while.cond

while.cond:                                       ; preds = %__rpc_pipefs_event.exit.while.cond_crit_edge, %entry
  %0 = ptrtoint ptr %s_fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sunrpc_net_id to i32))
  %2 = load i32, ptr @sunrpc_net_id, align 4
  %call.i = tail call fastcc ptr @net_generic(ptr noundef %1, i32 noundef %2) #18
  %rpc_client_lock.i = getelementptr inbounds %struct.sunrpc_net, ptr %call.i, i32 0, i32 9
  tail call void @_raw_spin_lock(ptr noundef %rpc_client_lock.i) #18
  %all_clients.i = getelementptr inbounds %struct.sunrpc_net, ptr %call.i, i32 0, i32 8
  %3 = ptrtoint ptr %all_clients.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn21.i = load ptr, ptr %all_clients.i, align 4
  %cmp.not23.i = icmp eq ptr %.pn21.i, %all_clients.i
  br i1 %cmp.not23.i, label %while.cond.rpc_get_client_for_event.exit.thread_crit_edge, label %while.cond.for.body.i_crit_edge

while.cond.for.body.i_crit_edge:                  ; preds = %while.cond
  br label %for.body.i

while.cond.rpc_get_client_for_event.exit.thread_crit_edge: ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_get_client_for_event.exit.thread

for.body.i:                                       ; preds = %rpc_clnt_skip_event.exit.i.for.body.i_crit_edge, %while.cond.for.body.i_crit_edge
  %.pn24.i = phi ptr [ %.pn.i, %rpc_clnt_skip_event.exit.i.for.body.i_crit_edge ], [ %.pn21.i, %while.cond.for.body.i_crit_edge ]
  %clnt.025.i = getelementptr i8, ptr %.pn24.i, i32 -8
  %cl_program.i.i = getelementptr i8, ptr %.pn24.i, i32 284
  %4 = ptrtoint ptr %cl_program.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cl_program.i.i, align 4
  %pipe_dir_name.i.i = getelementptr inbounds %struct.rpc_program, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %pipe_dir_name.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pipe_dir_name.i.i, align 4
  %cmp.i.i = icmp eq ptr %7, null
  br i1 %cmp.i.i, label %for.body.i.rpc_clnt_skip_event.exit.i_crit_edge, label %if.end.i.i

for.body.i.rpc_clnt_skip_event.exit.i_crit_edge:  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_clnt_skip_event.exit.i

if.end.i.i:                                       ; preds = %for.body.i
  %8 = zext i32 %event to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.84)
  switch i32 %event, label %if.end.i.i.rpc_get_client_for_event.exit_crit_edge [
    i32 0, label %sw.bb.i.i
    i32 1, label %sw.bb7.i.i
  ]

if.end.i.i.rpc_get_client_for_event.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_get_client_for_event.exit

sw.bb.i.i:                                        ; preds = %if.end.i.i
  %pdh_dentry.i.i = getelementptr i8, ptr %.pn24.i, i32 192
  %9 = ptrtoint ptr %pdh_dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdh_dentry.i.i, align 4
  %cmp1.not.i.i = icmp eq ptr %10, null
  br i1 %cmp1.not.i.i, label %if.end3.i.i, label %sw.bb.i.i.rpc_clnt_skip_event.exit.i_crit_edge

sw.bb.i.i.rpc_clnt_skip_event.exit.i_crit_edge:   ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_clnt_skip_event.exit.i

if.end3.i.i:                                      ; preds = %sw.bb.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %clnt.025.i, i32 noundef 4) #18
  %11 = ptrtoint ptr %clnt.025.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %clnt.025.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp4.i.i = icmp eq i32 %12, 0
  br i1 %cmp4.i.i, label %if.end3.i.i.rpc_clnt_skip_event.exit.i_crit_edge, label %if.end3.i.i.rpc_get_client_for_event.exit_crit_edge

if.end3.i.i.rpc_get_client_for_event.exit_crit_edge: ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_get_client_for_event.exit

if.end3.i.i.rpc_clnt_skip_event.exit.i_crit_edge: ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_clnt_skip_event.exit.i

sw.bb7.i.i:                                       ; preds = %if.end.i.i
  %pdh_dentry9.i.i = getelementptr i8, ptr %.pn24.i, i32 192
  %13 = ptrtoint ptr %pdh_dentry9.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pdh_dentry9.i.i, align 4
  %cmp10.i.i = icmp eq ptr %14, null
  br i1 %cmp10.i.i, label %sw.bb7.i.i.rpc_clnt_skip_event.exit.i_crit_edge, label %sw.bb7.i.i.rpc_get_client_for_event.exit_crit_edge

sw.bb7.i.i.rpc_get_client_for_event.exit_crit_edge: ; preds = %sw.bb7.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_get_client_for_event.exit

sw.bb7.i.i.rpc_clnt_skip_event.exit.i_crit_edge:  ; preds = %sw.bb7.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_clnt_skip_event.exit.i

rpc_clnt_skip_event.exit.i:                       ; preds = %sw.bb7.i.i.rpc_clnt_skip_event.exit.i_crit_edge, %if.end3.i.i.rpc_clnt_skip_event.exit.i_crit_edge, %sw.bb.i.i.rpc_clnt_skip_event.exit.i_crit_edge, %for.body.i.rpc_clnt_skip_event.exit.i_crit_edge
  %15 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn.i = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %all_clients.i
  br i1 %cmp.not.i, label %rpc_clnt_skip_event.exit.i.rpc_get_client_for_event.exit.thread_crit_edge, label %rpc_clnt_skip_event.exit.i.for.body.i_crit_edge

rpc_clnt_skip_event.exit.i.for.body.i_crit_edge:  ; preds = %rpc_clnt_skip_event.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.body.i

rpc_clnt_skip_event.exit.i.rpc_get_client_for_event.exit.thread_crit_edge: ; preds = %rpc_clnt_skip_event.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_get_client_for_event.exit.thread

rpc_get_client_for_event.exit.thread:             ; preds = %rpc_clnt_skip_event.exit.i.rpc_get_client_for_event.exit.thread_crit_edge, %while.cond.rpc_get_client_for_event.exit.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i) #18
  br label %while.end

rpc_get_client_for_event.exit:                    ; preds = %sw.bb7.i.i.rpc_get_client_for_event.exit_crit_edge, %if.end3.i.i.rpc_get_client_for_event.exit_crit_edge, %if.end.i.i.rpc_get_client_for_event.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %rpc_client_lock.i) #18
  %tobool.not = icmp eq ptr %clnt.025.i, null
  br i1 %tobool.not, label %rpc_get_client_for_event.exit.while.end_crit_edge, label %rpc_get_client_for_event.exit.for.cond.i_crit_edge

rpc_get_client_for_event.exit.for.cond.i_crit_edge: ; preds = %rpc_get_client_for_event.exit
  br label %for.cond.i

rpc_get_client_for_event.exit.while.end_crit_edge: ; preds = %rpc_get_client_for_event.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.end

for.cond.i:                                       ; preds = %lor.lhs.false.i.for.cond.i_crit_edge, %rpc_get_client_for_event.exit.for.cond.i_crit_edge
  %clnt.addr.0.i = phi ptr [ %28, %lor.lhs.false.i.for.cond.i_crit_edge ], [ %clnt.025.i, %rpc_get_client_for_event.exit.for.cond.i_crit_edge ]
  %cl_program.i.i6 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0.i, i32 0, i32 24
  %16 = ptrtoint ptr %cl_program.i.i6 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cl_program.i.i6, align 4
  %pipe_dir_name.i.i7 = getelementptr inbounds %struct.rpc_program, ptr %17, i32 0, i32 5
  %18 = ptrtoint ptr %pipe_dir_name.i.i7 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pipe_dir_name.i.i7, align 4
  %cmp.i.i8 = icmp eq ptr %19, null
  br i1 %cmp.i.i8, label %for.cond.i.lor.lhs.false.i_crit_edge, label %if.end.i.i9

for.cond.i.lor.lhs.false.i_crit_edge:             ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false.i

if.end.i.i9:                                      ; preds = %for.cond.i
  %20 = zext i32 %event to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.85)
  switch i32 %event, label %do.end.i.i [
    i32 0, label %sw.bb.i.i12
    i32 1, label %sw.bb7.i.i18
  ]

sw.bb.i.i12:                                      ; preds = %if.end.i.i9
  %pdh_dentry.i.i10 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0.i, i32 0, i32 20, i32 1
  %21 = ptrtoint ptr %pdh_dentry.i.i10 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pdh_dentry.i.i10, align 4
  %cmp1.not.i.i11 = icmp eq ptr %22, null
  br i1 %cmp1.not.i.i11, label %if.end3.i.i15, label %sw.bb.i.i12.lor.lhs.false.i_crit_edge

sw.bb.i.i12.lor.lhs.false.i_crit_edge:            ; preds = %sw.bb.i.i12
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false.i

if.end3.i.i15:                                    ; preds = %sw.bb.i.i12
  %call.i.i.i.i.i13 = tail call zeroext i1 @__kasan_check_read(ptr noundef %clnt.addr.0.i, i32 noundef 4) #18
  %23 = ptrtoint ptr %clnt.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %clnt.addr.0.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp4.i.i14 = icmp eq i32 %24, 0
  br i1 %cmp4.i.i14, label %if.end3.i.i15.lor.lhs.false.i_crit_edge, label %sw.bb.i12.i

if.end3.i.i15.lor.lhs.false.i_crit_edge:          ; preds = %if.end3.i.i15
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false.i

sw.bb7.i.i18:                                     ; preds = %if.end.i.i9
  %pdh_dentry9.i.i16 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0.i, i32 0, i32 20, i32 1
  %25 = ptrtoint ptr %pdh_dentry9.i.i16 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %pdh_dentry9.i.i16, align 4
  %cmp10.i.i17 = icmp eq ptr %26, null
  br i1 %cmp10.i.i17, label %sw.bb7.i.i18.lor.lhs.false.i_crit_edge, label %sw.bb5.i.i

sw.bb7.i.i18.lor.lhs.false.i_crit_edge:           ; preds = %sw.bb7.i.i18
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false.i

sw.bb.i12.i:                                      ; preds = %if.end3.i.i15
  %call.i.i = tail call fastcc ptr @rpc_setup_pipedir_sb(ptr noundef %ptr, ptr noundef %clnt.addr.0.i) #18
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %sw.bb.i12.i.while.end_crit_edge, label %if.end.i13.i

sw.bb.i12.i.while.end_crit_edge:                  ; preds = %sw.bb.i12.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.end

if.end.i13.i:                                     ; preds = %sw.bb.i12.i
  %cmp.i.i.not.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.not.i, label %for.end.loopexit.split.loop.exit28.i, label %if.end.i13.i.lor.lhs.false.i_crit_edge

if.end.i13.i.lor.lhs.false.i_crit_edge:           ; preds = %if.end.i13.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %lor.lhs.false.i

sw.bb5.i.i:                                       ; preds = %sw.bb7.i.i18
  call void @__sanitizer_cov_trace_pc() #20
  %call.i.i.i = tail call i32 @rpc_remove_client_dir(ptr noundef %clnt.addr.0.i) #18
  br label %lor.lhs.false.i

do.end.i.i:                                       ; preds = %if.end.i.i9
  call void @__sanitizer_cov_trace_pc() #20
  %call6.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18, i32 noundef %event) #21
  br label %while.end

lor.lhs.false.i:                                  ; preds = %sw.bb5.i.i, %if.end.i13.i.lor.lhs.false.i_crit_edge, %sw.bb7.i.i18.lor.lhs.false.i_crit_edge, %if.end3.i.i15.lor.lhs.false.i_crit_edge, %sw.bb.i.i12.lor.lhs.false.i_crit_edge, %for.cond.i.lor.lhs.false.i_crit_edge
  %cl_parent.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt.addr.0.i, i32 0, i32 21
  %27 = ptrtoint ptr %cl_parent.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %cl_parent.i, align 4
  %cmp.i = icmp eq ptr %clnt.addr.0.i, %28
  br i1 %cmp.i, label %lor.lhs.false.i.__rpc_pipefs_event.exit_crit_edge, label %lor.lhs.false.i.for.cond.i_crit_edge

lor.lhs.false.i.for.cond.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond.i

lor.lhs.false.i.__rpc_pipefs_event.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__rpc_pipefs_event.exit

for.end.loopexit.split.loop.exit28.i:             ; preds = %if.end.i13.i
  call void @__sanitizer_cov_trace_pc() #20
  %29 = ptrtoint ptr %call.i.i to i32
  br label %__rpc_pipefs_event.exit

__rpc_pipefs_event.exit:                          ; preds = %for.end.loopexit.split.loop.exit28.i, %lor.lhs.false.i.__rpc_pipefs_event.exit_crit_edge
  %error.120.i = phi i32 [ %29, %for.end.loopexit.split.loop.exit28.i ], [ 0, %lor.lhs.false.i.__rpc_pipefs_event.exit_crit_edge ]
  %tobool2.not = icmp eq i32 %error.120.i, 0
  br i1 %tobool2.not, label %__rpc_pipefs_event.exit.while.cond_crit_edge, label %__rpc_pipefs_event.exit.while.end_crit_edge

__rpc_pipefs_event.exit.while.end_crit_edge:      ; preds = %__rpc_pipefs_event.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.end

__rpc_pipefs_event.exit.while.cond_crit_edge:     ; preds = %__rpc_pipefs_event.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %while.cond

while.end:                                        ; preds = %__rpc_pipefs_event.exit.while.end_crit_edge, %do.end.i.i, %sw.bb.i12.i.while.end_crit_edge, %rpc_get_client_for_event.exit.while.end_crit_edge, %rpc_get_client_for_event.exit.thread
  %error.1 = phi i32 [ 0, %rpc_get_client_for_event.exit.thread ], [ -524, %do.end.i.i ], [ -2, %sw.bb.i12.i.while.end_crit_edge ], [ 0, %rpc_get_client_for_event.exit.while.end_crit_edge ], [ %error.120.i, %__rpc_pipefs_event.exit.while.end_crit_edge ]
  ret i32 %error.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @rpc_setup_pipedir_sb(ptr noundef %sb, ptr noundef %clnt) unnamed_addr #0 align 64 {
entry:
  %name = alloca [15 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 24
  %0 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cl_program, align 4
  %pipe_dir_name = getelementptr inbounds %struct.rpc_program, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pipe_dir_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pipe_dir_name, align 4
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %name) #18
  %4 = getelementptr inbounds [15 x i8], ptr %name, i32 0, i32 14
  %5 = call ptr @memset(ptr %name, i32 255, i32 15)
  %call = tail call ptr @rpc_d_lookup_sb(ptr noundef %sb, ptr noundef %3) #18
  %cmp = icmp eq ptr %call, null
  br i1 %cmp, label %do.end, label %entry.for.cond_crit_edge

entry.for.cond_crit_edge:                         ; preds = %entry
  br label %for.cond

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef %3) #21
  br label %cleanup

for.cond:                                         ; preds = %if.end7.for.cond_crit_edge, %entry.for.cond_crit_edge
  %6 = load i32, ptr @rpc_setup_pipedir_sb.clntid, align 4
  %inc = add i32 %6, 1
  store i32 %inc, ptr @rpc_setup_pipedir_sb.clntid, align 4
  %call2 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %name, i32 noundef 15, ptr noundef nonnull @.str.21, i32 noundef %6)
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %4, align 1
  %call4 = call ptr @rpc_create_client_dir(ptr noundef nonnull %call, ptr noundef nonnull %name, ptr noundef %clnt) #18
  %cmp.i = icmp ugt ptr %call4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end7, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.end

if.end7:                                          ; preds = %for.cond
  %cmp9 = icmp eq ptr %call4, inttoptr (i32 -17 to ptr)
  br i1 %cmp9, label %if.end7.for.cond_crit_edge, label %do.end14

if.end7.for.cond_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %for.cond

do.end14:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  %8 = ptrtoint ptr %call4 to i32
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, ptr noundef %3, ptr noundef nonnull %name, i32 noundef %8) #21
  br label %for.end

for.end:                                          ; preds = %do.end14, %for.cond.for.end_crit_edge
  call void @dput(ptr noundef nonnull %call) #18
  br label %cleanup

cleanup:                                          ; preds = %for.end, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ %call4, %for.end ]
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %name) #18
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_d_lookup_sb(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_create_client_dir(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @rpc_new_client(ptr nocapture noundef readonly %args, ptr noundef %xps, ptr noundef %xprt, ptr noundef %parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %program1 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 8
  %0 = ptrtoint ptr %program1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %program1, align 4
  %nodename2 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 7
  %2 = ptrtoint ptr %nodename2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nodename2, align 4
  %call = tail call i32 @rpciod_up() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.out_no_rpciod_crit_edge

entry.out_no_rpciod_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_no_rpciod

if.end:                                           ; preds = %entry
  %version3 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 10
  %4 = ptrtoint ptr %version3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %version3, align 4
  %nrvers = getelementptr inbounds %struct.rpc_program, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %nrvers to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nrvers, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp.not = icmp ult i32 %5, %7
  br i1 %cmp.not, label %if.end5, label %if.end.out_err_crit_edge

if.end.out_err_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end5:                                          ; preds = %if.end
  %version6 = getelementptr inbounds %struct.rpc_program, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %version6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %version6, align 4
  %arrayidx = getelementptr ptr, ptr %9, i32 %5
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %cmp8 = icmp eq ptr %11, null
  br i1 %cmp8, label %if.end5.out_err_crit_edge, label %if.end10

if.end5.out_err_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end10:                                         ; preds = %if.end5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %12 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 3520, i32 noundef 360) #22
  %tobool12.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool12.not, label %if.end10.out_err_crit_edge, label %if.end14

if.end10.out_err_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end14:                                         ; preds = %if.end10
  %tobool15.not = icmp eq ptr %parent, null
  %spec.select = select i1 %tobool15.not, ptr %call7.i.i, ptr %parent
  %cl_parent = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 21
  %13 = ptrtoint ptr %cl_parent to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %spec.select, ptr %cl_parent, align 4
  %call.i = tail call i32 @ida_alloc_range(ptr noundef nonnull @rpc_clids, i32 noundef 0, i32 noundef -1, i32 noundef 3264) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.end14.out_no_clid_crit_edge, label %if.end19

if.end14.out_no_clid_crit_edge:                   ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_no_clid

if.end19:                                         ; preds = %if.end14
  %cl_clid.i = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %cl_clid.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call.i, ptr %cl_clid.i, align 4
  %cred = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 16
  %15 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.end19.get_cred.exit_crit_edge, label %do.body.i

if.end19.get_cred.exit_crit_edge:                 ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #20
  br label %get_cred.exit

do.body.i:                                        ; preds = %if.end19
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %16) #18
  br i1 %call.i.i, label %if.then.i.i, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !427

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__invalid_creds(ptr noundef nonnull %16, ptr noundef nonnull @.str.27, i32 noundef 253) #18
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %do.body.i.__validate_creds.exit.i_crit_edge
  %17 = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 28
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %17, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %16, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr nonnull %16, i32 1, i32 3, i32 1) #18
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %16, ptr nonnull %16, i32 1, ptr nonnull elementtype(i32) %16) #18, !srcloc !442
  br label %get_cred.exit

get_cred.exit:                                    ; preds = %__validate_creds.exit.i, %if.end19.get_cred.exit_crit_edge
  %cl_cred = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 29
  %20 = ptrtoint ptr %cl_cred to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %16, ptr %cl_cred, align 8
  %procs = getelementptr inbounds %struct.rpc_version, ptr %11, i32 0, i32 2
  %21 = ptrtoint ptr %procs to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %procs, align 4
  %cl_procinfo = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 7
  %23 = ptrtoint ptr %cl_procinfo to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %cl_procinfo, align 4
  %nrprocs = getelementptr inbounds %struct.rpc_version, ptr %11, i32 0, i32 1
  %24 = ptrtoint ptr %nrprocs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nrprocs, align 4
  %cl_maxproc = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 10
  %26 = ptrtoint ptr %cl_maxproc to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %cl_maxproc, align 8
  %prognumber = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 9
  %27 = ptrtoint ptr %prognumber to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %prognumber, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool21.not = icmp eq i32 %28, 0
  br i1 %tobool21.not, label %cond.false23, label %get_cred.exit.cond.end24_crit_edge

get_cred.exit.cond.end24_crit_edge:               ; preds = %get_cred.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %cond.end24

cond.false23:                                     ; preds = %get_cred.exit
  call void @__sanitizer_cov_trace_pc() #20
  %number = getelementptr inbounds %struct.rpc_program, ptr %1, i32 0, i32 1
  %29 = ptrtoint ptr %number to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %number, align 4
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %get_cred.exit.cond.end24_crit_edge
  %cond25 = phi i32 [ %30, %cond.false23 ], [ %28, %get_cred.exit.cond.end24_crit_edge ]
  %cl_prog = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 8
  %31 = ptrtoint ptr %cl_prog to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %cond25, ptr %cl_prog, align 8
  %32 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %11, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 9
  %34 = ptrtoint ptr %cl_vers to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %cl_vers, align 4
  %stats = getelementptr inbounds %struct.rpc_program, ptr %1, i32 0, i32 4
  %35 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %stats, align 4
  %cl_stats = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 12
  %37 = ptrtoint ptr %cl_stats to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %cl_stats, align 8
  %call27 = tail call ptr @rpc_alloc_iostats(ptr noundef nonnull %call7.i.i) #18
  %cl_metrics = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 13
  %38 = ptrtoint ptr %cl_metrics to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call27, ptr %cl_metrics, align 4
  %cl_pipedir_objects = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 20
  tail call void @rpc_init_pipe_dir_head(ptr noundef %cl_pipedir_objects) #18
  %39 = ptrtoint ptr %cl_metrics to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %cl_metrics, align 4
  %cmp29 = icmp eq ptr %40, null
  br i1 %cmp29, label %cond.end24.out_no_stats_crit_edge, label %if.end31

cond.end24.out_no_stats_crit_edge:                ; preds = %cond.end24
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_no_stats

if.end31:                                         ; preds = %cond.end24
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 24
  %41 = ptrtoint ptr %cl_program to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %1, ptr %cl_program, align 4
  %cl_tasks = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 3
  %42 = ptrtoint ptr %cl_tasks to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %cl_tasks, ptr %cl_tasks, align 8
  %prev.i = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 3, i32 1
  %43 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %cl_tasks, ptr %prev.i, align 4
  %cl_lock = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 5
  tail call void @__raw_spin_lock_init(ptr noundef %cl_lock, ptr noundef nonnull @.str.26, ptr noundef nonnull @rpc_new_client.__key, i16 noundef signext 3) #18
  %timeout33 = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 3
  %44 = ptrtoint ptr %timeout33 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %timeout33, align 4
  %timeout34 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 5
  %46 = ptrtoint ptr %timeout34 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %timeout34, align 4
  %cmp35.not = icmp eq ptr %47, null
  br i1 %cmp35.not, label %if.end31.if.end39_crit_edge, label %if.then36

if.end31.if.end39_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end39

if.then36:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  %cl_timeout_default = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 23
  %48 = call ptr @memcpy(ptr %cl_timeout_default, ptr %47, i32 20)
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end31.if.end39_crit_edge
  %timeout.0 = phi ptr [ %cl_timeout_default, %if.then36 ], [ %45, %if.end31.if.end39_crit_edge ]
  %call40 = tail call fastcc ptr @rpc_clnt_set_transport(ptr noundef nonnull %call7.i.i, ptr noundef %xprt, ptr noundef %timeout.0)
  %main = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 56
  %49 = ptrtoint ptr %main to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 1, ptr %main, align 4
  %50 = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 28
  tail call void @xprt_iter_init(ptr noundef %50, ptr noundef %xps) #18
  tail call void @xprt_switch_put(ptr noundef %xps) #18
  %cl_rtt_default = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 22
  %cl_rtt = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 15
  %51 = ptrtoint ptr %cl_rtt to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %cl_rtt_default, ptr %cl_rtt, align 4
  %cl_timeout = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 16
  %52 = ptrtoint ptr %cl_timeout to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %cl_timeout, align 8
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  tail call void @rpc_init_rtt(ptr noundef %cl_rtt_default, i32 noundef %55) #18
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call7.i.i, i32 noundef 4) #18
  %56 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile i32 1, ptr %call7.i.i, align 8
  %cmp42 = icmp eq ptr %3, null
  br i1 %cmp42, label %if.then43, label %if.end39.if.end46_crit_edge

if.end39.if.end46_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end46

if.then43:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #20
  %57 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 2
  %59 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %60, i32 0, i32 110
  %61 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %nsproxy.i, align 4
  %uts_ns.i = getelementptr inbounds %struct.nsproxy, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %uts_ns.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %uts_ns.i, align 4
  %nodename45 = getelementptr inbounds %struct.new_utsname, ptr %64, i32 0, i32 1
  br label %if.end46

if.end46:                                         ; preds = %if.then43, %if.end39.if.end46_crit_edge
  %nodename.0 = phi ptr [ %nodename45, %if.then43 ], [ %3, %if.end39.if.end46_crit_edge ]
  %cl_nodename.i = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 19
  %call.i139 = tail call i32 @strlcpy(ptr noundef %cl_nodename.i, ptr noundef %nodename.0, i32 noundef 65) #18
  %cl_nodelen.i = getelementptr inbounds %struct.rpc_clnt, ptr %call7.i.i, i32 0, i32 18
  %65 = ptrtoint ptr %cl_nodelen.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %call.i139, ptr %cl_nodelen.i, align 8
  %call47 = tail call ptr @rpc_net_ns(ptr noundef nonnull %call7.i.i)
  tail call void @rpc_sysfs_client_setup(ptr noundef nonnull %call7.i.i, ptr noundef %xps, ptr noundef %call47) #18
  %authflavor = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 11
  %66 = ptrtoint ptr %authflavor to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %authflavor, align 4
  %client_name = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 14
  %68 = ptrtoint ptr %client_name to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %client_name, align 4
  %call48 = tail call fastcc i32 @rpc_client_register(ptr noundef nonnull %call7.i.i, i32 noundef %67, ptr noundef %69)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.end51, label %out_no_path

if.end51:                                         ; preds = %if.end46
  br i1 %tobool15.not, label %if.end51.if.end55_crit_edge, label %if.then53

if.end51.if.end55_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end55

if.then53:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @refcount_inc(ptr noundef nonnull %parent)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end51.if.end55_crit_edge
  %70 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %1, align 4
  %servername = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 6
  %72 = ptrtoint ptr %servername to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %servername, align 4
  tail call fastcc void @trace_rpc_clnt_new(ptr noundef nonnull %call7.i.i, ptr noundef %xprt, ptr noundef %71, ptr noundef %73)
  br label %cleanup

out_no_path:                                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #20
  %74 = ptrtoint ptr %cl_metrics to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %cl_metrics, align 4
  tail call void @rpc_free_iostats(ptr noundef %75) #18
  br label %out_no_stats

out_no_stats:                                     ; preds = %out_no_path, %cond.end24.out_no_stats_crit_edge
  %err.0 = phi i32 [ -12, %cond.end24.out_no_stats_crit_edge ], [ %call48, %out_no_path ]
  %76 = ptrtoint ptr %cl_cred to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %cl_cred, align 8
  %tobool.not.i140 = icmp eq ptr %77, null
  br i1 %tobool.not.i140, label %out_no_stats.put_cred.exit_crit_edge, label %do.body.i142

out_no_stats.put_cred.exit_crit_edge:             ; preds = %out_no_stats
  call void @__sanitizer_cov_trace_pc() #20
  br label %put_cred.exit

do.body.i142:                                     ; preds = %out_no_stats
  %call.i.i141 = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %77) #18
  br i1 %call.i.i141, label %if.then.i.i143, label %do.body.i142.__validate_creds.exit.i145_crit_edge, !prof !427

do.body.i142.__validate_creds.exit.i145_crit_edge: ; preds = %do.body.i142
  call void @__sanitizer_cov_trace_pc() #20
  br label %__validate_creds.exit.i145

if.then.i.i143:                                   ; preds = %do.body.i142
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__invalid_creds(ptr noundef nonnull %77, ptr noundef nonnull @.str.27, i32 noundef 286) #18
  br label %__validate_creds.exit.i145

__validate_creds.exit.i145:                       ; preds = %if.then.i.i143, %do.body.i142.__validate_creds.exit.i145_crit_edge
  %call.i.i.i144 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %77, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !428
  tail call void @llvm.prefetch.p0(ptr nonnull %77, i32 1, i32 3, i32 1) #18
  %78 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %77, ptr nonnull %77, i32 1, ptr nonnull elementtype(i32) %77) #18, !srcloc !429
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %78, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then1.i, label %__validate_creds.exit.i145.put_cred.exit_crit_edge

__validate_creds.exit.i145.put_cred.exit_crit_edge: ; preds = %__validate_creds.exit.i145
  call void @__sanitizer_cov_trace_pc() #20
  br label %put_cred.exit

if.then1.i:                                       ; preds = %__validate_creds.exit.i145
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @__put_cred(ptr noundef nonnull %77) #18
  br label %put_cred.exit

put_cred.exit:                                    ; preds = %if.then1.i, %__validate_creds.exit.i145.put_cred.exit_crit_edge, %out_no_stats.put_cred.exit_crit_edge
  %79 = ptrtoint ptr %cl_clid.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %cl_clid.i, align 4
  tail call void @ida_free(ptr noundef nonnull @rpc_clids, i32 noundef %80) #18
  br label %out_no_clid

out_no_clid:                                      ; preds = %put_cred.exit, %if.end14.out_no_clid_crit_edge
  %err.1 = phi i32 [ %err.0, %put_cred.exit ], [ %call.i, %if.end14.out_no_clid_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #18
  br label %out_err

out_err:                                          ; preds = %out_no_clid, %if.end10.out_err_crit_edge, %if.end5.out_err_crit_edge, %if.end.out_err_crit_edge
  %err.2 = phi i32 [ -22, %if.end.out_err_crit_edge ], [ -22, %if.end5.out_err_crit_edge ], [ %err.1, %out_no_clid ], [ -12, %if.end10.out_err_crit_edge ]
  tail call void @rpciod_down() #18
  br label %out_no_rpciod

out_no_rpciod:                                    ; preds = %out_err, %entry.out_no_rpciod_crit_edge
  %err.3 = phi i32 [ %call, %entry.out_no_rpciod_crit_edge ], [ %err.2, %out_err ]
  tail call void @xprt_switch_put(ptr noundef %xps) #18
  tail call void @xprt_put(ptr noundef %xprt) #18
  %81 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %1, align 4
  %servername59 = getelementptr inbounds %struct.rpc_create_args, ptr %args, i32 0, i32 6
  %83 = ptrtoint ptr %servername59 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %servername59, align 4
  tail call fastcc void @trace_rpc_clnt_new_err(ptr noundef %82, ptr noundef %84, i32 noundef %err.3)
  %85 = inttoptr i32 %err.3 to ptr
  br label %cleanup

cleanup:                                          ; preds = %out_no_rpciod, %if.end55
  %retval.0 = phi ptr [ %85, %out_no_rpciod ], [ %call7.i.i, %if.end55 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpciod_up() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_alloc_iostats(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_init_pipe_dir_head(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_iter_init(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_init_rtt(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_sysfs_client_setup(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @refcount_inc(ptr noundef %r) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %r, i32 noundef 4) #18
  tail call void @llvm.prefetch.p0(ptr %r, i32 1, i32 3, i32 1) #18
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %r, ptr %r, i32 1, ptr elementtype(i32) %r) #18, !srcloc !444
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %tobool1.not.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool1.not.i.i, label %entry.if.end15.sink.split.i.i_crit_edge, label %if.else.i.i, !prof !427

entry.if.end15.sink.split.i.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15.sink.split.i.i

if.else.i.i:                                      ; preds = %entry
  %add.i.i = add i32 %asmresult.i.i.i.i, 1
  %1 = or i32 %add.i.i, %asmresult.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i, label %if.else.i.i.__refcount_inc.exit_crit_edge, label %if.else.i.i.if.end15.sink.split.i.i_crit_edge, !prof !419

if.else.i.i.if.end15.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end15.sink.split.i.i

if.else.i.i.__refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %__refcount_inc.exit

if.end15.sink.split.i.i:                          ; preds = %if.else.i.i.if.end15.sink.split.i.i_crit_edge, %entry.if.end15.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i_crit_edge ], [ 1, %if.else.i.i.if.end15.sink.split.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %r, i32 noundef %.sink.i.i) #18
  br label %__refcount_inc.exit

__refcount_inc.exit:                              ; preds = %if.end15.sink.split.i.i, %if.else.i.i.__refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_new(ptr noundef %clnt, ptr noundef %xprt, ptr noundef %program, ptr noundef %server) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_new, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !455
  %call42 = tail call i32 @__traceiter_rpc_clnt_new(ptr noundef null, ptr noundef %clnt, ptr noundef %xprt, ptr noundef %program, ptr noundef %server) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !456
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_new.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_new.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 172, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_free_iostats(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpciod_down() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_new_err(ptr noundef %program, ptr noundef %server, i32 noundef %error) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new_err, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_new_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !457
  %call42 = tail call i32 @__traceiter_rpc_clnt_new_err(ptr noundef null, ptr noundef %program, ptr noundef %server, i32 noundef %error) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !458
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_new_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_new_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_new_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 197, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @creds_are_invalid(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__invalid_creds(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_new(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_cred(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_new_err(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_clone_err(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_clone_err, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_clone_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !459
  %call42 = tail call i32 @__traceiter_rpc_clnt_clone_err(ptr noundef null, ptr noundef %clnt, i32 noundef -12) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !460
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i2 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i2 to ptr
  %preempt_count.i.i3 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i3, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i5 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !419

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %20, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %22 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i12
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i13.not = icmp eq i32 %25, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_clone_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_clone_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_rpc_clnt_clone_err.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_clone_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 219, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i15 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_clone_err(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpc_remove_client_dir(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_clnt_debugfs_register(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_get_sb_net(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_put_sb_net(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpcauth_create(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_replace_xprt(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_replace_xprt_err(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_iter_init_listall(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_killall(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_shutdown(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpcauth_release(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_release(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_release, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_release, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !461
  %call42 = tail call i32 @__traceiter_rpc_clnt_release(ptr noundef null, ptr noundef %clnt) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !462
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_release, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_release, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_release.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_release.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 138, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rpc_free_client_work(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -308
  tail call fastcc void @trace_rpc_clnt_free(ptr noundef %add.ptr)
  tail call void @rpc_sysfs_client_destroy(ptr noundef %add.ptr) #18
  tail call void @rpc_clnt_debugfs_unregister(ptr noundef %add.ptr) #18
  %cl_clid.i = getelementptr i8, ptr %work, i32 -304
  %0 = ptrtoint ptr %cl_clid.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cl_clid.i, align 4
  tail call void @ida_free(ptr noundef nonnull @rpc_clids, i32 noundef %1) #18
  %call.i = tail call ptr @rpc_net_ns(ptr noundef %add.ptr) #18
  %call1.i = tail call ptr @rpc_get_sb_net(ptr noundef %call.i) #18
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %entry.rpc_clnt_remove_pipedir.exit_crit_edge, label %if.then.i

entry.rpc_clnt_remove_pipedir.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_clnt_remove_pipedir.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %call.i.i = tail call i32 @rpc_remove_client_dir(ptr noundef %add.ptr) #18
  tail call void @rpc_put_sb_net(ptr noundef %call.i) #18
  br label %rpc_clnt_remove_pipedir.exit

rpc_clnt_remove_pipedir.exit:                     ; preds = %if.then.i, %entry.rpc_clnt_remove_pipedir.exit_crit_edge
  %cl_xprt = getelementptr i8, ptr %work, i32 -236
  %2 = ptrtoint ptr %cl_xprt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %cl_xprt, align 4
  tail call void @xprt_put(ptr noundef %3) #18
  tail call void @kfree(ptr noundef %add.ptr) #18
  tail call void @rpciod_down() #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_release(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_clnt_free(ptr noundef %clnt) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_free, i32 0, i32 1), ptr blockaddress(@trace_rpc_clnt_free, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !463
  %call42 = tail call i32 @__traceiter_rpc_clnt_free(ptr noundef null, ptr noundef %clnt) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !464
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_free, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_clnt_free, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_clnt_free.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_clnt_free.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 135, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_clnt_free(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rpc_task_set_transport(ptr nocapture noundef %task, ptr noundef %clnt) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %0 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_xprt, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end6

if.end:                                           ; preds = %entry
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %2 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %tk_flags, align 4
  %4 = and i16 %3, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool1.not = icmp eq i16 %4, 0
  br i1 %tobool1.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  %5 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i.i, label %if.then2.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then2.rcu_read_lock.exit.i_crit_edge:          ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then2
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then2.rcu_read_lock.exit.i_crit_edge
  %cl_xprt.i = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 6
  %9 = ptrtoint ptr %cl_xprt.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %cl_xprt.i, align 4
  %call.i = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end7.i_crit_edge

rcu_read_lock.exit.i.do.end7.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b12.i = load i1, ptr @rpc_task_get_first_xprt.__warned, align 1
  br i1 %.b12.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end7.i

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rpc_task_get_first_xprt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1054, ptr noundef nonnull @.str.4) #18
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %rcu_read_lock.exit.i.do.end7.i_crit_edge
  %call9.i = tail call ptr @xprt_get(ptr noundef %10) #18
  %call.i13.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i13.i, label %do.end7.i.rpc_task_get_first_xprt.exit_crit_edge, label %land.lhs.true.i16.i

do.end7.i.rpc_task_get_first_xprt.exit_crit_edge: ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_get_first_xprt.exit

land.lhs.true.i16.i:                              ; preds = %do.end7.i
  %call1.i14.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i14.i)
  %tobool.not.i15.i = icmp eq i32 %call1.i14.i, 0
  br i1 %tobool.not.i15.i, label %land.lhs.true.i16.i.rpc_task_get_first_xprt.exit_crit_edge, label %land.lhs.true2.i18.i

land.lhs.true.i16.i.rpc_task_get_first_xprt.exit_crit_edge: ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_get_first_xprt.exit

land.lhs.true2.i18.i:                             ; preds = %land.lhs.true.i16.i
  %.b4.i17.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i17.i, label %land.lhs.true2.i18.i.rpc_task_get_first_xprt.exit_crit_edge, label %if.then.i19.i

land.lhs.true2.i18.i.rpc_task_get_first_xprt.exit_crit_edge: ; preds = %land.lhs.true2.i18.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_task_get_first_xprt.exit

if.then.i19.i:                                    ; preds = %land.lhs.true2.i18.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 724, ptr noundef nonnull @.str.38) #18
  br label %rpc_task_get_first_xprt.exit

rpc_task_get_first_xprt.exit:                     ; preds = %if.then.i19.i, %land.lhs.true2.i18.i.rpc_task_get_first_xprt.exit_crit_edge, %land.lhs.true.i16.i.rpc_task_get_first_xprt.exit_crit_edge, %do.end7.i.rpc_task_get_first_xprt.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !422
  %11 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i20.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i20.i to ptr
  %preempt_count.i.i.i.i21.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i21.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i21.i, align 4
  %sub.i.i.i.i = add i32 %14, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i21.i, align 4
  tail call void @rcu_read_unlock_strict() #18
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #18
  br label %if.end6.sink.split

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %15 = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 28
  %call.i11 = tail call ptr @xprt_iter_get_next(ptr noundef %15) #18
  br label %if.end6.sink.split

if.end6.sink.split:                               ; preds = %if.else, %rpc_task_get_first_xprt.exit
  %call.i11.sink = phi ptr [ %call.i11, %if.else ], [ %call9.i, %rpc_task_get_first_xprt.exit ]
  %call1.i = tail call ptr @rpc_task_get_xprt(ptr noundef %clnt, ptr noundef %call.i11.sink) #18
  %16 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call1.i, ptr %tk_xprt, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.end6.sink.split, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rpc_default_callback(ptr nocapture noundef %task, ptr nocapture noundef %data) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_xdr_reply_pages(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sock_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_bind(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_connect(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_getsockname(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_release(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_net(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_request(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_request, i32 0, i32 1), ptr blockaddress(@trace_rpc_request, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !465
  %call42 = tail call i32 @__traceiter_rpc_request(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !466
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_request, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_request, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_request.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_request.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 305, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_reserve(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %tk_status, align 4
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %1 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @call_reserveresult, ptr %tk_action, align 4
  tail call void @xprt_reserve(ptr noundef %task) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_request(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_reserveresult(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tk_status, align 4
  store i32 0, ptr %tk_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp = icmp sgt i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %2 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_rqstp, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %4 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @call_refresh, ptr %tk_action, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -5, i32 noundef -5) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %5 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -5, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -5) #18
  br label %cleanup

if.end3:                                          ; preds = %entry
  %6 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.86)
  switch i32 %1, label %sw.default [
    i32 -12, label %sw.bb
    i32 -11, label %if.end3.sw.bb4_crit_edge
  ]

if.end3.sw.bb4_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb4

sw.bb:                                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 25) #18
  br label %sw.bb4

sw.bb4:                                           ; preds = %sw.bb, %if.end3.sw.bb4_crit_edge
  %tk_action5 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %7 = ptrtoint ptr %tk_action5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @call_retry_reserve, ptr %tk_action5, align 4
  br label %cleanup

sw.default:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %1, i32 noundef %1) #18
  %tk_rpc_status.i.i15 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %8 = ptrtoint ptr %tk_rpc_status.i.i15 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %1, ptr %tk_rpc_status.i.i15, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %1) #18
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb4, %if.end, %if.then2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_reserve(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_refresh(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %0 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @call_refreshresult, ptr %tk_action, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %1 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %tk_status, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %2 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_client, align 4
  %cl_stats = getelementptr inbounds %struct.rpc_clnt, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %cl_stats to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cl_stats, align 4
  %rpcauthrefresh = getelementptr inbounds %struct.rpc_stat, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %rpcauthrefresh to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rpcauthrefresh, align 4
  %inc = add i32 %7, 1
  store i32 %inc, ptr %rpcauthrefresh, align 4
  %call = tail call i32 @rpcauth_refreshcred(ptr noundef %task) #18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_delay(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_retry_reserve(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %tk_status, align 4
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %1 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @call_reserveresult, ptr %tk_action, align 4
  tail call void @xprt_retry_reserve(ptr noundef %task) #18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_refreshresult(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tk_status, align 4
  store i32 0, ptr %tk_status, align 4
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %2 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @call_refresh, ptr %tk_action, align 4
  %3 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.87)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 -110, label %entry.sw.bb3_crit_edge
    i32 -11, label %entry.sw.bb4_crit_edge
    i32 -127, label %entry.sw.bb5_crit_edge
  ]

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb5

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb4

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb3

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %call = tail call i32 @rpcauth_uptodatecred(ptr noundef %task) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %sw.bb.sw.bb3_crit_edge, label %if.then

sw.bb.sw.bb3_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb3

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  %4 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @call_allocate, ptr %tk_action, align 4
  br label %cleanup

sw.bb3:                                           ; preds = %sw.bb.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 300) #18
  br label %sw.bb4

sw.bb4:                                           ; preds = %sw.bb3, %entry.sw.bb4_crit_edge
  br label %sw.bb5

sw.bb5:                                           ; preds = %sw.bb4, %entry.sw.bb5_crit_edge
  %status.0 = phi i32 [ %1, %entry.sw.bb5_crit_edge ], [ -13, %sw.bb4 ]
  %tk_cred_retry = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %5 = ptrtoint ptr %tk_cred_retry to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %tk_cred_retry, align 2
  %6 = and i8 %bf.load, 12
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool6.not = icmp eq i8 %6, 0
  br i1 %tobool6.not, label %sw.bb5.sw.epilog_crit_edge, label %if.end8

sw.bb5.sw.epilog_crit_edge:                       ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end8:                                          ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #20
  %7 = add i8 %bf.load, 12
  %bf.shl = and i8 %7, 12
  %bf.clear14 = and i8 %bf.load, -13
  %bf.set = or i8 %bf.shl, %bf.clear14
  %8 = ptrtoint ptr %tk_cred_retry to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %bf.set, ptr %tk_cred_retry, align 2
  tail call fastcc void @trace_rpc_retry_refresh_status(ptr noundef %task)
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb5.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %status.1 = phi i32 [ %1, %entry.sw.epilog_crit_edge ], [ %status.0, %sw.bb5.sw.epilog_crit_edge ]
  tail call fastcc void @trace_rpc_refresh_status(ptr noundef %task)
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %status.1, i32 noundef %status.1) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %9 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %status.1, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %status.1) #18
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.end8, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_refreshcred(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_uptodatecred(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_allocate(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %rq_cred = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %rq_cred to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_cred, align 8
  %cr_auth = getelementptr inbounds %struct.rpc_cred, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cr_auth to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cr_auth, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %8 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tk_msg, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %10 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %tk_status, align 4
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %11 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @call_encode, ptr %tk_action, align 4
  %rq_buffer = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 14
  %12 = ptrtoint ptr %rq_buffer to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rq_buffer, align 8
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.not = icmp eq i32 %15, 0
  br i1 %cmp.not, label %if.end.if.end35_crit_edge, label %do.body

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end35

do.body:                                          ; preds = %if.end
  %p_arglen = getelementptr inbounds %struct.rpc_procinfo, ptr %9, i32 0, i32 3
  %16 = ptrtoint ptr %p_arglen to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %p_arglen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp3 = icmp eq i32 %17, 0
  br i1 %cmp3, label %do.body7, label %do.end13, !prof !427

do.body7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/sunrpc/clnt.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1773, 0\0A.popsection", ""() #18, !srcloc !467
  unreachable

do.end13:                                         ; preds = %do.body
  %p_decode = getelementptr inbounds %struct.rpc_procinfo, ptr %9, i32 0, i32 2
  %18 = ptrtoint ptr %p_decode to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %p_decode, align 4
  %cmp14.not = icmp eq ptr %19, null
  br i1 %cmp14.not, label %do.end13.if.end35_crit_edge, label %do.body16

do.end13.if.end35_crit_edge:                      ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end35

do.body16:                                        ; preds = %do.end13
  %p_replen = getelementptr inbounds %struct.rpc_procinfo, ptr %9, i32 0, i32 4
  %20 = ptrtoint ptr %p_replen to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %p_replen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp17 = icmp eq i32 %21, 0
  br i1 %cmp17, label %do.body25, label %do.body16.if.end35_crit_edge, !prof !427

do.body16.if.end35_crit_edge:                     ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end35

do.body25:                                        ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/sunrpc/clnt.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1775, 0\0A.popsection", ""() #18, !srcloc !468
  unreachable

if.end35:                                         ; preds = %do.body16.if.end35_crit_edge, %do.end13.if.end35_crit_edge, %if.end.if.end35_crit_edge
  %22 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %5, align 4
  %shl = shl i32 %23, 1
  %add = add i32 %shl, 6
  %p_arglen36 = getelementptr inbounds %struct.rpc_procinfo, ptr %9, i32 0, i32 3
  %24 = ptrtoint ptr %p_arglen36 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %p_arglen36, align 4
  %add37 = add i32 %add, %25
  %rq_callsize = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 15
  %shl39 = shl i32 %add37, 2
  %26 = ptrtoint ptr %rq_callsize to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %shl39, ptr %rq_callsize, align 4
  %au_rslack = getelementptr inbounds %struct.rpc_auth, ptr %5, i32 0, i32 1
  %27 = ptrtoint ptr %au_rslack to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %au_rslack, align 4
  %add40 = add i32 %28, 4
  %p_replen41 = getelementptr inbounds %struct.rpc_procinfo, ptr %9, i32 0, i32 4
  %29 = ptrtoint ptr %p_replen41 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %p_replen41, align 4
  %31 = tail call i32 @llvm.umax.i32(i32 %30, i32 2)
  %add43 = add i32 %add40, %31
  %rq_rcvsize = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 17
  %shl45 = shl i32 %add43, 2
  %32 = ptrtoint ptr %rq_rcvsize to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %shl45, ptr %rq_rcvsize, align 4
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %7, i32 0, i32 1
  %33 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ops, align 4
  %buf_alloc = getelementptr inbounds %struct.rpc_xprt_ops, ptr %34, i32 0, i32 8
  %35 = ptrtoint ptr %buf_alloc to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %buf_alloc, align 4
  %call = tail call i32 %36(ptr noundef %task) #18
  tail call fastcc void @trace_rpc_buf_alloc(ptr noundef %task, i32 noundef %call)
  %37 = zext i32 %call to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values.88)
  switch i32 %call, label %if.then50 [
    i32 0, label %if.end35.cleanup_crit_edge
    i32 -12, label %if.end51
  ]

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then50:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %call, i32 noundef %call) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %38 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %call, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %call) #18
  br label %cleanup

if.end51:                                         ; preds = %if.end35
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %39 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %tk_flags, align 4
  %41 = and i16 %40, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %41)
  %tobool52.not = icmp eq i16 %41, 0
  br i1 %tobool52.not, label %lor.lhs.false, label %if.end51.if.then57_crit_edge

if.end51.if.then57_crit_edge:                     ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then57

lor.lhs.false:                                    ; preds = %if.end51
  %42 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i to ptr
  %task54 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %task54 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %task54, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %stack.i.i.i, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %and1.i.i.i.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.if.then57_crit_edge, label %fatal_signal_pending.exit

lor.lhs.false.if.then57_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then57

fatal_signal_pending.exit:                        ; preds = %lor.lhs.false
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 116, i32 1
  %50 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %signal.i.i, align 4
  %52 = and i32 %51, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool56.not = icmp eq i32 %52, 0
  br i1 %tobool56.not, label %fatal_signal_pending.exit.if.then57_crit_edge, label %if.end59

fatal_signal_pending.exit.if.then57_crit_edge:    ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then57

if.then57:                                        ; preds = %fatal_signal_pending.exit.if.then57_crit_edge, %lor.lhs.false.if.then57_crit_edge, %if.end51.if.then57_crit_edge
  %53 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr @call_allocate, ptr %tk_action, align 4
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 6) #18
  br label %cleanup

if.end59:                                         ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -512, i32 noundef -512) #18
  %tk_rpc_status.i.i91 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %54 = ptrtoint ptr %tk_rpc_status.i.i91 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 -512, ptr %tk_rpc_status.i.i91, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -512) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end59, %if.then57, %if.then50, %if.end35.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_retry_refresh_status(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_retry_refresh_status, i32 0, i32 1), ptr blockaddress(@trace_rpc_retry_refresh_status, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !469
  %call42 = tail call i32 @__traceiter_rpc_retry_refresh_status(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !470
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_retry_refresh_status, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_retry_refresh_status, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_retry_refresh_status.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_retry_refresh_status.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 274, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_refresh_status(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_refresh_status, i32 0, i32 1), ptr blockaddress(@trace_rpc_refresh_status, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !471
  %call42 = tail call i32 @__traceiter_rpc_refresh_status(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !472
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_refresh_status, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_refresh_status, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_refresh_status.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_refresh_status.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 275, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_encode(ptr noundef %task) #0 align 64 {
entry:
  %xdr.i = alloca %struct.xdr_stream, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate.i, align 4
  %2 = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp.i = icmp eq i32 %2, 0
  br i1 %cmp.i, label %land.rhs.i, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

land.rhs.i:                                       ; preds = %entry
  %tk_flags.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %3 = ptrtoint ptr %tk_flags.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_flags.i, align 4
  %5 = and i16 %4, 18432
  call void @__sanitizer_cov_trace_const_cmp2(i16 18432, i16 %5)
  %.not.i = icmp eq i16 %5, 18432
  br i1 %.not.i, label %rpc_task_need_encode.exit, label %land.rhs.i.if.end_crit_edge

land.rhs.i.if.end_crit_edge:                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

rpc_task_need_encode.exit:                        ; preds = %land.rhs.i
  %call5.i = tail call zeroext i1 @xprt_request_need_retransmit(ptr noundef %task) #18
  br i1 %call5.i, label %rpc_task_need_encode.exit.if.end_crit_edge, label %rpc_task_need_encode.exit.out_crit_edge

rpc_task_need_encode.exit.out_crit_edge:          ; preds = %rpc_task_need_encode.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

rpc_task_need_encode.exit.if.end_crit_edge:       ; preds = %rpc_task_need_encode.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.end:                                           ; preds = %rpc_task_need_encode.exit.if.end_crit_edge, %land.rhs.i.if.end_crit_edge
  tail call void @xprt_request_dequeue_xprt(ptr noundef %task) #18
  %tk_rqstp.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %6 = ptrtoint ptr %tk_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_rqstp.i, align 8
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %xdr.i) #18
  %8 = call ptr @memset(ptr %xdr.i, i32 255, i32 36)
  %rq_snd_buf.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1
  %rq_buffer.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 14
  %9 = ptrtoint ptr %rq_buffer.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rq_buffer.i, align 8
  %rq_callsize.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 15
  %11 = ptrtoint ptr %rq_callsize.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rq_callsize.i, align 4
  %13 = ptrtoint ptr %rq_snd_buf.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %rq_snd_buf.i, align 4
  %iov_len.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 0, i32 0, i32 1
  %iov_len4.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 1, i32 0, i32 1
  %14 = ptrtoint ptr %iov_len4.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %iov_len4.i.i, align 4
  %pages.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %pages.i.i, align 4
  %page_len.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 5
  %16 = ptrtoint ptr %page_len.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %page_len.i.i, align 4
  %flags.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 6
  %17 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %flags.i.i, align 4
  %len5.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 8
  %18 = ptrtoint ptr %len5.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %len5.i.i, align 4
  %buflen.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 1, i32 7
  %19 = ptrtoint ptr %buflen.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %12, ptr %buflen.i.i, align 4
  %rq_rcv_buf.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2
  %rq_rbuffer.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 16
  %20 = ptrtoint ptr %rq_rbuffer.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rq_rbuffer.i, align 8
  %rq_rcvsize.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 17
  %22 = ptrtoint ptr %rq_rcvsize.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rq_rcvsize.i, align 4
  %24 = ptrtoint ptr %rq_rcv_buf.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %rq_rcv_buf.i, align 4
  %iov_len.i23.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 0, i32 0, i32 1
  %25 = ptrtoint ptr %iov_len.i23.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %23, ptr %iov_len.i23.i, align 4
  %iov_len4.i24.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 1, i32 0, i32 1
  %26 = ptrtoint ptr %iov_len4.i24.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %iov_len4.i24.i, align 4
  %pages.i25.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 3
  %27 = ptrtoint ptr %pages.i25.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %pages.i25.i, align 4
  %page_len.i26.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 5
  %28 = ptrtoint ptr %page_len.i26.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %page_len.i26.i, align 4
  %flags.i27.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 6
  %29 = ptrtoint ptr %flags.i27.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %flags.i27.i, align 4
  %len5.i28.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 8
  %30 = ptrtoint ptr %len5.i28.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %len5.i28.i, align 4
  %buflen.i29.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 2, i32 7
  %31 = ptrtoint ptr %buflen.i29.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %23, ptr %buflen.i29.i, align 4
  %rq_reply_bytes_recvd.i = getelementptr inbounds %struct.rpc_rqst, ptr %7, i32 0, i32 19
  %32 = ptrtoint ptr %rq_reply_bytes_recvd.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %rq_reply_bytes_recvd.i, align 4
  %33 = ptrtoint ptr %iov_len.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %iov_len.i.i, align 4
  call void @xdr_init_encode(ptr noundef nonnull %xdr.i, ptr noundef %rq_snd_buf.i, ptr noundef %10, ptr noundef %7) #18
  call void @xdr_free_bvec(ptr noundef %rq_snd_buf.i) #18
  %tk_client.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %34 = ptrtoint ptr %tk_client.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tk_client.i.i, align 4
  %36 = ptrtoint ptr %tk_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tk_rqstp.i, align 8
  %call.i.i = call ptr @xdr_reserve_space(ptr noundef nonnull %xdr.i, i32 noundef 24) #18
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end.rpc_encode_header.exit.i_crit_edge, label %if.end.i.i

if.end.rpc_encode_header.exit.i_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_encode_header.exit.i

if.end.i.i:                                       ; preds = %if.end
  %rq_xid.i.i = getelementptr inbounds %struct.rpc_rqst, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid.i.i, align 4
  %incdec.ptr.i.i = getelementptr i32, ptr %call.i.i, i32 1
  %40 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %call.i.i, align 4
  %incdec.ptr1.i.i = getelementptr i32, ptr %call.i.i, i32 2
  %41 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %incdec.ptr.i.i, align 4
  %incdec.ptr2.i.i = getelementptr i32, ptr %call.i.i, i32 3
  %42 = ptrtoint ptr %incdec.ptr1.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 2, ptr %incdec.ptr1.i.i, align 4
  %cl_prog.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %35, i32 0, i32 8
  %43 = ptrtoint ptr %cl_prog.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %cl_prog.i.i, align 4
  %incdec.ptr3.i.i = getelementptr i32, ptr %call.i.i, i32 4
  %45 = ptrtoint ptr %incdec.ptr2.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %incdec.ptr2.i.i, align 4
  %cl_vers.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %35, i32 0, i32 9
  %46 = ptrtoint ptr %cl_vers.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %cl_vers.i.i, align 4
  %incdec.ptr4.i.i = getelementptr i32, ptr %call.i.i, i32 5
  %48 = ptrtoint ptr %incdec.ptr3.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %incdec.ptr3.i.i, align 4
  %tk_msg.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %49 = ptrtoint ptr %tk_msg.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %tk_msg.i.i, align 4
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %50, align 4
  %53 = ptrtoint ptr %incdec.ptr4.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %incdec.ptr4.i.i, align 4
  %call5.i.i = call i32 @rpcauth_marshcred(ptr noundef %task, ptr noundef nonnull %xdr.i) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %cmp.i.i = icmp slt i32 %call5.i.i, 0
  br i1 %cmp.i.i, label %if.end.i.i.rpc_encode_header.exit.i_crit_edge, label %if.end.i

if.end.i.i.rpc_encode_header.exit.i_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rpc_encode_header.exit.i

rpc_encode_header.exit.i:                         ; preds = %if.end.i.i.rpc_encode_header.exit.i_crit_edge, %if.end.rpc_encode_header.exit.i_crit_edge
  %error.0.i.i = phi i32 [ %call5.i.i, %if.end.i.i.rpc_encode_header.exit.i_crit_edge ], [ -90, %if.end.rpc_encode_header.exit.i_crit_edge ]
  call fastcc void @trace_rpc_bad_callhdr(ptr noundef %task) #18
  call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %error.0.i.i, i32 noundef %error.0.i.i) #18
  %tk_rpc_status.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %54 = ptrtoint ptr %tk_rpc_status.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %error.0.i.i, ptr %tk_rpc_status.i.i.i.i, align 8
  call void @rpc_exit(ptr noundef %task, i32 noundef %error.0.i.i) #18
  br label %rpc_xdr_encode.exit

if.end.i:                                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #20
  %call7.i = call i32 @rpcauth_wrap_req(ptr noundef %task, ptr noundef nonnull %xdr.i) #18
  %tk_status.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %55 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %call7.i, ptr %tk_status.i, align 4
  br label %rpc_xdr_encode.exit

rpc_xdr_encode.exit:                              ; preds = %if.end.i, %rpc_encode_header.exit.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %xdr.i) #18
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %56 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %tk_status, align 4
  %58 = zext i32 %57 to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values.89)
  switch i32 %57, label %sw.default [
    i32 0, label %if.end15
    i32 -11, label %rpc_xdr_encode.exit.sw.bb_crit_edge
    i32 -12, label %rpc_xdr_encode.exit.sw.bb_crit_edge63
    i32 -127, label %sw.bb3
  ]

rpc_xdr_encode.exit.sw.bb_crit_edge63:            ; preds = %rpc_xdr_encode.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

rpc_xdr_encode.exit.sw.bb_crit_edge:              ; preds = %rpc_xdr_encode.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

sw.bb:                                            ; preds = %rpc_xdr_encode.exit.sw.bb_crit_edge, %rpc_xdr_encode.exit.sw.bb_crit_edge63
  call void @rpc_delay(ptr noundef %task, i32 noundef 6) #18
  br label %if.end32

sw.bb3:                                           ; preds = %rpc_xdr_encode.exit
  %tk_cred_retry = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %59 = ptrtoint ptr %tk_cred_retry to i32
  call void @__asan_load1_noabort(i32 %59)
  %bf.load = load i8, ptr %tk_cred_retry, align 2
  %60 = and i8 %bf.load, 12
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %60)
  %tobool4.not = icmp eq i8 %60, 0
  br i1 %tobool4.not, label %if.then5, label %if.else

if.then5:                                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #20
  call void @rpc_exit(ptr noundef %task, i32 noundef -127) #18
  br label %if.end32

if.else:                                          ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #20
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %61 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @call_refresh, ptr %tk_action, align 4
  %62 = add i8 %bf.load, 12
  %bf.shl = and i8 %62, 12
  %bf.clear12 = and i8 %bf.load, -13
  %bf.set = or i8 %bf.shl, %bf.clear12
  %63 = ptrtoint ptr %tk_cred_retry to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %bf.set, ptr %tk_cred_retry, align 2
  call fastcc void @trace_rpc_retry_refresh_status(ptr noundef %task)
  br label %if.end32

sw.default:                                       ; preds = %rpc_xdr_encode.exit
  call void @__sanitizer_cov_trace_pc() #20
  call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %57, i32 noundef %57) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %64 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %57, ptr %tk_rpc_status.i.i, align 8
  call void @rpc_exit(ptr noundef %task, i32 noundef %57) #18
  br label %if.end32

if.end15:                                         ; preds = %rpc_xdr_encode.exit
  %tk_msg.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %65 = ptrtoint ptr %tk_msg.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %tk_msg.i, align 4
  %cmp.not.i = icmp eq ptr %66, null
  br i1 %cmp.not.i, label %if.end15.if.end19_crit_edge, label %rpc_reply_expected.exit

if.end15.if.end19_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end19

rpc_reply_expected.exit:                          ; preds = %if.end15
  %p_decode.i = getelementptr inbounds %struct.rpc_procinfo, ptr %66, i32 0, i32 2
  %67 = ptrtoint ptr %p_decode.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %p_decode.i, align 4
  %cmp3.i.not = icmp eq ptr %68, null
  br i1 %cmp3.i.not, label %rpc_reply_expected.exit.if.end19_crit_edge, label %if.then18

rpc_reply_expected.exit.if.end19_crit_edge:       ; preds = %rpc_reply_expected.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end19

if.then18:                                        ; preds = %rpc_reply_expected.exit
  call void @__sanitizer_cov_trace_pc() #20
  call void @xprt_request_enqueue_receive(ptr noundef %task) #18
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %rpc_reply_expected.exit.if.end19_crit_edge, %if.end15.if.end19_crit_edge
  call void @xprt_request_enqueue_transmit(ptr noundef %task) #18
  br label %out

out:                                              ; preds = %if.end19, %rpc_task_need_encode.exit.out_crit_edge, %entry.out_crit_edge
  %tk_action20 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %69 = ptrtoint ptr %tk_action20 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr @call_transmit, ptr %tk_action20, align 4
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %70 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %tk_xprt, align 8
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %71, i32 0, i32 18
  %72 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %state.i, align 4
  %74 = and i32 %73, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool22.not = icmp eq i32 %74, 0
  br i1 %tobool22.not, label %if.then23, label %if.else25

if.then23:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  %75 = ptrtoint ptr %tk_action20 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr @call_bind, ptr %tk_action20, align 4
  br label %if.end32

if.else25:                                        ; preds = %out
  %76 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %state.i, align 4
  %78 = and i32 %77, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool28.not = icmp eq i32 %78, 0
  br i1 %tobool28.not, label %if.then29, label %if.else25.if.end32_crit_edge

if.else25.if.end32_crit_edge:                     ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end32

if.then29:                                        ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #20
  %79 = ptrtoint ptr %tk_action20 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr @call_connect, ptr %tk_action20, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then29, %if.else25.if.end32_crit_edge, %if.then23, %sw.default, %if.else, %if.then5, %sw.bb
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_buf_alloc(ptr noundef %task, i32 noundef %status) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_buf_alloc, i32 0, i32 1), ptr blockaddress(@trace_rpc_buf_alloc, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !473
  %call42 = tail call i32 @__traceiter_rpc_buf_alloc(ptr noundef null, ptr noundef %task, i32 noundef %status) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !474
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_buf_alloc, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_buf_alloc, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_buf_alloc.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_buf_alloc.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 559, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_request_dequeue_xprt(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_exit(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_request_enqueue_receive(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_request_enqueue_transmit(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_transmit(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate.i, align 4
  %2 = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %3 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @call_transmit_status, ptr %tk_action.i, align 4
  br label %return

if.end:                                           ; preds = %entry
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %4 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @call_transmit_status, ptr %tk_action, align 4
  %call1 = tail call zeroext i1 @xprt_prepare_transmit(ptr noundef %task) #18
  br i1 %call1, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end3:                                          ; preds = %if.end
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %5 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %tk_status, align 4
  %6 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %tk_runstate.i, align 4
  %8 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %if.end3.if.end11_crit_edge, label %if.then5

if.end3.if.end11_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end11

if.then5:                                         ; preds = %if.end3
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %9 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_xprt, align 8
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %10, i32 0, i32 18
  %11 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %state.i, align 4
  %13 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool7.not = icmp eq i32 %13, 0
  br i1 %tobool7.not, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #20
  %14 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -107, ptr %tk_status, align 4
  br label %return

if.end10:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_transmit(ptr noundef %task) #18
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end3.if.end11_crit_edge
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  br label %return

return:                                           ; preds = %if.end11, %if.then8, %if.end.return_crit_edge, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_bind(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %4 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %tk_runstate.i, align 4
  %6 = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %7 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @call_transmit_status, ptr %tk_action.i, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 18
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %10 = and i32 %9, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  %tk_action4 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  br i1 %tobool.not, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %11 = ptrtoint ptr %tk_action4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @call_connect, ptr %tk_action4, align 4
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %12 = ptrtoint ptr %tk_action4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @call_bind_status, ptr %tk_action4, align 4
  %call5 = tail call zeroext i1 @xprt_prepare_transmit(ptr noundef %task) #18
  br i1 %call5, label %if.end7, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  %ops = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 1
  %13 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops, align 4
  %rpcbind = getelementptr inbounds %struct.rpc_xprt_ops, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %rpcbind to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rpcbind, align 4
  tail call void %16(ptr noundef %task) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end3.cleanup_crit_edge, %if.then2, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_connect(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %4 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %tk_runstate.i, align 4
  %6 = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %7 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @call_transmit_status, ptr %tk_action.i, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 18
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %10 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  %tk_action4 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  br i1 %tobool.not, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %11 = ptrtoint ptr %tk_action4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @call_transmit, ptr %tk_action4, align 4
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %12 = ptrtoint ptr %tk_action4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @call_connect_status, ptr %tk_action4, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %13 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %tk_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp = icmp slt i32 %14, 0
  br i1 %cmp, label %if.end3.cleanup_crit_edge, label %if.end6

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end6:                                          ; preds = %if.end3
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %15 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %tk_flags, align 4
  %17 = and i16 %16, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool7.not = icmp eq i16 %17, 0
  br i1 %tobool7.not, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -107, i32 noundef -107) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %18 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 -107, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -107) #18
  br label %cleanup

if.end9:                                          ; preds = %if.end6
  %call10 = tail call zeroext i1 @xprt_prepare_transmit(ptr noundef %task) #18
  br i1 %call10, label %if.end12, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end12:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_connect(ptr noundef %task) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end9.cleanup_crit_edge, %if.then8, %if.end3.cleanup_crit_edge, %if.then2, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xprt_request_need_retransmit(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdr_init_encode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdr_free_bvec(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_wrap_req(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdr_reserve_space(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_marshcred(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_bad_callhdr(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_callhdr, i32 0, i32 1), ptr blockaddress(@trace_rpc_bad_callhdr, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !475
  %call42 = tail call i32 @__traceiter_rpc_bad_callhdr(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !476
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_callhdr, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_callhdr, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_bad_callhdr.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_bad_callhdr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 462, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_bad_callhdr(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_transmit_status(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %0 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @call_status, ptr %tk_action, align 4
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %1 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %tk_runstate.i, align 4
  %3 = and i32 %2, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  br i1 %tobool.not.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %4 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %tk_status, align 4
  tail call void @xprt_request_wait_receive(ptr noundef %task) #18
  br label %return

if.end:                                           ; preds = %entry
  %5 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tk_status, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.90)
  switch i32 %6, label %if.end.sw.epilog_crit_edge [
    i32 -74, label %sw.bb
    i32 -105, label %sw.bb4
    i32 -57, label %if.end.sw.bb5_crit_edge
    i32 -11, label %if.end.sw.bb5_crit_edge37
    i32 -111, label %if.end.sw.bb8_crit_edge
    i32 -112, label %if.end.sw.bb8_crit_edge38
    i32 -100, label %if.end.sw.bb8_crit_edge39
    i32 -113, label %if.end.sw.bb8_crit_edge40
    i32 -101, label %if.end.sw.bb8_crit_edge41
    i32 -1, label %if.end.sw.bb8_crit_edge42
    i32 -104, label %if.end.sw.bb16_crit_edge
    i32 -103, label %if.end.sw.bb16_crit_edge43
    i32 -98, label %if.end.sw.bb16_crit_edge44
    i32 -107, label %if.end.sw.bb16_crit_edge45
    i32 -32, label %if.end.sw.bb16_crit_edge46
  ]

if.end.sw.bb16_crit_edge46:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb16

if.end.sw.bb16_crit_edge45:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb16

if.end.sw.bb16_crit_edge44:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb16

if.end.sw.bb16_crit_edge43:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb16

if.end.sw.bb16_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb16

if.end.sw.bb8_crit_edge42:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end.sw.bb8_crit_edge41:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end.sw.bb8_crit_edge40:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end.sw.bb8_crit_edge39:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end.sw.bb8_crit_edge38:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end.sw.bb8_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end.sw.bb5_crit_edge37:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb5

if.end.sw.bb5_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb5

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %8 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %tk_status, align 4
  %9 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @call_encode, ptr %tk_action, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 25) #18
  br label %sw.bb5

sw.bb5:                                           ; preds = %sw.bb4, %if.end.sw.bb5_crit_edge, %if.end.sw.bb5_crit_edge37
  %10 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @call_transmit, ptr %tk_action, align 4
  %11 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %tk_status, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end.sw.bb8_crit_edge, %if.end.sw.bb8_crit_edge38, %if.end.sw.bb8_crit_edge39, %if.end.sw.bb8_crit_edge40, %if.end.sw.bb8_crit_edge41, %if.end.sw.bb8_crit_edge42
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %12 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %tk_flags, align 4
  %14 = and i16 %13, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool.not = icmp eq i16 %14, 0
  br i1 %tobool.not, label %sw.bb8.sw.bb16_crit_edge, label %if.then9

sw.bb8.sw.bb16_crit_edge:                         ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb16

if.then9:                                         ; preds = %sw.bb8
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %15 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tk_msg, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool10.not = icmp eq i32 %18, 0
  br i1 %tobool10.not, label %if.then11, label %if.then9.if.end13_crit_edge

if.then9.if.end13_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end13

if.then11:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #20
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %19 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tk_xprt, align 8
  tail call fastcc void @trace_xprt_ping(ptr noundef %20, i32 noundef %6)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then9.if.end13_crit_edge
  %21 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tk_status, align 4
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %22, i32 noundef %22) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %23 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %22) #18
  br label %return

sw.bb16:                                          ; preds = %sw.bb8.sw.bb16_crit_edge, %if.end.sw.bb16_crit_edge, %if.end.sw.bb16_crit_edge43, %if.end.sw.bb16_crit_edge44, %if.end.sw.bb16_crit_edge45, %if.end.sw.bb16_crit_edge46
  %24 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @call_bind, ptr %tk_action, align 4
  %25 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %tk_status, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb16, %sw.bb5, %sw.bb, %if.end.sw.epilog_crit_edge
  tail call fastcc void @rpc_check_timeout(ptr noundef %task)
  br label %return

return:                                           ; preds = %sw.epilog, %if.end13, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xprt_prepare_transmit(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_transmit(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_end_transmit(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_status(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %0 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_client, align 4
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %2 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_msg, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %6 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_xprt, align 8
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %8 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %tk_status, align 4
  tail call fastcc void @trace_xprt_ping(ptr noundef %7, i32 noundef %9)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tk_status1 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %10 = ptrtoint ptr %tk_status1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tk_status1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp = icmp sgt i32 %11, -1
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %12 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @call_decode, ptr %tk_action, align 4
  br label %cleanup

if.end3:                                          ; preds = %if.end
  tail call fastcc void @trace_rpc_call_status(ptr noundef %task)
  %13 = ptrtoint ptr %tk_status1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %tk_status1, align 4
  %14 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.91)
  switch i32 %11, label %sw.default [
    i32 -112, label %if.end3.sw.bb_crit_edge
    i32 -100, label %if.end3.sw.bb_crit_edge46
    i32 -113, label %if.end3.sw.bb_crit_edge47
    i32 -101, label %if.end3.sw.bb_crit_edge48
    i32 -1, label %if.end3.sw.bb_crit_edge49
    i32 -110, label %if.end3.sw.epilog_crit_edge
    i32 -111, label %if.end3.sw.bb8_crit_edge
    i32 -104, label %if.end3.sw.bb8_crit_edge50
    i32 -103, label %if.end3.sw.bb8_crit_edge51
    i32 -107, label %if.end3.sw.bb8_crit_edge52
    i32 -98, label %sw.epilog.thread
    i32 -32, label %if.end3.sw.epilog_crit_edge53
    i32 -11, label %if.end3.sw.epilog_crit_edge54
    i32 -5, label %if.end3.out_exit_crit_edge
  ]

if.end3.out_exit_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_exit

if.end3.sw.epilog_crit_edge54:                    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end3.sw.epilog_crit_edge53:                    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end3.sw.bb8_crit_edge52:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end3.sw.bb8_crit_edge51:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end3.sw.bb8_crit_edge50:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end3.sw.bb8_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb8

if.end3.sw.epilog_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end3.sw.bb_crit_edge49:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end3.sw.bb_crit_edge48:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end3.sw.bb_crit_edge47:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end3.sw.bb_crit_edge46:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

if.end3.sw.bb_crit_edge:                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb

sw.bb:                                            ; preds = %if.end3.sw.bb_crit_edge, %if.end3.sw.bb_crit_edge46, %if.end3.sw.bb_crit_edge47, %if.end3.sw.bb_crit_edge48, %if.end3.sw.bb_crit_edge49
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %15 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %tk_flags, align 4
  %17 = and i16 %16, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool5.not = icmp eq i16 %17, 0
  br i1 %tobool5.not, label %if.end7, label %sw.bb.out_exit_crit_edge

sw.bb.out_exit_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_exit

if.end7:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 300) #18
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end3.sw.bb8_crit_edge, %if.end3.sw.bb8_crit_edge50, %if.end3.sw.bb8_crit_edge51, %if.end3.sw.bb8_crit_edge52
  tail call void @rpc_force_rebind(ptr noundef %1)
  br label %sw.epilog

sw.epilog.thread:                                 ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 300) #18
  %tk_action1543 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %18 = ptrtoint ptr %tk_action1543 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @call_encode, ptr %tk_action1543, align 4
  br label %if.then20

sw.default:                                       ; preds = %if.end3
  %cl_chatty = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 14
  %19 = ptrtoint ptr %cl_chatty to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %cl_chatty, align 4
  %20 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool12.not = icmp eq i8 %20, 0
  br i1 %tobool12.not, label %sw.default.out_exit_crit_edge, label %do.end

sw.default.out_exit_crit_edge:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_exit

do.end:                                           ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #20
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 24
  %21 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %cl_program, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %sub = sub i32 0, %11
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.59, ptr noundef %24, i32 noundef %sub) #21
  br label %out_exit

sw.epilog:                                        ; preds = %sw.bb8, %if.end7, %if.end3.sw.epilog_crit_edge, %if.end3.sw.epilog_crit_edge53, %if.end3.sw.epilog_crit_edge54
  %tk_action15 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %25 = ptrtoint ptr %tk_action15 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @call_encode, ptr %tk_action15, align 4
  %26 = and i32 %11, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -104, i32 %26)
  %switch = icmp eq i32 %26, -104
  br i1 %switch, label %sw.epilog.cleanup_crit_edge, label %sw.epilog.if.then20_crit_edge

sw.epilog.if.then20_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.then20

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.then20:                                        ; preds = %sw.epilog.if.then20_crit_edge, %sw.epilog.thread
  tail call fastcc void @rpc_check_timeout(ptr noundef %task)
  br label %cleanup

out_exit:                                         ; preds = %do.end, %sw.default.out_exit_crit_edge, %sw.bb.out_exit_crit_edge, %if.end3.out_exit_crit_edge
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %11, i32 noundef %11) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %27 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %11, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %11) #18
  br label %cleanup

cleanup:                                          ; preds = %out_exit, %if.then20, %sw.epilog.cleanup_crit_edge, %if.then2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_request_wait_receive(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xprt_ping(ptr noundef %xprt, i32 noundef %status) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_ping, i32 0, i32 1), ptr blockaddress(@trace_xprt_ping, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !477
  %call42 = tail call i32 @__traceiter_xprt_ping(ptr noundef null, ptr noundef %xprt, i32 noundef %status) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !478
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_ping, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xprt_ping, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xprt_ping.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_xprt_ping.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 1142, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rpc_check_timeout(ptr noundef %task) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %0 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_client, align 4
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %2 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %tk_runstate, align 4
  %4 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -512, i32 noundef -512) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %5 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -512, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -512) #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %6 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_rqstp, align 8
  %call1 = tail call i32 @xprt_adjust_timeout(ptr noundef %7) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end3:                                          ; preds = %if.end
  tail call fastcc void @trace_rpc_timeout_status(ptr noundef %task)
  %tk_timeouts = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 21
  %8 = ptrtoint ptr %tk_timeouts to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %tk_timeouts, align 2
  %inc = add i16 %9, 1
  store i16 %inc, ptr %tk_timeouts, align 2
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %10 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %tk_flags, align 4
  %12 = and i16 %11, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool4.not = icmp eq i16 %12, 0
  br i1 %tobool4.not, label %if.end3.if.end8_crit_edge, label %land.lhs.true

if.end3.if.end8_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end3
  %13 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tk_rqstp, align 8
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %land.lhs.true.if.end8_crit_edge, label %lor.lhs.false.i

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

lor.lhs.false.i:                                  ; preds = %land.lhs.true
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 8
  %tobool1.not.i = icmp eq ptr %16, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.if.end8_crit_edge, label %rpc_check_connected.exit

lor.lhs.false.i.if.end8_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

rpc_check_connected.exit:                         ; preds = %lor.lhs.false.i
  %state.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %16, i32 0, i32 18
  %17 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %state.i.i, align 4
  %19 = and i32 %18, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool3.i.not = icmp eq i32 %19, 0
  br i1 %tobool3.i.not, label %if.then7, label %rpc_check_connected.exit.if.end8_crit_edge

rpc_check_connected.exit.if.end8_crit_edge:       ; preds = %rpc_check_connected.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end8

if.then7:                                         ; preds = %rpc_check_connected.exit
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -110, i32 noundef -110) #18
  %tk_rpc_status.i.i92 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %20 = ptrtoint ptr %tk_rpc_status.i.i92 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -110, ptr %tk_rpc_status.i.i92, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -110) #18
  br label %cleanup

if.end8:                                          ; preds = %rpc_check_connected.exit.if.end8_crit_edge, %lor.lhs.false.i.if.end8_crit_edge, %land.lhs.true.if.end8_crit_edge, %if.end3.if.end8_crit_edge
  %conv10 = zext i16 %11 to i32
  %and11 = and i32 %conv10, 4608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.end38, label %if.then13

if.then13:                                        ; preds = %if.end8
  %and16 = and i32 %conv10, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  br i1 %tobool17.not, label %if.then13.if.end23_crit_edge, label %land.lhs.true18

if.then13.if.end23_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23

land.lhs.true18:                                  ; preds = %if.then13
  %21 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tk_rqstp, align 8
  %tobool.not.i93 = icmp eq ptr %22, null
  br i1 %tobool.not.i93, label %land.lhs.true18.cleanup_crit_edge, label %lor.lhs.false.i95

land.lhs.true18.cleanup_crit_edge:                ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

lor.lhs.false.i95:                                ; preds = %land.lhs.true18
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 8
  %tobool1.not.i94 = icmp eq ptr %24, null
  br i1 %tobool1.not.i94, label %lor.lhs.false.i95.cleanup_crit_edge, label %rpc_check_connected.exit100

lor.lhs.false.i95.cleanup_crit_edge:              ; preds = %lor.lhs.false.i95
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

rpc_check_connected.exit100:                      ; preds = %lor.lhs.false.i95
  %state.i.i96 = getelementptr inbounds %struct.rpc_xprt, ptr %24, i32 0, i32 18
  %25 = ptrtoint ptr %state.i.i96 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %state.i.i96, align 4
  %27 = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool3.i97.not = icmp eq i32 %27, 0
  br i1 %tobool3.i97.not, label %rpc_check_connected.exit100.if.end23_crit_edge, label %rpc_check_connected.exit100.cleanup_crit_edge

rpc_check_connected.exit100.cleanup_crit_edge:    ; preds = %rpc_check_connected.exit100
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

rpc_check_connected.exit100.if.end23_crit_edge:   ; preds = %rpc_check_connected.exit100
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end23

if.end23:                                         ; preds = %rpc_check_connected.exit100.if.end23_crit_edge, %if.then13.if.end23_crit_edge
  %cl_chatty = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 14
  %28 = ptrtoint ptr %cl_chatty to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load = load i8, ptr %cl_chatty, align 4
  %29 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool24.not = icmp eq i8 %29, 0
  br i1 %tobool24.not, label %if.end23.if.end31_crit_edge, label %if.then25

if.end23.if.end31_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end31

if.then25:                                        ; preds = %if.end23
  %call26 = tail call i32 @___ratelimit(ptr noundef nonnull @rpc_check_timeout._rs, ptr noundef nonnull @__func__.rpc_check_timeout) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.then25.if.end31_crit_edge, label %do.end

if.then25.if.end31_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end31

do.end:                                           ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #20
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 24
  %30 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cl_program, align 4
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %34 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tk_xprt, align 8
  %servername = getelementptr inbounds %struct.rpc_xprt, ptr %35, i32 0, i32 50
  %36 = ptrtoint ptr %servername to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %servername, align 4
  %call29 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.65, ptr noundef %33, ptr noundef %37) #21
  br label %if.end31

if.end31:                                         ; preds = %do.end, %if.then25.if.end31_crit_edge, %if.end23.if.end31_crit_edge
  %38 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %tk_flags, align 4
  %40 = and i16 %39, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %tobool35.not = icmp eq i16 %40, 0
  br i1 %tobool35.not, label %if.else, label %if.then36

if.then36:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -110, i32 noundef -110) #18
  %tk_rpc_status.i.i101 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %41 = ptrtoint ptr %tk_rpc_status.i.i101 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 -110, ptr %tk_rpc_status.i.i101, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -110) #18
  br label %cleanup

if.else:                                          ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef -5, i32 noundef -110) #18
  %tk_rpc_status.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %42 = ptrtoint ptr %tk_rpc_status.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 -110, ptr %tk_rpc_status.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef -5) #18
  br label %cleanup

if.end38:                                         ; preds = %if.end8
  %and41 = and i32 %conv10, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %if.then43, label %if.end38.if.end68_crit_edge

if.end38.if.end68_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end68

if.then43:                                        ; preds = %if.end38
  %or = or i16 %11, 32
  %43 = ptrtoint ptr %tk_flags to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %or, ptr %tk_flags, align 4
  %cl_chatty47 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 14
  %44 = ptrtoint ptr %cl_chatty47 to i32
  call void @__asan_load1_noabort(i32 %44)
  %bf.load48 = load i8, ptr %cl_chatty47, align 4
  %45 = and i8 %bf.load48, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool52.not = icmp eq i8 %45, 0
  br i1 %tobool52.not, label %if.then43.if.end68_crit_edge, label %if.then53

if.then43.if.end68_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end68

if.then53:                                        ; preds = %if.then43
  %call54 = tail call i32 @___ratelimit(ptr noundef nonnull @rpc_check_timeout._rs.66, ptr noundef nonnull @__func__.rpc_check_timeout) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.then53.if.end68_crit_edge, label %do.end59

if.then53.if.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end68

do.end59:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #20
  %cl_program61 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 24
  %46 = ptrtoint ptr %cl_program61 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %cl_program61, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %47, align 4
  %tk_xprt63 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %50 = ptrtoint ptr %tk_xprt63 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %tk_xprt63, align 8
  %servername64 = getelementptr inbounds %struct.rpc_xprt, ptr %51, i32 0, i32 50
  %52 = ptrtoint ptr %servername64 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %servername64, align 4
  %call65 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.68, ptr noundef %49, ptr noundef %53) #21
  br label %if.end68

if.end68:                                         ; preds = %do.end59, %if.then53.if.end68_crit_edge, %if.then43.if.end68_crit_edge, %if.end38.if.end68_crit_edge
  tail call void @rpc_force_rebind(ptr noundef %1)
  tail call void @rpcauth_invalcred(ptr noundef %task) #18
  br label %cleanup

cleanup:                                          ; preds = %if.end68, %if.else, %if.then36, %rpc_check_connected.exit100.cleanup_crit_edge, %lor.lhs.false.i95.cleanup_crit_edge, %land.lhs.true18.cleanup_crit_edge, %if.then7, %if.end.cleanup_crit_edge, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_decode(ptr noundef %task) #0 align 64 {
entry:
  %xdr = alloca %struct.xdr_stream, align 4
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %0 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_client, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %2 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_rqstp, align 8
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %xdr) #18
  %4 = call ptr @memset(ptr %xdr, i32 255, i32 36)
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %5 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tk_msg, align 4
  %p_decode = getelementptr inbounds %struct.rpc_procinfo, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %p_decode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %p_decode, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %9 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @rpc_exit_task, ptr %tk_action, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %10 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %tk_flags, align 4
  %12 = and i16 %11, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool1.not = icmp eq i16 %12, 0
  br i1 %tobool1.not, label %if.end.if.end14_crit_edge, label %if.then2

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end14

if.then2:                                         ; preds = %if.end
  %cl_chatty = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 14
  %13 = ptrtoint ptr %cl_chatty to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %cl_chatty, align 4
  %14 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool3.not = icmp eq i8 %14, 0
  br i1 %tobool3.not, label %if.then2.if.end9_crit_edge, label %if.then4

if.then2.if.end9_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end9

if.then4:                                         ; preds = %if.then2
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @call_decode._rs, ptr noundef nonnull @__func__.call_decode) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %if.then4.if.end9_crit_edge, label %do.end

if.then4.if.end9_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end9

do.end:                                           ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #20
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 24
  %15 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cl_program, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %19 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tk_xprt, align 8
  %servername = getelementptr inbounds %struct.rpc_xprt, ptr %20, i32 0, i32 50
  %21 = ptrtoint ptr %servername to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %servername, align 4
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.62, ptr noundef %18, ptr noundef %22) #21
  br label %if.end9

if.end9:                                          ; preds = %do.end, %if.then4.if.end9_crit_edge, %if.then2.if.end9_crit_edge
  %23 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %tk_flags, align 4
  %25 = and i16 %24, -33
  store i16 %25, ptr %tk_flags, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.end9, %if.end.if.end14_crit_edge
  %rq_reply_bytes_recvd = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 19
  %26 = ptrtoint ptr %rq_reply_bytes_recvd to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rq_reply_bytes_recvd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool15.not = icmp eq i32 %27, 0
  br i1 %tobool15.not, label %if.end14.sw.bb60_crit_edge, label %do.end21

if.end14.sw.bb60_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb60

do.end21:                                         ; preds = %if.end14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !479
  %rq_private_buf = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 20
  %len = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 20, i32 8
  %28 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %len, align 8
  %rq_rcv_buf = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 2
  %len24 = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 2, i32 8
  %30 = ptrtoint ptr %len24 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %len24, align 8
  tail call fastcc void @trace_rpc_xdr_recvfrom(ptr noundef %task, ptr noundef %rq_rcv_buf)
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(44) %rq_rcv_buf, ptr noundef dereferenceable(44) %rq_private_buf, i32 44) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp.not = icmp eq i32 %bcmp, 0
  br i1 %cmp.not, label %do.end21.out_crit_edge, label %do.end41, !prof !419

do.end21.out_crit_edge:                           ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #20
  br label %out

do.end41:                                         ; preds = %do.end21
  call void @__sanitizer_cov_trace_pc() #20
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2495, i32 noundef 9, ptr noundef null) #18
  br label %out

out:                                              ; preds = %do.end41, %do.end21.out_crit_edge
  %31 = ptrtoint ptr %rq_rcv_buf to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %rq_rcv_buf, align 8
  call void @xdr_init_decode(ptr noundef nonnull %xdr, ptr noundef %rq_rcv_buf, ptr noundef %32, ptr noundef %3) #18
  %call57 = call fastcc i32 @rpc_decode_header(ptr noundef %task, ptr noundef nonnull %xdr)
  %33 = zext i32 %call57 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %call57, label %out.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 -11, label %out.sw.bb60_crit_edge
    i32 -129, label %sw.bb71
  ]

out.sw.bb60_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb60

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

sw.bb:                                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  %tk_action58 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %34 = ptrtoint ptr %tk_action58 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @rpc_exit_task, ptr %tk_action58, align 4
  %call59 = call i32 @rpcauth_unwrap_resp(ptr noundef %task, ptr noundef nonnull %xdr) #18
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %35 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %call59, ptr %tk_status, align 4
  br label %cleanup

sw.bb60:                                          ; preds = %out.sw.bb60_crit_edge, %if.end14.sw.bb60_crit_edge
  %tk_status61 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %36 = ptrtoint ptr %tk_status61 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %tk_status61, align 4
  %37 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tk_client, align 4
  %cl_discrtry = getelementptr inbounds %struct.rpc_clnt, ptr %38, i32 0, i32 14
  %39 = ptrtoint ptr %cl_discrtry to i32
  call void @__asan_load1_noabort(i32 %39)
  %bf.load63 = load i8, ptr %cl_discrtry, align 4
  %40 = and i8 %bf.load63, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool67.not = icmp eq i8 %40, 0
  br i1 %tobool67.not, label %sw.bb60.if.end69_crit_edge, label %if.then68

sw.bb60.if.end69_crit_edge:                       ; preds = %sw.bb60
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then68:                                        ; preds = %sw.bb60
  call void @__sanitizer_cov_trace_pc() #20
  %41 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %3, align 8
  %rq_connect_cookie = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 26
  %43 = ptrtoint ptr %rq_connect_cookie to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rq_connect_cookie, align 4
  call void @xprt_conditional_disconnect(ptr noundef %42, i32 noundef %44) #18
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %sw.bb60.if.end69_crit_edge
  %tk_action70 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %45 = ptrtoint ptr %tk_action70 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr @call_encode, ptr %tk_action70, align 4
  call fastcc void @rpc_check_timeout(ptr noundef %task)
  br label %cleanup

sw.bb71:                                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #20
  %tk_action72 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %46 = ptrtoint ptr %tk_action72 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @call_reserve, ptr %tk_action72, align 4
  call fastcc void @rpc_check_timeout(ptr noundef %task)
  call void @rpcauth_invalcred(ptr noundef %task) #18
  call void @xprt_release(ptr noundef %task) #18
  br label %cleanup

cleanup:                                          ; preds = %sw.bb71, %if.end69, %sw.bb, %out.cleanup_crit_edge, %if.then
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %xdr) #18
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_call_status(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_status, i32 0, i32 1), ptr blockaddress(@trace_rpc_call_status, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !480
  %call42 = tail call i32 @__traceiter_rpc_call_status(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !481
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_status, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_status, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_call_status.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_call_status.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 271, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_exit_task(ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_xdr_recvfrom(ptr noundef %task, ptr noundef %xdr) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_recvfrom, i32 0, i32 1), ptr blockaddress(@trace_rpc_xdr_recvfrom, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !482
  %call42 = tail call i32 @__traceiter_rpc_xdr_recvfrom(ptr noundef null, ptr noundef %task, ptr noundef %xdr) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !483
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_recvfrom, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_xdr_recvfrom, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_xdr_recvfrom.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_xdr_recvfrom.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 105, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdr_init_decode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @rpc_decode_header(ptr noundef %task, ptr noundef %xdr) unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %0 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_client, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %2 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_rqstp, align 8
  %len = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 2, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 8
  %and = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.out_unparsable_crit_edge

entry.out_unparsable_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

if.end:                                           ; preds = %entry
  %call = tail call ptr @xdr_inline_decode(ptr noundef %xdr, i32 noundef 12) #18
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.out_unparsable_crit_edge, label %if.end3

if.end.out_unparsable_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

if.end3:                                          ; preds = %if.end
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %6 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %incdec.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.not = icmp eq i32 %7, 1
  br i1 %cmp.not, label %if.end6, label %if.end3.out_unparsable_crit_edge

if.end3.out_unparsable_crit_edge:                 ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

if.end6:                                          ; preds = %if.end3
  %incdec.ptr4 = getelementptr i32, ptr %call, i32 2
  %8 = ptrtoint ptr %incdec.ptr4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %incdec.ptr4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp8.not = icmp eq i32 %9, 0
  br i1 %cmp8.not, label %if.end10, label %out_msg_denied

if.end10:                                         ; preds = %if.end6
  %call11 = tail call i32 @rpcauth_checkverf(ptr noundef %task, ptr noundef %xdr) #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %out_verifier

if.end14:                                         ; preds = %if.end10
  %call15 = tail call ptr @xdr_inline_decode(ptr noundef %xdr, i32 noundef 4) #18
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end14.out_unparsable_crit_edge, label %if.end18

if.end14.out_unparsable_crit_edge:                ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

if.end18:                                         ; preds = %if.end14
  %10 = ptrtoint ptr %call15 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call15, align 4
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.93)
  switch i32 %11, label %if.end18.out_unparsable_crit_edge [
    i32 0, label %if.end18.cleanup_crit_edge
    i32 1, label %sw.bb19
    i32 2, label %sw.bb20
    i32 3, label %sw.bb21
    i32 4, label %if.end18.sw.bb22_crit_edge
    i32 5, label %if.end18.sw.bb22_crit_edge124
  ]

if.end18.sw.bb22_crit_edge124:                    ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb22

if.end18.sw.bb22_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb22

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end18.out_unparsable_crit_edge:                ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

sw.bb19:                                          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc__prog_unavail(ptr noundef %task)
  br label %out_err

sw.bb20:                                          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc__prog_mismatch(ptr noundef %task)
  br label %out_err

sw.bb21:                                          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc__proc_unavail(ptr noundef %task)
  br label %out_err

sw.bb22:                                          ; preds = %if.end18.sw.bb22_crit_edge, %if.end18.sw.bb22_crit_edge124
  tail call fastcc void @trace_rpc__garbage_args(ptr noundef %task)
  br label %out_garbage

out_garbage:                                      ; preds = %out_verifier, %out_unparsable, %sw.bb22
  %error.0 = phi i32 [ -5, %out_unparsable ], [ %call11, %out_verifier ], [ -5, %sw.bb22 ]
  %cl_stats = getelementptr inbounds %struct.rpc_clnt, ptr %1, i32 0, i32 12
  %13 = ptrtoint ptr %cl_stats to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %cl_stats, align 4
  %rpcgarbage = getelementptr inbounds %struct.rpc_stat, ptr %14, i32 0, i32 9
  %15 = ptrtoint ptr %rpcgarbage to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rpcgarbage, align 4
  %inc = add i32 %16, 1
  store i32 %inc, ptr %rpcgarbage, align 4
  %tk_garb_retry = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %17 = ptrtoint ptr %tk_garb_retry to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load = load i8, ptr %tk_garb_retry, align 2
  %18 = and i8 %bf.load, 48
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool23.not = icmp eq i8 %18, 0
  br i1 %tobool23.not, label %out_garbage.out_err_crit_edge, label %if.then24

out_garbage.out_err_crit_edge:                    ; preds = %out_garbage
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.then24:                                        ; preds = %out_garbage
  call void @__sanitizer_cov_trace_pc() #20
  %19 = add i8 %bf.load, 48
  %bf.shl = and i8 %19, 48
  %bf.clear30 = and i8 %bf.load, -49
  %bf.set = or i8 %bf.shl, %bf.clear30
  %20 = ptrtoint ptr %tk_garb_retry to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %bf.set, ptr %tk_garb_retry, align 2
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %21 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @call_encode, ptr %tk_action, align 4
  br label %cleanup

out_err:                                          ; preds = %sw.bb81, %sw.bb62.out_err_crit_edge, %sw.bb45.out_err_crit_edge, %sw.bb37, %out_garbage.out_err_crit_edge, %sw.bb21, %sw.bb20, %sw.bb19
  %error.1 = phi i32 [ %error.0, %out_garbage.out_err_crit_edge ], [ -93, %sw.bb37 ], [ -13, %sw.bb81 ], [ -13, %sw.bb62.out_err_crit_edge ], [ -13, %sw.bb45.out_err_crit_edge ], [ -95, %sw.bb21 ], [ -93, %sw.bb20 ], [ -96, %sw.bb19 ]
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %error.1, i32 noundef %error.1) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %22 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %error.1, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %error.1) #18
  br label %cleanup

out_unparsable:                                   ; preds = %if.end43.out_unparsable_crit_edge, %sw.epilog39.out_unparsable_crit_edge, %if.end35.out_unparsable_crit_edge, %out_msg_denied.out_unparsable_crit_edge, %if.end18.out_unparsable_crit_edge, %if.end14.out_unparsable_crit_edge, %if.end3.out_unparsable_crit_edge, %if.end.out_unparsable_crit_edge, %entry.out_unparsable_crit_edge
  tail call fastcc void @trace_rpc__unparsable(ptr noundef %task)
  br label %out_garbage

out_verifier:                                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc_bad_verifier(ptr noundef %task)
  br label %out_garbage

out_msg_denied:                                   ; preds = %if.end6
  %call32 = tail call ptr @xdr_inline_decode(ptr noundef %xdr, i32 noundef 4) #18
  %tobool33.not = icmp eq ptr %call32, null
  br i1 %tobool33.not, label %out_msg_denied.out_unparsable_crit_edge, label %if.end35

out_msg_denied.out_unparsable_crit_edge:          ; preds = %out_msg_denied
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

if.end35:                                         ; preds = %out_msg_denied
  %23 = ptrtoint ptr %call32 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %call32, align 4
  %25 = zext i32 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.94)
  switch i32 %24, label %if.end35.out_unparsable_crit_edge [
    i32 1, label %sw.epilog39
    i32 0, label %sw.bb37
  ]

if.end35.out_unparsable_crit_edge:                ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

sw.bb37:                                          ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc__mismatch(ptr noundef %task)
  br label %out_err

sw.epilog39:                                      ; preds = %if.end35
  %call40 = tail call ptr @xdr_inline_decode(ptr noundef %xdr, i32 noundef 4) #18
  %tobool41.not = icmp eq ptr %call40, null
  br i1 %tobool41.not, label %sw.epilog39.out_unparsable_crit_edge, label %if.end43

sw.epilog39.out_unparsable_crit_edge:             ; preds = %sw.epilog39
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

if.end43:                                         ; preds = %sw.epilog39
  %26 = ptrtoint ptr %call40 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %call40, align 4
  %28 = zext i32 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.95)
  switch i32 %27, label %if.end43.out_unparsable_crit_edge [
    i32 2, label %if.end43.sw.bb45_crit_edge
    i32 4, label %if.end43.sw.bb45_crit_edge125
    i32 13, label %if.end43.sw.bb45_crit_edge126
    i32 14, label %if.end43.sw.bb45_crit_edge127
    i32 1, label %if.end43.sw.bb62_crit_edge
    i32 3, label %if.end43.sw.bb62_crit_edge128
    i32 5, label %sw.bb81
  ]

if.end43.sw.bb62_crit_edge128:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb62

if.end43.sw.bb62_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb62

if.end43.sw.bb45_crit_edge127:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb45

if.end43.sw.bb45_crit_edge126:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb45

if.end43.sw.bb45_crit_edge125:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb45

if.end43.sw.bb45_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb45

if.end43.out_unparsable_crit_edge:                ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_unparsable

sw.bb45:                                          ; preds = %if.end43.sw.bb45_crit_edge, %if.end43.sw.bb45_crit_edge125, %if.end43.sw.bb45_crit_edge126, %if.end43.sw.bb45_crit_edge127
  %tk_cred_retry = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %29 = ptrtoint ptr %tk_cred_retry to i32
  call void @__asan_load1_noabort(i32 %29)
  %bf.load46 = load i8, ptr %tk_cred_retry, align 2
  %30 = and i8 %bf.load46, 12
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool49.not = icmp eq i8 %30, 0
  br i1 %tobool49.not, label %sw.bb45.out_err_crit_edge, label %if.end51

sw.bb45.out_err_crit_edge:                        ; preds = %sw.bb45
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end51:                                         ; preds = %sw.bb45
  call void @__sanitizer_cov_trace_pc() #20
  %31 = add i8 %bf.load46, 12
  %bf.shl59 = and i8 %31, 12
  %bf.clear60 = and i8 %bf.load46, -13
  %bf.set61 = or i8 %bf.shl59, %bf.clear60
  %32 = ptrtoint ptr %tk_cred_retry to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %bf.set61, ptr %tk_cred_retry, align 2
  tail call fastcc void @trace_rpc__stale_creds(ptr noundef %task)
  br label %cleanup

sw.bb62:                                          ; preds = %if.end43.sw.bb62_crit_edge, %if.end43.sw.bb62_crit_edge128
  %tk_garb_retry63 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %33 = ptrtoint ptr %tk_garb_retry63 to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load64 = load i8, ptr %tk_garb_retry63, align 2
  %34 = and i8 %bf.load64, 48
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool67.not = icmp eq i8 %34, 0
  br i1 %tobool67.not, label %sw.bb62.out_err_crit_edge, label %if.end69

sw.bb62.out_err_crit_edge:                        ; preds = %sw.bb62
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_err

if.end69:                                         ; preds = %sw.bb62
  call void @__sanitizer_cov_trace_pc() #20
  %35 = add i8 %bf.load64, 48
  %bf.shl77 = and i8 %35, 48
  %bf.clear78 = and i8 %bf.load64, -49
  %bf.set79 = or i8 %bf.shl77, %bf.clear78
  %36 = ptrtoint ptr %tk_garb_retry63 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %bf.set79, ptr %tk_garb_retry63, align 2
  tail call fastcc void @trace_rpc__bad_creds(ptr noundef %task)
  %tk_action80 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %37 = ptrtoint ptr %tk_action80 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @call_encode, ptr %tk_action80, align 4
  br label %cleanup

sw.bb81:                                          ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpc__auth_tooweak(ptr noundef %task)
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %38 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %tk_xprt, align 8
  %servername = getelementptr inbounds %struct.rpc_xprt, ptr %39, i32 0, i32 50
  %40 = ptrtoint ptr %servername to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %servername, align 4
  %call82 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef %41) #21
  br label %out_err

cleanup:                                          ; preds = %if.end69, %if.end51, %out_err, %if.then24, %if.end18.cleanup_crit_edge
  %retval.0 = phi i32 [ -11, %if.then24 ], [ %error.1, %out_err ], [ -11, %if.end69 ], [ -129, %if.end51 ], [ %11, %if.end18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_unwrap_resp(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_conditional_disconnect(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpcauth_invalcred(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_release(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_xdr_recvfrom(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdr_inline_decode(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_checkverf(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__prog_unavail(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_unavail, i32 0, i32 1), ptr blockaddress(@trace_rpc__prog_unavail, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !484
  %call42 = tail call i32 @__traceiter_rpc__prog_unavail(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !485
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_unavail, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_unavail, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__prog_unavail.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__prog_unavail.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 507, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__prog_mismatch(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_mismatch, i32 0, i32 1), ptr blockaddress(@trace_rpc__prog_mismatch, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !486
  %call42 = tail call i32 @__traceiter_rpc__prog_mismatch(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !487
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_mismatch, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__prog_mismatch, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__prog_mismatch.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__prog_mismatch.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 508, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__proc_unavail(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__proc_unavail, i32 0, i32 1), ptr blockaddress(@trace_rpc__proc_unavail, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !488
  %call42 = tail call i32 @__traceiter_rpc__proc_unavail(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !489
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__proc_unavail, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__proc_unavail, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__proc_unavail.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__proc_unavail.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 509, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__garbage_args(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__garbage_args, i32 0, i32 1), ptr blockaddress(@trace_rpc__garbage_args, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !490
  %call42 = tail call i32 @__traceiter_rpc__garbage_args(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !491
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__garbage_args, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__garbage_args, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__garbage_args.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__garbage_args.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 510, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__unparsable(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__unparsable, i32 0, i32 1), ptr blockaddress(@trace_rpc__unparsable, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !492
  %call42 = tail call i32 @__traceiter_rpc__unparsable(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !493
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__unparsable, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__unparsable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__unparsable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__unparsable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 511, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_bad_verifier(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_verifier, i32 0, i32 1), ptr blockaddress(@trace_rpc_bad_verifier, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !494
  %call42 = tail call i32 @__traceiter_rpc_bad_verifier(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !495
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_verifier, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_bad_verifier, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_bad_verifier.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_bad_verifier.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 463, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__mismatch(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__mismatch, i32 0, i32 1), ptr blockaddress(@trace_rpc__mismatch, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !496
  %call42 = tail call i32 @__traceiter_rpc__mismatch(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !497
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__mismatch, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__mismatch, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__mismatch.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__mismatch.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 512, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__stale_creds(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__stale_creds, i32 0, i32 1), ptr blockaddress(@trace_rpc__stale_creds, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !498
  %call42 = tail call i32 @__traceiter_rpc__stale_creds(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !499
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__stale_creds, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__stale_creds, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__stale_creds.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__stale_creds.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 513, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__bad_creds(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__bad_creds, i32 0, i32 1), ptr blockaddress(@trace_rpc__bad_creds, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !500
  %call42 = tail call i32 @__traceiter_rpc__bad_creds(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !501
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__bad_creds, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__bad_creds, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__bad_creds.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__bad_creds.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 514, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc__auth_tooweak(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__auth_tooweak, i32 0, i32 1), ptr blockaddress(@trace_rpc__auth_tooweak, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !502
  %call42 = tail call i32 @__traceiter_rpc__auth_tooweak(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !503
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__auth_tooweak, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc__auth_tooweak, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc__auth_tooweak.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc__auth_tooweak.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 515, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__prog_unavail(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__prog_mismatch(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__proc_unavail(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__garbage_args(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__unparsable(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_bad_verifier(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__mismatch(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__stale_creds(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__bad_creds(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc__auth_tooweak(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_call_status(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xprt_ping(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xprt_adjust_timeout(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_timeout_status(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_timeout_status, i32 0, i32 1), ptr blockaddress(@trace_rpc_timeout_status, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !504
  %call42 = tail call i32 @__traceiter_rpc_timeout_status(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !505
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_timeout_status, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_timeout_status, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_timeout_status.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_timeout_status.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 273, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_timeout_status(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %tk_status, i32 noundef %rpc_status) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_rpcerror, i32 0, i32 1), ptr blockaddress(@trace_rpc_call_rpcerror, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !506
  %call42 = tail call i32 @__traceiter_rpc_call_rpcerror(ptr noundef null, ptr noundef %task, i32 noundef %tk_status, i32 noundef %rpc_status) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !507
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_rpcerror, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_call_rpcerror, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_call_rpcerror.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_call_rpcerror.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 588, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_call_rpcerror(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_bind_status(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %4 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %tk_runstate.i, align 4
  %6 = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %7 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @call_transmit_status, ptr %tk_action.i, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %8 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %tk_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %cmp = icmp sgt i32 %9, -1
  br i1 %cmp, label %if.end.out_next_crit_edge, label %if.end2

if.end.out_next_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_next

if.end2:                                          ; preds = %if.end
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 18
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i, align 4
  %12 = and i32 %11, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not = icmp eq i32 %12, 0
  br i1 %tobool.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #20
  %13 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %tk_status, align 4
  br label %out_next

if.end6:                                          ; preds = %if.end2
  %14 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.96)
  switch i32 %9, label %sw.default [
    i32 -12, label %sw.bb
    i32 -13, label %sw.bb8
    i32 -105, label %sw.bb21
    i32 -11, label %if.end6.retry_timeout_crit_edge
    i32 -110, label %sw.bb23
    i32 -96, label %sw.bb24
    i32 -93, label %sw.bb25
    i32 -111, label %if.end6.sw.bb26_crit_edge
    i32 -104, label %if.end6.sw.bb26_crit_edge60
    i32 -103, label %if.end6.sw.bb26_crit_edge61
    i32 -107, label %if.end6.sw.bb26_crit_edge62
    i32 -112, label %if.end6.sw.bb26_crit_edge63
    i32 -100, label %if.end6.sw.bb26_crit_edge64
    i32 -113, label %if.end6.sw.bb26_crit_edge65
    i32 -101, label %if.end6.sw.bb26_crit_edge66
    i32 -32, label %if.end6.sw.bb26_crit_edge67
  ]

if.end6.sw.bb26_crit_edge67:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge66:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge65:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge64:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge63:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge62:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge61:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge60:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.sw.bb26_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb26

if.end6.retry_timeout_crit_edge:                  ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  br label %retry_timeout

sw.bb:                                            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 25) #18
  br label %retry_timeout

sw.bb8:                                           ; preds = %if.end6
  tail call fastcc void @trace_rpcb_prog_unavail_err(ptr noundef %task)
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10
  %15 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tk_msg, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp9 = icmp eq i32 %18, 0
  br i1 %cmp9, label %sw.bb8.sw.epilog_crit_edge, label %if.end11

sw.bb8.sw.epilog_crit_edge:                       ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end11:                                         ; preds = %sw.bb8
  %tk_rebind_retry = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %19 = ptrtoint ptr %tk_rebind_retry to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %tk_rebind_retry, align 2
  %bf.clear = and i8 %bf.load, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear)
  %cmp12 = icmp eq i8 %bf.clear, 0
  br i1 %cmp12, label %if.end11.sw.epilog_crit_edge, label %if.end15

if.end11.sw.epilog_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end15:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  %dec = add i8 %bf.load, 3
  %bf.value = and i8 %dec, 3
  %bf.clear20 = and i8 %bf.load, -4
  %bf.set = or i8 %bf.value, %bf.clear20
  %20 = ptrtoint ptr %tk_rebind_retry to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %bf.set, ptr %tk_rebind_retry, align 2
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 300) #18
  br label %retry_timeout

sw.bb21:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 25) #18
  br label %retry_timeout

sw.bb23:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpcb_timeout_err(ptr noundef %task)
  br label %retry_timeout

sw.bb24:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpcb_bind_version_err(ptr noundef %task)
  br label %sw.epilog

sw.bb25:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpcb_bind_version_err(ptr noundef %task)
  br label %retry_timeout

sw.bb26:                                          ; preds = %if.end6.sw.bb26_crit_edge, %if.end6.sw.bb26_crit_edge60, %if.end6.sw.bb26_crit_edge61, %if.end6.sw.bb26_crit_edge62, %if.end6.sw.bb26_crit_edge63, %if.end6.sw.bb26_crit_edge64, %if.end6.sw.bb26_crit_edge65, %if.end6.sw.bb26_crit_edge66, %if.end6.sw.bb26_crit_edge67
  tail call fastcc void @trace_rpcb_unreachable_err(ptr noundef %task)
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %21 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %tk_flags, align 4
  %23 = and i16 %22, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool28.not = icmp eq i16 %23, 0
  br i1 %tobool28.not, label %if.then29, label %if.end30

if.then29:                                        ; preds = %sw.bb26
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 500) #18
  br label %retry_timeout

if.end30:                                         ; preds = %sw.bb26
  call void @__sanitizer_cov_trace_pc() #20
  %24 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tk_status, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #20
  tail call fastcc void @trace_rpcb_unrecognized_err(ptr noundef %task)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end30, %sw.bb24, %if.end11.sw.epilog_crit_edge, %sw.bb8.sw.epilog_crit_edge
  %status.0 = phi i32 [ -5, %sw.default ], [ %25, %if.end30 ], [ -5, %sw.bb24 ], [ -5, %if.end11.sw.epilog_crit_edge ], [ -95, %sw.bb8.sw.epilog_crit_edge ]
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %status.0, i32 noundef %status.0) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %26 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %status.0, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %status.0) #18
  br label %cleanup

out_next:                                         ; preds = %if.then4, %if.end.out_next_crit_edge
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %27 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @call_connect, ptr %tk_action, align 4
  br label %cleanup

retry_timeout:                                    ; preds = %if.then29, %sw.bb25, %sw.bb23, %sw.bb21, %if.end15, %sw.bb, %if.end6.retry_timeout_crit_edge
  %28 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %tk_status, align 4
  %tk_action33 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %29 = ptrtoint ptr %tk_action33 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @call_bind, ptr %tk_action33, align 4
  tail call fastcc void @rpc_check_timeout(ptr noundef %task)
  br label %cleanup

cleanup:                                          ; preds = %retry_timeout, %out_next, %sw.epilog, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpcb_prog_unavail_err(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_prog_unavail_err, i32 0, i32 1), ptr blockaddress(@trace_rpcb_prog_unavail_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !508
  %call42 = tail call i32 @__traceiter_rpcb_prog_unavail_err(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !509
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_prog_unavail_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_prog_unavail_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpcb_prog_unavail_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpcb_prog_unavail_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 524, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpcb_timeout_err(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_timeout_err, i32 0, i32 1), ptr blockaddress(@trace_rpcb_timeout_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !510
  %call42 = tail call i32 @__traceiter_rpcb_timeout_err(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !511
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_timeout_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_timeout_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpcb_timeout_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpcb_timeout_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 525, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpcb_bind_version_err(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_bind_version_err, i32 0, i32 1), ptr blockaddress(@trace_rpcb_bind_version_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !512
  %call42 = tail call i32 @__traceiter_rpcb_bind_version_err(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !513
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_bind_version_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_bind_version_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpcb_bind_version_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpcb_bind_version_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 526, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpcb_unreachable_err(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unreachable_err, i32 0, i32 1), ptr blockaddress(@trace_rpcb_unreachable_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !514
  %call42 = tail call i32 @__traceiter_rpcb_unreachable_err(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !515
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unreachable_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unreachable_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpcb_unreachable_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpcb_unreachable_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 527, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpcb_unrecognized_err(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unrecognized_err, i32 0, i32 1), ptr blockaddress(@trace_rpcb_unrecognized_err, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !516
  %call42 = tail call i32 @__traceiter_rpcb_unrecognized_err(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !517
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unrecognized_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpcb_unrecognized_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpcb_unrecognized_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpcb_unrecognized_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 528, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpcb_prog_unavail_err(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpcb_timeout_err(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpcb_bind_version_err(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpcb_unreachable_err(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpcb_unrecognized_err(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_connect_status(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %4 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tk_client, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %6 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tk_status, align 4
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %8 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %tk_runstate.i, align 4
  %10 = and i32 %9, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i111 = icmp eq i32 %10, 0
  br i1 %tobool.not.i111, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %11 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @call_transmit_status, ptr %tk_action.i, align 4
  br label %cleanup71

if.end:                                           ; preds = %entry
  tail call fastcc void @trace_rpc_connect_status(ptr noundef %task)
  %12 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tk_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp = icmp eq i32 %13, 0
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %cl_stats = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 12
  %14 = ptrtoint ptr %cl_stats to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cl_stats, align 4
  %netreconn = getelementptr inbounds %struct.rpc_stat, ptr %15, i32 0, i32 5
  %16 = ptrtoint ptr %netreconn to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %netreconn, align 4
  %inc = add i32 %17, 1
  store i32 %inc, ptr %netreconn, align 4
  br label %out_next

if.end3:                                          ; preds = %if.end
  %state.i = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 18
  %18 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %state.i, align 4
  %20 = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not = icmp eq i32 %20, 0
  %21 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %tk_status, align 4
  br i1 %tobool.not, label %if.end7, label %if.end3.out_next_crit_edge

if.end3.out_next_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_next

if.end7:                                          ; preds = %if.end3
  %22 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.97)
  switch i32 %7, label %if.end7.sw.epilog_crit_edge [
    i32 -111, label %sw.bb
    i32 -104, label %if.end7.sw.bb15_crit_edge
    i32 -103, label %if.end7.sw.bb15_crit_edge112
    i32 -100, label %if.end7.sw.bb15_crit_edge113
    i32 -101, label %if.end7.sw.bb15_crit_edge114
    i32 -113, label %if.end7.sw.bb15_crit_edge115
    i32 -32, label %if.end7.sw.bb15_crit_edge116
    i32 -71, label %if.end7.sw.bb15_crit_edge117
    i32 -98, label %if.end7.sw.bb25_crit_edge
    i32 -107, label %if.end7.sw.bb25_crit_edge118
    i32 -11, label %if.end7.sw.bb25_crit_edge119
    i32 -110, label %if.end7.sw.bb25_crit_edge120
    i32 -105, label %sw.bb68
  ]

if.end7.sw.bb25_crit_edge120:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb25

if.end7.sw.bb25_crit_edge119:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb25

if.end7.sw.bb25_crit_edge118:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb25

if.end7.sw.bb25_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb25

if.end7.sw.bb15_crit_edge117:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.bb15_crit_edge116:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.bb15_crit_edge115:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.bb15_crit_edge114:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.bb15_crit_edge113:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.bb15_crit_edge112:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.bb15_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.end7.sw.epilog_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end7
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %23 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %tk_flags, align 4
  %25 = and i16 %24, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool9.not = icmp eq i16 %25, 0
  br i1 %tobool9.not, label %if.end11, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end11:                                         ; preds = %sw.bb
  %cl_autobind = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 14
  %26 = ptrtoint ptr %cl_autobind to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load = load i8, ptr %cl_autobind, align 4
  %27 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool12.not = icmp eq i8 %27, 0
  br i1 %tobool12.not, label %if.end11.sw.bb15_crit_edge, label %if.then13

if.end11.sw.bb15_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb15

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_force_rebind(ptr noundef %5)
  br label %out_retry

sw.bb15:                                          ; preds = %if.end11.sw.bb15_crit_edge, %if.end7.sw.bb15_crit_edge, %if.end7.sw.bb15_crit_edge112, %if.end7.sw.bb15_crit_edge113, %if.end7.sw.bb15_crit_edge114, %if.end7.sw.bb15_crit_edge115, %if.end7.sw.bb15_crit_edge116, %if.end7.sw.bb15_crit_edge117
  %28 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %tk_rqstp, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 8
  %rq_connect_cookie = getelementptr inbounds %struct.rpc_rqst, ptr %29, i32 0, i32 26
  %32 = ptrtoint ptr %rq_connect_cookie to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rq_connect_cookie, align 4
  tail call void @xprt_conditional_disconnect(ptr noundef %31, i32 noundef %33) #18
  %tk_flags19 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %34 = ptrtoint ptr %tk_flags19 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %tk_flags19, align 4
  %36 = and i16 %35, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool22.not = icmp eq i16 %36, 0
  br i1 %tobool22.not, label %if.end24, label %sw.bb15.sw.epilog_crit_edge

sw.bb15.sw.epilog_crit_edge:                      ; preds = %sw.bb15
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.epilog

if.end24:                                         ; preds = %sw.bb15
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 300) #18
  br label %sw.bb25

sw.bb25:                                          ; preds = %if.end24, %if.end7.sw.bb25_crit_edge, %if.end7.sw.bb25_crit_edge118, %if.end7.sw.bb25_crit_edge119, %if.end7.sw.bb25_crit_edge120
  %tk_flags26 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %37 = ptrtoint ptr %tk_flags26 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %tk_flags26, align 4
  %39 = and i16 %38, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %39)
  %.not = icmp eq i16 %39, 4
  br i1 %.not, label %land.lhs.true34, label %sw.bb25.out_retry_crit_edge

sw.bb25.out_retry_crit_edge:                      ; preds = %sw.bb25
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_retry

land.lhs.true34:                                  ; preds = %sw.bb25
  %40 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %state.i, align 4
  %42 = and i32 %41, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool36.not = icmp eq i32 %42, 0
  br i1 %tobool36.not, label %land.lhs.true34.out_retry_crit_edge, label %if.then37

land.lhs.true34.out_retry_crit_edge:              ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_retry

if.then37:                                        ; preds = %land.lhs.true34
  %tk_xprt = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %43 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tk_xprt, align 8
  %45 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i.i = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %48, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !421
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #18
  %call.i = tail call zeroext i1 @rcu_is_watching() #18
  br i1 %call.i, label %if.then37.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then37.rcu_read_lock.exit_crit_edge:           ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then37
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.36, i32 noundef 696, ptr noundef nonnull @.str.37) #18
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then37.rcu_read_lock.exit_crit_edge
  %49 = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 28
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %49, align 4
  %call39 = tail call i32 @rcu_read_lock_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %land.lhs.true41, label %rcu_read_lock.exit.do.end49_crit_edge

rcu_read_lock.exit.do.end49_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end49

land.lhs.true41:                                  ; preds = %rcu_read_lock.exit
  %call42 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %land.lhs.true41.do.end49_crit_edge, label %land.lhs.true44

land.lhs.true41.do.end49_crit_edge:               ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end49

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %.b110 = load i1, ptr @call_connect_status.__warned, align 1
  br i1 %.b110, label %land.lhs.true44.do.end49_crit_edge, label %if.then46

land.lhs.true44.do.end49_crit_edge:               ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end49

if.then46:                                        ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @call_connect_status.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2111, ptr noundef nonnull @.str.4) #18
  br label %do.end49

do.end49:                                         ; preds = %if.then46, %land.lhs.true44.do.end49_crit_edge, %land.lhs.true41.do.end49_crit_edge, %rcu_read_lock.exit.do.end49_crit_edge
  %call51 = tail call ptr @xprt_switch_get(ptr noundef %51) #18
  tail call fastcc void @rcu_read_unlock()
  %xps_nxprts = getelementptr inbounds %struct.rpc_xprt_switch, ptr %call51, i32 0, i32 3
  %52 = ptrtoint ptr %xps_nxprts to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %xps_nxprts, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %53)
  %cmp52 = icmp ugt i32 %53, 1
  br i1 %cmp52, label %if.then54, label %do.end49.if.end61_crit_edge

do.end49.if.end61_crit_edge:                      ; preds = %do.end49
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end61

if.then54:                                        ; preds = %do.end49
  tail call void @xprt_release(ptr noundef %task) #18
  %queuelen = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 32
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %queuelen, i32 noundef 4) #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !428
  tail call void @llvm.prefetch.p0(ptr %queuelen, i32 1, i32 3, i32 1) #18
  %54 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %queuelen, ptr %queuelen, i32 1, ptr elementtype(i32) %queuelen) #18, !srcloc !429
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %54, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #18, !srcloc !430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp56 = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp56, label %if.then58, label %if.then54.if.end59_crit_edge

if.then54.if.end59_crit_edge:                     ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end59

if.then58:                                        ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_xprt_switch_remove_xprt(ptr noundef %call51, ptr noundef %44) #18
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %if.then54.if.end59_crit_edge
  tail call void @xprt_put(ptr noundef %44) #18
  %55 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %tk_xprt, align 8
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %56 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr @call_start, ptr %tk_action, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.end59, %do.end49.if.end61_crit_edge
  tail call void @xprt_switch_put(ptr noundef %call51) #18
  %57 = ptrtoint ptr %tk_xprt to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %tk_xprt, align 8
  %tobool63.not = icmp eq ptr %58, null
  br i1 %tobool63.not, label %if.end61.cleanup71_crit_edge, label %if.end61.out_retry_crit_edge

if.end61.out_retry_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #20
  br label %out_retry

if.end61.cleanup71_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup71

sw.bb68:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 25) #18
  br label %out_retry

sw.epilog:                                        ; preds = %sw.bb15.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge, %if.end7.sw.epilog_crit_edge
  tail call fastcc void @trace_rpc_call_rpcerror(ptr noundef %task, i32 noundef %7, i32 noundef %7) #18
  %tk_rpc_status.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %59 = ptrtoint ptr %tk_rpc_status.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %7, ptr %tk_rpc_status.i.i, align 8
  tail call void @rpc_exit(ptr noundef %task, i32 noundef %7) #18
  br label %cleanup71

out_next:                                         ; preds = %if.end3.out_next_crit_edge, %if.then2
  %tk_action69 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %60 = ptrtoint ptr %tk_action69 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr @call_transmit, ptr %tk_action69, align 4
  br label %cleanup71

out_retry:                                        ; preds = %sw.bb68, %if.end61.out_retry_crit_edge, %land.lhs.true34.out_retry_crit_edge, %sw.bb25.out_retry_crit_edge, %if.then13
  %tk_action70 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %61 = ptrtoint ptr %tk_action70 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @call_bind, ptr %tk_action70, align 4
  tail call fastcc void @rpc_check_timeout(ptr noundef %task)
  br label %cleanup71

cleanup71:                                        ; preds = %out_retry, %out_next, %sw.epilog, %if.end61.cleanup71_crit_edge, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_connect(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_connect_status(ptr noundef %task) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_connect_status, i32 0, i32 1), ptr blockaddress(@trace_rpc_connect_status, %do.body)) #18
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !419

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #20
  %9 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !518
  %call42 = tail call i32 @__traceiter_rpc_connect_status(ptr noundef null, ptr noundef %task) #18
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !519
  %13 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !419

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #18
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !434
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_connect_status, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rpc_connect_status, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_connect_status.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #20
  store i1 true, ptr @trace_rpc_connect_status.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.28, i32 noundef 272, ptr noundef nonnull @.str.4) #18
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #18, !srcloc !435
  %31 = tail call i32 @llvm.read_register.i32(metadata !409) #18
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_xprt_switch_remove_xprt(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_connect_status(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_buf_alloc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_retry_refresh_status(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rpc_refresh_status(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_retry_reserve(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_bc_transmit(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %0 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @call_bc_transmit_status, ptr %tk_action, align 4
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %1 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %tk_runstate, align 4
  %3 = and i32 %2, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end3

if.then:                                          ; preds = %entry
  %call1 = tail call zeroext i1 @xprt_prepare_transmit(ptr noundef %task) #18
  br i1 %call1, label %if.end, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  br label %return

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #20
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %4 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %tk_status, align 4
  tail call void @xprt_transmit(ptr noundef %task) #18
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry.if.end3_crit_edge
  tail call void @xprt_end_transmit(ptr noundef %task) #18
  br label %return

return:                                           ; preds = %if.end3, %if.then.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_bc_transmit_status(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %2 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %tk_runstate.i, align 4
  %4 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %5 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %tk_status, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tk_status1 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %6 = ptrtoint ptr %tk_status1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tk_status1, align 4
  %8 = zext i32 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.98)
  switch i32 %7, label %do.end10 [
    i32 0, label %if.end.cleanup_crit_edge
    i32 -100, label %if.end.cleanup_crit_edge25
    i32 -112, label %if.end.cleanup_crit_edge26
    i32 -113, label %if.end.cleanup_crit_edge27
    i32 -101, label %if.end.cleanup_crit_edge28
    i32 -104, label %if.end.cleanup_crit_edge29
    i32 -111, label %if.end.cleanup_crit_edge30
    i32 -98, label %if.end.cleanup_crit_edge31
    i32 -107, label %if.end.cleanup_crit_edge32
    i32 -32, label %if.end.cleanup_crit_edge33
    i32 -105, label %sw.bb2
    i32 -57, label %if.end.sw.bb3_crit_edge
    i32 -11, label %if.end.sw.bb3_crit_edge34
    i32 -110, label %do.end
  ]

if.end.sw.bb3_crit_edge34:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb3

if.end.sw.bb3_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %sw.bb3

if.end.cleanup_crit_edge33:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge32:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge31:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge30:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge29:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge28:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge27:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge26:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge25:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  br label %cleanup

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  tail call void @rpc_delay(ptr noundef %task, i32 noundef 25) #18
  br label %sw.bb3

sw.bb3:                                           ; preds = %sw.bb2, %if.end.sw.bb3_crit_edge, %if.end.sw.bb3_crit_edge34
  %9 = ptrtoint ptr %tk_status1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %tk_status1, align 4
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70, i32 noundef -110) #21
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %rq_connect_cookie = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 26
  %12 = ptrtoint ptr %rq_connect_cookie to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rq_connect_cookie, align 4
  tail call void @xprt_conditional_disconnect(ptr noundef %11, i32 noundef %13) #18
  br label %cleanup

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #20
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70, i32 noundef %7) #21
  br label %cleanup

cleanup:                                          ; preds = %do.end10, %do.end, %sw.bb3, %if.end.cleanup_crit_edge, %if.end.cleanup_crit_edge25, %if.end.cleanup_crit_edge26, %if.end.cleanup_crit_edge27, %if.end.cleanup_crit_edge28, %if.end.cleanup_crit_edge29, %if.end.cleanup_crit_edge30, %if.end.cleanup_crit_edge31, %if.end.cleanup_crit_edge32, %if.end.cleanup_crit_edge33
  %rpc_exit_task.sink = phi ptr [ @call_bc_transmit, %sw.bb3 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge ], [ @rpc_exit_task, %if.end.cleanup_crit_edge25 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge26 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge27 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge28 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge29 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge30 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge31 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge32 ], [ @rpc_exit_task, %if.end.cleanup_crit_edge33 ], [ @rpc_exit_task, %do.end10 ], [ @rpc_exit_task, %do.end ]
  %tk_action14 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %14 = ptrtoint ptr %tk_action14 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %rpc_exit_task.sink, ptr %tk_action14, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rpcproc_encode_null(ptr nocapture noundef %rqstp, ptr nocapture noundef %xdr, ptr nocapture noundef %obj) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @rpcproc_decode_null(ptr nocapture noundef readnone %rqstp, ptr nocapture noundef readnone %xdr, ptr nocapture noundef readnone %obj) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rpc_null_call_prepare(ptr nocapture noundef %task, ptr nocapture noundef readnone %data) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %0 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %tk_flags, align 4
  %2 = and i16 %1, -16385
  store i16 %2, ptr %tk_flags, align 4
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %3 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @call_start, ptr %tk_action.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rpc_cb_add_xprt_done(ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %calldata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #20
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tk_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #20
  %2 = ptrtoint ptr %calldata to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %calldata, align 4
  %xprt = getelementptr inbounds %struct.rpc_cb_add_xprt_calldata, ptr %calldata, i32 0, i32 1
  %4 = ptrtoint ptr %xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %xprt, align 4
  tail call void @rpc_xprt_switch_add_xprt(ptr noundef %3, ptr noundef %5) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpc_task_timeout(ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #17

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #18

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #19 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 98)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #19 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 98)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nounwind readonly }
attributes #10 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind readonly willreturn }
attributes #17 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { nounwind }
attributes #19 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #20 = { nomerge }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(2) }
attributes #23 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27, !29, !30, !32, !34, !36, !38, !40, !42, !43, !44, !45, !47, !49, !50, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !83, !85, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !106, !107, !108, !110, !112, !113, !114, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !144, !145, !146, !148, !150, !151, !152, !153, !155, !157, !158, !159, !161, !162, !164, !166, !167, !169, !171, !172, !173, !175, !176, !178, !179, !181, !183, !185, !186, !188, !189, !191, !192, !193, !194, !196, !197, !199, !200, !202, !204, !205, !207, !208, !210, !211, !213, !214, !216, !217, !219, !220, !222, !223, !224, !226, !227, !229, !231, !233, !235, !236, !238, !239, !240, !241, !243, !244, !245, !247, !248, !249, !251, !252, !253, !255, !256, !257, !259, !261, !263, !264, !265, !266, !268, !269, !270, !272, !273, !275, !276, !278, !279, !280, !281, !283, !284, !285, !286, !287, !288, !290, !291, !293, !294, !295, !296, !298, !299, !301, !302, !304, !305, !307, !308, !310, !311, !313, !314, !316, !317, !319, !320, !322, !323, !325, !326, !328, !329, !331, !332, !334, !335, !336, !337, !338, !340, !341, !342, !343, !345, !346, !348, !349, !351, !352, !354, !355, !357, !358, !360, !361, !363, !364, !366, !368, !369, !371, !372, !374, !375, !377, !378, !380, !381, !382, !383, !385, !386, !388, !390, !392, !394, !395, !397, !398, !399, !400, !402, !404, !405, !406, !407}
!llvm.named.register.sp = !{!409}
!llvm.module.flags = !{!410, !411, !412, !413, !414, !415, !416, !417}
!llvm.ident = !{!418}

!0 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!1 = !{!"../net/sunrpc/clnt.c", i32 534, i32 3}
!2 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.1, !4, !"<string literal>", i1 false, i1 false}
!4 = !{!"../net/sunrpc/clnt.c", i32 561, i32 45}
!5 = !{ptr @.str.2, !6, !"<string literal>", i1 false, i1 false}
!6 = !{!"../net/sunrpc/clnt.c", i32 565, i32 45}
!7 = !{ptr @.str.3, !8, !"<string literal>", i1 false, i1 false}
!8 = !{!"../net/sunrpc/clnt.c", i32 569, i32 45}
!9 = !{ptr @__ksymtab_rpc_create, !10, !"__ksymtab_rpc_create", i1 false, i1 false}
!10 = !{!"../net/sunrpc/clnt.c", i32 607, i32 1}
!11 = !{ptr @__ksymtab_rpc_clone_client, !12, !"__ksymtab_rpc_clone_client", i1 false, i1 false}
!12 = !{!"../net/sunrpc/clnt.c", i32 672, i32 1}
!13 = !{ptr @__ksymtab_rpc_clone_client_set_auth, !14, !"__ksymtab_rpc_clone_client_set_auth", i1 false, i1 false}
!14 = !{!"../net/sunrpc/clnt.c", i32 694, i32 1}
!15 = !{ptr @__ksymtab_rpc_switch_client_transport, !16, !"__ksymtab_rpc_switch_client_transport", i1 false, i1 false}
!16 = !{!"../net/sunrpc/clnt.c", i32 778, i32 1}
!17 = !{ptr @__ksymtab_rpc_clnt_iterate_for_each_xprt, !18, !"__ksymtab_rpc_clnt_iterate_for_each_xprt", i1 false, i1 false}
!18 = !{!"../net/sunrpc/clnt.c", i32 829, i32 1}
!19 = !{ptr @__ksymtab_rpc_killall_tasks, !20, !"__ksymtab_rpc_killall_tasks", i1 false, i1 false}
!20 = !{!"../net/sunrpc/clnt.c", i32 852, i32 1}
!21 = !{ptr @__ksymtab_rpc_shutdown_client, !22, !"__ksymtab_rpc_shutdown_client", i1 false, i1 false}
!22 = !{!"../net/sunrpc/clnt.c", i32 872, i32 1}
!23 = !{ptr @__ksymtab_rpc_release_client, !24, !"__ksymtab_rpc_release_client", i1 false, i1 false}
!24 = !{!"../net/sunrpc/clnt.c", i32 949, i32 1}
!25 = !{ptr @__ksymtab_rpc_bind_new_program, !26, !"__ksymtab_rpc_bind_new_program", i1 false, i1 false}
!26 = !{!"../net/sunrpc/clnt.c", i32 986, i32 1}
!27 = distinct !{null, !28, !"__warned", i1 false, i1 false}
!28 = !{!"../net/sunrpc/clnt.c", i32 996, i32 8}
!29 = !{ptr @.str.4, !28, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @__ksymtab_rpc_task_release_transport, !31, !"__ksymtab_rpc_task_release_transport", i1 false, i1 false}
!31 = !{!"../net/sunrpc/clnt.c", i32 1030, i32 1}
!32 = !{ptr @__ksymtab_rpc_run_task, !33, !"__ksymtab_rpc_run_task", i1 false, i1 false}
!33 = !{!"../net/sunrpc/clnt.c", i32 1144, i32 1}
!34 = distinct !{null, !35, !"__already_done", i1 false, i1 false}
!35 = !{!"../net/sunrpc/clnt.c", i32 1163, i32 2}
!36 = !{ptr @__ksymtab_rpc_call_sync, !37, !"__ksymtab_rpc_call_sync", i1 false, i1 false}
!37 = !{!"../net/sunrpc/clnt.c", i32 1177, i32 1}
!38 = !{ptr @__ksymtab_rpc_call_async, !39, !"__ksymtab_rpc_call_async", i1 false, i1 false}
!39 = !{!"../net/sunrpc/clnt.c", i32 1206, i32 1}
!40 = !{ptr @.str.5, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../net/sunrpc/clnt.c", i32 1225, i32 2}
!42 = !{ptr @.str.6, !41, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @rpc_run_bc_task._entry, !41, !"_entry", i1 false, i1 false}
!44 = !{ptr @rpc_run_bc_task._entry_ptr, !41, !"_entry_ptr", i1 false, i1 false}
!45 = distinct !{null, !46, !"__already_done", i1 false, i1 false}
!46 = !{!"../net/sunrpc/clnt.c", i32 1234, i32 2}
!47 = !{ptr @.str.8, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../net/sunrpc/clnt.c", i32 1237, i32 2}
!49 = !{ptr @rpc_run_bc_task._entry.7, !48, !"_entry", i1 false, i1 false}
!50 = !{ptr @rpc_run_bc_task._entry_ptr.9, !48, !"_entry_ptr", i1 false, i1 false}
!51 = !{ptr @__ksymtab_rpc_prepare_reply_pages, !52, !"__ksymtab_rpc_prepare_reply_pages", i1 false, i1 false}
!52 = !{!"../net/sunrpc/clnt.c", i32 1260, i32 1}
!53 = !{ptr @__ksymtab_rpc_call_start, !54, !"__ksymtab_rpc_call_start", i1 false, i1 false}
!54 = !{!"../net/sunrpc/clnt.c", i32 1267, i32 1}
!55 = distinct !{null, !56, !"__warned", i1 false, i1 false}
!56 = !{!"../net/sunrpc/clnt.c", i32 1283, i32 9}
!57 = !{ptr @__ksymtab_rpc_peeraddr, !58, !"__ksymtab_rpc_peeraddr", i1 false, i1 false}
!58 = !{!"../net/sunrpc/clnt.c", i32 1293, i32 1}
!59 = distinct !{null, !60, !"__warned", i1 false, i1 false}
!60 = !{!"../net/sunrpc/clnt.c", i32 1309, i32 9}
!61 = !{ptr @.str.10, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../net/sunrpc/clnt.c", i32 1314, i32 10}
!63 = !{ptr @__ksymtab_rpc_peeraddr2str, !64, !"__ksymtab_rpc_peeraddr2str", i1 false, i1 false}
!64 = !{!"../net/sunrpc/clnt.c", i32 1316, i32 1}
!65 = distinct !{null, !66, !"__warned", i1 false, i1 false}
!66 = !{!"../net/sunrpc/clnt.c", i32 1452, i32 9}
!67 = !{ptr @__ksymtab_rpc_localaddr, !68, !"__ksymtab_rpc_localaddr", i1 false, i1 false}
!68 = !{!"../net/sunrpc/clnt.c", i32 1466, i32 1}
!69 = distinct !{null, !70, !"__warned", i1 false, i1 false}
!70 = !{!"../net/sunrpc/clnt.c", i32 1474, i32 9}
!71 = !{ptr @__ksymtab_rpc_setbufsize, !72, !"__ksymtab_rpc_setbufsize", i1 false, i1 false}
!72 = !{!"../net/sunrpc/clnt.c", i32 1479, i32 1}
!73 = distinct !{null, !74, !"__warned", i1 false, i1 false}
!74 = !{!"../net/sunrpc/clnt.c", i32 1491, i32 8}
!75 = !{ptr @__ksymtab_rpc_net_ns, !76, !"__ksymtab_rpc_net_ns", i1 false, i1 false}
!76 = !{!"../net/sunrpc/clnt.c", i32 1495, i32 1}
!77 = distinct !{null, !78, !"__warned", i1 false, i1 false}
!78 = !{!"../net/sunrpc/clnt.c", i32 1511, i32 8}
!79 = !{ptr @__ksymtab_rpc_max_payload, !80, !"__ksymtab_rpc_max_payload", i1 false, i1 false}
!80 = !{!"../net/sunrpc/clnt.c", i32 1515, i32 1}
!81 = distinct !{null, !82, !"__warned", i1 false, i1 false}
!82 = !{!"../net/sunrpc/clnt.c", i32 1527, i32 9}
!83 = !{ptr @__ksymtab_rpc_max_bc_payload, !84, !"__ksymtab_rpc_max_bc_payload", i1 false, i1 false}
!84 = !{!"../net/sunrpc/clnt.c", i32 1532, i32 1}
!85 = distinct !{null, !86, !"__warned", i1 false, i1 false}
!86 = !{!"../net/sunrpc/clnt.c", i32 1540, i32 9}
!87 = !{ptr @__ksymtab_rpc_num_bc_slots, !88, !"__ksymtab_rpc_num_bc_slots", i1 false, i1 false}
!88 = !{!"../net/sunrpc/clnt.c", i32 1545, i32 1}
!89 = distinct !{null, !90, !"__warned", i1 false, i1 false}
!90 = !{!"../net/sunrpc/clnt.c", i32 1556, i32 20}
!91 = !{ptr @__ksymtab_rpc_force_rebind, !92, !"__ksymtab_rpc_force_rebind", i1 false, i1 false}
!92 = !{!"../net/sunrpc/clnt.c", i32 1560, i32 1}
!93 = !{ptr @__ksymtab_rpc_restart_call, !94, !"__ksymtab_rpc_restart_call", i1 false, i1 false}
!94 = !{!"../net/sunrpc/clnt.c", i32 1580, i32 1}
!95 = !{ptr @__ksymtab_rpc_restart_call_prepare, !96, !"__ksymtab_rpc_restart_call_prepare", i1 false, i1 false}
!96 = !{!"../net/sunrpc/clnt.c", i32 1593, i32 1}
!97 = !{ptr @.str.11, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../net/sunrpc/clnt.c", i32 1604, i32 11}
!99 = !{ptr @.str.12, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../net/sunrpc/clnt.c", i32 1606, i32 10}
!101 = !{ptr @__ksymtab_rpc_call_null, !102, !"__ksymtab_rpc_call_null", i1 false, i1 false}
!102 = !{!"../net/sunrpc/clnt.c", i32 2730, i32 1}
!103 = !{ptr @.str.13, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../net/sunrpc/clnt.c", i32 2789, i32 3}
!105 = !{ptr @.str.14, !104, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @rpc_clnt_test_and_add_xprt._entry, !104, !"_entry", i1 false, i1 false}
!107 = !{ptr @rpc_clnt_test_and_add_xprt._entry_ptr, !104, !"_entry_ptr", i1 false, i1 false}
!108 = !{ptr @__ksymtab_rpc_clnt_test_and_add_xprt, !109, !"__ksymtab_rpc_clnt_test_and_add_xprt", i1 false, i1 false}
!109 = !{!"../net/sunrpc/clnt.c", i32 2813, i32 1}
!110 = !{ptr @.str.15, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../net/sunrpc/clnt.c", i32 2871, i32 2}
!112 = !{ptr @.str.16, !111, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @rpc_clnt_setup_test_and_add_xprt._entry, !111, !"_entry", i1 false, i1 false}
!114 = !{ptr @rpc_clnt_setup_test_and_add_xprt._entry_ptr, !111, !"_entry_ptr", i1 false, i1 false}
!115 = !{ptr @__ksymtab_rpc_clnt_setup_test_and_add_xprt, !116, !"__ksymtab_rpc_clnt_setup_test_and_add_xprt", i1 false, i1 false}
!116 = !{!"../net/sunrpc/clnt.c", i32 2875, i32 1}
!117 = distinct !{null, !118, !"__warned", i1 false, i1 false}
!118 = !{!"../net/sunrpc/clnt.c", i32 2906, i32 24}
!119 = !{ptr @__ksymtab_rpc_clnt_add_xprt, !120, !"__ksymtab_rpc_clnt_add_xprt", i1 false, i1 false}
!120 = !{!"../net/sunrpc/clnt.c", i32 2947, i32 1}
!121 = !{ptr @__ksymtab_rpc_set_connect_timeout, !122, !"__ksymtab_rpc_set_connect_timeout", i1 false, i1 false}
!122 = !{!"../net/sunrpc/clnt.c", i32 2981, i32 1}
!123 = distinct !{null, !124, !"__warned", i1 false, i1 false}
!124 = !{!"../net/sunrpc/clnt.c", i32 2986, i32 18}
!125 = !{ptr @__ksymtab_rpc_clnt_xprt_switch_put, !126, !"__ksymtab_rpc_clnt_xprt_switch_put", i1 false, i1 false}
!126 = !{!"../net/sunrpc/clnt.c", i32 2989, i32 1}
!127 = distinct !{null, !128, !"__warned", i1 false, i1 false}
!128 = !{!"../net/sunrpc/clnt.c", i32 2994, i32 27}
!129 = !{ptr @__ksymtab_rpc_clnt_xprt_switch_add_xprt, !130, !"__ksymtab_rpc_clnt_xprt_switch_add_xprt", i1 false, i1 false}
!130 = !{!"../net/sunrpc/clnt.c", i32 2998, i32 1}
!131 = distinct !{null, !132, !"__warned", i1 false, i1 false}
!132 = !{!"../net/sunrpc/clnt.c", i32 3007, i32 8}
!133 = !{ptr @__ksymtab_rpc_clnt_xprt_switch_has_addr, !134, !"__ksymtab_rpc_clnt_xprt_switch_has_addr", i1 false, i1 false}
!134 = !{!"../net/sunrpc/clnt.c", i32 3012, i32 1}
!135 = !{ptr @__ksymtab_rpc_clnt_swap_activate, !136, !"__ksymtab_rpc_clnt_swap_activate", i1 false, i1 false}
!136 = !{!"../net/sunrpc/clnt.c", i32 3076, i32 1}
!137 = !{ptr @__ksymtab_rpc_clnt_swap_deactivate, !138, !"__ksymtab_rpc_clnt_swap_deactivate", i1 false, i1 false}
!138 = !{!"../net/sunrpc/clnt.c", i32 3094, i32 1}
!139 = !{ptr @rpc_clients_block, !140, !"rpc_clients_block", i1 false, i1 false}
!140 = !{!"../net/sunrpc/clnt.c", i32 249, i32 30}
!141 = !{ptr @.str.17, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../net/sunrpc/clnt.c", i32 198, i32 3}
!143 = !{ptr @.str.18, !142, !"<string literal>", i1 false, i1 false}
!144 = !{ptr @__rpc_clnt_handle_event._entry, !142, !"_entry", i1 false, i1 false}
!145 = !{ptr @__rpc_clnt_handle_event._entry_ptr, !142, !"_entry_ptr", i1 false, i1 false}
!146 = !{ptr @rpc_setup_pipedir_sb.clntid, !147, !"clntid", i1 false, i1 false}
!147 = !{!"../net/sunrpc/clnt.c", i32 121, i32 18}
!148 = !{ptr @.str.19, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../net/sunrpc/clnt.c", i32 128, i32 3}
!150 = !{ptr @.str.20, !149, !"<string literal>", i1 false, i1 false}
!151 = !{ptr @rpc_setup_pipedir_sb._entry, !149, !"_entry", i1 false, i1 false}
!152 = !{ptr @rpc_setup_pipedir_sb._entry_ptr, !149, !"_entry_ptr", i1 false, i1 false}
!153 = !{ptr @.str.21, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../net/sunrpc/clnt.c", i32 132, i32 32}
!155 = !{ptr @.str.23, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../net/sunrpc/clnt.c", i32 139, i32 3}
!157 = !{ptr @rpc_setup_pipedir_sb._entry.22, !156, !"_entry", i1 false, i1 false}
!158 = !{ptr @rpc_setup_pipedir_sb._entry_ptr.24, !156, !"_entry_ptr", i1 false, i1 false}
!159 = !{ptr @.str.25, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../net/sunrpc/clnt.c", i32 336, i32 8}
!161 = !{ptr @rpc_clids, !160, !"rpc_clids", i1 false, i1 false}
!162 = distinct !{null, !163, !"__already_done", i1 false, i1 false}
!163 = !{!"../net/sunrpc/clnt.c", i32 462, i32 3}
!164 = !{ptr @rpc_new_client.__key, !165, !"__key", i1 false, i1 false}
!165 = !{!"../net/sunrpc/clnt.c", i32 405, i32 2}
!166 = !{ptr @.str.26, !165, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @.str.27, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../include/linux/cred.h", i32 253, i32 2}
!169 = distinct !{null, !170, !"__already_done", i1 false, i1 false}
!170 = !{!"../include/trace/events/sunrpc.h", i32 142, i32 1}
!171 = !{ptr @.str.28, !170, !"<string literal>", i1 false, i1 false}
!172 = distinct !{null, !170, !"__warned", i1 false, i1 false}
!173 = distinct !{null, !174, !"__already_done", i1 false, i1 false}
!174 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!175 = !{ptr @.str.29, !174, !"<string literal>", i1 false, i1 false}
!176 = distinct !{null, !177, !"__already_done", i1 false, i1 false}
!177 = !{!"../include/trace/events/sunrpc.h", i32 174, i32 1}
!178 = distinct !{null, !177, !"__warned", i1 false, i1 false}
!179 = distinct !{null, !180, !"__warned", i1 false, i1 false}
!180 = !{!"../net/sunrpc/clnt.c", i32 624, i32 18}
!181 = distinct !{null, !182, !"__warned", i1 false, i1 false}
!182 = !{!"../net/sunrpc/clnt.c", i32 625, i32 24}
!183 = distinct !{null, !184, !"__already_done", i1 false, i1 false}
!184 = !{!"../include/trace/events/sunrpc.h", i32 199, i32 1}
!185 = distinct !{null, !184, !"__warned", i1 false, i1 false}
!186 = distinct !{null, !187, !"__warned", i1 false, i1 false}
!187 = !{!"../net/sunrpc/clnt.c", i32 271, i32 8}
!188 = !{ptr @.str.31, !187, !"<string literal>", i1 false, i1 false}
!189 = !{ptr @.str.32, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../net/sunrpc/clnt.c", i32 318, i32 3}
!191 = !{ptr @.str.33, !190, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @rpc_client_register._entry, !190, !"_entry", i1 false, i1 false}
!193 = !{ptr @rpc_client_register._entry_ptr, !190, !"_entry_ptr", i1 false, i1 false}
!194 = distinct !{null, !195, !"__already_done", i1 false, i1 false}
!195 = !{!"../include/trace/events/sunrpc.h", i32 139, i32 1}
!196 = distinct !{null, !195, !"__warned", i1 false, i1 false}
!197 = distinct !{null, !198, !"__already_done", i1 false, i1 false}
!198 = !{!"../include/trace/events/sunrpc.h", i32 140, i32 1}
!199 = distinct !{null, !198, !"__warned", i1 false, i1 false}
!200 = distinct !{null, !201, !"__warned", i1 false, i1 false}
!201 = !{!"../net/sunrpc/clnt.c", i32 786, i32 24}
!202 = distinct !{null, !203, !"__already_done", i1 false, i1 false}
!203 = !{!"../include/trace/events/sunrpc.h", i32 136, i32 1}
!204 = distinct !{null, !203, !"__warned", i1 false, i1 false}
!205 = distinct !{null, !206, !"__already_done", i1 false, i1 false}
!206 = !{!"../include/trace/events/sunrpc.h", i32 137, i32 1}
!207 = distinct !{null, !206, !"__warned", i1 false, i1 false}
!208 = !{ptr @.str.34, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../net/sunrpc/clnt.c", i32 55, i32 8}
!210 = !{ptr @destroy_wait, !209, !"destroy_wait", i1 false, i1 false}
!211 = !{ptr @rpc_free_client.__key, !212, !"__key", i1 false, i1 false}
!212 = !{!"../net/sunrpc/clnt.c", i32 910, i32 2}
!213 = !{ptr @.str.35, !212, !"<string literal>", i1 false, i1 false}
!214 = distinct !{null, !215, !"__already_done", i1 false, i1 false}
!215 = !{!"../include/trace/events/sunrpc.h", i32 138, i32 1}
!216 = distinct !{null, !215, !"__warned", i1 false, i1 false}
!217 = distinct !{null, !218, !"__already_done", i1 false, i1 false}
!218 = !{!"../include/trace/events/sunrpc.h", i32 135, i32 1}
!219 = distinct !{null, !218, !"__warned", i1 false, i1 false}
!220 = distinct !{null, !221, !"__warned", i1 false, i1 false}
!221 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!222 = !{ptr @.str.36, !221, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @.str.37, !221, !"<string literal>", i1 false, i1 false}
!224 = distinct !{null, !225, !"__warned", i1 false, i1 false}
!225 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!226 = !{ptr @.str.38, !225, !"<string literal>", i1 false, i1 false}
!227 = distinct !{null, !228, !"__warned", i1 false, i1 false}
!228 = !{!"../net/sunrpc/clnt.c", i32 1011, i32 8}
!229 = distinct !{null, !230, !"__warned", i1 false, i1 false}
!230 = !{!"../net/sunrpc/clnt.c", i32 1054, i32 18}
!231 = !{ptr @rpc_default_ops, !232, !"rpc_default_ops", i1 false, i1 false}
!232 = !{!"../net/sunrpc/clnt.c", i32 1117, i32 34}
!233 = distinct !{null, !234, !"__already_done", i1 false, i1 false}
!234 = !{!"../include/trace/events/sunrpc.h", i32 106, i32 1}
!235 = distinct !{null, !234, !"__warned", i1 false, i1 false}
!236 = !{ptr @.str.39, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../net/sunrpc/clnt.c", i32 1345, i32 3}
!238 = !{ptr @.str.40, !237, !"<string literal>", i1 false, i1 false}
!239 = !{ptr @rpc_sockname._entry, !237, !"_entry", i1 false, i1 false}
!240 = !{ptr @rpc_sockname._entry_ptr, !237, !"_entry_ptr", i1 false, i1 false}
!241 = !{ptr @.str.42, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../net/sunrpc/clnt.c", i32 1365, i32 3}
!243 = !{ptr @rpc_sockname._entry.41, !242, !"_entry", i1 false, i1 false}
!244 = !{ptr @rpc_sockname._entry_ptr.43, !242, !"_entry_ptr", i1 false, i1 false}
!245 = !{ptr @.str.45, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../net/sunrpc/clnt.c", i32 1371, i32 3}
!247 = !{ptr @rpc_sockname._entry.44, !246, !"_entry", i1 false, i1 false}
!248 = !{ptr @rpc_sockname._entry_ptr.46, !246, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.48, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../net/sunrpc/clnt.c", i32 1377, i32 3}
!251 = !{ptr @rpc_sockname._entry.47, !250, !"_entry", i1 false, i1 false}
!252 = !{ptr @rpc_sockname._entry_ptr.49, !250, !"_entry_ptr", i1 false, i1 false}
!253 = !{ptr @.str.51, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../net/sunrpc/clnt.c", i32 1386, i32 2}
!255 = !{ptr @rpc_sockname._entry.50, !254, !"_entry", i1 false, i1 false}
!256 = !{ptr @rpc_sockname._entry_ptr.52, !254, !"_entry_ptr", i1 false, i1 false}
!257 = !{ptr @rpc_inaddr_loopback, !258, !"rpc_inaddr_loopback", i1 false, i1 false}
!258 = !{!"../net/sunrpc/clnt.c", i32 1318, i32 33}
!259 = !{ptr @rpc_in6addr_loopback, !260, !"rpc_in6addr_loopback", i1 false, i1 false}
!260 = !{!"../net/sunrpc/clnt.c", i32 1323, i32 34}
!261 = !{ptr @.str.54, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../net/sunrpc/clnt.c", i32 1418, i32 3}
!263 = !{ptr @.str.55, !262, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @rpc_anyaddr._entry, !262, !"_entry", i1 false, i1 false}
!265 = !{ptr @rpc_anyaddr._entry_ptr, !262, !"_entry_ptr", i1 false, i1 false}
!266 = !{ptr @.str.57, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../net/sunrpc/clnt.c", i32 1422, i32 2}
!268 = !{ptr @rpc_anyaddr._entry.56, !267, !"_entry", i1 false, i1 false}
!269 = !{ptr @rpc_anyaddr._entry_ptr.58, !267, !"_entry_ptr", i1 false, i1 false}
!270 = distinct !{null, !271, !"__already_done", i1 false, i1 false}
!271 = !{!"../include/trace/events/sunrpc.h", i32 277, i32 1}
!272 = distinct !{null, !271, !"__warned", i1 false, i1 false}
!273 = distinct !{null, !274, !"__already_done", i1 false, i1 false}
!274 = !{!"../include/trace/events/sunrpc.h", i32 462, i32 1}
!275 = distinct !{null, !274, !"__warned", i1 false, i1 false}
!276 = !{ptr @.str.59, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../net/sunrpc/clnt.c", i32 2370, i32 4}
!278 = !{ptr @.str.60, !277, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @call_status._entry, !277, !"_entry", i1 false, i1 false}
!280 = !{ptr @call_status._entry_ptr, !277, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.61, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../net/sunrpc/clnt.c", i32 2470, i32 4}
!283 = !{ptr @call_decode._rs, !282, !"_rs", i1 false, i1 false}
!284 = !{ptr @__func__.call_decode, !282, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @.str.62, !282, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @call_decode._entry, !282, !"_entry", i1 false, i1 false}
!287 = !{ptr @call_decode._entry_ptr, !282, !"_entry_ptr", i1 false, i1 false}
!288 = distinct !{null, !289, !"__already_done", i1 false, i1 false}
!289 = !{!"../include/trace/events/sunrpc.h", i32 105, i32 1}
!290 = distinct !{null, !289, !"__warned", i1 false, i1 false}
!291 = !{ptr @.str.63, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../net/sunrpc/clnt.c", i32 2667, i32 3}
!293 = !{ptr @.str.64, !292, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @rpc_decode_header._entry, !292, !"_entry", i1 false, i1 false}
!295 = !{ptr @rpc_decode_header._entry_ptr, !292, !"_entry_ptr", i1 false, i1 false}
!296 = distinct !{null, !297, !"__already_done", i1 false, i1 false}
!297 = !{!"../include/trace/events/sunrpc.h", i32 507, i32 1}
!298 = distinct !{null, !297, !"__warned", i1 false, i1 false}
!299 = distinct !{null, !300, !"__already_done", i1 false, i1 false}
!300 = !{!"../include/trace/events/sunrpc.h", i32 508, i32 1}
!301 = distinct !{null, !300, !"__warned", i1 false, i1 false}
!302 = distinct !{null, !303, !"__already_done", i1 false, i1 false}
!303 = !{!"../include/trace/events/sunrpc.h", i32 509, i32 1}
!304 = distinct !{null, !303, !"__warned", i1 false, i1 false}
!305 = distinct !{null, !306, !"__already_done", i1 false, i1 false}
!306 = !{!"../include/trace/events/sunrpc.h", i32 510, i32 1}
!307 = distinct !{null, !306, !"__warned", i1 false, i1 false}
!308 = distinct !{null, !309, !"__already_done", i1 false, i1 false}
!309 = !{!"../include/trace/events/sunrpc.h", i32 511, i32 1}
!310 = distinct !{null, !309, !"__warned", i1 false, i1 false}
!311 = distinct !{null, !312, !"__already_done", i1 false, i1 false}
!312 = !{!"../include/trace/events/sunrpc.h", i32 463, i32 1}
!313 = distinct !{null, !312, !"__warned", i1 false, i1 false}
!314 = distinct !{null, !315, !"__already_done", i1 false, i1 false}
!315 = !{!"../include/trace/events/sunrpc.h", i32 512, i32 1}
!316 = distinct !{null, !315, !"__warned", i1 false, i1 false}
!317 = distinct !{null, !318, !"__already_done", i1 false, i1 false}
!318 = !{!"../include/trace/events/sunrpc.h", i32 513, i32 1}
!319 = distinct !{null, !318, !"__warned", i1 false, i1 false}
!320 = distinct !{null, !321, !"__already_done", i1 false, i1 false}
!321 = !{!"../include/trace/events/sunrpc.h", i32 514, i32 1}
!322 = distinct !{null, !321, !"__warned", i1 false, i1 false}
!323 = distinct !{null, !324, !"__already_done", i1 false, i1 false}
!324 = !{!"../include/trace/events/sunrpc.h", i32 515, i32 1}
!325 = distinct !{null, !324, !"__warned", i1 false, i1 false}
!326 = distinct !{null, !327, !"__already_done", i1 false, i1 false}
!327 = !{!"../include/trace/events/sunrpc.h", i32 271, i32 1}
!328 = distinct !{null, !327, !"__warned", i1 false, i1 false}
!329 = distinct !{null, !330, !"__already_done", i1 false, i1 false}
!330 = !{!"../include/trace/events/sunrpc.h", i32 1123, i32 1}
!331 = distinct !{null, !330, !"__warned", i1 false, i1 false}
!332 = !{ptr @rpc_check_timeout._rs, !333, !"_rs", i1 false, i1 false}
!333 = !{!"../net/sunrpc/clnt.c", i32 2423, i32 4}
!334 = !{ptr @__func__.rpc_check_timeout, !333, !"<string literal>", i1 false, i1 false}
!335 = !{ptr @.str.65, !333, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @rpc_check_timeout._entry, !333, !"_entry", i1 false, i1 false}
!337 = !{ptr @rpc_check_timeout._entry_ptr, !333, !"_entry_ptr", i1 false, i1 false}
!338 = !{ptr @rpc_check_timeout._rs.66, !339, !"_rs", i1 false, i1 false}
!339 = !{!"../net/sunrpc/clnt.c", i32 2438, i32 4}
!340 = !{ptr @.str.68, !339, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @rpc_check_timeout._entry.67, !339, !"_entry", i1 false, i1 false}
!342 = !{ptr @rpc_check_timeout._entry_ptr.69, !339, !"_entry_ptr", i1 false, i1 false}
!343 = distinct !{null, !344, !"__already_done", i1 false, i1 false}
!344 = !{!"../include/trace/events/sunrpc.h", i32 273, i32 1}
!345 = distinct !{null, !344, !"__warned", i1 false, i1 false}
!346 = distinct !{null, !347, !"__already_done", i1 false, i1 false}
!347 = !{!"../include/trace/events/sunrpc.h", i32 561, i32 1}
!348 = distinct !{null, !347, !"__warned", i1 false, i1 false}
!349 = distinct !{null, !350, !"__already_done", i1 false, i1 false}
!350 = !{!"../include/trace/events/sunrpc.h", i32 524, i32 1}
!351 = distinct !{null, !350, !"__warned", i1 false, i1 false}
!352 = distinct !{null, !353, !"__already_done", i1 false, i1 false}
!353 = !{!"../include/trace/events/sunrpc.h", i32 525, i32 1}
!354 = distinct !{null, !353, !"__warned", i1 false, i1 false}
!355 = distinct !{null, !356, !"__already_done", i1 false, i1 false}
!356 = !{!"../include/trace/events/sunrpc.h", i32 526, i32 1}
!357 = distinct !{null, !356, !"__warned", i1 false, i1 false}
!358 = distinct !{null, !359, !"__already_done", i1 false, i1 false}
!359 = !{!"../include/trace/events/sunrpc.h", i32 527, i32 1}
!360 = distinct !{null, !359, !"__warned", i1 false, i1 false}
!361 = distinct !{null, !362, !"__already_done", i1 false, i1 false}
!362 = !{!"../include/trace/events/sunrpc.h", i32 528, i32 1}
!363 = distinct !{null, !362, !"__warned", i1 false, i1 false}
!364 = distinct !{null, !365, !"__warned", i1 false, i1 false}
!365 = !{!"../net/sunrpc/clnt.c", i32 2111, i32 26}
!366 = distinct !{null, !367, !"__already_done", i1 false, i1 false}
!367 = !{!"../include/trace/events/sunrpc.h", i32 272, i32 1}
!368 = distinct !{null, !367, !"__warned", i1 false, i1 false}
!369 = distinct !{null, !370, !"__already_done", i1 false, i1 false}
!370 = !{!"../include/trace/events/sunrpc.h", i32 530, i32 1}
!371 = distinct !{null, !370, !"__warned", i1 false, i1 false}
!372 = distinct !{null, !373, !"__already_done", i1 false, i1 false}
!373 = !{!"../include/trace/events/sunrpc.h", i32 274, i32 1}
!374 = distinct !{null, !373, !"__warned", i1 false, i1 false}
!375 = distinct !{null, !376, !"__already_done", i1 false, i1 false}
!376 = !{!"../include/trace/events/sunrpc.h", i32 275, i32 1}
!377 = distinct !{null, !376, !"__warned", i1 false, i1 false}
!378 = !{ptr @.str.70, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../net/sunrpc/clnt.c", i32 2299, i32 3}
!380 = !{ptr @.str.71, !379, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @call_bc_transmit_status._entry, !379, !"_entry", i1 false, i1 false}
!382 = !{ptr @call_bc_transmit_status._entry_ptr, !379, !"_entry_ptr", i1 false, i1 false}
!383 = !{ptr @call_bc_transmit_status._entry.72, !384, !"_entry", i1 false, i1 false}
!384 = !{!"../net/sunrpc/clnt.c", i32 2309, i32 3}
!385 = !{ptr @call_bc_transmit_status._entry_ptr.73, !384, !"_entry_ptr", i1 false, i1 false}
!386 = !{ptr @rpcproc_null, !387, !"rpcproc_null", i1 false, i1 false}
!387 = !{!"../net/sunrpc/clnt.c", i32 2687, i32 34}
!388 = !{ptr @rpc_null_ops, !389, !"rpc_null_ops", i1 false, i1 false}
!389 = !{!"../net/sunrpc/clnt.c", i32 2699, i32 34}
!390 = !{ptr @rpc_cb_add_xprt_call_ops, !391, !"rpc_cb_add_xprt_call_ops", i1 false, i1 false}
!391 = !{!"../net/sunrpc/clnt.c", i32 2767, i32 34}
!392 = distinct !{null, !393, !"__warned", i1 false, i1 false}
!393 = !{!"../include/net/netns/generic.h", i32 45, i32 7}
!394 = !{ptr @.str.74, !393, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @.str.75, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../net/sunrpc/clnt.c", i32 3017, i32 2}
!397 = !{ptr @.str.76, !396, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @rpc_show_header._entry, !396, !"_entry", i1 false, i1 false}
!399 = !{ptr @rpc_show_header._entry_ptr, !396, !"_entry_ptr", i1 false, i1 false}
!400 = !{ptr @.str.77, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../net/sunrpc/clnt.c", i32 3024, i32 26}
!402 = !{ptr @.str.78, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../net/sunrpc/clnt.c", i32 3029, i32 2}
!404 = !{ptr @.str.79, !403, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @rpc_show_task._entry, !403, !"_entry", i1 false, i1 false}
!406 = !{ptr @rpc_show_task._entry_ptr, !403, !"_entry_ptr", i1 false, i1 false}
!407 = !{ptr @.str.80, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../include/linux/sunrpc/sched.h", i32 275, i32 37}
!409 = !{!"sp"}
!410 = !{i32 1, !"wchar_size", i32 2}
!411 = !{i32 1, !"min_enum_size", i32 4}
!412 = !{i32 8, !"branch-target-enforcement", i32 0}
!413 = !{i32 8, !"sign-return-address", i32 0}
!414 = !{i32 8, !"sign-return-address-all", i32 0}
!415 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!416 = !{i32 7, !"uwtable", i32 1}
!417 = !{i32 7, !"frame-pointer", i32 2}
!418 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!419 = !{!"branch_weights", i32 2000, i32 1}
!420 = !{!"auto-init"}
!421 = !{i64 2149428395}
!422 = !{i64 2149428661}
!423 = !{i64 2159828279}
!424 = !{i64 2148501791}
!425 = !{i64 2148416231, i64 2148416263, i64 2148416292, i64 2148416326, i64 2148416357, i64 2148416380}
!426 = !{i64 2149377905}
!427 = !{!"branch_weights", i32 1, i32 2000}
!428 = !{i64 2148500712}
!429 = !{i64 2148415421, i64 2148415453, i64 2148415482, i64 2148415516, i64 2148415547, i64 2148415570}
!430 = !{i64 2148500941}
!431 = !{i64 2149025613, i64 2149025618, i64 2149025631, i64 2149025675, i64 2149025709, i64 2149025730}
!432 = !{i64 2157649482}
!433 = !{i64 2157649695}
!434 = !{i64 2149436954}
!435 = !{i64 2149437990}
!436 = !{i64 2157666509}
!437 = !{i64 2157666730}
!438 = !{i64 2157595936}
!439 = !{i64 2157596139}
!440 = !{i64 2157616434}
!441 = !{i64 2157616639}
!442 = !{i64 2148412236, i64 2148412262, i64 2148412291, i64 2148412325, i64 2148412356, i64 2148412379}
!443 = !{i64 2148414701, i64 2148414727, i64 2148414756, i64 2148414790, i64 2148414821, i64 2148414844}
!444 = !{i64 2148413766, i64 2148413798, i64 2148413827, i64 2148413861, i64 2148413892, i64 2148413915}
!445 = !{i64 2157563154}
!446 = !{i64 2157563373}
!447 = distinct !{!447, !448}
!448 = !{!"llvm.loop.peeled.count", i32 1}
!449 = !{i64 2148497671}
!450 = !{i64 2148412956, i64 2148412988, i64 2148413017, i64 2148413051, i64 2148413082, i64 2148413105}
!451 = !{i64 2148497900}
!452 = !{i64 2148514083}
!453 = !{i64 896769, i64 896793, i64 896814, i64 896831, i64 896848}
!454 = !{i64 2148514309}
!455 = !{i64 2157688402}
!456 = !{i64 2157688643}
!457 = !{i64 2157705289}
!458 = !{i64 2157705528}
!459 = !{i64 2157722035}
!460 = !{i64 2157722256}
!461 = !{i64 2157632885}
!462 = !{i64 2157633088}
!463 = !{i64 2157579701}
!464 = !{i64 2157579898}
!465 = !{i64 2157829496}
!466 = !{i64 2157829689}
!467 = !{i64 2159982516, i64 2159982999, i64 2159982553, i64 2159982609, i64 2159982643, i64 2159982667, i64 2159982708, i64 2159982729, i64 2159982757, i64 2159982791}
!468 = !{i64 2159984119, i64 2159984602, i64 2159984156, i64 2159984212, i64 2159984246, i64 2159984270, i64 2159984311, i64 2159984332, i64 2159984360, i64 2159984394}
!469 = !{i64 2157792400}
!470 = !{i64 2157792619}
!471 = !{i64 2157813351}
!472 = !{i64 2157813558}
!473 = !{i64 2158325126}
!474 = !{i64 2158325339}
!475 = !{i64 2158044948}
!476 = !{i64 2158045149}
!477 = !{i64 2158740995}
!478 = !{i64 2158741200}
!479 = !{i64 2160006289}
!480 = !{i64 2157738563}
!481 = !{i64 2157738764}
!482 = !{i64 2157541904}
!483 = !{i64 2157542117}
!484 = !{i64 2158077706}
!485 = !{i64 2158077911}
!486 = !{i64 2158098289}
!487 = !{i64 2158098496}
!488 = !{i64 2158114825}
!489 = !{i64 2158115030}
!490 = !{i64 2158131307}
!491 = !{i64 2158131512}
!492 = !{i64 2158151770}
!493 = !{i64 2158151971}
!494 = !{i64 2158061278}
!495 = !{i64 2158061481}
!496 = !{i64 2158167984}
!497 = !{i64 2158168181}
!498 = !{i64 2158184210}
!499 = !{i64 2158184413}
!500 = !{i64 2158200518}
!501 = !{i64 2158200717}
!502 = !{i64 2158220899}
!503 = !{i64 2158221104}
!504 = !{i64 2157775594}
!505 = !{i64 2157775801}
!506 = !{i64 2158342018}
!507 = !{i64 2158346330}
!508 = !{i64 2158237542}
!509 = !{i64 2158237755}
!510 = !{i64 2158254201}
!511 = !{i64 2158254404}
!512 = !{i64 2158270790}
!513 = !{i64 2158271003}
!514 = !{i64 2158291670}
!515 = !{i64 2158291881}
!516 = !{i64 2158308475}
!517 = !{i64 2158308688}
!518 = !{i64 2157759028}
!519 = !{i64 2157759235}
