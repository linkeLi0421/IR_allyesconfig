; ModuleID = '/llk/IR_all_yes/net/sunrpc/sched.c_pt.bc'
source_filename = "../net/sunrpc/sched.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+xprtiod_workqueue\22, \22a\22\09"
module asm "\09.weak\09__crc_xprtiod_workqueue\09\09\09\09"
module asm "\09.long\09__crc_xprtiod_workqueue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_xprtiod_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22xprtiod_workqueue\22\09\09\09\09\09"
module asm "__kstrtabns_xprtiod_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_task_timeout\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_task_timeout\09\09\09\09"
module asm "\09.long\09__crc_rpc_task_timeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_task_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_task_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_task_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_init_priority_wait_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_init_priority_wait_queue\09\09\09\09"
module asm "\09.long\09__crc_rpc_init_priority_wait_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_init_priority_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_init_priority_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_init_priority_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_init_wait_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_init_wait_queue\09\09\09\09"
module asm "\09.long\09__crc_rpc_init_wait_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_init_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_init_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_init_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_destroy_wait_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_destroy_wait_queue\09\09\09\09"
module asm "\09.long\09__crc_rpc_destroy_wait_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_destroy_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_destroy_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_destroy_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__rpc_wait_for_completion_task\22, \22a\22\09"
module asm "\09.weak\09__crc___rpc_wait_for_completion_task\09\09\09\09"
module asm "\09.long\09__crc___rpc_wait_for_completion_task\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___rpc_wait_for_completion_task:\09\09\09\09\09"
module asm "\09.asciz \09\22__rpc_wait_for_completion_task\22\09\09\09\09\09"
module asm "__kstrtabns___rpc_wait_for_completion_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_sleep_on_timeout\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_sleep_on_timeout\09\09\09\09"
module asm "\09.long\09__crc_rpc_sleep_on_timeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_sleep_on\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_sleep_on\09\09\09\09"
module asm "\09.long\09__crc_rpc_sleep_on\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_sleep_on_priority_timeout\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_sleep_on_priority_timeout\09\09\09\09"
module asm "\09.long\09__crc_rpc_sleep_on_priority_timeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on_priority_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on_priority_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on_priority_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_sleep_on_priority\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_sleep_on_priority\09\09\09\09"
module asm "\09.long\09__crc_rpc_sleep_on_priority\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_sleep_on_priority:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_sleep_on_priority\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_sleep_on_priority:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_wake_up_queued_task\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_wake_up_queued_task\09\09\09\09"
module asm "\09.long\09__crc_rpc_wake_up_queued_task\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_queued_task:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_queued_task\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_queued_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_wake_up_first\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_wake_up_first\09\09\09\09"
module asm "\09.long\09__crc_rpc_wake_up_first\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_first:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_first\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_first:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_wake_up_next\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_wake_up_next\09\09\09\09"
module asm "\09.long\09__crc_rpc_wake_up_next\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_next:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_next\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_next:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_wake_up\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_wake_up\09\09\09\09"
module asm "\09.long\09__crc_rpc_wake_up\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_wake_up_status\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_wake_up_status\09\09\09\09"
module asm "\09.long\09__crc_rpc_wake_up_status\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_wake_up_status:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_wake_up_status\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_wake_up_status:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_delay\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_delay\09\09\09\09"
module asm "\09.long\09__crc_rpc_delay\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_delay:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_delay\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_delay:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_exit\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_exit\09\09\09\09"
module asm "\09.long\09__crc_rpc_exit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_exit\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_malloc\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_malloc\09\09\09\09"
module asm "\09.long\09__crc_rpc_malloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_malloc:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_malloc\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_malloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_free\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_free\09\09\09\09"
module asm "\09.long\09__crc_rpc_free\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_free:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_free\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_put_task\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_put_task\09\09\09\09"
module asm "\09.long\09__crc_rpc_put_task\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_put_task:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_put_task\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_put_task:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rpc_put_task_async\22, \22a\22\09"
module asm "\09.weak\09__crc_rpc_put_task_async\09\09\09\09"
module asm "\09.long\09__crc_rpc_put_task_async\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rpc_put_task_async:\09\09\09\09\09"
module asm "\09.asciz \09\22rpc_put_task_async\22\09\09\09\09\09"
module asm "__kstrtabns_rpc_put_task_async:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.177 }
%union.anon.177 = type { %struct.anon.178 }
%struct.anon.178 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.179, %struct.trace_event, ptr, ptr, %union.anon.180, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.179 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.180 = type { ptr }
%union.anon.181 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.182 = type { %struct.bpf_raw_event_map }
%union.anon.183 = type { %struct.bpf_raw_event_map }
%union.anon.184 = type { %struct.bpf_raw_event_map }
%union.anon.185 = type { %struct.bpf_raw_event_map }
%union.anon.186 = type { %struct.bpf_raw_event_map }
%union.anon.187 = type { %struct.bpf_raw_event_map }
%union.anon.188 = type { %struct.bpf_raw_event_map }
%union.anon.189 = type { %struct.bpf_raw_event_map }
%union.anon.190 = type { %struct.bpf_raw_event_map }
%union.anon.191 = type { %struct.bpf_raw_event_map }
%union.anon.192 = type { %struct.bpf_raw_event_map }
%union.anon.193 = type { %struct.bpf_raw_event_map }
%union.anon.194 = type { %struct.bpf_raw_event_map }
%union.anon.195 = type { %struct.bpf_raw_event_map }
%union.anon.196 = type { %struct.bpf_raw_event_map }
%union.anon.197 = type { %struct.bpf_raw_event_map }
%union.anon.198 = type { %struct.bpf_raw_event_map }
%union.anon.199 = type { %struct.bpf_raw_event_map }
%union.anon.200 = type { %struct.bpf_raw_event_map }
%union.anon.201 = type { %struct.bpf_raw_event_map }
%union.anon.202 = type { %struct.bpf_raw_event_map }
%union.anon.203 = type { %struct.bpf_raw_event_map }
%union.anon.204 = type { %struct.bpf_raw_event_map }
%union.anon.205 = type { %struct.bpf_raw_event_map }
%union.anon.206 = type { %struct.bpf_raw_event_map }
%union.anon.207 = type { %struct.bpf_raw_event_map }
%union.anon.208 = type { %struct.bpf_raw_event_map }
%union.anon.209 = type { %struct.bpf_raw_event_map }
%union.anon.210 = type { %struct.bpf_raw_event_map }
%union.anon.211 = type { %struct.bpf_raw_event_map }
%union.anon.212 = type { %struct.bpf_raw_event_map }
%union.anon.213 = type { %struct.bpf_raw_event_map }
%union.anon.214 = type { %struct.bpf_raw_event_map }
%union.anon.215 = type { %struct.bpf_raw_event_map }
%union.anon.216 = type { %struct.bpf_raw_event_map }
%union.anon.217 = type { %struct.bpf_raw_event_map }
%union.anon.218 = type { %struct.bpf_raw_event_map }
%union.anon.219 = type { %struct.bpf_raw_event_map }
%union.anon.220 = type { %struct.bpf_raw_event_map }
%union.anon.221 = type { %struct.bpf_raw_event_map }
%union.anon.222 = type { %struct.bpf_raw_event_map }
%union.anon.223 = type { %struct.bpf_raw_event_map }
%union.anon.224 = type { %struct.bpf_raw_event_map }
%union.anon.225 = type { %struct.bpf_raw_event_map }
%union.anon.226 = type { %struct.bpf_raw_event_map }
%union.anon.227 = type { %struct.bpf_raw_event_map }
%union.anon.228 = type { %struct.bpf_raw_event_map }
%union.anon.229 = type { %struct.bpf_raw_event_map }
%union.anon.230 = type { %struct.bpf_raw_event_map }
%union.anon.231 = type { %struct.bpf_raw_event_map }
%union.anon.232 = type { %struct.bpf_raw_event_map }
%union.anon.233 = type { %struct.bpf_raw_event_map }
%union.anon.234 = type { %struct.bpf_raw_event_map }
%union.anon.235 = type { %struct.bpf_raw_event_map }
%union.anon.236 = type { %struct.bpf_raw_event_map }
%union.anon.237 = type { %struct.bpf_raw_event_map }
%union.anon.238 = type { %struct.bpf_raw_event_map }
%union.anon.239 = type { %struct.bpf_raw_event_map }
%union.anon.240 = type { %struct.bpf_raw_event_map }
%union.anon.241 = type { %struct.bpf_raw_event_map }
%union.anon.242 = type { %struct.bpf_raw_event_map }
%union.anon.243 = type { %struct.bpf_raw_event_map }
%union.anon.244 = type { %struct.bpf_raw_event_map }
%union.anon.245 = type { %struct.bpf_raw_event_map }
%union.anon.246 = type { %struct.bpf_raw_event_map }
%union.anon.247 = type { %struct.bpf_raw_event_map }
%union.anon.248 = type { %struct.bpf_raw_event_map }
%union.anon.249 = type { %struct.bpf_raw_event_map }
%union.anon.250 = type { %struct.bpf_raw_event_map }
%union.anon.251 = type { %struct.bpf_raw_event_map }
%union.anon.252 = type { %struct.bpf_raw_event_map }
%union.anon.253 = type { %struct.bpf_raw_event_map }
%union.anon.254 = type { %struct.bpf_raw_event_map }
%union.anon.255 = type { %struct.bpf_raw_event_map }
%union.anon.256 = type { %struct.bpf_raw_event_map }
%union.anon.257 = type { %struct.bpf_raw_event_map }
%union.anon.258 = type { %struct.bpf_raw_event_map }
%union.anon.259 = type { %struct.bpf_raw_event_map }
%union.anon.260 = type { %struct.bpf_raw_event_map }
%union.anon.261 = type { %struct.bpf_raw_event_map }
%union.anon.262 = type { %struct.bpf_raw_event_map }
%union.anon.263 = type { %struct.bpf_raw_event_map }
%union.anon.264 = type { %struct.bpf_raw_event_map }
%union.anon.265 = type { %struct.bpf_raw_event_map }
%union.anon.266 = type { %struct.bpf_raw_event_map }
%union.anon.267 = type { %struct.bpf_raw_event_map }
%union.anon.268 = type { %struct.bpf_raw_event_map }
%union.anon.269 = type { %struct.bpf_raw_event_map }
%union.anon.270 = type { %struct.bpf_raw_event_map }
%union.anon.271 = type { %struct.bpf_raw_event_map }
%union.anon.272 = type { %struct.bpf_raw_event_map }
%union.anon.273 = type { %struct.bpf_raw_event_map }
%union.anon.274 = type { %struct.bpf_raw_event_map }
%union.anon.275 = type { %struct.bpf_raw_event_map }
%union.anon.276 = type { %struct.bpf_raw_event_map }
%union.anon.277 = type { %struct.bpf_raw_event_map }
%union.anon.278 = type { %struct.bpf_raw_event_map }
%union.anon.279 = type { %struct.bpf_raw_event_map }
%union.anon.280 = type { %struct.bpf_raw_event_map }
%union.anon.281 = type { %struct.bpf_raw_event_map }
%union.anon.282 = type { %struct.bpf_raw_event_map }
%union.anon.283 = type { %struct.bpf_raw_event_map }
%union.anon.284 = type { %struct.bpf_raw_event_map }
%union.anon.285 = type { %struct.bpf_raw_event_map }
%union.anon.286 = type { %struct.bpf_raw_event_map }
%union.anon.287 = type { %struct.bpf_raw_event_map }
%union.anon.288 = type { %struct.bpf_raw_event_map }
%union.anon.289 = type { %struct.bpf_raw_event_map }
%union.anon.290 = type { %struct.bpf_raw_event_map }
%union.anon.291 = type { %struct.bpf_raw_event_map }
%union.anon.292 = type { %struct.bpf_raw_event_map }
%union.anon.293 = type { %struct.bpf_raw_event_map }
%union.anon.294 = type { %struct.bpf_raw_event_map }
%union.anon.295 = type { %struct.bpf_raw_event_map }
%union.anon.296 = type { %struct.bpf_raw_event_map }
%union.anon.297 = type { %struct.bpf_raw_event_map }
%union.anon.298 = type { %struct.bpf_raw_event_map }
%union.anon.299 = type { %struct.bpf_raw_event_map }
%union.anon.300 = type { %struct.bpf_raw_event_map }
%union.anon.301 = type { %struct.bpf_raw_event_map }
%union.anon.302 = type { %struct.bpf_raw_event_map }
%union.anon.303 = type { %struct.bpf_raw_event_map }
%union.anon.304 = type { %struct.bpf_raw_event_map }
%union.anon.305 = type { %struct.bpf_raw_event_map }
%union.anon.306 = type { %struct.bpf_raw_event_map }
%union.anon.307 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.rpc_wait_queue = type { %struct.spinlock, [4 x %struct.list_head], i8, i8, i8, i16, %struct.rpc_timer, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.rpc_timer = type { %struct.list_head, i32, %struct.delayed_work }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.trace_print_flags = type { i32, ptr }
%struct.lock_class_key = type { %union.anon.2 }
%union.anon.2 = type { %struct.hlist_node }
%struct.cpumask = type { [1 x i32] }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.rpc_task = type { %struct.atomic_t, i32, %struct.list_head, ptr, ptr, i32, i32, ptr, %union.anon.3, i32, %struct.rpc_message, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i32, i16, i16, i16, i8 }
%union.anon.3 = type { %struct.work_struct }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.trace_event_raw_rpc_xdr_buf_class = type { %struct.trace_entry, i32, i32, ptr, i32, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.rpc_clnt = type { %struct.refcount_struct, i32, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.spinlock, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i8, ptr, ptr, %struct.atomic_t, i32, [65 x i8], %struct.rpc_pipe_dir_head, ptr, %struct.rpc_rtt, %struct.rpc_timeout, ptr, ptr, ptr, ptr, %union.anon.136, ptr, i32 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.rpc_pipe_dir_head = type { %struct.list_head, ptr }
%struct.rpc_rtt = type { i32, [5 x i32], [5 x i32], [5 x i32] }
%struct.rpc_timeout = type { i32, i32, i32, i32, i8 }
%union.anon.136 = type { %struct.work_struct }
%struct.kvec = type { ptr, i32 }
%struct.xdr_buf = type { [1 x %struct.kvec], [1 x %struct.kvec], ptr, ptr, i32, i32, i32, i32, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_rpc_clnt_class = type { %struct.trace_entry, i32, [0 x i8] }
%struct.rpc_xprt = type { %struct.kref, ptr, i32, ptr, %struct.__kernel_sockaddr_storage, i32, i32, i32, i32, i32, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.list_head, i32, i32, i32, i32, i8, %struct.atomic_t, i32, %struct.list_head, i32, i32, i32, %struct.work_struct, %struct.timer_list, i32, i32, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.spinlock, %struct.spinlock, i32, ptr, %struct.list_head, %struct.atomic_t, ptr, ptr, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.rb_root, %struct.anon.135, ptr, ptr, [6 x ptr], ptr, %struct.callback_head, ptr, ptr, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.__kernel_sockaddr_storage = type { %union.anon.131 }
%union.anon.131 = type { ptr, [124 x i8] }
%struct.rb_root = type { ptr }
%struct.anon.135 = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.callback_head = type { ptr, ptr }
%struct.trace_event_raw_rpc_clnt_new = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_clnt_new_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_clnt_clone_err = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_task_status = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_request = type { %struct.trace_entry, i32, i32, i32, i8, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_task_running = type { %struct.trace_entry, i32, i32, ptr, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_rpc_task_queued = type { %struct.trace_entry, i32, i32, i32, i32, i32, i16, i32, [0 x i8] }
%struct.trace_event_raw_rpc_failure = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_reply_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.rpc_rqst = type { ptr, %struct.xdr_buf, %struct.xdr_buf, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.anon.137, %struct.list_head, %struct.list_head, ptr, i32, ptr, i32, i32, i32, %struct.xdr_buf, i32, i32, i32, i64, i32, i32, %struct.atomic_t, i32, i64, i32, %struct.list_head, i32, %struct.list_head }
%union.anon.137 = type { %struct.rb_node }
%struct.rb_node = type { i32, ptr, ptr }
%struct.trace_event_raw_rpc_buf_alloc = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_call_rpcerror = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_stats_latency = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.xdr_stream = type { ptr, ptr, ptr, ptr, %struct.kvec, ptr, i32, ptr }
%struct.rpc_procinfo = type { i32, ptr, ptr, i32, i32, i32, i32, ptr }
%struct.trace_event_raw_rpc_xdr_overflow = type { %struct.trace_entry, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_xdr_alignment = type { %struct.trace_entry, i32, i32, i32, i32, i32, ptr, i32, ptr, i32, i32, i32, i32, i32, [0 x i8] }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [104 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [60 x i8] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.trace_event_raw_xs_socket_event = type { %struct.trace_entry, i32, i32, i64, [28 x i8], [28 x i8], [0 x i8] }
%struct.sock_common = type { %union.anon.40, %union.anon.42, %union.anon.43, i16, i8, i8, i32, %union.anon.45, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.72, [0 x i32], %union.anon.73, i16, i16, %union.anon.74, %struct.refcount_struct, [0 x i32], %union.anon.75 }
%union.anon.40 = type { i64 }
%union.anon.42 = type { i32 }
%union.anon.43 = type { i32 }
%union.anon.45 = type { %struct.hlist_node }
%struct.possible_net_t = type { ptr }
%struct.in6_addr = type { %union.anon.71 }
%union.anon.71 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.72 = type { i32 }
%union.anon.73 = type { %struct.hlist_node }
%union.anon.74 = type { i32 }
%union.anon.75 = type { i32 }
%struct.inet_sock = type { %struct.sock, ptr, i32, i16, i16, ptr, i16, i16, i8, i8, i8, i8, i16, i8, i8, i32, i32, i32, ptr, %struct.inet_cork_full }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.80, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.81, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.82, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.anon.80 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.81 = type { ptr }
%union.anon.82 = type { ptr }
%struct.sk_buff_head = type { %union.anon.78, i32, %struct.spinlock }
%union.anon.78 = type { %struct.anon.79 }
%struct.anon.79 = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.kuid_t = type { i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.inet_cork_full = type { %struct.inet_cork, %struct.flowi }
%struct.inet_cork = type { i32, i32, ptr, i32, i32, ptr, i8, i8, i16, i8, i16, i64, i32 }
%struct.flowi = type { %union.anon.87 }
%union.anon.87 = type { %struct.flowi6 }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.socket_alloc = type { %struct.socket, %struct.inode, [112 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.121, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.122, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.123, ptr, %struct.address_space, %struct.list_head, %union.anon.126, i32, i32, ptr, ptr, ptr, ptr }
%struct.kgid_t = type { i32 }
%union.anon.121 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%union.anon.122 = type { %struct.callback_head }
%union.anon.123 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.126 = type { ptr }
%struct.trace_event_raw_xs_socket_event_done = type { %struct.trace_entry, i32, i32, i32, i64, [28 x i8], [28 x i8], [0 x i8] }
%struct.trace_event_raw_rpc_socket_nospace = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.sock_xprt = type { %struct.rpc_xprt, ptr, ptr, ptr, %struct.anon.153, %struct.anon.155, i32, %struct.delayed_work, %struct.work_struct, %struct.work_struct, %struct.mutex, %struct.__kernel_sockaddr_storage, i16, i32, i32, i32, %struct.rpc_timeout, ptr, ptr, ptr, ptr }
%struct.anon.153 = type { %struct.anon.154, i32, i32, i32 }
%struct.anon.154 = type { i32, i32, i32 }
%struct.anon.155 = type { i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.trace_event_raw_rpc_xprt_lifetime_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpc_xprt_event = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_transmit = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_retransmit = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_ping = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_writelock_event = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprt_cong_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_xprt_reserve = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xs_stream_read_data = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xs_stream_read_request = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_getport = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_setport = type { %struct.trace_entry, i32, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_pmap_register = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_register = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcb_unregister = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xdr_msg_class = type { %struct.trace_entry, i32, ptr, i32, ptr, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xdr_buf_class = type { %struct.trace_entry, i32, ptr, i32, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.svc_rqst = type { %struct.list_head, %struct.callback_head, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, ptr, ptr, ptr, ptr, %struct.svc_cred, ptr, ptr, i32, %struct.xdr_buf, %struct.xdr_stream, %struct.xdr_stream, ptr, %struct.xdr_buf, [260 x ptr], ptr, ptr, ptr, %struct.pagevec, [259 x %struct.kvec], [259 x %struct.bio_vec], i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i32, i32, i32, i64, %struct.cache_req, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr }
%struct.svc_cred = type { %struct.kuid_t, %struct.kgid_t, ptr, i32, ptr, ptr, ptr, ptr }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.cache_req = type { ptr, i32 }
%struct.trace_event_raw_svc_authenticate = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.svc_xprt = type { ptr, ptr, %struct.kref, %struct.list_head, %struct.list_head, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.spinlock, ptr, %struct.list_head, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, [58 x i8], %struct.list_head, ptr, ptr, ptr, ptr }
%struct.trace_event_raw_svc_process = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_rqst_event = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_rqst_status = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xprt_create_err = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.trace_event_raw_svc_xprt_enqueue = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.112, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.32 }
%struct.llist_node = type { ptr }
%union.anon.32 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35 }
%struct.anon.35 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.112 = type { %struct.callback_head }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.trace_event_raw_svc_xprt_event = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xprt_accept = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_xprt_dequeue = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_wake_up = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_svc_alloc_arg_err = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_svc_stats_latency = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.svc_deferred_req = type { i32, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, %struct.cache_deferred_req, i32, i32, [0 x i32] }
%struct.cache_deferred_req = type { %struct.hlist_node, %struct.list_head, ptr, ptr, ptr }
%struct.trace_event_raw_svc_deferred_event = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_new_socket = type { %struct.trace_entry, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_svcsock_marker = type { %struct.trace_entry, i32, i8, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_tcp_recv_short = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_tcp_state = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcsock_accept_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.17, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.93, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.anon.93 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.cache_detail = type { ptr, i32, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.list_head, i64, i32, %struct.list_head, %struct.atomic_t, i64, i64, %union.anon.156, ptr }
%union.anon.156 = type { ptr }
%struct.trace_event_raw_cache_event = type { %struct.trace_entry, ptr, i32, [0 x i8] }
%struct.trace_event_raw_register_class = type { %struct.trace_entry, i32, i32, i16, i16, i32, i32, [0 x i8] }
%struct.trace_event_raw_svc_unregister = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.rpc_call_ops = type { ptr, ptr, ptr, ptr }
%struct.wait_bit_key = type { ptr, i32, i32 }
%struct.rpc_buffer = type { i32, [0 x i8] }
%struct.rpc_task_setup = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i8 }
%struct.rpc_cred = type { %struct.hlist_node, %struct.list_head, %struct.callback_head, ptr, ptr, i32, i32, %struct.refcount_struct, ptr }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.rpc_wait = type { %struct.list_head, %struct.list_head, %struct.list_head }

@__tpstrtab_rpc_xdr_sendto = internal constant [15 x i8] c"rpc_xdr_sendto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_sendto = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_sendto }, align 4
@__tracepoint_rpc_xdr_sendto = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_xdr_sendto, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_sendto, ptr null, ptr @__traceiter_rpc_xdr_sendto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_sendto = internal constant ptr @__tracepoint_rpc_xdr_sendto, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_recvfrom = internal constant [17 x i8] c"rpc_xdr_recvfrom\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_recvfrom = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_recvfrom }, align 4
@__tracepoint_rpc_xdr_recvfrom = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_xdr_recvfrom, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_recvfrom, ptr null, ptr @__traceiter_rpc_xdr_recvfrom, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_recvfrom = internal constant ptr @__tracepoint_rpc_xdr_recvfrom, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_reply_pages = internal constant [20 x i8] c"rpc_xdr_reply_pages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_reply_pages = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_reply_pages }, align 4
@__tracepoint_rpc_xdr_reply_pages = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_xdr_reply_pages, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_reply_pages, ptr null, ptr @__traceiter_rpc_xdr_reply_pages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_reply_pages = internal constant ptr @__tracepoint_rpc_xdr_reply_pages, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_free = internal constant [14 x i8] c"rpc_clnt_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_free = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_free }, align 4
@__tracepoint_rpc_clnt_free = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_free, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_free, ptr null, ptr @__traceiter_rpc_clnt_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_free = internal constant ptr @__tracepoint_rpc_clnt_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_killall = internal constant [17 x i8] c"rpc_clnt_killall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_killall = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_killall }, align 4
@__tracepoint_rpc_clnt_killall = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_killall, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_killall, ptr null, ptr @__traceiter_rpc_clnt_killall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_killall = internal constant ptr @__tracepoint_rpc_clnt_killall, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_shutdown = internal constant [18 x i8] c"rpc_clnt_shutdown\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_shutdown = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_shutdown }, align 4
@__tracepoint_rpc_clnt_shutdown = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_shutdown, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_shutdown, ptr null, ptr @__traceiter_rpc_clnt_shutdown, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_shutdown = internal constant ptr @__tracepoint_rpc_clnt_shutdown, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_release = internal constant [17 x i8] c"rpc_clnt_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_release = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_release }, align 4
@__tracepoint_rpc_clnt_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_release, ptr null, ptr @__traceiter_rpc_clnt_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_release = internal constant ptr @__tracepoint_rpc_clnt_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_replace_xprt = internal constant [22 x i8] c"rpc_clnt_replace_xprt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_replace_xprt = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_replace_xprt }, align 4
@__tracepoint_rpc_clnt_replace_xprt = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_replace_xprt, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_replace_xprt, ptr null, ptr @__traceiter_rpc_clnt_replace_xprt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_replace_xprt = internal constant ptr @__tracepoint_rpc_clnt_replace_xprt, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_replace_xprt_err = internal constant [26 x i8] c"rpc_clnt_replace_xprt_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_replace_xprt_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_replace_xprt_err }, align 4
@__tracepoint_rpc_clnt_replace_xprt_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_replace_xprt_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_replace_xprt_err, ptr null, ptr @__traceiter_rpc_clnt_replace_xprt_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_replace_xprt_err = internal constant ptr @__tracepoint_rpc_clnt_replace_xprt_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_new = internal constant [13 x i8] c"rpc_clnt_new\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_new = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_new }, align 4
@__tracepoint_rpc_clnt_new = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_new, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_new, ptr null, ptr @__traceiter_rpc_clnt_new, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_new = internal constant ptr @__tracepoint_rpc_clnt_new, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_new_err = internal constant [17 x i8] c"rpc_clnt_new_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_new_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_new_err }, align 4
@__tracepoint_rpc_clnt_new_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_new_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_new_err, ptr null, ptr @__traceiter_rpc_clnt_new_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_new_err = internal constant ptr @__tracepoint_rpc_clnt_new_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_clnt_clone_err = internal constant [19 x i8] c"rpc_clnt_clone_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_clnt_clone_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_clnt_clone_err }, align 4
@__tracepoint_rpc_clnt_clone_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_clnt_clone_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_clnt_clone_err, ptr null, ptr @__traceiter_rpc_clnt_clone_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_clnt_clone_err = internal constant ptr @__tracepoint_rpc_clnt_clone_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_call_status = internal constant [16 x i8] c"rpc_call_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_call_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_call_status }, align 4
@__tracepoint_rpc_call_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_call_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_call_status, ptr null, ptr @__traceiter_rpc_call_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_call_status = internal constant ptr @__tracepoint_rpc_call_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_connect_status = internal constant [19 x i8] c"rpc_connect_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_connect_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_connect_status }, align 4
@__tracepoint_rpc_connect_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_connect_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_connect_status, ptr null, ptr @__traceiter_rpc_connect_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_connect_status = internal constant ptr @__tracepoint_rpc_connect_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_timeout_status = internal constant [19 x i8] c"rpc_timeout_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_timeout_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_timeout_status }, align 4
@__tracepoint_rpc_timeout_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_timeout_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_timeout_status, ptr null, ptr @__traceiter_rpc_timeout_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_timeout_status = internal constant ptr @__tracepoint_rpc_timeout_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_retry_refresh_status = internal constant [25 x i8] c"rpc_retry_refresh_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_retry_refresh_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_retry_refresh_status }, align 4
@__tracepoint_rpc_retry_refresh_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_retry_refresh_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_retry_refresh_status, ptr null, ptr @__traceiter_rpc_retry_refresh_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_retry_refresh_status = internal constant ptr @__tracepoint_rpc_retry_refresh_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_refresh_status = internal constant [19 x i8] c"rpc_refresh_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_refresh_status = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_refresh_status }, align 4
@__tracepoint_rpc_refresh_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_refresh_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_refresh_status, ptr null, ptr @__traceiter_rpc_refresh_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_refresh_status = internal constant ptr @__tracepoint_rpc_refresh_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_request = internal constant [12 x i8] c"rpc_request\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_request = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_request }, align 4
@__tracepoint_rpc_request = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_request, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_request, ptr null, ptr @__traceiter_rpc_request, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_request = internal constant ptr @__tracepoint_rpc_request, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_begin = internal constant [15 x i8] c"rpc_task_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_begin = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_begin }, align 4
@__tracepoint_rpc_task_begin = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_begin, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_begin, ptr null, ptr @__traceiter_rpc_task_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_begin = internal constant ptr @__tracepoint_rpc_task_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_run_action = internal constant [20 x i8] c"rpc_task_run_action\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_run_action = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_run_action }, align 4
@__tracepoint_rpc_task_run_action = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_run_action, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_run_action, ptr null, ptr @__traceiter_rpc_task_run_action, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_run_action = internal constant ptr @__tracepoint_rpc_task_run_action, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_sync_sleep = internal constant [20 x i8] c"rpc_task_sync_sleep\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_sync_sleep = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_sync_sleep }, align 4
@__tracepoint_rpc_task_sync_sleep = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_sync_sleep, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_sync_sleep, ptr null, ptr @__traceiter_rpc_task_sync_sleep, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_sync_sleep = internal constant ptr @__tracepoint_rpc_task_sync_sleep, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_sync_wake = internal constant [19 x i8] c"rpc_task_sync_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_sync_wake = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_sync_wake }, align 4
@__tracepoint_rpc_task_sync_wake = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_sync_wake, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_sync_wake, ptr null, ptr @__traceiter_rpc_task_sync_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_sync_wake = internal constant ptr @__tracepoint_rpc_task_sync_wake, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_complete = internal constant [18 x i8] c"rpc_task_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_complete = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_complete }, align 4
@__tracepoint_rpc_task_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_complete, ptr null, ptr @__traceiter_rpc_task_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_complete = internal constant ptr @__tracepoint_rpc_task_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_timeout = internal constant [17 x i8] c"rpc_task_timeout\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_timeout = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_timeout }, align 4
@__tracepoint_rpc_task_timeout = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_timeout, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_timeout, ptr null, ptr @__traceiter_rpc_task_timeout, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_timeout = internal constant ptr @__tracepoint_rpc_task_timeout, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_signalled = internal constant [19 x i8] c"rpc_task_signalled\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_signalled = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_signalled }, align 4
@__tracepoint_rpc_task_signalled = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_signalled, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_signalled, ptr null, ptr @__traceiter_rpc_task_signalled, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_signalled = internal constant ptr @__tracepoint_rpc_task_signalled, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_end = internal constant [13 x i8] c"rpc_task_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_end = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_end }, align 4
@__tracepoint_rpc_task_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_end, ptr null, ptr @__traceiter_rpc_task_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_end = internal constant ptr @__tracepoint_rpc_task_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_call_done = internal constant [19 x i8] c"rpc_task_call_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_call_done = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_call_done }, align 4
@__tracepoint_rpc_task_call_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_call_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_call_done, ptr null, ptr @__traceiter_rpc_task_call_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_call_done = internal constant ptr @__tracepoint_rpc_task_call_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_sleep = internal constant [15 x i8] c"rpc_task_sleep\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_sleep = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_sleep }, align 4
@__tracepoint_rpc_task_sleep = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_sleep, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_sleep, ptr null, ptr @__traceiter_rpc_task_sleep, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_sleep = internal constant ptr @__tracepoint_rpc_task_sleep, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_task_wakeup = internal constant [16 x i8] c"rpc_task_wakeup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_task_wakeup = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_task_wakeup }, align 4
@__tracepoint_rpc_task_wakeup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_task_wakeup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_task_wakeup, ptr null, ptr @__traceiter_rpc_task_wakeup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_task_wakeup = internal constant ptr @__tracepoint_rpc_task_wakeup, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_bad_callhdr = internal constant [16 x i8] c"rpc_bad_callhdr\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_bad_callhdr = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_bad_callhdr }, align 4
@__tracepoint_rpc_bad_callhdr = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_bad_callhdr, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_bad_callhdr, ptr null, ptr @__traceiter_rpc_bad_callhdr, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_bad_callhdr = internal constant ptr @__tracepoint_rpc_bad_callhdr, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_bad_verifier = internal constant [17 x i8] c"rpc_bad_verifier\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_bad_verifier = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_bad_verifier }, align 4
@__tracepoint_rpc_bad_verifier = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_bad_verifier, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_bad_verifier, ptr null, ptr @__traceiter_rpc_bad_verifier, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_bad_verifier = internal constant ptr @__tracepoint_rpc_bad_verifier, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__prog_unavail = internal constant [18 x i8] c"rpc__prog_unavail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__prog_unavail = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__prog_unavail }, align 4
@__tracepoint_rpc__prog_unavail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__prog_unavail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__prog_unavail, ptr null, ptr @__traceiter_rpc__prog_unavail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__prog_unavail = internal constant ptr @__tracepoint_rpc__prog_unavail, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__prog_mismatch = internal constant [19 x i8] c"rpc__prog_mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__prog_mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__prog_mismatch }, align 4
@__tracepoint_rpc__prog_mismatch = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__prog_mismatch, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__prog_mismatch, ptr null, ptr @__traceiter_rpc__prog_mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__prog_mismatch = internal constant ptr @__tracepoint_rpc__prog_mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__proc_unavail = internal constant [18 x i8] c"rpc__proc_unavail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__proc_unavail = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__proc_unavail }, align 4
@__tracepoint_rpc__proc_unavail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__proc_unavail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__proc_unavail, ptr null, ptr @__traceiter_rpc__proc_unavail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__proc_unavail = internal constant ptr @__tracepoint_rpc__proc_unavail, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__garbage_args = internal constant [18 x i8] c"rpc__garbage_args\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__garbage_args = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__garbage_args }, align 4
@__tracepoint_rpc__garbage_args = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__garbage_args, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__garbage_args, ptr null, ptr @__traceiter_rpc__garbage_args, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__garbage_args = internal constant ptr @__tracepoint_rpc__garbage_args, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__unparsable = internal constant [16 x i8] c"rpc__unparsable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__unparsable = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__unparsable }, align 4
@__tracepoint_rpc__unparsable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__unparsable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__unparsable, ptr null, ptr @__traceiter_rpc__unparsable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__unparsable = internal constant ptr @__tracepoint_rpc__unparsable, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__mismatch = internal constant [14 x i8] c"rpc__mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__mismatch }, align 4
@__tracepoint_rpc__mismatch = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__mismatch, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__mismatch, ptr null, ptr @__traceiter_rpc__mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__mismatch = internal constant ptr @__tracepoint_rpc__mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__stale_creds = internal constant [17 x i8] c"rpc__stale_creds\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__stale_creds = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__stale_creds }, align 4
@__tracepoint_rpc__stale_creds = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__stale_creds, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__stale_creds, ptr null, ptr @__traceiter_rpc__stale_creds, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__stale_creds = internal constant ptr @__tracepoint_rpc__stale_creds, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__bad_creds = internal constant [15 x i8] c"rpc__bad_creds\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__bad_creds = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__bad_creds }, align 4
@__tracepoint_rpc__bad_creds = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__bad_creds, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__bad_creds, ptr null, ptr @__traceiter_rpc__bad_creds, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__bad_creds = internal constant ptr @__tracepoint_rpc__bad_creds, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc__auth_tooweak = internal constant [18 x i8] c"rpc__auth_tooweak\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc__auth_tooweak = dso_local global %struct.static_call_key { ptr @__traceiter_rpc__auth_tooweak }, align 4
@__tracepoint_rpc__auth_tooweak = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc__auth_tooweak, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc__auth_tooweak, ptr null, ptr @__traceiter_rpc__auth_tooweak, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc__auth_tooweak = internal constant ptr @__tracepoint_rpc__auth_tooweak, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_prog_unavail_err = internal constant [22 x i8] c"rpcb_prog_unavail_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_prog_unavail_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_prog_unavail_err }, align 4
@__tracepoint_rpcb_prog_unavail_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_prog_unavail_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_prog_unavail_err, ptr null, ptr @__traceiter_rpcb_prog_unavail_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_prog_unavail_err = internal constant ptr @__tracepoint_rpcb_prog_unavail_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_timeout_err = internal constant [17 x i8] c"rpcb_timeout_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_timeout_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_timeout_err }, align 4
@__tracepoint_rpcb_timeout_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_timeout_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_timeout_err, ptr null, ptr @__traceiter_rpcb_timeout_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_timeout_err = internal constant ptr @__tracepoint_rpcb_timeout_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_bind_version_err = internal constant [22 x i8] c"rpcb_bind_version_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_bind_version_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_bind_version_err }, align 4
@__tracepoint_rpcb_bind_version_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_bind_version_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_bind_version_err, ptr null, ptr @__traceiter_rpcb_bind_version_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_bind_version_err = internal constant ptr @__tracepoint_rpcb_bind_version_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_unreachable_err = internal constant [21 x i8] c"rpcb_unreachable_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_unreachable_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_unreachable_err }, align 4
@__tracepoint_rpcb_unreachable_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_unreachable_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_unreachable_err, ptr null, ptr @__traceiter_rpcb_unreachable_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_unreachable_err = internal constant ptr @__tracepoint_rpcb_unreachable_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_unrecognized_err = internal constant [22 x i8] c"rpcb_unrecognized_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_unrecognized_err = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_unrecognized_err }, align 4
@__tracepoint_rpcb_unrecognized_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_unrecognized_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_unrecognized_err, ptr null, ptr @__traceiter_rpcb_unrecognized_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_unrecognized_err = internal constant ptr @__tracepoint_rpcb_unrecognized_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_buf_alloc = internal constant [14 x i8] c"rpc_buf_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_buf_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_buf_alloc }, align 4
@__tracepoint_rpc_buf_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_buf_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_buf_alloc, ptr null, ptr @__traceiter_rpc_buf_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_buf_alloc = internal constant ptr @__tracepoint_rpc_buf_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_call_rpcerror = internal constant [18 x i8] c"rpc_call_rpcerror\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_call_rpcerror = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_call_rpcerror }, align 4
@__tracepoint_rpc_call_rpcerror = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_call_rpcerror, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_call_rpcerror, ptr null, ptr @__traceiter_rpc_call_rpcerror, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_call_rpcerror = internal constant ptr @__tracepoint_rpc_call_rpcerror, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_stats_latency = internal constant [18 x i8] c"rpc_stats_latency\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_stats_latency = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_stats_latency }, align 4
@__tracepoint_rpc_stats_latency = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_stats_latency, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_stats_latency, ptr null, ptr @__traceiter_rpc_stats_latency, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_stats_latency = internal constant ptr @__tracepoint_rpc_stats_latency, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_overflow = internal constant [17 x i8] c"rpc_xdr_overflow\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_overflow = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_overflow }, align 4
@__tracepoint_rpc_xdr_overflow = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_xdr_overflow, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_overflow, ptr null, ptr @__traceiter_rpc_xdr_overflow, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_overflow = internal constant ptr @__tracepoint_rpc_xdr_overflow, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_xdr_alignment = internal constant [18 x i8] c"rpc_xdr_alignment\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_xdr_alignment = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_xdr_alignment }, align 4
@__tracepoint_rpc_xdr_alignment = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_xdr_alignment, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_xdr_alignment, ptr null, ptr @__traceiter_rpc_xdr_alignment, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_xdr_alignment = internal constant ptr @__tracepoint_rpc_xdr_alignment, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_state_change = internal constant [24 x i8] c"rpc_socket_state_change\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_state_change = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_state_change }, align 4
@__tracepoint_rpc_socket_state_change = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_state_change, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_state_change, ptr null, ptr @__traceiter_rpc_socket_state_change, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_state_change = internal constant ptr @__tracepoint_rpc_socket_state_change, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_connect = internal constant [19 x i8] c"rpc_socket_connect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_connect = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_connect }, align 4
@__tracepoint_rpc_socket_connect = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_connect, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_connect, ptr null, ptr @__traceiter_rpc_socket_connect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_connect = internal constant ptr @__tracepoint_rpc_socket_connect, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_error = internal constant [17 x i8] c"rpc_socket_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_error = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_error }, align 4
@__tracepoint_rpc_socket_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_error, ptr null, ptr @__traceiter_rpc_socket_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_error = internal constant ptr @__tracepoint_rpc_socket_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_reset_connection = internal constant [28 x i8] c"rpc_socket_reset_connection\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_reset_connection = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_reset_connection }, align 4
@__tracepoint_rpc_socket_reset_connection = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_reset_connection, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_reset_connection, ptr null, ptr @__traceiter_rpc_socket_reset_connection, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_reset_connection = internal constant ptr @__tracepoint_rpc_socket_reset_connection, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_close = internal constant [17 x i8] c"rpc_socket_close\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_close = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_close }, align 4
@__tracepoint_rpc_socket_close = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_close, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_close, ptr null, ptr @__traceiter_rpc_socket_close, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_close = internal constant ptr @__tracepoint_rpc_socket_close, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_shutdown = internal constant [20 x i8] c"rpc_socket_shutdown\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_shutdown = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_shutdown }, align 4
@__tracepoint_rpc_socket_shutdown = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_shutdown, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_shutdown, ptr null, ptr @__traceiter_rpc_socket_shutdown, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_shutdown = internal constant ptr @__tracepoint_rpc_socket_shutdown, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpc_socket_nospace = internal constant [19 x i8] c"rpc_socket_nospace\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpc_socket_nospace = dso_local global %struct.static_call_key { ptr @__traceiter_rpc_socket_nospace }, align 4
@__tracepoint_rpc_socket_nospace = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpc_socket_nospace, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpc_socket_nospace, ptr null, ptr @__traceiter_rpc_socket_nospace, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpc_socket_nospace = internal constant ptr @__tracepoint_rpc_socket_nospace, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_create = internal constant [12 x i8] c"xprt_create\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_create = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_create }, align 4
@__tracepoint_xprt_create = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_create, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_create, ptr null, ptr @__traceiter_xprt_create, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_create = internal constant ptr @__tracepoint_xprt_create, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_connect = internal constant [13 x i8] c"xprt_connect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_connect = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_connect }, align 4
@__tracepoint_xprt_connect = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_connect, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_connect, ptr null, ptr @__traceiter_xprt_connect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_connect = internal constant ptr @__tracepoint_xprt_connect, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_auto = internal constant [21 x i8] c"xprt_disconnect_auto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_auto = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_auto }, align 4
@__tracepoint_xprt_disconnect_auto = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_disconnect_auto, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_auto, ptr null, ptr @__traceiter_xprt_disconnect_auto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_auto = internal constant ptr @__tracepoint_xprt_disconnect_auto, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_done = internal constant [21 x i8] c"xprt_disconnect_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_done = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_done }, align 4
@__tracepoint_xprt_disconnect_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_disconnect_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_done, ptr null, ptr @__traceiter_xprt_disconnect_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_done = internal constant ptr @__tracepoint_xprt_disconnect_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_force = internal constant [22 x i8] c"xprt_disconnect_force\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_force = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_force }, align 4
@__tracepoint_xprt_disconnect_force = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_disconnect_force, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_force, ptr null, ptr @__traceiter_xprt_disconnect_force, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_force = internal constant ptr @__tracepoint_xprt_disconnect_force, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_disconnect_cleanup = internal constant [24 x i8] c"xprt_disconnect_cleanup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_disconnect_cleanup = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_disconnect_cleanup }, align 4
@__tracepoint_xprt_disconnect_cleanup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_disconnect_cleanup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_disconnect_cleanup, ptr null, ptr @__traceiter_xprt_disconnect_cleanup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_disconnect_cleanup = internal constant ptr @__tracepoint_xprt_disconnect_cleanup, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_destroy = internal constant [13 x i8] c"xprt_destroy\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_destroy = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_destroy }, align 4
@__tracepoint_xprt_destroy = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_destroy, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_destroy, ptr null, ptr @__traceiter_xprt_destroy, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_destroy = internal constant ptr @__tracepoint_xprt_destroy, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_timer = internal constant [11 x i8] c"xprt_timer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_timer = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_timer }, align 4
@__tracepoint_xprt_timer = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_timer, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_timer, ptr null, ptr @__traceiter_xprt_timer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_timer = internal constant ptr @__tracepoint_xprt_timer, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_lookup_rqst = internal constant [17 x i8] c"xprt_lookup_rqst\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_lookup_rqst = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_lookup_rqst }, align 4
@__tracepoint_xprt_lookup_rqst = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_lookup_rqst, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_lookup_rqst, ptr null, ptr @__traceiter_xprt_lookup_rqst, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_lookup_rqst = internal constant ptr @__tracepoint_xprt_lookup_rqst, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_transmit = internal constant [14 x i8] c"xprt_transmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_transmit = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_transmit }, align 4
@__tracepoint_xprt_transmit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_transmit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_transmit, ptr null, ptr @__traceiter_xprt_transmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_transmit = internal constant ptr @__tracepoint_xprt_transmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_retransmit = internal constant [16 x i8] c"xprt_retransmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_retransmit = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_retransmit }, align 4
@__tracepoint_xprt_retransmit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_retransmit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_retransmit, ptr null, ptr @__traceiter_xprt_retransmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_retransmit = internal constant ptr @__tracepoint_xprt_retransmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_ping = internal constant [10 x i8] c"xprt_ping\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_ping = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_ping }, align 4
@__tracepoint_xprt_ping = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_ping, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_ping, ptr null, ptr @__traceiter_xprt_ping, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_ping = internal constant ptr @__tracepoint_xprt_ping, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_reserve_xprt = internal constant [18 x i8] c"xprt_reserve_xprt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_reserve_xprt = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_reserve_xprt }, align 4
@__tracepoint_xprt_reserve_xprt = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_reserve_xprt, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_reserve_xprt, ptr null, ptr @__traceiter_xprt_reserve_xprt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_reserve_xprt = internal constant ptr @__tracepoint_xprt_reserve_xprt, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_release_xprt = internal constant [18 x i8] c"xprt_release_xprt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_release_xprt = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_release_xprt }, align 4
@__tracepoint_xprt_release_xprt = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_release_xprt, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_release_xprt, ptr null, ptr @__traceiter_xprt_release_xprt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_release_xprt = internal constant ptr @__tracepoint_xprt_release_xprt, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_reserve_cong = internal constant [18 x i8] c"xprt_reserve_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_reserve_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_reserve_cong }, align 4
@__tracepoint_xprt_reserve_cong = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_reserve_cong, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_reserve_cong, ptr null, ptr @__traceiter_xprt_reserve_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_reserve_cong = internal constant ptr @__tracepoint_xprt_reserve_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_release_cong = internal constant [18 x i8] c"xprt_release_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_release_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_release_cong }, align 4
@__tracepoint_xprt_release_cong = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_release_cong, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_release_cong, ptr null, ptr @__traceiter_xprt_release_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_release_cong = internal constant ptr @__tracepoint_xprt_release_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_get_cong = internal constant [14 x i8] c"xprt_get_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_get_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_get_cong }, align 4
@__tracepoint_xprt_get_cong = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_get_cong, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_get_cong, ptr null, ptr @__traceiter_xprt_get_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_get_cong = internal constant ptr @__tracepoint_xprt_get_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_put_cong = internal constant [14 x i8] c"xprt_put_cong\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_put_cong = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_put_cong }, align 4
@__tracepoint_xprt_put_cong = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_put_cong, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_put_cong, ptr null, ptr @__traceiter_xprt_put_cong, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_put_cong = internal constant ptr @__tracepoint_xprt_put_cong, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprt_reserve = internal constant [13 x i8] c"xprt_reserve\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprt_reserve = dso_local global %struct.static_call_key { ptr @__traceiter_xprt_reserve }, align 4
@__tracepoint_xprt_reserve = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprt_reserve, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprt_reserve, ptr null, ptr @__traceiter_xprt_reserve, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprt_reserve = internal constant ptr @__tracepoint_xprt_reserve, section "__tracepoints_ptrs", align 4
@__tpstrtab_xs_stream_read_data = internal constant [20 x i8] c"xs_stream_read_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xs_stream_read_data = dso_local global %struct.static_call_key { ptr @__traceiter_xs_stream_read_data }, align 4
@__tracepoint_xs_stream_read_data = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xs_stream_read_data, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xs_stream_read_data, ptr null, ptr @__traceiter_xs_stream_read_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xs_stream_read_data = internal constant ptr @__tracepoint_xs_stream_read_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_xs_stream_read_request = internal constant [23 x i8] c"xs_stream_read_request\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xs_stream_read_request = dso_local global %struct.static_call_key { ptr @__traceiter_xs_stream_read_request }, align 4
@__tracepoint_xs_stream_read_request = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xs_stream_read_request, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xs_stream_read_request, ptr null, ptr @__traceiter_xs_stream_read_request, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xs_stream_read_request = internal constant ptr @__tracepoint_xs_stream_read_request, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_getport = internal constant [13 x i8] c"rpcb_getport\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_getport = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_getport }, align 4
@__tracepoint_rpcb_getport = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_getport, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_getport, ptr null, ptr @__traceiter_rpcb_getport, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_getport = internal constant ptr @__tracepoint_rpcb_getport, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_setport = internal constant [13 x i8] c"rpcb_setport\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_setport = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_setport }, align 4
@__tracepoint_rpcb_setport = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_setport, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_setport, ptr null, ptr @__traceiter_rpcb_setport, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_setport = internal constant ptr @__tracepoint_rpcb_setport, section "__tracepoints_ptrs", align 4
@__tpstrtab_pmap_register = internal constant [14 x i8] c"pmap_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_pmap_register = dso_local global %struct.static_call_key { ptr @__traceiter_pmap_register }, align 4
@__tracepoint_pmap_register = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_pmap_register, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_pmap_register, ptr null, ptr @__traceiter_pmap_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_pmap_register = internal constant ptr @__tracepoint_pmap_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_register = internal constant [14 x i8] c"rpcb_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_register = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_register }, align 4
@__tracepoint_rpcb_register = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_register, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_register, ptr null, ptr @__traceiter_rpcb_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_register = internal constant ptr @__tracepoint_rpcb_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_rpcb_unregister = internal constant [16 x i8] c"rpcb_unregister\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rpcb_unregister = dso_local global %struct.static_call_key { ptr @__traceiter_rpcb_unregister }, align 4
@__tracepoint_rpcb_unregister = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rpcb_unregister, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rpcb_unregister, ptr null, ptr @__traceiter_rpcb_unregister, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rpcb_unregister = internal constant ptr @__tracepoint_rpcb_unregister, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xdr_recvfrom = internal constant [17 x i8] c"svc_xdr_recvfrom\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xdr_recvfrom = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xdr_recvfrom }, align 4
@__tracepoint_svc_xdr_recvfrom = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xdr_recvfrom, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xdr_recvfrom, ptr null, ptr @__traceiter_svc_xdr_recvfrom, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xdr_recvfrom = internal constant ptr @__tracepoint_svc_xdr_recvfrom, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xdr_sendto = internal constant [15 x i8] c"svc_xdr_sendto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xdr_sendto = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xdr_sendto }, align 4
@__tracepoint_svc_xdr_sendto = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xdr_sendto, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xdr_sendto, ptr null, ptr @__traceiter_svc_xdr_sendto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xdr_sendto = internal constant ptr @__tracepoint_svc_xdr_sendto, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_authenticate = internal constant [17 x i8] c"svc_authenticate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_authenticate = dso_local global %struct.static_call_key { ptr @__traceiter_svc_authenticate }, align 4
@__tracepoint_svc_authenticate = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_authenticate, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_authenticate, ptr null, ptr @__traceiter_svc_authenticate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_authenticate = internal constant ptr @__tracepoint_svc_authenticate, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_process = internal constant [12 x i8] c"svc_process\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_process = dso_local global %struct.static_call_key { ptr @__traceiter_svc_process }, align 4
@__tracepoint_svc_process = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_process, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_process, ptr null, ptr @__traceiter_svc_process, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_process = internal constant ptr @__tracepoint_svc_process, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer = internal constant [10 x i8] c"svc_defer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer }, align 4
@__tracepoint_svc_defer = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_defer, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_defer, ptr null, ptr @__traceiter_svc_defer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer = internal constant ptr @__tracepoint_svc_defer, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_drop = internal constant [9 x i8] c"svc_drop\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_drop = dso_local global %struct.static_call_key { ptr @__traceiter_svc_drop }, align 4
@__tracepoint_svc_drop = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_drop, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_drop, ptr null, ptr @__traceiter_svc_drop, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_drop = internal constant ptr @__tracepoint_svc_drop, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_send = internal constant [9 x i8] c"svc_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_send = dso_local global %struct.static_call_key { ptr @__traceiter_svc_send }, align 4
@__tracepoint_svc_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_send, ptr null, ptr @__traceiter_svc_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_send = internal constant ptr @__tracepoint_svc_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_create_err = internal constant [20 x i8] c"svc_xprt_create_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_create_err = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_create_err }, align 4
@__tracepoint_svc_xprt_create_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_create_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_create_err, ptr null, ptr @__traceiter_svc_xprt_create_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_create_err = internal constant ptr @__tracepoint_svc_xprt_create_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_enqueue = internal constant [17 x i8] c"svc_xprt_enqueue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_enqueue = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_enqueue }, align 4
@__tracepoint_svc_xprt_enqueue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_enqueue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_enqueue, ptr null, ptr @__traceiter_svc_xprt_enqueue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_enqueue = internal constant ptr @__tracepoint_svc_xprt_enqueue, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_no_write_space = internal constant [24 x i8] c"svc_xprt_no_write_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_no_write_space = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_no_write_space }, align 4
@__tracepoint_svc_xprt_no_write_space = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_no_write_space, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_no_write_space, ptr null, ptr @__traceiter_svc_xprt_no_write_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_no_write_space = internal constant ptr @__tracepoint_svc_xprt_no_write_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_close = internal constant [15 x i8] c"svc_xprt_close\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_close = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_close }, align 4
@__tracepoint_svc_xprt_close = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_close, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_close, ptr null, ptr @__traceiter_svc_xprt_close, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_close = internal constant ptr @__tracepoint_svc_xprt_close, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_detach = internal constant [16 x i8] c"svc_xprt_detach\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_detach = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_detach }, align 4
@__tracepoint_svc_xprt_detach = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_detach, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_detach, ptr null, ptr @__traceiter_svc_xprt_detach, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_detach = internal constant ptr @__tracepoint_svc_xprt_detach, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_free = internal constant [14 x i8] c"svc_xprt_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_free = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_free }, align 4
@__tracepoint_svc_xprt_free = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_free, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_free, ptr null, ptr @__traceiter_svc_xprt_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_free = internal constant ptr @__tracepoint_svc_xprt_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_accept = internal constant [16 x i8] c"svc_xprt_accept\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_accept = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_accept }, align 4
@__tracepoint_svc_xprt_accept = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_accept, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_accept, ptr null, ptr @__traceiter_svc_xprt_accept, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_accept = internal constant ptr @__tracepoint_svc_xprt_accept, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_xprt_dequeue = internal constant [17 x i8] c"svc_xprt_dequeue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_xprt_dequeue = dso_local global %struct.static_call_key { ptr @__traceiter_svc_xprt_dequeue }, align 4
@__tracepoint_svc_xprt_dequeue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_xprt_dequeue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_xprt_dequeue, ptr null, ptr @__traceiter_svc_xprt_dequeue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_xprt_dequeue = internal constant ptr @__tracepoint_svc_xprt_dequeue, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_wake_up = internal constant [12 x i8] c"svc_wake_up\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_wake_up = dso_local global %struct.static_call_key { ptr @__traceiter_svc_wake_up }, align 4
@__tracepoint_svc_wake_up = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_wake_up, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_wake_up, ptr null, ptr @__traceiter_svc_wake_up, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_wake_up = internal constant ptr @__tracepoint_svc_wake_up, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_alloc_arg_err = internal constant [18 x i8] c"svc_alloc_arg_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_alloc_arg_err = dso_local global %struct.static_call_key { ptr @__traceiter_svc_alloc_arg_err }, align 4
@__tracepoint_svc_alloc_arg_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_alloc_arg_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_alloc_arg_err, ptr null, ptr @__traceiter_svc_alloc_arg_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_alloc_arg_err = internal constant ptr @__tracepoint_svc_alloc_arg_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_stats_latency = internal constant [18 x i8] c"svc_stats_latency\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_stats_latency = dso_local global %struct.static_call_key { ptr @__traceiter_svc_stats_latency }, align 4
@__tracepoint_svc_stats_latency = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_stats_latency, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_stats_latency, ptr null, ptr @__traceiter_svc_stats_latency, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_stats_latency = internal constant ptr @__tracepoint_svc_stats_latency, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer_drop = internal constant [15 x i8] c"svc_defer_drop\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer_drop = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer_drop }, align 4
@__tracepoint_svc_defer_drop = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_defer_drop, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_defer_drop, ptr null, ptr @__traceiter_svc_defer_drop, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer_drop = internal constant ptr @__tracepoint_svc_defer_drop, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer_queue = internal constant [16 x i8] c"svc_defer_queue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer_queue = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer_queue }, align 4
@__tracepoint_svc_defer_queue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_defer_queue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_defer_queue, ptr null, ptr @__traceiter_svc_defer_queue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer_queue = internal constant ptr @__tracepoint_svc_defer_queue, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_defer_recv = internal constant [15 x i8] c"svc_defer_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_defer_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svc_defer_recv }, align 4
@__tracepoint_svc_defer_recv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_defer_recv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_defer_recv, ptr null, ptr @__traceiter_svc_defer_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_defer_recv = internal constant ptr @__tracepoint_svc_defer_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_new_socket = internal constant [19 x i8] c"svcsock_new_socket\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_new_socket = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_new_socket }, align 4
@__tracepoint_svcsock_new_socket = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_new_socket, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_new_socket, ptr null, ptr @__traceiter_svcsock_new_socket, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_new_socket = internal constant ptr @__tracepoint_svcsock_new_socket, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_marker = internal constant [15 x i8] c"svcsock_marker\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_marker = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_marker }, align 4
@__tracepoint_svcsock_marker = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_marker, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_marker, ptr null, ptr @__traceiter_svcsock_marker, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_marker = internal constant ptr @__tracepoint_svcsock_marker, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_udp_send = internal constant [17 x i8] c"svcsock_udp_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_udp_send = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_udp_send }, align 4
@__tracepoint_svcsock_udp_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_udp_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_udp_send, ptr null, ptr @__traceiter_svcsock_udp_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_udp_send = internal constant ptr @__tracepoint_svcsock_udp_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_udp_recv = internal constant [17 x i8] c"svcsock_udp_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_udp_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_udp_recv }, align 4
@__tracepoint_svcsock_udp_recv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_udp_recv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_udp_recv, ptr null, ptr @__traceiter_svcsock_udp_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_udp_recv = internal constant ptr @__tracepoint_svcsock_udp_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_udp_recv_err = internal constant [21 x i8] c"svcsock_udp_recv_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_udp_recv_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_udp_recv_err }, align 4
@__tracepoint_svcsock_udp_recv_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_udp_recv_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_udp_recv_err, ptr null, ptr @__traceiter_svcsock_udp_recv_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_udp_recv_err = internal constant ptr @__tracepoint_svcsock_udp_recv_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_send = internal constant [17 x i8] c"svcsock_tcp_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_send = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_send }, align 4
@__tracepoint_svcsock_tcp_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_tcp_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_send, ptr null, ptr @__traceiter_svcsock_tcp_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_send = internal constant ptr @__tracepoint_svcsock_tcp_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv = internal constant [17 x i8] c"svcsock_tcp_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv }, align 4
@__tracepoint_svcsock_tcp_recv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_tcp_recv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv, ptr null, ptr @__traceiter_svcsock_tcp_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv = internal constant ptr @__tracepoint_svcsock_tcp_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv_eagain = internal constant [24 x i8] c"svcsock_tcp_recv_eagain\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv_eagain = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv_eagain }, align 4
@__tracepoint_svcsock_tcp_recv_eagain = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_tcp_recv_eagain, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv_eagain, ptr null, ptr @__traceiter_svcsock_tcp_recv_eagain, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv_eagain = internal constant ptr @__tracepoint_svcsock_tcp_recv_eagain, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv_err = internal constant [21 x i8] c"svcsock_tcp_recv_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv_err }, align 4
@__tracepoint_svcsock_tcp_recv_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_tcp_recv_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv_err, ptr null, ptr @__traceiter_svcsock_tcp_recv_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv_err = internal constant ptr @__tracepoint_svcsock_tcp_recv_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_data_ready = internal constant [19 x i8] c"svcsock_data_ready\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_data_ready = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_data_ready }, align 4
@__tracepoint_svcsock_data_ready = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_data_ready, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_data_ready, ptr null, ptr @__traceiter_svcsock_data_ready, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_data_ready = internal constant ptr @__tracepoint_svcsock_data_ready, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_write_space = internal constant [20 x i8] c"svcsock_write_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_write_space = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_write_space }, align 4
@__tracepoint_svcsock_write_space = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_write_space, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_write_space, ptr null, ptr @__traceiter_svcsock_write_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_write_space = internal constant ptr @__tracepoint_svcsock_write_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_recv_short = internal constant [23 x i8] c"svcsock_tcp_recv_short\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_recv_short = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_recv_short }, align 4
@__tracepoint_svcsock_tcp_recv_short = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_tcp_recv_short, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_recv_short, ptr null, ptr @__traceiter_svcsock_tcp_recv_short, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_recv_short = internal constant ptr @__tracepoint_svcsock_tcp_recv_short, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_tcp_state = internal constant [18 x i8] c"svcsock_tcp_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_tcp_state = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_tcp_state }, align 4
@__tracepoint_svcsock_tcp_state = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_tcp_state, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_tcp_state, ptr null, ptr @__traceiter_svcsock_tcp_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_tcp_state = internal constant ptr @__tracepoint_svcsock_tcp_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_accept_err = internal constant [19 x i8] c"svcsock_accept_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_accept_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_accept_err }, align 4
@__tracepoint_svcsock_accept_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_accept_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_accept_err, ptr null, ptr @__traceiter_svcsock_accept_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_accept_err = internal constant ptr @__tracepoint_svcsock_accept_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcsock_getpeername_err = internal constant [24 x i8] c"svcsock_getpeername_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcsock_getpeername_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcsock_getpeername_err }, align 4
@__tracepoint_svcsock_getpeername_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcsock_getpeername_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcsock_getpeername_err, ptr null, ptr @__traceiter_svcsock_getpeername_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcsock_getpeername_err = internal constant ptr @__tracepoint_svcsock_getpeername_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_expired = internal constant [20 x i8] c"cache_entry_expired\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_expired = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_expired }, align 4
@__tracepoint_cache_entry_expired = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cache_entry_expired, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cache_entry_expired, ptr null, ptr @__traceiter_cache_entry_expired, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_expired = internal constant ptr @__tracepoint_cache_entry_expired, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_upcall = internal constant [19 x i8] c"cache_entry_upcall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_upcall = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_upcall }, align 4
@__tracepoint_cache_entry_upcall = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cache_entry_upcall, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cache_entry_upcall, ptr null, ptr @__traceiter_cache_entry_upcall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_upcall = internal constant ptr @__tracepoint_cache_entry_upcall, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_update = internal constant [19 x i8] c"cache_entry_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_update = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_update }, align 4
@__tracepoint_cache_entry_update = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cache_entry_update, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cache_entry_update, ptr null, ptr @__traceiter_cache_entry_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_update = internal constant ptr @__tracepoint_cache_entry_update, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_make_negative = internal constant [26 x i8] c"cache_entry_make_negative\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_make_negative = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_make_negative }, align 4
@__tracepoint_cache_entry_make_negative = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cache_entry_make_negative, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cache_entry_make_negative, ptr null, ptr @__traceiter_cache_entry_make_negative, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_make_negative = internal constant ptr @__tracepoint_cache_entry_make_negative, section "__tracepoints_ptrs", align 4
@__tpstrtab_cache_entry_no_listener = internal constant [24 x i8] c"cache_entry_no_listener\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cache_entry_no_listener = dso_local global %struct.static_call_key { ptr @__traceiter_cache_entry_no_listener }, align 4
@__tracepoint_cache_entry_no_listener = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cache_entry_no_listener, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cache_entry_no_listener, ptr null, ptr @__traceiter_cache_entry_no_listener, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cache_entry_no_listener = internal constant ptr @__tracepoint_cache_entry_no_listener, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_register = internal constant [13 x i8] c"svc_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_register = dso_local global %struct.static_call_key { ptr @__traceiter_svc_register }, align 4
@__tracepoint_svc_register = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_register, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_register, ptr null, ptr @__traceiter_svc_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_register = internal constant ptr @__tracepoint_svc_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_noregister = internal constant [15 x i8] c"svc_noregister\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_noregister = dso_local global %struct.static_call_key { ptr @__traceiter_svc_noregister }, align 4
@__tracepoint_svc_noregister = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_noregister, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_noregister, ptr null, ptr @__traceiter_svc_noregister, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_noregister = internal constant ptr @__tracepoint_svc_noregister, section "__tracepoints_ptrs", align 4
@__tpstrtab_svc_unregister = internal constant [15 x i8] c"svc_unregister\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svc_unregister = dso_local global %struct.static_call_key { ptr @__traceiter_svc_unregister }, align 4
@__tracepoint_svc_unregister = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svc_unregister, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svc_unregister, ptr null, ptr @__traceiter_svc_unregister, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svc_unregister = internal constant ptr @__tracepoint_svc_unregister, section "__tracepoints_ptrs", align 4
@str__sunrpc__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"sunrpc\00", [25 x i8] zeroinitializer }, align 32
@.str = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SOCK_STREAM\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_STREAM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_STREAM = internal global ptr @__TRACE_SYSTEM_SOCK_STREAM, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SOCK_DGRAM\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_DGRAM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.1, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_DGRAM = internal global ptr @__TRACE_SYSTEM_SOCK_DGRAM, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SOCK_RAW\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_RAW = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.2, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_RAW = internal global ptr @__TRACE_SYSTEM_SOCK_RAW, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SOCK_RDM\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_RDM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.3, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_RDM = internal global ptr @__TRACE_SYSTEM_SOCK_RDM, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"SOCK_SEQPACKET\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_SEQPACKET = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.4, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_SEQPACKET = internal global ptr @__TRACE_SYSTEM_SOCK_SEQPACKET, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SOCK_DCCP\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_DCCP = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.5, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_DCCP = internal global ptr @__TRACE_SYSTEM_SOCK_DCCP, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SOCK_PACKET\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SOCK_PACKET = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.6, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_SOCK_PACKET = internal global ptr @__TRACE_SYSTEM_SOCK_PACKET, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"AF_UNSPEC\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_AF_UNSPEC = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.7, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_UNSPEC = internal global ptr @__TRACE_SYSTEM_AF_UNSPEC, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"AF_UNIX\00", [24 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_AF_UNIX = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.8, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_UNIX = internal global ptr @__TRACE_SYSTEM_AF_UNIX, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"AF_LOCAL\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_AF_LOCAL = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.9, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_LOCAL = internal global ptr @__TRACE_SYSTEM_AF_LOCAL, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"AF_INET\00", [24 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_AF_INET = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.10, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_INET = internal global ptr @__TRACE_SYSTEM_AF_INET, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"AF_INET6\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_AF_INET6 = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.11, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_AF_INET6 = internal global ptr @__TRACE_SYSTEM_AF_INET6, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"RPC_AUTH_OK\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_OK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.12, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_OK = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_OK, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RPC_AUTH_BADCRED\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_BADCRED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.13, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_BADCRED = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_BADCRED, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"RPC_AUTH_REJECTEDCRED\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.14, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RPC_AUTH_BADVERF\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_BADVERF = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.15, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_BADVERF = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_BADVERF, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"RPC_AUTH_REJECTEDVERF\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.16, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RPC_AUTH_TOOWEAK\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_TOOWEAK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.17, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_TOOWEAK = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_TOOWEAK, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"RPCSEC_GSS_CREDPROBLEM\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.18, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM = internal global ptr @__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"RPCSEC_GSS_CTXPROBLEM\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.19, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM = internal global ptr @__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SS_FREE\00", [24 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SS_FREE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.20, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_FREE = internal global ptr @__TRACE_SYSTEM_SS_FREE, section "_ftrace_eval_map", align 4
@.str.21 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"SS_UNCONNECTED\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SS_UNCONNECTED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.21, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_UNCONNECTED = internal global ptr @__TRACE_SYSTEM_SS_UNCONNECTED, section "_ftrace_eval_map", align 4
@.str.22 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"SS_CONNECTING\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SS_CONNECTING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.22, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_CONNECTING = internal global ptr @__TRACE_SYSTEM_SS_CONNECTING, section "_ftrace_eval_map", align 4
@.str.23 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SS_CONNECTED\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SS_CONNECTED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.23, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_CONNECTED = internal global ptr @__TRACE_SYSTEM_SS_CONNECTED, section "_ftrace_eval_map", align 4
@.str.24 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"SS_DISCONNECTING\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SS_DISCONNECTING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.24, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SS_DISCONNECTING = internal global ptr @__TRACE_SYSTEM_SS_DISCONNECTING, section "_ftrace_eval_map", align 4
@.str.25 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"TCP_ESTABLISHED\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_ESTABLISHED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.25, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_ESTABLISHED = internal global ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, section "_ftrace_eval_map", align 4
@.str.26 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_SYN_SENT\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_SYN_SENT = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.26, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_SYN_SENT = internal global ptr @__TRACE_SYSTEM_TCP_SYN_SENT, section "_ftrace_eval_map", align 4
@.str.27 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_SYN_RECV\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_SYN_RECV = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.27, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_SYN_RECV = internal global ptr @__TRACE_SYSTEM_TCP_SYN_RECV, section "_ftrace_eval_map", align 4
@.str.28 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_FIN_WAIT1\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_FIN_WAIT1 = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.28, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_FIN_WAIT1 = internal global ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, section "_ftrace_eval_map", align 4
@.str.29 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_FIN_WAIT2\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_FIN_WAIT2 = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.29, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_FIN_WAIT2 = internal global ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, section "_ftrace_eval_map", align 4
@.str.30 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_TIME_WAIT\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_TIME_WAIT = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.30, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_TIME_WAIT = internal global ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, section "_ftrace_eval_map", align 4
@.str.31 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"TCP_CLOSE\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_CLOSE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.31, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSE = internal global ptr @__TRACE_SYSTEM_TCP_CLOSE, section "_ftrace_eval_map", align 4
@.str.32 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"TCP_CLOSE_WAIT\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_CLOSE_WAIT = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.32, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSE_WAIT = internal global ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, section "_ftrace_eval_map", align 4
@.str.33 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_LAST_ACK\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_LAST_ACK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.33, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_LAST_ACK = internal global ptr @__TRACE_SYSTEM_TCP_LAST_ACK, section "_ftrace_eval_map", align 4
@.str.34 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"TCP_LISTEN\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_LISTEN = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.34, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_LISTEN = internal global ptr @__TRACE_SYSTEM_TCP_LISTEN, section "_ftrace_eval_map", align 4
@.str.35 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TCP_CLOSING\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_CLOSING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.35, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSING = internal global ptr @__TRACE_SYSTEM_TCP_CLOSING, section "_ftrace_eval_map", align 4
@.str.36 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RQ_SECURE\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_SECURE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.36, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_SECURE = internal global ptr @__TRACE_SYSTEM_RQ_SECURE, section "_ftrace_eval_map", align 4
@.str.37 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"RQ_LOCAL\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_LOCAL = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.37, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_LOCAL = internal global ptr @__TRACE_SYSTEM_RQ_LOCAL, section "_ftrace_eval_map", align 4
@.str.38 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"RQ_USEDEFERRAL\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_USEDEFERRAL = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.38, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_USEDEFERRAL = internal global ptr @__TRACE_SYSTEM_RQ_USEDEFERRAL, section "_ftrace_eval_map", align 4
@.str.39 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RQ_DROPME\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_DROPME = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.39, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_DROPME = internal global ptr @__TRACE_SYSTEM_RQ_DROPME, section "_ftrace_eval_map", align 4
@.str.40 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RQ_SPLICE_OK\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_SPLICE_OK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.40, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_SPLICE_OK = internal global ptr @__TRACE_SYSTEM_RQ_SPLICE_OK, section "_ftrace_eval_map", align 4
@.str.41 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RQ_VICTIM\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_VICTIM = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.41, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_VICTIM = internal global ptr @__TRACE_SYSTEM_RQ_VICTIM, section "_ftrace_eval_map", align 4
@.str.42 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RQ_BUSY\00", [24 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_BUSY = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.42, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_BUSY = internal global ptr @__TRACE_SYSTEM_RQ_BUSY, section "_ftrace_eval_map", align 4
@.str.43 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RQ_DATA\00", [24 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RQ_DATA = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.43, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_RQ_DATA = internal global ptr @__TRACE_SYSTEM_RQ_DATA, section "_ftrace_eval_map", align 4
@.str.44 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SVC_GARBAGE\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_GARBAGE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.44, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_GARBAGE = internal global ptr @__TRACE_SYSTEM_SVC_GARBAGE, section "_ftrace_eval_map", align 4
@.str.45 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SVC_SYSERR\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_SYSERR = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.45, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_SYSERR = internal global ptr @__TRACE_SYSTEM_SVC_SYSERR, section "_ftrace_eval_map", align 4
@.str.46 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SVC_VALID\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_VALID = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.46, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_VALID = internal global ptr @__TRACE_SYSTEM_SVC_VALID, section "_ftrace_eval_map", align 4
@.str.47 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SVC_NEGATIVE\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_NEGATIVE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.47, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_NEGATIVE = internal global ptr @__TRACE_SYSTEM_SVC_NEGATIVE, section "_ftrace_eval_map", align 4
@.str.48 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SVC_OK\00", [25 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_OK = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.48, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_OK = internal global ptr @__TRACE_SYSTEM_SVC_OK, section "_ftrace_eval_map", align 4
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SVC_DROP\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_DROP = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.49, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_DROP = internal global ptr @__TRACE_SYSTEM_SVC_DROP, section "_ftrace_eval_map", align 4
@.str.50 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SVC_CLOSE\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_CLOSE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.50, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_CLOSE = internal global ptr @__TRACE_SYSTEM_SVC_CLOSE, section "_ftrace_eval_map", align 4
@.str.51 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SVC_DENIED\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_DENIED = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.51, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_DENIED = internal global ptr @__TRACE_SYSTEM_SVC_DENIED, section "_ftrace_eval_map", align 4
@.str.52 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SVC_PENDING\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_PENDING = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.52, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_PENDING = internal global ptr @__TRACE_SYSTEM_SVC_PENDING, section "_ftrace_eval_map", align 4
@.str.53 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SVC_COMPLETE\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SVC_COMPLETE = internal global %struct.trace_eval_map { ptr @str__sunrpc__trace_system_name, ptr @.str.53, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_SVC_COMPLETE = internal global ptr @__TRACE_SYSTEM_SVC_COMPLETE, section "_ftrace_eval_map", align 4
@trace_event_fields_rpc_xdr_buf_class = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rpc_xdr_buf_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xdr_buf_class, ptr @perf_trace_rpc_xdr_buf_class, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xdr_buf_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xdr_buf_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xdr_buf_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xdr_buf_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_xdr_buf_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_xdr_buf_class = internal global { [201 x i8], [55 x i8] } { [201 x i8] c"\22task:%08x@%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\22, REC->task_id, REC->client_id, REC->head_base, REC->head_len, REC->page_len, REC->page_base, REC->tail_base, REC->tail_len, REC->msg_len\00", [55 x i8] zeroinitializer }, align 32
@event_rpc_xdr_sendto = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_buf_class, %union.anon.179 { ptr @__tracepoint_rpc_xdr_sendto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_buf_class }, ptr @print_fmt_rpc_xdr_buf_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_xdr_sendto = internal global ptr @event_rpc_xdr_sendto, section "_ftrace_events", align 4
@event_rpc_xdr_recvfrom = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_buf_class, %union.anon.179 { ptr @__tracepoint_rpc_xdr_recvfrom }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_buf_class }, ptr @print_fmt_rpc_xdr_buf_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_xdr_recvfrom = internal global ptr @event_rpc_xdr_recvfrom, section "_ftrace_events", align 4
@event_rpc_xdr_reply_pages = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_buf_class, %union.anon.179 { ptr @__tracepoint_rpc_xdr_reply_pages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_buf_class }, ptr @print_fmt_rpc_xdr_buf_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_xdr_reply_pages = internal global ptr @event_rpc_xdr_reply_pages, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_class = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rpc_clnt_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_class, ptr @perf_trace_rpc_clnt_class, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_clnt_class = internal global { [30 x i8], [34 x i8] } { [30 x i8] c"\22client=%08x\22, REC->client_id\00", [34 x i8] zeroinitializer }, align 32
@event_rpc_clnt_free = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.179 { ptr @__tracepoint_rpc_clnt_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_free = internal global ptr @event_rpc_clnt_free, section "_ftrace_events", align 4
@event_rpc_clnt_killall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.179 { ptr @__tracepoint_rpc_clnt_killall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_killall = internal global ptr @event_rpc_clnt_killall, section "_ftrace_events", align 4
@event_rpc_clnt_shutdown = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.179 { ptr @__tracepoint_rpc_clnt_shutdown }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_shutdown = internal global ptr @event_rpc_clnt_shutdown, section "_ftrace_events", align 4
@event_rpc_clnt_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.179 { ptr @__tracepoint_rpc_clnt_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_release = internal global ptr @event_rpc_clnt_release, section "_ftrace_events", align 4
@event_rpc_clnt_replace_xprt = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.179 { ptr @__tracepoint_rpc_clnt_replace_xprt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_replace_xprt = internal global ptr @event_rpc_clnt_replace_xprt, section "_ftrace_events", align 4
@event_rpc_clnt_replace_xprt_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_class, %union.anon.179 { ptr @__tracepoint_rpc_clnt_replace_xprt_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_class }, ptr @print_fmt_rpc_clnt_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_replace_xprt_err = internal global ptr @event_rpc_clnt_replace_xprt_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_new = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.77, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rpc_clnt_new = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_new, ptr @perf_trace_rpc_clnt_new, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_new, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_new, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_new, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_new = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_new, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_clnt_new = internal global { [137 x i8], [55 x i8] } { [137 x i8] c"\22client=%08x peer=[%s]:%s program=%s server=%s\22, REC->client_id, __get_str(addr), __get_str(port), __get_str(program), __get_str(server)\00", [55 x i8] zeroinitializer }, align 32
@event_rpc_clnt_new = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_new, %union.anon.179 { ptr @__tracepoint_rpc_clnt_new }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_new }, ptr @print_fmt_rpc_clnt_new, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_new = internal global ptr @event_rpc_clnt_new, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_new_err = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.77, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpc_clnt_new_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_new_err, ptr @perf_trace_rpc_clnt_new_err, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_new_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_new_err, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_new_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_new_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_new_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_clnt_new_err = internal global { [83 x i8], [45 x i8] } { [83 x i8] c"\22program=%s server=%s error=%d\22, __get_str(program), __get_str(server), REC->error\00", [45 x i8] zeroinitializer }, align 32
@event_rpc_clnt_new_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_new_err, %union.anon.179 { ptr @__tracepoint_rpc_clnt_new_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_new_err }, ptr @print_fmt_rpc_clnt_new_err, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_new_err = internal global ptr @event_rpc_clnt_new_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_clnt_clone_err = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rpc_clnt_clone_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_clnt_clone_err, ptr @perf_trace_rpc_clnt_clone_err, ptr @trace_event_reg, ptr @trace_event_fields_rpc_clnt_clone_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_clnt_clone_err, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_clnt_clone_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_clnt_clone_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_clnt_clone_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_clnt_clone_err = internal global { [51 x i8], [45 x i8] } { [51 x i8] c"\22client=%08x error=%d\22, REC->client_id, REC->error\00", [45 x i8] zeroinitializer }, align 32
@event_rpc_clnt_clone_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_clnt_clone_err, %union.anon.179 { ptr @__tracepoint_rpc_clnt_clone_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_clnt_clone_err }, ptr @print_fmt_rpc_clnt_clone_err, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_clnt_clone_err = internal global ptr @event_rpc_clnt_clone_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_task_status = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpc_task_status = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_task_status, ptr @perf_trace_rpc_task_status, ptr @trace_event_reg, ptr @trace_event_fields_rpc_task_status, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_task_status, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_task_status, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_task_status = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_task_status, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_task_status = internal global { [70 x i8], [58 x i8] } { [70 x i8] c"\22task:%08x@%08x status=%d\22, REC->task_id, REC->client_id, REC->status\00", [58 x i8] zeroinitializer }, align 32
@event_rpc_call_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.179 { ptr @__tracepoint_rpc_call_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_call_status = internal global ptr @event_rpc_call_status, section "_ftrace_events", align 4
@event_rpc_connect_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.179 { ptr @__tracepoint_rpc_connect_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_connect_status = internal global ptr @event_rpc_connect_status, section "_ftrace_events", align 4
@event_rpc_timeout_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.179 { ptr @__tracepoint_rpc_timeout_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_timeout_status = internal global ptr @event_rpc_timeout_status, section "_ftrace_events", align 4
@event_rpc_retry_refresh_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.179 { ptr @__tracepoint_rpc_retry_refresh_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_retry_refresh_status = internal global ptr @event_rpc_retry_refresh_status, section "_ftrace_events", align 4
@event_rpc_refresh_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_status, %union.anon.179 { ptr @__tracepoint_rpc_refresh_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_status }, ptr @print_fmt_rpc_task_status, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_refresh_status = internal global ptr @event_rpc_refresh_status, section "_ftrace_events", align 4
@trace_event_fields_rpc_request = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.177 { %struct.anon.178 { ptr @.str.87, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rpc_request = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_request, ptr @perf_trace_rpc_request, ptr @trace_event_reg, ptr @trace_event_fields_rpc_request, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_request, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_request, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_request = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_request, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_request = internal global { [143 x i8], [49 x i8] } { [143 x i8] c"\22task:%08x@%08x %sv%d %s (%ssync)\22, REC->task_id, REC->client_id, __get_str(progname), REC->version, __get_str(procname), REC->async ? \22a\22: \22\22\00", [49 x i8] zeroinitializer }, align 32
@event_rpc_request = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_request, %union.anon.179 { ptr @__tracepoint_rpc_request }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_request }, ptr @print_fmt_rpc_request, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_request = internal global ptr @event_rpc_request, section "_ftrace_events", align 4
@trace_event_fields_rpc_task_running = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rpc_task_running = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_task_running, ptr @perf_trace_rpc_task_running, ptr @trace_event_reg, ptr @trace_event_fields_rpc_task_running, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_task_running, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_task_running, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_task_running = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_task_running, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_task_running = internal global { [735 x i8], [161 x i8] } { [735 x i8] c"\22task:%08x@%08x flags=%s runstate=%s status=%d action=%ps\22, REC->task_id, REC->client_id, __print_flags(REC->flags, \22|\22, { 0x0001, \22ASYNC\22 }, { 0x0002, \22SWAPPER\22 }, { 0x0004, \22MOVEABLE\22 }, { 0x0010, \22NULLCREDS\22 }, { 0x0020, \22MAJORSEEN\22 }, { 0x0040, \22ROOTCREDS\22 }, { 0x0080, \22DYNAMIC\22 }, { 0x0100, \22NO_ROUND_ROBIN\22 }, { 0x0200, \22SOFT\22 }, { 0x0400, \22SOFTCONN\22 }, { 0x0800, \22SENT\22 }, { 0x1000, \22TIMEOUT\22 }, { 0x2000, \22NOCONNECT\22 }, { 0x4000, \22NORTO\22 }, { 0x8000, \22CRED_NOREF\22 }), __print_flags(REC->runstate, \22|\22, { (1UL << 0), \22RUNNING\22 }, { (1UL << 1), \22QUEUED\22 }, { (1UL << 2), \22ACTIVE\22 }, { (1UL << 3), \22NEED_XMIT\22 }, { (1UL << 4), \22NEED_RECV\22 }, { (1UL << 5), \22MSG_PIN_WAIT\22 }, { (1UL << 6), \22SIGNALLED\22 }), REC->status, REC->action\00", [161 x i8] zeroinitializer }, align 32
@event_rpc_task_begin = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_begin = internal global ptr @event_rpc_task_begin, section "_ftrace_events", align 4
@event_rpc_task_run_action = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_run_action }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_run_action = internal global ptr @event_rpc_task_run_action, section "_ftrace_events", align 4
@event_rpc_task_sync_sleep = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_sync_sleep }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_sync_sleep = internal global ptr @event_rpc_task_sync_sleep, section "_ftrace_events", align 4
@event_rpc_task_sync_wake = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_sync_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_sync_wake = internal global ptr @event_rpc_task_sync_wake, section "_ftrace_events", align 4
@event_rpc_task_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_complete = internal global ptr @event_rpc_task_complete, section "_ftrace_events", align 4
@event_rpc_task_timeout = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_timeout }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_timeout = internal global ptr @event_rpc_task_timeout, section "_ftrace_events", align 4
@event_rpc_task_signalled = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_signalled }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_signalled = internal global ptr @event_rpc_task_signalled, section "_ftrace_events", align 4
@event_rpc_task_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_end = internal global ptr @event_rpc_task_end, section "_ftrace_events", align 4
@event_rpc_task_call_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_running, %union.anon.179 { ptr @__tracepoint_rpc_task_call_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_running }, ptr @print_fmt_rpc_task_running, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_call_done = internal global ptr @event_rpc_task_call_done, section "_ftrace_events", align 4
@trace_event_fields_rpc_task_queued = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.124, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.125, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpc_task_queued = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_task_queued, ptr @perf_trace_rpc_task_queued, ptr @trace_event_reg, ptr @trace_event_fields_rpc_task_queued, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_task_queued, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_task_queued, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_task_queued = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_task_queued, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_task_queued = internal global { [765 x i8], [163 x i8] } { [765 x i8] c"\22task:%08x@%08x flags=%s runstate=%s status=%d timeout=%lu queue=%s\22, REC->task_id, REC->client_id, __print_flags(REC->flags, \22|\22, { 0x0001, \22ASYNC\22 }, { 0x0002, \22SWAPPER\22 }, { 0x0004, \22MOVEABLE\22 }, { 0x0010, \22NULLCREDS\22 }, { 0x0020, \22MAJORSEEN\22 }, { 0x0040, \22ROOTCREDS\22 }, { 0x0080, \22DYNAMIC\22 }, { 0x0100, \22NO_ROUND_ROBIN\22 }, { 0x0200, \22SOFT\22 }, { 0x0400, \22SOFTCONN\22 }, { 0x0800, \22SENT\22 }, { 0x1000, \22TIMEOUT\22 }, { 0x2000, \22NOCONNECT\22 }, { 0x4000, \22NORTO\22 }, { 0x8000, \22CRED_NOREF\22 }), __print_flags(REC->runstate, \22|\22, { (1UL << 0), \22RUNNING\22 }, { (1UL << 1), \22QUEUED\22 }, { (1UL << 2), \22ACTIVE\22 }, { (1UL << 3), \22NEED_XMIT\22 }, { (1UL << 4), \22NEED_RECV\22 }, { (1UL << 5), \22MSG_PIN_WAIT\22 }, { (1UL << 6), \22SIGNALLED\22 }), REC->status, REC->timeout, __get_str(q_name)\00", [163 x i8] zeroinitializer }, align 32
@event_rpc_task_sleep = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_queued, %union.anon.179 { ptr @__tracepoint_rpc_task_sleep }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_queued }, ptr @print_fmt_rpc_task_queued, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_sleep = internal global ptr @event_rpc_task_sleep, section "_ftrace_events", align 4
@event_rpc_task_wakeup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_task_queued, %union.anon.179 { ptr @__tracepoint_rpc_task_wakeup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_task_queued }, ptr @print_fmt_rpc_task_queued, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_task_wakeup = internal global ptr @event_rpc_task_wakeup, section "_ftrace_events", align 4
@trace_event_fields_rpc_failure = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rpc_failure = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_failure, ptr @perf_trace_rpc_failure, ptr @trace_event_reg, ptr @trace_event_fields_rpc_failure, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_failure, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_failure, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_failure = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_failure, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_failure = internal global { [47 x i8], [49 x i8] } { [47 x i8] c"\22task:%08x@%08x\22, REC->task_id, REC->client_id\00", [49 x i8] zeroinitializer }, align 32
@event_rpc_bad_callhdr = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_failure, %union.anon.179 { ptr @__tracepoint_rpc_bad_callhdr }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_failure }, ptr @print_fmt_rpc_failure, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_bad_callhdr = internal global ptr @event_rpc_bad_callhdr, section "_ftrace_events", align 4
@event_rpc_bad_verifier = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_failure, %union.anon.179 { ptr @__tracepoint_rpc_bad_verifier }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_failure }, ptr @print_fmt_rpc_failure, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_bad_verifier = internal global ptr @event_rpc_bad_verifier, section "_ftrace_events", align 4
@trace_event_fields_rpc_reply_event = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.131, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpc_reply_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_reply_event, ptr @perf_trace_rpc_reply_event, ptr @trace_event_reg, ptr @trace_event_fields_rpc_reply_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_reply_event, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_reply_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_reply_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_reply_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_reply_event = internal global { [166 x i8], [58 x i8] } { [166 x i8] c"\22task:%08x@%08x server=%s xid=0x%08x %sv%d %s\22, REC->task_id, REC->client_id, __get_str(servername), REC->xid, __get_str(progname), REC->version, __get_str(procname)\00", [58 x i8] zeroinitializer }, align 32
@event_rpc__prog_unavail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__prog_unavail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__prog_unavail = internal global ptr @event_rpc__prog_unavail, section "_ftrace_events", align 4
@event_rpc__prog_mismatch = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__prog_mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__prog_mismatch = internal global ptr @event_rpc__prog_mismatch, section "_ftrace_events", align 4
@event_rpc__proc_unavail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__proc_unavail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__proc_unavail = internal global ptr @event_rpc__proc_unavail, section "_ftrace_events", align 4
@event_rpc__garbage_args = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__garbage_args }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__garbage_args = internal global ptr @event_rpc__garbage_args, section "_ftrace_events", align 4
@event_rpc__unparsable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__unparsable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__unparsable = internal global ptr @event_rpc__unparsable, section "_ftrace_events", align 4
@event_rpc__mismatch = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__mismatch = internal global ptr @event_rpc__mismatch, section "_ftrace_events", align 4
@event_rpc__stale_creds = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__stale_creds }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__stale_creds = internal global ptr @event_rpc__stale_creds, section "_ftrace_events", align 4
@event_rpc__bad_creds = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__bad_creds }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__bad_creds = internal global ptr @event_rpc__bad_creds, section "_ftrace_events", align 4
@event_rpc__auth_tooweak = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpc__auth_tooweak }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc__auth_tooweak = internal global ptr @event_rpc__auth_tooweak, section "_ftrace_events", align 4
@event_rpcb_prog_unavail_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpcb_prog_unavail_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_prog_unavail_err = internal global ptr @event_rpcb_prog_unavail_err, section "_ftrace_events", align 4
@event_rpcb_timeout_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpcb_timeout_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_timeout_err = internal global ptr @event_rpcb_timeout_err, section "_ftrace_events", align 4
@event_rpcb_bind_version_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpcb_bind_version_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_bind_version_err = internal global ptr @event_rpcb_bind_version_err, section "_ftrace_events", align 4
@event_rpcb_unreachable_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpcb_unreachable_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_unreachable_err = internal global ptr @event_rpcb_unreachable_err, section "_ftrace_events", align 4
@event_rpcb_unrecognized_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_reply_event, %union.anon.179 { ptr @__tracepoint_rpcb_unrecognized_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_reply_event }, ptr @print_fmt_rpc_reply_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_unrecognized_err = internal global ptr @event_rpcb_unrecognized_err, section "_ftrace_events", align 4
@trace_event_fields_rpc_buf_alloc = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.133, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.134, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rpc_buf_alloc = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_buf_alloc, ptr @perf_trace_rpc_buf_alloc, ptr @trace_event_reg, ptr @trace_event_fields_rpc_buf_alloc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_buf_alloc, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_buf_alloc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_buf_alloc = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_buf_alloc, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_buf_alloc = internal global { [126 x i8], [34 x i8] } { [126 x i8] c"\22task:%08x@%08x callsize=%zu recvsize=%zu status=%d\22, REC->task_id, REC->client_id, REC->callsize, REC->recvsize, REC->status\00", [34 x i8] zeroinitializer }, align 32
@event_rpc_buf_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_buf_alloc, %union.anon.179 { ptr @__tracepoint_rpc_buf_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_buf_alloc }, ptr @print_fmt_rpc_buf_alloc, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_buf_alloc = internal global ptr @event_rpc_buf_alloc, section "_ftrace_events", align 4
@trace_event_fields_rpc_call_rpcerror = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.136, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.137, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpc_call_rpcerror = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_call_rpcerror, ptr @perf_trace_rpc_call_rpcerror, ptr @trace_event_reg, ptr @trace_event_fields_rpc_call_rpcerror, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_call_rpcerror, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_call_rpcerror, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_call_rpcerror = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_call_rpcerror, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_call_rpcerror = internal global { [107 x i8], [53 x i8] } { [107 x i8] c"\22task:%08x@%08x tk_status=%d rpc_status=%d\22, REC->task_id, REC->client_id, REC->tk_status, REC->rpc_status\00", [53 x i8] zeroinitializer }, align 32
@event_rpc_call_rpcerror = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_call_rpcerror, %union.anon.179 { ptr @__tracepoint_rpc_call_rpcerror }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_call_rpcerror }, ptr @print_fmt_rpc_call_rpcerror, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_call_rpcerror = internal global ptr @event_rpc_call_rpcerror, section "_ftrace_events", align 4
@trace_event_fields_rpc_stats_latency = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.139, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.140, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.141, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rpc_stats_latency = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_stats_latency, ptr @perf_trace_rpc_stats_latency, ptr @trace_event_reg, ptr @trace_event_fields_rpc_stats_latency, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_stats_latency, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_stats_latency, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_stats_latency = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_stats_latency, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_stats_latency = internal global { [203 x i8], [53 x i8] } { [203 x i8] c"\22task:%08x@%08x xid=0x%08x %sv%d %s backlog=%lu rtt=%lu execute=%lu\22, REC->task_id, REC->client_id, REC->xid, __get_str(progname), REC->version, __get_str(procname), REC->backlog, REC->rtt, REC->execute\00", [53 x i8] zeroinitializer }, align 32
@event_rpc_stats_latency = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_stats_latency, %union.anon.179 { ptr @__tracepoint_rpc_stats_latency }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_stats_latency }, ptr @print_fmt_rpc_stats_latency, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_stats_latency = internal global ptr @event_rpc_stats_latency, section "_ftrace_events", align 4
@trace_event_fields_rpc_xdr_overflow = internal global { [15 x %struct.trace_event_fields], [88 x i8] } { [15 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.143, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.144, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.145, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [88 x i8] zeroinitializer }, align 32
@event_class_rpc_xdr_overflow = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xdr_overflow, ptr @perf_trace_rpc_xdr_overflow, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xdr_overflow, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xdr_overflow, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xdr_overflow, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xdr_overflow = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_xdr_overflow, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_xdr_overflow = internal global { [289 x i8], [95 x i8] } { [289 x i8] c"\22task:%08x@%08x %sv%d %s requested=%zu p=%p end=%p xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\22, REC->task_id, REC->client_id, __get_str(progname), REC->version, __get_str(procedure), REC->requested, REC->p, REC->end, REC->head_base, REC->head_len, REC->page_len, REC->tail_base, REC->tail_len, REC->len\00", [95 x i8] zeroinitializer }, align 32
@event_rpc_xdr_overflow = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_overflow, %union.anon.179 { ptr @__tracepoint_rpc_xdr_overflow }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_overflow }, ptr @print_fmt_rpc_xdr_overflow, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_xdr_overflow = internal global ptr @event_rpc_xdr_overflow, section "_ftrace_events", align 4
@trace_event_fields_rpc_xdr_alignment = internal global { [14 x %struct.trace_event_fields], [80 x i8] } { [14 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.149, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.150, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [80 x i8] zeroinitializer }, align 32
@event_class_rpc_xdr_alignment = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xdr_alignment, ptr @perf_trace_rpc_xdr_alignment, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xdr_alignment, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xdr_alignment, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xdr_alignment, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xdr_alignment = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_xdr_alignment, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_xdr_alignment = internal global { [276 x i8], [76 x i8] } { [276 x i8] c"\22task:%08x@%08x %sv%d %s offset=%zu copied=%u xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\22, REC->task_id, REC->client_id, __get_str(progname), REC->version, __get_str(procedure), REC->offset, REC->copied, REC->head_base, REC->head_len, REC->page_len, REC->tail_base, REC->tail_len, REC->len\00", [76 x i8] zeroinitializer }, align 32
@event_rpc_xdr_alignment = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xdr_alignment, %union.anon.179 { ptr @__tracepoint_rpc_xdr_alignment }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xdr_alignment }, ptr @print_fmt_rpc_xdr_alignment, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_xdr_alignment = internal global ptr @event_rpc_xdr_alignment, section "_ftrace_events", align 4
@trace_event_fields_xs_socket_event = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.153, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.154, %union.anon.177 { %struct.anon.178 { ptr @.str.155, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.177 { %struct.anon.178 { ptr @.str.157, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.177 { %struct.anon.178 { ptr @.str.158, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xs_socket_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_socket_event, ptr @perf_trace_xs_socket_event, ptr @trace_event_reg, ptr @trace_event_fields_xs_socket_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_socket_event, i64 24), ptr getelementptr (i8, ptr @event_class_xs_socket_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xs_socket_event_done = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.153, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.154, %union.anon.177 { %struct.anon.178 { ptr @.str.155, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.177 { %struct.anon.178 { ptr @.str.157, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.177 { %struct.anon.178 { ptr @.str.158, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xs_socket_event_done = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_socket_event_done, ptr @perf_trace_xs_socket_event_done, ptr @trace_event_reg, ptr @trace_event_fields_xs_socket_event_done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_socket_event_done, i64 24), ptr getelementptr (i8, ptr @event_class_xs_socket_event_done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xs_socket_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xs_socket_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xs_socket_event = internal global { [680 x i8], [184 x i8] } { [680 x i8] c"\22socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\22, REC->ino, REC->saddr, REC->daddr, REC->socket_state, __print_symbolic(REC->socket_state, {SS_FREE, \22FREE\22}, {SS_UNCONNECTED, \22UNCONNECTED\22}, {SS_CONNECTING, \22CONNECTING\22}, {SS_CONNECTED, \22CONNECTED\22}, {SS_DISCONNECTING, \22DISCONNECTING\22}), REC->sock_state, __print_symbolic(REC->sock_state, {TCP_ESTABLISHED, \22ESTABLISHED\22}, {TCP_SYN_SENT, \22SYN_SENT\22}, {TCP_SYN_RECV, \22SYN_RECV\22}, {TCP_FIN_WAIT1, \22FIN_WAIT1\22}, {TCP_FIN_WAIT2, \22FIN_WAIT2\22}, {TCP_TIME_WAIT, \22TIME_WAIT\22}, {TCP_CLOSE, \22CLOSE\22}, {TCP_CLOSE_WAIT, \22CLOSE_WAIT\22}, {TCP_LAST_ACK, \22LAST_ACK\22}, {TCP_LISTEN, \22LISTEN\22}, {TCP_CLOSING, \22CLOSING\22})\00", [184 x i8] zeroinitializer }, align 32
@event_rpc_socket_state_change = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event, %union.anon.179 { ptr @__tracepoint_rpc_socket_state_change }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event }, ptr @print_fmt_xs_socket_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_state_change = internal global ptr @event_rpc_socket_state_change, section "_ftrace_events", align 4
@trace_event_type_funcs_xs_socket_event_done = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xs_socket_event_done, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xs_socket_event_done = internal global { [701 x i8], [163 x i8] } { [701 x i8] c"\22error=%d socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\22, REC->error, REC->ino, REC->saddr, REC->daddr, REC->socket_state, __print_symbolic(REC->socket_state, {SS_FREE, \22FREE\22}, {SS_UNCONNECTED, \22UNCONNECTED\22}, {SS_CONNECTING, \22CONNECTING\22}, {SS_CONNECTED, \22CONNECTED\22}, {SS_DISCONNECTING, \22DISCONNECTING\22}), REC->sock_state, __print_symbolic(REC->sock_state, {TCP_ESTABLISHED, \22ESTABLISHED\22}, {TCP_SYN_SENT, \22SYN_SENT\22}, {TCP_SYN_RECV, \22SYN_RECV\22}, {TCP_FIN_WAIT1, \22FIN_WAIT1\22}, {TCP_FIN_WAIT2, \22FIN_WAIT2\22}, {TCP_TIME_WAIT, \22TIME_WAIT\22}, {TCP_CLOSE, \22CLOSE\22}, {TCP_CLOSE_WAIT, \22CLOSE_WAIT\22}, {TCP_LAST_ACK, \22LAST_ACK\22}, {TCP_LISTEN, \22LISTEN\22}, {TCP_CLOSING, \22CLOSING\22})\00", [163 x i8] zeroinitializer }, align 32
@event_rpc_socket_connect = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event_done, %union.anon.179 { ptr @__tracepoint_rpc_socket_connect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event_done }, ptr @print_fmt_xs_socket_event_done, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_connect = internal global ptr @event_rpc_socket_connect, section "_ftrace_events", align 4
@event_rpc_socket_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event_done, %union.anon.179 { ptr @__tracepoint_rpc_socket_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event_done }, ptr @print_fmt_xs_socket_event_done, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_error = internal global ptr @event_rpc_socket_error, section "_ftrace_events", align 4
@event_rpc_socket_reset_connection = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event_done, %union.anon.179 { ptr @__tracepoint_rpc_socket_reset_connection }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event_done }, ptr @print_fmt_xs_socket_event_done, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_reset_connection = internal global ptr @event_rpc_socket_reset_connection, section "_ftrace_events", align 4
@event_rpc_socket_close = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event, %union.anon.179 { ptr @__tracepoint_rpc_socket_close }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event }, ptr @print_fmt_xs_socket_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_close = internal global ptr @event_rpc_socket_close, section "_ftrace_events", align 4
@event_rpc_socket_shutdown = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_socket_event, %union.anon.179 { ptr @__tracepoint_rpc_socket_shutdown }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_socket_event }, ptr @print_fmt_xs_socket_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_shutdown = internal global ptr @event_rpc_socket_shutdown, section "_ftrace_events", align 4
@trace_event_fields_rpc_socket_nospace = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.179, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.180, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpc_socket_nospace = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_socket_nospace, ptr @perf_trace_rpc_socket_nospace, ptr @trace_event_reg, ptr @trace_event_fields_rpc_socket_nospace, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_socket_nospace, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_socket_nospace, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_socket_nospace = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_socket_nospace, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_socket_nospace = internal global { [97 x i8], [63 x i8] } { [97 x i8] c"\22task:%08x@%08x total=%u remaining=%u\22, REC->task_id, REC->client_id, REC->total, REC->remaining\00", [63 x i8] zeroinitializer }, align 32
@event_rpc_socket_nospace = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_socket_nospace, %union.anon.179 { ptr @__tracepoint_rpc_socket_nospace }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_socket_nospace }, ptr @print_fmt_rpc_socket_nospace, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpc_socket_nospace = internal global ptr @event_rpc_socket_nospace, section "_ftrace_events", align 4
@trace_event_fields_rpc_xprt_lifetime_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.182, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpc_xprt_lifetime_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xprt_lifetime_class, ptr @perf_trace_rpc_xprt_lifetime_class, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xprt_lifetime_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xprt_lifetime_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xprt_lifetime_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xprt_lifetime_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_xprt_lifetime_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_xprt_lifetime_class = internal global { [592 x i8], [144 x i8] } { [592 x i8] c"\22peer=[%s]:%s state=%s\22, __get_str(addr), __get_str(port), __print_flags(REC->state, \22|\22, { ((((1UL))) << ((0))), \22LOCKED\22 }, { ((((1UL))) << ((1))), \22CONNECTED\22 }, { ((((1UL))) << ((2))), \22CONNECTING\22 }, { ((((1UL))) << ((3))), \22CLOSE_WAIT\22 }, { ((((1UL))) << ((4))), \22BOUND\22 }, { ((((1UL))) << ((5))), \22BINDING\22 }, { ((((1UL))) << ((6))), \22CLOSING\22 }, { ((((1UL))) << ((7))), \22OFFLINE\22 }, { ((((1UL))) << ((8))), \22REMOVE\22 }, { ((((1UL))) << ((9))), \22CONGESTED\22 }, { ((((1UL))) << ((10))), \22CWND_WAIT\22 }, { ((((1UL))) << ((11))), \22WRITE_SPACE\22 }, { ((((1UL))) << ((12))), \22SND_IS_COOKIE\22 })\00", [144 x i8] zeroinitializer }, align 32
@event_xprt_create = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_create }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_create = internal global ptr @event_xprt_create, section "_ftrace_events", align 4
@event_xprt_connect = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_connect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_connect = internal global ptr @event_xprt_connect, section "_ftrace_events", align 4
@event_xprt_disconnect_auto = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_disconnect_auto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_disconnect_auto = internal global ptr @event_xprt_disconnect_auto, section "_ftrace_events", align 4
@event_xprt_disconnect_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_disconnect_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_disconnect_done = internal global ptr @event_xprt_disconnect_done, section "_ftrace_events", align 4
@event_xprt_disconnect_force = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_disconnect_force }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_disconnect_force = internal global ptr @event_xprt_disconnect_force, section "_ftrace_events", align 4
@event_xprt_disconnect_cleanup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_disconnect_cleanup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_disconnect_cleanup = internal global ptr @event_xprt_disconnect_cleanup, section "_ftrace_events", align 4
@event_xprt_destroy = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_lifetime_class, %union.anon.179 { ptr @__tracepoint_xprt_destroy }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class }, ptr @print_fmt_rpc_xprt_lifetime_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_destroy = internal global ptr @event_xprt_destroy, section "_ftrace_events", align 4
@trace_event_fields_rpc_xprt_event = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpc_xprt_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpc_xprt_event, ptr @perf_trace_rpc_xprt_event, ptr @trace_event_reg, ptr @trace_event_fields_rpc_xprt_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpc_xprt_event, i64 24), ptr getelementptr (i8, ptr @event_class_rpc_xprt_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpc_xprt_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpc_xprt_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpc_xprt_event = internal global { [93 x i8], [35 x i8] } { [93 x i8] c"\22peer=[%s]:%s xid=0x%08x status=%d\22, __get_str(addr), __get_str(port), REC->xid, REC->status\00", [35 x i8] zeroinitializer }, align 32
@event_xprt_timer = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_event, %union.anon.179 { ptr @__tracepoint_xprt_timer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_event }, ptr @print_fmt_rpc_xprt_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_timer = internal global ptr @event_xprt_timer, section "_ftrace_events", align 4
@event_xprt_lookup_rqst = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpc_xprt_event, %union.anon.179 { ptr @__tracepoint_xprt_lookup_rqst }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpc_xprt_event }, ptr @print_fmt_rpc_xprt_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_lookup_rqst = internal global ptr @event_xprt_lookup_rqst, section "_ftrace_events", align 4
@trace_event_fields_xprt_transmit = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.194, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprt_transmit = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_transmit, ptr @perf_trace_xprt_transmit, ptr @trace_event_reg, ptr @trace_event_fields_xprt_transmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_transmit, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_transmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_transmit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprt_transmit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprt_transmit = internal global { [112 x i8], [48 x i8] } { [112 x i8] c"\22task:%08x@%08x xid=0x%08x seqno=%u status=%d\22, REC->task_id, REC->client_id, REC->xid, REC->seqno, REC->status\00", [48 x i8] zeroinitializer }, align 32
@event_xprt_transmit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_transmit, %union.anon.179 { ptr @__tracepoint_xprt_transmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_transmit }, ptr @print_fmt_xprt_transmit, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_transmit = internal global ptr @event_xprt_transmit, section "_ftrace_events", align 4
@trace_event_fields_xprt_retransmit = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.196, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.124, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprt_retransmit = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_retransmit, ptr @perf_trace_xprt_retransmit, ptr @trace_event_reg, ptr @trace_event_fields_xprt_retransmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_retransmit, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_retransmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_retransmit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprt_retransmit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprt_retransmit = internal global { [182 x i8], [42 x i8] } { [182 x i8] c"\22task:%08x@%08x xid=0x%08x %sv%d %s ntrans=%d timeout=%lu\22, REC->task_id, REC->client_id, REC->xid, __get_str(progname), REC->version, __get_str(procname), REC->ntrans, REC->timeout\00", [42 x i8] zeroinitializer }, align 32
@event_xprt_retransmit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_retransmit, %union.anon.179 { ptr @__tracepoint_xprt_retransmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_retransmit }, ptr @print_fmt_xprt_retransmit, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_retransmit = internal global ptr @event_xprt_retransmit, section "_ftrace_events", align 4
@trace_event_fields_xprt_ping = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprt_ping = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_ping, ptr @perf_trace_xprt_ping, ptr @trace_event_reg, ptr @trace_event_fields_xprt_ping, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_ping, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_ping, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_ping = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprt_ping, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprt_ping = internal global { [72 x i8], [56 x i8] } { [72 x i8] c"\22peer=[%s]:%s status=%d\22, __get_str(addr), __get_str(port), REC->status\00", [56 x i8] zeroinitializer }, align 32
@event_xprt_ping = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_ping, %union.anon.179 { ptr @__tracepoint_xprt_ping }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_ping }, ptr @print_fmt_xprt_ping, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_ping = internal global ptr @event_xprt_ping, section "_ftrace_events", align 4
@trace_event_fields_xprt_writelock_event = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.199, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprt_writelock_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_writelock_event, ptr @perf_trace_xprt_writelock_event, ptr @trace_event_reg, ptr @trace_event_fields_xprt_writelock_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_writelock_event, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_writelock_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_writelock_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprt_writelock_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprt_writelock_event = internal global { [79 x i8], [49 x i8] } { [79 x i8] c"\22task:%08x@%08x snd_task:%08x\22, REC->task_id, REC->client_id, REC->snd_task_id\00", [49 x i8] zeroinitializer }, align 32
@event_xprt_reserve_xprt = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_writelock_event, %union.anon.179 { ptr @__tracepoint_xprt_reserve_xprt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_writelock_event }, ptr @print_fmt_xprt_writelock_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_reserve_xprt = internal global ptr @event_xprt_reserve_xprt, section "_ftrace_events", align 4
@event_xprt_release_xprt = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_writelock_event, %union.anon.179 { ptr @__tracepoint_xprt_release_xprt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_writelock_event }, ptr @print_fmt_xprt_writelock_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_release_xprt = internal global ptr @event_xprt_release_xprt, section "_ftrace_events", align 4
@trace_event_fields_xprt_cong_event = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.199, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.202, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.177 { %struct.anon.178 { ptr @.str.203, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprt_cong_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_cong_event, ptr @perf_trace_xprt_cong_event, ptr @trace_event_reg, ptr @trace_event_fields_xprt_cong_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_cong_event, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_cong_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_cong_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprt_cong_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprt_cong_event = internal global { [149 x i8], [43 x i8] } { [149 x i8] c"\22task:%08x@%08x snd_task:%08x cong=%lu cwnd=%lu%s\22, REC->task_id, REC->client_id, REC->snd_task_id, REC->cong, REC->cwnd, REC->wait ? \22 (wait)\22 : \22\22\00", [43 x i8] zeroinitializer }, align 32
@event_xprt_reserve_cong = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.179 { ptr @__tracepoint_xprt_reserve_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_reserve_cong = internal global ptr @event_xprt_reserve_cong, section "_ftrace_events", align 4
@event_xprt_release_cong = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.179 { ptr @__tracepoint_xprt_release_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_release_cong = internal global ptr @event_xprt_release_cong, section "_ftrace_events", align 4
@event_xprt_get_cong = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.179 { ptr @__tracepoint_xprt_get_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_get_cong = internal global ptr @event_xprt_get_cong, section "_ftrace_events", align 4
@event_xprt_put_cong = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_cong_event, %union.anon.179 { ptr @__tracepoint_xprt_put_cong }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_cong_event }, ptr @print_fmt_xprt_cong_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_put_cong = internal global ptr @event_xprt_put_cong, section "_ftrace_events", align 4
@trace_event_fields_xprt_reserve = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprt_reserve = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xprt_reserve, ptr @perf_trace_xprt_reserve, ptr @trace_event_reg, ptr @trace_event_fields_xprt_reserve, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprt_reserve, i64 24), ptr getelementptr (i8, ptr @event_class_xprt_reserve, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprt_reserve = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprt_reserve, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprt_reserve = internal global { [68 x i8], [60 x i8] } { [68 x i8] c"\22task:%08x@%08x xid=0x%08x\22, REC->task_id, REC->client_id, REC->xid\00", [60 x i8] zeroinitializer }, align 32
@event_xprt_reserve = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprt_reserve, %union.anon.179 { ptr @__tracepoint_xprt_reserve }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprt_reserve }, ptr @print_fmt_xprt_reserve, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprt_reserve = internal global ptr @event_xprt_reserve, section "_ftrace_events", align 4
@trace_event_fields_xs_stream_read_data = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.207, %union.anon.177 { %struct.anon.178 { ptr @.str.208, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.179, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xs_stream_read_data = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_stream_read_data, ptr @perf_trace_xs_stream_read_data, ptr @trace_event_reg, ptr @trace_event_fields_xs_stream_read_data, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_stream_read_data, i64 24), ptr getelementptr (i8, ptr @event_class_xs_stream_read_data, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xs_stream_read_data = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xs_stream_read_data, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xs_stream_read_data = internal global { [89 x i8], [39 x i8] } { [89 x i8] c"\22peer=[%s]:%s err=%zd total=%zu\22, __get_str(addr), __get_str(port), REC->err, REC->total\00", [39 x i8] zeroinitializer }, align 32
@event_xs_stream_read_data = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_stream_read_data, %union.anon.179 { ptr @__tracepoint_xs_stream_read_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_stream_read_data }, ptr @print_fmt_xs_stream_read_data, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xs_stream_read_data = internal global ptr @event_xs_stream_read_data, section "_ftrace_events", align 4
@trace_event_fields_xs_stream_read_request = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.150, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.210, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.149, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xs_stream_read_request = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_xs_stream_read_request, ptr @perf_trace_xs_stream_read_request, ptr @trace_event_reg, ptr @trace_event_fields_xs_stream_read_request, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xs_stream_read_request, i64 24), ptr getelementptr (i8, ptr @event_class_xs_stream_read_request, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xs_stream_read_request = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xs_stream_read_request, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xs_stream_read_request = internal global { [140 x i8], [52 x i8] } { [140 x i8] c"\22peer=[%s]:%s xid=0x%08x copied=%lu reclen=%u offset=%u\22, __get_str(addr), __get_str(port), REC->xid, REC->copied, REC->reclen, REC->offset\00", [52 x i8] zeroinitializer }, align 32
@event_xs_stream_read_request = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xs_stream_read_request, %union.anon.179 { ptr @__tracepoint_xs_stream_read_request }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xs_stream_read_request }, ptr @print_fmt_xs_stream_read_request, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xs_stream_read_request = internal global ptr @event_xs_stream_read_request, section "_ftrace_events", align 4
@trace_event_fields_rpcb_getport = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.212, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.213, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.131, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpcb_getport = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_getport, ptr @perf_trace_rpcb_getport, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_getport, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_getport, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_getport, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_getport = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcb_getport, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcb_getport = internal global { [192 x i8], [32 x i8] } { [192 x i8] c"\22task:%08x@%08x server=%s program=%u version=%u protocol=%d bind_version=%u\22, REC->task_id, REC->client_id, __get_str(servername), REC->program, REC->version, REC->protocol, REC->bind_version\00", [32 x i8] zeroinitializer }, align 32
@event_rpcb_getport = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_getport, %union.anon.179 { ptr @__tracepoint_rpcb_getport }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_getport }, ptr @print_fmt_rpcb_getport, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_getport = internal global ptr @event_rpcb_getport, section "_ftrace_events", align 4
@trace_event_fields_rpcb_setport = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpcb_setport = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_setport, ptr @perf_trace_rpcb_setport, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_setport, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_setport, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_setport, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_setport = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcb_setport, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcb_setport = internal global { [89 x i8], [39 x i8] } { [89 x i8] c"\22task:%08x@%08x status=%d port=%u\22, REC->task_id, REC->client_id, REC->status, REC->port\00", [39 x i8] zeroinitializer }, align 32
@event_rpcb_setport = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_setport, %union.anon.179 { ptr @__tracepoint_rpcb_setport }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_setport }, ptr @print_fmt_rpcb_setport, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_setport = internal global ptr @event_rpcb_setport, section "_ftrace_events", align 4
@trace_event_fields_pmap_register = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.212, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_pmap_register = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_pmap_register, ptr @perf_trace_pmap_register, ptr @trace_event_reg, ptr @trace_event_fields_pmap_register, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_pmap_register, i64 24), ptr getelementptr (i8, ptr @event_class_pmap_register, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_pmap_register = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_pmap_register, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_pmap_register = internal global { [98 x i8], [62 x i8] } { [98 x i8] c"\22program=%u version=%u protocol=%d port=%u\22, REC->program, REC->version, REC->protocol, REC->port\00", [62 x i8] zeroinitializer }, align 32
@event_pmap_register = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_pmap_register, %union.anon.179 { ptr @__tracepoint_pmap_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_pmap_register }, ptr @print_fmt_pmap_register, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_pmap_register = internal global ptr @event_pmap_register, section "_ftrace_events", align 4
@trace_event_fields_rpcb_register = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpcb_register = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_register, ptr @perf_trace_rpcb_register, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_register, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_register, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_register, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_register = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcb_register, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcb_register = internal global { [104 x i8], [56 x i8] } { [104 x i8] c"\22program=%u version=%u addr=%s netid=%s\22, REC->program, REC->version, __get_str(addr), __get_str(netid)\00", [56 x i8] zeroinitializer }, align 32
@event_rpcb_register = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_register, %union.anon.179 { ptr @__tracepoint_rpcb_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_register }, ptr @print_fmt_rpcb_register, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_register = internal global ptr @event_rpcb_register, section "_ftrace_events", align 4
@trace_event_fields_rpcb_unregister = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpcb_unregister = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_rpcb_unregister, ptr @perf_trace_rpcb_unregister, ptr @trace_event_reg, ptr @trace_event_fields_rpcb_unregister, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcb_unregister, i64 24), ptr getelementptr (i8, ptr @event_class_rpcb_unregister, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rpcb_unregister = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcb_unregister, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcb_unregister = internal global { [79 x i8], [49 x i8] } { [79 x i8] c"\22program=%u version=%u netid=%s\22, REC->program, REC->version, __get_str(netid)\00", [49 x i8] zeroinitializer }, align 32
@event_rpcb_unregister = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcb_unregister, %union.anon.179 { ptr @__tracepoint_rpcb_unregister }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcb_unregister }, ptr @print_fmt_rpcb_unregister, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rpcb_unregister = internal global ptr @event_rpcb_unregister, section "_ftrace_events", align 4
@trace_event_fields_svc_xdr_msg_class = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_xdr_msg_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xdr_msg_class, ptr @perf_trace_svc_xdr_msg_class, ptr @trace_event_reg, ptr @trace_event_fields_svc_xdr_msg_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xdr_msg_class, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xdr_msg_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xdr_msg_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xdr_msg_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xdr_msg_class = internal global { [157 x i8], [35 x i8] } { [157 x i8] c"\22xid=0x%08x head=[%p,%zu] page=%u tail=[%p,%zu] len=%u\22, REC->xid, REC->head_base, REC->head_len, REC->page_len, REC->tail_base, REC->tail_len, REC->msg_len\00", [35 x i8] zeroinitializer }, align 32
@event_svc_xdr_recvfrom = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xdr_msg_class, %union.anon.179 { ptr @__tracepoint_svc_xdr_recvfrom }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xdr_msg_class }, ptr @print_fmt_svc_xdr_msg_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xdr_recvfrom = internal global ptr @event_svc_xdr_recvfrom, section "_ftrace_events", align 4
@trace_event_fields_svc_xdr_buf_class = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.65, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.63, %union.anon.177 { %struct.anon.178 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svc_xdr_buf_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xdr_buf_class, ptr @perf_trace_svc_xdr_buf_class, ptr @trace_event_reg, ptr @trace_event_fields_svc_xdr_buf_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xdr_buf_class, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xdr_buf_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xdr_buf_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xdr_buf_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xdr_buf_class = internal global { [177 x i8], [47 x i8] } { [177 x i8] c"\22xid=0x%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\22, REC->xid, REC->head_base, REC->head_len, REC->page_len, REC->page_base, REC->tail_base, REC->tail_len, REC->msg_len\00", [47 x i8] zeroinitializer }, align 32
@event_svc_xdr_sendto = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xdr_buf_class, %union.anon.179 { ptr @__tracepoint_svc_xdr_sendto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xdr_buf_class }, ptr @print_fmt_svc_xdr_buf_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xdr_sendto = internal global ptr @event_svc_xdr_sendto, section "_ftrace_events", align 4
@trace_event_fields_svc_authenticate = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.222, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.223, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_authenticate = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_authenticate, ptr @perf_trace_svc_authenticate, ptr @trace_event_reg, ptr @trace_event_fields_svc_authenticate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_authenticate, i64 24), ptr getelementptr (i8, ptr @event_class_svc_authenticate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_authenticate = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_authenticate, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_authenticate = internal global { [631 x i8], [137 x i8] } { [631 x i8] c"\22xid=0x%08x auth_res=%s auth_stat=%s\22, REC->xid, __print_symbolic(REC->svc_status, { 1, \22SVC_GARBAGE\22 }, { 2, \22SVC_SYSERR\22 }, { 3, \22SVC_VALID\22 }, { 4, \22SVC_NEGATIVE\22 }, { 5, \22SVC_OK\22 }, { 6, \22SVC_DROP\22 }, { 7, \22SVC_CLOSE\22 }, { 8, \22SVC_DENIED\22 }, { 9, \22SVC_PENDING\22 }, { 10, \22SVC_COMPLETE\22 }), __print_symbolic(REC->auth_stat, { RPC_AUTH_OK, \22AUTH_OK\22 }, { RPC_AUTH_BADCRED, \22BADCRED\22 }, { RPC_AUTH_REJECTEDCRED, \22REJECTEDCRED\22 }, { RPC_AUTH_BADVERF, \22BADVERF\22 }, { RPC_AUTH_REJECTEDVERF, \22REJECTEDVERF\22 }, { RPC_AUTH_TOOWEAK, \22TOOWEAK\22 }, { RPCSEC_GSS_CREDPROBLEM, \22GSS_CREDPROBLEM\22 }, { RPCSEC_GSS_CTXPROBLEM, \22GSS_CTXPROBLEM\22 })\00", [137 x i8] zeroinitializer }, align 32
@event_svc_authenticate = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_authenticate, %union.anon.179 { ptr @__tracepoint_svc_authenticate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_authenticate }, ptr @print_fmt_svc_authenticate, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_authenticate = internal global ptr @event_svc_authenticate, section "_ftrace_events", align 4
@trace_event_fields_svc_process = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.234, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.235, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.236, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svc_process = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_process, ptr @perf_trace_svc_process, ptr @trace_event_reg, ptr @trace_event_fields_svc_process, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_process, i64 24), ptr getelementptr (i8, ptr @event_class_svc_process, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_process = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_process, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_process = internal global { [128 x i8], [32 x i8] } { [128 x i8] c"\22addr=%s xid=0x%08x service=%s vers=%u proc=%s\22, __get_str(addr), REC->xid, __get_str(service), REC->vers, __get_str(procedure)\00", [32 x i8] zeroinitializer }, align 32
@event_svc_process = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_process, %union.anon.179 { ptr @__tracepoint_svc_process }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_process }, ptr @print_fmt_svc_process, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_process = internal global ptr @event_svc_process, section "_ftrace_events", align 4
@trace_event_fields_svc_rqst_event = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_rqst_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_rqst_event, ptr @perf_trace_svc_rqst_event, ptr @trace_event_reg, ptr @trace_event_fields_svc_rqst_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_rqst_event, i64 24), ptr getelementptr (i8, ptr @event_class_svc_rqst_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_rqst_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_rqst_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_rqst_event = internal global { [380 x i8], [68 x i8] } { [380 x i8] c"\22addr=%s xid=0x%08x flags=%s\22, __get_str(addr), REC->xid, __print_flags(REC->flags, \22|\22, { ((((1UL))) << ((0))), \22SECURE\22 }, { ((((1UL))) << ((1))), \22LOCAL\22 }, { ((((1UL))) << ((2))), \22USEDEFERRAL\22 }, { ((((1UL))) << ((3))), \22DROPME\22 }, { ((((1UL))) << ((4))), \22SPLICE_OK\22 }, { ((((1UL))) << ((5))), \22VICTIM\22 }, { ((((1UL))) << ((6))), \22BUSY\22 }, { ((((1UL))) << ((7))), \22DATA\22 })\00", [68 x i8] zeroinitializer }, align 32
@event_svc_defer = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_rqst_event, %union.anon.179 { ptr @__tracepoint_svc_defer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_rqst_event }, ptr @print_fmt_svc_rqst_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_defer = internal global ptr @event_svc_defer, section "_ftrace_events", align 4
@event_svc_drop = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_rqst_event, %union.anon.179 { ptr @__tracepoint_svc_drop }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_rqst_event }, ptr @print_fmt_svc_rqst_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_drop = internal global ptr @event_svc_drop, section "_ftrace_events", align 4
@trace_event_fields_svc_rqst_status = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svc_rqst_status = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_rqst_status, ptr @perf_trace_svc_rqst_status, ptr @trace_event_reg, ptr @trace_event_fields_svc_rqst_status, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_rqst_status, i64 24), ptr getelementptr (i8, ptr @event_class_svc_rqst_status, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_rqst_status = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_rqst_status, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_rqst_status = internal global { [403 x i8], [109 x i8] } { [403 x i8] c"\22addr=%s xid=0x%08x status=%d flags=%s\22, __get_str(addr), REC->xid, REC->status, __print_flags(REC->flags, \22|\22, { ((((1UL))) << ((0))), \22SECURE\22 }, { ((((1UL))) << ((1))), \22LOCAL\22 }, { ((((1UL))) << ((2))), \22USEDEFERRAL\22 }, { ((((1UL))) << ((3))), \22DROPME\22 }, { ((((1UL))) << ((4))), \22SPLICE_OK\22 }, { ((((1UL))) << ((5))), \22VICTIM\22 }, { ((((1UL))) << ((6))), \22BUSY\22 }, { ((((1UL))) << ((7))), \22DATA\22 })\00", [109 x i8] zeroinitializer }, align 32
@event_svc_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_rqst_status, %union.anon.179 { ptr @__tracepoint_svc_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_rqst_status }, ptr @print_fmt_svc_rqst_status, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_send = internal global ptr @event_svc_send, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_create_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.248, %union.anon.177 { %struct.anon.178 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.212, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.249, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svc_xprt_create_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_create_err, ptr @perf_trace_svc_xprt_create_err, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_create_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_create_err, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_create_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_create_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_create_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xprt_create_err = internal global { [111 x i8], [49 x i8] } { [111 x i8] c"\22addr=%pISpc program=%s protocol=%s error=%ld\22, REC->addr, __get_str(program), __get_str(protocol), REC->error\00", [49 x i8] zeroinitializer }, align 32
@event_svc_xprt_create_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_create_err, %union.anon.179 { ptr @__tracepoint_svc_xprt_create_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_create_err }, ptr @print_fmt_svc_xprt_create_err, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_create_err = internal global ptr @event_svc_xprt_create_err, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_enqueue = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.251, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_xprt_enqueue = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_enqueue, ptr @perf_trace_svc_xprt_enqueue, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_enqueue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_enqueue, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_enqueue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_enqueue = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_enqueue, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xprt_enqueue = internal global { [496 x i8], [112 x i8] } { [496 x i8] c"\22addr=%s pid=%d flags=%s\22, __get_str(addr), REC->pid, __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", [112 x i8] zeroinitializer }, align 32
@event_svc_xprt_enqueue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_enqueue, %union.anon.179 { ptr @__tracepoint_svc_xprt_enqueue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_enqueue }, ptr @print_fmt_svc_xprt_enqueue, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_enqueue = internal global ptr @event_svc_xprt_enqueue, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_event = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svc_xprt_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_event, ptr @perf_trace_svc_xprt_event, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_event, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xprt_event = internal global { [479 x i8], [97 x i8] } { [479 x i8] c"\22addr=%s flags=%s\22, __get_str(addr), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", [97 x i8] zeroinitializer }, align 32
@event_svc_xprt_no_write_space = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.179 { ptr @__tracepoint_svc_xprt_no_write_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_no_write_space = internal global ptr @event_svc_xprt_no_write_space, section "_ftrace_events", align 4
@event_svc_xprt_close = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.179 { ptr @__tracepoint_svc_xprt_close }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_close = internal global ptr @event_svc_xprt_close, section "_ftrace_events", align 4
@event_svc_xprt_detach = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.179 { ptr @__tracepoint_svc_xprt_detach }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_detach = internal global ptr @event_svc_xprt_detach, section "_ftrace_events", align 4
@event_svc_xprt_free = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_event, %union.anon.179 { ptr @__tracepoint_svc_xprt_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_event }, ptr @print_fmt_svc_xprt_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_free = internal global ptr @event_svc_xprt_free, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_accept = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.212, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.236, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_xprt_accept = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_accept, ptr @perf_trace_svc_xprt_accept, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_accept, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_accept, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_accept, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_accept = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_accept, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xprt_accept = internal global { [91 x i8], [37 x i8] } { [91 x i8] c"\22addr=%s protocol=%s service=%s\22, __get_str(addr), __get_str(protocol), __get_str(service)\00", [37 x i8] zeroinitializer }, align 32
@event_svc_xprt_accept = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_accept, %union.anon.179 { ptr @__tracepoint_svc_xprt_accept }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_accept }, ptr @print_fmt_svc_xprt_accept, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_accept = internal global ptr @event_svc_xprt_accept, section "_ftrace_events", align 4
@trace_event_fields_svc_xprt_dequeue = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.269, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_xprt_dequeue = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_xprt_dequeue, ptr @perf_trace_svc_xprt_dequeue, ptr @trace_event_reg, ptr @trace_event_fields_svc_xprt_dequeue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_xprt_dequeue, i64 24), ptr getelementptr (i8, ptr @event_class_svc_xprt_dequeue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_xprt_dequeue = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_xprt_dequeue, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_xprt_dequeue = internal global { [506 x i8], [102 x i8] } { [506 x i8] c"\22addr=%s flags=%s wakeup-us=%lu\22, __get_str(addr), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22}), REC->wakeup\00", [102 x i8] zeroinitializer }, align 32
@event_svc_xprt_dequeue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_xprt_dequeue, %union.anon.179 { ptr @__tracepoint_svc_xprt_dequeue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_xprt_dequeue }, ptr @print_fmt_svc_xprt_dequeue, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_xprt_dequeue = internal global ptr @event_svc_xprt_dequeue, section "_ftrace_events", align 4
@trace_event_fields_svc_wake_up = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.251, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_svc_wake_up = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_wake_up, ptr @perf_trace_svc_wake_up, ptr @trace_event_reg, ptr @trace_event_fields_svc_wake_up, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_wake_up, i64 24), ptr getelementptr (i8, ptr @event_class_svc_wake_up, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_wake_up = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_wake_up, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_wake_up = internal global { [19 x i8], [45 x i8] } { [19 x i8] c"\22pid=%d\22, REC->pid\00", [45 x i8] zeroinitializer }, align 32
@event_svc_wake_up = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_wake_up, %union.anon.179 { ptr @__tracepoint_svc_wake_up }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_wake_up }, ptr @print_fmt_svc_wake_up, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_wake_up = internal global ptr @event_svc_wake_up, section "_ftrace_events", align 4
@trace_event_fields_svc_alloc_arg_err = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.272, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_svc_alloc_arg_err = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_alloc_arg_err, ptr @perf_trace_svc_alloc_arg_err, ptr @trace_event_reg, ptr @trace_event_fields_svc_alloc_arg_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_alloc_arg_err, i64 24), ptr getelementptr (i8, ptr @event_class_svc_alloc_arg_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_alloc_arg_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_alloc_arg_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_alloc_arg_err = internal global { [23 x i8], [41 x i8] } { [23 x i8] c"\22pages=%u\22, REC->pages\00", [41 x i8] zeroinitializer }, align 32
@event_svc_alloc_arg_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_alloc_arg_err, %union.anon.179 { ptr @__tracepoint_svc_alloc_arg_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_alloc_arg_err }, ptr @print_fmt_svc_alloc_arg_err, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_alloc_arg_err = internal global ptr @event_svc_alloc_arg_err, section "_ftrace_events", align 4
@trace_event_fields_svc_stats_latency = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.141, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svc_stats_latency = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_stats_latency, ptr @perf_trace_svc_stats_latency, ptr @trace_event_reg, ptr @trace_event_fields_svc_stats_latency, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_stats_latency, i64 24), ptr getelementptr (i8, ptr @event_class_svc_stats_latency, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_stats_latency = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_stats_latency, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_stats_latency = internal global { [107 x i8], [53 x i8] } { [107 x i8] c"\22addr=%s xid=0x%08x proc=%s execute-us=%lu\22, __get_str(addr), REC->xid, __get_str(procedure), REC->execute\00", [53 x i8] zeroinitializer }, align 32
@event_svc_stats_latency = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_stats_latency, %union.anon.179 { ptr @__tracepoint_svc_stats_latency }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_stats_latency }, ptr @print_fmt_svc_stats_latency, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_stats_latency = internal global ptr @event_svc_stats_latency, section "_ftrace_events", align 4
@trace_event_fields_svc_deferred_event = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.177 { %struct.anon.178 { ptr @.str.275, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_deferred_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_deferred_event, ptr @perf_trace_svc_deferred_event, ptr @trace_event_reg, ptr @trace_event_fields_svc_deferred_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_deferred_event, i64 24), ptr getelementptr (i8, ptr @event_class_svc_deferred_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_deferred_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_deferred_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_deferred_event = internal global { [63 x i8], [33 x i8] } { [63 x i8] c"\22addr=%s dr=%p xid=0x%08x\22, __get_str(addr), REC->dr, REC->xid\00", [33 x i8] zeroinitializer }, align 32
@event_svc_defer_drop = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_deferred_event, %union.anon.179 { ptr @__tracepoint_svc_defer_drop }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_deferred_event }, ptr @print_fmt_svc_deferred_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_defer_drop = internal global ptr @event_svc_defer_drop, section "_ftrace_events", align 4
@event_svc_defer_queue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_deferred_event, %union.anon.179 { ptr @__tracepoint_svc_defer_queue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_deferred_event }, ptr @print_fmt_svc_deferred_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_defer_queue = internal global ptr @event_svc_defer_queue, section "_ftrace_events", align 4
@event_svc_defer_recv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_deferred_event, %union.anon.179 { ptr @__tracepoint_svc_defer_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_deferred_event }, ptr @print_fmt_svc_deferred_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_defer_recv = internal global ptr @event_svc_defer_recv, section "_ftrace_events", align 4
@trace_event_fields_svcsock_new_socket = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.277, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.278, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.177 { %struct.anon.178 { ptr @.str.279, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcsock_new_socket = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_new_socket, ptr @perf_trace_svcsock_new_socket, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_new_socket, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_new_socket, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_new_socket, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_new_socket = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcsock_new_socket, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcsock_new_socket = internal global { [390 x i8], [122 x i8] } { [390 x i8] c"\22type=%s family=%s%s\22, __print_symbolic(REC->type, { SOCK_STREAM, \22STREAM\22 }, { SOCK_DGRAM, \22DGRAM\22 }, { SOCK_RAW, \22RAW\22 }, { SOCK_RDM, \22RDM\22 }, { SOCK_SEQPACKET, \22SEQPACKET\22 }, { SOCK_DCCP, \22DCCP\22 }, { SOCK_PACKET, \22PACKET\22 }), __print_symbolic(REC->family, { 0, \22AF_UNSPEC\22 }, { 1, \22AF_UNIX\22 }, { 1, \22AF_LOCAL\22 }, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->listener ? \22 (listener)\22 : \22\22\00", [122 x i8] zeroinitializer }, align 32
@event_svcsock_new_socket = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_new_socket, %union.anon.179 { ptr @__tracepoint_svcsock_new_socket }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_new_socket }, ptr @print_fmt_svcsock_new_socket, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_new_socket = internal global ptr @event_svcsock_new_socket, section "_ftrace_events", align 4
@trace_event_fields_svcsock_marker = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.290, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.177 { %struct.anon.178 { ptr @.str.291, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcsock_marker = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_marker, ptr @perf_trace_svcsock_marker, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_marker, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_marker, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_marker, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_marker = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcsock_marker, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcsock_marker = internal global { [80 x i8], [48 x i8] } { [80 x i8] c"\22addr=%s length=%u%s\22, __get_str(addr), REC->length, REC->last ? \22 (last)\22 : \22\22\00", [48 x i8] zeroinitializer }, align 32
@event_svcsock_marker = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_marker, %union.anon.179 { ptr @__tracepoint_svcsock_marker }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_marker }, ptr @print_fmt_svcsock_marker, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_marker = internal global ptr @event_svcsock_marker, section "_ftrace_events", align 4
@trace_event_fields_svcsock_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.207, %union.anon.177 { %struct.anon.178 { ptr @.str.294, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcsock_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_class, ptr @perf_trace_svcsock_class, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcsock_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcsock_class = internal global { [503 x i8], [105 x i8] } { [503 x i8] c"\22addr=%s result=%zd flags=%s\22, __get_str(addr), REC->result, __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", [105 x i8] zeroinitializer }, align 32
@event_svcsock_udp_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_udp_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_udp_send = internal global ptr @event_svcsock_udp_send, section "_ftrace_events", align 4
@event_svcsock_udp_recv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_udp_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_udp_recv = internal global ptr @event_svcsock_udp_recv, section "_ftrace_events", align 4
@event_svcsock_udp_recv_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_udp_recv_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_udp_recv_err = internal global ptr @event_svcsock_udp_recv_err, section "_ftrace_events", align 4
@event_svcsock_tcp_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_tcp_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_tcp_send = internal global ptr @event_svcsock_tcp_send, section "_ftrace_events", align 4
@event_svcsock_tcp_recv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_tcp_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_tcp_recv = internal global ptr @event_svcsock_tcp_recv, section "_ftrace_events", align 4
@event_svcsock_tcp_recv_eagain = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_tcp_recv_eagain }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_tcp_recv_eagain = internal global ptr @event_svcsock_tcp_recv_eagain, section "_ftrace_events", align 4
@event_svcsock_tcp_recv_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_tcp_recv_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_tcp_recv_err = internal global ptr @event_svcsock_tcp_recv_err, section "_ftrace_events", align 4
@event_svcsock_data_ready = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_data_ready }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_data_ready = internal global ptr @event_svcsock_data_ready, section "_ftrace_events", align 4
@event_svcsock_write_space = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_class, %union.anon.179 { ptr @__tracepoint_svcsock_write_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_class }, ptr @print_fmt_svcsock_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_write_space = internal global ptr @event_svcsock_write_space, section "_ftrace_events", align 4
@trace_event_fields_svcsock_tcp_recv_short = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.296, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.297, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcsock_tcp_recv_short = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_tcp_recv_short, ptr @perf_trace_svcsock_tcp_recv_short, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_tcp_recv_short, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_tcp_recv_short, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_tcp_recv_short, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_tcp_recv_short = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcsock_tcp_recv_short, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcsock_tcp_recv_short = internal global { [533 x i8], [139 x i8] } { [533 x i8] c"\22addr=%s flags=%s expected=%u received=%u\22, __get_str(addr), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22}), REC->expected, REC->received\00", [139 x i8] zeroinitializer }, align 32
@event_svcsock_tcp_recv_short = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_tcp_recv_short, %union.anon.179 { ptr @__tracepoint_svcsock_tcp_recv_short }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_tcp_recv_short }, ptr @print_fmt_svcsock_tcp_recv_short, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_tcp_recv_short = internal global ptr @event_svcsock_tcp_recv_short, section "_ftrace_events", align 4
@trace_event_fields_svcsock_tcp_state = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.153, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcsock_tcp_state = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_tcp_state, ptr @perf_trace_svcsock_tcp_state, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_tcp_state, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_tcp_state, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_tcp_state, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_tcp_state = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcsock_tcp_state, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcsock_tcp_state = internal global { [1033 x i8], [279 x i8] } { [1033 x i8] c"\22addr=%s state=%s sk_state=%s flags=%s\22, __get_str(addr), __print_symbolic(REC->socket_state, {SS_FREE, \22FREE\22}, {SS_UNCONNECTED, \22UNCONNECTED\22}, {SS_CONNECTING, \22CONNECTING\22}, {SS_CONNECTED, \22CONNECTED\22}, {SS_DISCONNECTING, \22DISCONNECTING\22}), __print_symbolic(REC->sock_state, {TCP_ESTABLISHED, \22ESTABLISHED\22}, {TCP_SYN_SENT, \22SYN_SENT\22}, {TCP_SYN_RECV, \22SYN_RECV\22}, {TCP_FIN_WAIT1, \22FIN_WAIT1\22}, {TCP_FIN_WAIT2, \22FIN_WAIT2\22}, {TCP_TIME_WAIT, \22TIME_WAIT\22}, {TCP_CLOSE, \22CLOSE\22}, {TCP_CLOSE_WAIT, \22CLOSE_WAIT\22}, {TCP_LAST_ACK, \22LAST_ACK\22}, {TCP_LISTEN, \22LISTEN\22}, {TCP_CLOSING, \22CLOSING\22}), __print_flags(REC->flags, \22|\22, { (1UL << 0), \22XPT_BUSY\22}, { (1UL << 1), \22XPT_CONN\22}, { (1UL << 2), \22XPT_CLOSE\22}, { (1UL << 3), \22XPT_DATA\22}, { (1UL << 4), \22XPT_TEMP\22}, { (1UL << 6), \22XPT_DEAD\22}, { (1UL << 7), \22XPT_CHNGBUF\22}, { (1UL << 8), \22XPT_DEFERRED\22}, { (1UL << 9), \22XPT_OLD\22}, { (1UL << 10), \22XPT_LISTENER\22}, { (1UL << 11), \22XPT_CACHE_AUTH\22}, { (1UL << 12), \22XPT_LOCAL\22}, { (1UL << 13), \22XPT_KILL_TEMP\22}, { (1UL << 14), \22XPT_CONG_CTRL\22})\00", [279 x i8] zeroinitializer }, align 32
@event_svcsock_tcp_state = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_tcp_state, %union.anon.179 { ptr @__tracepoint_svcsock_tcp_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_tcp_state }, ptr @print_fmt_svcsock_tcp_state, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_tcp_state = internal global ptr @event_svcsock_tcp_state, section "_ftrace_events", align 4
@trace_event_fields_svcsock_accept_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.248, %union.anon.177 { %struct.anon.178 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.236, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.177 { %struct.anon.178 { ptr @.str.301, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcsock_accept_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svcsock_accept_class, ptr @perf_trace_svcsock_accept_class, ptr @trace_event_reg, ptr @trace_event_fields_svcsock_accept_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcsock_accept_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcsock_accept_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcsock_accept_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcsock_accept_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcsock_accept_class = internal global { [71 x i8], [57 x i8] } { [71 x i8] c"\22addr=listener service=%s status=%ld\22, __get_str(service), REC->status\00", [57 x i8] zeroinitializer }, align 32
@event_svcsock_accept_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_accept_class, %union.anon.179 { ptr @__tracepoint_svcsock_accept_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_accept_class }, ptr @print_fmt_svcsock_accept_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_accept_err = internal global ptr @event_svcsock_accept_err, section "_ftrace_events", align 4
@event_svcsock_getpeername_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcsock_accept_class, %union.anon.179 { ptr @__tracepoint_svcsock_getpeername_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcsock_accept_class }, ptr @print_fmt_svcsock_accept_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcsock_getpeername_err = internal global ptr @event_svcsock_getpeername_err, section "_ftrace_events", align 4
@trace_event_fields_cache_event = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.303, %union.anon.177 { %struct.anon.178 { ptr @.str.304, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.305, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_cache_event = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_cache_event, ptr @perf_trace_cache_event, ptr @trace_event_reg, ptr @trace_event_fields_cache_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_cache_event, i64 24), ptr getelementptr (i8, ptr @event_class_cache_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_cache_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_cache_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_cache_event = internal global { [45 x i8], [51 x i8] } { [45 x i8] c"\22cache=%s entry=%p\22, __get_str(name), REC->h\00", [51 x i8] zeroinitializer }, align 32
@event_cache_entry_expired = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.179 { ptr @__tracepoint_cache_entry_expired }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cache_entry_expired = internal global ptr @event_cache_entry_expired, section "_ftrace_events", align 4
@event_cache_entry_upcall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.179 { ptr @__tracepoint_cache_entry_upcall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cache_entry_upcall = internal global ptr @event_cache_entry_upcall, section "_ftrace_events", align 4
@event_cache_entry_update = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.179 { ptr @__tracepoint_cache_entry_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cache_entry_update = internal global ptr @event_cache_entry_update, section "_ftrace_events", align 4
@event_cache_entry_make_negative = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.179 { ptr @__tracepoint_cache_entry_make_negative }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cache_entry_make_negative = internal global ptr @event_cache_entry_make_negative, section "_ftrace_events", align 4
@event_cache_entry_no_listener = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cache_event, %union.anon.179 { ptr @__tracepoint_cache_entry_no_listener }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cache_event }, ptr @print_fmt_cache_event, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cache_entry_no_listener = internal global ptr @event_cache_entry_no_listener, section "_ftrace_events", align 4
@trace_event_fields_register_class = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.177 { %struct.anon.178 { ptr @.str.278, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.177 { %struct.anon.178 { ptr @.str.212, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.177 { %struct.anon.178 { ptr @.str.75, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_register_class = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_register_class, ptr @perf_trace_register_class, ptr @trace_event_reg, ptr @trace_event_fields_register_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_register_class, i64 24), ptr getelementptr (i8, ptr @event_class_register_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_register_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_register_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_register_class = internal global { [281 x i8], [71 x i8] } { [281 x i8] c"\22program=%sv%u proto=%s port=%u family=%s error=%d\22, __get_str(program), REC->version, REC->protocol == IPPROTO_UDP ? \22udp\22 : \22tcp\22, REC->port, __print_symbolic(REC->family, { 0, \22AF_UNSPEC\22 }, { 1, \22AF_UNIX\22 }, { 1, \22AF_LOCAL\22 }, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->error\00", [71 x i8] zeroinitializer }, align 32
@event_svc_register = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_register_class, %union.anon.179 { ptr @__tracepoint_svc_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_register_class }, ptr @print_fmt_register_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_register = internal global ptr @event_svc_register, section "_ftrace_events", align 4
@event_svc_noregister = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_register_class, %union.anon.179 { ptr @__tracepoint_svc_noregister }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_register_class }, ptr @print_fmt_register_class, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_noregister = internal global ptr @event_svc_noregister, section "_ftrace_events", align 4
@trace_event_fields_svc_unregister = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.129, %union.anon.177 { %struct.anon.178 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.177 { %struct.anon.178 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.177 { %struct.anon.178 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svc_unregister = internal global %struct.trace_event_class { ptr @str__sunrpc__trace_system_name, ptr @trace_event_raw_event_svc_unregister, ptr @perf_trace_svc_unregister, ptr @trace_event_reg, ptr @trace_event_fields_svc_unregister, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svc_unregister, i64 24), ptr getelementptr (i8, ptr @event_class_svc_unregister, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svc_unregister = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svc_unregister, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svc_unregister = internal global { [71 x i8], [57 x i8] } { [71 x i8] c"\22program=%sv%u error=%d\22, __get_str(program), REC->version, REC->error\00", [57 x i8] zeroinitializer }, align 32
@event_svc_unregister = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svc_unregister, %union.anon.179 { ptr @__tracepoint_svc_unregister }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svc_unregister }, ptr @print_fmt_svc_unregister, ptr null, %union.anon.180 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svc_unregister = internal global ptr @event_svc_unregister, section "_ftrace_events", align 4
@__bpf_trace_tp_map_rpc_xdr_sendto = internal global %union.anon.181 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_xdr_sendto, ptr @__bpf_trace_rpc_xdr_buf_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_xdr_recvfrom = internal global %union.anon.182 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_xdr_recvfrom, ptr @__bpf_trace_rpc_xdr_buf_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_xdr_reply_pages = internal global %union.anon.183 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_xdr_reply_pages, ptr @__bpf_trace_rpc_xdr_buf_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_free = internal global %union.anon.184 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_free, ptr @__bpf_trace_rpc_clnt_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_killall = internal global %union.anon.185 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_killall, ptr @__bpf_trace_rpc_clnt_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_shutdown = internal global %union.anon.186 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_shutdown, ptr @__bpf_trace_rpc_clnt_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_release = internal global %union.anon.187 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_release, ptr @__bpf_trace_rpc_clnt_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_replace_xprt = internal global %union.anon.188 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_replace_xprt, ptr @__bpf_trace_rpc_clnt_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_replace_xprt_err = internal global %union.anon.189 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_replace_xprt_err, ptr @__bpf_trace_rpc_clnt_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_new = internal global %union.anon.190 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_new, ptr @__bpf_trace_rpc_clnt_new, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_new_err = internal global %union.anon.191 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_new_err, ptr @__bpf_trace_rpc_clnt_new_err, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_clnt_clone_err = internal global %union.anon.192 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_clnt_clone_err, ptr @__bpf_trace_rpc_clnt_clone_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_call_status = internal global %union.anon.193 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_call_status, ptr @__bpf_trace_rpc_task_status, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_connect_status = internal global %union.anon.194 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_connect_status, ptr @__bpf_trace_rpc_task_status, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_timeout_status = internal global %union.anon.195 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_timeout_status, ptr @__bpf_trace_rpc_task_status, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_retry_refresh_status = internal global %union.anon.196 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_retry_refresh_status, ptr @__bpf_trace_rpc_task_status, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_refresh_status = internal global %union.anon.197 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_refresh_status, ptr @__bpf_trace_rpc_task_status, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_request = internal global %union.anon.198 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_request, ptr @__bpf_trace_rpc_request, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_begin = internal global %union.anon.199 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_begin, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_run_action = internal global %union.anon.200 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_run_action, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_sync_sleep = internal global %union.anon.201 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_sync_sleep, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_sync_wake = internal global %union.anon.202 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_sync_wake, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_complete = internal global %union.anon.203 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_complete, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_timeout = internal global %union.anon.204 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_timeout, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_signalled = internal global %union.anon.205 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_signalled, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_end = internal global %union.anon.206 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_end, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_call_done = internal global %union.anon.207 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_call_done, ptr @__bpf_trace_rpc_task_running, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_sleep = internal global %union.anon.208 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_sleep, ptr @__bpf_trace_rpc_task_queued, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_task_wakeup = internal global %union.anon.209 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_task_wakeup, ptr @__bpf_trace_rpc_task_queued, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_bad_callhdr = internal global %union.anon.210 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_bad_callhdr, ptr @__bpf_trace_rpc_failure, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_bad_verifier = internal global %union.anon.211 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_bad_verifier, ptr @__bpf_trace_rpc_failure, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__prog_unavail = internal global %union.anon.212 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__prog_unavail, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__prog_mismatch = internal global %union.anon.213 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__prog_mismatch, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__proc_unavail = internal global %union.anon.214 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__proc_unavail, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__garbage_args = internal global %union.anon.215 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__garbage_args, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__unparsable = internal global %union.anon.216 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__unparsable, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__mismatch = internal global %union.anon.217 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__mismatch, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__stale_creds = internal global %union.anon.218 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__stale_creds, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__bad_creds = internal global %union.anon.219 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__bad_creds, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc__auth_tooweak = internal global %union.anon.220 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc__auth_tooweak, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_prog_unavail_err = internal global %union.anon.221 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_prog_unavail_err, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_timeout_err = internal global %union.anon.222 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_timeout_err, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_bind_version_err = internal global %union.anon.223 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_bind_version_err, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_unreachable_err = internal global %union.anon.224 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_unreachable_err, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_unrecognized_err = internal global %union.anon.225 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_unrecognized_err, ptr @__bpf_trace_rpc_reply_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_buf_alloc = internal global %union.anon.226 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_buf_alloc, ptr @__bpf_trace_rpc_buf_alloc, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_call_rpcerror = internal global %union.anon.227 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_call_rpcerror, ptr @__bpf_trace_rpc_call_rpcerror, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_stats_latency = internal global %union.anon.228 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_stats_latency, ptr @__bpf_trace_rpc_stats_latency, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_xdr_overflow = internal global %union.anon.229 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_xdr_overflow, ptr @__bpf_trace_rpc_xdr_overflow, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_xdr_alignment = internal global %union.anon.230 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_xdr_alignment, ptr @__bpf_trace_rpc_xdr_alignment, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_state_change = internal global %union.anon.231 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_state_change, ptr @__bpf_trace_xs_socket_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_connect = internal global %union.anon.232 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_connect, ptr @__bpf_trace_xs_socket_event_done, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_error = internal global %union.anon.233 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_error, ptr @__bpf_trace_xs_socket_event_done, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_reset_connection = internal global %union.anon.234 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_reset_connection, ptr @__bpf_trace_xs_socket_event_done, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_close = internal global %union.anon.235 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_close, ptr @__bpf_trace_xs_socket_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_shutdown = internal global %union.anon.236 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_shutdown, ptr @__bpf_trace_xs_socket_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpc_socket_nospace = internal global %union.anon.237 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpc_socket_nospace, ptr @__bpf_trace_rpc_socket_nospace, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_create = internal global %union.anon.238 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_create, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_connect = internal global %union.anon.239 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_connect, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_disconnect_auto = internal global %union.anon.240 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_disconnect_auto, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_disconnect_done = internal global %union.anon.241 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_disconnect_done, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_disconnect_force = internal global %union.anon.242 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_disconnect_force, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_disconnect_cleanup = internal global %union.anon.243 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_disconnect_cleanup, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_destroy = internal global %union.anon.244 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_destroy, ptr @__bpf_trace_rpc_xprt_lifetime_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_timer = internal global %union.anon.245 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_timer, ptr @__bpf_trace_rpc_xprt_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_lookup_rqst = internal global %union.anon.246 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_lookup_rqst, ptr @__bpf_trace_rpc_xprt_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_transmit = internal global %union.anon.247 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_transmit, ptr @__bpf_trace_xprt_transmit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_retransmit = internal global %union.anon.248 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_retransmit, ptr @__bpf_trace_xprt_retransmit, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_ping = internal global %union.anon.249 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_ping, ptr @__bpf_trace_xprt_ping, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_reserve_xprt = internal global %union.anon.250 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_reserve_xprt, ptr @__bpf_trace_xprt_writelock_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_release_xprt = internal global %union.anon.251 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_release_xprt, ptr @__bpf_trace_xprt_writelock_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_reserve_cong = internal global %union.anon.252 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_reserve_cong, ptr @__bpf_trace_xprt_cong_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_release_cong = internal global %union.anon.253 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_release_cong, ptr @__bpf_trace_xprt_cong_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_get_cong = internal global %union.anon.254 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_get_cong, ptr @__bpf_trace_xprt_cong_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_put_cong = internal global %union.anon.255 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_put_cong, ptr @__bpf_trace_xprt_cong_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprt_reserve = internal global %union.anon.256 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprt_reserve, ptr @__bpf_trace_xprt_reserve, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xs_stream_read_data = internal global %union.anon.257 { %struct.bpf_raw_event_map { ptr @__tracepoint_xs_stream_read_data, ptr @__bpf_trace_xs_stream_read_data, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xs_stream_read_request = internal global %union.anon.258 { %struct.bpf_raw_event_map { ptr @__tracepoint_xs_stream_read_request, ptr @__bpf_trace_xs_stream_read_request, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_getport = internal global %union.anon.259 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_getport, ptr @__bpf_trace_rpcb_getport, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_setport = internal global %union.anon.260 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_setport, ptr @__bpf_trace_rpcb_setport, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_pmap_register = internal global %union.anon.261 { %struct.bpf_raw_event_map { ptr @__tracepoint_pmap_register, ptr @__bpf_trace_pmap_register, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_register = internal global %union.anon.262 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_register, ptr @__bpf_trace_rpcb_register, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rpcb_unregister = internal global %union.anon.263 { %struct.bpf_raw_event_map { ptr @__tracepoint_rpcb_unregister, ptr @__bpf_trace_rpcb_unregister, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xdr_recvfrom = internal global %union.anon.264 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xdr_recvfrom, ptr @__bpf_trace_svc_xdr_msg_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xdr_sendto = internal global %union.anon.265 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xdr_sendto, ptr @__bpf_trace_svc_xdr_buf_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_authenticate = internal global %union.anon.266 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_authenticate, ptr @__bpf_trace_svc_authenticate, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_process = internal global %union.anon.267 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_process, ptr @__bpf_trace_svc_process, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_defer = internal global %union.anon.268 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_defer, ptr @__bpf_trace_svc_rqst_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_drop = internal global %union.anon.269 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_drop, ptr @__bpf_trace_svc_rqst_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_send = internal global %union.anon.270 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_send, ptr @__bpf_trace_svc_rqst_status, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_create_err = internal global %union.anon.271 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_create_err, ptr @__bpf_trace_svc_xprt_create_err, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_enqueue = internal global %union.anon.272 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_enqueue, ptr @__bpf_trace_svc_xprt_enqueue, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_no_write_space = internal global %union.anon.273 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_no_write_space, ptr @__bpf_trace_svc_xprt_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_close = internal global %union.anon.274 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_close, ptr @__bpf_trace_svc_xprt_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_detach = internal global %union.anon.275 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_detach, ptr @__bpf_trace_svc_xprt_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_free = internal global %union.anon.276 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_free, ptr @__bpf_trace_svc_xprt_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_accept = internal global %union.anon.277 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_accept, ptr @__bpf_trace_svc_xprt_accept, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_xprt_dequeue = internal global %union.anon.278 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_xprt_dequeue, ptr @__bpf_trace_svc_xprt_dequeue, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_wake_up = internal global %union.anon.279 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_wake_up, ptr @__bpf_trace_svc_wake_up, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_alloc_arg_err = internal global %union.anon.280 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_alloc_arg_err, ptr @__bpf_trace_svc_alloc_arg_err, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_stats_latency = internal global %union.anon.281 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_stats_latency, ptr @__bpf_trace_svc_stats_latency, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_defer_drop = internal global %union.anon.282 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_defer_drop, ptr @__bpf_trace_svc_deferred_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_defer_queue = internal global %union.anon.283 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_defer_queue, ptr @__bpf_trace_svc_deferred_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_defer_recv = internal global %union.anon.284 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_defer_recv, ptr @__bpf_trace_svc_deferred_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_new_socket = internal global %union.anon.285 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_new_socket, ptr @__bpf_trace_svcsock_new_socket, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_marker = internal global %union.anon.286 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_marker, ptr @__bpf_trace_svcsock_marker, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_udp_send = internal global %union.anon.287 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_udp_send, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_udp_recv = internal global %union.anon.288 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_udp_recv, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_udp_recv_err = internal global %union.anon.289 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_udp_recv_err, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_tcp_send = internal global %union.anon.290 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_tcp_send, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_tcp_recv = internal global %union.anon.291 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_tcp_recv, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_tcp_recv_eagain = internal global %union.anon.292 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_tcp_recv_eagain, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_tcp_recv_err = internal global %union.anon.293 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_tcp_recv_err, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_data_ready = internal global %union.anon.294 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_data_ready, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_write_space = internal global %union.anon.295 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_write_space, ptr @__bpf_trace_svcsock_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_tcp_recv_short = internal global %union.anon.296 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_tcp_recv_short, ptr @__bpf_trace_svcsock_tcp_recv_short, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_tcp_state = internal global %union.anon.297 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_tcp_state, ptr @__bpf_trace_svcsock_tcp_state, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_accept_err = internal global %union.anon.298 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_accept_err, ptr @__bpf_trace_svcsock_accept_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcsock_getpeername_err = internal global %union.anon.299 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcsock_getpeername_err, ptr @__bpf_trace_svcsock_accept_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cache_entry_expired = internal global %union.anon.300 { %struct.bpf_raw_event_map { ptr @__tracepoint_cache_entry_expired, ptr @__bpf_trace_cache_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cache_entry_upcall = internal global %union.anon.301 { %struct.bpf_raw_event_map { ptr @__tracepoint_cache_entry_upcall, ptr @__bpf_trace_cache_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cache_entry_update = internal global %union.anon.302 { %struct.bpf_raw_event_map { ptr @__tracepoint_cache_entry_update, ptr @__bpf_trace_cache_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cache_entry_make_negative = internal global %union.anon.303 { %struct.bpf_raw_event_map { ptr @__tracepoint_cache_entry_make_negative, ptr @__bpf_trace_cache_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cache_entry_no_listener = internal global %union.anon.304 { %struct.bpf_raw_event_map { ptr @__tracepoint_cache_entry_no_listener, ptr @__bpf_trace_cache_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_register = internal global %union.anon.305 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_register, ptr @__bpf_trace_register_class, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_noregister = internal global %union.anon.306 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_noregister, ptr @__bpf_trace_register_class, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svc_unregister = internal global %union.anon.307 { %struct.bpf_raw_event_map { ptr @__tracepoint_svc_unregister, ptr @__bpf_trace_svc_unregister, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@xprtiod_workqueue = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_xprtiod_workqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_xprtiod_workqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_xprtiod_workqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @xprtiod_workqueue to i32), ptr @__kstrtab_xprtiod_workqueue, ptr @__kstrtabns_xprtiod_workqueue }, section "___ksymtab_gpl+xprtiod_workqueue", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__kstrtab_rpc_task_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_task_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_task_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_task_timeout to i32), ptr @__kstrtab_rpc_task_timeout, ptr @__kstrtabns_rpc_task_timeout }, section "___ksymtab_gpl+rpc_task_timeout", align 4
@__kstrtab_rpc_init_priority_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_init_priority_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_init_priority_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_init_priority_wait_queue to i32), ptr @__kstrtab_rpc_init_priority_wait_queue, ptr @__kstrtabns_rpc_init_priority_wait_queue }, section "___ksymtab_gpl+rpc_init_priority_wait_queue", align 4
@__kstrtab_rpc_init_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_init_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_init_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_init_wait_queue to i32), ptr @__kstrtab_rpc_init_wait_queue, ptr @__kstrtabns_rpc_init_wait_queue }, section "___ksymtab_gpl+rpc_init_wait_queue", align 4
@__kstrtab_rpc_destroy_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_destroy_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_destroy_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_destroy_wait_queue to i32), ptr @__kstrtab_rpc_destroy_wait_queue, ptr @__kstrtabns_rpc_destroy_wait_queue }, section "___ksymtab_gpl+rpc_destroy_wait_queue", align 4
@__kstrtab___rpc_wait_for_completion_task = external dso_local constant [0 x i8], align 1
@__kstrtabns___rpc_wait_for_completion_task = external dso_local constant [0 x i8], align 1
@__ksymtab___rpc_wait_for_completion_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__rpc_wait_for_completion_task to i32), ptr @__kstrtab___rpc_wait_for_completion_task, ptr @__kstrtabns___rpc_wait_for_completion_task }, section "___ksymtab_gpl+__rpc_wait_for_completion_task", align 4
@__kstrtab_rpc_sleep_on_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on_timeout to i32), ptr @__kstrtab_rpc_sleep_on_timeout, ptr @__kstrtabns_rpc_sleep_on_timeout }, section "___ksymtab_gpl+rpc_sleep_on_timeout", align 4
@rpc_sleep_on.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.54 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"net/sunrpc/sched.c\00", [45 x i8] zeroinitializer }, align 32
@__kstrtab_rpc_sleep_on = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on to i32), ptr @__kstrtab_rpc_sleep_on, ptr @__kstrtabns_rpc_sleep_on }, section "___ksymtab_gpl+rpc_sleep_on", align 4
@__kstrtab_rpc_sleep_on_priority_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on_priority_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on_priority_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on_priority_timeout to i32), ptr @__kstrtab_rpc_sleep_on_priority_timeout, ptr @__kstrtabns_rpc_sleep_on_priority_timeout }, section "___ksymtab_gpl+rpc_sleep_on_priority_timeout", align 4
@rpc_sleep_on_priority.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_rpc_sleep_on_priority = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_sleep_on_priority = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_sleep_on_priority = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_sleep_on_priority to i32), ptr @__kstrtab_rpc_sleep_on_priority, ptr @__kstrtabns_rpc_sleep_on_priority }, section "___ksymtab_gpl+rpc_sleep_on_priority", align 4
@__kstrtab_rpc_wake_up_queued_task = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_queued_task = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_queued_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_queued_task to i32), ptr @__kstrtab_rpc_wake_up_queued_task, ptr @__kstrtabns_rpc_wake_up_queued_task }, section "___ksymtab_gpl+rpc_wake_up_queued_task", align 4
@rpciod_workqueue = dso_local local_unnamed_addr global ptr null, section ".data..read_mostly", align 4
@__kstrtab_rpc_wake_up_first = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_first = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_first = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_first to i32), ptr @__kstrtab_rpc_wake_up_first, ptr @__kstrtabns_rpc_wake_up_first }, section "___ksymtab_gpl+rpc_wake_up_first", align 4
@__kstrtab_rpc_wake_up_next = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_next = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_next = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_next to i32), ptr @__kstrtab_rpc_wake_up_next, ptr @__kstrtabns_rpc_wake_up_next }, section "___ksymtab_gpl+rpc_wake_up_next", align 4
@__kstrtab_rpc_wake_up = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up to i32), ptr @__kstrtab_rpc_wake_up, ptr @__kstrtabns_rpc_wake_up }, section "___ksymtab_gpl+rpc_wake_up", align 4
@__kstrtab_rpc_wake_up_status = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_wake_up_status = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_wake_up_status = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_wake_up_status to i32), ptr @__kstrtab_rpc_wake_up_status, ptr @__kstrtabns_rpc_wake_up_status }, section "___ksymtab_gpl+rpc_wake_up_status", align 4
@delay_queue = internal global { %struct.rpc_wait_queue, [56 x i8] } zeroinitializer, align 32
@__kstrtab_rpc_delay = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_delay = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_delay = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_delay to i32), ptr @__kstrtab_rpc_delay, ptr @__kstrtabns_rpc_delay }, section "___ksymtab_gpl+rpc_delay", align 4
@__kstrtab_rpc_exit = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_exit = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_exit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_exit to i32), ptr @__kstrtab_rpc_exit, ptr @__kstrtabns_rpc_exit }, section "___ksymtab_gpl+rpc_exit", align 4
@rpc_buffer_mempool = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@__kstrtab_rpc_malloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_malloc = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_malloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_malloc to i32), ptr @__kstrtab_rpc_malloc, ptr @__kstrtabns_rpc_malloc }, section "___ksymtab_gpl+rpc_malloc", align 4
@__kstrtab_rpc_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_free = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_free to i32), ptr @__kstrtab_rpc_free, ptr @__kstrtabns_rpc_free }, section "___ksymtab_gpl+rpc_free", align 4
@__kstrtab_rpc_put_task = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_put_task = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_put_task = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_put_task to i32), ptr @__kstrtab_rpc_put_task, ptr @__kstrtabns_rpc_put_task }, section "___ksymtab_gpl+rpc_put_task", align 4
@__kstrtab_rpc_put_task_async = external dso_local constant [0 x i8], align 1
@__kstrtabns_rpc_put_task_async = external dso_local constant [0 x i8], align 1
@__ksymtab_rpc_put_task_async = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rpc_put_task_async to i32), ptr @__kstrtab_rpc_put_task_async, ptr @__kstrtabns_rpc_put_task_async }, section "___ksymtab_gpl+rpc_put_task_async", align 4
@rpc_task_mempool = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@rpc_task_slabp = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@rpc_buffer_slabp = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@.str.55 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"delayq\00", [25 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rpc_tasks\00", [22 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"rpc_buffers\00", [20 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"task_id\00", [24 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"client_id\00", [22 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const void *\00", [19 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"head_base\00", [22 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"size_t\00", [25 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"head_len\00", [23 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"tail_base\00", [22 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"tail_len\00", [23 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"page_base\00", [22 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"page_len\00", [23 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"msg_len\00", [24 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"task:%08x@%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"client=%08x\0A\00", [19 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"addr\00", [27 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"port\00", [27 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"program\00", [24 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"server\00", [25 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"client=%08x peer=[%s]:%s program=%s server=%s\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"program=%s server=%s error=%d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"client=%08x error=%d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"task:%08x@%08x status=%d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"async\00", [26 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"progname\00", [23 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"procname\00", [23 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"task:%08x@%08x %sv%d %s (%ssync)\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"a\00", [30 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.93 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"action\00", [25 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"runstate\00", [23 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"unsigned short\00", [17 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"task:%08x@%08x flags=%s runstate=%s status=%d action=%ps\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_raw_output_rpc_task_running.__flags = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.99 }, %struct.trace_print_flags { i32 2, ptr @.str.100 }, %struct.trace_print_flags { i32 4, ptr @.str.101 }, %struct.trace_print_flags { i32 16, ptr @.str.102 }, %struct.trace_print_flags { i32 32, ptr @.str.103 }, %struct.trace_print_flags { i32 64, ptr @.str.104 }, %struct.trace_print_flags { i32 128, ptr @.str.105 }, %struct.trace_print_flags { i32 256, ptr @.str.106 }, %struct.trace_print_flags { i32 512, ptr @.str.107 }, %struct.trace_print_flags { i32 1024, ptr @.str.108 }, %struct.trace_print_flags { i32 2048, ptr @.str.109 }, %struct.trace_print_flags { i32 4096, ptr @.str.110 }, %struct.trace_print_flags { i32 8192, ptr @.str.111 }, %struct.trace_print_flags { i32 16384, ptr @.str.112 }, %struct.trace_print_flags { i32 32768, ptr @.str.113 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ASYNC\00", [26 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SWAPPER\00", [24 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"MOVEABLE\00", [23 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NULLCREDS\00", [22 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"MAJORSEEN\00", [22 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ROOTCREDS\00", [22 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"DYNAMIC\00", [24 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"NO_ROUND_ROBIN\00", [17 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"SOFT\00", [27 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SOFTCONN\00", [23 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"SENT\00", [27 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"TIMEOUT\00", [24 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NOCONNECT\00", [22 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"NORTO\00", [26 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"CRED_NOREF\00", [21 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@trace_raw_output_rpc_task_running.__flags.115 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.116 }, %struct.trace_print_flags { i32 2, ptr @.str.117 }, %struct.trace_print_flags { i32 4, ptr @.str.118 }, %struct.trace_print_flags { i32 8, ptr @.str.119 }, %struct.trace_print_flags { i32 16, ptr @.str.120 }, %struct.trace_print_flags { i32 32, ptr @.str.121 }, %struct.trace_print_flags { i32 64, ptr @.str.122 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RUNNING\00", [24 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"QUEUED\00", [25 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ACTIVE\00", [25 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NEED_XMIT\00", [22 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NEED_RECV\00", [22 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"MSG_PIN_WAIT\00", [19 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SIGNALLED\00", [22 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"timeout\00", [24 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"q_name\00", [25 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"task:%08x@%08x flags=%s runstate=%s status=%d timeout=%lu queue=%s\0A\00", [60 x i8] zeroinitializer }, align 32
@trace_raw_output_rpc_task_queued.__flags = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.99 }, %struct.trace_print_flags { i32 2, ptr @.str.100 }, %struct.trace_print_flags { i32 4, ptr @.str.101 }, %struct.trace_print_flags { i32 16, ptr @.str.102 }, %struct.trace_print_flags { i32 32, ptr @.str.103 }, %struct.trace_print_flags { i32 64, ptr @.str.104 }, %struct.trace_print_flags { i32 128, ptr @.str.105 }, %struct.trace_print_flags { i32 256, ptr @.str.106 }, %struct.trace_print_flags { i32 512, ptr @.str.107 }, %struct.trace_print_flags { i32 1024, ptr @.str.108 }, %struct.trace_print_flags { i32 2048, ptr @.str.109 }, %struct.trace_print_flags { i32 4096, ptr @.str.110 }, %struct.trace_print_flags { i32 8192, ptr @.str.111 }, %struct.trace_print_flags { i32 16384, ptr @.str.112 }, %struct.trace_print_flags { i32 32768, ptr @.str.113 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_rpc_task_queued.__flags.127 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.116 }, %struct.trace_print_flags { i32 2, ptr @.str.117 }, %struct.trace_print_flags { i32 4, ptr @.str.118 }, %struct.trace_print_flags { i32 8, ptr @.str.119 }, %struct.trace_print_flags { i32 16, ptr @.str.120 }, %struct.trace_print_flags { i32 32, ptr @.str.121 }, %struct.trace_print_flags { i32 64, ptr @.str.122 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"task:%08x@%08x\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u32\00", [28 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"xid\00", [28 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"servername\00", [21 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"task:%08x@%08x server=%s xid=0x%08x %sv%d %s\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"callsize\00", [23 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"recvsize\00", [23 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"task:%08x@%08x callsize=%zu recvsize=%zu status=%d\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"tk_status\00", [22 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rpc_status\00", [21 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"task:%08x@%08x tk_status=%d rpc_status=%d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"backlog\00", [24 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rtt\00", [28 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"execute\00", [24 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"task:%08x@%08x xid=0x%08x %sv%d %s backlog=%lu rtt=%lu execute=%lu\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"requested\00", [22 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"end\00", [28 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"p\00", [30 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"procedure\00", [22 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"task:%08x@%08x %sv%d %s requested=%zu p=%p end=%p xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"copied\00", [25 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"task:%08x@%08x %sv%d %s offset=%zu copied=%u xdr=[%p,%zu]/%u/[%p,%zu]/%u\0A\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"socket_state\00", [19 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sock_state\00", [21 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"unsigned long long\00", [45 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ino\00", [28 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"__u8[sizeof(struct sockaddr_in6)]\00", [62 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"saddr\00", [26 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"daddr\00", [26 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_xs_socket_event.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.160 }, %struct.trace_print_flags { i32 1, ptr @.str.161 }, %struct.trace_print_flags { i32 2, ptr @.str.162 }, %struct.trace_print_flags { i32 3, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.164 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"FREE\00", [27 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"UNCONNECTED\00", [20 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"CONNECTING\00", [21 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CONNECTED\00", [22 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"DISCONNECTING\00", [18 x i8] zeroinitializer }, align 32
@trace_raw_output_xs_socket_event.symbols.165 = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.166 }, %struct.trace_print_flags { i32 2, ptr @.str.167 }, %struct.trace_print_flags { i32 3, ptr @.str.168 }, %struct.trace_print_flags { i32 4, ptr @.str.169 }, %struct.trace_print_flags { i32 5, ptr @.str.170 }, %struct.trace_print_flags { i32 6, ptr @.str.171 }, %struct.trace_print_flags { i32 7, ptr @.str.172 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 9, ptr @.str.174 }, %struct.trace_print_flags { i32 10, ptr @.str.175 }, %struct.trace_print_flags { i32 11, ptr @.str.176 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ESTABLISHED\00", [20 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SYN_SENT\00", [23 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SYN_RECV\00", [23 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"FIN_WAIT1\00", [22 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"FIN_WAIT2\00", [22 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"TIME_WAIT\00", [22 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"CLOSE\00", [26 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"CLOSE_WAIT\00", [21 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"LAST_ACK\00", [23 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"LISTEN\00", [25 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CLOSING\00", [24 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"error=%d socket:[%llu] srcaddr=%pISpc dstaddr=%pISpc state=%u (%s) sk_state=%u (%s)\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_xs_socket_event_done.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.160 }, %struct.trace_print_flags { i32 1, ptr @.str.161 }, %struct.trace_print_flags { i32 2, ptr @.str.162 }, %struct.trace_print_flags { i32 3, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.164 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_xs_socket_event_done.symbols.178 = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.166 }, %struct.trace_print_flags { i32 2, ptr @.str.167 }, %struct.trace_print_flags { i32 3, ptr @.str.168 }, %struct.trace_print_flags { i32 4, ptr @.str.169 }, %struct.trace_print_flags { i32 5, ptr @.str.170 }, %struct.trace_print_flags { i32 6, ptr @.str.171 }, %struct.trace_print_flags { i32 7, ptr @.str.172 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 9, ptr @.str.174 }, %struct.trace_print_flags { i32 10, ptr @.str.175 }, %struct.trace_print_flags { i32 11, ptr @.str.176 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"total\00", [26 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"remaining\00", [22 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"task:%08x@%08x total=%u remaining=%u\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"state\00", [26 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"peer=[%s]:%s state=%s\0A\00", [41 x i8] zeroinitializer }, align 32
@trace_raw_output_rpc_xprt_lifetime_class.__flags = internal constant { [14 x %struct.trace_print_flags], [48 x i8] } { [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.184 }, %struct.trace_print_flags { i32 2, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.162 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 16, ptr @.str.185 }, %struct.trace_print_flags { i32 32, ptr @.str.186 }, %struct.trace_print_flags { i32 64, ptr @.str.176 }, %struct.trace_print_flags { i32 128, ptr @.str.187 }, %struct.trace_print_flags { i32 256, ptr @.str.188 }, %struct.trace_print_flags { i32 512, ptr @.str.189 }, %struct.trace_print_flags { i32 1024, ptr @.str.190 }, %struct.trace_print_flags { i32 2048, ptr @.str.191 }, %struct.trace_print_flags { i32 4096, ptr @.str.192 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"LOCKED\00", [25 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"BOUND\00", [26 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BINDING\00", [24 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"OFFLINE\00", [24 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"REMOVE\00", [25 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CONGESTED\00", [22 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CWND_WAIT\00", [22 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"WRITE_SPACE\00", [20 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"SND_IS_COOKIE\00", [18 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"peer=[%s]:%s xid=0x%08x status=%d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"seqno\00", [26 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"task:%08x@%08x xid=0x%08x seqno=%u status=%d\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ntrans\00", [25 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"task:%08x@%08x xid=0x%08x %sv%d %s ntrans=%d timeout=%lu\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"peer=[%s]:%s status=%d\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"snd_task_id\00", [20 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"task:%08x@%08x snd_task:%08x\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"cong\00", [27 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"cwnd\00", [27 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wait\00", [27 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"task:%08x@%08x snd_task:%08x cong=%lu cwnd=%lu%s\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" (wait)\00", [24 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"task:%08x@%08x xid=0x%08x\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ssize_t\00", [24 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"err\00", [28 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"peer=[%s]:%s err=%zd total=%zu\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reclen\00", [25 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"peer=[%s]:%s xid=0x%08x copied=%lu reclen=%u offset=%u\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"protocol\00", [23 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bind_version\00", [19 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"task:%08x@%08x server=%s program=%u version=%u protocol=%d bind_version=%u\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"task:%08x@%08x status=%d port=%u\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"program=%u version=%u protocol=%d port=%u\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"netid\00", [26 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"program=%u version=%u addr=%s netid=%s\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"program=%u version=%u netid=%s\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"xid=0x%08x head=[%p,%zu] page=%u tail=[%p,%zu] len=%u\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"xid=0x%08x head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"svc_status\00", [21 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"auth_stat\00", [22 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"xid=0x%08x auth_res=%s auth_stat=%s\0A\00", [59 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_authenticate.symbols = internal constant { [11 x %struct.trace_print_flags], [40 x i8] } { [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.44 }, %struct.trace_print_flags { i32 2, ptr @.str.45 }, %struct.trace_print_flags { i32 3, ptr @.str.46 }, %struct.trace_print_flags { i32 4, ptr @.str.47 }, %struct.trace_print_flags { i32 5, ptr @.str.48 }, %struct.trace_print_flags { i32 6, ptr @.str.49 }, %struct.trace_print_flags { i32 7, ptr @.str.50 }, %struct.trace_print_flags { i32 8, ptr @.str.51 }, %struct.trace_print_flags { i32 9, ptr @.str.52 }, %struct.trace_print_flags { i32 10, ptr @.str.53 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_authenticate.symbols.225 = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.226 }, %struct.trace_print_flags { i32 1, ptr @.str.227 }, %struct.trace_print_flags { i32 2, ptr @.str.228 }, %struct.trace_print_flags { i32 3, ptr @.str.229 }, %struct.trace_print_flags { i32 4, ptr @.str.230 }, %struct.trace_print_flags { i32 5, ptr @.str.231 }, %struct.trace_print_flags { i32 13, ptr @.str.232 }, %struct.trace_print_flags { i32 14, ptr @.str.233 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"AUTH_OK\00", [24 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BADCRED\00", [24 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"REJECTEDCRED\00", [19 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BADVERF\00", [24 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"REJECTEDVERF\00", [19 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"TOOWEAK\00", [24 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GSS_CREDPROBLEM\00", [16 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"GSS_CTXPROBLEM\00", [17 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"vers\00", [27 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"proc\00", [27 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"service\00", [24 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"addr=%s xid=0x%08x service=%s vers=%u proc=%s\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"addr=%s xid=0x%08x flags=%s\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_rqst_event.__flags = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.239 }, %struct.trace_print_flags { i32 2, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 8, ptr @.str.242 }, %struct.trace_print_flags { i32 16, ptr @.str.243 }, %struct.trace_print_flags { i32 32, ptr @.str.244 }, %struct.trace_print_flags { i32 64, ptr @.str.245 }, %struct.trace_print_flags { i32 128, ptr @.str.246 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SECURE\00", [25 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"LOCAL\00", [26 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"USEDEFERRAL\00", [20 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"DROPME\00", [25 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SPLICE_OK\00", [22 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"VICTIM\00", [25 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"BUSY\00", [27 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DATA\00", [27 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"addr=%s xid=0x%08x status=%d flags=%s\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_rqst_status.__flags = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.239 }, %struct.trace_print_flags { i32 2, ptr @.str.240 }, %struct.trace_print_flags { i32 4, ptr @.str.241 }, %struct.trace_print_flags { i32 8, ptr @.str.242 }, %struct.trace_print_flags { i32 16, ptr @.str.243 }, %struct.trace_print_flags { i32 32, ptr @.str.244 }, %struct.trace_print_flags { i32 64, ptr @.str.245 }, %struct.trace_print_flags { i32 128, ptr @.str.246 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"unsigned char[sizeof(struct sockaddr_in6)]\00", [53 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"addr=%pISpc program=%s protocol=%s error=%ld\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pid\00", [28 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"addr=%s pid=%d flags=%s\0A\00", [39 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_xprt_enqueue.__flags = internal constant { [15 x %struct.trace_print_flags], [40 x i8] } { [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"XPT_BUSY\00", [23 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"XPT_CONN\00", [23 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"XPT_CLOSE\00", [22 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"XPT_DATA\00", [23 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"XPT_TEMP\00", [23 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"XPT_DEAD\00", [23 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"XPT_CHNGBUF\00", [20 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"XPT_DEFERRED\00", [19 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"XPT_OLD\00", [24 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"XPT_LISTENER\00", [19 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"XPT_CACHE_AUTH\00", [17 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"XPT_LOCAL\00", [22 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"XPT_KILL_TEMP\00", [18 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"XPT_CONG_CTRL\00", [18 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"addr=%s flags=%s\0A\00", [46 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_xprt_event.__flags = internal constant { [15 x %struct.trace_print_flags], [40 x i8] } { [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"addr=%s protocol=%s service=%s\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"wakeup\00", [25 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"addr=%s flags=%s wakeup-us=%lu\0A\00", [32 x i8] zeroinitializer }, align 32
@trace_raw_output_svc_xprt_dequeue.__flags = internal constant { [15 x %struct.trace_print_flags], [40 x i8] } { [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"pid=%d\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"pages\00", [26 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"pages=%u\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"addr=%s xid=0x%08x proc=%s execute-us=%lu\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"dr\00", [29 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"addr=%s dr=%p xid=0x%08x\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"family\00", [25 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"listener\00", [23 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"type=%s family=%s%s\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_new_socket.symbols = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.281 }, %struct.trace_print_flags { i32 2, ptr @.str.282 }, %struct.trace_print_flags { i32 3, ptr @.str.283 }, %struct.trace_print_flags { i32 4, ptr @.str.284 }, %struct.trace_print_flags { i32 5, ptr @.str.285 }, %struct.trace_print_flags { i32 6, ptr @.str.286 }, %struct.trace_print_flags { i32 10, ptr @.str.287 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"STREAM\00", [25 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"DGRAM\00", [26 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RAW\00", [28 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"RDM\00", [28 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SEQPACKET\00", [22 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DCCP\00", [27 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"PACKET\00", [25 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_new_socket.symbols.288 = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.7 }, %struct.trace_print_flags { i32 1, ptr @.str.8 }, %struct.trace_print_flags { i32 1, ptr @.str.9 }, %struct.trace_print_flags { i32 2, ptr @.str.10 }, %struct.trace_print_flags { i32 10, ptr @.str.11 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c" (listener)\00", [20 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"length\00", [25 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"last\00", [27 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"addr=%s length=%u%s\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" (last)\00", [24 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"result\00", [25 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"addr=%s result=%zd flags=%s\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_class.__flags = internal constant { [15 x %struct.trace_print_flags], [40 x i8] } { [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"expected\00", [23 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"received\00", [23 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"addr=%s flags=%s expected=%u received=%u\0A\00", [54 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_tcp_recv_short.__flags = internal constant { [15 x %struct.trace_print_flags], [40 x i8] } { [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"addr=%s state=%s sk_state=%s flags=%s\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_tcp_state.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.160 }, %struct.trace_print_flags { i32 1, ptr @.str.161 }, %struct.trace_print_flags { i32 2, ptr @.str.162 }, %struct.trace_print_flags { i32 3, ptr @.str.163 }, %struct.trace_print_flags { i32 4, ptr @.str.164 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_tcp_state.symbols.300 = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.166 }, %struct.trace_print_flags { i32 2, ptr @.str.167 }, %struct.trace_print_flags { i32 3, ptr @.str.168 }, %struct.trace_print_flags { i32 4, ptr @.str.169 }, %struct.trace_print_flags { i32 5, ptr @.str.170 }, %struct.trace_print_flags { i32 6, ptr @.str.171 }, %struct.trace_print_flags { i32 7, ptr @.str.172 }, %struct.trace_print_flags { i32 8, ptr @.str.173 }, %struct.trace_print_flags { i32 9, ptr @.str.174 }, %struct.trace_print_flags { i32 10, ptr @.str.175 }, %struct.trace_print_flags { i32 11, ptr @.str.176 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_svcsock_tcp_state.__flags = internal constant { [15 x %struct.trace_print_flags], [40 x i8] } { [15 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.253 }, %struct.trace_print_flags { i32 2, ptr @.str.254 }, %struct.trace_print_flags { i32 4, ptr @.str.255 }, %struct.trace_print_flags { i32 8, ptr @.str.256 }, %struct.trace_print_flags { i32 16, ptr @.str.257 }, %struct.trace_print_flags { i32 64, ptr @.str.258 }, %struct.trace_print_flags { i32 128, ptr @.str.259 }, %struct.trace_print_flags { i32 256, ptr @.str.260 }, %struct.trace_print_flags { i32 512, ptr @.str.261 }, %struct.trace_print_flags { i32 1024, ptr @.str.262 }, %struct.trace_print_flags { i32 2048, ptr @.str.263 }, %struct.trace_print_flags { i32 4096, ptr @.str.264 }, %struct.trace_print_flags { i32 8192, ptr @.str.265 }, %struct.trace_print_flags { i32 16384, ptr @.str.266 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"netns_ino\00", [22 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"addr=listener service=%s status=%ld\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"const struct cache_head *\00", [38 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"h\00", [30 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cache=%s entry=%p\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"program=%sv%u proto=%s port=%u family=%s error=%d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"udp\00", [28 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"tcp\00", [28 x i8] zeroinitializer }, align 32
@trace_raw_output_register_class.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.7 }, %struct.trace_print_flags { i32 1, ptr @.str.8 }, %struct.trace_print_flags { i32 1, ptr @.str.9 }, %struct.trace_print_flags { i32 2, ptr @.str.10 }, %struct.trace_print_flags { i32 10, ptr @.str.11 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"program=%sv%u error=%d\0A\00", [40 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__rpc_init_priority_wait_queue.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.311 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&queue->lock\00", [19 x i8] zeroinitializer }, align 32
@__rpc_init_priority_wait_queue.__key.312 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.313 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"(work_completion)(&(&queue->timer_list.dwork)->work)\00", [43 x i8] zeroinitializer }, align 32
@__rpc_init_priority_wait_queue.__key.314 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.315 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"&(&queue->timer_list.dwork)->timer\00", [61 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/sunrpc.h\00", [34 x i8] zeroinitializer }, align 32
@trace_rpc_task_timeout.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.317 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.318 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/freezer.h\00", [40 x i8] zeroinitializer }, align 32
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@rpc_sleep_check_activated.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rpc_set_tk_callback.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rpc_sleep_on_priority_timeout.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_rpc_task_sleep.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__rpc_sleep_on_priority.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rpc_do_wake_up_task_on_wq._entry = internal constant %struct.pi_entry { ptr @.str.320, ptr @.str.321, ptr @.str.54, i32 506, ptr null, ptr null }, align 1
@.str.320 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013RPC: Inactive task (%p) being woken up!\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"__rpc_do_wake_up_task_on_wq\00", [36 x i8] zeroinitializer }, align 32
@__rpc_do_wake_up_task_on_wq._entry_ptr = internal global ptr @__rpc_do_wake_up_task_on_wq._entry, section ".printk_index", align 4
@trace_rpc_task_wakeup.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_rpc_task_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_rpc_task_call_done.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_rpc_task_signalled.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_task_set_debuginfo.rpc_pid = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@trace_rpc_task_begin.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_make_runnable.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.322 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"(work_completion)(&task->u.tk_work)\00", [60 x i8] zeroinitializer }, align 32
@__rpc_execute.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_rpc_task_run_action.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_rpc_task_sync_sleep.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_rpc_task_sync_wake.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_release_task.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.323 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/cred.h\00", [43 x i8] zeroinitializer }, align 32
@trace_rpc_task_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rpc_final_put_task.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.324 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rpciod\00", [25 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"xprtiod\00", [24 x i8] zeroinitializer }, align 32
@___asan_gen_.326 = private unnamed_addr constant [31 x i8] c"str__sunrpc__trace_system_name\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.327, i32 36, i32 1 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 19, i32 1 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 20, i32 1 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 21, i32 1 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 22, i32 1 }
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 23, i32 1 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 24, i32 1 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 25, i32 1 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 38, i32 1 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 39, i32 1 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 40, i32 1 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 41, i32 1 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 42, i32 1 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 222, i32 1 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 223, i32 1 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 224, i32 1 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 225, i32 1 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 226, i32 1 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 227, i32 1 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 228, i32 1 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 229, i32 1 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 777, i32 1 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 795, i32 1 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1594, i32 1 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1604, i32 1 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1605, i32 1 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1606, i32 1 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1607, i32 1 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1608, i32 1 }
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1609, i32 1 }
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1610, i32 1 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1611, i32 1 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1612, i32 1 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1613, i32 1 }
@___asan_gen_.491 = private unnamed_addr constant [37 x i8] c"trace_event_fields_rpc_xdr_buf_class\00", align 1
@___asan_gen_.494 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_rpc_xdr_buf_class\00", align 1
@___asan_gen_.497 = private unnamed_addr constant [28 x i8] c"print_fmt_rpc_xdr_buf_class\00", align 1
@___asan_gen_.500 = private unnamed_addr constant [21 x i8] c"event_rpc_xdr_sendto\00", align 1
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 104, i32 1 }
@___asan_gen_.503 = private unnamed_addr constant [23 x i8] c"event_rpc_xdr_recvfrom\00", align 1
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 105, i32 1 }
@___asan_gen_.506 = private unnamed_addr constant [26 x i8] c"event_rpc_xdr_reply_pages\00", align 1
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 106, i32 1 }
@___asan_gen_.509 = private unnamed_addr constant [34 x i8] c"trace_event_fields_rpc_clnt_class\00", align 1
@___asan_gen_.512 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_rpc_clnt_class\00", align 1
@___asan_gen_.515 = private unnamed_addr constant [25 x i8] c"print_fmt_rpc_clnt_class\00", align 1
@___asan_gen_.518 = private unnamed_addr constant [20 x i8] c"event_rpc_clnt_free\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 135, i32 1 }
@___asan_gen_.521 = private unnamed_addr constant [23 x i8] c"event_rpc_clnt_killall\00", align 1
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 136, i32 1 }
@___asan_gen_.524 = private unnamed_addr constant [24 x i8] c"event_rpc_clnt_shutdown\00", align 1
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 137, i32 1 }
@___asan_gen_.527 = private unnamed_addr constant [23 x i8] c"event_rpc_clnt_release\00", align 1
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 138, i32 1 }
@___asan_gen_.530 = private unnamed_addr constant [28 x i8] c"event_rpc_clnt_replace_xprt\00", align 1
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 139, i32 1 }
@___asan_gen_.533 = private unnamed_addr constant [32 x i8] c"event_rpc_clnt_replace_xprt_err\00", align 1
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 140, i32 1 }
@___asan_gen_.536 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rpc_clnt_new\00", align 1
@___asan_gen_.539 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rpc_clnt_new\00", align 1
@___asan_gen_.542 = private unnamed_addr constant [23 x i8] c"print_fmt_rpc_clnt_new\00", align 1
@___asan_gen_.545 = private unnamed_addr constant [19 x i8] c"event_rpc_clnt_new\00", align 1
@___asan_gen_.548 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rpc_clnt_new_err\00", align 1
@___asan_gen_.551 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rpc_clnt_new_err\00", align 1
@___asan_gen_.554 = private unnamed_addr constant [27 x i8] c"print_fmt_rpc_clnt_new_err\00", align 1
@___asan_gen_.557 = private unnamed_addr constant [23 x i8] c"event_rpc_clnt_new_err\00", align 1
@___asan_gen_.560 = private unnamed_addr constant [38 x i8] c"trace_event_fields_rpc_clnt_clone_err\00", align 1
@___asan_gen_.563 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_rpc_clnt_clone_err\00", align 1
@___asan_gen_.566 = private unnamed_addr constant [29 x i8] c"print_fmt_rpc_clnt_clone_err\00", align 1
@___asan_gen_.569 = private unnamed_addr constant [25 x i8] c"event_rpc_clnt_clone_err\00", align 1
@___asan_gen_.572 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rpc_task_status\00", align 1
@___asan_gen_.575 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rpc_task_status\00", align 1
@___asan_gen_.578 = private unnamed_addr constant [26 x i8] c"print_fmt_rpc_task_status\00", align 1
@___asan_gen_.581 = private unnamed_addr constant [22 x i8] c"event_rpc_call_status\00", align 1
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 271, i32 1 }
@___asan_gen_.584 = private unnamed_addr constant [25 x i8] c"event_rpc_connect_status\00", align 1
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 272, i32 1 }
@___asan_gen_.587 = private unnamed_addr constant [25 x i8] c"event_rpc_timeout_status\00", align 1
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 273, i32 1 }
@___asan_gen_.590 = private unnamed_addr constant [31 x i8] c"event_rpc_retry_refresh_status\00", align 1
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 274, i32 1 }
@___asan_gen_.593 = private unnamed_addr constant [25 x i8] c"event_rpc_refresh_status\00", align 1
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 275, i32 1 }
@___asan_gen_.596 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rpc_request\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rpc_request\00", align 1
@___asan_gen_.602 = private unnamed_addr constant [22 x i8] c"print_fmt_rpc_request\00", align 1
@___asan_gen_.605 = private unnamed_addr constant [18 x i8] c"event_rpc_request\00", align 1
@___asan_gen_.608 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rpc_task_running\00", align 1
@___asan_gen_.611 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rpc_task_running\00", align 1
@___asan_gen_.614 = private unnamed_addr constant [27 x i8] c"print_fmt_rpc_task_running\00", align 1
@___asan_gen_.617 = private unnamed_addr constant [21 x i8] c"event_rpc_task_begin\00", align 1
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 377, i32 1 }
@___asan_gen_.620 = private unnamed_addr constant [26 x i8] c"event_rpc_task_run_action\00", align 1
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 378, i32 1 }
@___asan_gen_.623 = private unnamed_addr constant [26 x i8] c"event_rpc_task_sync_sleep\00", align 1
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 379, i32 1 }
@___asan_gen_.626 = private unnamed_addr constant [25 x i8] c"event_rpc_task_sync_wake\00", align 1
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 380, i32 1 }
@___asan_gen_.629 = private unnamed_addr constant [24 x i8] c"event_rpc_task_complete\00", align 1
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 381, i32 1 }
@___asan_gen_.632 = private unnamed_addr constant [23 x i8] c"event_rpc_task_timeout\00", align 1
@___asan_gen_.635 = private unnamed_addr constant [25 x i8] c"event_rpc_task_signalled\00", align 1
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 383, i32 1 }
@___asan_gen_.638 = private unnamed_addr constant [19 x i8] c"event_rpc_task_end\00", align 1
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 384, i32 1 }
@___asan_gen_.641 = private unnamed_addr constant [25 x i8] c"event_rpc_task_call_done\00", align 1
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 385, i32 1 }
@___asan_gen_.644 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rpc_task_queued\00", align 1
@___asan_gen_.647 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rpc_task_queued\00", align 1
@___asan_gen_.650 = private unnamed_addr constant [26 x i8] c"print_fmt_rpc_task_queued\00", align 1
@___asan_gen_.653 = private unnamed_addr constant [21 x i8] c"event_rpc_task_sleep\00", align 1
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 432, i32 1 }
@___asan_gen_.656 = private unnamed_addr constant [22 x i8] c"event_rpc_task_wakeup\00", align 1
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 433, i32 1 }
@___asan_gen_.659 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rpc_failure\00", align 1
@___asan_gen_.662 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rpc_failure\00", align 1
@___asan_gen_.665 = private unnamed_addr constant [22 x i8] c"print_fmt_rpc_failure\00", align 1
@___asan_gen_.668 = private unnamed_addr constant [22 x i8] c"event_rpc_bad_callhdr\00", align 1
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 462, i32 1 }
@___asan_gen_.671 = private unnamed_addr constant [23 x i8] c"event_rpc_bad_verifier\00", align 1
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 463, i32 1 }
@___asan_gen_.674 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rpc_reply_event\00", align 1
@___asan_gen_.677 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rpc_reply_event\00", align 1
@___asan_gen_.680 = private unnamed_addr constant [26 x i8] c"print_fmt_rpc_reply_event\00", align 1
@___asan_gen_.683 = private unnamed_addr constant [24 x i8] c"event_rpc__prog_unavail\00", align 1
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 507, i32 1 }
@___asan_gen_.686 = private unnamed_addr constant [25 x i8] c"event_rpc__prog_mismatch\00", align 1
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 508, i32 1 }
@___asan_gen_.689 = private unnamed_addr constant [24 x i8] c"event_rpc__proc_unavail\00", align 1
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 509, i32 1 }
@___asan_gen_.692 = private unnamed_addr constant [24 x i8] c"event_rpc__garbage_args\00", align 1
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 510, i32 1 }
@___asan_gen_.695 = private unnamed_addr constant [22 x i8] c"event_rpc__unparsable\00", align 1
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 511, i32 1 }
@___asan_gen_.698 = private unnamed_addr constant [20 x i8] c"event_rpc__mismatch\00", align 1
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 512, i32 1 }
@___asan_gen_.701 = private unnamed_addr constant [23 x i8] c"event_rpc__stale_creds\00", align 1
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 513, i32 1 }
@___asan_gen_.704 = private unnamed_addr constant [21 x i8] c"event_rpc__bad_creds\00", align 1
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 514, i32 1 }
@___asan_gen_.707 = private unnamed_addr constant [24 x i8] c"event_rpc__auth_tooweak\00", align 1
@___asan_gen_.709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 515, i32 1 }
@___asan_gen_.710 = private unnamed_addr constant [28 x i8] c"event_rpcb_prog_unavail_err\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 524, i32 1 }
@___asan_gen_.713 = private unnamed_addr constant [23 x i8] c"event_rpcb_timeout_err\00", align 1
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 525, i32 1 }
@___asan_gen_.716 = private unnamed_addr constant [28 x i8] c"event_rpcb_bind_version_err\00", align 1
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 526, i32 1 }
@___asan_gen_.719 = private unnamed_addr constant [27 x i8] c"event_rpcb_unreachable_err\00", align 1
@___asan_gen_.721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 527, i32 1 }
@___asan_gen_.722 = private unnamed_addr constant [28 x i8] c"event_rpcb_unrecognized_err\00", align 1
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 528, i32 1 }
@___asan_gen_.725 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rpc_buf_alloc\00", align 1
@___asan_gen_.728 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rpc_buf_alloc\00", align 1
@___asan_gen_.731 = private unnamed_addr constant [24 x i8] c"print_fmt_rpc_buf_alloc\00", align 1
@___asan_gen_.734 = private unnamed_addr constant [20 x i8] c"event_rpc_buf_alloc\00", align 1
@___asan_gen_.737 = private unnamed_addr constant [37 x i8] c"trace_event_fields_rpc_call_rpcerror\00", align 1
@___asan_gen_.740 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_rpc_call_rpcerror\00", align 1
@___asan_gen_.743 = private unnamed_addr constant [28 x i8] c"print_fmt_rpc_call_rpcerror\00", align 1
@___asan_gen_.746 = private unnamed_addr constant [24 x i8] c"event_rpc_call_rpcerror\00", align 1
@___asan_gen_.749 = private unnamed_addr constant [37 x i8] c"trace_event_fields_rpc_stats_latency\00", align 1
@___asan_gen_.752 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_rpc_stats_latency\00", align 1
@___asan_gen_.755 = private unnamed_addr constant [28 x i8] c"print_fmt_rpc_stats_latency\00", align 1
@___asan_gen_.758 = private unnamed_addr constant [24 x i8] c"event_rpc_stats_latency\00", align 1
@___asan_gen_.761 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rpc_xdr_overflow\00", align 1
@___asan_gen_.764 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rpc_xdr_overflow\00", align 1
@___asan_gen_.767 = private unnamed_addr constant [27 x i8] c"print_fmt_rpc_xdr_overflow\00", align 1
@___asan_gen_.770 = private unnamed_addr constant [23 x i8] c"event_rpc_xdr_overflow\00", align 1
@___asan_gen_.773 = private unnamed_addr constant [37 x i8] c"trace_event_fields_rpc_xdr_alignment\00", align 1
@___asan_gen_.776 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_rpc_xdr_alignment\00", align 1
@___asan_gen_.779 = private unnamed_addr constant [28 x i8] c"print_fmt_rpc_xdr_alignment\00", align 1
@___asan_gen_.782 = private unnamed_addr constant [24 x i8] c"event_rpc_xdr_alignment\00", align 1
@___asan_gen_.785 = private unnamed_addr constant [35 x i8] c"trace_event_fields_xs_socket_event\00", align 1
@___asan_gen_.788 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xs_socket_event_done\00", align 1
@___asan_gen_.791 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_xs_socket_event\00", align 1
@___asan_gen_.794 = private unnamed_addr constant [26 x i8] c"print_fmt_xs_socket_event\00", align 1
@___asan_gen_.797 = private unnamed_addr constant [30 x i8] c"event_rpc_socket_state_change\00", align 1
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 919, i32 1 }
@___asan_gen_.800 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xs_socket_event_done\00", align 1
@___asan_gen_.803 = private unnamed_addr constant [31 x i8] c"print_fmt_xs_socket_event_done\00", align 1
@___asan_gen_.806 = private unnamed_addr constant [25 x i8] c"event_rpc_socket_connect\00", align 1
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 920, i32 1 }
@___asan_gen_.809 = private unnamed_addr constant [23 x i8] c"event_rpc_socket_error\00", align 1
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 921, i32 1 }
@___asan_gen_.812 = private unnamed_addr constant [34 x i8] c"event_rpc_socket_reset_connection\00", align 1
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 922, i32 1 }
@___asan_gen_.815 = private unnamed_addr constant [23 x i8] c"event_rpc_socket_close\00", align 1
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 923, i32 1 }
@___asan_gen_.818 = private unnamed_addr constant [26 x i8] c"event_rpc_socket_shutdown\00", align 1
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 924, i32 1 }
@___asan_gen_.821 = private unnamed_addr constant [38 x i8] c"trace_event_fields_rpc_socket_nospace\00", align 1
@___asan_gen_.824 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_rpc_socket_nospace\00", align 1
@___asan_gen_.827 = private unnamed_addr constant [29 x i8] c"print_fmt_rpc_socket_nospace\00", align 1
@___asan_gen_.830 = private unnamed_addr constant [25 x i8] c"event_rpc_socket_nospace\00", align 1
@___asan_gen_.833 = private unnamed_addr constant [43 x i8] c"trace_event_fields_rpc_xprt_lifetime_class\00", align 1
@___asan_gen_.836 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_rpc_xprt_lifetime_class\00", align 1
@___asan_gen_.839 = private unnamed_addr constant [34 x i8] c"print_fmt_rpc_xprt_lifetime_class\00", align 1
@___asan_gen_.842 = private unnamed_addr constant [18 x i8] c"event_xprt_create\00", align 1
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1003, i32 1 }
@___asan_gen_.845 = private unnamed_addr constant [19 x i8] c"event_xprt_connect\00", align 1
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1004, i32 1 }
@___asan_gen_.848 = private unnamed_addr constant [27 x i8] c"event_xprt_disconnect_auto\00", align 1
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1005, i32 1 }
@___asan_gen_.851 = private unnamed_addr constant [27 x i8] c"event_xprt_disconnect_done\00", align 1
@___asan_gen_.853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1006, i32 1 }
@___asan_gen_.854 = private unnamed_addr constant [28 x i8] c"event_xprt_disconnect_force\00", align 1
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1007, i32 1 }
@___asan_gen_.857 = private unnamed_addr constant [30 x i8] c"event_xprt_disconnect_cleanup\00", align 1
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1008, i32 1 }
@___asan_gen_.860 = private unnamed_addr constant [19 x i8] c"event_xprt_destroy\00", align 1
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1009, i32 1 }
@___asan_gen_.863 = private unnamed_addr constant [34 x i8] c"trace_event_fields_rpc_xprt_event\00", align 1
@___asan_gen_.866 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_rpc_xprt_event\00", align 1
@___asan_gen_.869 = private unnamed_addr constant [25 x i8] c"print_fmt_rpc_xprt_event\00", align 1
@___asan_gen_.872 = private unnamed_addr constant [17 x i8] c"event_xprt_timer\00", align 1
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1047, i32 1 }
@___asan_gen_.875 = private unnamed_addr constant [23 x i8] c"event_xprt_lookup_rqst\00", align 1
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1048, i32 1 }
@___asan_gen_.878 = private unnamed_addr constant [33 x i8] c"trace_event_fields_xprt_transmit\00", align 1
@___asan_gen_.881 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_xprt_transmit\00", align 1
@___asan_gen_.884 = private unnamed_addr constant [24 x i8] c"print_fmt_xprt_transmit\00", align 1
@___asan_gen_.887 = private unnamed_addr constant [20 x i8] c"event_xprt_transmit\00", align 1
@___asan_gen_.890 = private unnamed_addr constant [35 x i8] c"trace_event_fields_xprt_retransmit\00", align 1
@___asan_gen_.893 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_xprt_retransmit\00", align 1
@___asan_gen_.896 = private unnamed_addr constant [26 x i8] c"print_fmt_xprt_retransmit\00", align 1
@___asan_gen_.899 = private unnamed_addr constant [22 x i8] c"event_xprt_retransmit\00", align 1
@___asan_gen_.902 = private unnamed_addr constant [29 x i8] c"trace_event_fields_xprt_ping\00", align 1
@___asan_gen_.905 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_xprt_ping\00", align 1
@___asan_gen_.908 = private unnamed_addr constant [20 x i8] c"print_fmt_xprt_ping\00", align 1
@___asan_gen_.911 = private unnamed_addr constant [16 x i8] c"event_xprt_ping\00", align 1
@___asan_gen_.914 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xprt_writelock_event\00", align 1
@___asan_gen_.917 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xprt_writelock_event\00", align 1
@___asan_gen_.920 = private unnamed_addr constant [31 x i8] c"print_fmt_xprt_writelock_event\00", align 1
@___asan_gen_.923 = private unnamed_addr constant [24 x i8] c"event_xprt_reserve_xprt\00", align 1
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1187, i32 1 }
@___asan_gen_.926 = private unnamed_addr constant [24 x i8] c"event_xprt_release_xprt\00", align 1
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1188, i32 1 }
@___asan_gen_.929 = private unnamed_addr constant [35 x i8] c"trace_event_fields_xprt_cong_event\00", align 1
@___asan_gen_.932 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_xprt_cong_event\00", align 1
@___asan_gen_.935 = private unnamed_addr constant [26 x i8] c"print_fmt_xprt_cong_event\00", align 1
@___asan_gen_.938 = private unnamed_addr constant [24 x i8] c"event_xprt_reserve_cong\00", align 1
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1242, i32 1 }
@___asan_gen_.941 = private unnamed_addr constant [24 x i8] c"event_xprt_release_cong\00", align 1
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1243, i32 1 }
@___asan_gen_.944 = private unnamed_addr constant [20 x i8] c"event_xprt_get_cong\00", align 1
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1244, i32 1 }
@___asan_gen_.947 = private unnamed_addr constant [20 x i8] c"event_xprt_put_cong\00", align 1
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1245, i32 1 }
@___asan_gen_.950 = private unnamed_addr constant [32 x i8] c"trace_event_fields_xprt_reserve\00", align 1
@___asan_gen_.953 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_xprt_reserve\00", align 1
@___asan_gen_.956 = private unnamed_addr constant [23 x i8] c"print_fmt_xprt_reserve\00", align 1
@___asan_gen_.959 = private unnamed_addr constant [19 x i8] c"event_xprt_reserve\00", align 1
@___asan_gen_.962 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xs_stream_read_data\00", align 1
@___asan_gen_.965 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xs_stream_read_data\00", align 1
@___asan_gen_.968 = private unnamed_addr constant [30 x i8] c"print_fmt_xs_stream_read_data\00", align 1
@___asan_gen_.971 = private unnamed_addr constant [26 x i8] c"event_xs_stream_read_data\00", align 1
@___asan_gen_.974 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xs_stream_read_request\00", align 1
@___asan_gen_.977 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xs_stream_read_request\00", align 1
@___asan_gen_.980 = private unnamed_addr constant [33 x i8] c"print_fmt_xs_stream_read_request\00", align 1
@___asan_gen_.983 = private unnamed_addr constant [29 x i8] c"event_xs_stream_read_request\00", align 1
@___asan_gen_.986 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rpcb_getport\00", align 1
@___asan_gen_.989 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rpcb_getport\00", align 1
@___asan_gen_.992 = private unnamed_addr constant [23 x i8] c"print_fmt_rpcb_getport\00", align 1
@___asan_gen_.995 = private unnamed_addr constant [19 x i8] c"event_rpcb_getport\00", align 1
@___asan_gen_.998 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rpcb_setport\00", align 1
@___asan_gen_.1001 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rpcb_setport\00", align 1
@___asan_gen_.1004 = private unnamed_addr constant [23 x i8] c"print_fmt_rpcb_setport\00", align 1
@___asan_gen_.1007 = private unnamed_addr constant [19 x i8] c"event_rpcb_setport\00", align 1
@___asan_gen_.1010 = private unnamed_addr constant [33 x i8] c"trace_event_fields_pmap_register\00", align 1
@___asan_gen_.1013 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_pmap_register\00", align 1
@___asan_gen_.1016 = private unnamed_addr constant [24 x i8] c"print_fmt_pmap_register\00", align 1
@___asan_gen_.1019 = private unnamed_addr constant [20 x i8] c"event_pmap_register\00", align 1
@___asan_gen_.1022 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rpcb_register\00", align 1
@___asan_gen_.1025 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rpcb_register\00", align 1
@___asan_gen_.1028 = private unnamed_addr constant [24 x i8] c"print_fmt_rpcb_register\00", align 1
@___asan_gen_.1031 = private unnamed_addr constant [20 x i8] c"event_rpcb_register\00", align 1
@___asan_gen_.1034 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rpcb_unregister\00", align 1
@___asan_gen_.1037 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rpcb_unregister\00", align 1
@___asan_gen_.1040 = private unnamed_addr constant [26 x i8] c"print_fmt_rpcb_unregister\00", align 1
@___asan_gen_.1043 = private unnamed_addr constant [22 x i8] c"event_rpcb_unregister\00", align 1
@___asan_gen_.1046 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svc_xdr_msg_class\00", align 1
@___asan_gen_.1049 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svc_xdr_msg_class\00", align 1
@___asan_gen_.1052 = private unnamed_addr constant [28 x i8] c"print_fmt_svc_xdr_msg_class\00", align 1
@___asan_gen_.1055 = private unnamed_addr constant [23 x i8] c"event_svc_xdr_recvfrom\00", align 1
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1523, i32 1 }
@___asan_gen_.1058 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svc_xdr_buf_class\00", align 1
@___asan_gen_.1061 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svc_xdr_buf_class\00", align 1
@___asan_gen_.1064 = private unnamed_addr constant [28 x i8] c"print_fmt_svc_xdr_buf_class\00", align 1
@___asan_gen_.1067 = private unnamed_addr constant [21 x i8] c"event_svc_xdr_sendto\00", align 1
@___asan_gen_.1069 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1574, i32 1 }
@___asan_gen_.1070 = private unnamed_addr constant [36 x i8] c"trace_event_fields_svc_authenticate\00", align 1
@___asan_gen_.1073 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_svc_authenticate\00", align 1
@___asan_gen_.1076 = private unnamed_addr constant [27 x i8] c"print_fmt_svc_authenticate\00", align 1
@___asan_gen_.1079 = private unnamed_addr constant [23 x i8] c"event_svc_authenticate\00", align 1
@___asan_gen_.1082 = private unnamed_addr constant [31 x i8] c"trace_event_fields_svc_process\00", align 1
@___asan_gen_.1085 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_svc_process\00", align 1
@___asan_gen_.1088 = private unnamed_addr constant [22 x i8] c"print_fmt_svc_process\00", align 1
@___asan_gen_.1091 = private unnamed_addr constant [18 x i8] c"event_svc_process\00", align 1
@___asan_gen_.1094 = private unnamed_addr constant [34 x i8] c"trace_event_fields_svc_rqst_event\00", align 1
@___asan_gen_.1097 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_svc_rqst_event\00", align 1
@___asan_gen_.1100 = private unnamed_addr constant [25 x i8] c"print_fmt_svc_rqst_event\00", align 1
@___asan_gen_.1103 = private unnamed_addr constant [16 x i8] c"event_svc_defer\00", align 1
@___asan_gen_.1105 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1713, i32 1 }
@___asan_gen_.1106 = private unnamed_addr constant [15 x i8] c"event_svc_drop\00", align 1
@___asan_gen_.1108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1714, i32 1 }
@___asan_gen_.1109 = private unnamed_addr constant [35 x i8] c"trace_event_fields_svc_rqst_status\00", align 1
@___asan_gen_.1112 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_svc_rqst_status\00", align 1
@___asan_gen_.1115 = private unnamed_addr constant [26 x i8] c"print_fmt_svc_rqst_status\00", align 1
@___asan_gen_.1118 = private unnamed_addr constant [15 x i8] c"event_svc_send\00", align 1
@___asan_gen_.1120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1741, i32 1 }
@___asan_gen_.1121 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svc_xprt_create_err\00", align 1
@___asan_gen_.1124 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svc_xprt_create_err\00", align 1
@___asan_gen_.1127 = private unnamed_addr constant [30 x i8] c"print_fmt_svc_xprt_create_err\00", align 1
@___asan_gen_.1130 = private unnamed_addr constant [26 x i8] c"event_svc_xprt_create_err\00", align 1
@___asan_gen_.1133 = private unnamed_addr constant [36 x i8] c"trace_event_fields_svc_xprt_enqueue\00", align 1
@___asan_gen_.1136 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_svc_xprt_enqueue\00", align 1
@___asan_gen_.1139 = private unnamed_addr constant [27 x i8] c"print_fmt_svc_xprt_enqueue\00", align 1
@___asan_gen_.1142 = private unnamed_addr constant [23 x i8] c"event_svc_xprt_enqueue\00", align 1
@___asan_gen_.1145 = private unnamed_addr constant [34 x i8] c"trace_event_fields_svc_xprt_event\00", align 1
@___asan_gen_.1148 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_svc_xprt_event\00", align 1
@___asan_gen_.1151 = private unnamed_addr constant [25 x i8] c"print_fmt_svc_xprt_event\00", align 1
@___asan_gen_.1154 = private unnamed_addr constant [30 x i8] c"event_svc_xprt_no_write_space\00", align 1
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1839, i32 1 }
@___asan_gen_.1157 = private unnamed_addr constant [21 x i8] c"event_svc_xprt_close\00", align 1
@___asan_gen_.1159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1840, i32 1 }
@___asan_gen_.1160 = private unnamed_addr constant [22 x i8] c"event_svc_xprt_detach\00", align 1
@___asan_gen_.1162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1841, i32 1 }
@___asan_gen_.1163 = private unnamed_addr constant [20 x i8] c"event_svc_xprt_free\00", align 1
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1842, i32 1 }
@___asan_gen_.1166 = private unnamed_addr constant [35 x i8] c"trace_event_fields_svc_xprt_accept\00", align 1
@___asan_gen_.1169 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_svc_xprt_accept\00", align 1
@___asan_gen_.1172 = private unnamed_addr constant [26 x i8] c"print_fmt_svc_xprt_accept\00", align 1
@___asan_gen_.1175 = private unnamed_addr constant [22 x i8] c"event_svc_xprt_accept\00", align 1
@___asan_gen_.1178 = private unnamed_addr constant [36 x i8] c"trace_event_fields_svc_xprt_dequeue\00", align 1
@___asan_gen_.1181 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_svc_xprt_dequeue\00", align 1
@___asan_gen_.1184 = private unnamed_addr constant [27 x i8] c"print_fmt_svc_xprt_dequeue\00", align 1
@___asan_gen_.1187 = private unnamed_addr constant [23 x i8] c"event_svc_xprt_dequeue\00", align 1
@___asan_gen_.1190 = private unnamed_addr constant [31 x i8] c"trace_event_fields_svc_wake_up\00", align 1
@___asan_gen_.1193 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_svc_wake_up\00", align 1
@___asan_gen_.1196 = private unnamed_addr constant [22 x i8] c"print_fmt_svc_wake_up\00", align 1
@___asan_gen_.1199 = private unnamed_addr constant [18 x i8] c"event_svc_wake_up\00", align 1
@___asan_gen_.1202 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svc_alloc_arg_err\00", align 1
@___asan_gen_.1205 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svc_alloc_arg_err\00", align 1
@___asan_gen_.1208 = private unnamed_addr constant [28 x i8] c"print_fmt_svc_alloc_arg_err\00", align 1
@___asan_gen_.1211 = private unnamed_addr constant [24 x i8] c"event_svc_alloc_arg_err\00", align 1
@___asan_gen_.1214 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svc_stats_latency\00", align 1
@___asan_gen_.1217 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svc_stats_latency\00", align 1
@___asan_gen_.1220 = private unnamed_addr constant [28 x i8] c"print_fmt_svc_stats_latency\00", align 1
@___asan_gen_.1223 = private unnamed_addr constant [24 x i8] c"event_svc_stats_latency\00", align 1
@___asan_gen_.1226 = private unnamed_addr constant [38 x i8] c"trace_event_fields_svc_deferred_event\00", align 1
@___asan_gen_.1229 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_svc_deferred_event\00", align 1
@___asan_gen_.1232 = private unnamed_addr constant [29 x i8] c"print_fmt_svc_deferred_event\00", align 1
@___asan_gen_.1235 = private unnamed_addr constant [21 x i8] c"event_svc_defer_drop\00", align 1
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1981, i32 1 }
@___asan_gen_.1238 = private unnamed_addr constant [22 x i8] c"event_svc_defer_queue\00", align 1
@___asan_gen_.1240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1982, i32 1 }
@___asan_gen_.1241 = private unnamed_addr constant [21 x i8] c"event_svc_defer_recv\00", align 1
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1983, i32 1 }
@___asan_gen_.1244 = private unnamed_addr constant [38 x i8] c"trace_event_fields_svcsock_new_socket\00", align 1
@___asan_gen_.1247 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_svcsock_new_socket\00", align 1
@___asan_gen_.1250 = private unnamed_addr constant [29 x i8] c"print_fmt_svcsock_new_socket\00", align 1
@___asan_gen_.1253 = private unnamed_addr constant [25 x i8] c"event_svcsock_new_socket\00", align 1
@___asan_gen_.1256 = private unnamed_addr constant [34 x i8] c"trace_event_fields_svcsock_marker\00", align 1
@___asan_gen_.1259 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_svcsock_marker\00", align 1
@___asan_gen_.1262 = private unnamed_addr constant [25 x i8] c"print_fmt_svcsock_marker\00", align 1
@___asan_gen_.1265 = private unnamed_addr constant [21 x i8] c"event_svcsock_marker\00", align 1
@___asan_gen_.1268 = private unnamed_addr constant [33 x i8] c"trace_event_fields_svcsock_class\00", align 1
@___asan_gen_.1271 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_svcsock_class\00", align 1
@___asan_gen_.1274 = private unnamed_addr constant [24 x i8] c"print_fmt_svcsock_class\00", align 1
@___asan_gen_.1277 = private unnamed_addr constant [23 x i8] c"event_svcsock_udp_send\00", align 1
@___asan_gen_.1279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2068, i32 1 }
@___asan_gen_.1280 = private unnamed_addr constant [23 x i8] c"event_svcsock_udp_recv\00", align 1
@___asan_gen_.1282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2069, i32 1 }
@___asan_gen_.1283 = private unnamed_addr constant [27 x i8] c"event_svcsock_udp_recv_err\00", align 1
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2070, i32 1 }
@___asan_gen_.1286 = private unnamed_addr constant [23 x i8] c"event_svcsock_tcp_send\00", align 1
@___asan_gen_.1288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2071, i32 1 }
@___asan_gen_.1289 = private unnamed_addr constant [23 x i8] c"event_svcsock_tcp_recv\00", align 1
@___asan_gen_.1291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2072, i32 1 }
@___asan_gen_.1292 = private unnamed_addr constant [30 x i8] c"event_svcsock_tcp_recv_eagain\00", align 1
@___asan_gen_.1294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2073, i32 1 }
@___asan_gen_.1295 = private unnamed_addr constant [27 x i8] c"event_svcsock_tcp_recv_err\00", align 1
@___asan_gen_.1297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2074, i32 1 }
@___asan_gen_.1298 = private unnamed_addr constant [25 x i8] c"event_svcsock_data_ready\00", align 1
@___asan_gen_.1300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2075, i32 1 }
@___asan_gen_.1301 = private unnamed_addr constant [26 x i8] c"event_svcsock_write_space\00", align 1
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2076, i32 1 }
@___asan_gen_.1304 = private unnamed_addr constant [42 x i8] c"trace_event_fields_svcsock_tcp_recv_short\00", align 1
@___asan_gen_.1307 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_svcsock_tcp_recv_short\00", align 1
@___asan_gen_.1310 = private unnamed_addr constant [33 x i8] c"print_fmt_svcsock_tcp_recv_short\00", align 1
@___asan_gen_.1313 = private unnamed_addr constant [29 x i8] c"event_svcsock_tcp_recv_short\00", align 1
@___asan_gen_.1316 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svcsock_tcp_state\00", align 1
@___asan_gen_.1319 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svcsock_tcp_state\00", align 1
@___asan_gen_.1322 = private unnamed_addr constant [28 x i8] c"print_fmt_svcsock_tcp_state\00", align 1
@___asan_gen_.1325 = private unnamed_addr constant [24 x i8] c"event_svcsock_tcp_state\00", align 1
@___asan_gen_.1328 = private unnamed_addr constant [40 x i8] c"trace_event_fields_svcsock_accept_class\00", align 1
@___asan_gen_.1331 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_svcsock_accept_class\00", align 1
@___asan_gen_.1334 = private unnamed_addr constant [31 x i8] c"print_fmt_svcsock_accept_class\00", align 1
@___asan_gen_.1337 = private unnamed_addr constant [25 x i8] c"event_svcsock_accept_err\00", align 1
@___asan_gen_.1339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2171, i32 1 }
@___asan_gen_.1340 = private unnamed_addr constant [30 x i8] c"event_svcsock_getpeername_err\00", align 1
@___asan_gen_.1342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2172, i32 1 }
@___asan_gen_.1343 = private unnamed_addr constant [31 x i8] c"trace_event_fields_cache_event\00", align 1
@___asan_gen_.1346 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_cache_event\00", align 1
@___asan_gen_.1349 = private unnamed_addr constant [22 x i8] c"print_fmt_cache_event\00", align 1
@___asan_gen_.1352 = private unnamed_addr constant [26 x i8] c"event_cache_entry_expired\00", align 1
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2201, i32 1 }
@___asan_gen_.1355 = private unnamed_addr constant [25 x i8] c"event_cache_entry_upcall\00", align 1
@___asan_gen_.1357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2202, i32 1 }
@___asan_gen_.1358 = private unnamed_addr constant [25 x i8] c"event_cache_entry_update\00", align 1
@___asan_gen_.1360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2203, i32 1 }
@___asan_gen_.1361 = private unnamed_addr constant [32 x i8] c"event_cache_entry_make_negative\00", align 1
@___asan_gen_.1363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2204, i32 1 }
@___asan_gen_.1364 = private unnamed_addr constant [30 x i8] c"event_cache_entry_no_listener\00", align 1
@___asan_gen_.1366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2205, i32 1 }
@___asan_gen_.1367 = private unnamed_addr constant [34 x i8] c"trace_event_fields_register_class\00", align 1
@___asan_gen_.1370 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_register_class\00", align 1
@___asan_gen_.1373 = private unnamed_addr constant [25 x i8] c"print_fmt_register_class\00", align 1
@___asan_gen_.1376 = private unnamed_addr constant [19 x i8] c"event_svc_register\00", align 1
@___asan_gen_.1378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2258, i32 1 }
@___asan_gen_.1379 = private unnamed_addr constant [21 x i8] c"event_svc_noregister\00", align 1
@___asan_gen_.1381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2259, i32 1 }
@___asan_gen_.1382 = private unnamed_addr constant [34 x i8] c"trace_event_fields_svc_unregister\00", align 1
@___asan_gen_.1385 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_svc_unregister\00", align 1
@___asan_gen_.1388 = private unnamed_addr constant [25 x i8] c"print_fmt_svc_unregister\00", align 1
@___asan_gen_.1391 = private unnamed_addr constant [21 x i8] c"event_svc_unregister\00", align 1
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 449, i32 2 }
@___asan_gen_.1397 = private unnamed_addr constant [12 x i8] c"delay_queue\00", align 1
@___asan_gen_.1399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 51, i32 30 }
@___asan_gen_.1402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 1290, i32 36 }
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 1294, i32 37 }
@___asan_gen_.1408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 1300, i32 39 }
@___asan_gen_.1447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 52, i32 1 }
@___asan_gen_.1450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 109, i32 1 }
@___asan_gen_.1471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 142, i32 1 }
@___asan_gen_.1480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 174, i32 1 }
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 199, i32 1 }
@___asan_gen_.1489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 242, i32 1 }
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 277, i32 1 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 335, i32 1 }
@___asan_gen_.1608 = private unnamed_addr constant [32 x i8] c"../include/linux/sunrpc/sched.h\00", align 1
@___asan_gen_.1609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 275, i32 37 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 387, i32 1 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 435, i32 1 }
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 465, i32 1 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 530, i32 1 }
@___asan_gen_.1657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 561, i32 1 }
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 590, i32 1 }
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 632, i32 1 }
@___asan_gen_.1696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 699, i32 1 }
@___asan_gen_.1774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 809, i32 1 }
@___asan_gen_.1783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 862, i32 1 }
@___asan_gen_.1792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 926, i32 1 }
@___asan_gen_.1828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 971, i32 1 }
@___asan_gen_.1831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1011, i32 1 }
@___asan_gen_.1837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1050, i32 1 }
@___asan_gen_.1843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1081, i32 1 }
@___asan_gen_.1846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1123, i32 1 }
@___asan_gen_.1852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1144, i32 1 }
@___asan_gen_.1867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1190, i32 1 }
@___asan_gen_.1870 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1247, i32 1 }
@___asan_gen_.1879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1271, i32 1 }
@___asan_gen_.1885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1298, i32 1 }
@___asan_gen_.1894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1326, i32 1 }
@___asan_gen_.1897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1363, i32 1 }
@___asan_gen_.1900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1392, i32 1 }
@___asan_gen_.1906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1422, i32 1 }
@___asan_gen_.1909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1452, i32 1 }
@___asan_gen_.1912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1479, i32 1 }
@___asan_gen_.1915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1526, i32 1 }
@___asan_gen_.1954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1628, i32 1 }
@___asan_gen_.1966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1650, i32 1 }
@___asan_gen_.1996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1682, i32 1 }
@___asan_gen_.2002 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1716, i32 1 }
@___asan_gen_.2011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1762, i32 1 }
@___asan_gen_.2062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1792, i32 1 }
@___asan_gen_.2068 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1813, i32 1 }
@___asan_gen_.2071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1844, i32 1 }
@___asan_gen_.2080 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1869, i32 1 }
@___asan_gen_.2083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1891, i32 1 }
@___asan_gen_.2089 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1907, i32 1 }
@___asan_gen_.2092 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1925, i32 1 }
@___asan_gen_.2098 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1950, i32 1 }
@___asan_gen_.2140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 1985, i32 1 }
@___asan_gen_.2152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2011, i32 1 }
@___asan_gen_.2161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2035, i32 1 }
@___asan_gen_.2173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2078, i32 1 }
@___asan_gen_.2183 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.2185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2107, i32 1 }
@___asan_gen_.2191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2136, i32 1 }
@___asan_gen_.2203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2174, i32 1 }
@___asan_gen_.2213 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.2215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2207, i32 1 }
@___asan_gen_.2218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 2261, i32 1 }
@___asan_gen_.2221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 239, i32 2 }
@___asan_gen_.2227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 246, i32 2 }
@___asan_gen_.2232 = private unnamed_addr constant [33 x i8] c"../include/trace/events/sunrpc.h\00", align 1
@___asan_gen_.2233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2232, i32 382, i32 1 }
@___asan_gen_.2235 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.2236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2235, i32 108, i32 2 }
@___asan_gen_.2238 = private unnamed_addr constant [27 x i8] c"../include/linux/freezer.h\00", align 1
@___asan_gen_.2239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2238, i32 57, i32 2 }
@___asan_gen_.2245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 506, i32 3 }
@___asan_gen_.2246 = private unnamed_addr constant [8 x i8] c"rpc_pid\00", align 1
@___asan_gen_.2248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 284, i32 19 }
@___asan_gen_.2254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 364, i32 3 }
@___asan_gen_.2256 = private unnamed_addr constant [24 x i8] c"../include/linux/cred.h\00", align 1
@___asan_gen_.2257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2256, i32 286, i32 3 }
@___asan_gen_.2258 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.2260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 1172, i32 3 }
@___asan_gen_.2263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 1240, i32 23 }
@___asan_gen_.2264 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2265 = private constant [22 x i8] c"../net/sunrpc/sched.c\00", align 1
@___asan_gen_.2266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2265, i32 1244, i32 23 }
@llvm.compiler.used = appending global [1344 x ptr] [ptr @TRACE_SYSTEM_AF_INET, ptr @TRACE_SYSTEM_AF_INET6, ptr @TRACE_SYSTEM_AF_LOCAL, ptr @TRACE_SYSTEM_AF_UNIX, ptr @TRACE_SYSTEM_AF_UNSPEC, ptr @TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, ptr @TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, ptr @TRACE_SYSTEM_RPC_AUTH_BADCRED, ptr @TRACE_SYSTEM_RPC_AUTH_BADVERF, ptr @TRACE_SYSTEM_RPC_AUTH_OK, ptr @TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, ptr @TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, ptr @TRACE_SYSTEM_RPC_AUTH_TOOWEAK, ptr @TRACE_SYSTEM_RQ_BUSY, ptr @TRACE_SYSTEM_RQ_DATA, ptr @TRACE_SYSTEM_RQ_DROPME, ptr @TRACE_SYSTEM_RQ_LOCAL, ptr @TRACE_SYSTEM_RQ_SECURE, ptr @TRACE_SYSTEM_RQ_SPLICE_OK, ptr @TRACE_SYSTEM_RQ_USEDEFERRAL, ptr @TRACE_SYSTEM_RQ_VICTIM, ptr @TRACE_SYSTEM_SOCK_DCCP, ptr @TRACE_SYSTEM_SOCK_DGRAM, ptr @TRACE_SYSTEM_SOCK_PACKET, ptr @TRACE_SYSTEM_SOCK_RAW, ptr @TRACE_SYSTEM_SOCK_RDM, ptr @TRACE_SYSTEM_SOCK_SEQPACKET, ptr @TRACE_SYSTEM_SOCK_STREAM, ptr @TRACE_SYSTEM_SS_CONNECTED, ptr @TRACE_SYSTEM_SS_CONNECTING, ptr @TRACE_SYSTEM_SS_DISCONNECTING, ptr @TRACE_SYSTEM_SS_FREE, ptr @TRACE_SYSTEM_SS_UNCONNECTED, ptr @TRACE_SYSTEM_SVC_CLOSE, ptr @TRACE_SYSTEM_SVC_COMPLETE, ptr @TRACE_SYSTEM_SVC_DENIED, ptr @TRACE_SYSTEM_SVC_DROP, ptr @TRACE_SYSTEM_SVC_GARBAGE, ptr @TRACE_SYSTEM_SVC_NEGATIVE, ptr @TRACE_SYSTEM_SVC_OK, ptr @TRACE_SYSTEM_SVC_PENDING, ptr @TRACE_SYSTEM_SVC_SYSERR, ptr @TRACE_SYSTEM_SVC_VALID, ptr @TRACE_SYSTEM_TCP_CLOSE, ptr @TRACE_SYSTEM_TCP_CLOSE_WAIT, ptr @TRACE_SYSTEM_TCP_CLOSING, ptr @TRACE_SYSTEM_TCP_ESTABLISHED, ptr @TRACE_SYSTEM_TCP_FIN_WAIT1, ptr @TRACE_SYSTEM_TCP_FIN_WAIT2, ptr @TRACE_SYSTEM_TCP_LAST_ACK, ptr @TRACE_SYSTEM_TCP_LISTEN, ptr @TRACE_SYSTEM_TCP_SYN_RECV, ptr @TRACE_SYSTEM_TCP_SYN_SENT, ptr @TRACE_SYSTEM_TCP_TIME_WAIT, ptr @__TRACE_SYSTEM_AF_INET, ptr @__TRACE_SYSTEM_AF_INET6, ptr @__TRACE_SYSTEM_AF_LOCAL, ptr @__TRACE_SYSTEM_AF_UNIX, ptr @__TRACE_SYSTEM_AF_UNSPEC, ptr @__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, ptr @__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, ptr @__TRACE_SYSTEM_RPC_AUTH_BADCRED, ptr @__TRACE_SYSTEM_RPC_AUTH_BADVERF, ptr @__TRACE_SYSTEM_RPC_AUTH_OK, ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, ptr @__TRACE_SYSTEM_RPC_AUTH_TOOWEAK, ptr @__TRACE_SYSTEM_RQ_BUSY, ptr @__TRACE_SYSTEM_RQ_DATA, ptr @__TRACE_SYSTEM_RQ_DROPME, ptr @__TRACE_SYSTEM_RQ_LOCAL, ptr @__TRACE_SYSTEM_RQ_SECURE, ptr @__TRACE_SYSTEM_RQ_SPLICE_OK, ptr @__TRACE_SYSTEM_RQ_USEDEFERRAL, ptr @__TRACE_SYSTEM_RQ_VICTIM, ptr @__TRACE_SYSTEM_SOCK_DCCP, ptr @__TRACE_SYSTEM_SOCK_DGRAM, ptr @__TRACE_SYSTEM_SOCK_PACKET, ptr @__TRACE_SYSTEM_SOCK_RAW, ptr @__TRACE_SYSTEM_SOCK_RDM, ptr @__TRACE_SYSTEM_SOCK_SEQPACKET, ptr @__TRACE_SYSTEM_SOCK_STREAM, ptr @__TRACE_SYSTEM_SS_CONNECTED, ptr @__TRACE_SYSTEM_SS_CONNECTING, ptr @__TRACE_SYSTEM_SS_DISCONNECTING, ptr @__TRACE_SYSTEM_SS_FREE, ptr @__TRACE_SYSTEM_SS_UNCONNECTED, ptr @__TRACE_SYSTEM_SVC_CLOSE, ptr @__TRACE_SYSTEM_SVC_COMPLETE, ptr @__TRACE_SYSTEM_SVC_DENIED, ptr @__TRACE_SYSTEM_SVC_DROP, ptr @__TRACE_SYSTEM_SVC_GARBAGE, ptr @__TRACE_SYSTEM_SVC_NEGATIVE, ptr @__TRACE_SYSTEM_SVC_OK, ptr @__TRACE_SYSTEM_SVC_PENDING, ptr @__TRACE_SYSTEM_SVC_SYSERR, ptr @__TRACE_SYSTEM_SVC_VALID, ptr @__TRACE_SYSTEM_TCP_CLOSE, ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, ptr @__TRACE_SYSTEM_TCP_CLOSING, ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, ptr @__TRACE_SYSTEM_TCP_LAST_ACK, ptr @__TRACE_SYSTEM_TCP_LISTEN, ptr @__TRACE_SYSTEM_TCP_SYN_RECV, ptr @__TRACE_SYSTEM_TCP_SYN_SENT, ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, ptr @__bpf_trace_tp_map_cache_entry_expired, ptr @__bpf_trace_tp_map_cache_entry_make_negative, ptr @__bpf_trace_tp_map_cache_entry_no_listener, ptr @__bpf_trace_tp_map_cache_entry_upcall, ptr @__bpf_trace_tp_map_cache_entry_update, ptr @__bpf_trace_tp_map_pmap_register, ptr @__bpf_trace_tp_map_rpc__auth_tooweak, ptr @__bpf_trace_tp_map_rpc__bad_creds, ptr @__bpf_trace_tp_map_rpc__garbage_args, ptr @__bpf_trace_tp_map_rpc__mismatch, ptr @__bpf_trace_tp_map_rpc__proc_unavail, ptr @__bpf_trace_tp_map_rpc__prog_mismatch, ptr @__bpf_trace_tp_map_rpc__prog_unavail, ptr @__bpf_trace_tp_map_rpc__stale_creds, ptr @__bpf_trace_tp_map_rpc__unparsable, ptr @__bpf_trace_tp_map_rpc_bad_callhdr, ptr @__bpf_trace_tp_map_rpc_bad_verifier, ptr @__bpf_trace_tp_map_rpc_buf_alloc, ptr @__bpf_trace_tp_map_rpc_call_rpcerror, ptr @__bpf_trace_tp_map_rpc_call_status, ptr @__bpf_trace_tp_map_rpc_clnt_clone_err, ptr @__bpf_trace_tp_map_rpc_clnt_free, ptr @__bpf_trace_tp_map_rpc_clnt_killall, ptr @__bpf_trace_tp_map_rpc_clnt_new, ptr @__bpf_trace_tp_map_rpc_clnt_new_err, ptr @__bpf_trace_tp_map_rpc_clnt_release, ptr @__bpf_trace_tp_map_rpc_clnt_replace_xprt, ptr @__bpf_trace_tp_map_rpc_clnt_replace_xprt_err, ptr @__bpf_trace_tp_map_rpc_clnt_shutdown, ptr @__bpf_trace_tp_map_rpc_connect_status, ptr @__bpf_trace_tp_map_rpc_refresh_status, ptr @__bpf_trace_tp_map_rpc_request, ptr @__bpf_trace_tp_map_rpc_retry_refresh_status, ptr @__bpf_trace_tp_map_rpc_socket_close, ptr @__bpf_trace_tp_map_rpc_socket_connect, ptr @__bpf_trace_tp_map_rpc_socket_error, ptr @__bpf_trace_tp_map_rpc_socket_nospace, ptr @__bpf_trace_tp_map_rpc_socket_reset_connection, ptr @__bpf_trace_tp_map_rpc_socket_shutdown, ptr @__bpf_trace_tp_map_rpc_socket_state_change, ptr @__bpf_trace_tp_map_rpc_stats_latency, ptr @__bpf_trace_tp_map_rpc_task_begin, ptr @__bpf_trace_tp_map_rpc_task_call_done, ptr @__bpf_trace_tp_map_rpc_task_complete, ptr @__bpf_trace_tp_map_rpc_task_end, ptr @__bpf_trace_tp_map_rpc_task_run_action, ptr @__bpf_trace_tp_map_rpc_task_signalled, ptr @__bpf_trace_tp_map_rpc_task_sleep, ptr @__bpf_trace_tp_map_rpc_task_sync_sleep, ptr @__bpf_trace_tp_map_rpc_task_sync_wake, ptr @__bpf_trace_tp_map_rpc_task_timeout, ptr @__bpf_trace_tp_map_rpc_task_wakeup, ptr @__bpf_trace_tp_map_rpc_timeout_status, ptr @__bpf_trace_tp_map_rpc_xdr_alignment, ptr @__bpf_trace_tp_map_rpc_xdr_overflow, ptr @__bpf_trace_tp_map_rpc_xdr_recvfrom, ptr @__bpf_trace_tp_map_rpc_xdr_reply_pages, ptr @__bpf_trace_tp_map_rpc_xdr_sendto, ptr @__bpf_trace_tp_map_rpcb_bind_version_err, ptr @__bpf_trace_tp_map_rpcb_getport, ptr @__bpf_trace_tp_map_rpcb_prog_unavail_err, ptr @__bpf_trace_tp_map_rpcb_register, ptr @__bpf_trace_tp_map_rpcb_setport, ptr @__bpf_trace_tp_map_rpcb_timeout_err, ptr @__bpf_trace_tp_map_rpcb_unreachable_err, ptr @__bpf_trace_tp_map_rpcb_unrecognized_err, ptr @__bpf_trace_tp_map_rpcb_unregister, ptr @__bpf_trace_tp_map_svc_alloc_arg_err, ptr @__bpf_trace_tp_map_svc_authenticate, ptr @__bpf_trace_tp_map_svc_defer, ptr @__bpf_trace_tp_map_svc_defer_drop, ptr @__bpf_trace_tp_map_svc_defer_queue, ptr @__bpf_trace_tp_map_svc_defer_recv, ptr @__bpf_trace_tp_map_svc_drop, ptr @__bpf_trace_tp_map_svc_noregister, ptr @__bpf_trace_tp_map_svc_process, ptr @__bpf_trace_tp_map_svc_register, ptr @__bpf_trace_tp_map_svc_send, ptr @__bpf_trace_tp_map_svc_stats_latency, ptr @__bpf_trace_tp_map_svc_unregister, ptr @__bpf_trace_tp_map_svc_wake_up, ptr @__bpf_trace_tp_map_svc_xdr_recvfrom, ptr @__bpf_trace_tp_map_svc_xdr_sendto, ptr @__bpf_trace_tp_map_svc_xprt_accept, ptr @__bpf_trace_tp_map_svc_xprt_close, ptr @__bpf_trace_tp_map_svc_xprt_create_err, ptr @__bpf_trace_tp_map_svc_xprt_dequeue, ptr @__bpf_trace_tp_map_svc_xprt_detach, ptr @__bpf_trace_tp_map_svc_xprt_enqueue, ptr @__bpf_trace_tp_map_svc_xprt_free, ptr @__bpf_trace_tp_map_svc_xprt_no_write_space, ptr @__bpf_trace_tp_map_svcsock_accept_err, ptr @__bpf_trace_tp_map_svcsock_data_ready, ptr @__bpf_trace_tp_map_svcsock_getpeername_err, ptr @__bpf_trace_tp_map_svcsock_marker, ptr @__bpf_trace_tp_map_svcsock_new_socket, ptr @__bpf_trace_tp_map_svcsock_tcp_recv, ptr @__bpf_trace_tp_map_svcsock_tcp_recv_eagain, ptr @__bpf_trace_tp_map_svcsock_tcp_recv_err, ptr @__bpf_trace_tp_map_svcsock_tcp_recv_short, ptr @__bpf_trace_tp_map_svcsock_tcp_send, ptr @__bpf_trace_tp_map_svcsock_tcp_state, ptr @__bpf_trace_tp_map_svcsock_udp_recv, ptr @__bpf_trace_tp_map_svcsock_udp_recv_err, ptr @__bpf_trace_tp_map_svcsock_udp_send, ptr @__bpf_trace_tp_map_svcsock_write_space, ptr @__bpf_trace_tp_map_xprt_connect, ptr @__bpf_trace_tp_map_xprt_create, ptr @__bpf_trace_tp_map_xprt_destroy, ptr @__bpf_trace_tp_map_xprt_disconnect_auto, ptr @__bpf_trace_tp_map_xprt_disconnect_cleanup, ptr @__bpf_trace_tp_map_xprt_disconnect_done, ptr @__bpf_trace_tp_map_xprt_disconnect_force, ptr @__bpf_trace_tp_map_xprt_get_cong, ptr @__bpf_trace_tp_map_xprt_lookup_rqst, ptr @__bpf_trace_tp_map_xprt_ping, ptr @__bpf_trace_tp_map_xprt_put_cong, ptr @__bpf_trace_tp_map_xprt_release_cong, ptr @__bpf_trace_tp_map_xprt_release_xprt, ptr @__bpf_trace_tp_map_xprt_reserve, ptr @__bpf_trace_tp_map_xprt_reserve_cong, ptr @__bpf_trace_tp_map_xprt_reserve_xprt, ptr @__bpf_trace_tp_map_xprt_retransmit, ptr @__bpf_trace_tp_map_xprt_timer, ptr @__bpf_trace_tp_map_xprt_transmit, ptr @__bpf_trace_tp_map_xs_stream_read_data, ptr @__bpf_trace_tp_map_xs_stream_read_request, ptr @__event_cache_entry_expired, ptr @__event_cache_entry_make_negative, ptr @__event_cache_entry_no_listener, ptr @__event_cache_entry_upcall, ptr @__event_cache_entry_update, ptr @__event_pmap_register, ptr @__event_rpc__auth_tooweak, ptr @__event_rpc__bad_creds, ptr @__event_rpc__garbage_args, ptr @__event_rpc__mismatch, ptr @__event_rpc__proc_unavail, ptr @__event_rpc__prog_mismatch, ptr @__event_rpc__prog_unavail, ptr @__event_rpc__stale_creds, ptr @__event_rpc__unparsable, ptr @__event_rpc_bad_callhdr, ptr @__event_rpc_bad_verifier, ptr @__event_rpc_buf_alloc, ptr @__event_rpc_call_rpcerror, ptr @__event_rpc_call_status, ptr @__event_rpc_clnt_clone_err, ptr @__event_rpc_clnt_free, ptr @__event_rpc_clnt_killall, ptr @__event_rpc_clnt_new, ptr @__event_rpc_clnt_new_err, ptr @__event_rpc_clnt_release, ptr @__event_rpc_clnt_replace_xprt, ptr @__event_rpc_clnt_replace_xprt_err, ptr @__event_rpc_clnt_shutdown, ptr @__event_rpc_connect_status, ptr @__event_rpc_refresh_status, ptr @__event_rpc_request, ptr @__event_rpc_retry_refresh_status, ptr @__event_rpc_socket_close, ptr @__event_rpc_socket_connect, ptr @__event_rpc_socket_error, ptr @__event_rpc_socket_nospace, ptr @__event_rpc_socket_reset_connection, ptr @__event_rpc_socket_shutdown, ptr @__event_rpc_socket_state_change, ptr @__event_rpc_stats_latency, ptr @__event_rpc_task_begin, ptr @__event_rpc_task_call_done, ptr @__event_rpc_task_complete, ptr @__event_rpc_task_end, ptr @__event_rpc_task_run_action, ptr @__event_rpc_task_signalled, ptr @__event_rpc_task_sleep, ptr @__event_rpc_task_sync_sleep, ptr @__event_rpc_task_sync_wake, ptr @__event_rpc_task_timeout, ptr @__event_rpc_task_wakeup, ptr @__event_rpc_timeout_status, ptr @__event_rpc_xdr_alignment, ptr @__event_rpc_xdr_overflow, ptr @__event_rpc_xdr_recvfrom, ptr @__event_rpc_xdr_reply_pages, ptr @__event_rpc_xdr_sendto, ptr @__event_rpcb_bind_version_err, ptr @__event_rpcb_getport, ptr @__event_rpcb_prog_unavail_err, ptr @__event_rpcb_register, ptr @__event_rpcb_setport, ptr @__event_rpcb_timeout_err, ptr @__event_rpcb_unreachable_err, ptr @__event_rpcb_unrecognized_err, ptr @__event_rpcb_unregister, ptr @__event_svc_alloc_arg_err, ptr @__event_svc_authenticate, ptr @__event_svc_defer, ptr @__event_svc_defer_drop, ptr @__event_svc_defer_queue, ptr @__event_svc_defer_recv, ptr @__event_svc_drop, ptr @__event_svc_noregister, ptr @__event_svc_process, ptr @__event_svc_register, ptr @__event_svc_send, ptr @__event_svc_stats_latency, ptr @__event_svc_unregister, ptr @__event_svc_wake_up, ptr @__event_svc_xdr_recvfrom, ptr @__event_svc_xdr_sendto, ptr @__event_svc_xprt_accept, ptr @__event_svc_xprt_close, ptr @__event_svc_xprt_create_err, ptr @__event_svc_xprt_dequeue, ptr @__event_svc_xprt_detach, ptr @__event_svc_xprt_enqueue, ptr @__event_svc_xprt_free, ptr @__event_svc_xprt_no_write_space, ptr @__event_svcsock_accept_err, ptr @__event_svcsock_data_ready, ptr @__event_svcsock_getpeername_err, ptr @__event_svcsock_marker, ptr @__event_svcsock_new_socket, ptr @__event_svcsock_tcp_recv, ptr @__event_svcsock_tcp_recv_eagain, ptr @__event_svcsock_tcp_recv_err, ptr @__event_svcsock_tcp_recv_short, ptr @__event_svcsock_tcp_send, ptr @__event_svcsock_tcp_state, ptr @__event_svcsock_udp_recv, ptr @__event_svcsock_udp_recv_err, ptr @__event_svcsock_udp_send, ptr @__event_svcsock_write_space, ptr @__event_xprt_connect, ptr @__event_xprt_create, ptr @__event_xprt_destroy, ptr @__event_xprt_disconnect_auto, ptr @__event_xprt_disconnect_cleanup, ptr @__event_xprt_disconnect_done, ptr @__event_xprt_disconnect_force, ptr @__event_xprt_get_cong, ptr @__event_xprt_lookup_rqst, ptr @__event_xprt_ping, ptr @__event_xprt_put_cong, ptr @__event_xprt_release_cong, ptr @__event_xprt_release_xprt, ptr @__event_xprt_reserve, ptr @__event_xprt_reserve_cong, ptr @__event_xprt_reserve_xprt, ptr @__event_xprt_retransmit, ptr @__event_xprt_timer, ptr @__event_xprt_transmit, ptr @__event_xs_stream_read_data, ptr @__event_xs_stream_read_request, ptr @__ksymtab___rpc_wait_for_completion_task, ptr @__ksymtab_rpc_delay, ptr @__ksymtab_rpc_destroy_wait_queue, ptr @__ksymtab_rpc_exit, ptr @__ksymtab_rpc_free, ptr @__ksymtab_rpc_init_priority_wait_queue, ptr @__ksymtab_rpc_init_wait_queue, ptr @__ksymtab_rpc_malloc, ptr @__ksymtab_rpc_put_task, ptr @__ksymtab_rpc_put_task_async, ptr @__ksymtab_rpc_sleep_on, ptr @__ksymtab_rpc_sleep_on_priority, ptr @__ksymtab_rpc_sleep_on_priority_timeout, ptr @__ksymtab_rpc_sleep_on_timeout, ptr @__ksymtab_rpc_task_timeout, ptr @__ksymtab_rpc_wake_up, ptr @__ksymtab_rpc_wake_up_first, ptr @__ksymtab_rpc_wake_up_next, ptr @__ksymtab_rpc_wake_up_queued_task, ptr @__ksymtab_rpc_wake_up_status, ptr @__ksymtab_xprtiod_workqueue, ptr @__rpc_do_wake_up_task_on_wq._entry, ptr @__rpc_do_wake_up_task_on_wq._entry_ptr, ptr @__tracepoint_cache_entry_expired, ptr @__tracepoint_cache_entry_make_negative, ptr @__tracepoint_cache_entry_no_listener, ptr @__tracepoint_cache_entry_upcall, ptr @__tracepoint_cache_entry_update, ptr @__tracepoint_pmap_register, ptr @__tracepoint_ptr_cache_entry_expired, ptr @__tracepoint_ptr_cache_entry_make_negative, ptr @__tracepoint_ptr_cache_entry_no_listener, ptr @__tracepoint_ptr_cache_entry_upcall, ptr @__tracepoint_ptr_cache_entry_update, ptr @__tracepoint_ptr_pmap_register, ptr @__tracepoint_ptr_rpc__auth_tooweak, ptr @__tracepoint_ptr_rpc__bad_creds, ptr @__tracepoint_ptr_rpc__garbage_args, ptr @__tracepoint_ptr_rpc__mismatch, ptr @__tracepoint_ptr_rpc__proc_unavail, ptr @__tracepoint_ptr_rpc__prog_mismatch, ptr @__tracepoint_ptr_rpc__prog_unavail, ptr @__tracepoint_ptr_rpc__stale_creds, ptr @__tracepoint_ptr_rpc__unparsable, ptr @__tracepoint_ptr_rpc_bad_callhdr, ptr @__tracepoint_ptr_rpc_bad_verifier, ptr @__tracepoint_ptr_rpc_buf_alloc, ptr @__tracepoint_ptr_rpc_call_rpcerror, ptr @__tracepoint_ptr_rpc_call_status, ptr @__tracepoint_ptr_rpc_clnt_clone_err, ptr @__tracepoint_ptr_rpc_clnt_free, ptr @__tracepoint_ptr_rpc_clnt_killall, ptr @__tracepoint_ptr_rpc_clnt_new, ptr @__tracepoint_ptr_rpc_clnt_new_err, ptr @__tracepoint_ptr_rpc_clnt_release, ptr @__tracepoint_ptr_rpc_clnt_replace_xprt, ptr @__tracepoint_ptr_rpc_clnt_replace_xprt_err, ptr @__tracepoint_ptr_rpc_clnt_shutdown, ptr @__tracepoint_ptr_rpc_connect_status, ptr @__tracepoint_ptr_rpc_refresh_status, ptr @__tracepoint_ptr_rpc_request, ptr @__tracepoint_ptr_rpc_retry_refresh_status, ptr @__tracepoint_ptr_rpc_socket_close, ptr @__tracepoint_ptr_rpc_socket_connect, ptr @__tracepoint_ptr_rpc_socket_error, ptr @__tracepoint_ptr_rpc_socket_nospace, ptr @__tracepoint_ptr_rpc_socket_reset_connection, ptr @__tracepoint_ptr_rpc_socket_shutdown, ptr @__tracepoint_ptr_rpc_socket_state_change, ptr @__tracepoint_ptr_rpc_stats_latency, ptr @__tracepoint_ptr_rpc_task_begin, ptr @__tracepoint_ptr_rpc_task_call_done, ptr @__tracepoint_ptr_rpc_task_complete, ptr @__tracepoint_ptr_rpc_task_end, ptr @__tracepoint_ptr_rpc_task_run_action, ptr @__tracepoint_ptr_rpc_task_signalled, ptr @__tracepoint_ptr_rpc_task_sleep, ptr @__tracepoint_ptr_rpc_task_sync_sleep, ptr @__tracepoint_ptr_rpc_task_sync_wake, ptr @__tracepoint_ptr_rpc_task_timeout, ptr @__tracepoint_ptr_rpc_task_wakeup, ptr @__tracepoint_ptr_rpc_timeout_status, ptr @__tracepoint_ptr_rpc_xdr_alignment, ptr @__tracepoint_ptr_rpc_xdr_overflow, ptr @__tracepoint_ptr_rpc_xdr_recvfrom, ptr @__tracepoint_ptr_rpc_xdr_reply_pages, ptr @__tracepoint_ptr_rpc_xdr_sendto, ptr @__tracepoint_ptr_rpcb_bind_version_err, ptr @__tracepoint_ptr_rpcb_getport, ptr @__tracepoint_ptr_rpcb_prog_unavail_err, ptr @__tracepoint_ptr_rpcb_register, ptr @__tracepoint_ptr_rpcb_setport, ptr @__tracepoint_ptr_rpcb_timeout_err, ptr @__tracepoint_ptr_rpcb_unreachable_err, ptr @__tracepoint_ptr_rpcb_unrecognized_err, ptr @__tracepoint_ptr_rpcb_unregister, ptr @__tracepoint_ptr_svc_alloc_arg_err, ptr @__tracepoint_ptr_svc_authenticate, ptr @__tracepoint_ptr_svc_defer, ptr @__tracepoint_ptr_svc_defer_drop, ptr @__tracepoint_ptr_svc_defer_queue, ptr @__tracepoint_ptr_svc_defer_recv, ptr @__tracepoint_ptr_svc_drop, ptr @__tracepoint_ptr_svc_noregister, ptr @__tracepoint_ptr_svc_process, ptr @__tracepoint_ptr_svc_register, ptr @__tracepoint_ptr_svc_send, ptr @__tracepoint_ptr_svc_stats_latency, ptr @__tracepoint_ptr_svc_unregister, ptr @__tracepoint_ptr_svc_wake_up, ptr @__tracepoint_ptr_svc_xdr_recvfrom, ptr @__tracepoint_ptr_svc_xdr_sendto, ptr @__tracepoint_ptr_svc_xprt_accept, ptr @__tracepoint_ptr_svc_xprt_close, ptr @__tracepoint_ptr_svc_xprt_create_err, ptr @__tracepoint_ptr_svc_xprt_dequeue, ptr @__tracepoint_ptr_svc_xprt_detach, ptr @__tracepoint_ptr_svc_xprt_enqueue, ptr @__tracepoint_ptr_svc_xprt_free, ptr @__tracepoint_ptr_svc_xprt_no_write_space, ptr @__tracepoint_ptr_svcsock_accept_err, ptr @__tracepoint_ptr_svcsock_data_ready, ptr @__tracepoint_ptr_svcsock_getpeername_err, ptr @__tracepoint_ptr_svcsock_marker, ptr @__tracepoint_ptr_svcsock_new_socket, ptr @__tracepoint_ptr_svcsock_tcp_recv, ptr @__tracepoint_ptr_svcsock_tcp_recv_eagain, ptr @__tracepoint_ptr_svcsock_tcp_recv_err, ptr @__tracepoint_ptr_svcsock_tcp_recv_short, ptr @__tracepoint_ptr_svcsock_tcp_send, ptr @__tracepoint_ptr_svcsock_tcp_state, ptr @__tracepoint_ptr_svcsock_udp_recv, ptr @__tracepoint_ptr_svcsock_udp_recv_err, ptr @__tracepoint_ptr_svcsock_udp_send, ptr @__tracepoint_ptr_svcsock_write_space, ptr @__tracepoint_ptr_xprt_connect, ptr @__tracepoint_ptr_xprt_create, ptr @__tracepoint_ptr_xprt_destroy, ptr @__tracepoint_ptr_xprt_disconnect_auto, ptr @__tracepoint_ptr_xprt_disconnect_cleanup, ptr @__tracepoint_ptr_xprt_disconnect_done, ptr @__tracepoint_ptr_xprt_disconnect_force, ptr @__tracepoint_ptr_xprt_get_cong, ptr @__tracepoint_ptr_xprt_lookup_rqst, ptr @__tracepoint_ptr_xprt_ping, ptr @__tracepoint_ptr_xprt_put_cong, ptr @__tracepoint_ptr_xprt_release_cong, ptr @__tracepoint_ptr_xprt_release_xprt, ptr @__tracepoint_ptr_xprt_reserve, ptr @__tracepoint_ptr_xprt_reserve_cong, ptr @__tracepoint_ptr_xprt_reserve_xprt, ptr @__tracepoint_ptr_xprt_retransmit, ptr @__tracepoint_ptr_xprt_timer, ptr @__tracepoint_ptr_xprt_transmit, ptr @__tracepoint_ptr_xs_stream_read_data, ptr @__tracepoint_ptr_xs_stream_read_request, ptr @__tracepoint_rpc__auth_tooweak, ptr @__tracepoint_rpc__bad_creds, ptr @__tracepoint_rpc__garbage_args, ptr @__tracepoint_rpc__mismatch, ptr @__tracepoint_rpc__proc_unavail, ptr @__tracepoint_rpc__prog_mismatch, ptr @__tracepoint_rpc__prog_unavail, ptr @__tracepoint_rpc__stale_creds, ptr @__tracepoint_rpc__unparsable, ptr @__tracepoint_rpc_bad_callhdr, ptr @__tracepoint_rpc_bad_verifier, ptr @__tracepoint_rpc_buf_alloc, ptr @__tracepoint_rpc_call_rpcerror, ptr @__tracepoint_rpc_call_status, ptr @__tracepoint_rpc_clnt_clone_err, ptr @__tracepoint_rpc_clnt_free, ptr @__tracepoint_rpc_clnt_killall, ptr @__tracepoint_rpc_clnt_new, ptr @__tracepoint_rpc_clnt_new_err, ptr @__tracepoint_rpc_clnt_release, ptr @__tracepoint_rpc_clnt_replace_xprt, ptr @__tracepoint_rpc_clnt_replace_xprt_err, ptr @__tracepoint_rpc_clnt_shutdown, ptr @__tracepoint_rpc_connect_status, ptr @__tracepoint_rpc_refresh_status, ptr @__tracepoint_rpc_request, ptr @__tracepoint_rpc_retry_refresh_status, ptr @__tracepoint_rpc_socket_close, ptr @__tracepoint_rpc_socket_connect, ptr @__tracepoint_rpc_socket_error, ptr @__tracepoint_rpc_socket_nospace, ptr @__tracepoint_rpc_socket_reset_connection, ptr @__tracepoint_rpc_socket_shutdown, ptr @__tracepoint_rpc_socket_state_change, ptr @__tracepoint_rpc_stats_latency, ptr @__tracepoint_rpc_task_begin, ptr @__tracepoint_rpc_task_call_done, ptr @__tracepoint_rpc_task_complete, ptr @__tracepoint_rpc_task_end, ptr @__tracepoint_rpc_task_run_action, ptr @__tracepoint_rpc_task_signalled, ptr @__tracepoint_rpc_task_sleep, ptr @__tracepoint_rpc_task_sync_sleep, ptr @__tracepoint_rpc_task_sync_wake, ptr @__tracepoint_rpc_task_timeout, ptr @__tracepoint_rpc_task_wakeup, ptr @__tracepoint_rpc_timeout_status, ptr @__tracepoint_rpc_xdr_alignment, ptr @__tracepoint_rpc_xdr_overflow, ptr @__tracepoint_rpc_xdr_recvfrom, ptr @__tracepoint_rpc_xdr_reply_pages, ptr @__tracepoint_rpc_xdr_sendto, ptr @__tracepoint_rpcb_bind_version_err, ptr @__tracepoint_rpcb_getport, ptr @__tracepoint_rpcb_prog_unavail_err, ptr @__tracepoint_rpcb_register, ptr @__tracepoint_rpcb_setport, ptr @__tracepoint_rpcb_timeout_err, ptr @__tracepoint_rpcb_unreachable_err, ptr @__tracepoint_rpcb_unrecognized_err, ptr @__tracepoint_rpcb_unregister, ptr @__tracepoint_svc_alloc_arg_err, ptr @__tracepoint_svc_authenticate, ptr @__tracepoint_svc_defer, ptr @__tracepoint_svc_defer_drop, ptr @__tracepoint_svc_defer_queue, ptr @__tracepoint_svc_defer_recv, ptr @__tracepoint_svc_drop, ptr @__tracepoint_svc_noregister, ptr @__tracepoint_svc_process, ptr @__tracepoint_svc_register, ptr @__tracepoint_svc_send, ptr @__tracepoint_svc_stats_latency, ptr @__tracepoint_svc_unregister, ptr @__tracepoint_svc_wake_up, ptr @__tracepoint_svc_xdr_recvfrom, ptr @__tracepoint_svc_xdr_sendto, ptr @__tracepoint_svc_xprt_accept, ptr @__tracepoint_svc_xprt_close, ptr @__tracepoint_svc_xprt_create_err, ptr @__tracepoint_svc_xprt_dequeue, ptr @__tracepoint_svc_xprt_detach, ptr @__tracepoint_svc_xprt_enqueue, ptr @__tracepoint_svc_xprt_free, ptr @__tracepoint_svc_xprt_no_write_space, ptr @__tracepoint_svcsock_accept_err, ptr @__tracepoint_svcsock_data_ready, ptr @__tracepoint_svcsock_getpeername_err, ptr @__tracepoint_svcsock_marker, ptr @__tracepoint_svcsock_new_socket, ptr @__tracepoint_svcsock_tcp_recv, ptr @__tracepoint_svcsock_tcp_recv_eagain, ptr @__tracepoint_svcsock_tcp_recv_err, ptr @__tracepoint_svcsock_tcp_recv_short, ptr @__tracepoint_svcsock_tcp_send, ptr @__tracepoint_svcsock_tcp_state, ptr @__tracepoint_svcsock_udp_recv, ptr @__tracepoint_svcsock_udp_recv_err, ptr @__tracepoint_svcsock_udp_send, ptr @__tracepoint_svcsock_write_space, ptr @__tracepoint_xprt_connect, ptr @__tracepoint_xprt_create, ptr @__tracepoint_xprt_destroy, ptr @__tracepoint_xprt_disconnect_auto, ptr @__tracepoint_xprt_disconnect_cleanup, ptr @__tracepoint_xprt_disconnect_done, ptr @__tracepoint_xprt_disconnect_force, ptr @__tracepoint_xprt_get_cong, ptr @__tracepoint_xprt_lookup_rqst, ptr @__tracepoint_xprt_ping, ptr @__tracepoint_xprt_put_cong, ptr @__tracepoint_xprt_release_cong, ptr @__tracepoint_xprt_release_xprt, ptr @__tracepoint_xprt_reserve, ptr @__tracepoint_xprt_reserve_cong, ptr @__tracepoint_xprt_reserve_xprt, ptr @__tracepoint_xprt_retransmit, ptr @__tracepoint_xprt_timer, ptr @__tracepoint_xprt_transmit, ptr @__tracepoint_xs_stream_read_data, ptr @__tracepoint_xs_stream_read_request, ptr @event_cache_entry_expired, ptr @event_cache_entry_make_negative, ptr @event_cache_entry_no_listener, ptr @event_cache_entry_upcall, ptr @event_cache_entry_update, ptr @event_class_cache_event, ptr @event_class_pmap_register, ptr @event_class_register_class, ptr @event_class_rpc_buf_alloc, ptr @event_class_rpc_call_rpcerror, ptr @event_class_rpc_clnt_class, ptr @event_class_rpc_clnt_clone_err, ptr @event_class_rpc_clnt_new, ptr @event_class_rpc_clnt_new_err, ptr @event_class_rpc_failure, ptr @event_class_rpc_reply_event, ptr @event_class_rpc_request, ptr @event_class_rpc_socket_nospace, ptr @event_class_rpc_stats_latency, ptr @event_class_rpc_task_queued, ptr @event_class_rpc_task_running, ptr @event_class_rpc_task_status, ptr @event_class_rpc_xdr_alignment, ptr @event_class_rpc_xdr_buf_class, ptr @event_class_rpc_xdr_overflow, ptr @event_class_rpc_xprt_event, ptr @event_class_rpc_xprt_lifetime_class, ptr @event_class_rpcb_getport, ptr @event_class_rpcb_register, ptr @event_class_rpcb_setport, ptr @event_class_rpcb_unregister, ptr @event_class_svc_alloc_arg_err, ptr @event_class_svc_authenticate, ptr @event_class_svc_deferred_event, ptr @event_class_svc_process, ptr @event_class_svc_rqst_event, ptr @event_class_svc_rqst_status, ptr @event_class_svc_stats_latency, ptr @event_class_svc_unregister, ptr @event_class_svc_wake_up, ptr @event_class_svc_xdr_buf_class, ptr @event_class_svc_xdr_msg_class, ptr @event_class_svc_xprt_accept, ptr @event_class_svc_xprt_create_err, ptr @event_class_svc_xprt_dequeue, ptr @event_class_svc_xprt_enqueue, ptr @event_class_svc_xprt_event, ptr @event_class_svcsock_accept_class, ptr @event_class_svcsock_class, ptr @event_class_svcsock_marker, ptr @event_class_svcsock_new_socket, ptr @event_class_svcsock_tcp_recv_short, ptr @event_class_svcsock_tcp_state, ptr @event_class_xprt_cong_event, ptr @event_class_xprt_ping, ptr @event_class_xprt_reserve, ptr @event_class_xprt_retransmit, ptr @event_class_xprt_transmit, ptr @event_class_xprt_writelock_event, ptr @event_class_xs_socket_event, ptr @event_class_xs_socket_event_done, ptr @event_class_xs_stream_read_data, ptr @event_class_xs_stream_read_request, ptr @event_pmap_register, ptr @event_rpc__auth_tooweak, ptr @event_rpc__bad_creds, ptr @event_rpc__garbage_args, ptr @event_rpc__mismatch, ptr @event_rpc__proc_unavail, ptr @event_rpc__prog_mismatch, ptr @event_rpc__prog_unavail, ptr @event_rpc__stale_creds, ptr @event_rpc__unparsable, ptr @event_rpc_bad_callhdr, ptr @event_rpc_bad_verifier, ptr @event_rpc_buf_alloc, ptr @event_rpc_call_rpcerror, ptr @event_rpc_call_status, ptr @event_rpc_clnt_clone_err, ptr @event_rpc_clnt_free, ptr @event_rpc_clnt_killall, ptr @event_rpc_clnt_new, ptr @event_rpc_clnt_new_err, ptr @event_rpc_clnt_release, ptr @event_rpc_clnt_replace_xprt, ptr @event_rpc_clnt_replace_xprt_err, ptr @event_rpc_clnt_shutdown, ptr @event_rpc_connect_status, ptr @event_rpc_refresh_status, ptr @event_rpc_request, ptr @event_rpc_retry_refresh_status, ptr @event_rpc_socket_close, ptr @event_rpc_socket_connect, ptr @event_rpc_socket_error, ptr @event_rpc_socket_nospace, ptr @event_rpc_socket_reset_connection, ptr @event_rpc_socket_shutdown, ptr @event_rpc_socket_state_change, ptr @event_rpc_stats_latency, ptr @event_rpc_task_begin, ptr @event_rpc_task_call_done, ptr @event_rpc_task_complete, ptr @event_rpc_task_end, ptr @event_rpc_task_run_action, ptr @event_rpc_task_signalled, ptr @event_rpc_task_sleep, ptr @event_rpc_task_sync_sleep, ptr @event_rpc_task_sync_wake, ptr @event_rpc_task_timeout, ptr @event_rpc_task_wakeup, ptr @event_rpc_timeout_status, ptr @event_rpc_xdr_alignment, ptr @event_rpc_xdr_overflow, ptr @event_rpc_xdr_recvfrom, ptr @event_rpc_xdr_reply_pages, ptr @event_rpc_xdr_sendto, ptr @event_rpcb_bind_version_err, ptr @event_rpcb_getport, ptr @event_rpcb_prog_unavail_err, ptr @event_rpcb_register, ptr @event_rpcb_setport, ptr @event_rpcb_timeout_err, ptr @event_rpcb_unreachable_err, ptr @event_rpcb_unrecognized_err, ptr @event_rpcb_unregister, ptr @event_svc_alloc_arg_err, ptr @event_svc_authenticate, ptr @event_svc_defer, ptr @event_svc_defer_drop, ptr @event_svc_defer_queue, ptr @event_svc_defer_recv, ptr @event_svc_drop, ptr @event_svc_noregister, ptr @event_svc_process, ptr @event_svc_register, ptr @event_svc_send, ptr @event_svc_stats_latency, ptr @event_svc_unregister, ptr @event_svc_wake_up, ptr @event_svc_xdr_recvfrom, ptr @event_svc_xdr_sendto, ptr @event_svc_xprt_accept, ptr @event_svc_xprt_close, ptr @event_svc_xprt_create_err, ptr @event_svc_xprt_dequeue, ptr @event_svc_xprt_detach, ptr @event_svc_xprt_enqueue, ptr @event_svc_xprt_free, ptr @event_svc_xprt_no_write_space, ptr @event_svcsock_accept_err, ptr @event_svcsock_data_ready, ptr @event_svcsock_getpeername_err, ptr @event_svcsock_marker, ptr @event_svcsock_new_socket, ptr @event_svcsock_tcp_recv, ptr @event_svcsock_tcp_recv_eagain, ptr @event_svcsock_tcp_recv_err, ptr @event_svcsock_tcp_recv_short, ptr @event_svcsock_tcp_send, ptr @event_svcsock_tcp_state, ptr @event_svcsock_udp_recv, ptr @event_svcsock_udp_recv_err, ptr @event_svcsock_udp_send, ptr @event_svcsock_write_space, ptr @event_xprt_connect, ptr @event_xprt_create, ptr @event_xprt_destroy, ptr @event_xprt_disconnect_auto, ptr @event_xprt_disconnect_cleanup, ptr @event_xprt_disconnect_done, ptr @event_xprt_disconnect_force, ptr @event_xprt_get_cong, ptr @event_xprt_lookup_rqst, ptr @event_xprt_ping, ptr @event_xprt_put_cong, ptr @event_xprt_release_cong, ptr @event_xprt_release_xprt, ptr @event_xprt_reserve, ptr @event_xprt_reserve_cong, ptr @event_xprt_reserve_xprt, ptr @event_xprt_retransmit, ptr @event_xprt_timer, ptr @event_xprt_transmit, ptr @event_xs_stream_read_data, ptr @event_xs_stream_read_request, ptr @str__sunrpc__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @trace_event_fields_rpc_xdr_buf_class, ptr @trace_event_type_funcs_rpc_xdr_buf_class, ptr @print_fmt_rpc_xdr_buf_class, ptr @trace_event_fields_rpc_clnt_class, ptr @trace_event_type_funcs_rpc_clnt_class, ptr @print_fmt_rpc_clnt_class, ptr @trace_event_fields_rpc_clnt_new, ptr @trace_event_type_funcs_rpc_clnt_new, ptr @print_fmt_rpc_clnt_new, ptr @trace_event_fields_rpc_clnt_new_err, ptr @trace_event_type_funcs_rpc_clnt_new_err, ptr @print_fmt_rpc_clnt_new_err, ptr @trace_event_fields_rpc_clnt_clone_err, ptr @trace_event_type_funcs_rpc_clnt_clone_err, ptr @print_fmt_rpc_clnt_clone_err, ptr @trace_event_fields_rpc_task_status, ptr @trace_event_type_funcs_rpc_task_status, ptr @print_fmt_rpc_task_status, ptr @trace_event_fields_rpc_request, ptr @trace_event_type_funcs_rpc_request, ptr @print_fmt_rpc_request, ptr @trace_event_fields_rpc_task_running, ptr @trace_event_type_funcs_rpc_task_running, ptr @print_fmt_rpc_task_running, ptr @trace_event_fields_rpc_task_queued, ptr @trace_event_type_funcs_rpc_task_queued, ptr @print_fmt_rpc_task_queued, ptr @trace_event_fields_rpc_failure, ptr @trace_event_type_funcs_rpc_failure, ptr @print_fmt_rpc_failure, ptr @trace_event_fields_rpc_reply_event, ptr @trace_event_type_funcs_rpc_reply_event, ptr @print_fmt_rpc_reply_event, ptr @trace_event_fields_rpc_buf_alloc, ptr @trace_event_type_funcs_rpc_buf_alloc, ptr @print_fmt_rpc_buf_alloc, ptr @trace_event_fields_rpc_call_rpcerror, ptr @trace_event_type_funcs_rpc_call_rpcerror, ptr @print_fmt_rpc_call_rpcerror, ptr @trace_event_fields_rpc_stats_latency, ptr @trace_event_type_funcs_rpc_stats_latency, ptr @print_fmt_rpc_stats_latency, ptr @trace_event_fields_rpc_xdr_overflow, ptr @trace_event_type_funcs_rpc_xdr_overflow, ptr @print_fmt_rpc_xdr_overflow, ptr @trace_event_fields_rpc_xdr_alignment, ptr @trace_event_type_funcs_rpc_xdr_alignment, ptr @print_fmt_rpc_xdr_alignment, ptr @trace_event_fields_xs_socket_event, ptr @trace_event_fields_xs_socket_event_done, ptr @trace_event_type_funcs_xs_socket_event, ptr @print_fmt_xs_socket_event, ptr @trace_event_type_funcs_xs_socket_event_done, ptr @print_fmt_xs_socket_event_done, ptr @trace_event_fields_rpc_socket_nospace, ptr @trace_event_type_funcs_rpc_socket_nospace, ptr @print_fmt_rpc_socket_nospace, ptr @trace_event_fields_rpc_xprt_lifetime_class, ptr @trace_event_type_funcs_rpc_xprt_lifetime_class, ptr @print_fmt_rpc_xprt_lifetime_class, ptr @trace_event_fields_rpc_xprt_event, ptr @trace_event_type_funcs_rpc_xprt_event, ptr @print_fmt_rpc_xprt_event, ptr @trace_event_fields_xprt_transmit, ptr @trace_event_type_funcs_xprt_transmit, ptr @print_fmt_xprt_transmit, ptr @trace_event_fields_xprt_retransmit, ptr @trace_event_type_funcs_xprt_retransmit, ptr @print_fmt_xprt_retransmit, ptr @trace_event_fields_xprt_ping, ptr @trace_event_type_funcs_xprt_ping, ptr @print_fmt_xprt_ping, ptr @trace_event_fields_xprt_writelock_event, ptr @trace_event_type_funcs_xprt_writelock_event, ptr @print_fmt_xprt_writelock_event, ptr @trace_event_fields_xprt_cong_event, ptr @trace_event_type_funcs_xprt_cong_event, ptr @print_fmt_xprt_cong_event, ptr @trace_event_fields_xprt_reserve, ptr @trace_event_type_funcs_xprt_reserve, ptr @print_fmt_xprt_reserve, ptr @trace_event_fields_xs_stream_read_data, ptr @trace_event_type_funcs_xs_stream_read_data, ptr @print_fmt_xs_stream_read_data, ptr @trace_event_fields_xs_stream_read_request, ptr @trace_event_type_funcs_xs_stream_read_request, ptr @print_fmt_xs_stream_read_request, ptr @trace_event_fields_rpcb_getport, ptr @trace_event_type_funcs_rpcb_getport, ptr @print_fmt_rpcb_getport, ptr @trace_event_fields_rpcb_setport, ptr @trace_event_type_funcs_rpcb_setport, ptr @print_fmt_rpcb_setport, ptr @trace_event_fields_pmap_register, ptr @trace_event_type_funcs_pmap_register, ptr @print_fmt_pmap_register, ptr @trace_event_fields_rpcb_register, ptr @trace_event_type_funcs_rpcb_register, ptr @print_fmt_rpcb_register, ptr @trace_event_fields_rpcb_unregister, ptr @trace_event_type_funcs_rpcb_unregister, ptr @print_fmt_rpcb_unregister, ptr @trace_event_fields_svc_xdr_msg_class, ptr @trace_event_type_funcs_svc_xdr_msg_class, ptr @print_fmt_svc_xdr_msg_class, ptr @trace_event_fields_svc_xdr_buf_class, ptr @trace_event_type_funcs_svc_xdr_buf_class, ptr @print_fmt_svc_xdr_buf_class, ptr @trace_event_fields_svc_authenticate, ptr @trace_event_type_funcs_svc_authenticate, ptr @print_fmt_svc_authenticate, ptr @trace_event_fields_svc_process, ptr @trace_event_type_funcs_svc_process, ptr @print_fmt_svc_process, ptr @trace_event_fields_svc_rqst_event, ptr @trace_event_type_funcs_svc_rqst_event, ptr @print_fmt_svc_rqst_event, ptr @trace_event_fields_svc_rqst_status, ptr @trace_event_type_funcs_svc_rqst_status, ptr @print_fmt_svc_rqst_status, ptr @trace_event_fields_svc_xprt_create_err, ptr @trace_event_type_funcs_svc_xprt_create_err, ptr @print_fmt_svc_xprt_create_err, ptr @trace_event_fields_svc_xprt_enqueue, ptr @trace_event_type_funcs_svc_xprt_enqueue, ptr @print_fmt_svc_xprt_enqueue, ptr @trace_event_fields_svc_xprt_event, ptr @trace_event_type_funcs_svc_xprt_event, ptr @print_fmt_svc_xprt_event, ptr @trace_event_fields_svc_xprt_accept, ptr @trace_event_type_funcs_svc_xprt_accept, ptr @print_fmt_svc_xprt_accept, ptr @trace_event_fields_svc_xprt_dequeue, ptr @trace_event_type_funcs_svc_xprt_dequeue, ptr @print_fmt_svc_xprt_dequeue, ptr @trace_event_fields_svc_wake_up, ptr @trace_event_type_funcs_svc_wake_up, ptr @print_fmt_svc_wake_up, ptr @trace_event_fields_svc_alloc_arg_err, ptr @trace_event_type_funcs_svc_alloc_arg_err, ptr @print_fmt_svc_alloc_arg_err, ptr @trace_event_fields_svc_stats_latency, ptr @trace_event_type_funcs_svc_stats_latency, ptr @print_fmt_svc_stats_latency, ptr @trace_event_fields_svc_deferred_event, ptr @trace_event_type_funcs_svc_deferred_event, ptr @print_fmt_svc_deferred_event, ptr @trace_event_fields_svcsock_new_socket, ptr @trace_event_type_funcs_svcsock_new_socket, ptr @print_fmt_svcsock_new_socket, ptr @trace_event_fields_svcsock_marker, ptr @trace_event_type_funcs_svcsock_marker, ptr @print_fmt_svcsock_marker, ptr @trace_event_fields_svcsock_class, ptr @trace_event_type_funcs_svcsock_class, ptr @print_fmt_svcsock_class, ptr @trace_event_fields_svcsock_tcp_recv_short, ptr @trace_event_type_funcs_svcsock_tcp_recv_short, ptr @print_fmt_svcsock_tcp_recv_short, ptr @trace_event_fields_svcsock_tcp_state, ptr @trace_event_type_funcs_svcsock_tcp_state, ptr @print_fmt_svcsock_tcp_state, ptr @trace_event_fields_svcsock_accept_class, ptr @trace_event_type_funcs_svcsock_accept_class, ptr @print_fmt_svcsock_accept_class, ptr @trace_event_fields_cache_event, ptr @trace_event_type_funcs_cache_event, ptr @print_fmt_cache_event, ptr @trace_event_fields_register_class, ptr @trace_event_type_funcs_register_class, ptr @print_fmt_register_class, ptr @trace_event_fields_svc_unregister, ptr @trace_event_type_funcs_svc_unregister, ptr @print_fmt_svc_unregister, ptr @.str.54, ptr @delay_queue, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @trace_raw_output_rpc_task_running.__flags, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @trace_raw_output_rpc_task_running.__flags.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @trace_raw_output_rpc_task_queued.__flags, ptr @trace_raw_output_rpc_task_queued.__flags.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @trace_raw_output_xs_socket_event.symbols, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @trace_raw_output_xs_socket_event.symbols.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @trace_raw_output_xs_socket_event_done.symbols, ptr @trace_raw_output_xs_socket_event_done.symbols.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @trace_raw_output_rpc_xprt_lifetime_class.__flags, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @trace_raw_output_svc_authenticate.symbols, ptr @trace_raw_output_svc_authenticate.symbols.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @trace_raw_output_svc_rqst_event.__flags, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @trace_raw_output_svc_rqst_status.__flags, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @trace_raw_output_svc_xprt_enqueue.__flags, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @trace_raw_output_svc_xprt_event.__flags, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @trace_raw_output_svc_xprt_dequeue.__flags, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @trace_raw_output_svcsock_new_socket.symbols, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @trace_raw_output_svcsock_new_socket.symbols.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @trace_raw_output_svcsock_class.__flags, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @trace_raw_output_svcsock_tcp_recv_short.__flags, ptr @.str.299, ptr @trace_raw_output_svcsock_tcp_state.symbols, ptr @trace_raw_output_svcsock_tcp_state.symbols.300, ptr @trace_raw_output_svcsock_tcp_state.__flags, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @trace_raw_output_register_class.symbols, ptr @.str.310, ptr @.str.311, ptr @.str.313, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @rpc_task_set_debuginfo.rpc_pid, ptr @rpc_make_runnable.__key, ptr @.str.322, ptr @.str.323, ptr @rpc_final_put_task.__key, ptr @.str.324, ptr @.str.325], section "llvm.metadata"
@0 = internal global [647 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__sunrpc__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_xdr_buf_class to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_xdr_buf_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_xdr_buf_class to i32), i32 201, i32 256, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_xdr_sendto to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_xdr_recvfrom to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_xdr_reply_pages to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_clnt_class to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_clnt_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_clnt_class to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_free to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_killall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_shutdown to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_replace_xprt to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_replace_xprt_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_clnt_new to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_clnt_new to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_clnt_new to i32), i32 137, i32 192, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_new to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_clnt_new_err to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_clnt_new_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_clnt_new_err to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_new_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_clnt_clone_err to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_clnt_clone_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_clnt_clone_err to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_clnt_clone_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_task_status to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_task_status to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_task_status to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_call_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_connect_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_timeout_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_retry_refresh_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_refresh_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_request to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_request to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_request to i32), i32 143, i32 192, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_request to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_task_running to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_task_running to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_task_running to i32), i32 735, i32 896, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_begin to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_run_action to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_sync_sleep to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_sync_wake to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_timeout to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_signalled to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_call_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_task_queued to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_task_queued to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_task_queued to i32), i32 765, i32 928, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_sleep to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_task_wakeup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_failure to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_failure to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_failure to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_bad_callhdr to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_bad_verifier to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_reply_event to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_reply_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_reply_event to i32), i32 166, i32 224, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__prog_unavail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__prog_mismatch to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__proc_unavail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__garbage_args to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__unparsable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__mismatch to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__stale_creds to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__bad_creds to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc__auth_tooweak to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_prog_unavail_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_timeout_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_bind_version_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_unreachable_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_unrecognized_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_buf_alloc to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_buf_alloc to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_buf_alloc to i32), i32 126, i32 160, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_buf_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_call_rpcerror to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_call_rpcerror to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_call_rpcerror to i32), i32 107, i32 160, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_call_rpcerror to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_stats_latency to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_stats_latency to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_stats_latency to i32), i32 203, i32 256, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_stats_latency to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_xdr_overflow to i32), i32 360, i32 448, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_xdr_overflow to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_xdr_overflow to i32), i32 289, i32 384, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_xdr_overflow to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_xdr_alignment to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_xdr_alignment to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_xdr_alignment to i32), i32 276, i32 352, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_xdr_alignment to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xs_socket_event to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xs_socket_event_done to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xs_socket_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xs_socket_event to i32), i32 680, i32 864, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_state_change to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xs_socket_event_done to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xs_socket_event_done to i32), i32 701, i32 864, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_connect to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_reset_connection to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_close to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_shutdown to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_socket_nospace to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_socket_nospace to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_socket_nospace to i32), i32 97, i32 160, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpc_socket_nospace to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_xprt_lifetime_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_xprt_lifetime_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_xprt_lifetime_class to i32), i32 592, i32 736, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_create to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_connect to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_disconnect_auto to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_disconnect_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_disconnect_force to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_disconnect_cleanup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_destroy to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpc_xprt_event to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpc_xprt_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpc_xprt_event to i32), i32 93, i32 128, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_timer to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_lookup_rqst to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprt_transmit to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprt_transmit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprt_transmit to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_transmit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprt_retransmit to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprt_retransmit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprt_retransmit to i32), i32 182, i32 224, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_retransmit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprt_ping to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprt_ping to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprt_ping to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_ping to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprt_writelock_event to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprt_writelock_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprt_writelock_event to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_reserve_xprt to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_release_xprt to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprt_cong_event to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprt_cong_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprt_cong_event to i32), i32 149, i32 192, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_reserve_cong to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_release_cong to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_get_cong to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_put_cong to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprt_reserve to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprt_reserve to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprt_reserve to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprt_reserve to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xs_stream_read_data to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xs_stream_read_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xs_stream_read_data to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xs_stream_read_data to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xs_stream_read_request to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xs_stream_read_request to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xs_stream_read_request to i32), i32 140, i32 192, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xs_stream_read_request to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcb_getport to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcb_getport to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcb_getport to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_getport to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcb_setport to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcb_setport to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcb_setport to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_setport to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_pmap_register to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_pmap_register to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_pmap_register to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_pmap_register to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcb_register to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcb_register to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcb_register to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_register to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcb_unregister to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcb_unregister to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcb_unregister to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rpcb_unregister to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xdr_msg_class to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xdr_msg_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xdr_msg_class to i32), i32 157, i32 192, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xdr_recvfrom to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xdr_buf_class to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xdr_buf_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xdr_buf_class to i32), i32 177, i32 224, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xdr_sendto to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_authenticate to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1070 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_authenticate to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_authenticate to i32), i32 631, i32 768, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_authenticate to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_process to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_process to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_process to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1088 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_process to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_rqst_event to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_rqst_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_rqst_event to i32), i32 380, i32 448, i32 ptrtoint (ptr @___asan_gen_.1100 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_defer to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_drop to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_rqst_status to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1109 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_rqst_status to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_rqst_status to i32), i32 403, i32 512, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xprt_create_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xprt_create_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xprt_create_err to i32), i32 111, i32 160, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_create_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xprt_enqueue to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xprt_enqueue to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1136 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xprt_enqueue to i32), i32 496, i32 608, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_enqueue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xprt_event to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1145 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xprt_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xprt_event to i32), i32 479, i32 576, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_no_write_space to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_close to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_detach to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_free to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xprt_accept to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xprt_accept to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xprt_accept to i32), i32 91, i32 128, i32 ptrtoint (ptr @___asan_gen_.1172 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_accept to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_xprt_dequeue to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_xprt_dequeue to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1181 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_xprt_dequeue to i32), i32 506, i32 608, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_xprt_dequeue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_wake_up to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_wake_up to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_wake_up to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1196 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_wake_up to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_alloc_arg_err to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_alloc_arg_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_alloc_arg_err to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1208 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_alloc_arg_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1211 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_stats_latency to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_stats_latency to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_stats_latency to i32), i32 107, i32 160, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_stats_latency to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_deferred_event to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_deferred_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1229 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_deferred_event to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_defer_drop to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_defer_queue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_defer_recv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1241 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcsock_new_socket to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1244 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcsock_new_socket to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcsock_new_socket to i32), i32 390, i32 512, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_new_socket to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1253 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcsock_marker to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcsock_marker to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcsock_marker to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1262 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_marker to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1265 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcsock_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcsock_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcsock_class to i32), i32 503, i32 608, i32 ptrtoint (ptr @___asan_gen_.1274 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_udp_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_udp_recv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1280 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_udp_recv_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_tcp_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_tcp_recv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1289 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_tcp_recv_eagain to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1292 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_tcp_recv_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_data_ready to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1298 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_write_space to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcsock_tcp_recv_short to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1304 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcsock_tcp_recv_short to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcsock_tcp_recv_short to i32), i32 533, i32 672, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_tcp_recv_short to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1313 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcsock_tcp_state to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1316 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcsock_tcp_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1319 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcsock_tcp_state to i32), i32 1033, i32 1312, i32 ptrtoint (ptr @___asan_gen_.1322 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_tcp_state to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcsock_accept_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcsock_accept_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcsock_accept_class to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.1334 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_accept_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcsock_getpeername_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_cache_event to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1343 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_cache_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_cache_event to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cache_entry_expired to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cache_entry_upcall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cache_entry_update to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cache_entry_make_negative to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1361 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cache_entry_no_listener to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_register_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_register_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1370 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_register_class to i32), i32 281, i32 352, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_register to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_noregister to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1379 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svc_unregister to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svc_unregister to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svc_unregister to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svc_unregister to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1391 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @delay_queue to i32), i32 200, i32 256, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpc_task_running.__flags to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpc_task_running.__flags.115 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpc_task_queued.__flags to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpc_task_queued.__flags.127 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xs_socket_event.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xs_socket_event.symbols.165 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xs_socket_event_done.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xs_socket_event_done.symbols.178 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpc_xprt_lifetime_class.__flags to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_authenticate.symbols to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_authenticate.symbols.225 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_rqst_event.__flags to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_rqst_status.__flags to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_xprt_enqueue.__flags to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_xprt_event.__flags to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svc_xprt_dequeue.__flags to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_new_socket.symbols to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_new_socket.symbols.288 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_class.__flags to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_tcp_recv_short.__flags to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_tcp_state.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_tcp_state.symbols.300 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcsock_tcp_state.__flags to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.2183 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_register_class.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2213 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_task_set_debuginfo.rpc_pid to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2246 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_make_runnable.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2258 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rpc_final_put_task.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2258 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2264 to i32), i32 ptrtoint (ptr @___asan_gen_.2265 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2266 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_sendto(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_xdr_sendto, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %xdr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_recvfrom(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_xdr_recvfrom, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %xdr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_reply_pages(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_xdr_reply_pages, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %xdr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_free(ptr nocapture readnone %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_free, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_killall(ptr nocapture readnone %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_killall, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_shutdown(ptr nocapture readnone %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_shutdown, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_release(ptr nocapture readnone %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_replace_xprt(ptr nocapture readnone %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_replace_xprt, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_replace_xprt_err(ptr nocapture readnone %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_replace_xprt_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_new(ptr nocapture readnone %__data, ptr noundef %clnt, ptr noundef %xprt, ptr noundef %program, ptr noundef %server) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_new, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt, ptr noundef %xprt, ptr noundef %program, ptr noundef %server) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_new_err(ptr nocapture readnone %__data, ptr noundef %program, ptr noundef %server, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_new_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %program, ptr noundef %server, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_clnt_clone_err(ptr nocapture readnone %__data, ptr noundef %clnt, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_clnt_clone_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_call_status(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_call_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_connect_status(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_connect_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_timeout_status(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_timeout_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_retry_refresh_status(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_retry_refresh_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_refresh_status(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_refresh_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_request(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_request, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_begin(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_begin, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_run_action(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_sync_sleep(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_sync_wake(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_complete(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_timeout(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_signalled(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_end(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_call_done(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_sleep(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %q) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_task_wakeup(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %q) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_bad_callhdr(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_bad_callhdr, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_bad_verifier(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_bad_verifier, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__prog_unavail(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__prog_unavail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__prog_mismatch(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__prog_mismatch, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__proc_unavail(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__proc_unavail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__garbage_args(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__garbage_args, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__unparsable(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__unparsable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__mismatch(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__mismatch, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__stale_creds(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__stale_creds, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__bad_creds(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__bad_creds, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc__auth_tooweak(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc__auth_tooweak, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_prog_unavail_err(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_prog_unavail_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_timeout_err(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_timeout_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_bind_version_err(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_bind_version_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_unreachable_err(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_unreachable_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_unrecognized_err(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_unrecognized_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_buf_alloc(ptr nocapture readnone %__data, ptr noundef %task, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_buf_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_call_rpcerror(ptr nocapture readnone %__data, ptr noundef %task, i32 noundef %tk_status, i32 noundef %rpc_status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_call_rpcerror, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, i32 noundef %tk_status, i32 noundef %rpc_status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_stats_latency(ptr nocapture readnone %__data, ptr noundef %task, i64 noundef %backlog, i64 noundef %rtt, i64 noundef %execute) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_stats_latency, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, i64 noundef %backlog, i64 noundef %rtt, i64 noundef %execute) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_overflow(ptr nocapture readnone %__data, ptr noundef %xdr, i32 noundef %requested) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_xdr_overflow, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xdr, i32 noundef %requested) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_xdr_alignment(ptr nocapture readnone %__data, ptr noundef %xdr, i32 noundef %offset, i32 noundef %copied) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_xdr_alignment, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xdr, i32 noundef %offset, i32 noundef %copied) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_state_change(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_state_change, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_connect(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_connect, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_error(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_reset_connection(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_reset_connection, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_close(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_close, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_shutdown(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_shutdown, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpc_socket_nospace(ptr nocapture readnone %__data, ptr noundef %rqst, ptr noundef %transport) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_socket_nospace, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, ptr noundef %transport) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_create(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_create, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_connect(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_connect, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_auto(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_disconnect_auto, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_done(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_disconnect_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_force(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_disconnect_force, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_disconnect_cleanup(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_disconnect_cleanup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_destroy(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_destroy, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_timer(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %xid, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_timer, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %xid, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_lookup_rqst(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %xid, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_lookup_rqst, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %xid, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_transmit(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_transmit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_retransmit(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_retransmit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_ping(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_ping, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_reserve_xprt(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_reserve_xprt, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_release_xprt(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_release_xprt, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_reserve_cong(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_reserve_cong, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_release_cong(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_release_cong, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_get_cong(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_get_cong, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_put_cong(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_put_cong, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %task) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprt_reserve(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprt_reserve, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xs_stream_read_data(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %err, i32 noundef %total) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xs_stream_read_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %err, i32 noundef %total) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xs_stream_read_request(ptr nocapture readnone %__data, ptr noundef %xs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xs_stream_read_request, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xs) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_getport(ptr nocapture readnone %__data, ptr noundef %clnt, ptr noundef %task, i32 noundef %bind_version) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_getport, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clnt, ptr noundef %task, i32 noundef %bind_version) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_setport(ptr nocapture readnone %__data, ptr noundef %task, i32 noundef %status, i16 noundef zeroext %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_setport, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, i32 noundef %status, i16 noundef zeroext %port) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_pmap_register(ptr nocapture readnone %__data, i32 noundef %program, i32 noundef %version, i32 noundef %protocol, i16 noundef zeroext %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_pmap_register, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %program, i32 noundef %version, i32 noundef %protocol, i16 noundef zeroext %port) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_register(ptr nocapture readnone %__data, i32 noundef %program, i32 noundef %version, ptr noundef %addr, ptr noundef %netid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_register, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %program, i32 noundef %version, ptr noundef %addr, ptr noundef %netid) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rpcb_unregister(ptr nocapture readnone %__data, i32 noundef %program, i32 noundef %version, ptr noundef %netid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpcb_unregister, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %program, i32 noundef %version, ptr noundef %netid) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xdr_recvfrom(ptr nocapture readnone %__data, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xdr_recvfrom, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xdr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xdr_sendto(ptr nocapture readnone %__data, i32 noundef %xid, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xdr_sendto, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %xid, ptr noundef %xdr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_authenticate(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %auth_res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_authenticate, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %auth_res) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_process(ptr nocapture readnone %__data, ptr noundef %rqst, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_process, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, ptr noundef %name) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_defer, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_drop(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_drop, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_send(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_create_err(ptr nocapture readnone %__data, ptr noundef %program, ptr noundef %protocol, ptr noundef %sap, i32 noundef %salen, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_create_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %program, ptr noundef %protocol, ptr noundef %sap, i32 noundef %salen, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_enqueue(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_enqueue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_no_write_space(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_no_write_space, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_close(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_close, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_detach(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_detach, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_free(ptr nocapture readnone %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_free, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_accept(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %service) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_accept, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %service) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_xprt_dequeue(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_xprt_dequeue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_wake_up(ptr nocapture readnone %__data, i32 noundef %pid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_wake_up, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %pid) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_alloc_arg_err(ptr nocapture readnone %__data, i32 noundef %pages) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_alloc_arg_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %pages) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_stats_latency(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_stats_latency, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer_drop(ptr nocapture readnone %__data, ptr noundef %dr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_defer_drop, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %dr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer_queue(ptr nocapture readnone %__data, ptr noundef %dr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_defer_queue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %dr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_defer_recv(ptr nocapture readnone %__data, ptr noundef %dr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_defer_recv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %dr) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_new_socket(ptr nocapture readnone %__data, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_new_socket, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %socket) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_marker(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %marker) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_marker, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %marker) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_udp_send(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_udp_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_udp_recv(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_udp_recv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_udp_recv_err(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_udp_recv_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_send(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_tcp_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_tcp_recv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv_eagain(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_tcp_recv_eagain, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv_err(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_tcp_recv_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_data_ready(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_data_ready, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_write_space(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_write_space, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_recv_short(ptr nocapture readnone %__data, ptr noundef %xprt, i32 noundef %expected, i32 noundef %received) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_tcp_recv_short, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, i32 noundef %expected, i32 noundef %received) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_tcp_state(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_tcp_state, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %socket) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_accept_err(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %service, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_accept_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %service, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcsock_getpeername_err(ptr nocapture readnone %__data, ptr noundef %xprt, ptr noundef %service, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcsock_getpeername_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %xprt, ptr noundef %service, i32 noundef %status) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_expired(ptr nocapture readnone %__data, ptr noundef %cd, ptr noundef %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cache_entry_expired, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cd, ptr noundef %h) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_upcall(ptr nocapture readnone %__data, ptr noundef %cd, ptr noundef %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cache_entry_upcall, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cd, ptr noundef %h) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_update(ptr nocapture readnone %__data, ptr noundef %cd, ptr noundef %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cache_entry_update, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cd, ptr noundef %h) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_make_negative(ptr nocapture readnone %__data, ptr noundef %cd, ptr noundef %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cache_entry_make_negative, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cd, ptr noundef %h) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cache_entry_no_listener(ptr nocapture readnone %__data, ptr noundef %cd, ptr noundef %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cache_entry_no_listener, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cd, ptr noundef %h) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_register(ptr nocapture readnone %__data, ptr noundef %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_register, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_noregister(ptr nocapture readnone %__data, ptr noundef %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_noregister, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svc_unregister(ptr nocapture readnone %__data, ptr noundef %program, i32 noundef %version, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svc_unregister, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %program, i32 noundef %version, i32 noundef %error) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xdr_buf_class(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %xdr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %tobool6.not = icmp eq ptr %7, null
  br i1 %tobool6.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %9, %cond.true ], [ -1, %if.end5.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %cond, ptr %client_id, align 4
  %11 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %xdr, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %head_base, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %14 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %head_len, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1
  %17 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %tail_base, align 4
  %iov_len14 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1, i32 0, i32 1
  %20 = ptrtoint ptr %iov_len14 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %iov_len14, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 6
  %22 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %tail_len, align 4
  %page_base = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 4
  %23 = ptrtoint ptr %page_base to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %page_base, align 4
  %page_base15 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 7
  %25 = ptrtoint ptr %page_base15 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %page_base15, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 5
  %26 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %page_len, align 4
  %page_len16 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 8
  %28 = ptrtoint ptr %page_len16 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %page_len16, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 8
  %29 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call3, i32 0, i32 9
  %31 = ptrtoint ptr %msg_len to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %msg_len, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xdr_buf_class(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %xdr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %tobool17.not = icmp eq ptr %31, null
  br i1 %tobool17.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %33, %cond.true ], [ -1, %if.end16.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %cond, ptr %client_id, align 4
  %35 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %xdr, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %head_base, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %38 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %head_len, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1
  %41 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %42, ptr %tail_base, align 4
  %iov_len27 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1, i32 0, i32 1
  %44 = ptrtoint ptr %iov_len27 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %iov_len27, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 6
  %46 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %tail_len, align 4
  %page_base = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 4
  %47 = ptrtoint ptr %page_base to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %page_base, align 4
  %page_base28 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 7
  %49 = ptrtoint ptr %page_base28 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %page_base28, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 5
  %50 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %page_len, align 4
  %page_len29 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 8
  %52 = ptrtoint ptr %page_len29 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %page_len29, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 8
  %53 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %call13, i32 0, i32 9
  %55 = ptrtoint ptr %msg_len to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %msg_len, align 4
  %56 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rctx, align 4
  %58 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %57, ptr noundef %__data, i64 noundef 1, ptr noundef %59, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_class(ptr noundef %__data, ptr nocapture noundef readonly %clnt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %3 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %client_id, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_class(ptr noundef %__data, ptr nocapture noundef readonly %clnt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %27 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %client_id, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_new(ptr noundef %__data, ptr nocapture noundef readonly %clnt, ptr nocapture noundef readonly %xprt, ptr noundef readonly %program, ptr noundef readonly %server) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i72 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i72, ptr @.str.72, ptr %4
  %call.i73 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = add i32 %call.i73, 1
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %6, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %6
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add23.i = add i32 %add17.i, %add.i
  %tobool24.not.i = icmp eq ptr %program, null
  %cond28.i = select i1 %tobool24.not.i, ptr @.str.72, ptr %program
  %call29.i = tail call i32 @strlen(ptr noundef nonnull %cond28.i) #18
  %add30.i = add i32 %call29.i, 1
  %tobool38.not.i = icmp eq ptr %server, null
  %cond42.i = select i1 %tobool38.not.i, ptr @.str.72, ptr %server
  %add37.i = add i32 %add30.i, %add23.i
  %call43.i = tail call i32 @strlen(ptr noundef nonnull %cond42.i) #18
  %add44.i = add i32 %call43.i, 1
  %add51.i = add i32 %add37.i, 28
  %add = add i32 %add51.i, %add44.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl48.i = shl i32 %add44.i, 16
  %or50.i = or i32 %shl48.i, %add51.i
  %shl34.i = shl i32 %add30.i, 16
  %add32.i = add i32 %add23.i, 28
  %or36.i = or i32 %shl34.i, %add32.i
  %shl20.i = shl i32 %add17.i, 16
  %add19.i = add i32 %call.i73, 29
  %or22.i = or i32 %shl20.i, %add19.i
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 28
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or36.i, ptr %__data_loc_program, align 4
  %__data_loc_server = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or50.i, ptr %__data_loc_server, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call3, i32 0, i32 1
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %14 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %address_strings.i, align 8
  %tobool9.not = icmp eq ptr %15, null
  %spec.select = select i1 %tobool9.not, ptr @.str.72, ptr %15
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and14 = and i32 %add19.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %16 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx8.i, align 4
  %tobool18.not = icmp eq ptr %17, null
  %cond24 = select i1 %tobool18.not, ptr @.str.72, ptr %17
  %call25 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond24) #19
  %18 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %__data_loc_program, align 4
  %and27 = and i32 %19, 65535
  %add.ptr28 = getelementptr i8, ptr %call3, i32 %and27
  %call34 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef nonnull %cond28.i) #19
  %20 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %__data_loc_server, align 4
  %and36 = and i32 %21, 65535
  %add.ptr37 = getelementptr i8, ptr %call3, i32 %and36
  %call43 = call ptr @strcpy(ptr noundef %add.ptr37, ptr noundef nonnull %cond42.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_new(ptr noundef %__data, ptr nocapture noundef readonly %clnt, ptr nocapture noundef readonly %xprt, ptr noundef readonly %program, ptr noundef readonly %server) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = add i32 %call.i, 1
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 28
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %5, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %5
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add19.i = add i32 %call.i, 29
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add19.i
  %add23.i = add i32 %add17.i, %add.i
  %tobool24.not.i = icmp eq ptr %program, null
  %cond28.i = select i1 %tobool24.not.i, ptr @.str.72, ptr %program
  %call29.i = tail call i32 @strlen(ptr noundef nonnull %cond28.i) #18
  %add30.i = add i32 %call29.i, 1
  %add32.i = add i32 %add23.i, 28
  %shl34.i = shl i32 %add30.i, 16
  %or36.i = or i32 %shl34.i, %add32.i
  %tobool38.not.i = icmp eq ptr %server, null
  %cond42.i = select i1 %tobool38.not.i, ptr @.str.72, ptr %server
  %add37.i = add i32 %add30.i, %add23.i
  %call43.i = tail call i32 @strlen(ptr noundef nonnull %cond42.i) #18
  %add44.i = add i32 %call43.i, 1
  %add46.i = add i32 %add37.i, 28
  %shl48.i = shl i32 %add44.i, 16
  %or50.i = or i32 %shl48.i, %add46.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i97.not = icmp eq ptr %19, null
  br i1 %tobool.not.i97.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add51.i = add i32 %add37.i, 39
  %add12 = add i32 %add51.i, %add44.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or36.i, ptr %__data_loc_program, align 4
  %__data_loc_server = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call13, i32 0, i32 5
  %34 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or50.i, ptr %__data_loc_server, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %call13, i32 0, i32 1
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %38 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %address_strings.i, align 8
  %tobool22.not = icmp eq ptr %39, null
  %spec.select = select i1 %tobool22.not, ptr @.str.72, ptr %39
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and27 = and i32 %add19.i, 65535
  %add.ptr28 = getelementptr i8, ptr %call13, i32 %and27
  %40 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx8.i, align 4
  %tobool31.not = icmp eq ptr %41, null
  %cond37 = select i1 %tobool31.not, ptr @.str.72, ptr %41
  %call38 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef nonnull %cond37) #19
  %42 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %__data_loc_program, align 4
  %and40 = and i32 %43, 65535
  %add.ptr41 = getelementptr i8, ptr %call13, i32 %and40
  %call47 = call ptr @strcpy(ptr noundef %add.ptr41, ptr noundef nonnull %cond28.i) #19
  %44 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %__data_loc_server, align 4
  %and49 = and i32 %45, 65535
  %add.ptr50 = getelementptr i8, ptr %call13, i32 %and49
  %call56 = call ptr @strcpy(ptr noundef %add.ptr50, ptr noundef nonnull %cond42.i) #19
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_new_err(ptr noundef %__data, ptr noundef readonly %program, ptr noundef readonly %server, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i38 = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i38, ptr @.str.72, ptr %program
  %call.i39 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %tobool6.not.i = icmp eq ptr %server, null
  %cond10.i = select i1 %tobool6.not.i, ptr @.str.72, ptr %server
  %call11.i = tail call i32 @strlen(ptr noundef nonnull %cond10.i) #18
  %add12.i = add i32 %call11.i, 1
  %add19.i = add i32 %call.i39, 21
  %add = add i32 %add19.i, %add12.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl16.i = shl i32 %add12.i, 16
  %or18.i = or i32 %shl16.i, %add19.i
  %add.i = shl i32 %call.i39, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %__data_loc_server = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %call3, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or18.i, ptr %__data_loc_server, align 4
  %error8 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %error8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %error, ptr %error8, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and13 = and i32 %add19.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %call20 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond10.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_new_err(ptr noundef %__data, ptr noundef readonly %program, ptr noundef readonly %server, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %program
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %tobool6.not.i = icmp eq ptr %server, null
  %cond10.i = select i1 %tobool6.not.i, ptr @.str.72, ptr %server
  %call11.i = tail call i32 @strlen(ptr noundef nonnull %cond10.i) #18
  %add12.i = add i32 %call11.i, 1
  %add14.i = add i32 %call.i, 21
  %shl16.i = shl i32 %add12.i, 16
  %or18.i = or i32 %shl16.i, %add14.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i62.not = icmp eq ptr %15, null
  br i1 %tobool.not.i62.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add19.i = add i32 %call.i, 32
  %add12 = add i32 %add19.i, %add12.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %__data_loc_server = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %call13, i32 0, i32 3
  %28 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or18.i, ptr %__data_loc_server, align 4
  %error19 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %error19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %error, ptr %error19, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and25 = and i32 %add14.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %call32 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond10.i) #19
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_clnt_clone_err(ptr noundef %__data, ptr nocapture noundef readonly %clnt, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %3 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %client_id, align 4
  %error6 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %error6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %error, ptr %error6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_clnt_clone_err(ptr noundef %__data, ptr nocapture noundef readonly %clnt, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %27 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %client_id, align 4
  %error17 = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %error17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %error, ptr %error17, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_task_status(ptr noundef %__data, ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %11 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %tk_status, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %status, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_task_status(ptr noundef %__data, ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %35 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %tk_status, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %status, align 4
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_request(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 24
  %5 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cl_program.i, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool.not.i51 = icmp eq ptr %8, null
  %spec.select.i = select i1 %tobool.not.i51, ptr @.str.72, ptr %8
  %call.i52 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i52, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 32
  %call8.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.end.trace_event_get_offsets_rpc_request.exit_crit_edge, label %cond.true10.i

if.end.trace_event_get_offsets_rpc_request.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_request.exit

cond.true10.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call11.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %trace_event_get_offsets_rpc_request.exit

trace_event_get_offsets_rpc_request.exit:         ; preds = %cond.true10.i, %if.end.trace_event_get_offsets_rpc_request.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.72, %if.end.trace_event_get_offsets_rpc_request.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #18
  %add16.i = add i32 %call15.i, 1
  %add22.i = add i32 %call.i52, 33
  %add = add i32 %add22.i, %add16.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_rpc_request.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_rpc_request.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_rpc_request.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_rpc_request.exit
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add22.i
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call3, i32 0, i32 5
  %9 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call3, i32 0, i32 6
  %10 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or21.i, ptr %__data_loc_procname, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %11 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %12 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call3, i32 0, i32 1
  %13 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv, ptr %task_id, align 4
  %14 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tk_client.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call3, i32 0, i32 2
  %18 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %client_id, align 4
  %19 = load ptr, ptr %tk_client.i, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %19, i32 0, i32 9
  %20 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call3, i32 0, i32 3
  %22 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %version, align 4
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %23 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %tk_flags, align 4
  %async = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call3, i32 0, i32 4
  %25 = trunc i16 %24 to i8
  %26 = and i8 %25, 1
  %27 = ptrtoint ptr %async to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %async, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 32
  %28 = load ptr, ptr %tk_client.i, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %28, i32 0, i32 24
  %29 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cl_program, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %tobool12.not = icmp eq ptr %32, null
  %spec.select = select i1 %tobool12.not, ptr @.str.72, ptr %32
  %call16 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and18 = and i32 %add22.i, 65535
  %add.ptr19 = getelementptr i8, ptr %call3, i32 %and18
  %call20 = call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool21.not = icmp eq ptr %call20, null
  br i1 %tobool21.not, label %if.end5.cond.end25_crit_edge, label %cond.true22

if.end5.cond.end25_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end25

cond.true22:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %call23 = call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %cond.end25

cond.end25:                                       ; preds = %cond.true22, %if.end5.cond.end25_crit_edge
  %cond26 = phi ptr [ %call23, %cond.true22 ], [ @.str.72, %if.end5.cond.end25_crit_edge ]
  %call27 = call ptr @strcpy(ptr noundef %add.ptr19, ptr noundef %cond26) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end25, %trace_event_get_offsets_rpc_request.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_request(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %2 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %3, i32 0, i32 24
  %4 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cl_program.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool.not.i = icmp eq ptr %7, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %7
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 32
  %call8.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %entry.trace_event_get_offsets_rpc_request.exit_crit_edge, label %cond.true10.i

entry.trace_event_get_offsets_rpc_request.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_request.exit

cond.true10.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call11.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %trace_event_get_offsets_rpc_request.exit

trace_event_get_offsets_rpc_request.exit:         ; preds = %cond.true10.i, %entry.trace_event_get_offsets_rpc_request.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.72, %entry.trace_event_get_offsets_rpc_request.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #18
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call.i, 33
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %8 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %perf_events, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %18 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_rpc_request.exit.if.end_crit_edge

trace_event_get_offsets_rpc_request.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_rpc_request.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_rpc_request.exit
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %17, align 4
  %tobool.not.i75.not = icmp eq ptr %21, null
  br i1 %tobool.not.i75.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_rpc_request.exit.if.end_crit_edge
  %add22.i = add i32 %call.i, 44
  %add12 = add i32 %add22.i, %add16.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %22 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %__regs, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx.i, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  %29 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx2.i, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call13, i32 0, i32 5
  %33 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call13, i32 0, i32 6
  %34 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or21.i, ptr %__data_loc_procname, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %35 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %36 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call13, i32 0, i32 1
  %37 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv, ptr %task_id, align 4
  %38 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %tk_client.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call13, i32 0, i32 2
  %42 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %client_id, align 4
  %43 = load ptr, ptr %tk_client.i, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %43, i32 0, i32 9
  %44 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call13, i32 0, i32 3
  %46 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %version, align 4
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %47 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %tk_flags, align 4
  %async = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %call13, i32 0, i32 4
  %49 = trunc i16 %48 to i8
  %50 = and i8 %49, 1
  %51 = ptrtoint ptr %async to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %async, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 32
  %52 = load ptr, ptr %tk_client.i, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %52, i32 0, i32 24
  %53 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %cl_program, align 4
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 4
  %tobool24.not = icmp eq ptr %56, null
  %spec.select = select i1 %tobool24.not, ptr @.str.72, ptr %56
  %call28 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and30 = and i32 %add18.i, 65535
  %add.ptr31 = getelementptr i8, ptr %call13, i32 %and30
  %call32 = call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool33.not = icmp eq ptr %call32, null
  br i1 %tobool33.not, label %if.end16.cond.end37_crit_edge, label %cond.true34

if.end16.cond.end37_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end37

cond.true34:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %call35 = call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %cond.end37

cond.end37:                                       ; preds = %cond.true34, %if.end16.cond.end37_crit_edge
  %cond38 = phi ptr [ %call35, %cond.true34 ], [ @.str.72, %if.end16.cond.end37_crit_edge ]
  %call39 = call ptr @strcpy(ptr noundef %add.ptr31, ptr noundef %cond38) #19
  %57 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rctx, align 4
  %59 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %58, ptr noundef %__data, i64 noundef 1, ptr noundef %60, ptr noundef %17, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end37, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_task_running(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr noundef %action) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client, align 4
  %tobool6.not = icmp eq ptr %4, null
  br i1 %tobool6.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %6, %cond.true ], [ -1, %if.end5.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %cond, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %8 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %9 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv, ptr %task_id, align 4
  %action8 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %action8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %action, ptr %action8, align 4
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %12 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tk_runstate, align 4
  %runstate = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %runstate to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %runstate, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %15 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %tk_status, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %status, align 4
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %18 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %tk_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %19, ptr %flags, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_task_running(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr noundef %action) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %27 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tk_client, align 4
  %tobool17.not = icmp eq ptr %28, null
  br i1 %tobool17.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %30, %cond.true ], [ -1, %if.end16.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %cond, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %32 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %33 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv, ptr %task_id, align 4
  %action19 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %action19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %action, ptr %action19, align 4
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %36 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %tk_runstate, align 4
  %runstate = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %runstate to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %runstate, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %39 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %tk_status, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %status, align 4
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %42 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %tk_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %43, ptr %flags, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_task_queued(ptr noundef %__data, ptr noundef %task, ptr noundef readonly %q) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i.i = icmp eq ptr %q, null
  br i1 %tobool.not.i.i, label %if.end.trace_event_get_offsets_rpc_task_queued.exit_crit_edge, label %land.lhs.true.i5.i

if.end.trace_event_get_offsets_rpc_task_queued.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_task_queued.exit

land.lhs.true.i5.i:                               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %name.i2.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 7
  %3 = ptrtoint ptr %name.i2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name.i2.i, align 4
  %tobool1.not.i3.i = icmp eq ptr %4, null
  %spec.select.i4.i = select i1 %tobool1.not.i3.i, ptr @.str.123, ptr %4
  br label %trace_event_get_offsets_rpc_task_queued.exit

trace_event_get_offsets_rpc_task_queued.exit:     ; preds = %land.lhs.true.i5.i, %if.end.trace_event_get_offsets_rpc_task_queued.exit_crit_edge
  %cond.i6.i = phi ptr [ %spec.select.i4.i, %land.lhs.true.i5.i ], [ @.str.123, %if.end.trace_event_get_offsets_rpc_task_queued.exit_crit_edge ]
  %call3.i = tail call i32 @strlen(ptr noundef %cond.i6.i) #18
  %add = add i32 %call3.i, 37
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_rpc_task_queued.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_rpc_task_queued.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_rpc_task_queued.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_rpc_task_queued.exit
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65572
  %__data_loc_q_name = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 7
  %5 = ptrtoint ptr %__data_loc_q_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_q_name, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %tobool6.not = icmp eq ptr %7, null
  br i1 %tobool6.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %9, %cond.true ], [ -1, %if.end5.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %cond, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %11 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %12 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 1
  %13 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv, ptr %task_id, align 4
  %tk_timeout.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %14 = ptrtoint ptr %tk_timeout.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %tk_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.not.i = icmp eq i32 %15, 0
  br i1 %cmp.not.i, label %cond.end.if.end4.i_crit_edge, label %if.then.i

cond.end.if.end4.i_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then.i:                                        ; preds = %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %16 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %16, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp1.i = icmp slt i32 %sub.i, 0
  %sub3.i = sub i32 %15, %16
  br i1 %cmp1.i, label %if.then.i.rpc_task_timeout.exit_crit_edge, label %if.then.i.if.end4.i_crit_edge

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then.i.rpc_task_timeout.exit_crit_edge:        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_task_timeout.exit

if.end4.i:                                        ; preds = %if.then.i.if.end4.i_crit_edge, %cond.end.if.end4.i_crit_edge
  br label %rpc_task_timeout.exit

rpc_task_timeout.exit:                            ; preds = %if.end4.i, %if.then.i.rpc_task_timeout.exit_crit_edge
  %retval.1.i = phi i32 [ 0, %if.end4.i ], [ %sub3.i, %if.then.i.rpc_task_timeout.exit_crit_edge ]
  %timeout = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 3
  %17 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %retval.1.i, ptr %timeout, align 4
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %18 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tk_runstate, align 4
  %runstate = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 4
  %20 = ptrtoint ptr %runstate to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %runstate, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %21 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tk_status, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 5
  %23 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %status, align 4
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %24 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %tk_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call3, i32 0, i32 6
  %26 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %25, ptr %flags, align 4
  %27 = ptrtoint ptr %__data_loc_q_name to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %__data_loc_q_name, align 4
  %and = and i32 %28, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  br i1 %tobool.not.i.i, label %rpc_task_timeout.exit.cond.end15_crit_edge, label %land.lhs.true.i46

rpc_task_timeout.exit.cond.end15_crit_edge:       ; preds = %rpc_task_timeout.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end15

land.lhs.true.i46:                                ; preds = %rpc_task_timeout.exit
  call void @__sanitizer_cov_trace_pc() #17
  %name.i43 = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 7
  %29 = ptrtoint ptr %name.i43 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %name.i43, align 4
  %tobool1.not.i44 = icmp eq ptr %30, null
  %spec.select.i45 = select i1 %tobool1.not.i44, ptr @.str.123, ptr %30
  br label %cond.end15

cond.end15:                                       ; preds = %land.lhs.true.i46, %rpc_task_timeout.exit.cond.end15_crit_edge
  %cond.i47 = phi ptr [ %spec.select.i45, %land.lhs.true.i46 ], [ @.str.123, %rpc_task_timeout.exit.cond.end15_crit_edge ]
  %call17 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef %cond.i47) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end15, %trace_event_get_offsets_rpc_task_queued.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_task_queued(ptr noundef %__data, ptr noundef %task, ptr noundef readonly %q) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i.i = icmp eq ptr %q, null
  br i1 %tobool.not.i.i, label %entry.trace_event_get_offsets_rpc_task_queued.exit_crit_edge, label %land.lhs.true.i5.i

entry.trace_event_get_offsets_rpc_task_queued.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_task_queued.exit

land.lhs.true.i5.i:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %name.i2.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 7
  %2 = ptrtoint ptr %name.i2.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name.i2.i, align 4
  %tobool1.not.i3.i = icmp eq ptr %3, null
  %spec.select.i4.i = select i1 %tobool1.not.i3.i, ptr @.str.123, ptr %3
  br label %trace_event_get_offsets_rpc_task_queued.exit

trace_event_get_offsets_rpc_task_queued.exit:     ; preds = %land.lhs.true.i5.i, %entry.trace_event_get_offsets_rpc_task_queued.exit_crit_edge
  %cond.i6.i = phi ptr [ %spec.select.i4.i, %land.lhs.true.i5.i ], [ @.str.123, %entry.trace_event_get_offsets_rpc_task_queued.exit_crit_edge ]
  %call3.i = tail call i32 @strlen(ptr noundef %cond.i6.i) #18
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65572
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_rpc_task_queued.exit.if.end_crit_edge

trace_event_get_offsets_rpc_task_queued.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_rpc_task_queued.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_rpc_task_queued.exit
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_rpc_task_queued.exit.if.end_crit_edge
  %add12 = add i32 %call3.i, 48
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_q_name = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 7
  %29 = ptrtoint ptr %__data_loc_q_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_q_name, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %tobool17.not = icmp eq ptr %31, null
  br i1 %tobool17.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %33, %cond.true ], [ -1, %if.end16.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %cond, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %35 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %36 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 1
  %37 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv, ptr %task_id, align 4
  %tk_timeout.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %38 = ptrtoint ptr %tk_timeout.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %tk_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp.not.i = icmp eq i32 %39, 0
  br i1 %cmp.not.i, label %cond.end.if.end4.i_crit_edge, label %if.then.i

cond.end.if.end4.i_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then.i:                                        ; preds = %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %40 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %40, %39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp1.i = icmp slt i32 %sub.i, 0
  %sub3.i = sub i32 %39, %40
  br i1 %cmp1.i, label %if.then.i.rpc_task_timeout.exit_crit_edge, label %if.then.i.if.end4.i_crit_edge

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then.i.rpc_task_timeout.exit_crit_edge:        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_task_timeout.exit

if.end4.i:                                        ; preds = %if.then.i.if.end4.i_crit_edge, %cond.end.if.end4.i_crit_edge
  br label %rpc_task_timeout.exit

rpc_task_timeout.exit:                            ; preds = %if.end4.i, %if.then.i.rpc_task_timeout.exit_crit_edge
  %retval.1.i = phi i32 [ 0, %if.end4.i ], [ %sub3.i, %if.then.i.rpc_task_timeout.exit_crit_edge ]
  %timeout = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 3
  %41 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %retval.1.i, ptr %timeout, align 4
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %42 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %tk_runstate, align 4
  %runstate = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 4
  %44 = ptrtoint ptr %runstate to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %runstate, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %45 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %tk_status, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 5
  %47 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %status, align 4
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %48 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %tk_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %call13, i32 0, i32 6
  %50 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %49, ptr %flags, align 4
  %51 = ptrtoint ptr %__data_loc_q_name to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %__data_loc_q_name, align 4
  %and21 = and i32 %52, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and21
  br i1 %tobool.not.i.i, label %rpc_task_timeout.exit.cond.end27_crit_edge, label %land.lhs.true.i70

rpc_task_timeout.exit.cond.end27_crit_edge:       ; preds = %rpc_task_timeout.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end27

land.lhs.true.i70:                                ; preds = %rpc_task_timeout.exit
  call void @__sanitizer_cov_trace_pc() #17
  %name.i67 = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 7
  %53 = ptrtoint ptr %name.i67 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %name.i67, align 4
  %tobool1.not.i68 = icmp eq ptr %54, null
  %spec.select.i69 = select i1 %tobool1.not.i68, ptr @.str.123, ptr %54
  br label %cond.end27

cond.end27:                                       ; preds = %land.lhs.true.i70, %rpc_task_timeout.exit.cond.end27_crit_edge
  %cond.i71 = phi ptr [ %spec.select.i69, %land.lhs.true.i70 ], [ @.str.123, %rpc_task_timeout.exit.cond.end27_crit_edge ]
  %call29 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef %cond.i71) #19
  %55 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %rctx, align 4
  %57 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %56, ptr noundef %__data, i64 noundef 1, ptr noundef %58, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end27, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_failure(ptr noundef %__data, ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_failure(ptr noundef %__data, ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_reply_event(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 24
  %5 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cl_program.i, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool.not.i67 = icmp eq ptr %8, null
  %spec.select.i = select i1 %tobool.not.i67, ptr @.str.72, ptr %8
  %call.i68 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = add i32 %call.i68, 1
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 36
  %call8.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.end.trace_event_get_offsets_rpc_reply_event.exit_crit_edge, label %cond.true10.i

if.end.trace_event_get_offsets_rpc_reply_event.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_reply_event.exit

cond.true10.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call11.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %trace_event_get_offsets_rpc_reply_event.exit

trace_event_get_offsets_rpc_reply_event.exit:     ; preds = %cond.true10.i, %if.end.trace_event_get_offsets_rpc_reply_event.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.72, %if.end.trace_event_get_offsets_rpc_reply_event.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #18
  %add16.i = add i32 %call15.i, 1
  %tk_xprt.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %9 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_xprt.i, align 8
  %servername.i = getelementptr inbounds %struct.rpc_xprt, ptr %10, i32 0, i32 50
  %11 = ptrtoint ptr %servername.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %servername.i, align 4
  %tobool23.not.i = icmp eq ptr %12, null
  %spec.select61.i = select i1 %tobool23.not.i, ptr @.str.72, ptr %12
  %add22.i = add i32 %add16.i, %add.i
  %call30.i = tail call i32 @strlen(ptr noundef nonnull %spec.select61.i) #18
  %add31.i = add i32 %call30.i, 1
  %add38.i = add i32 %add22.i, 36
  %add = add i32 %add38.i, %add31.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_rpc_reply_event.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_rpc_reply_event.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_rpc_reply_event.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_rpc_reply_event.exit
  %shl35.i = shl i32 %add31.i, 16
  %or37.i = or i32 %shl35.i, %add38.i
  %shl19.i = shl i32 %add16.i, 16
  %add18.i = add i32 %call.i68, 37
  %or21.i = or i32 %shl19.i, %add18.i
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or21.i, ptr %__data_loc_procname, align 4
  %__data_loc_servername = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 7
  %15 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %or37.i, ptr %__data_loc_servername, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %16 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %17 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 1
  %18 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv, ptr %task_id, align 4
  %19 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tk_client.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 2
  %23 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %client_id, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %24 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tk_rqstp, align 8
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %25, i32 0, i32 5
  %26 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 3
  %28 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 36
  %29 = load ptr, ptr %tk_client.i, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %29, i32 0, i32 24
  %30 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cl_program, align 4
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %tobool8.not = icmp eq ptr %33, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %33
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %34 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tk_client.i, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %35, i32 0, i32 9
  %36 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call3, i32 0, i32 5
  %38 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %version, align 4
  %and15 = and i32 %add18.i, 65535
  %add.ptr16 = getelementptr i8, ptr %call3, i32 %and15
  %call17 = call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.end5.cond.end22_crit_edge, label %cond.true19

if.end5.cond.end22_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end22

cond.true19:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %call20 = call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %cond.end22

cond.end22:                                       ; preds = %cond.true19, %if.end5.cond.end22_crit_edge
  %cond23 = phi ptr [ %call20, %cond.true19 ], [ @.str.72, %if.end5.cond.end22_crit_edge ]
  %call24 = call ptr @strcpy(ptr noundef %add.ptr16, ptr noundef %cond23) #19
  %39 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %__data_loc_servername, align 4
  %and26 = and i32 %40, 65535
  %add.ptr27 = getelementptr i8, ptr %call3, i32 %and26
  %41 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tk_xprt.i, align 8
  %servername28 = getelementptr inbounds %struct.rpc_xprt, ptr %42, i32 0, i32 50
  %43 = ptrtoint ptr %servername28 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %servername28, align 4
  %tobool29.not = icmp eq ptr %44, null
  %spec.select66 = select i1 %tobool29.not, ptr @.str.72, ptr %44
  %call36 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %spec.select66) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end22, %trace_event_get_offsets_rpc_reply_event.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_reply_event(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %2 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %3, i32 0, i32 24
  %4 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cl_program.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool.not.i = icmp eq ptr %7, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %7
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = add i32 %call.i, 1
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 36
  %call8.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %entry.trace_event_get_offsets_rpc_reply_event.exit_crit_edge, label %cond.true10.i

entry.trace_event_get_offsets_rpc_reply_event.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_reply_event.exit

cond.true10.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call11.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %trace_event_get_offsets_rpc_reply_event.exit

trace_event_get_offsets_rpc_reply_event.exit:     ; preds = %cond.true10.i, %entry.trace_event_get_offsets_rpc_reply_event.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.72, %entry.trace_event_get_offsets_rpc_reply_event.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #18
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call.i, 37
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %tk_xprt.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %8 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tk_xprt.i, align 8
  %servername.i = getelementptr inbounds %struct.rpc_xprt, ptr %9, i32 0, i32 50
  %10 = ptrtoint ptr %servername.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %servername.i, align 4
  %tobool23.not.i = icmp eq ptr %11, null
  %spec.select61.i = select i1 %tobool23.not.i, ptr @.str.72, ptr %11
  %add22.i = add i32 %add16.i, %add.i
  %call30.i = tail call i32 @strlen(ptr noundef nonnull %spec.select61.i) #18
  %add31.i = add i32 %call30.i, 1
  %add33.i = add i32 %add22.i, 36
  %shl35.i = shl i32 %add31.i, 16
  %or37.i = or i32 %shl35.i, %add33.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %12 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %perf_events, align 4
  %14 = ptrtoint ptr %13 to i32
  %15 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %18
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx, align 4
  %add = add i32 %20, %14
  %21 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %22 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %23, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_rpc_reply_event.exit.if.end_crit_edge

trace_event_get_offsets_rpc_reply_event.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_rpc_reply_event.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_rpc_reply_event.exit
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %21, align 4
  %tobool.not.i91.not = icmp eq ptr %25, null
  br i1 %tobool.not.i91.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_rpc_reply_event.exit.if.end_crit_edge
  %add38.i = add i32 %add22.i, 47
  %add12 = add i32 %add38.i, %add31.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %26 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %__regs, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %arrayidx.i, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %32 = ptrtoint ptr %31 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  %33 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx2.i, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  %35 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  %36 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %or21.i, ptr %__data_loc_procname, align 4
  %__data_loc_servername = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 7
  %39 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %or37.i, ptr %__data_loc_servername, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %40 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %41 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 1
  %42 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %conv, ptr %task_id, align 4
  %43 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tk_client.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 2
  %47 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %client_id, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %48 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %tk_rqstp, align 8
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %49, i32 0, i32 5
  %50 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 3
  %52 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 36
  %53 = load ptr, ptr %tk_client.i, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %53, i32 0, i32 24
  %54 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %cl_program, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %55, align 4
  %tobool20.not = icmp eq ptr %57, null
  %spec.select = select i1 %tobool20.not, ptr @.str.72, ptr %57
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %58 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %tk_client.i, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %59, i32 0, i32 9
  %60 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %call13, i32 0, i32 5
  %62 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %version, align 4
  %and27 = and i32 %add18.i, 65535
  %add.ptr28 = getelementptr i8, ptr %call13, i32 %and27
  %call29 = call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool30.not = icmp eq ptr %call29, null
  br i1 %tobool30.not, label %if.end16.cond.end34_crit_edge, label %cond.true31

if.end16.cond.end34_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end34

cond.true31:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %call32 = call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %cond.end34

cond.end34:                                       ; preds = %cond.true31, %if.end16.cond.end34_crit_edge
  %cond35 = phi ptr [ %call32, %cond.true31 ], [ @.str.72, %if.end16.cond.end34_crit_edge ]
  %call36 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef %cond35) #19
  %63 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %__data_loc_servername, align 4
  %and38 = and i32 %64, 65535
  %add.ptr39 = getelementptr i8, ptr %call13, i32 %and38
  %65 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %tk_xprt.i, align 8
  %servername40 = getelementptr inbounds %struct.rpc_xprt, ptr %66, i32 0, i32 50
  %67 = ptrtoint ptr %servername40 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %servername40, align 4
  %tobool41.not = icmp eq ptr %68, null
  %spec.select90 = select i1 %tobool41.not, ptr @.str.72, ptr %68
  %call48 = call ptr @strcpy(ptr noundef %add.ptr39, ptr noundef nonnull %spec.select90) #19
  %69 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %rctx, align 4
  %71 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %70, ptr noundef %__data, i64 noundef 1, ptr noundef %72, ptr noundef %21, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end34, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_buf_alloc(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %11 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tk_rqstp, align 8
  %rq_callsize = getelementptr inbounds %struct.rpc_rqst, ptr %12, i32 0, i32 15
  %13 = ptrtoint ptr %rq_callsize to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rq_callsize, align 4
  %callsize = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %callsize to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %callsize, align 4
  %16 = load ptr, ptr %tk_rqstp, align 8
  %rq_rcvsize = getelementptr inbounds %struct.rpc_rqst, ptr %16, i32 0, i32 17
  %17 = ptrtoint ptr %rq_rcvsize to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rq_rcvsize, align 4
  %recvsize = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %recvsize to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %recvsize, align 4
  %status7 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %status7 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %status, ptr %status7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_buf_alloc(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %35 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %tk_rqstp, align 8
  %rq_callsize = getelementptr inbounds %struct.rpc_rqst, ptr %36, i32 0, i32 15
  %37 = ptrtoint ptr %rq_callsize to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rq_callsize, align 4
  %callsize = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %callsize to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %callsize, align 4
  %40 = load ptr, ptr %tk_rqstp, align 8
  %rq_rcvsize = getelementptr inbounds %struct.rpc_rqst, ptr %40, i32 0, i32 17
  %41 = ptrtoint ptr %rq_rcvsize to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rq_rcvsize, align 4
  %recvsize = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %recvsize to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %recvsize, align 4
  %status18 = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %status18 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %status, ptr %status18, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_call_rpcerror(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %tk_status, i32 noundef %rpc_status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %8 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %9 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv, ptr %task_id, align 4
  %tk_status6 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %tk_status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %tk_status, ptr %tk_status6, align 4
  %rpc_status7 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %rpc_status7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %rpc_status, ptr %rpc_status7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_call_rpcerror(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %tk_status, i32 noundef %rpc_status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %27 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %32 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %33 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv, ptr %task_id, align 4
  %tk_status17 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %tk_status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %tk_status, ptr %tk_status17, align 4
  %rpc_status18 = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %rpc_status18 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %rpc_status, ptr %rpc_status18, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_stats_latency(ptr noundef %__data, ptr noundef %task, i64 noundef %backlog, i64 noundef %rtt, i64 noundef %execute) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 24
  %5 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cl_program.i, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool.not.i63 = icmp eq ptr %8, null
  %spec.select.i = select i1 %tobool.not.i63, ptr @.str.72, ptr %8
  %call.i64 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i64, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 44
  %call8.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.end.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge, label %cond.true10.i

if.end.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_stats_latency.exit

cond.true10.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call11.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %trace_event_get_offsets_rpc_stats_latency.exit

trace_event_get_offsets_rpc_stats_latency.exit:   ; preds = %cond.true10.i, %if.end.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.72, %if.end.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #18
  %add16.i = add i32 %call15.i, 1
  %add22.i = add i32 %call.i64, 45
  %add = add i32 %add22.i, %add16.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_rpc_stats_latency.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_rpc_stats_latency.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_rpc_stats_latency.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_rpc_stats_latency.exit
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add22.i
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 5
  %9 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 6
  %10 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or21.i, ptr %__data_loc_procname, align 4
  %11 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tk_client.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %16 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %17 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 1
  %18 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv, ptr %task_id, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %19 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tk_rqstp, align 8
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %20, i32 0, i32 5
  %21 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 3
  %23 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %xid, align 4
  %24 = load ptr, ptr %tk_client.i, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %24, i32 0, i32 9
  %25 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 4
  %27 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %version, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 44
  %28 = load ptr, ptr %tk_client.i, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %28, i32 0, i32 24
  %29 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cl_program, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %tobool9.not = icmp eq ptr %32, null
  %spec.select = select i1 %tobool9.not, ptr @.str.72, ptr %32
  %call13 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and15 = and i32 %add22.i, 65535
  %add.ptr16 = getelementptr i8, ptr %call3, i32 %and15
  %call17 = call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.end5.cond.end22_crit_edge, label %cond.true19

if.end5.cond.end22_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end22

cond.true19:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %call20 = call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %cond.end22

cond.end22:                                       ; preds = %cond.true19, %if.end5.cond.end22_crit_edge
  %cond23 = phi ptr [ %call20, %cond.true19 ], [ @.str.72, %if.end5.cond.end22_crit_edge ]
  %call24 = call ptr @strcpy(ptr noundef %add.ptr16, ptr noundef %cond23) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %backlog)
  %cmp8.i.i = icmp slt i64 %backlog, 0
  %33 = call i64 @llvm.abs.i64(i64 %backlog, i1 false) #15
  %34 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %33, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i = extractvalue { i64, i32 } %34, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %34, 1
  %35 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %33, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #20, !srcloc !1887
  %asmresult10.i.i.i = extractvalue { i64, i32 } %35, 0
  %div1811.i.i = lshr i64 %asmresult10.i.i.i, 9
  %sub210.i.i = sub nsw i64 0, %div1811.i.i
  %cond213.i.i = select i1 %cmp8.i.i, i64 %sub210.i.i, i64 %div1811.i.i
  %conv26 = trunc i64 %cond213.i.i to i32
  %backlog27 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 7
  %36 = ptrtoint ptr %backlog27 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %conv26, ptr %backlog27, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %rtt)
  %cmp8.i.i65 = icmp slt i64 %rtt, 0
  %37 = call i64 @llvm.abs.i64(i64 %rtt, i1 false) #15
  %38 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %37, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i66 = extractvalue { i64, i32 } %38, 0
  %asmresult4.i.i.i67 = extractvalue { i64, i32 } %38, 1
  %39 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %37, i64 %asmresult.i.i.i66, i32 %asmresult4.i.i.i67) #20, !srcloc !1887
  %asmresult10.i.i.i68 = extractvalue { i64, i32 } %39, 0
  %div1811.i.i69 = lshr i64 %asmresult10.i.i.i68, 9
  %sub210.i.i70 = sub nsw i64 0, %div1811.i.i69
  %cond213.i.i71 = select i1 %cmp8.i.i65, i64 %sub210.i.i70, i64 %div1811.i.i69
  %conv29 = trunc i64 %cond213.i.i71 to i32
  %rtt30 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 8
  %40 = ptrtoint ptr %rtt30 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %conv29, ptr %rtt30, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %execute)
  %cmp8.i.i72 = icmp slt i64 %execute, 0
  %41 = call i64 @llvm.abs.i64(i64 %execute, i1 false) #15
  %42 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %41, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i73 = extractvalue { i64, i32 } %42, 0
  %asmresult4.i.i.i74 = extractvalue { i64, i32 } %42, 1
  %43 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %41, i64 %asmresult.i.i.i73, i32 %asmresult4.i.i.i74) #20, !srcloc !1887
  %asmresult10.i.i.i75 = extractvalue { i64, i32 } %43, 0
  %div1811.i.i76 = lshr i64 %asmresult10.i.i.i75, 9
  %sub210.i.i77 = sub nsw i64 0, %div1811.i.i76
  %cond213.i.i78 = select i1 %cmp8.i.i72, i64 %sub210.i.i77, i64 %div1811.i.i76
  %conv32 = trunc i64 %cond213.i.i78 to i32
  %execute33 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call3, i32 0, i32 9
  %44 = ptrtoint ptr %execute33 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv32, ptr %execute33, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end22, %trace_event_get_offsets_rpc_stats_latency.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_stats_latency(ptr noundef %__data, ptr noundef %task, i64 noundef %backlog, i64 noundef %rtt, i64 noundef %execute) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %2 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %3, i32 0, i32 24
  %4 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cl_program.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool.not.i = icmp eq ptr %7, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %7
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 44
  %call8.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %entry.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge, label %cond.true10.i

entry.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_stats_latency.exit

cond.true10.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call11.i = tail call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %trace_event_get_offsets_rpc_stats_latency.exit

trace_event_get_offsets_rpc_stats_latency.exit:   ; preds = %cond.true10.i, %entry.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.72, %entry.trace_event_get_offsets_rpc_stats_latency.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #18
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call.i, 45
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %8 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %perf_events, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %18 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_rpc_stats_latency.exit.if.end_crit_edge

trace_event_get_offsets_rpc_stats_latency.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_rpc_stats_latency.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_rpc_stats_latency.exit
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %17, align 4
  %tobool.not.i87.not = icmp eq ptr %21, null
  br i1 %tobool.not.i87.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_rpc_stats_latency.exit.if.end_crit_edge
  %add22.i = add i32 %call.i, 56
  %add12 = add i32 %add22.i, %add16.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %22 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %__regs, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #15
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx.i, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %28 = ptrtoint ptr %27 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  %29 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx2.i, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 5
  %33 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 6
  %34 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or21.i, ptr %__data_loc_procname, align 4
  %35 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %tk_client.i, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %client_id, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %40 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %41 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 1
  %42 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %conv, ptr %task_id, align 4
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %43 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tk_rqstp, align 8
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %44, i32 0, i32 5
  %45 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 3
  %47 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %xid, align 4
  %48 = load ptr, ptr %tk_client.i, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %48, i32 0, i32 9
  %49 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 4
  %51 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %version, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 44
  %52 = load ptr, ptr %tk_client.i, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %52, i32 0, i32 24
  %53 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %cl_program, align 4
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 4
  %tobool21.not = icmp eq ptr %56, null
  %spec.select = select i1 %tobool21.not, ptr @.str.72, ptr %56
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and27 = and i32 %add18.i, 65535
  %add.ptr28 = getelementptr i8, ptr %call13, i32 %and27
  %call29 = call ptr @rpc_proc_name(ptr noundef %task) #15
  %tobool30.not = icmp eq ptr %call29, null
  br i1 %tobool30.not, label %if.end16.cond.end34_crit_edge, label %cond.true31

if.end16.cond.end34_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end34

cond.true31:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %call32 = call ptr @rpc_proc_name(ptr noundef %task) #15
  br label %cond.end34

cond.end34:                                       ; preds = %cond.true31, %if.end16.cond.end34_crit_edge
  %cond35 = phi ptr [ %call32, %cond.true31 ], [ @.str.72, %if.end16.cond.end34_crit_edge ]
  %call36 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef %cond35) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %backlog)
  %cmp8.i.i = icmp slt i64 %backlog, 0
  %57 = call i64 @llvm.abs.i64(i64 %backlog, i1 false) #15
  %58 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %57, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i = extractvalue { i64, i32 } %58, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %58, 1
  %59 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %57, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #20, !srcloc !1887
  %asmresult10.i.i.i = extractvalue { i64, i32 } %59, 0
  %div1811.i.i = lshr i64 %asmresult10.i.i.i, 9
  %sub210.i.i = sub nsw i64 0, %div1811.i.i
  %cond213.i.i = select i1 %cmp8.i.i, i64 %sub210.i.i, i64 %div1811.i.i
  %conv38 = trunc i64 %cond213.i.i to i32
  %backlog39 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 7
  %60 = ptrtoint ptr %backlog39 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %conv38, ptr %backlog39, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %rtt)
  %cmp8.i.i88 = icmp slt i64 %rtt, 0
  %61 = call i64 @llvm.abs.i64(i64 %rtt, i1 false) #15
  %62 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %61, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i89 = extractvalue { i64, i32 } %62, 0
  %asmresult4.i.i.i90 = extractvalue { i64, i32 } %62, 1
  %63 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %61, i64 %asmresult.i.i.i89, i32 %asmresult4.i.i.i90) #20, !srcloc !1887
  %asmresult10.i.i.i91 = extractvalue { i64, i32 } %63, 0
  %div1811.i.i92 = lshr i64 %asmresult10.i.i.i91, 9
  %sub210.i.i93 = sub nsw i64 0, %div1811.i.i92
  %cond213.i.i94 = select i1 %cmp8.i.i88, i64 %sub210.i.i93, i64 %div1811.i.i92
  %conv41 = trunc i64 %cond213.i.i94 to i32
  %rtt42 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 8
  %64 = ptrtoint ptr %rtt42 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %conv41, ptr %rtt42, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %execute)
  %cmp8.i.i95 = icmp slt i64 %execute, 0
  %65 = call i64 @llvm.abs.i64(i64 %execute, i1 false) #15
  %66 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %65, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i96 = extractvalue { i64, i32 } %66, 0
  %asmresult4.i.i.i97 = extractvalue { i64, i32 } %66, 1
  %67 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %65, i64 %asmresult.i.i.i96, i32 %asmresult4.i.i.i97) #20, !srcloc !1887
  %asmresult10.i.i.i98 = extractvalue { i64, i32 } %67, 0
  %div1811.i.i99 = lshr i64 %asmresult10.i.i.i98, 9
  %sub210.i.i100 = sub nsw i64 0, %div1811.i.i99
  %cond213.i.i101 = select i1 %cmp8.i.i95, i64 %sub210.i.i100, i64 %div1811.i.i99
  %conv44 = trunc i64 %cond213.i.i101 to i32
  %execute45 = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %call13, i32 0, i32 9
  %68 = ptrtoint ptr %execute45 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %conv44, ptr %execute45, align 4
  %69 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %rctx, align 4
  %71 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %70, ptr noundef %__data, i64 noundef 1, ptr noundef %72, ptr noundef %17, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end34, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xdr_overflow(ptr noundef %__data, ptr nocapture noundef readonly %xdr, i32 noundef %requested) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rqst.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 7
  %3 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rqst.i, align 4
  %tobool.not.i107 = icmp eq ptr %4, null
  br i1 %tobool.not.i107, label %if.end.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge, label %cond.true.i

if.end.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_xdr_overflow.exit

cond.true.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task.i = getelementptr inbounds %struct.rpc_rqst, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rq_task.i, align 4
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %8, i32 0, i32 24
  %9 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cl_program.i, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %tobool3.not.i = icmp eq ptr %12, null
  %spec.select121 = select i1 %tobool3.not.i, ptr @.str.72, ptr %12
  %call.i108111 = tail call i32 @strlen(ptr noundef nonnull %spec.select121) #18
  %tk_msg.i = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 10
  %13 = ptrtoint ptr %tk_msg.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tk_msg.i, align 4
  %p_name.i = getelementptr inbounds %struct.rpc_procinfo, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %p_name.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %p_name.i, align 4
  %tobool25.not.i = icmp eq ptr %16, null
  %spec.select122 = select i1 %tobool25.not.i, ptr @.str.72, ptr %16
  br label %trace_event_get_offsets_rpc_xdr_overflow.exit

trace_event_get_offsets_rpc_xdr_overflow.exit:    ; preds = %cond.true.i, %if.end.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge
  %call.i108116 = phi i32 [ %call.i108111, %cond.true.i ], [ 7, %if.end.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge ]
  %cond41.i = phi ptr [ %spec.select122, %cond.true.i ], [ @.str.123, %if.end.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge ]
  %call42.i = tail call i32 @strlen(ptr noundef nonnull %cond41.i) #18
  %add43.i = add i32 %call42.i, 1
  %add45.i = add i32 %call.i108116, 65
  %add = add i32 %add45.i, %add43.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_rpc_xdr_overflow.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_rpc_xdr_overflow.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_rpc_xdr_overflow.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_rpc_xdr_overflow.exit
  %shl46.i = shl i32 %add43.i, 16
  %or48.i = or i32 %shl46.i, %add45.i
  %add.i118 = shl i32 %call.i108116, 16
  %or.i120 = add i32 %add.i118, 65600
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 13
  %17 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or.i120, ptr %__data_loc_progname, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 14
  %18 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %or48.i, ptr %__data_loc_procedure, align 4
  %19 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rqst.i, align 4
  %tobool6.not = icmp eq ptr %20, null
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %22, i32 0, i32 22
  %23 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %24 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 1
  %25 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %22, i32 0, i32 13
  %26 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 2
  %30 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 64
  %31 = load ptr, ptr %tk_client, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 24
  %32 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %cl_program, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 4
  %tobool11.not = icmp eq ptr %35, null
  %spec.select = select i1 %tobool11.not, ptr @.str.72, ptr %35
  %call15 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %36 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tk_client, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %37, i32 0, i32 9
  %38 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 3
  %40 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %version, align 4
  %41 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %__data_loc_procedure, align 4
  %and18 = and i32 %42, 65535
  %add.ptr19 = getelementptr i8, ptr %call3, i32 %and18
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %22, i32 0, i32 10
  %43 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tk_msg, align 4
  %p_name = getelementptr inbounds %struct.rpc_procinfo, ptr %44, i32 0, i32 7
  %45 = ptrtoint ptr %p_name to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %p_name, align 4
  %tobool20.not = icmp eq ptr %46, null
  %cond27 = select i1 %tobool20.not, ptr @.str.72, ptr %46
  %call28 = call ptr @strcpy(ptr noundef %add.ptr19, ptr noundef nonnull %cond27) #19
  br label %if.end40

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %task_id29 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 1
  %47 = ptrtoint ptr %task_id29 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 -1, ptr %task_id29, align 4
  %client_id30 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 2
  %48 = ptrtoint ptr %client_id30 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 -1, ptr %client_id30, align 4
  %add.ptr33 = getelementptr i8, ptr %call3, i32 64
  %49 = ptrtoint ptr %add.ptr33 to i32
  call void @__asan_storeN_noabort(i32 %49, i32 8)
  store i64 8461818871936413184, ptr %add.ptr33, align 1
  %version35 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 3
  %50 = ptrtoint ptr %version35 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %version35, align 4
  %and37 = and i32 %add45.i, 65535
  %add.ptr38 = getelementptr i8, ptr %call3, i32 %and37
  %51 = ptrtoint ptr %add.ptr38 to i32
  call void @__asan_storeN_noabort(i32 %51, i32 8)
  store i64 8461818871936413184, ptr %add.ptr38, align 1
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then7
  %requested41 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 4
  %52 = ptrtoint ptr %requested41 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %requested, ptr %requested41, align 4
  %end = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 2
  %53 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %end, align 4
  %end42 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 5
  %55 = ptrtoint ptr %end42 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %54, ptr %end42, align 4
  %56 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %xdr, align 4
  %p43 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 6
  %58 = ptrtoint ptr %p43 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %57, ptr %p43, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %59 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %buf, align 4
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %60, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 7
  %63 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %62, ptr %head_base, align 4
  %64 = load ptr, ptr %buf, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 8
  %67 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %head_len, align 4
  %68 = load ptr, ptr %buf, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %68, i32 0, i32 5
  %69 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %page_len, align 4
  %page_len48 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 11
  %71 = ptrtoint ptr %page_len48 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %page_len48, align 4
  %72 = load ptr, ptr %buf, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 9
  %75 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %74, ptr %tail_base, align 4
  %76 = load ptr, ptr %buf, align 4
  %iov_len55 = getelementptr inbounds %struct.xdr_buf, ptr %76, i32 0, i32 1, i32 0, i32 1
  %77 = ptrtoint ptr %iov_len55 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %iov_len55, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 10
  %79 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %tail_len, align 4
  %80 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %80, i32 0, i32 8
  %81 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %len, align 4
  %len57 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call3, i32 0, i32 12
  %83 = ptrtoint ptr %len57 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %len57, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %trace_event_get_offsets_rpc_xdr_overflow.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xdr_overflow(ptr noundef %__data, ptr nocapture noundef readonly %xdr, i32 noundef %requested) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %rqst.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 7
  %2 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rqst.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge, label %cond.true.i

entry.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_rpc_xdr_overflow.exit

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task.i = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rq_task.i, align 4
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 24
  %8 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cl_program.i, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %tobool3.not.i = icmp eq ptr %11, null
  %spec.select145 = select i1 %tobool3.not.i, ptr @.str.72, ptr %11
  %call.i135 = tail call i32 @strlen(ptr noundef nonnull %spec.select145) #18
  %tk_msg.i = getelementptr inbounds %struct.rpc_task, ptr %5, i32 0, i32 10
  %12 = ptrtoint ptr %tk_msg.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tk_msg.i, align 4
  %p_name.i = getelementptr inbounds %struct.rpc_procinfo, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %p_name.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %p_name.i, align 4
  %tobool25.not.i = icmp eq ptr %15, null
  %spec.select146 = select i1 %tobool25.not.i, ptr @.str.72, ptr %15
  br label %trace_event_get_offsets_rpc_xdr_overflow.exit

trace_event_get_offsets_rpc_xdr_overflow.exit:    ; preds = %cond.true.i, %entry.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge
  %call.i140 = phi i32 [ %call.i135, %cond.true.i ], [ 7, %entry.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge ]
  %cond41.i = phi ptr [ %spec.select146, %cond.true.i ], [ @.str.123, %entry.trace_event_get_offsets_rpc_xdr_overflow.exit_crit_edge ]
  %add.i142 = shl i32 %call.i140, 16
  %or.i144.in = add i32 %add.i142, 65536
  %or.i144 = or i32 %or.i144.in, 64
  %call42.i = tail call i32 @strlen(ptr noundef nonnull %cond41.i) #18
  %add43.i = add i32 %call42.i, 1
  %add45.i = add i32 %call.i140, 65
  %shl46.i = shl i32 %add43.i, 16
  %or48.i = or i32 %shl46.i, %add45.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %16 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %perf_events, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  %add = add i32 %24, %18
  %25 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %26 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %27, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_rpc_xdr_overflow.exit.if.end_crit_edge

trace_event_get_offsets_rpc_xdr_overflow.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_rpc_xdr_overflow.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_rpc_xdr_overflow.exit
  %28 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %25, align 4
  %tobool.not.i133.not = icmp eq ptr %29, null
  br i1 %tobool.not.i133.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_rpc_xdr_overflow.exit.if.end_crit_edge
  %add49.i = add i32 %call.i140, 76
  %add12 = add i32 %add49.i, %add43.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #15
  %33 = ptrtoint ptr %32 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  %34 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %arrayidx.i, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  %37 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %arrayidx2.i, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  %39 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  %40 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 13
  %41 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %or.i144, ptr %__data_loc_progname, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 14
  %42 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %or48.i, ptr %__data_loc_procedure, align 4
  %43 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rqst.i, align 4
  %tobool17.not = icmp eq ptr %44, null
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %46, i32 0, i32 22
  %47 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %48 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 1
  %49 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %46, i32 0, i32 13
  %50 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 2
  %54 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 64
  %55 = load ptr, ptr %tk_client, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %55, i32 0, i32 24
  %56 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %cl_program, align 4
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %57, align 4
  %tobool23.not = icmp eq ptr %59, null
  %spec.select = select i1 %tobool23.not, ptr @.str.72, ptr %59
  %call27 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %60 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tk_client, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %61, i32 0, i32 9
  %62 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 3
  %64 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %version, align 4
  %65 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %__data_loc_procedure, align 4
  %and30 = and i32 %66, 65535
  %add.ptr31 = getelementptr i8, ptr %call13, i32 %and30
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %46, i32 0, i32 10
  %67 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %tk_msg, align 4
  %p_name = getelementptr inbounds %struct.rpc_procinfo, ptr %68, i32 0, i32 7
  %69 = ptrtoint ptr %p_name to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %p_name, align 4
  %tobool32.not = icmp eq ptr %70, null
  %cond39 = select i1 %tobool32.not, ptr @.str.72, ptr %70
  %call40 = call ptr @strcpy(ptr noundef %add.ptr31, ptr noundef nonnull %cond39) #19
  br label %if.end52

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %task_id41 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 1
  %71 = ptrtoint ptr %task_id41 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 -1, ptr %task_id41, align 4
  %client_id42 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 2
  %72 = ptrtoint ptr %client_id42 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 -1, ptr %client_id42, align 4
  %add.ptr45 = getelementptr i8, ptr %call13, i32 64
  %73 = ptrtoint ptr %add.ptr45 to i32
  call void @__asan_storeN_noabort(i32 %73, i32 8)
  store i64 8461818871936413184, ptr %add.ptr45, align 1
  %version47 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 3
  %74 = ptrtoint ptr %version47 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 0, ptr %version47, align 4
  %and49 = and i32 %add45.i, 65535
  %add.ptr50 = getelementptr i8, ptr %call13, i32 %and49
  %75 = ptrtoint ptr %add.ptr50 to i32
  call void @__asan_storeN_noabort(i32 %75, i32 8)
  store i64 8461818871936413184, ptr %add.ptr50, align 1
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then18
  %requested53 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 4
  %76 = ptrtoint ptr %requested53 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %requested, ptr %requested53, align 4
  %end = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 2
  %77 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %end, align 4
  %end54 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 5
  %79 = ptrtoint ptr %end54 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %78, ptr %end54, align 4
  %80 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %xdr, align 4
  %p55 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 6
  %82 = ptrtoint ptr %p55 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %81, ptr %p55, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %83 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %buf, align 4
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %84, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 7
  %87 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %86, ptr %head_base, align 4
  %88 = load ptr, ptr %buf, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 8
  %91 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %90, ptr %head_len, align 4
  %92 = load ptr, ptr %buf, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %92, i32 0, i32 5
  %93 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %page_len, align 4
  %page_len62 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 11
  %95 = ptrtoint ptr %page_len62 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %page_len62, align 4
  %96 = load ptr, ptr %buf, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 9
  %99 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %98, ptr %tail_base, align 4
  %100 = load ptr, ptr %buf, align 4
  %iov_len69 = getelementptr inbounds %struct.xdr_buf, ptr %100, i32 0, i32 1, i32 0, i32 1
  %101 = ptrtoint ptr %iov_len69 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %iov_len69, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 10
  %103 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %tail_len, align 4
  %104 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %104, i32 0, i32 8
  %105 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %len, align 4
  %len71 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %call13, i32 0, i32 12
  %107 = ptrtoint ptr %len71 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %106, ptr %len71, align 4
  %108 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %rctx, align 4
  %110 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %109, ptr noundef %__data, i64 noundef 1, ptr noundef %111, ptr noundef %25, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end52, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xdr_alignment(ptr noundef %__data, ptr nocapture noundef readonly %xdr, i32 noundef %offset, i32 noundef %copied) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rqst.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 7
  %3 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rqst.i, align 4
  %rq_task.i = getelementptr inbounds %struct.rpc_rqst, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rq_task.i, align 4
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %8, i32 0, i32 24
  %9 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cl_program.i, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %tobool.not.i80 = icmp eq ptr %12, null
  %spec.select.i = select i1 %tobool.not.i80, ptr @.str.72, ptr %12
  %call.i81 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %tk_msg.i = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 10
  %13 = ptrtoint ptr %tk_msg.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tk_msg.i, align 4
  %p_name.i = getelementptr inbounds %struct.rpc_procinfo, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %p_name.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %p_name.i, align 4
  %tobool12.not.i = icmp eq ptr %16, null
  %cond21.i = select i1 %tobool12.not.i, ptr @.str.72, ptr %16
  %call22.i = tail call i32 @strlen(ptr noundef nonnull %cond21.i) #18
  %add23.i = add i32 %call22.i, 1
  %add29.i = add i32 %call.i81, 61
  %add = add i32 %add29.i, %add23.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl26.i = shl i32 %add23.i, 16
  %or28.i = or i32 %shl26.i, %add29.i
  %add.i = shl i32 %call.i81, 16
  %or.i = add i32 %add.i, 65596
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 12
  %17 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 13
  %18 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %or28.i, ptr %__data_loc_procedure, align 4
  %19 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rqst.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %22, i32 0, i32 22
  %23 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %24 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 1
  %25 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %22, i32 0, i32 13
  %26 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 2
  %30 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 60
  %31 = load ptr, ptr %tk_client, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 24
  %32 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %cl_program, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 4
  %tobool8.not = icmp eq ptr %35, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %35
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %36 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tk_client, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %37, i32 0, i32 9
  %38 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 3
  %40 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %version, align 4
  %and15 = and i32 %add29.i, 65535
  %add.ptr16 = getelementptr i8, ptr %call3, i32 %and15
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %22, i32 0, i32 10
  %41 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tk_msg, align 4
  %p_name = getelementptr inbounds %struct.rpc_procinfo, ptr %42, i32 0, i32 7
  %43 = ptrtoint ptr %p_name to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %p_name, align 4
  %tobool17.not = icmp eq ptr %44, null
  %cond24 = select i1 %tobool17.not, ptr @.str.72, ptr %44
  %call25 = call ptr @strcpy(ptr noundef %add.ptr16, ptr noundef nonnull %cond24) #19
  %offset26 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 4
  %45 = ptrtoint ptr %offset26 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %offset, ptr %offset26, align 4
  %copied27 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 5
  %46 = ptrtoint ptr %copied27 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %copied, ptr %copied27, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %47 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %buf, align 4
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %48, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 6
  %51 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %50, ptr %head_base, align 4
  %52 = load ptr, ptr %buf, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 7
  %55 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %head_len, align 4
  %56 = load ptr, ptr %buf, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %56, i32 0, i32 5
  %57 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %page_len, align 4
  %page_len32 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 10
  %59 = ptrtoint ptr %page_len32 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %page_len32, align 4
  %60 = load ptr, ptr %buf, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 8
  %63 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %62, ptr %tail_base, align 4
  %64 = load ptr, ptr %buf, align 4
  %iov_len39 = getelementptr inbounds %struct.xdr_buf, ptr %64, i32 0, i32 1, i32 0, i32 1
  %65 = ptrtoint ptr %iov_len39 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %iov_len39, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 9
  %67 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %tail_len, align 4
  %68 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %68, i32 0, i32 8
  %69 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %len, align 4
  %len41 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call3, i32 0, i32 11
  %71 = ptrtoint ptr %len41 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %len41, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xdr_alignment(ptr noundef %__data, ptr nocapture noundef readonly %xdr, i32 noundef %offset, i32 noundef %copied) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %rqst.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 7
  %2 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rqst.i, align 4
  %rq_task.i = getelementptr inbounds %struct.rpc_rqst, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rq_task.i, align 4
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 24
  %8 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cl_program.i, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %tobool.not.i = icmp eq ptr %11, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %11
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 60
  %tk_msg.i = getelementptr inbounds %struct.rpc_task, ptr %5, i32 0, i32 10
  %12 = ptrtoint ptr %tk_msg.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tk_msg.i, align 4
  %p_name.i = getelementptr inbounds %struct.rpc_procinfo, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %p_name.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %p_name.i, align 4
  %tobool12.not.i = icmp eq ptr %15, null
  %cond21.i = select i1 %tobool12.not.i, ptr @.str.72, ptr %15
  %call22.i = tail call i32 @strlen(ptr noundef nonnull %cond21.i) #18
  %add23.i = add i32 %call22.i, 1
  %add25.i = add i32 %call.i, 61
  %shl26.i = shl i32 %add23.i, 16
  %or28.i = or i32 %shl26.i, %add25.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %16 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %perf_events, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  %add = add i32 %24, %18
  %25 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %26 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %27, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %28 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %25, align 4
  %tobool.not.i106.not = icmp eq ptr %29, null
  br i1 %tobool.not.i106.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add29.i = add i32 %call.i, 72
  %add12 = add i32 %add29.i, %add23.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #15
  %33 = ptrtoint ptr %32 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  %34 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %arrayidx.i, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %36 = ptrtoint ptr %35 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  %37 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %arrayidx2.i, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  %39 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  %40 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 12
  %41 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 13
  %42 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %or28.i, ptr %__data_loc_procedure, align 4
  %43 = ptrtoint ptr %rqst.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rqst.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %46, i32 0, i32 22
  %47 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %48 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 1
  %49 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %46, i32 0, i32 13
  %50 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 2
  %54 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 60
  %55 = load ptr, ptr %tk_client, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %55, i32 0, i32 24
  %56 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %cl_program, align 4
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %57, align 4
  %tobool20.not = icmp eq ptr %59, null
  %spec.select = select i1 %tobool20.not, ptr @.str.72, ptr %59
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %60 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tk_client, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %61, i32 0, i32 9
  %62 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 3
  %64 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %version, align 4
  %and27 = and i32 %add25.i, 65535
  %add.ptr28 = getelementptr i8, ptr %call13, i32 %and27
  %tk_msg = getelementptr inbounds %struct.rpc_task, ptr %46, i32 0, i32 10
  %65 = ptrtoint ptr %tk_msg to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %tk_msg, align 4
  %p_name = getelementptr inbounds %struct.rpc_procinfo, ptr %66, i32 0, i32 7
  %67 = ptrtoint ptr %p_name to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %p_name, align 4
  %tobool29.not = icmp eq ptr %68, null
  %cond36 = select i1 %tobool29.not, ptr @.str.72, ptr %68
  %call37 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef nonnull %cond36) #19
  %offset38 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 4
  %69 = ptrtoint ptr %offset38 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %offset, ptr %offset38, align 4
  %copied39 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 5
  %70 = ptrtoint ptr %copied39 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %copied, ptr %copied39, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %71 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %buf, align 4
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %72, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 6
  %75 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %74, ptr %head_base, align 4
  %76 = load ptr, ptr %buf, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 7
  %79 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %head_len, align 4
  %80 = load ptr, ptr %buf, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %80, i32 0, i32 5
  %81 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %page_len, align 4
  %page_len46 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 10
  %83 = ptrtoint ptr %page_len46 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %page_len46, align 4
  %84 = load ptr, ptr %buf, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 8
  %87 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %86, ptr %tail_base, align 4
  %88 = load ptr, ptr %buf, align 4
  %iov_len53 = getelementptr inbounds %struct.xdr_buf, ptr %88, i32 0, i32 1, i32 0, i32 1
  %89 = ptrtoint ptr %iov_len53 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %iov_len53, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 9
  %91 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %90, ptr %tail_len, align 4
  %92 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %92, i32 0, i32 8
  %93 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %len, align 4
  %len55 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %call13, i32 0, i32 11
  %95 = ptrtoint ptr %len55 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %len55, align 4
  %96 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %rctx, align 4
  %98 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %97, ptr noundef %__data, i64 noundef 1, ptr noundef %99, ptr noundef %25, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_socket_event(ptr noundef %__data, ptr nocapture noundef readnone %xprt, ptr nocapture noundef readonly %socket) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sk7 = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %3 = ptrtoint ptr %sk7 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sk7, align 16
  %saddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 5
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 3
  %5 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %6 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %7)
  %cmp = icmp eq i16 %7, 10
  br i1 %cmp, label %if.then11, label %do.body24

if.then11:                                        ; preds = %if.end5
  %8 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 10, ptr %saddr, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 6
  %9 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %inet_sport, align 8
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 4, i32 2
  %11 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 4, i32 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 4
  %12 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %13 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then11.inet6_sk.exit_crit_edge, label %cond.true.i

if.then11.inet6_sk.exit_crit_edge:                ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #17
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #17
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 1
  %14 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %if.then11.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %15, %cond.true.i ], [ null, %if.then11.inet6_sk.exit_crit_edge ]
  %16 = call ptr @memcpy(ptr %sin6_addr, ptr %cond.i, i32 16)
  %17 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 10, ptr %daddr, align 4
  %18 = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 2
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %18, align 4
  %sin6_port21 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 5, i32 2
  %21 = ptrtoint ptr %sin6_port21 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %sin6_port21, align 2
  %sin6_addr22 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 5, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 10
  %22 = call ptr @memcpy(ptr %sin6_addr22, ptr %skc_v6_daddr, i32 16)
  br label %do.end41

do.body24:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %23 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 2, ptr %saddr, align 4
  %inet_sport27 = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 6
  %24 = ptrtoint ptr %inet_sport27 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %inet_sport27, align 8
  %sin_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 4, i32 2
  %26 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %25, ptr %sin_port, align 2
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 2
  %27 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %inet_saddr, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 4, i32 4
  %29 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %sin_addr, align 4
  %30 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 2, ptr %daddr, align 4
  %31 = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 2
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %31, align 4
  %sin_port34 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 5, i32 2
  %34 = ptrtoint ptr %sin_port34 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %sin_port34, align 2
  %35 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %4, align 8
  %sin_addr37 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 5, i32 4
  %37 = ptrtoint ptr %sin_addr37 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %sin_addr37, align 4
  br label %do.end41

do.end41:                                         ; preds = %do.body24, %inet6_sk.exit
  %38 = ptrtoint ptr %socket to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %socket, align 128
  %socket_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 1
  %40 = ptrtoint ptr %socket_state to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %socket_state, align 8
  %41 = ptrtoint ptr %sk7 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sk7, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %42, i32 0, i32 4
  %43 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load volatile i8, ptr %skc_state, align 2
  %conv44 = zext i8 %44 to i32
  %sock_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 2
  %45 = ptrtoint ptr %sock_state to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %conv44, ptr %sock_state, align 4
  %i_ino = getelementptr inbounds %struct.socket_alloc, ptr %socket, i32 0, i32 1, i32 11
  %46 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %i_ino, align 8
  %conv45 = zext i32 %47 to i64
  %ino = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call3, i32 0, i32 3
  %48 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %conv45, ptr %ino, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end41, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xs_socket_event(ptr noundef %__data, ptr nocapture noundef readnone %xprt, ptr nocapture noundef readonly %socket) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sk18 = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %27 = ptrtoint ptr %sk18 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sk18, align 16
  %saddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 5
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 3
  %29 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %30 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %31)
  %cmp = icmp eq i16 %31, 10
  br i1 %cmp, label %if.then23, label %do.body36

if.then23:                                        ; preds = %if.end16
  %32 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 10, ptr %saddr, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 6
  %33 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %inet_sport, align 8
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 4, i32 2
  %35 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 4, i32 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 4
  %36 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %37 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then23.inet6_sk.exit_crit_edge, label %cond.true.i

if.then23.inet6_sk.exit_crit_edge:                ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 1
  %38 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %if.then23.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %39, %cond.true.i ], [ null, %if.then23.inet6_sk.exit_crit_edge ]
  %40 = call ptr @memcpy(ptr %sin6_addr, ptr %cond.i, i32 16)
  %41 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 10, ptr %daddr, align 4
  %42 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 2
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %42, align 4
  %sin6_port33 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 5, i32 2
  %45 = ptrtoint ptr %sin6_port33 to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %sin6_port33, align 2
  %sin6_addr34 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 5, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 10
  %46 = call ptr @memcpy(ptr %sin6_addr34, ptr %skc_v6_daddr, i32 16)
  br label %do.end55

do.body36:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %47 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 2, ptr %saddr, align 4
  %inet_sport39 = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 6
  %48 = ptrtoint ptr %inet_sport39 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %inet_sport39, align 8
  %sin_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 4, i32 2
  %50 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %49, ptr %sin_port, align 2
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 2
  %51 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %inet_saddr, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 4, i32 4
  %53 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %sin_addr, align 4
  %54 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 2, ptr %daddr, align 4
  %55 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 2
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %55, align 4
  %sin_port46 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 5, i32 2
  %58 = ptrtoint ptr %sin_port46 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %sin_port46, align 2
  %59 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %28, align 8
  %sin_addr49 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 5, i32 4
  %61 = ptrtoint ptr %sin_addr49 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %sin_addr49, align 4
  br label %do.end55

do.end55:                                         ; preds = %do.body36, %inet6_sk.exit
  %62 = ptrtoint ptr %socket to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %socket, align 128
  %socket_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 1
  %64 = ptrtoint ptr %socket_state to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %socket_state, align 8
  %65 = ptrtoint ptr %sk18 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %sk18, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %66, i32 0, i32 4
  %67 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load volatile i8, ptr %skc_state, align 2
  %conv58 = zext i8 %68 to i32
  %sock_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 2
  %69 = ptrtoint ptr %sock_state to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %conv58, ptr %sock_state, align 4
  %i_ino = getelementptr inbounds %struct.socket_alloc, ptr %socket, i32 0, i32 1, i32 11
  %70 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %i_ino, align 8
  %conv59 = zext i32 %71 to i64
  %ino = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %call13, i32 0, i32 3
  %72 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %conv59, ptr %ino, align 8
  %73 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %rctx, align 4
  %75 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %74, ptr noundef %__data, i64 noundef 1, ptr noundef %76, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end55, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_socket_event_done(ptr noundef %__data, ptr nocapture noundef readnone %xprt, ptr nocapture noundef readonly %socket, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 88) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sk7 = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %3 = ptrtoint ptr %sk7 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sk7, align 16
  %saddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 5
  %daddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 6
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 3
  %5 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %6 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %7)
  %cmp = icmp eq i16 %7, 10
  br i1 %cmp, label %if.then11, label %do.body24

if.then11:                                        ; preds = %if.end5
  %8 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 10, ptr %saddr, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 6
  %9 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %inet_sport, align 8
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 5, i32 2
  %11 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 5, i32 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 4
  %12 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %13 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then11.inet6_sk.exit_crit_edge, label %cond.true.i

if.then11.inet6_sk.exit_crit_edge:                ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #17
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #17
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 1
  %14 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %if.then11.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %15, %cond.true.i ], [ null, %if.then11.inet6_sk.exit_crit_edge ]
  %16 = call ptr @memcpy(ptr %sin6_addr, ptr %cond.i, i32 16)
  %17 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 10, ptr %daddr, align 4
  %18 = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 2
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %18, align 4
  %sin6_port21 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 6, i32 2
  %21 = ptrtoint ptr %sin6_port21 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %sin6_port21, align 2
  %sin6_addr22 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 6, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 10
  %22 = call ptr @memcpy(ptr %sin6_addr22, ptr %skc_v6_daddr, i32 16)
  br label %do.end41

do.body24:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %23 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 2, ptr %saddr, align 4
  %inet_sport27 = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 6
  %24 = ptrtoint ptr %inet_sport27 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %inet_sport27, align 8
  %sin_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 5, i32 2
  %26 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %25, ptr %sin_port, align 2
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %4, i32 0, i32 2
  %27 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %inet_saddr, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 5, i32 4
  %29 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %sin_addr, align 4
  %30 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 2, ptr %daddr, align 4
  %31 = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 2
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %31, align 4
  %sin_port34 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 6, i32 2
  %34 = ptrtoint ptr %sin_port34 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %sin_port34, align 2
  %35 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %4, align 8
  %sin_addr37 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 6, i32 4
  %37 = ptrtoint ptr %sin_addr37 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %sin_addr37, align 4
  br label %do.end41

do.end41:                                         ; preds = %do.body24, %inet6_sk.exit
  %38 = ptrtoint ptr %socket to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %socket, align 128
  %socket_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 2
  %40 = ptrtoint ptr %socket_state to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %socket_state, align 4
  %41 = ptrtoint ptr %sk7 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sk7, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %42, i32 0, i32 4
  %43 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load volatile i8, ptr %skc_state, align 2
  %conv44 = zext i8 %44 to i32
  %sock_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 3
  %45 = ptrtoint ptr %sock_state to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %conv44, ptr %sock_state, align 8
  %i_ino = getelementptr inbounds %struct.socket_alloc, ptr %socket, i32 0, i32 1, i32 11
  %46 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %i_ino, align 8
  %conv45 = zext i32 %47 to i64
  %ino = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 4
  %48 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %conv45, ptr %ino, align 8
  %error46 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call3, i32 0, i32 1
  %49 = ptrtoint ptr %error46 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %error, ptr %error46, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end41, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xs_socket_event_done(ptr noundef %__data, ptr nocapture noundef readnone %xprt, ptr nocapture noundef readonly %socket, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 92, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sk18 = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %27 = ptrtoint ptr %sk18 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sk18, align 16
  %saddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 5
  %daddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 6
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 3
  %29 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %30 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %31)
  %cmp = icmp eq i16 %31, 10
  br i1 %cmp, label %if.then23, label %do.body36

if.then23:                                        ; preds = %if.end16
  %32 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 10, ptr %saddr, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 6
  %33 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %inet_sport, align 8
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 5, i32 2
  %35 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 5, i32 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 4
  %36 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %37 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then23.inet6_sk.exit_crit_edge, label %cond.true.i

if.then23.inet6_sk.exit_crit_edge:                ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 1
  %38 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %if.then23.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %39, %cond.true.i ], [ null, %if.then23.inet6_sk.exit_crit_edge ]
  %40 = call ptr @memcpy(ptr %sin6_addr, ptr %cond.i, i32 16)
  %41 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 10, ptr %daddr, align 4
  %42 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 2
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %42, align 4
  %sin6_port33 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 6, i32 2
  %45 = ptrtoint ptr %sin6_port33 to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %sin6_port33, align 2
  %sin6_addr34 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 6, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 10
  %46 = call ptr @memcpy(ptr %sin6_addr34, ptr %skc_v6_daddr, i32 16)
  br label %do.end55

do.body36:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %47 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 2, ptr %saddr, align 4
  %inet_sport39 = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 6
  %48 = ptrtoint ptr %inet_sport39 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %inet_sport39, align 8
  %sin_port = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 5, i32 2
  %50 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %49, ptr %sin_port, align 2
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 2
  %51 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %inet_saddr, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 5, i32 4
  %53 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %sin_addr, align 4
  %54 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 2, ptr %daddr, align 4
  %55 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 2
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %55, align 4
  %sin_port46 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 6, i32 2
  %58 = ptrtoint ptr %sin_port46 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %sin_port46, align 2
  %59 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %28, align 8
  %sin_addr49 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 6, i32 4
  %61 = ptrtoint ptr %sin_addr49 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %sin_addr49, align 4
  br label %do.end55

do.end55:                                         ; preds = %do.body36, %inet6_sk.exit
  %62 = ptrtoint ptr %socket to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %socket, align 128
  %socket_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 2
  %64 = ptrtoint ptr %socket_state to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %socket_state, align 4
  %65 = ptrtoint ptr %sk18 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %sk18, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %66, i32 0, i32 4
  %67 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load volatile i8, ptr %skc_state, align 2
  %conv58 = zext i8 %68 to i32
  %sock_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 3
  %69 = ptrtoint ptr %sock_state to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %conv58, ptr %sock_state, align 8
  %i_ino = getelementptr inbounds %struct.socket_alloc, ptr %socket, i32 0, i32 1, i32 11
  %70 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %i_ino, align 8
  %conv59 = zext i32 %71 to i64
  %ino = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 4
  %72 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %conv59, ptr %ino, align 8
  %error60 = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %call13, i32 0, i32 1
  %73 = ptrtoint ptr %error60 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %error, ptr %error60, align 8
  %74 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %rctx, align 4
  %76 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 92, i32 noundef %75, ptr noundef %__data, i64 noundef 1, ptr noundef %77, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end55, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_socket_nospace(ptr noundef %__data, ptr nocapture noundef readonly %rqst, ptr nocapture noundef readonly %transport) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %len = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 1, i32 8
  %14 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %len, align 4
  %total = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %total to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %total, align 4
  %17 = load i32, ptr %len, align 4
  %xmit = getelementptr inbounds %struct.sock_xprt, ptr %transport, i32 0, i32 5
  %18 = ptrtoint ptr %xmit to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %xmit, align 4
  %sub = sub i32 %17, %19
  %remaining = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call3, i32 0, i32 4
  %20 = ptrtoint ptr %remaining to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %sub, ptr %remaining, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_socket_nospace(ptr noundef %__data, ptr nocapture noundef readonly %rqst, ptr nocapture noundef readonly %transport) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %len = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 1, i32 8
  %38 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %len, align 4
  %total = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %total to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %total, align 4
  %41 = load i32, ptr %len, align 4
  %xmit = getelementptr inbounds %struct.sock_xprt, ptr %transport, i32 0, i32 5
  %42 = ptrtoint ptr %xmit to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %xmit, align 4
  %sub20 = sub i32 %41, %43
  %remaining = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %call13, i32 0, i32 4
  %44 = ptrtoint ptr %remaining to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %sub20, ptr %remaining, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xprt_lifetime_class(ptr noundef %__data, ptr nocapture noundef readonly %xprt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i43 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i43, ptr @.str.72, ptr %4
  %call.i44 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %6, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %6
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add23.i = add i32 %call.i44, 21
  %add = add i32 %add23.i, %add17.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add23.i
  %add.i = shl i32 %call.i44, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %state = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %9 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %state, align 8
  %state6 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %state6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %state6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %12 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %address_strings.i, align 8
  %tobool8.not = icmp eq ptr %13, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %13
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and13 = and i32 %add23.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %14 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx8.i, align 4
  %tobool17.not = icmp eq ptr %15, null
  %cond23 = select i1 %tobool17.not, ptr @.str.72, ptr %15
  %call24 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond23) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xprt_lifetime_class(ptr noundef %__data, ptr nocapture noundef readonly %xprt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %5, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %5
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add19.i = add i32 %call.i, 21
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add19.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i68.not = icmp eq ptr %19, null
  br i1 %tobool.not.i68.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add23.i = add i32 %call.i, 32
  %add12 = add i32 %add23.i, %add17.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %state = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %33 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %state, align 8
  %state17 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %state17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %state17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %36 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %address_strings.i, align 8
  %tobool21.not = icmp eq ptr %37, null
  %spec.select = select i1 %tobool21.not, ptr @.str.72, ptr %37
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and26 = and i32 %add19.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %38 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx8.i, align 4
  %tobool30.not = icmp eq ptr %39, null
  %cond36 = select i1 %tobool30.not, ptr @.str.72, ptr %39
  %call37 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond36) #19
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpc_xprt_event(ptr noundef %__data, ptr nocapture noundef readonly %xprt, i32 noundef %xid, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i46 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i46, ptr @.str.72, ptr %4
  %call.i47 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %6, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %6
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add23.i = add i32 %call.i47, 25
  %add = add i32 %add23.i, %add17.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add23.i
  %add.i = shl i32 %call.i47, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %xid6 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %xid6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %xid, ptr %xid6, align 4
  %status7 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %status7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %status, ptr %status7, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %11 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %address_strings.i, align 8
  %tobool9.not = icmp eq ptr %12, null
  %spec.select = select i1 %tobool9.not, ptr @.str.72, ptr %12
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and14 = and i32 %add23.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %13 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx8.i, align 4
  %tobool18.not = icmp eq ptr %14, null
  %cond24 = select i1 %tobool18.not, ptr @.str.72, ptr %14
  %call25 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond24) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpc_xprt_event(ptr noundef %__data, ptr nocapture noundef readonly %xprt, i32 noundef %xid, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %5, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %5
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add19.i = add i32 %call.i, 25
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add19.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i71.not = icmp eq ptr %19, null
  br i1 %tobool.not.i71.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add23.i = add i32 %call.i, 36
  %add12 = add i32 %add23.i, %add17.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %xid17 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %xid17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %xid, ptr %xid17, align 4
  %status18 = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %status18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %status, ptr %status18, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %35 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %address_strings.i, align 8
  %tobool22.not = icmp eq ptr %36, null
  %spec.select = select i1 %tobool22.not, ptr @.str.72, ptr %36
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and27 = and i32 %add19.i, 65535
  %add.ptr28 = getelementptr i8, ptr %call13, i32 %and27
  %37 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx8.i, align 4
  %tobool31.not = icmp eq ptr %38, null
  %cond37 = select i1 %tobool31.not, ptr @.str.72, ptr %38
  %call38 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef nonnull %cond37) #19
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_transmit(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %tobool7.not = icmp eq ptr %10, null
  br i1 %tobool7.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %12, %cond.true ], [ -1, %if.end5.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %cond, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  %rq_seqno = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 7
  %17 = ptrtoint ptr %rq_seqno to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rq_seqno, align 4
  %seqno = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %seqno to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %seqno, align 4
  %status10 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %status10 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %status, ptr %status10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprt_transmit(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %tobool18.not = icmp eq ptr %34, null
  br i1 %tobool18.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %36, %cond.true ], [ -1, %if.end16.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %cond, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %rq_seqno = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 7
  %41 = ptrtoint ptr %rq_seqno to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rq_seqno, align 4
  %seqno = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %seqno to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %seqno, align 4
  %status21 = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %status21 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %status, ptr %status21, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_retransmit(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rq_task.i = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task.i, align 4
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 13
  %5 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %6, i32 0, i32 24
  %7 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cl_program.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %tobool.not.i60 = icmp eq ptr %10, null
  %spec.select.i = select i1 %tobool.not.i60, ptr @.str.72, ptr %10
  %call.i61 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i61, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 40
  %call10.i = tail call ptr @rpc_proc_name(ptr noundef %4) #15
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %if.end.trace_event_get_offsets_xprt_retransmit.exit_crit_edge, label %cond.true12.i

if.end.trace_event_get_offsets_xprt_retransmit.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_xprt_retransmit.exit

cond.true12.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %11 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rq_task.i, align 4
  %call14.i = tail call ptr @rpc_proc_name(ptr noundef %12) #15
  br label %trace_event_get_offsets_xprt_retransmit.exit

trace_event_get_offsets_xprt_retransmit.exit:     ; preds = %cond.true12.i, %if.end.trace_event_get_offsets_xprt_retransmit.exit_crit_edge
  %cond17.i = phi ptr [ %call14.i, %cond.true12.i ], [ @.str.72, %if.end.trace_event_get_offsets_xprt_retransmit.exit_crit_edge ]
  %call18.i = tail call i32 @strlen(ptr noundef %cond17.i) #18
  %add19.i = add i32 %call18.i, 1
  %add25.i = add i32 %call.i61, 41
  %add = add i32 %add25.i, %add19.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_xprt_retransmit.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_xprt_retransmit.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_xprt_retransmit.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_xprt_retransmit.exit
  %shl22.i = shl i32 %add19.i, 16
  %or24.i = or i32 %shl22.i, %add25.i
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 7
  %13 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 8
  %14 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or24.i, ptr %__data_loc_procname, align 4
  %15 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rq_task.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %16, i32 0, i32 22
  %17 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %18 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 1
  %19 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %16, i32 0, i32 13
  %20 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tk_client, align 4
  %tobool6.not = icmp eq ptr %21, null
  br i1 %tobool6.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %23, %cond.true ], [ -1, %if.end5.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 2
  %24 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %cond, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %25 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 3
  %27 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %xid, align 4
  %rq_ntrans = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 30
  %28 = ptrtoint ptr %rq_ntrans to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rq_ntrans, align 8
  %ntrans = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 4
  %30 = ptrtoint ptr %ntrans to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %ntrans, align 4
  %tk_timeout = getelementptr inbounds %struct.rpc_task, ptr %16, i32 0, i32 5
  %31 = ptrtoint ptr %tk_timeout to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %tk_timeout, align 8
  %timeout = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 6
  %33 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %timeout, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 40
  %34 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tk_client, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %35, i32 0, i32 24
  %36 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %cl_program, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  %tobool10.not = icmp eq ptr %39, null
  %spec.select = select i1 %tobool10.not, ptr @.str.72, ptr %39
  %call18 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %40 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %tk_client, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %41, i32 0, i32 9
  %42 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call3, i32 0, i32 5
  %44 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %version, align 4
  %45 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %__data_loc_procname, align 4
  %and21 = and i32 %46, 65535
  %add.ptr22 = getelementptr i8, ptr %call3, i32 %and21
  %call23 = call ptr @rpc_proc_name(ptr noundef %16) #15
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %cond.end.cond.end28_crit_edge, label %cond.true25

cond.end.cond.end28_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end28

cond.true25:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  %call26 = call ptr @rpc_proc_name(ptr noundef %16) #15
  br label %cond.end28

cond.end28:                                       ; preds = %cond.true25, %cond.end.cond.end28_crit_edge
  %cond29 = phi ptr [ %call26, %cond.true25 ], [ @.str.72, %cond.end.cond.end28_crit_edge ]
  %call30 = call ptr @strcpy(ptr noundef %add.ptr22, ptr noundef %cond29) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end28, %trace_event_get_offsets_xprt_retransmit.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprt_retransmit(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %rq_task.i = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %2 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_task.i, align 4
  %tk_client.i = getelementptr inbounds %struct.rpc_task, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %tk_client.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tk_client.i, align 4
  %cl_program.i = getelementptr inbounds %struct.rpc_clnt, ptr %5, i32 0, i32 24
  %6 = ptrtoint ptr %cl_program.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cl_program.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool.not.i = icmp eq ptr %9, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %9
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 40
  %call10.i = tail call ptr @rpc_proc_name(ptr noundef %3) #15
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %entry.trace_event_get_offsets_xprt_retransmit.exit_crit_edge, label %cond.true12.i

entry.trace_event_get_offsets_xprt_retransmit.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_xprt_retransmit.exit

cond.true12.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %10 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rq_task.i, align 4
  %call14.i = tail call ptr @rpc_proc_name(ptr noundef %11) #15
  br label %trace_event_get_offsets_xprt_retransmit.exit

trace_event_get_offsets_xprt_retransmit.exit:     ; preds = %cond.true12.i, %entry.trace_event_get_offsets_xprt_retransmit.exit_crit_edge
  %cond17.i = phi ptr [ %call14.i, %cond.true12.i ], [ @.str.72, %entry.trace_event_get_offsets_xprt_retransmit.exit_crit_edge ]
  %call18.i = tail call i32 @strlen(ptr noundef %cond17.i) #18
  %add19.i = add i32 %call18.i, 1
  %add21.i = add i32 %call.i, 41
  %shl22.i = shl i32 %add19.i, 16
  %or24.i = or i32 %shl22.i, %add21.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %12 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %perf_events, align 4
  %14 = ptrtoint ptr %13 to i32
  %15 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %18
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx, align 4
  %add = add i32 %20, %14
  %21 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %22 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %23, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_xprt_retransmit.exit.if.end_crit_edge

trace_event_get_offsets_xprt_retransmit.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_xprt_retransmit.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_xprt_retransmit.exit
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %21, align 4
  %tobool.not.i84.not = icmp eq ptr %25, null
  br i1 %tobool.not.i84.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_xprt_retransmit.exit.if.end_crit_edge
  %add25.i = add i32 %call.i, 52
  %add12 = add i32 %add25.i, %add19.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %26 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %__regs, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #15
  %29 = ptrtoint ptr %28 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %arrayidx.i, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %32 = ptrtoint ptr %31 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  %33 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx2.i, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  %35 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  %36 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 7
  %37 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %or.i, ptr %__data_loc_progname, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 8
  %38 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %or24.i, ptr %__data_loc_procname, align 4
  %39 = ptrtoint ptr %rq_task.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rq_task.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %40, i32 0, i32 22
  %41 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %42 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 1
  %43 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %40, i32 0, i32 13
  %44 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %tk_client, align 4
  %tobool17.not = icmp eq ptr %45, null
  br i1 %tobool17.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %47, %cond.true ], [ -1, %if.end16.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 2
  %48 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %cond, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %49 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 3
  %51 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %xid, align 4
  %rq_ntrans = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 30
  %52 = ptrtoint ptr %rq_ntrans to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rq_ntrans, align 8
  %ntrans = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 4
  %54 = ptrtoint ptr %ntrans to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %ntrans, align 4
  %tk_timeout = getelementptr inbounds %struct.rpc_task, ptr %40, i32 0, i32 5
  %55 = ptrtoint ptr %tk_timeout to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %tk_timeout, align 8
  %timeout = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 6
  %57 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %timeout, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 40
  %58 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %tk_client, align 4
  %cl_program = getelementptr inbounds %struct.rpc_clnt, ptr %59, i32 0, i32 24
  %60 = ptrtoint ptr %cl_program to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %cl_program, align 4
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %61, align 4
  %tobool22.not = icmp eq ptr %63, null
  %spec.select = select i1 %tobool22.not, ptr @.str.72, ptr %63
  %call30 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %64 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %tk_client, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %65, i32 0, i32 9
  %66 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %call13, i32 0, i32 5
  %68 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %67, ptr %version, align 4
  %69 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %__data_loc_procname, align 4
  %and33 = and i32 %70, 65535
  %add.ptr34 = getelementptr i8, ptr %call13, i32 %and33
  %call35 = call ptr @rpc_proc_name(ptr noundef %40) #15
  %tobool36.not = icmp eq ptr %call35, null
  br i1 %tobool36.not, label %cond.end.cond.end40_crit_edge, label %cond.true37

cond.end.cond.end40_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end40

cond.true37:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  %call38 = call ptr @rpc_proc_name(ptr noundef %40) #15
  br label %cond.end40

cond.end40:                                       ; preds = %cond.true37, %cond.end.cond.end40_crit_edge
  %cond41 = phi ptr [ %call38, %cond.true37 ], [ @.str.72, %cond.end.cond.end40_crit_edge ]
  %call42 = call ptr @strcpy(ptr noundef %add.ptr34, ptr noundef %cond41) #19
  %71 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %rctx, align 4
  %73 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %72, ptr noundef %__data, i64 noundef 1, ptr noundef %74, ptr noundef %21, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end40, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_ping(ptr noundef %__data, ptr nocapture noundef readonly %xprt, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i43 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i43, ptr @.str.72, ptr %4
  %call.i44 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %6, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %6
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add23.i = add i32 %call.i44, 21
  %add = add i32 %add23.i, %add17.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add23.i
  %add.i = shl i32 %call.i44, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %status, ptr %status6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %10 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %address_strings.i, align 8
  %tobool8.not = icmp eq ptr %11, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %11
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and13 = and i32 %add23.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %12 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx8.i, align 4
  %tobool17.not = icmp eq ptr %13, null
  %cond23 = select i1 %tobool17.not, ptr @.str.72, ptr %13
  %call24 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond23) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprt_ping(ptr noundef %__data, ptr nocapture noundef readonly %xprt, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %arrayidx8.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %5, null
  %cond15.i = select i1 %tobool9.not.i, ptr @.str.72, ptr %5
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %cond15.i) #18
  %add17.i = add i32 %call16.i, 1
  %add19.i = add i32 %call.i, 21
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add19.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i68.not = icmp eq ptr %19, null
  br i1 %tobool.not.i68.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add23.i = add i32 %call.i, 32
  %add12 = add i32 %add23.i, %add17.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or22.i, ptr %__data_loc_port, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %status, ptr %status17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %34 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %address_strings.i, align 8
  %tobool21.not = icmp eq ptr %35, null
  %spec.select = select i1 %tobool21.not, ptr @.str.72, ptr %35
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and26 = and i32 %add19.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %36 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx8.i, align 4
  %tobool30.not = icmp eq ptr %37, null
  %cond36 = select i1 %tobool30.not, ptr @.str.72, ptr %37
  %call37 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond36) #19
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_writelock_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef readonly %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %task, null
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %tobool8.not = icmp eq ptr %7, null
  br i1 %tobool8.not, label %if.then7.if.end12_crit_edge, label %cond.true

if.then7.if.end12_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

cond.true:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %task_id10 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %task_id10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %task_id10, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.else, %cond.true, %if.then7.if.end12_crit_edge
  %.sink = phi i32 [ -1, %if.else ], [ %9, %cond.true ], [ -1, %if.then7.if.end12_crit_edge ]
  %client_id11 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %client_id11 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %.sink, ptr %client_id11, align 4
  %snd_task = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 37
  %12 = ptrtoint ptr %snd_task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %snd_task, align 4
  %tobool13.not = icmp eq ptr %13, null
  br i1 %tobool13.not, label %if.end12.if.end22_crit_edge, label %land.lhs.true

if.end12.if.end22_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22

land.lhs.true:                                    ; preds = %if.end12
  %state = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %14 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state, align 4
  %16 = and i32 %15, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool15.not = icmp eq i32 %16, 0
  br i1 %tobool15.not, label %if.then16, label %land.lhs.true.if.end22_crit_edge

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22

if.then16:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid18 = getelementptr inbounds %struct.rpc_task, ptr %13, i32 0, i32 22
  %17 = ptrtoint ptr %tk_pid18 to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %tk_pid18, align 8
  %conv19 = zext i16 %18 to i32
  br label %if.end22

if.end22:                                         ; preds = %if.then16, %land.lhs.true.if.end22_crit_edge, %if.end12.if.end22_crit_edge
  %.sink42 = phi i32 [ %conv19, %if.then16 ], [ -1, %land.lhs.true.if.end22_crit_edge ], [ -1, %if.end12.if.end22_crit_edge ]
  %snd_task_id21 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %snd_task_id21 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %.sink42, ptr %snd_task_id21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprt_writelock_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef readonly %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %task, null
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %tobool19.not = icmp eq ptr %31, null
  br i1 %tobool19.not, label %if.then18.if.end23_crit_edge, label %cond.true

if.then18.if.end23_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end23

cond.true:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %task_id21 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %task_id21 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %task_id21, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else, %cond.true, %if.then18.if.end23_crit_edge
  %.sink = phi i32 [ -1, %if.else ], [ %33, %cond.true ], [ -1, %if.then18.if.end23_crit_edge ]
  %client_id22 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %client_id22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %.sink, ptr %client_id22, align 4
  %snd_task = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 37
  %36 = ptrtoint ptr %snd_task to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %snd_task, align 4
  %tobool24.not = icmp eq ptr %37, null
  br i1 %tobool24.not, label %if.end23.if.end34_crit_edge, label %land.lhs.true25

if.end23.if.end34_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

land.lhs.true25:                                  ; preds = %if.end23
  %state = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %38 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state, align 4
  %40 = and i32 %39, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool27.not = icmp eq i32 %40, 0
  br i1 %tobool27.not, label %if.then28, label %land.lhs.true25.if.end34_crit_edge

land.lhs.true25.if.end34_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.then28:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid30 = getelementptr inbounds %struct.rpc_task, ptr %37, i32 0, i32 22
  %41 = ptrtoint ptr %tk_pid30 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %tk_pid30, align 8
  %conv31 = zext i16 %42 to i32
  br label %if.end34

if.end34:                                         ; preds = %if.then28, %land.lhs.true25.if.end34_crit_edge, %if.end23.if.end34_crit_edge
  %.sink65 = phi i32 [ %conv31, %if.then28 ], [ -1, %land.lhs.true25.if.end34_crit_edge ], [ -1, %if.end23.if.end34_crit_edge ]
  %snd_task_id33 = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %snd_task_id33 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %.sink65, ptr %snd_task_id33, align 4
  %44 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rctx, align 4
  %46 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %45, ptr noundef %__data, i64 noundef 1, ptr noundef %47, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_cong_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef readonly %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %task, null
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %tobool8.not = icmp eq ptr %7, null
  br i1 %tobool8.not, label %if.then7.if.end12_crit_edge, label %cond.true

if.then7.if.end12_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

cond.true:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %task_id10 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %task_id10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %task_id10, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.else, %cond.true, %if.then7.if.end12_crit_edge
  %.sink = phi i32 [ -1, %if.else ], [ %9, %cond.true ], [ -1, %if.then7.if.end12_crit_edge ]
  %client_id11 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %client_id11 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %.sink, ptr %client_id11, align 4
  %snd_task = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 37
  %12 = ptrtoint ptr %snd_task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %snd_task, align 4
  %tobool13.not = icmp eq ptr %13, null
  br i1 %tobool13.not, label %if.end12.if.end22_crit_edge, label %land.lhs.true

if.end12.if.end22_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22

land.lhs.true:                                    ; preds = %if.end12
  %state = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %14 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state, align 4
  %16 = and i32 %15, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool15.not = icmp eq i32 %16, 0
  br i1 %tobool15.not, label %if.then16, label %land.lhs.true.if.end22_crit_edge

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22

if.then16:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid18 = getelementptr inbounds %struct.rpc_task, ptr %13, i32 0, i32 22
  %17 = ptrtoint ptr %tk_pid18 to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %tk_pid18, align 8
  %conv19 = zext i16 %18 to i32
  br label %if.end22

if.end22:                                         ; preds = %if.then16, %land.lhs.true.if.end22_crit_edge, %if.end12.if.end22_crit_edge
  %.sink55 = phi i32 [ %conv19, %if.then16 ], [ -1, %land.lhs.true.if.end22_crit_edge ], [ -1, %if.end12.if.end22_crit_edge ]
  %snd_task_id21 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %snd_task_id21 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %.sink55, ptr %snd_task_id21, align 4
  %cong = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 7
  %20 = ptrtoint ptr %cong to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cong, align 8
  %cong23 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 4
  %22 = ptrtoint ptr %cong23 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %cong23, align 4
  %cwnd = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 8
  %23 = ptrtoint ptr %cwnd to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cwnd, align 4
  %cwnd24 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 5
  %25 = ptrtoint ptr %cwnd24 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %cwnd24, align 4
  %state25 = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %26 = ptrtoint ptr %state25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %state25, align 4
  %wait = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call3, i32 0, i32 6
  %28 = lshr i32 %27, 10
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = ptrtoint ptr %wait to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %30, ptr %wait, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprt_cong_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef readonly %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %task, null
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %tobool19.not = icmp eq ptr %31, null
  br i1 %tobool19.not, label %if.then18.if.end23_crit_edge, label %cond.true

if.then18.if.end23_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end23

cond.true:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #17
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %task_id21 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %task_id21 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 -1, ptr %task_id21, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else, %cond.true, %if.then18.if.end23_crit_edge
  %.sink = phi i32 [ -1, %if.else ], [ %33, %cond.true ], [ -1, %if.then18.if.end23_crit_edge ]
  %client_id22 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %client_id22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %.sink, ptr %client_id22, align 4
  %snd_task = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 37
  %36 = ptrtoint ptr %snd_task to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %snd_task, align 4
  %tobool24.not = icmp eq ptr %37, null
  br i1 %tobool24.not, label %if.end23.if.end34_crit_edge, label %land.lhs.true25

if.end23.if.end34_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

land.lhs.true25:                                  ; preds = %if.end23
  %state = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %38 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state, align 4
  %40 = and i32 %39, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool27.not = icmp eq i32 %40, 0
  br i1 %tobool27.not, label %if.then28, label %land.lhs.true25.if.end34_crit_edge

land.lhs.true25.if.end34_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.then28:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid30 = getelementptr inbounds %struct.rpc_task, ptr %37, i32 0, i32 22
  %41 = ptrtoint ptr %tk_pid30 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %tk_pid30, align 8
  %conv31 = zext i16 %42 to i32
  br label %if.end34

if.end34:                                         ; preds = %if.then28, %land.lhs.true25.if.end34_crit_edge, %if.end23.if.end34_crit_edge
  %.sink78 = phi i32 [ %conv31, %if.then28 ], [ -1, %land.lhs.true25.if.end34_crit_edge ], [ -1, %if.end23.if.end34_crit_edge ]
  %snd_task_id33 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %snd_task_id33 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %.sink78, ptr %snd_task_id33, align 4
  %cong = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 7
  %44 = ptrtoint ptr %cong to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cong, align 8
  %cong35 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 4
  %46 = ptrtoint ptr %cong35 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %cong35, align 4
  %cwnd = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 8
  %47 = ptrtoint ptr %cwnd to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %cwnd, align 4
  %cwnd36 = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 5
  %49 = ptrtoint ptr %cwnd36 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %cwnd36, align 4
  %state37 = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 18
  %50 = ptrtoint ptr %state37 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %state37, align 4
  %wait = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %call13, i32 0, i32 6
  %52 = lshr i32 %51, 10
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = ptrtoint ptr %wait to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %54, ptr %wait, align 4
  %56 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rctx, align 4
  %58 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %57, ptr noundef %__data, i64 noundef 1, ptr noundef %59, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprt_reserve(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprt_reserve(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_stream_read_data(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %err, i32 noundef %total) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i65 = icmp eq ptr %xprt, null
  br i1 %tobool.not.i65, label %if.end.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge, label %cond.true16.i

if.end.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_xs_stream_read_data.exit

cond.true16.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i, align 8
  %tobool2.not.i = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool2.not.i, ptr @.str.72, ptr %4
  %call.i66 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %arrayidx18.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx18.i, align 4
  %tobool19.not.i = icmp eq ptr %6, null
  %spec.select1.i = select i1 %tobool19.not.i, ptr @.str.72, ptr %6
  br label %trace_event_get_offsets_xs_stream_read_data.exit

trace_event_get_offsets_xs_stream_read_data.exit: ; preds = %cond.true16.i, %if.end.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge
  %call.i6673 = phi i32 [ %call.i66, %cond.true16.i ], [ 6, %if.end.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge ]
  %cond31.i = phi ptr [ %spec.select1.i, %cond.true16.i ], [ @.str.72, %if.end.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge ]
  %call32.i = tail call i32 @strlen(ptr noundef nonnull %cond31.i) #18
  %add33.i = add i32 %call32.i, 1
  %add39.i = add i32 %call.i6673, 25
  %add = add i32 %add39.i, %add33.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_xs_stream_read_data.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_xs_stream_read_data.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_xs_stream_read_data.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_xs_stream_read_data.exit
  %shl36.i = shl i32 %add33.i, 16
  %or38.i = or i32 %shl36.i, %add39.i
  %add.i74 = shl i32 %call.i6673, 16
  %or.i75 = add i32 %add.i74, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i75, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or38.i, ptr %__data_loc_port, align 4
  %err6 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %err6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %err, ptr %err6, align 4
  %total7 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %total7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %total, ptr %total7, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  br i1 %tobool.not.i65, label %cond.end18, label %cond.true

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %address_strings = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %11 = ptrtoint ptr %address_strings to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %address_strings, align 8
  %tobool10.not = icmp eq ptr %12, null
  %spec.select = select i1 %tobool10.not, ptr @.str.72, ptr %12
  %call2077 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %arrayidx27 = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %13 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx27, align 4
  %tobool28.not = icmp eq ptr %14, null
  %spec.select82 = select i1 %tobool28.not, ptr @.str.72, ptr %14
  br label %cond.end39

cond.end18:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %15 = call ptr @memcpy(ptr %add.ptr, ptr @.str.72, i32 7)
  br label %cond.end39

cond.end39:                                       ; preds = %cond.end18, %cond.true
  %cond40 = phi ptr [ @.str.72, %cond.end18 ], [ %spec.select82, %cond.true ]
  %16 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %16)
  %and22.pn.in = load i32, ptr %__data_loc_port, align 4
  %and22.pn = and i32 %and22.pn.in, 65535
  %add.ptr2381 = getelementptr i8, ptr %call3, i32 %and22.pn
  %call41 = call ptr @strcpy(ptr noundef %add.ptr2381, ptr noundef nonnull %cond40) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end39, %trace_event_get_offsets_xs_stream_read_data.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xs_stream_read_data(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %err, i32 noundef %total) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %xprt, null
  br i1 %tobool.not.i, label %entry.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge, label %cond.true16.i

entry.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_xs_stream_read_data.exit

cond.true16.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i, align 8
  %tobool2.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool2.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %arrayidx18.i = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx18.i, align 4
  %tobool19.not.i = icmp eq ptr %5, null
  %spec.select1.i = select i1 %tobool19.not.i, ptr @.str.72, ptr %5
  br label %trace_event_get_offsets_xs_stream_read_data.exit

trace_event_get_offsets_xs_stream_read_data.exit: ; preds = %cond.true16.i, %entry.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge
  %call.i96 = phi i32 [ %call.i, %cond.true16.i ], [ 6, %entry.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge ]
  %cond31.i = phi ptr [ %spec.select1.i, %cond.true16.i ], [ @.str.72, %entry.trace_event_get_offsets_xs_stream_read_data.exit_crit_edge ]
  %add.i97 = shl i32 %call.i96, 16
  %or.i98.in = add i32 %add.i97, 65536
  %or.i98 = or i32 %or.i98.in, 24
  %call32.i = tail call i32 @strlen(ptr noundef nonnull %cond31.i) #18
  %add33.i = add i32 %call32.i, 1
  %add35.i = add i32 %call.i96, 25
  %shl36.i = shl i32 %add33.i, 16
  %or38.i = or i32 %shl36.i, %add35.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_xs_stream_read_data.exit.if.end_crit_edge

trace_event_get_offsets_xs_stream_read_data.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_xs_stream_read_data.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_xs_stream_read_data.exit
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i90.not = icmp eq ptr %19, null
  br i1 %tobool.not.i90.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_xs_stream_read_data.exit.if.end_crit_edge
  %add39.i = add i32 %call.i96, 36
  %add12 = add i32 %add39.i, %add33.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i98, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or38.i, ptr %__data_loc_port, align 4
  %err17 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %err17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %err, ptr %err17, align 4
  %total18 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %total18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %total, ptr %total18, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  br i1 %tobool.not.i, label %cond.end31, label %cond.true

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %address_strings = getelementptr inbounds %struct.rpc_xprt, ptr %xprt, i32 0, i32 51
  %35 = ptrtoint ptr %address_strings to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %address_strings, align 8
  %tobool23.not = icmp eq ptr %36, null
  %spec.select = select i1 %tobool23.not, ptr @.str.72, ptr %36
  %call33100 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %arrayidx40 = getelementptr %struct.rpc_xprt, ptr %xprt, i32 0, i32 51, i32 1
  %37 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx40, align 4
  %tobool41.not = icmp eq ptr %38, null
  %spec.select105 = select i1 %tobool41.not, ptr @.str.72, ptr %38
  br label %cond.end52

cond.end31:                                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %39 = call ptr @memcpy(ptr %add.ptr, ptr @.str.72, i32 7)
  br label %cond.end52

cond.end52:                                       ; preds = %cond.end31, %cond.true
  %cond53 = phi ptr [ @.str.72, %cond.end31 ], [ %spec.select105, %cond.true ]
  %40 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %40)
  %and35.pn.in = load i32, ptr %__data_loc_port, align 4
  %and35.pn = and i32 %and35.pn.in, 65535
  %add.ptr36104 = getelementptr i8, ptr %call13, i32 %and35.pn
  %call54 = call ptr @strcpy(ptr noundef %add.ptr36104, ptr noundef nonnull %cond53) #19
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end52, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xs_stream_read_request(ptr noundef %__data, ptr nocapture noundef readonly %xs) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xs, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i57 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i57, ptr @.str.72, ptr %4
  %call.i58 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %arrayidx10.i = getelementptr %struct.rpc_xprt, ptr %xs, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx10.i, align 4
  %tobool11.not.i = icmp eq ptr %6, null
  %cond18.i = select i1 %tobool11.not.i, ptr @.str.72, ptr %6
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %cond18.i) #18
  %add20.i = add i32 %call19.i, 1
  %add26.i = add i32 %call.i58, 33
  %add = add i32 %add26.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add26.i
  %add.i = shl i32 %call.i58, 16
  %or.i = add i32 %add.i, 65568
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or25.i, ptr %__data_loc_port, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 32
  %9 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %address_strings.i, align 8
  %tobool7.not = icmp eq ptr %10, null
  %spec.select = select i1 %tobool7.not, ptr @.str.72, ptr %10
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and13 = and i32 %add26.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %11 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx10.i, align 4
  %tobool18.not = icmp eq ptr %12, null
  %cond25 = select i1 %tobool18.not, ptr @.str.72, ptr %12
  %call26 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond25) #19
  %xid = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 0, i32 1
  %13 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %xid, align 4
  %xid27 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %xid27 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %xid27, align 4
  %copied = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 3
  %16 = ptrtoint ptr %copied to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %copied, align 4
  %copied29 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call3, i32 0, i32 4
  %18 = ptrtoint ptr %copied29 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %copied29, align 4
  %len = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 2
  %19 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len, align 4
  %reclen = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %reclen to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %reclen, align 4
  %offset = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 1
  %22 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %offset, align 4
  %offset32 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call3, i32 0, i32 6
  %24 = ptrtoint ptr %offset32 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %offset32, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xs_stream_read_request(ptr noundef %__data, ptr nocapture noundef readonly %xs) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %xs, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 32
  %arrayidx10.i = getelementptr %struct.rpc_xprt, ptr %xs, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx10.i, align 4
  %tobool11.not.i = icmp eq ptr %5, null
  %cond18.i = select i1 %tobool11.not.i, ptr @.str.72, ptr %5
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %cond18.i) #18
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 33
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i82.not = icmp eq ptr %19, null
  br i1 %tobool.not.i82.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add26.i = add i32 %call.i, 44
  %add12 = add i32 %add26.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or25.i, ptr %__data_loc_port, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 32
  %33 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %address_strings.i, align 8
  %tobool20.not = icmp eq ptr %34, null
  %spec.select = select i1 %tobool20.not, ptr @.str.72, ptr %34
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and26 = and i32 %add22.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %35 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx10.i, align 4
  %tobool31.not = icmp eq ptr %36, null
  %cond38 = select i1 %tobool31.not, ptr @.str.72, ptr %36
  %call39 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond38) #19
  %xid = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 0, i32 1
  %37 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %xid, align 4
  %xid40 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %xid40 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %xid40, align 4
  %copied = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 3
  %40 = ptrtoint ptr %copied to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %copied, align 4
  %copied42 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call13, i32 0, i32 4
  %42 = ptrtoint ptr %copied42 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %copied42, align 4
  %len = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 2
  %43 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %len, align 4
  %reclen = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %reclen to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %reclen, align 4
  %offset = getelementptr inbounds %struct.sock_xprt, ptr %xs, i32 0, i32 4, i32 1
  %46 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %offset, align 4
  %offset45 = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %call13, i32 0, i32 6
  %48 = ptrtoint ptr %offset45 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %offset45, align 4
  %49 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rctx, align 4
  %51 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %50, ptr noundef %__data, i64 noundef 1, ptr noundef %52, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_getport(ptr noundef %__data, ptr nocapture noundef readonly %clnt, ptr nocapture noundef readonly %task, i32 noundef %bind_version) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tk_xprt.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %3 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_xprt.i, align 8
  %servername.i = getelementptr inbounds %struct.rpc_xprt, ptr %4, i32 0, i32 50
  %5 = ptrtoint ptr %servername.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %servername.i, align 4
  %tobool.not.i36 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i36, ptr @.str.72, ptr %6
  %call.i37 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add = add i32 %call.i37, 37
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i37, 16
  %or.i = add i32 %add.i, 65572
  %__data_loc_servername = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 7
  %7 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_servername, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %8 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %9 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv, ptr %task_id, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %cl_prog = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 8
  %14 = ptrtoint ptr %cl_prog to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cl_prog, align 4
  %program = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %program to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %program, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 9
  %17 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %version, align 4
  %20 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tk_xprt.i, align 8
  %prot = getelementptr inbounds %struct.rpc_xprt, ptr %21, i32 0, i32 6
  %22 = ptrtoint ptr %prot to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %prot, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 5
  %24 = ptrtoint ptr %protocol to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %protocol, align 4
  %bind_version6 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call3, i32 0, i32 6
  %25 = ptrtoint ptr %bind_version6 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %bind_version, ptr %bind_version6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 36
  %26 = load ptr, ptr %tk_xprt.i, align 8
  %servername9 = getelementptr inbounds %struct.rpc_xprt, ptr %26, i32 0, i32 50
  %27 = ptrtoint ptr %servername9 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %servername9, align 4
  %tobool10.not = icmp eq ptr %28, null
  %spec.select = select i1 %tobool10.not, ptr @.str.72, ptr %28
  %call13 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_getport(ptr noundef %__data, ptr nocapture noundef readonly %clnt, ptr nocapture noundef readonly %task, i32 noundef %bind_version) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tk_xprt.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 14
  %2 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_xprt.i, align 8
  %servername.i = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 50
  %4 = ptrtoint ptr %servername.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %servername.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65572
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i60.not = icmp eq ptr %19, null
  br i1 %tobool.not.i60.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 48
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_servername = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 7
  %31 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_servername, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %32 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %33 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv, ptr %task_id, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %cl_prog = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 8
  %38 = ptrtoint ptr %cl_prog to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cl_prog, align 4
  %program = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %program to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %program, align 4
  %cl_vers = getelementptr inbounds %struct.rpc_clnt, ptr %clnt, i32 0, i32 9
  %41 = ptrtoint ptr %cl_vers to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cl_vers, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %version, align 4
  %44 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %tk_xprt.i, align 8
  %prot = getelementptr inbounds %struct.rpc_xprt, ptr %45, i32 0, i32 6
  %46 = ptrtoint ptr %prot to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %prot, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 5
  %48 = ptrtoint ptr %protocol to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %protocol, align 4
  %bind_version17 = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %call13, i32 0, i32 6
  %49 = ptrtoint ptr %bind_version17 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %bind_version, ptr %bind_version17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 36
  %50 = load ptr, ptr %tk_xprt.i, align 8
  %servername21 = getelementptr inbounds %struct.rpc_xprt, ptr %50, i32 0, i32 50
  %51 = ptrtoint ptr %servername21 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %servername21, align 4
  %tobool22.not = icmp eq ptr %52, null
  %spec.select = select i1 %tobool22.not, ptr @.str.72, ptr %52
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %53 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rctx, align 4
  %55 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %54, ptr noundef %__data, i64 noundef 1, ptr noundef %56, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_setport(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %status, i16 noundef zeroext %port) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %status, ptr %status6, align 4
  %port7 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %port7 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %port, ptr %port7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_setport(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %status, i16 noundef zeroext %port) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %status, ptr %status17, align 4
  %port18 = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %port18 to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 %port, ptr %port18, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_pmap_register(ptr noundef %__data, i32 noundef %program, i32 noundef %version, i32 noundef %protocol, i16 noundef zeroext %port) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %program6 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %program6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %program, ptr %program6, align 4
  %version7 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %version7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %version, ptr %version7, align 4
  %protocol8 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %protocol8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %protocol, ptr %protocol8, align 4
  %conv = zext i16 %port to i32
  %port9 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %port9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %conv, ptr %port9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_pmap_register(ptr noundef %__data, i32 noundef %program, i32 noundef %version, i32 noundef %protocol, i16 noundef zeroext %port) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %program17 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %program17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %program, ptr %program17, align 4
  %version18 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %version18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %version, ptr %version18, align 4
  %protocol19 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %protocol19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %protocol, ptr %protocol19, align 4
  %conv = zext i16 %port to i32
  %port20 = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %port20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %conv, ptr %port20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_register(ptr noundef %__data, i32 noundef %program, i32 noundef %version, ptr noundef readonly %addr, ptr noundef readonly %netid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i41 = icmp eq ptr %addr, null
  %spec.select.i = select i1 %tobool.not.i41, ptr @.str.72, ptr %addr
  %call.i42 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %tobool6.not.i = icmp eq ptr %netid, null
  %cond10.i = select i1 %tobool6.not.i, ptr @.str.72, ptr %netid
  %call11.i = tail call i32 @strlen(ptr noundef nonnull %cond10.i) #18
  %add12.i = add i32 %call11.i, 1
  %add19.i = add i32 %call.i42, 25
  %add = add i32 %add19.i, %add12.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl16.i = shl i32 %add12.i, 16
  %or18.i = or i32 %shl16.i, %add19.i
  %add.i = shl i32 %call.i42, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_netid = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call3, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_netid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or18.i, ptr %__data_loc_netid, align 4
  %program8 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %program8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %program, ptr %program8, align 4
  %version9 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %version9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %version, ptr %version9, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and14 = and i32 %add19.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %call21 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond10.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_register(ptr noundef %__data, i32 noundef %program, i32 noundef %version, ptr noundef readonly %addr, ptr noundef readonly %netid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %addr, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %addr
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %tobool6.not.i = icmp eq ptr %netid, null
  %cond10.i = select i1 %tobool6.not.i, ptr @.str.72, ptr %netid
  %call11.i = tail call i32 @strlen(ptr noundef nonnull %cond10.i) #18
  %add12.i = add i32 %call11.i, 1
  %add14.i = add i32 %call.i, 25
  %shl16.i = shl i32 %add12.i, 16
  %or18.i = or i32 %shl16.i, %add14.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i65.not = icmp eq ptr %15, null
  br i1 %tobool.not.i65.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add19.i = add i32 %call.i, 36
  %add12 = add i32 %add19.i, %add12.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_netid = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call13, i32 0, i32 4
  %28 = ptrtoint ptr %__data_loc_netid to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or18.i, ptr %__data_loc_netid, align 4
  %program19 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %program19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %program, ptr %program19, align 4
  %version20 = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %version20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %version, ptr %version20, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and26 = and i32 %add14.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %call33 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond10.i) #19
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcb_unregister(ptr noundef %__data, i32 noundef %program, i32 noundef %version, ptr noundef readonly %netid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i26 = icmp eq ptr %netid, null
  %spec.select.i = select i1 %tobool.not.i26, ptr @.str.72, ptr %netid
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add = add i32 %call.i27, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_netid = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_netid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_netid, align 4
  %program7 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %program7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %program, ptr %program7, align 4
  %version8 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %version8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %version, ptr %version8, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcb_unregister(ptr noundef %__data, i32 noundef %program, i32 noundef %version, ptr noundef readonly %netid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %netid, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %netid
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i50.not = icmp eq ptr %15, null
  br i1 %tobool.not.i50.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_netid = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_netid to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_netid, align 4
  %program18 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %program18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %program, ptr %program18, align 4
  %version19 = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %version19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %version, ptr %version19, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xdr_msg_class(ptr noundef %__data, ptr nocapture noundef readonly %xdr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %xdr, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %xid, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %4, ptr %head_base, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %9 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %head_len, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1
  %12 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %tail_base, align 4
  %iov_len12 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1, i32 0, i32 1
  %15 = ptrtoint ptr %iov_len12 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %iov_len12, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %tail_len, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 5
  %18 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %page_len, align 4
  %page_len13 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %page_len13 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %page_len13, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 8
  %21 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call3, i32 0, i32 7
  %23 = ptrtoint ptr %msg_len to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %msg_len, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xdr_msg_class(ptr noundef %__data, ptr nocapture noundef readonly %xdr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %xdr, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %xid, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %28, ptr %head_base, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %33 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %head_len, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1
  %36 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %tail_base, align 4
  %iov_len25 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1, i32 0, i32 1
  %39 = ptrtoint ptr %iov_len25 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %iov_len25, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %tail_len, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 5
  %42 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %page_len, align 4
  %page_len26 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %page_len26 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %page_len26, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 8
  %45 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %call13, i32 0, i32 7
  %47 = ptrtoint ptr %msg_len to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %msg_len, align 4
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xdr_buf_class(ptr noundef %__data, i32 noundef %xid, ptr nocapture noundef readonly %xdr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %xid6 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %xid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %xid, ptr %xid6, align 4
  %4 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %xdr, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %head_base, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %7 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %head_len, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1
  %10 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %tail_base, align 4
  %iov_len13 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1, i32 0, i32 1
  %13 = ptrtoint ptr %iov_len13 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %iov_len13, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %tail_len, align 4
  %page_base = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 4
  %16 = ptrtoint ptr %page_base to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %page_base, align 4
  %page_base14 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 6
  %18 = ptrtoint ptr %page_base14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %page_base14, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 5
  %19 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %page_len, align 4
  %page_len15 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 7
  %21 = ptrtoint ptr %page_len15 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %page_len15, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 8
  %22 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call3, i32 0, i32 8
  %24 = ptrtoint ptr %msg_len to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %msg_len, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xdr_buf_class(ptr noundef %__data, i32 noundef %xid, ptr nocapture noundef readonly %xdr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %xid17 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %xid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %xid, ptr %xid17, align 4
  %28 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %xdr, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %head_base to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %head_base, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %31 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %iov_len, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %head_len to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %head_len, align 4
  %tail = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1
  %34 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tail, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %tail_base to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %35, ptr %tail_base, align 4
  %iov_len26 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 1, i32 0, i32 1
  %37 = ptrtoint ptr %iov_len26 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %iov_len26, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %tail_len to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %tail_len, align 4
  %page_base = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 4
  %40 = ptrtoint ptr %page_base to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %page_base, align 4
  %page_base27 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 6
  %42 = ptrtoint ptr %page_base27 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %page_base27, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 5
  %43 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %page_len, align 4
  %page_len28 = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 7
  %45 = ptrtoint ptr %page_len28 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %page_len28, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 8
  %46 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %call13, i32 0, i32 8
  %48 = ptrtoint ptr %msg_len to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %msg_len, align 4
  %49 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rctx, align 4
  %51 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %50, ptr noundef %__data, i64 noundef 1, ptr noundef %52, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_authenticate(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %auth_res) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 4
  %svc_status = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %svc_status to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %auth_res, ptr %svc_status, align 4
  %rq_auth_stat = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 38
  %7 = ptrtoint ptr %rq_auth_stat to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rq_auth_stat, align 4
  %auth_stat = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %auth_stat to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %auth_stat, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_authenticate(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %auth_res) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 4
  %svc_status = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %svc_status to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %auth_res, ptr %svc_status, align 4
  %rq_auth_stat = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 38
  %31 = ptrtoint ptr %rq_auth_stat to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rq_auth_stat, align 4
  %auth_stat = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %auth_stat to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %auth_stat, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_process(ptr noundef %__data, ptr noundef %rqst, ptr noundef readonly %name) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i72 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i72, ptr @.str.72, ptr %name
  %call.i73 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = add i32 %call.i73, 1
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 32
  %call5.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %if.end.trace_event_get_offsets_svc_process.exit_crit_edge, label %cond.true7.i

if.end.trace_event_get_offsets_svc_process.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_svc_process.exit

cond.true7.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call8.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %trace_event_get_offsets_svc_process.exit

trace_event_get_offsets_svc_process.exit:         ; preds = %cond.true7.i, %if.end.trace_event_get_offsets_svc_process.exit_crit_edge
  %cond11.i = phi ptr [ %call8.i, %cond.true7.i ], [ @.str.72, %if.end.trace_event_get_offsets_svc_process.exit_crit_edge ]
  %call12.i = tail call i32 @strlen(ptr noundef %cond11.i) #18
  %add13.i = add i32 %call12.i, 1
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %tobool27.not.i = icmp eq ptr %4, null
  %cond37.i = select i1 %tobool27.not.i, ptr @.str.72, ptr %xpt_remotebuf.i
  %add19.i = add i32 %add13.i, %add.i
  %call38.i = tail call i32 @strlen(ptr noundef %cond37.i) #18
  %add39.i = add i32 %call38.i, 1
  %add45.i = add i32 %add19.i, 32
  %add = add i32 %add45.i, %add39.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_svc_process.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_svc_process.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_svc_process.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_svc_process.exit
  %shl42.i = shl i32 %add39.i, 16
  %or44.i = or i32 %shl42.i, %add45.i
  %shl16.i = shl i32 %add13.i, 16
  %add15.i = add i32 %call.i73, 33
  %or18.i = or i32 %shl16.i, %add15.i
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call3, i32 0, i32 4
  %5 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_service, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call3, i32 0, i32 5
  %6 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or18.i, ptr %__data_loc_procedure, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call3, i32 0, i32 6
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or44.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %8 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %xid, align 4
  %rq_vers = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 29
  %11 = ptrtoint ptr %rq_vers to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rq_vers, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %vers, align 4
  %rq_proc = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 30
  %14 = ptrtoint ptr %rq_proc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_proc, align 8
  %proc = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %proc, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 32
  %call8 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and10 = and i32 %add15.i, 65535
  %add.ptr11 = getelementptr i8, ptr %call3, i32 %and10
  %call12 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool13.not = icmp eq ptr %call12, null
  br i1 %tobool13.not, label %if.end5.cond.end17_crit_edge, label %cond.true14

if.end5.cond.end17_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end17

cond.true14:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %call15 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %cond.end17

cond.end17:                                       ; preds = %cond.true14, %if.end5.cond.end17_crit_edge
  %cond18 = phi ptr [ %call15, %cond.true14 ], [ @.str.72, %if.end5.cond.end17_crit_edge ]
  %call19 = call ptr @strcpy(ptr noundef %add.ptr11, ptr noundef %cond18) #19
  %17 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %__data_loc_addr, align 4
  %and21 = and i32 %18, 65535
  %add.ptr22 = getelementptr i8, ptr %call3, i32 %and21
  %19 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %20, i32 0, i32 17
  %tobool26.not = icmp eq ptr %xpt_remotebuf, null
  %tobool30.not = icmp eq ptr %20, null
  %21 = select i1 %tobool30.not, i1 true, i1 %tobool26.not
  %cond40 = select i1 %21, ptr @.str.72, ptr %xpt_remotebuf
  %call41 = call ptr @strcpy(ptr noundef %add.ptr22, ptr noundef %cond40) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end17, %trace_event_get_offsets_svc_process.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_process(ptr noundef %__data, ptr noundef %rqst, ptr noundef readonly %name) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = add i32 %call.i, 1
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 32
  %call5.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %entry.trace_event_get_offsets_svc_process.exit_crit_edge, label %cond.true7.i

entry.trace_event_get_offsets_svc_process.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_svc_process.exit

cond.true7.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call8.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %trace_event_get_offsets_svc_process.exit

trace_event_get_offsets_svc_process.exit:         ; preds = %cond.true7.i, %entry.trace_event_get_offsets_svc_process.exit_crit_edge
  %cond11.i = phi ptr [ %call8.i, %cond.true7.i ], [ @.str.72, %entry.trace_event_get_offsets_svc_process.exit_crit_edge ]
  %call12.i = tail call i32 @strlen(ptr noundef %cond11.i) #18
  %add13.i = add i32 %call12.i, 1
  %add15.i = add i32 %call.i, 33
  %shl16.i = shl i32 %add13.i, 16
  %or18.i = or i32 %shl16.i, %add15.i
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %2 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %tobool27.not.i = icmp eq ptr %3, null
  %cond37.i = select i1 %tobool27.not.i, ptr @.str.72, ptr %xpt_remotebuf.i
  %add19.i = add i32 %add13.i, %add.i
  %call38.i = tail call i32 @strlen(ptr noundef %cond37.i) #18
  %add39.i = add i32 %call38.i, 1
  %add41.i = add i32 %add19.i, 32
  %shl42.i = shl i32 %add39.i, 16
  %or44.i = or i32 %shl42.i, %add41.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_svc_process.exit.if.end_crit_edge

trace_event_get_offsets_svc_process.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_svc_process.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_svc_process.exit
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i96.not = icmp eq ptr %17, null
  br i1 %tobool.not.i96.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_svc_process.exit.if.end_crit_edge
  %add45.i = add i32 %add19.i, 43
  %add12 = add i32 %add45.i, %add39.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call13, i32 0, i32 4
  %29 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_service, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call13, i32 0, i32 5
  %30 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or18.i, ptr %__data_loc_procedure, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call13, i32 0, i32 6
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or44.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %32 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %xid, align 4
  %rq_vers = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 29
  %35 = ptrtoint ptr %rq_vers to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rq_vers, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %vers, align 4
  %rq_proc = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 30
  %38 = ptrtoint ptr %rq_proc to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_proc, align 8
  %proc = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %proc, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 32
  %call20 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and22 = and i32 %add15.i, 65535
  %add.ptr23 = getelementptr i8, ptr %call13, i32 %and22
  %call24 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.end16.cond.end29_crit_edge, label %cond.true26

if.end16.cond.end29_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end29

cond.true26:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %call27 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %cond.end29

cond.end29:                                       ; preds = %cond.true26, %if.end16.cond.end29_crit_edge
  %cond30 = phi ptr [ %call27, %cond.true26 ], [ @.str.72, %if.end16.cond.end29_crit_edge ]
  %call31 = call ptr @strcpy(ptr noundef %add.ptr23, ptr noundef %cond30) #19
  %41 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %__data_loc_addr, align 4
  %and33 = and i32 %42, 65535
  %add.ptr34 = getelementptr i8, ptr %call13, i32 %and33
  %43 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %44, i32 0, i32 17
  %tobool38.not = icmp eq ptr %xpt_remotebuf, null
  %tobool42.not = icmp eq ptr %44, null
  %45 = select i1 %tobool42.not, i1 true, i1 %tobool38.not
  %cond52 = select i1 %45, ptr @.str.72, ptr %xpt_remotebuf
  %call53 = call ptr @strcpy(ptr noundef %add.ptr34, ptr noundef %cond52) #19
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end29, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_rqst_event(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %call.i26 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i26, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i26, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %6 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %xid, align 4
  %rq_flags = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 33
  %9 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rq_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %12 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 17
  %tobool7.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool7.not, ptr @.str.72, ptr %xpt_remotebuf
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_rqst_event(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %2 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %30 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %xid, align 4
  %rq_flags = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 33
  %33 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rq_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %36 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %37, i32 0, i32 17
  %tobool19.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool19.not, ptr @.str.72, ptr %xpt_remotebuf
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_rqst_status(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %call.i29 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i29, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i29, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call3, i32 0, i32 4
  %5 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %6 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %xid, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %status, ptr %status6, align 4
  %rq_flags = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 33
  %10 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rq_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %13 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %14, i32 0, i32 17
  %tobool8.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %xpt_remotebuf
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_rqst_status(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %2 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call13, i32 0, i32 4
  %29 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %30 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %xid, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %status, ptr %status17, align 4
  %rq_flags = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 33
  %34 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rq_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %37 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %38, i32 0, i32 17
  %tobool20.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool20.not, ptr @.str.72, ptr %xpt_remotebuf
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_create_err(ptr noundef %__data, ptr noundef readonly %program, ptr noundef readonly %protocol, ptr nocapture noundef readonly %sap, i32 noundef %salen, ptr noundef %xprt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i47 = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i47, ptr @.str.72, ptr %program
  %call.i48 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %tobool6.not.i = icmp eq ptr %protocol, null
  %cond10.i = select i1 %tobool6.not.i, ptr @.str.72, ptr %protocol
  %call11.i = tail call i32 @strlen(ptr noundef nonnull %cond10.i) #18
  %add12.i = add i32 %call11.i, 1
  %add19.i = add i32 %call.i48, 49
  %add = add i32 %add19.i, %add12.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl16.i = shl i32 %add12.i, 16
  %or18.i = or i32 %shl16.i, %add19.i
  %add.i = shl i32 %call.i48, 16
  %or.i = add i32 %add.i, 65584
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %__data_loc_protocol = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call3, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_protocol to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or18.i, ptr %__data_loc_protocol, align 4
  %5 = ptrtoint ptr %xprt to i32
  %error = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %error, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 48
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and13 = and i32 %add19.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %call20 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond10.i) #19
  %addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call3, i32 0, i32 4
  %7 = call i32 @llvm.umin.i32(i32 %salen, i32 28)
  %8 = call ptr @memcpy(ptr %addr, ptr %sap, i32 %7)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_create_err(ptr noundef %__data, ptr noundef readonly %program, ptr noundef readonly %protocol, ptr nocapture noundef readonly %sap, i32 noundef %salen, ptr noundef %xprt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %program
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 48
  %tobool6.not.i = icmp eq ptr %protocol, null
  %cond10.i = select i1 %tobool6.not.i, ptr @.str.72, ptr %protocol
  %call11.i = tail call i32 @strlen(ptr noundef nonnull %cond10.i) #18
  %add12.i = add i32 %call11.i, 1
  %add14.i = add i32 %call.i, 49
  %shl16.i = shl i32 %add12.i, 16
  %or18.i = or i32 %shl16.i, %add14.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i72.not = icmp eq ptr %15, null
  br i1 %tobool.not.i72.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add19.i = add i32 %call.i, 60
  %add12 = add i32 %add19.i, %add12.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %__data_loc_protocol = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call13, i32 0, i32 3
  %28 = ptrtoint ptr %__data_loc_protocol to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or18.i, ptr %__data_loc_protocol, align 4
  %29 = ptrtoint ptr %xprt to i32
  %error = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %error, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 48
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %and25 = and i32 %add14.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %call32 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond10.i) #19
  %addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %call13, i32 0, i32 4
  %31 = call i32 @llvm.umin.i32(i32 %salen, i32 28)
  %32 = call ptr @memcpy(ptr %addr, ptr %sap, i32 %31)
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_enqueue(ptr noundef %__data, ptr noundef readonly %xprt, ptr noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i32 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i32, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i32, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %tobool6.not = icmp eq ptr %rqst, null
  br i1 %tobool6.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 46
  %4 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rq_task, align 4
  %pid = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 68
  %6 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pid, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %7, %cond.true ], [ 0, %if.end5.cond.end_crit_edge ]
  %pid7 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %pid7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %cond, ptr %pid7, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %9 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %tobool9.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool9.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call16 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_enqueue(ptr noundef %__data, ptr noundef readonly %xprt, ptr noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %tobool17.not = icmp eq ptr %rqst, null
  br i1 %tobool17.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %rq_task = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 46
  %28 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %rq_task, align 4
  %pid = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 68
  %30 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pid, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %31, %cond.true ], [ 0, %if.end16.cond.end_crit_edge ]
  %pid18 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %pid18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %cond, ptr %pid18, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %33 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %tobool21.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool21.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call28 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_event(ptr noundef %__data, ptr noundef readonly %xprt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i23 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i23, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i23, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %4 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %tobool7.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool7.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_event(ptr noundef %__data, ptr noundef readonly %xprt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %28 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %tobool19.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool19.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_accept(ptr noundef %__data, ptr noundef readonly %xprt, ptr noundef readonly %service) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i52 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = add i32 %call.i52, 1
  %3 = ptrtoint ptr %xprt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %xprt, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %tobool7.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool7.not.i, ptr @.str.72, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #18
  %add15.i = add i32 %call14.i, 1
  %tobool22.not.i = icmp eq ptr %service, null
  %cond26.i = select i1 %tobool22.not.i, ptr @.str.72, ptr %service
  %add21.i = add i32 %add15.i, %add.i
  %call27.i = tail call i32 @strlen(ptr noundef nonnull %cond26.i) #18
  %add28.i = add i32 %call27.i, 1
  %add35.i = add i32 %add21.i, 20
  %add = add i32 %add35.i, %add28.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %shl32.i = shl i32 %add28.i, 16
  %or34.i = or i32 %shl32.i, %add35.i
  %shl18.i = shl i32 %add15.i, 16
  %add17.i = add i32 %call.i52, 21
  %or20.i = or i32 %shl18.i, %add17.i
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 20
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_protocol = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_protocol to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_protocol, align 4
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or34.i, ptr %__data_loc_service, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %tobool8.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and13 = and i32 %add17.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %10 = ptrtoint ptr %xprt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %xprt, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool15.not = icmp eq ptr %13, null
  %cond21 = select i1 %tobool15.not, ptr @.str.72, ptr %13
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #19
  %14 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %__data_loc_service, align 4
  %and24 = and i32 %15, 65535
  %add.ptr25 = getelementptr i8, ptr %call3, i32 %and24
  %call31 = call ptr @strcpy(ptr noundef %add.ptr25, ptr noundef nonnull %cond26.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_accept(ptr noundef %__data, ptr noundef readonly %xprt, ptr noundef readonly %service) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = add i32 %call.i, 1
  %shl.i = shl i32 %add.i, 16
  %or.i = or i32 %shl.i, 20
  %2 = ptrtoint ptr %xprt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %xprt, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool7.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool7.not.i, ptr @.str.72, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #18
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call.i, 21
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %tobool22.not.i = icmp eq ptr %service, null
  %cond26.i = select i1 %tobool22.not.i, ptr @.str.72, ptr %service
  %add21.i = add i32 %add15.i, %add.i
  %call27.i = tail call i32 @strlen(ptr noundef nonnull %cond26.i) #18
  %add28.i = add i32 %call27.i, 1
  %add30.i = add i32 %add21.i, 20
  %shl32.i = shl i32 %add28.i, 16
  %or34.i = or i32 %shl32.i, %add30.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i.not = icmp eq ptr %19, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add35.i = add i32 %add21.i, 31
  %add12 = add i32 %add35.i, %add28.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #15
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_protocol = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_protocol to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_protocol, align 4
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or34.i, ptr %__data_loc_service, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool20.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %34 = ptrtoint ptr %xprt to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %xprt, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool27.not = icmp eq ptr %37, null
  %cond33 = select i1 %tobool27.not, ptr @.str.72, ptr %37
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #19
  %38 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %__data_loc_service, align 4
  %and36 = and i32 %39, 65535
  %add.ptr37 = getelementptr i8, ptr %call13, i32 %and36
  %call43 = call ptr @strcpy(ptr noundef %add.ptr37, ptr noundef nonnull %cond26.i) #19
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %15, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_xprt_dequeue(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %call.i29 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i29, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i29, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %6 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %flags, align 4
  %call6 = call i64 @ktime_get() #15
  %rq_qtime = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 34
  %11 = ptrtoint ptr %rq_qtime to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %rq_qtime, align 8
  %sub = sub i64 %call6, %12
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub)
  %cmp8.i.i = icmp slt i64 %sub, 0
  %13 = call i64 @llvm.abs.i64(i64 %sub, i1 false) #15
  %14 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %13, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i = extractvalue { i64, i32 } %14, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %14, 1
  %15 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %13, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #20, !srcloc !1887
  %asmresult10.i.i.i = extractvalue { i64, i32 } %15, 0
  %div1811.i.i = lshr i64 %asmresult10.i.i.i, 9
  %sub210.i.i = sub nsw i64 0, %div1811.i.i
  %cond213.i.i = select i1 %cmp8.i.i, i64 %sub210.i.i, i64 %div1811.i.i
  %conv = trunc i64 %cond213.i.i to i32
  %wakeup = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %wakeup to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv, ptr %wakeup, align 4
  %17 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %18, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %19 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %20, i32 0, i32 17
  %tobool10.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool10.not, ptr @.str.72, ptr %xpt_remotebuf
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_xprt_dequeue(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %2 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %30 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %31, i32 0, i32 5
  %32 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %flags, align 4
  %call17 = call i64 @ktime_get() #15
  %rq_qtime = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 34
  %35 = ptrtoint ptr %rq_qtime to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %rq_qtime, align 8
  %sub18 = sub i64 %call17, %36
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub18)
  %cmp8.i.i = icmp slt i64 %sub18, 0
  %37 = call i64 @llvm.abs.i64(i64 %sub18, i1 false) #15
  %38 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %37, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i = extractvalue { i64, i32 } %38, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %38, 1
  %39 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %37, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #20, !srcloc !1887
  %asmresult10.i.i.i = extractvalue { i64, i32 } %39, 0
  %div1811.i.i = lshr i64 %asmresult10.i.i.i, 9
  %sub210.i.i = sub nsw i64 0, %div1811.i.i
  %cond213.i.i = select i1 %cmp8.i.i, i64 %sub210.i.i, i64 %div1811.i.i
  %conv = trunc i64 %cond213.i.i to i32
  %wakeup = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %wakeup to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %conv, ptr %wakeup, align 4
  %41 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %__data_loc_addr, align 4
  %and21 = and i32 %42, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and21
  %43 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %44, i32 0, i32 17
  %tobool23.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool23.not, ptr @.str.72, ptr %xpt_remotebuf
  %call27 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_wake_up(ptr noundef %__data, i32 noundef %pid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %pid6 = getelementptr inbounds %struct.trace_event_raw_svc_wake_up, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %pid, ptr %pid6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_wake_up(ptr noundef %__data, i32 noundef %pid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pid17 = getelementptr inbounds %struct.trace_event_raw_svc_wake_up, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %pid, ptr %pid17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_alloc_arg_err(ptr noundef %__data, i32 noundef %pages) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %pages6 = getelementptr inbounds %struct.trace_event_raw_svc_alloc_arg_err, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pages6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %pages, ptr %pages6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_alloc_arg_err(ptr noundef %__data, i32 noundef %pages) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pages17 = getelementptr inbounds %struct.trace_event_raw_svc_alloc_arg_err, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pages17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %pages, ptr %pages17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_stats_latency(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call.i44 = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool.not.i45 = icmp eq ptr %call.i44, null
  br i1 %tobool.not.i45, label %if.end.trace_event_get_offsets_svc_stats_latency.exit_crit_edge, label %cond.true.i

if.end.trace_event_get_offsets_svc_stats_latency.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_svc_stats_latency.exit

cond.true.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call2.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %trace_event_get_offsets_svc_stats_latency.exit

trace_event_get_offsets_svc_stats_latency.exit:   ; preds = %cond.true.i, %if.end.trace_event_get_offsets_svc_stats_latency.exit_crit_edge
  %cond.i = phi ptr [ %call2.i, %cond.true.i ], [ @.str.72, %if.end.trace_event_get_offsets_svc_stats_latency.exit_crit_edge ]
  %call3.i = tail call i32 @strlen(ptr noundef %cond.i) #18
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %call15.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add16.i = add i32 %call15.i, 1
  %add22.i = add i32 %call3.i, 25
  %add = add i32 %add22.i, %add16.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_svc_stats_latency.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_svc_stats_latency.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_svc_stats_latency.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_svc_stats_latency.exit
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add22.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_procedure, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or21.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %7 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %xid, align 4
  %call6 = call i64 @ktime_get() #15
  %rq_stime = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 41
  %10 = ptrtoint ptr %rq_stime to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %rq_stime, align 8
  %sub = sub i64 %call6, %11
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub)
  %cmp8.i.i = icmp slt i64 %sub, 0
  %12 = call i64 @llvm.abs.i64(i64 %sub, i1 false) #15
  %13 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %12, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i = extractvalue { i64, i32 } %13, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %13, 1
  %14 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %12, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #20, !srcloc !1887
  %asmresult10.i.i.i = extractvalue { i64, i32 } %14, 0
  %div1811.i.i = lshr i64 %asmresult10.i.i.i, 9
  %sub210.i.i = sub nsw i64 0, %div1811.i.i
  %cond213.i.i = select i1 %cmp8.i.i, i64 %sub210.i.i, i64 %div1811.i.i
  %conv = trunc i64 %cond213.i.i to i32
  %execute = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %execute to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv, ptr %execute, align 4
  %16 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %__data_loc_procedure, align 4
  %and = and i32 %17, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %call9 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %call11 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi ptr [ %call11, %cond.true ], [ @.str.72, %if.end5.cond.end_crit_edge ]
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef %cond) #19
  %18 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %__data_loc_addr, align 4
  %and14 = and i32 %19, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %20 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %21, i32 0, i32 17
  %tobool16.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool16.not, ptr @.str.72, ptr %xpt_remotebuf
  %call24 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %trace_event_get_offsets_svc_stats_latency.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_stats_latency(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %call.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.trace_event_get_offsets_svc_stats_latency.exit_crit_edge, label %cond.true.i

entry.trace_event_get_offsets_svc_stats_latency.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %trace_event_get_offsets_svc_stats_latency.exit

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call2.i = tail call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %trace_event_get_offsets_svc_stats_latency.exit

trace_event_get_offsets_svc_stats_latency.exit:   ; preds = %cond.true.i, %entry.trace_event_get_offsets_svc_stats_latency.exit_crit_edge
  %cond.i = phi ptr [ %call2.i, %cond.true.i ], [ @.str.72, %entry.trace_event_get_offsets_svc_stats_latency.exit_crit_edge ]
  %call3.i = tail call i32 @strlen(ptr noundef %cond.i) #18
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %2 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %call15.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call3.i, 25
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_svc_stats_latency.exit.if.end_crit_edge

trace_event_get_offsets_svc_stats_latency.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_svc_stats_latency.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_svc_stats_latency.exit
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i69.not = icmp eq ptr %17, null
  br i1 %tobool.not.i69.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_svc_stats_latency.exit.if.end_crit_edge
  %add22.i = add i32 %call3.i, 36
  %add12 = add i32 %add22.i, %add16.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_procedure, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or21.i, ptr %__data_loc_addr, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %31 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %xid, align 4
  %call17 = call i64 @ktime_get() #15
  %rq_stime = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 41
  %34 = ptrtoint ptr %rq_stime to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %rq_stime, align 8
  %sub18 = sub i64 %call17, %35
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub18)
  %cmp8.i.i = icmp slt i64 %sub18, 0
  %36 = call i64 @llvm.abs.i64(i64 %sub18, i1 false) #15
  %37 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %36, i32 0) #20, !srcloc !1886
  %asmresult.i.i.i = extractvalue { i64, i32 } %37, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %37, 1
  %38 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %36, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #20, !srcloc !1887
  %asmresult10.i.i.i = extractvalue { i64, i32 } %38, 0
  %div1811.i.i = lshr i64 %asmresult10.i.i.i, 9
  %sub210.i.i = sub nsw i64 0, %div1811.i.i
  %cond213.i.i = select i1 %cmp8.i.i, i64 %sub210.i.i, i64 %div1811.i.i
  %conv = trunc i64 %cond213.i.i to i32
  %execute = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %execute to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %conv, ptr %execute, align 4
  %40 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %__data_loc_procedure, align 4
  %and21 = and i32 %41, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and21
  %call22 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  %tobool23.not = icmp eq ptr %call22, null
  br i1 %tobool23.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %call24 = call ptr @svc_proc_name(ptr noundef %rqst) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi ptr [ %call24, %cond.true ], [ @.str.72, %if.end16.cond.end_crit_edge ]
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef %cond) #19
  %42 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %__data_loc_addr, align 4
  %and27 = and i32 %43, 65535
  %add.ptr28 = getelementptr i8, ptr %call13, i32 %and27
  %44 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %45, i32 0, i32 17
  %tobool29.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool29.not, ptr @.str.72, ptr %xpt_remotebuf
  %call37 = call ptr @strcpy(ptr noundef %add.ptr28, ptr noundef nonnull %spec.select) #19
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_deferred_event(ptr noundef %__data, ptr noundef %dr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xprt.i = getelementptr inbounds %struct.svc_deferred_req, ptr %dr, i32 0, i32 1
  %3 = ptrtoint ptr %xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %xprt.i, align 4
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i30, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %dr6 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %dr6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dr, ptr %dr6, align 4
  %args = getelementptr inbounds %struct.svc_deferred_req, ptr %dr, i32 0, i32 9
  %xprt_hlen = getelementptr inbounds %struct.svc_deferred_req, ptr %dr, i32 0, i32 7
  %7 = ptrtoint ptr %xprt_hlen to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %xprt_hlen, align 4
  %shr = lshr i32 %8, 2
  %add.ptr = getelementptr i32, ptr %args, i32 %shr
  %9 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %add.ptr, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %add.ptr8 = getelementptr i8, ptr %call3, i32 20
  %12 = ptrtoint ptr %xprt.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %xprt.i, align 4
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 17
  %tobool10.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool10.not, ptr @.str.72, ptr %xpt_remotebuf
  %call14 = call ptr @strcpy(ptr noundef %add.ptr8, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_deferred_event(ptr noundef %__data, ptr noundef %dr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xprt.i = getelementptr inbounds %struct.svc_deferred_req, ptr %dr, i32 0, i32 1
  %2 = ptrtoint ptr %xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %xprt.i, align 4
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %dr17 = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %dr17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %dr, ptr %dr17, align 4
  %args = getelementptr inbounds %struct.svc_deferred_req, ptr %dr, i32 0, i32 9
  %xprt_hlen = getelementptr inbounds %struct.svc_deferred_req, ptr %dr, i32 0, i32 7
  %31 = ptrtoint ptr %xprt_hlen to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %xprt_hlen, align 4
  %shr = lshr i32 %32, 2
  %add.ptr = getelementptr i32, ptr %args, i32 %shr
  %33 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %add.ptr, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %add.ptr20 = getelementptr i8, ptr %call13, i32 20
  %36 = ptrtoint ptr %xprt.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %xprt.i, align 4
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %37, i32 0, i32 17
  %tobool22.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool22.not, ptr @.str.72, ptr %xpt_remotebuf
  %call26 = call ptr @strcpy(ptr noundef %add.ptr20, ptr noundef nonnull %spec.select) #19
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_new_socket(ptr noundef %__data, ptr nocapture noundef readonly %socket) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %type = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 1
  %3 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %type, align 4
  %conv = sext i16 %4 to i32
  %type6 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %type6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %type6, align 4
  %sk = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %6 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sk, align 16
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %skc_family, align 8
  %conv7 = zext i16 %9 to i32
  %family = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %family to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv7, ptr %family, align 4
  %11 = load ptr, ptr %sk, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %13)
  %cmp = icmp eq i8 %13, 10
  %listener = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %call3, i32 0, i32 3
  %frombool = zext i1 %cmp to i8
  %14 = ptrtoint ptr %listener to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %frombool, ptr %listener, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_new_socket(ptr noundef %__data, ptr nocapture noundef readonly %socket) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %type = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 1
  %27 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %type, align 4
  %conv = sext i16 %28 to i32
  %type17 = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %type17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %type17, align 4
  %sk = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %30 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sk, align 16
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %skc_family, align 8
  %conv18 = zext i16 %33 to i32
  %family = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %family to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv18, ptr %family, align 4
  %35 = load ptr, ptr %sk, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %35, i32 0, i32 4
  %36 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %37)
  %cmp = icmp eq i8 %37, 10
  %listener = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %call13, i32 0, i32 3
  %frombool = zext i1 %cmp to i8
  %38 = ptrtoint ptr %listener to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %frombool, ptr %listener, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_marker(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %marker) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i28 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i28, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i28, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %and = and i32 %marker, 2147483647
  %length = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and, ptr %length, align 4
  %last = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %call3, i32 0, i32 2
  %marker.lobit = lshr i32 %marker, 31
  %5 = trunc i32 %marker.lobit to i8
  %6 = ptrtoint ptr %last to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %last, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %tobool10.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool10.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call13 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_marker(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %marker) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %and17 = and i32 %marker, 2147483647
  %length = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %and17, ptr %length, align 4
  %last = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %call13, i32 0, i32 2
  %marker.lobit = lshr i32 %marker, 31
  %29 = trunc i32 %marker.lobit to i8
  %30 = ptrtoint ptr %last to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %last, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %tobool22.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool22.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_class(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %result) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i26 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i26, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i26, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %result6 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %result6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %result, ptr %result6, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %5 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %tobool8.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool8.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_class(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %result) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %result17 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %result17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %result, ptr %result17, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %29 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool20.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_tcp_recv_short(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %expected, i32 noundef %received) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i29 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i29, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i29, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %expected6 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %expected6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %expected, ptr %expected6, align 4
  %received7 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %received7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %received, ptr %received7, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %6 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %tobool9.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool9.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_tcp_recv_short(ptr noundef %__data, ptr noundef readonly %xprt, i32 noundef %expected, i32 noundef %received) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %expected17 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %expected17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %expected, ptr %expected17, align 4
  %received18 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %received18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %received, ptr %received18, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %30 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %tobool21.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool21.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_tcp_state(ptr noundef %__data, ptr noundef readonly %xprt, ptr nocapture noundef readonly %socket) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add = add i32 %call.i27, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %4 = ptrtoint ptr %socket to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %socket, align 128
  %socket_state = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %socket_state to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %socket_state, align 4
  %sk = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %7 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sk, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %8, i32 0, i32 4
  %9 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %10 to i32
  %sock_state = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %sock_state to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv, ptr %sock_state, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %12 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %tobool7.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool7.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_tcp_state(ptr noundef %__data, ptr noundef readonly %xprt, ptr nocapture noundef readonly %socket) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %28 = ptrtoint ptr %socket to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %socket, align 128
  %socket_state = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %socket_state to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %socket_state, align 4
  %sk = getelementptr inbounds %struct.socket, ptr %socket, i32 0, i32 4
  %31 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %sk, align 16
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %32, i32 0, i32 4
  %33 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %34 to i32
  %sock_state = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %sock_state to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %conv, ptr %sock_state, align 4
  %xpt_flags = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 5
  %36 = ptrtoint ptr %xpt_flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %xpt_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %tobool19.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool19.not, ptr @.str.72, ptr %xpt_remotebuf.i
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcsock_accept_class(ptr noundef %__data, ptr nocapture noundef readonly %xprt, ptr noundef readonly %service, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i25 = icmp eq ptr %service, null
  %spec.select.i = select i1 %tobool.not.i25, ptr @.str.72, ptr %service
  %call.i26 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add = add i32 %call.i26, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i26, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_service, align 4
  %status7 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %status7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %status, ptr %status7, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 19
  %5 = ptrtoint ptr %xpt_net to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %xpt_net, align 4
  %inum = getelementptr inbounds %struct.net, ptr %6, i32 0, i32 14, i32 2
  %7 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %netns_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcsock_accept_class(ptr noundef %__data, ptr nocapture noundef readonly %xprt, ptr noundef readonly %service, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %service, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %service
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i49.not = icmp eq ptr %15, null
  br i1 %tobool.not.i49.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_service, align 4
  %status18 = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %status18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %status, ptr %status18, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %xprt, i32 0, i32 19
  %29 = ptrtoint ptr %xpt_net to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %xpt_net, align 4
  %inum = getelementptr inbounds %struct.net, ptr %30, i32 0, i32 14, i32 2
  %31 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %netns_ino, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_cache_event(ptr noundef %__data, ptr nocapture noundef readonly %cd, ptr noundef %h) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %name.i = getelementptr inbounds %struct.cache_detail, ptr %cd, i32 0, i32 4
  %3 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name.i, align 8
  %tobool.not.i24 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i24, ptr @.str.72, ptr %4
  %call.i25 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add = add i32 %call.i25, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i25, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %h6 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %h6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %h, ptr %h6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %7 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name.i, align 8
  %tobool9.not = icmp eq ptr %8, null
  %spec.select = select i1 %tobool9.not, ptr @.str.72, ptr %8
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_cache_event(ptr noundef %__data, ptr nocapture noundef readonly %cd, ptr noundef %h) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %name.i = getelementptr inbounds %struct.cache_detail, ptr %cd, i32 0, i32 4
  %2 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i48.not = icmp eq ptr %17, null
  br i1 %tobool.not.i48.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #15
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %h17 = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %h17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %h, ptr %h17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %31 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %name.i, align 8
  %tobool21.not = icmp eq ptr %32, null
  %spec.select = select i1 %tobool21.not, ptr @.str.72, ptr %32
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #19
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %13, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_register_class(ptr noundef %__data, ptr noundef readonly %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i35 = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i35, ptr @.str.72, ptr %program
  %call.i36 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add = add i32 %call.i36, 29
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i36, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call3, i32 0, i32 6
  %3 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %version7 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %version7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %version, ptr %version7, align 4
  %family8 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %family8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %family, ptr %family8, align 4
  %protocol9 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %protocol9 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %protocol, ptr %protocol9, align 4
  %port10 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call3, i32 0, i32 4
  %7 = ptrtoint ptr %port10 to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %port, ptr %port10, align 2
  %error11 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call3, i32 0, i32 5
  %8 = ptrtoint ptr %error11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %error, ptr %error11, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_register_class(ptr noundef %__data, ptr noundef readonly %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %program
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65564
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i59.not = icmp eq ptr %15, null
  br i1 %tobool.not.i59.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 40
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call13, i32 0, i32 6
  %27 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %version18 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %version18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %version, ptr %version18, align 4
  %family19 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %family19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %family, ptr %family19, align 4
  %protocol20 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %protocol20 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %protocol, ptr %protocol20, align 4
  %port21 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call13, i32 0, i32 4
  %31 = ptrtoint ptr %port21 to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %port, ptr %port21, align 2
  %error22 = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %call13, i32 0, i32 5
  %32 = ptrtoint ptr %error22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %error, ptr %error22, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svc_unregister(ptr noundef %__data, ptr noundef readonly %program, i32 noundef %version, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1883

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1884

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i26 = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i26, ptr @.str.72, ptr %program
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add = add i32 %call.i27, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %version7 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %version7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %version, ptr %version7, align 4
  %error8 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %error8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %error, ptr %error8, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svc_unregister(ptr noundef %__data, ptr noundef readonly %program, i32 noundef %version, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1885
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1885
  %tobool.not.i = icmp eq ptr %program, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.72, ptr %program
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #18
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i50.not = icmp eq ptr %15, null
  br i1 %tobool.not.i50.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1873) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_program, align 4
  %version18 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %version18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %version, ptr %version18, align 4
  %error19 = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %error19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %error, ptr %error19, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #19
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_xdr_buf_class(ptr noundef %__data, ptr noundef %task, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %xdr to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_clnt_class(ptr noundef %__data, ptr noundef %clnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %clnt to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_clnt_new(ptr noundef %__data, ptr noundef %clnt, ptr noundef %xprt, ptr noundef %program, ptr noundef %server) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %clnt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %xprt to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %program to i32
  %conv8 = zext i32 %2 to i64
  %3 = ptrtoint ptr %server to i32
  %conv12 = zext i32 %3 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_clnt_new_err(ptr noundef %__data, ptr noundef %program, ptr noundef %server, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %program to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %server to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %error to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_clnt_clone_err(ptr noundef %__data, ptr noundef %clnt, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %clnt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %error to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_task_status(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_request(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_task_running(ptr noundef %__data, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %action to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_task_queued(ptr noundef %__data, ptr noundef %task, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %q to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_failure(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_reply_event(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_buf_alloc(ptr noundef %__data, ptr noundef %task, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_call_rpcerror(ptr noundef %__data, ptr noundef %task, i32 noundef %tk_status, i32 noundef %rpc_status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %tk_status to i64
  %conv8 = zext i32 %rpc_status to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_stats_latency(ptr noundef %__data, ptr noundef %task, i64 noundef %backlog, i64 noundef %rtt, i64 noundef %execute) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %backlog, i64 noundef %rtt, i64 noundef %execute) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_xdr_overflow(ptr noundef %__data, ptr noundef %xdr, i32 noundef %requested) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xdr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %requested to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_xdr_alignment(ptr noundef %__data, ptr noundef %xdr, i32 noundef %offset, i32 noundef %copied) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xdr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %offset to i64
  %conv8 = zext i32 %copied to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xs_socket_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %socket to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xs_socket_event_done(ptr noundef %__data, ptr noundef %xprt, ptr noundef %socket, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %socket to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %error to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_socket_nospace(ptr noundef %__data, ptr noundef %rqst, ptr noundef %transport) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %transport to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_xprt_lifetime_class(ptr noundef %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpc_xprt_event(ptr noundef %__data, ptr noundef %xprt, i32 noundef %xid, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %xid to i64
  %conv8 = zext i32 %status to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprt_transmit(ptr noundef %__data, ptr noundef %rqst, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprt_retransmit(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprt_ping(ptr noundef %__data, ptr noundef %xprt, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprt_writelock_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %task to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprt_cong_event(ptr noundef %__data, ptr noundef %xprt, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %task to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprt_reserve(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xs_stream_read_data(ptr noundef %__data, ptr noundef %xprt, i32 noundef %err, i32 noundef %total) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %err to i64
  %conv8 = zext i32 %total to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xs_stream_read_request(ptr noundef %__data, ptr noundef %xs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xs to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcb_getport(ptr noundef %__data, ptr noundef %clnt, ptr noundef %task, i32 noundef %bind_version) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %clnt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %task to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %bind_version to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcb_setport(ptr noundef %__data, ptr noundef %task, i32 noundef %status, i16 noundef zeroext %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  %conv8 = zext i16 %port to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_pmap_register(ptr noundef %__data, i32 noundef %program, i32 noundef %version, i32 noundef %protocol, i16 noundef zeroext %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %program to i64
  %conv4 = zext i32 %version to i64
  %conv8 = zext i32 %protocol to i64
  %conv12 = zext i16 %port to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcb_register(ptr noundef %__data, i32 noundef %program, i32 noundef %version, ptr noundef %addr, ptr noundef %netid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %program to i64
  %conv4 = zext i32 %version to i64
  %0 = ptrtoint ptr %addr to i32
  %conv8 = zext i32 %0 to i64
  %1 = ptrtoint ptr %netid to i32
  %conv12 = zext i32 %1 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcb_unregister(ptr noundef %__data, i32 noundef %program, i32 noundef %version, ptr noundef %netid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %program to i64
  %conv4 = zext i32 %version to i64
  %0 = ptrtoint ptr %netid to i32
  %conv8 = zext i32 %0 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xdr_msg_class(ptr noundef %__data, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xdr to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xdr_buf_class(ptr noundef %__data, i32 noundef %xid, ptr noundef %xdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %xid to i64
  %0 = ptrtoint ptr %xdr to i32
  %conv4 = zext i32 %0 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_authenticate(ptr noundef %__data, ptr noundef %rqst, i32 noundef %auth_res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %auth_res to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_process(ptr noundef %__data, ptr noundef %rqst, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %name to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_rqst_event(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_rqst_status(ptr noundef %__data, ptr noundef %rqst, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xprt_create_err(ptr noundef %__data, ptr noundef %program, ptr noundef %protocol, ptr noundef %sap, i32 noundef %salen, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %program to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %protocol to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %sap to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i32 %salen to i64
  %3 = ptrtoint ptr %xprt to i32
  %conv16 = zext i32 %3 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xprt_enqueue(ptr noundef %__data, ptr noundef %xprt, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqst to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xprt_event(ptr noundef %__data, ptr noundef %xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xprt_accept(ptr noundef %__data, ptr noundef %xprt, ptr noundef %service) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %service to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_xprt_dequeue(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_wake_up(ptr noundef %__data, i32 noundef %pid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %pid to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_alloc_arg_err(ptr noundef %__data, i32 noundef %pages) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %pages to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_stats_latency(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_deferred_event(ptr noundef %__data, ptr noundef %dr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %dr to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcsock_new_socket(ptr noundef %__data, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %socket to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcsock_marker(ptr noundef %__data, ptr noundef %xprt, i32 noundef %marker) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %marker to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcsock_class(ptr noundef %__data, ptr noundef %xprt, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %result to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcsock_tcp_recv_short(ptr noundef %__data, ptr noundef %xprt, i32 noundef %expected, i32 noundef %received) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %expected to i64
  %conv8 = zext i32 %received to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcsock_tcp_state(ptr noundef %__data, ptr noundef %xprt, ptr noundef %socket) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %socket to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcsock_accept_class(ptr noundef %__data, ptr noundef %xprt, ptr noundef %service, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %service to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %status to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_cache_event(ptr noundef %__data, ptr noundef %cd, ptr noundef %h) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %cd to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %h to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_register_class(ptr noundef %__data, ptr noundef %program, i32 noundef %version, i32 noundef %family, i16 noundef zeroext %protocol, i16 noundef zeroext %port, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %program to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %version to i64
  %conv8 = zext i32 %family to i64
  %conv12 = zext i16 %protocol to i64
  %conv16 = zext i16 %port to i64
  %conv20 = zext i32 %error to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svc_unregister(ptr noundef %__data, ptr noundef %program, i32 noundef %version, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %program to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %version to i64
  %conv8 = zext i32 %error to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rpc_task_timeout(ptr noundef %task) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_timeout = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %0 = ptrtoint ptr %tk_timeout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %2, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp1 = icmp slt i32 %sub, 0
  %sub3 = sub i32 %1, %2
  br i1 %cmp1, label %if.then.cleanup5_crit_edge, label %if.then.if.end4_crit_edge

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4

if.then.cleanup5_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup5

if.end4:                                          ; preds = %if.then.if.end4_crit_edge, %entry.if.end4_crit_edge
  br label %cleanup5

cleanup5:                                         ; preds = %if.end4, %if.then.cleanup5_crit_edge
  %retval.1 = phi i32 [ 0, %if.end4 ], [ %sub3, %if.then.cleanup5_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_init_priority_wait_queue(ptr noundef %queue, ptr noundef %qname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__rpc_init_priority_wait_queue(ptr noundef %queue, ptr noundef %qname, i8 noundef zeroext 4)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__rpc_init_priority_wait_queue(ptr noundef %queue, ptr noundef %qname, i8 noundef zeroext %nr_queues) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__raw_spin_lock_init(ptr noundef %queue, ptr noundef nonnull @.str.311, ptr noundef nonnull @__rpc_init_priority_wait_queue.__key, i16 noundef signext 3) #15
  %arrayidx = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 0
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %arrayidx, ptr %arrayidx, align 4
  %prev.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 0, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %arrayidx, ptr %prev.i, align 4
  %arrayidx.1 = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %arrayidx.1, ptr %arrayidx.1, align 4
  %prev.i.1 = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 1, i32 1
  %3 = ptrtoint ptr %prev.i.1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %arrayidx.1, ptr %prev.i.1, align 4
  %arrayidx.2 = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 2
  %4 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %arrayidx.2, ptr %arrayidx.2, align 4
  %prev.i.2 = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 2, i32 1
  %5 = ptrtoint ptr %prev.i.2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %arrayidx.2, ptr %prev.i.2, align 4
  %arrayidx.3 = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 3
  %6 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %arrayidx.3, ptr %arrayidx.3, align 4
  %prev.i.3 = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 3, i32 1
  %7 = ptrtoint ptr %prev.i.3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %arrayidx.3, ptr %prev.i.3, align 4
  %sub = add i8 %nr_queues, -1
  %maxpriority = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 2
  %8 = ptrtoint ptr %maxpriority to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %sub, ptr %maxpriority, align 4
  %priority1.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 3
  %9 = ptrtoint ptr %priority1.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %priority1.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %10, i8 %sub)
  %cmp.not.i.i = icmp eq i8 %10, %sub
  br i1 %cmp.not.i.i, label %entry.rpc_reset_waitqueue_priority.exit_crit_edge, label %if.then.i.i

entry.rpc_reset_waitqueue_priority.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_reset_waitqueue_priority.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i = zext i8 %sub to i32
  %11 = ptrtoint ptr %priority1.i.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %sub, ptr %priority1.i.i, align 1
  %shl.i.i = shl nuw i32 1, %conv.i
  %conv5.i.i = trunc i32 %shl.i.i to i8
  %nr.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 4
  %12 = ptrtoint ptr %nr.i.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv5.i.i, ptr %nr.i.i, align 2
  br label %rpc_reset_waitqueue_priority.exit

rpc_reset_waitqueue_priority.exit:                ; preds = %if.then.i.i, %entry.rpc_reset_waitqueue_priority.exit_crit_edge
  %qlen = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 5
  %13 = ptrtoint ptr %qlen to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 0, ptr %qlen, align 4
  %timer_list = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6
  %expires = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 1
  %14 = ptrtoint ptr %expires to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %expires, align 4
  %dwork = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2
  tail call void @__init_work(ptr noundef %dwork, i32 noundef 0) #15
  %15 = ptrtoint ptr %dwork to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -64, ptr %dwork, align 4
  %lockdep_map = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.313, ptr noundef nonnull @__rpc_init_priority_wait_queue.__key.312, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry14 = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2, i32 0, i32 1
  %16 = ptrtoint ptr %entry14 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %entry14, ptr %entry14, align 4
  %prev.i43 = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2, i32 0, i32 1, i32 1
  %17 = ptrtoint ptr %prev.i43 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %entry14, ptr %prev.i43, align 4
  %func = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2, i32 0, i32 2
  %18 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @__rpc_queue_timer_fn, ptr %func, align 4
  %timer = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.315, ptr noundef nonnull @__rpc_init_priority_wait_queue.__key.314) #15
  %19 = ptrtoint ptr %timer_list to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %timer_list, ptr %timer_list, align 4
  %prev.i44 = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i44 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %timer_list, ptr %prev.i44, align 4
  %name1.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 7
  %21 = ptrtoint ptr %name1.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %qname, ptr %name1.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_init_wait_queue(ptr noundef %queue, ptr noundef %qname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__rpc_init_priority_wait_queue(ptr noundef %queue, ptr noundef %qname, i8 noundef zeroext 1)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_destroy_wait_queue(ptr noundef %queue) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %dwork = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2
  %call = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %dwork) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__rpc_wait_for_completion_task(ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %action, null
  %spec.store.select = select i1 %cmp, ptr @rpc_wait_bit_killable, ptr %action
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %call = tail call i32 @out_of_line_wait_on_bit(ptr noundef %tk_runstate, i32 noundef 2, ptr noundef %spec.store.select, i32 noundef 258) #15
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rpc_wait_bit_killable(ptr nocapture noundef readnone %key, i32 noundef %mode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %5, 1073741824
  store i32 %or.i.i, ptr %flags.i.i, align 4
  tail call void @schedule() #15
  %6 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i1.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i1.i to ptr
  %task.i2.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i2.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i2.i, align 8
  %flags.i3.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags.i3.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i3.i, align 4
  %and.i.i = and i32 %11, -1073741825
  store i32 %and.i.i, ptr %flags.i3.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1888
  tail call void @__might_sleep(ptr noundef nonnull @.str.319, i32 noundef 57) #15
  %12 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i.i, align 8
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %16 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i.i.i.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i.i.i.i, label %entry.freezable_schedule_unsafe.exit_crit_edge, label %freezing.exit.i.i.i, !prof !1883

entry.freezable_schedule_unsafe.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %freezable_schedule_unsafe.exit

freezing.exit.i.i.i:                              ; preds = %entry
  %call4.i.i.i.i = tail call zeroext i1 @freezing_slow_path(ptr noundef %15) #15
  br i1 %call4.i.i.i.i, label %if.end.i.i.i, label %freezing.exit.i.i.i.freezable_schedule_unsafe.exit_crit_edge, !prof !1884

freezing.exit.i.i.i.freezable_schedule_unsafe.exit_crit_edge: ; preds = %freezing.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %freezable_schedule_unsafe.exit

if.end.i.i.i:                                     ; preds = %freezing.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call6.i.i.i = tail call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %freezable_schedule_unsafe.exit

freezable_schedule_unsafe.exit:                   ; preds = %if.end.i.i.i, %freezing.exit.i.i.i.freezable_schedule_unsafe.exit_crit_edge, %entry.freezable_schedule_unsafe.exit_crit_edge
  %17 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %and.i2 = and i32 %mode, 257
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2)
  %tobool.not.i = icmp eq i32 %and.i2, 0
  br i1 %tobool.not.i, label %freezable_schedule_unsafe.exit.signal_pending_state.exit.thread_crit_edge, label %if.end.i

freezable_schedule_unsafe.exit.signal_pending_state.exit.thread_crit_edge: ; preds = %freezable_schedule_unsafe.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending_state.exit.thread

if.end.i:                                         ; preds = %freezable_schedule_unsafe.exit
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %stack.i.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %25 = and i32 %24, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i.i, label %signal_pending.exit.i, label %if.end.i.if.end3.i_crit_edge, !prof !1883

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end3.i

signal_pending.exit.i:                            ; preds = %if.end.i
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %22, align 4
  %and1.i.i.i.i.i.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool1.not.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i, label %signal_pending.exit.i.signal_pending_state.exit.thread_crit_edge, label %signal_pending.exit.i.if.end3.i_crit_edge

signal_pending.exit.i.if.end3.i_crit_edge:        ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end3.i

signal_pending.exit.i.signal_pending_state.exit.thread_crit_edge: ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending_state.exit.thread

if.end3.i:                                        ; preds = %signal_pending.exit.i.if.end3.i_crit_edge, %if.end.i.if.end3.i_crit_edge
  %and4.i = and i32 %mode, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %signal_pending_state.exit, label %if.end3.i.signal_pending_state.exit.thread5_crit_edge

if.end3.i.signal_pending_state.exit.thread5_crit_edge: ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending_state.exit.thread5

signal_pending_state.exit:                        ; preds = %if.end3.i
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 116, i32 1
  %28 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %signal.i.i, align 4
  %30 = and i32 %29, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not = icmp eq i32 %30, 0
  br i1 %tobool.not, label %signal_pending_state.exit.signal_pending_state.exit.thread_crit_edge, label %signal_pending_state.exit.signal_pending_state.exit.thread5_crit_edge

signal_pending_state.exit.signal_pending_state.exit.thread5_crit_edge: ; preds = %signal_pending_state.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending_state.exit.thread5

signal_pending_state.exit.signal_pending_state.exit.thread_crit_edge: ; preds = %signal_pending_state.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending_state.exit.thread

signal_pending_state.exit.thread:                 ; preds = %signal_pending_state.exit.signal_pending_state.exit.thread_crit_edge, %signal_pending.exit.i.signal_pending_state.exit.thread_crit_edge, %freezable_schedule_unsafe.exit.signal_pending_state.exit.thread_crit_edge
  br label %signal_pending_state.exit.thread5

signal_pending_state.exit.thread5:                ; preds = %signal_pending_state.exit.thread, %signal_pending_state.exit.signal_pending_state.exit.thread5_crit_edge, %if.end3.i.signal_pending_state.exit.thread5_crit_edge
  %31 = phi i32 [ 0, %signal_pending_state.exit.thread ], [ -512, %signal_pending_state.exit.signal_pending_state.exit.thread5_crit_edge ], [ -512, %if.end3.i.signal_pending_state.exit.thread5_crit_edge ]
  ret i32 %31
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on_timeout(ptr noundef %q, ptr noundef %task, ptr noundef %action, i32 noundef %timeout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rpc_sleep_check_activated(ptr noundef %task)
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %action, null
  br i1 %tobool.not.i, label %if.end.rpc_set_tk_callback.exit_crit_edge, label %land.lhs.true.i

if.end.rpc_set_tk_callback.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_set_tk_callback.exit

land.lhs.true.i:                                  ; preds = %if.end
  %tk_callback.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 3
  %0 = ptrtoint ptr %tk_callback.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_callback.i, align 8
  %cmp.not.i = icmp eq ptr %1, null
  br i1 %cmp.not.i, label %if.then37.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %.b44.i = load i1, ptr @rpc_set_tk_callback.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.rpc_set_tk_callback.exit_crit_edge, label %if.then.i, !prof !1883

land.rhs.i.rpc_set_tk_callback.exit_crit_edge:    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_set_tk_callback.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_set_tk_callback.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 409, i32 noundef 9, ptr noundef null) #15
  br label %rpc_set_tk_callback.exit

if.then37.critedge.i:                             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %tk_callback.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %action, ptr %tk_callback.i, align 8
  br label %rpc_set_tk_callback.exit

rpc_set_tk_callback.exit:                         ; preds = %if.then37.critedge.i, %if.then.i, %land.rhs.i.rpc_set_tk_callback.exit_crit_edge, %if.end.rpc_set_tk_callback.exit_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %q) #15
  %tk_priority = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %3 = ptrtoint ptr %tk_priority to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %tk_priority, align 2
  %bf.lshr = lshr i8 %bf.load, 6
  tail call fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef %q, ptr noundef %task, i32 noundef %timeout, i8 noundef zeroext %bf.lshr)
  tail call void @_raw_spin_unlock(ptr noundef %q) #15
  br label %return

return:                                           ; preds = %rpc_set_tk_callback.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rpc_sleep_check_activated(ptr noundef %task) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %land.rhs, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

land.rhs:                                         ; preds = %entry
  %.b44 = load i1, ptr @rpc_sleep_check_activated.__already_done, align 1
  br i1 %.b44, label %land.rhs.if.then38_crit_edge, label %if.then, !prof !1883

land.rhs.if.then38_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then38

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_sleep_check_activated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 416, i32 noundef 9, ptr noundef null) #15
  br label %if.then38

if.then38:                                        ; preds = %if.then, %land.rhs.if.then38_crit_edge
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %3 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -5, ptr %tk_status, align 4
  %tk_workqueue.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 17
  %4 = ptrtoint ptr %tk_workqueue.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tk_workqueue.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %task, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1889
  tail call void @llvm.prefetch.p0(ptr %task, i32 1, i32 3, i32 1) #15
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %task, ptr %task, i32 1, ptr elementtype(i32) %task) #15, !srcloc !1890
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1891
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i, label %if.then38.return_crit_edge

if.then38.return_crit_edge:                       ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.then.i.i:                                      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @rpc_release_resources_task(ptr noundef %task) #15
  tail call fastcc void @rpc_final_put_task(ptr noundef %task, ptr noundef %5) #15
  br label %return

return:                                           ; preds = %if.then.i.i, %if.then38.return_crit_edge, %entry.return_crit_edge
  %7 = xor i1 %tobool.not, true
  ret i1 %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef %q, ptr noundef %task, i32 noundef %timeout, i8 noundef zeroext %queue_priority) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.end38.critedge, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b48 = load i1, ptr @__rpc_sleep_on_priority_timeout.__already_done, align 1
  br i1 %.b48, label %land.rhs.if.end40_crit_edge, label %if.then, !prof !1883

land.rhs.if.end40_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__rpc_sleep_on_priority_timeout.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 398, i32 noundef 9, ptr noundef null) #15
  br label %if.end40

if.end38.critedge:                                ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %3 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %3, %timeout
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.then39, label %if.else

if.then39:                                        ; preds = %if.end38.critedge
  tail call fastcc void @__rpc_do_sleep_on_priority(ptr noundef %q, ptr noundef %task, i8 noundef zeroext %queue_priority)
  %tk_timeout.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %4 = ptrtoint ptr %tk_timeout.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %timeout, ptr %tk_timeout.i, align 8
  %timer_list.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 6
  %5 = ptrtoint ptr %timer_list.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %timer_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %6, %timer_list.i
  br i1 %cmp.i.not.i, label %if.then39.if.then.i_crit_edge, label %lor.lhs.false.i

if.then39.if.then.i_crit_edge:                    ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then39
  %expires.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 6, i32 1
  %7 = ptrtoint ptr %expires.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %expires.i, align 4
  %sub.i = sub i32 %timeout, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.if.end.i_crit_edge

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then39.if.then.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %expires1.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 6, i32 1
  %10 = ptrtoint ptr %expires1.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %timeout, ptr %expires1.i.i, align 4
  %sub.i.i = sub i32 %9, %timeout
  %sub2.i.i = sub i32 %timeout, %9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.inv.i.i = icmp slt i32 %sub.i.i, 0
  %expires.addr.0.i.i = select i1 %cmp.inv.i.i, i32 %sub2.i.i, i32 0
  %11 = load ptr, ptr @rpciod_workqueue, align 4
  %dwork.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 6, i32 2
  %call.i.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %11, ptr noundef %dwork.i.i, i32 noundef %expires.addr.0.i.i) #15
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %lor.lhs.false.i.if.end.i_crit_edge
  %timer_list2.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3
  %12 = ptrtoint ptr %timer_list.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %timer_list.i, align 4
  %call.i.i11.i = tail call zeroext i1 @__list_add_valid(ptr noundef %timer_list2.i, ptr noundef %timer_list.i, ptr noundef %13) #15
  br i1 %call.i.i11.i, label %if.end.i.i.i, label %if.end.i.if.end40_crit_edge

if.end.i.if.end40_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %timer_list2.i, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %timer_list2.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %13, ptr %timer_list2.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3, i32 1
  %16 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %timer_list.i, ptr %prev3.i.i.i, align 4
  %17 = ptrtoint ptr %timer_list.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %timer_list2.i, ptr %timer_list.i, align 4
  br label %if.end40

if.else:                                          ; preds = %if.end38.critedge
  call void @__sanitizer_cov_trace_pc() #17
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %18 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 -110, ptr %tk_status, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end.i.i.i, %if.end.i.if.end40_crit_edge, %if.then, %land.rhs.if.end40_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on(ptr noundef %q, ptr noundef %task, ptr noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rpc_sleep_check_activated(ptr noundef %task)
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %action, null
  br i1 %tobool.not.i, label %if.end.rpc_set_tk_callback.exit_crit_edge, label %land.lhs.true.i

if.end.rpc_set_tk_callback.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_set_tk_callback.exit

land.lhs.true.i:                                  ; preds = %if.end
  %tk_callback.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 3
  %0 = ptrtoint ptr %tk_callback.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_callback.i, align 8
  %cmp.not.i = icmp eq ptr %1, null
  br i1 %cmp.not.i, label %if.then37.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %.b44.i = load i1, ptr @rpc_set_tk_callback.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i.rpc_set_tk_callback.exit_crit_edge, label %if.then.i, !prof !1883

land.rhs.i.rpc_set_tk_callback.exit_crit_edge:    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_set_tk_callback.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_set_tk_callback.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 409, i32 noundef 9, ptr noundef null) #15
  br label %rpc_set_tk_callback.exit

if.then37.critedge.i:                             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %tk_callback.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %action, ptr %tk_callback.i, align 8
  br label %rpc_set_tk_callback.exit

rpc_set_tk_callback.exit:                         ; preds = %if.then37.critedge.i, %if.then.i, %land.rhs.i.rpc_set_tk_callback.exit_crit_edge, %if.end.rpc_set_tk_callback.exit_crit_edge
  %tk_timeout = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %3 = ptrtoint ptr %tk_timeout to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %tk_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %rpc_set_tk_callback.exit.if.end29_crit_edge, label %land.rhs

rpc_set_tk_callback.exit.if.end29_crit_edge:      ; preds = %rpc_set_tk_callback.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

land.rhs:                                         ; preds = %rpc_set_tk_callback.exit
  %.b46 = load i1, ptr @rpc_sleep_on.__already_done, align 1
  br i1 %.b46, label %land.rhs.if.end29_crit_edge, label %if.then7, !prof !1883

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then7:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_sleep_on.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 449, i32 noundef 9, ptr noundef null) #15
  br label %if.end29

if.end29:                                         ; preds = %if.then7, %land.rhs.if.end29_crit_edge, %rpc_set_tk_callback.exit.if.end29_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %q) #15
  %tk_priority = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %5 = ptrtoint ptr %tk_priority to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %tk_priority, align 2
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %6 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %tk_runstate.i, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i47 = icmp eq i32 %8, 0
  br i1 %tobool.not.i47, label %if.end38.critedge.i, label %land.rhs.i48

land.rhs.i48:                                     ; preds = %if.end29
  %.b42.i = load i1, ptr @__rpc_sleep_on_priority.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i48.__rpc_sleep_on_priority.exit_crit_edge, label %if.then.i49, !prof !1883

land.rhs.i48.__rpc_sleep_on_priority.exit_crit_edge: ; preds = %land.rhs.i48
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_sleep_on_priority.exit

if.then.i49:                                      ; preds = %land.rhs.i48
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__rpc_sleep_on_priority.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 389, i32 noundef 9, ptr noundef null) #15
  br label %__rpc_sleep_on_priority.exit

if.end38.critedge.i:                              ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  %bf.lshr = lshr i8 %bf.load, 6
  tail call fastcc void @__rpc_do_sleep_on_priority(ptr noundef %q, ptr noundef %task, i8 noundef zeroext %bf.lshr) #15
  br label %__rpc_sleep_on_priority.exit

__rpc_sleep_on_priority.exit:                     ; preds = %if.end38.critedge.i, %if.then.i49, %land.rhs.i48.__rpc_sleep_on_priority.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %q) #15
  br label %return

return:                                           ; preds = %__rpc_sleep_on_priority.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on_priority_timeout(ptr noundef %q, ptr noundef %task, i32 noundef %timeout, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rpc_sleep_check_activated(ptr noundef %task)
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef %q) #15
  %0 = trunc i32 %priority to i8
  %conv = add i8 %0, 1
  tail call fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef %q, ptr noundef %task, i32 noundef %timeout, i8 noundef zeroext %conv)
  tail call void @_raw_spin_unlock(ptr noundef %q) #15
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_sleep_on_priority(ptr noundef %q, ptr noundef %task, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rpc_sleep_check_activated(ptr noundef %task)
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %tk_timeout = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %0 = ptrtoint ptr %tk_timeout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tk_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.end.if.end29_crit_edge, label %land.rhs

if.end.if.end29_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

land.rhs:                                         ; preds = %if.end
  %.b45 = load i1, ptr @rpc_sleep_on_priority.__already_done, align 1
  br i1 %.b45, label %land.rhs.if.end29_crit_edge, label %if.then7, !prof !1883

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then7:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_sleep_on_priority.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 481, i32 noundef 9, ptr noundef null) #15
  br label %if.end29

if.end29:                                         ; preds = %if.then7, %land.rhs.if.end29_crit_edge, %if.end.if.end29_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %q) #15
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %2 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %tk_runstate.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end38.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end29
  %.b42.i = load i1, ptr @__rpc_sleep_on_priority.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.__rpc_sleep_on_priority.exit_crit_edge, label %if.then.i, !prof !1883

land.rhs.i.__rpc_sleep_on_priority.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_sleep_on_priority.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__rpc_sleep_on_priority.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 389, i32 noundef 9, ptr noundef null) #15
  br label %__rpc_sleep_on_priority.exit

if.end38.critedge.i:                              ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  %5 = trunc i32 %priority to i8
  %conv = add i8 %5, 1
  tail call fastcc void @__rpc_do_sleep_on_priority(ptr noundef %q, ptr noundef %task, i8 noundef zeroext %conv) #15
  br label %__rpc_sleep_on_priority.exit

__rpc_sleep_on_priority.exit:                     ; preds = %if.end38.critedge.i, %if.then.i, %land.rhs.i.__rpc_sleep_on_priority.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %q) #15
  br label %return

return:                                           ; preds = %__rpc_sleep_on_priority.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_wake_up_queued_task(ptr noundef %queue, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef %queue) #15
  %3 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %3, ptr noundef %queue, ptr noundef %task, ptr noundef null, ptr noundef null) #15
  tail call void @_raw_spin_unlock(ptr noundef %queue) #15
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_wake_up_queued_task_set_status(ptr noundef %queue, ptr noundef %task, i32 noundef %status) local_unnamed_addr #0 align 64 {
entry:
  %status.addr.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef %queue) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.addr.i)
  %3 = ptrtoint ptr %status.addr.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %status, ptr %status.addr.i, align 4
  %4 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i = call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %4, ptr noundef %queue, ptr noundef %task, ptr noundef nonnull @rpc_task_action_set_status, ptr noundef nonnull %status.addr.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.addr.i)
  call void @_raw_spin_unlock(ptr noundef %queue) #15
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_wake_up_first_on_wq(ptr noundef %wq, ptr noundef %queue, ptr noundef %func, ptr noundef %data) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef %queue) #15
  %maxpriority.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 2
  %0 = ptrtoint ptr %maxpriority.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %maxpriority.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not.i = icmp eq i8 %1, 0
  %tasks.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %1)
  %cmp.i.i = icmp ugt i8 %1, 2
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %if.then.i.if.end.i.i_crit_edge

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i
  %arrayidx.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 3
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %arrayidx.i.i
  br i1 %cmp.i.not.i.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, label %if.then.i.i

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 -36
  br label %__rpc_find_next_queued.exit

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %if.then.i.if.end.i.i_crit_edge
  %priority.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 3
  %4 = ptrtoint ptr %priority.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %priority.i.i, align 1
  %idxprom.i.i = zext i8 %5 to i32
  %arrayidx3.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 %idxprom.i.i
  %6 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %arrayidx3.i.i, align 4
  %cmp.i66.not.i.i = icmp eq ptr %7, %arrayidx3.i.i
  br i1 %cmp.i66.not.i.i, label %if.end.i.i.if.end15.i.i_crit_edge, label %land.lhs.true6.i.i

if.end.i.i.if.end15.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i.i

land.lhs.true6.i.i:                               ; preds = %if.end.i.i
  %nr.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 4
  %8 = ptrtoint ptr %nr.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %nr.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool8.not.i.i = icmp eq i8 %9, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true6.i.i.if.end15.i.i_crit_edge, label %if.then9.i.i

land.lhs.true6.i.i.if.end15.i.i_crit_edge:        ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i.i

if.then9.i.i:                                     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %dec.i.i = add i8 %9, -1
  %10 = ptrtoint ptr %nr.i.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %dec.i.i, ptr %nr.i.i, align 2
  %11 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx3.i.i, align 4
  %add.ptr14.i.i = getelementptr i8, ptr %12, i32 -36
  br label %__rpc_find_next_queued.exit

if.end15.i.i:                                     ; preds = %land.lhs.true6.i.i.if.end15.i.i_crit_edge, %if.end.i.i.if.end15.i.i_crit_edge
  %idxprom23.i.i = zext i8 %1 to i32
  %arrayidx24.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 %idxprom23.i.i
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %if.end15.i.i
  %q.0.i.i = phi ptr [ %arrayidx3.i.i, %if.end15.i.i ], [ %q.1.i.i, %do.cond.i.i.do.body.i.i_crit_edge ]
  %cmp18.i.i = icmp eq ptr %q.0.i.i, %tasks.i
  %add.ptr25.i.i = getelementptr %struct.list_head, ptr %q.0.i.i, i32 -1
  %q.1.i.i = select i1 %cmp18.i.i, ptr %arrayidx24.i.i, ptr %add.ptr25.i.i
  %13 = ptrtoint ptr %q.1.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %q.1.i.i, align 4
  %cmp.i68.not.i.i = icmp eq ptr %14, %q.1.i.i
  br i1 %cmp.i68.not.i.i, label %do.cond.i.i, label %if.then29.i.i

if.then29.i.i:                                    ; preds = %do.body.i.i
  %add.ptr33.i.i = getelementptr i8, ptr %14, i32 -36
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %q.1.i.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %tasks.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i32 %sub.ptr.sub.i.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.div.i.i, i32 %idxprom.i.i)
  %cmp.not.i.i.i = icmp eq i32 %sub.ptr.div.i.i, %idxprom.i.i
  br i1 %cmp.not.i.i.i, label %if.then29.i.i.__rpc_find_next_queued.exit_crit_edge, label %if.then.i.i.i

if.then29.i.i.__rpc_find_next_queued.exit_crit_edge: ; preds = %if.then29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_find_next_queued.exit

if.then.i.i.i:                                    ; preds = %if.then29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv3.i.i.i = trunc i32 %sub.ptr.div.i.i to i8
  %15 = ptrtoint ptr %priority.i.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv3.i.i.i, ptr %priority.i.i, align 1
  %shl.i.i.i = shl nuw i32 1, %sub.ptr.div.i.i
  %conv5.i.i.i = trunc i32 %shl.i.i.i to i8
  %nr.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 4
  %16 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv5.i.i.i, ptr %nr.i.i.i, align 2
  br label %__rpc_find_next_queued.exit

do.cond.i.i:                                      ; preds = %do.body.i.i
  %cmp39.not.i.i = icmp eq ptr %q.1.i.i, %arrayidx3.i.i
  br i1 %cmp39.not.i.i, label %do.end.i.i, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i

do.end.i.i:                                       ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_cmp1(i8 %5, i8 %1)
  %cmp.not.i.i.i.i = icmp eq i8 %5, %1
  br i1 %cmp.not.i.i.i.i, label %do.end.i.i.if.end_crit_edge, label %if.then.i.i.i.i

do.end.i.i.if.end_crit_edge:                      ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then.i.i.i.i:                                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %17 = ptrtoint ptr %priority.i.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %1, ptr %priority.i.i, align 1
  %shl.i.i.i.i = shl nuw i32 1, %idxprom23.i.i
  %conv5.i.i.i.i = trunc i32 %shl.i.i.i.i to i8
  %nr.i.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 4
  %18 = ptrtoint ptr %nr.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv5.i.i.i.i, ptr %nr.i.i.i.i, align 2
  br label %if.end

if.end.i:                                         ; preds = %entry
  %19 = ptrtoint ptr %tasks.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %tasks.i, align 4
  %cmp.i10.not.i = icmp eq ptr %20, %tasks.i
  %add.ptr.i = getelementptr i8, ptr %20, i32 -36
  br i1 %cmp.i10.not.i, label %if.end.i.if.end_crit_edge, label %if.end.i.__rpc_find_next_queued.exit_crit_edge

if.end.i.__rpc_find_next_queued.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_find_next_queued.exit

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

__rpc_find_next_queued.exit:                      ; preds = %if.end.i.__rpc_find_next_queued.exit_crit_edge, %if.then.i.i.i, %if.then29.i.i.__rpc_find_next_queued.exit_crit_edge, %if.then9.i.i, %if.then.i.i
  %retval.0.i = phi ptr [ %add.ptr14.i.i, %if.then9.i.i ], [ %add.ptr.i.i, %if.then.i.i ], [ %add.ptr33.i.i, %if.then29.i.i.__rpc_find_next_queued.exit_crit_edge ], [ %add.ptr33.i.i, %if.then.i.i.i ], [ %add.ptr.i, %if.end.i.__rpc_find_next_queued.exit_crit_edge ]
  %cmp.not = icmp eq ptr %retval.0.i, null
  br i1 %cmp.not, label %__rpc_find_next_queued.exit.if.end_crit_edge, label %if.then

__rpc_find_next_queued.exit.if.end_crit_edge:     ; preds = %__rpc_find_next_queued.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %__rpc_find_next_queued.exit
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %wq, ptr noundef %queue, ptr noundef nonnull %retval.0.i, ptr noundef %func, ptr noundef %data)
  br label %if.end

if.end:                                           ; preds = %if.then, %__rpc_find_next_queued.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %if.then.i.i.i.i, %do.end.i.i.if.end_crit_edge
  %task.0 = phi ptr [ %call1, %if.then ], [ null, %__rpc_find_next_queued.exit.if.end_crit_edge ], [ null, %do.end.i.i.if.end_crit_edge ], [ null, %if.then.i.i.i.i ], [ null, %if.end.i.if.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %queue) #15
  ret ptr %task.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %wq, ptr noundef %queue, ptr noundef %task, ptr noundef readonly %action, ptr noundef %data) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %do.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

do.end:                                           ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1892
  %tk_waitqueue = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 7
  %3 = ptrtoint ptr %tk_waitqueue to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_waitqueue, align 8
  %cmp = icmp eq ptr %4, %queue
  br i1 %cmp, label %if.then3, label %do.end.return_crit_edge

do.end.return_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.then3:                                         ; preds = %do.end
  %cmp4 = icmp eq ptr %action, null
  br i1 %cmp4, label %if.then3.if.then6_crit_edge, label %lor.lhs.false

if.then3.if.then6_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then6

lor.lhs.false:                                    ; preds = %if.then3
  %call5 = tail call zeroext i1 %action(ptr noundef %task, ptr noundef %data) #15
  br i1 %call5, label %lor.lhs.false.if.then6_crit_edge, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

lor.lhs.false.if.then6_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then6

if.then6:                                         ; preds = %lor.lhs.false.if.then6_crit_edge, %if.then3.if.then6_crit_edge
  %5 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %tk_runstate, align 4
  %7 = and i32 %6, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.320, ptr noundef %task) #21
  br label %return

if.end.i:                                         ; preds = %if.then6
  tail call fastcc void @trace_rpc_task_wakeup(ptr noundef %task, ptr noundef %queue) #15
  %timer_list.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3
  %8 = ptrtoint ptr %timer_list.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %timer_list.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %9, %timer_list.i.i.i
  br i1 %cmp.i.not.i.i.i, label %if.end.i.__rpc_disable_timer.exit.i.i_crit_edge, label %if.end.i.i.i

if.end.i.__rpc_disable_timer.exit.i.i_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_disable_timer.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end.i
  %tk_timeout.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 5
  %10 = ptrtoint ptr %tk_timeout.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %tk_timeout.i.i.i, align 8
  %call.i.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %timer_list.i.i.i) #15
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.end.i.i.i.list_del.exit.i.i.i_crit_edge

if.end.i.i.i.list_del.exit.i.i.i_crit_edge:       ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3, i32 1
  %11 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %13 = ptrtoint ptr %timer_list.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %timer_list.i.i.i, align 4
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %list_del.exit.i.i.i

list_del.exit.i.i.i:                              ; preds = %if.end.i.i.i.i.i, %if.end.i.i.i.list_del.exit.i.i.i_crit_edge
  %17 = ptrtoint ptr %timer_list.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 256 to ptr), ptr %timer_list.i.i.i, align 4
  %prev.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3, i32 1
  %18 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i.i, align 4
  %timer_list3.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6
  %19 = ptrtoint ptr %timer_list3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %timer_list3.i.i.i, align 4
  %cmp.i13.not.i.i.i = icmp eq ptr %20, %timer_list3.i.i.i
  br i1 %cmp.i13.not.i.i.i, label %if.then6.i.i.i, label %list_del.exit.i.i.i.__rpc_disable_timer.exit.i.i_crit_edge

list_del.exit.i.i.i.__rpc_disable_timer.exit.i.i_crit_edge: ; preds = %list_del.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_disable_timer.exit.i.i

if.then6.i.i.i:                                   ; preds = %list_del.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %dwork.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 6, i32 2
  %call8.i.i.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %dwork.i.i.i) #15
  br label %__rpc_disable_timer.exit.i.i

__rpc_disable_timer.exit.i.i:                     ; preds = %if.then6.i.i.i, %list_del.exit.i.i.i.__rpc_disable_timer.exit.i.i_crit_edge, %if.end.i.__rpc_disable_timer.exit.i.i_crit_edge
  %maxpriority.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 2
  %21 = ptrtoint ptr %maxpriority.i.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %maxpriority.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %cmp.not.i.i = icmp eq i8 %22, 0
  %u.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8
  br i1 %cmp.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %__rpc_disable_timer.exit.i.i
  %prev.i.i6.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i6.i.i, align 4
  %cmp.i.i.i.i = icmp eq ptr %24, null
  %links.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1, i32 1
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.end.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i
  %call.i.i.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %links.i.i.i.i) #15
  br i1 %call.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i, label %if.then.i.i.i.i.list_del.exit.i.i.i.i_crit_edge

if.then.i.i.i.i.list_del.exit.i.i.i.i_crit_edge:  ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit.i.i.i.i

if.end.i.i.i.i.i.i:                               ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %25 = ptrtoint ptr %prev.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev.i.i.i.i.i.i, align 4
  %27 = ptrtoint ptr %links.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %links.i.i.i.i, align 4
  %prev1.i.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev1.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev1.i.i.i.i.i.i.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %28, ptr %26, align 4
  br label %list_del.exit.i.i.i.i

list_del.exit.i.i.i.i:                            ; preds = %if.end.i.i.i.i.i.i, %if.then.i.i.i.i.list_del.exit.i.i.i.i_crit_edge
  %31 = ptrtoint ptr %links.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 256 to ptr), ptr %links.i.i.i.i, align 4
  %prev.i.i.i7.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  br label %__rpc_remove_wait_queue.exit.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i
  %32 = ptrtoint ptr %links.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %links.i.i.i.i, align 4
  %cmp.i.not.i.i.i.i = icmp eq ptr %33, %links.i.i.i.i
  br i1 %cmp.i.not.i.i.i.i, label %if.end.i.i.i.i.if.end14.i.i.i.i_crit_edge, label %if.then4.i.i.i.i

if.end.i.i.i.i.if.end14.i.i.i.i_crit_edge:        ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %u7.i.i.i.i = getelementptr i8, ptr %33, i32 -8
  %34 = ptrtoint ptr %u7.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %u7.i.i.i.i, align 4
  %prev.i24.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %prev.i24.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i24.i.i.i.i, align 4
  %call.i.i25.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %u7.i.i.i.i, ptr noundef %37, ptr noundef %35) #15
  br i1 %call.i.i25.i.i.i.i, label %if.end.i.i26.i.i.i.i, label %if.then4.i.i.i.i.list_add_tail.exit.i.i.i.i_crit_edge

if.then4.i.i.i.i.list_add_tail.exit.i.i.i.i_crit_edge: ; preds = %if.then4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit.i.i.i.i

if.end.i.i26.i.i.i.i:                             ; preds = %if.then4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %38 = ptrtoint ptr %prev.i24.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %u7.i.i.i.i, ptr %prev.i24.i.i.i.i, align 4
  %39 = ptrtoint ptr %u7.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %35, ptr %u7.i.i.i.i, align 4
  %prev3.i.i.i.i.i.i = getelementptr i8, ptr %33, i32 -4
  %40 = ptrtoint ptr %prev3.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev3.i.i.i.i.i.i, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %u7.i.i.i.i, ptr %37, align 4
  br label %list_add_tail.exit.i.i.i.i

list_add_tail.exit.i.i.i.i:                       ; preds = %if.end.i.i26.i.i.i.i, %if.then4.i.i.i.i.list_add_tail.exit.i.i.i.i_crit_edge
  %call.i.i27.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %links.i.i.i.i) #15
  br i1 %call.i.i27.i.i.i.i, label %if.end.i.i30.i.i.i.i, label %list_add_tail.exit.i.i.i.i.list_del.exit32.i.i.i.i_crit_edge

list_add_tail.exit.i.i.i.i.list_del.exit32.i.i.i.i_crit_edge: ; preds = %list_add_tail.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit32.i.i.i.i

if.end.i.i30.i.i.i.i:                             ; preds = %list_add_tail.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i28.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %42 = ptrtoint ptr %prev.i.i28.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %prev.i.i28.i.i.i.i, align 4
  %44 = ptrtoint ptr %links.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %links.i.i.i.i, align 4
  %prev1.i.i.i29.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %prev1.i.i.i29.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %43, ptr %prev1.i.i.i29.i.i.i.i, align 4
  %47 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %45, ptr %43, align 4
  br label %list_del.exit32.i.i.i.i

list_del.exit32.i.i.i.i:                          ; preds = %if.end.i.i30.i.i.i.i, %list_add_tail.exit.i.i.i.i.list_del.exit32.i.i.i.i_crit_edge
  %48 = ptrtoint ptr %links.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr inttoptr (i32 256 to ptr), ptr %links.i.i.i.i, align 4
  %prev.i31.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %49 = ptrtoint ptr %prev.i31.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i31.i.i.i.i, align 4
  br label %if.end14.i.i.i.i

if.end14.i.i.i.i:                                 ; preds = %list_del.exit32.i.i.i.i, %if.end.i.i.i.i.if.end14.i.i.i.i_crit_edge
  %call.i.i33.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %u.i.i) #15
  br i1 %call.i.i33.i.i.i.i, label %if.end.i.i36.i.i.i.i, label %if.end14.i.i.i.i.list_del.exit38.i.i.i.i_crit_edge

if.end14.i.i.i.i.list_del.exit38.i.i.i.i_crit_edge: ; preds = %if.end14.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit38.i.i.i.i

if.end.i.i36.i.i.i.i:                             ; preds = %if.end14.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %50 = ptrtoint ptr %prev.i.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i6.i.i, align 4
  %52 = ptrtoint ptr %u.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %u.i.i, align 4
  %prev1.i.i.i35.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev1.i.i.i35.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %prev1.i.i.i35.i.i.i.i, align 4
  %55 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %53, ptr %51, align 4
  br label %list_del.exit38.i.i.i.i

list_del.exit38.i.i.i.i:                          ; preds = %if.end.i.i36.i.i.i.i, %if.end14.i.i.i.i.list_del.exit38.i.i.i.i_crit_edge
  %56 = ptrtoint ptr %u.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr inttoptr (i32 256 to ptr), ptr %u.i.i, align 4
  br label %__rpc_remove_wait_queue.exit.i

if.else.i.i:                                      ; preds = %__rpc_disable_timer.exit.i.i
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %u.i.i) #15
  br i1 %call.i.i.i.i, label %if.end.i.i9.i.i, label %if.else.i.i.list_del.exit.i.i_crit_edge

if.else.i.i.list_del.exit.i.i_crit_edge:          ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit.i.i

if.end.i.i9.i.i:                                  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i8.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %57 = ptrtoint ptr %prev.i.i8.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %prev.i.i8.i.i, align 4
  %59 = ptrtoint ptr %u.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %u.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %58, ptr %prev1.i.i.i.i.i, align 4
  %62 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile ptr %60, ptr %58, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i9.i.i, %if.else.i.i.list_del.exit.i.i_crit_edge
  %63 = ptrtoint ptr %u.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr inttoptr (i32 256 to ptr), ptr %u.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  br label %__rpc_remove_wait_queue.exit.i

__rpc_remove_wait_queue.exit.i:                   ; preds = %list_del.exit.i.i, %list_del.exit38.i.i.i.i, %list_del.exit.i.i.i.i
  %prev.i.sink.i.i = phi ptr [ %prev.i.i.i, %list_del.exit.i.i ], [ %prev.i.i6.i.i, %list_del.exit38.i.i.i.i ], [ %prev.i.i.i7.i.i, %list_del.exit.i.i.i.i ]
  %64 = ptrtoint ptr %prev.i.sink.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.sink.i.i, align 4
  %qlen.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 5
  %65 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %qlen.i.i, align 4
  %dec.i.i = add i16 %66, -1
  store i16 %dec.i.i, ptr %qlen.i.i, align 4
  tail call fastcc void @rpc_make_runnable(ptr noundef %wq, ptr noundef %task) #15
  br label %return

return:                                           ; preds = %__rpc_remove_wait_queue.exit.i, %do.end.i, %lor.lhs.false.return_crit_edge, %do.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi ptr [ null, %do.end.return_crit_edge ], [ null, %lor.lhs.false.return_crit_edge ], [ null, %entry.return_crit_edge ], [ %task, %do.end.i ], [ %task, %__rpc_remove_wait_queue.exit.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_wake_up_first(ptr noundef %queue, ptr noundef %func, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rpciod_workqueue, align 4
  %call = tail call ptr @rpc_wake_up_first_on_wq(ptr noundef %0, ptr noundef %queue, ptr noundef %func, ptr noundef %data)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_wake_up_next(ptr noundef %queue) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i = tail call ptr @rpc_wake_up_first_on_wq(ptr noundef %0, ptr noundef %queue, ptr noundef nonnull @rpc_wake_up_next_func, ptr noundef null) #15
  ret ptr %call.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @rpc_wake_up_next_func(ptr nocapture noundef readnone %task, ptr nocapture noundef readnone %data) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 true
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_wake_up(ptr noundef %queue) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef %queue) #15
  %maxpriority.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 2
  %tasks.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1
  %arrayidx.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 3
  %priority.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 3
  %nr.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 4
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %tasks.i.i to i32
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end.i, %entry
  %0 = ptrtoint ptr %maxpriority.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %maxpriority.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not.i.i = icmp eq i8 %1, 0
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %1)
  %cmp.i.i.i = icmp ugt i8 %1, 2
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %if.then.i.i.if.end.i.i.i_crit_edge

if.then.i.i.if.end.i.i.i_crit_edge:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i.i
  %2 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %3, %arrayidx.i.i.i
  br i1 %cmp.i.not.i.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i.i = getelementptr i8, ptr %3, i32 -36
  br label %__rpc_find_next_queued.exit.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %if.then.i.i.if.end.i.i.i_crit_edge
  %4 = ptrtoint ptr %priority.i.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %priority.i.i.i, align 1
  %idxprom.i.i.i = zext i8 %5 to i32
  %arrayidx3.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 %idxprom.i.i.i
  %6 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %arrayidx3.i.i.i, align 4
  %cmp.i66.not.i.i.i = icmp eq ptr %7, %arrayidx3.i.i.i
  br i1 %cmp.i66.not.i.i.i, label %if.end.i.i.i.if.end15.i.i.i_crit_edge, label %land.lhs.true6.i.i.i

if.end.i.i.i.if.end15.i.i.i_crit_edge:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i.i.i

land.lhs.true6.i.i.i:                             ; preds = %if.end.i.i.i
  %8 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %nr.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool8.not.i.i.i = icmp eq i8 %9, 0
  br i1 %tobool8.not.i.i.i, label %land.lhs.true6.i.i.i.if.end15.i.i.i_crit_edge, label %if.then9.i.i.i

land.lhs.true6.i.i.i.if.end15.i.i.i_crit_edge:    ; preds = %land.lhs.true6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i.i.i

if.then9.i.i.i:                                   ; preds = %land.lhs.true6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %dec.i.i.i = add i8 %9, -1
  %10 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %dec.i.i.i, ptr %nr.i.i.i, align 2
  %11 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx3.i.i.i, align 4
  %add.ptr14.i.i.i = getelementptr i8, ptr %12, i32 -36
  br label %__rpc_find_next_queued.exit.i

if.end15.i.i.i:                                   ; preds = %land.lhs.true6.i.i.i.if.end15.i.i.i_crit_edge, %if.end.i.i.i.if.end15.i.i.i_crit_edge
  %idxprom23.i.i.i = zext i8 %1 to i32
  %arrayidx24.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 %idxprom23.i.i.i
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.cond.i.i.i.do.body.i.i.i_crit_edge, %if.end15.i.i.i
  %q.0.i.i.i = phi ptr [ %arrayidx3.i.i.i, %if.end15.i.i.i ], [ %q.1.i.i.i, %do.cond.i.i.i.do.body.i.i.i_crit_edge ]
  %cmp18.i.i.i = icmp eq ptr %q.0.i.i.i, %tasks.i.i
  %add.ptr25.i.i.i = getelementptr %struct.list_head, ptr %q.0.i.i.i, i32 -1
  %q.1.i.i.i = select i1 %cmp18.i.i.i, ptr %arrayidx24.i.i.i, ptr %add.ptr25.i.i.i
  %13 = ptrtoint ptr %q.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %q.1.i.i.i, align 4
  %cmp.i68.not.i.i.i = icmp eq ptr %14, %q.1.i.i.i
  br i1 %cmp.i68.not.i.i.i, label %do.cond.i.i.i, label %if.then29.i.i.i

if.then29.i.i.i:                                  ; preds = %do.body.i.i.i
  %add.ptr33.i.i.i = getelementptr i8, ptr %14, i32 -36
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %q.1.i.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = ashr exact i32 %sub.ptr.sub.i.i.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.div.i.i.i, i32 %idxprom.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %sub.ptr.div.i.i.i, %idxprom.i.i.i
  br i1 %cmp.not.i.i.i.i, label %if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge, label %if.then.i.i.i.i

if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge: ; preds = %if.then29.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_find_next_queued.exit.i

if.then.i.i.i.i:                                  ; preds = %if.then29.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv3.i.i.i.i = trunc i32 %sub.ptr.div.i.i.i to i8
  %15 = ptrtoint ptr %priority.i.i.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv3.i.i.i.i, ptr %priority.i.i.i, align 1
  %shl.i.i.i.i = shl nuw i32 1, %sub.ptr.div.i.i.i
  %conv5.i.i.i.i = trunc i32 %shl.i.i.i.i to i8
  %16 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv5.i.i.i.i, ptr %nr.i.i.i, align 2
  br label %__rpc_find_next_queued.exit.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %cmp39.not.i.i.i = icmp eq ptr %q.1.i.i.i, %arrayidx3.i.i.i
  br i1 %cmp39.not.i.i.i, label %do.end.i.i.i, label %do.cond.i.i.i.do.body.i.i.i_crit_edge

do.cond.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i.i

do.end.i.i.i:                                     ; preds = %do.cond.i.i.i
  call void @__sanitizer_cov_trace_cmp1(i8 %5, i8 %1)
  %cmp.not.i.i.i.i.i = icmp eq i8 %5, %1
  br i1 %cmp.not.i.i.i.i.i, label %do.end.i.i.i.rpc_wake_up_locked.exit_crit_edge, label %if.then.i.i.i.i.i

do.end.i.i.i.rpc_wake_up_locked.exit_crit_edge:   ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_locked.exit

if.then.i.i.i.i.i:                                ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %idxprom23.i.i.i.le = zext i8 %1 to i32
  %17 = ptrtoint ptr %priority.i.i.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %1, ptr %priority.i.i.i, align 1
  %shl.i.i.i.i.i = shl nuw i32 1, %idxprom23.i.i.i.le
  %conv5.i.i.i.i.i = trunc i32 %shl.i.i.i.i.i to i8
  %18 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv5.i.i.i.i.i, ptr %nr.i.i.i, align 2
  br label %rpc_wake_up_locked.exit

if.end.i.i:                                       ; preds = %for.cond.i
  %19 = ptrtoint ptr %tasks.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %tasks.i.i, align 4
  %cmp.i10.not.i.i = icmp eq ptr %20, %tasks.i.i
  %add.ptr.i.i = getelementptr i8, ptr %20, i32 -36
  br i1 %cmp.i10.not.i.i, label %if.end.i.i.rpc_wake_up_locked.exit_crit_edge, label %if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge

if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_find_next_queued.exit.i

if.end.i.i.rpc_wake_up_locked.exit_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_locked.exit

__rpc_find_next_queued.exit.i:                    ; preds = %if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge, %if.then.i.i.i.i, %if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge, %if.then9.i.i.i, %if.then.i.i.i
  %retval.0.i.i = phi ptr [ %add.ptr14.i.i.i, %if.then9.i.i.i ], [ %add.ptr.i.i.i, %if.then.i.i.i ], [ %add.ptr33.i.i.i, %if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge ], [ %add.ptr33.i.i.i, %if.then.i.i.i.i ], [ %add.ptr.i.i, %if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge ]
  %cmp.i = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i, label %__rpc_find_next_queued.exit.i.rpc_wake_up_locked.exit_crit_edge, label %if.end.i

__rpc_find_next_queued.exit.i.rpc_wake_up_locked.exit_crit_edge: ; preds = %__rpc_find_next_queued.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_locked.exit

if.end.i:                                         ; preds = %__rpc_find_next_queued.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %21 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %21, ptr noundef %queue, ptr noundef nonnull %retval.0.i.i, ptr noundef null, ptr noundef null) #15
  br label %for.cond.i

rpc_wake_up_locked.exit:                          ; preds = %__rpc_find_next_queued.exit.i.rpc_wake_up_locked.exit_crit_edge, %if.end.i.i.rpc_wake_up_locked.exit_crit_edge, %if.then.i.i.i.i.i, %do.end.i.i.i.rpc_wake_up_locked.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %queue) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_wake_up_status(ptr noundef %queue, i32 noundef %status) #0 align 64 {
entry:
  %status.addr.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef %queue) #15
  %maxpriority.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 2
  %tasks.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1
  %arrayidx.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 3
  %priority.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 3
  %nr.i.i.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %queue, i32 0, i32 4
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %tasks.i.i to i32
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end.i, %entry
  %0 = ptrtoint ptr %maxpriority.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %maxpriority.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not.i.i = icmp eq i8 %1, 0
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %1)
  %cmp.i.i.i = icmp ugt i8 %1, 2
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %if.then.i.i.if.end.i.i.i_crit_edge

if.then.i.i.if.end.i.i.i_crit_edge:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i.i
  %2 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %3, %arrayidx.i.i.i
  br i1 %cmp.i.not.i.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i.i = getelementptr i8, ptr %3, i32 -36
  br label %__rpc_find_next_queued.exit.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %if.then.i.i.if.end.i.i.i_crit_edge
  %4 = ptrtoint ptr %priority.i.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %priority.i.i.i, align 1
  %idxprom.i.i.i = zext i8 %5 to i32
  %arrayidx3.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 %idxprom.i.i.i
  %6 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %arrayidx3.i.i.i, align 4
  %cmp.i66.not.i.i.i = icmp eq ptr %7, %arrayidx3.i.i.i
  br i1 %cmp.i66.not.i.i.i, label %if.end.i.i.i.if.end15.i.i.i_crit_edge, label %land.lhs.true6.i.i.i

if.end.i.i.i.if.end15.i.i.i_crit_edge:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i.i.i

land.lhs.true6.i.i.i:                             ; preds = %if.end.i.i.i
  %8 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %nr.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool8.not.i.i.i = icmp eq i8 %9, 0
  br i1 %tobool8.not.i.i.i, label %land.lhs.true6.i.i.i.if.end15.i.i.i_crit_edge, label %if.then9.i.i.i

land.lhs.true6.i.i.i.if.end15.i.i.i_crit_edge:    ; preds = %land.lhs.true6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i.i.i

if.then9.i.i.i:                                   ; preds = %land.lhs.true6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %dec.i.i.i = add i8 %9, -1
  %10 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %dec.i.i.i, ptr %nr.i.i.i, align 2
  %11 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx3.i.i.i, align 4
  %add.ptr14.i.i.i = getelementptr i8, ptr %12, i32 -36
  br label %__rpc_find_next_queued.exit.i

if.end15.i.i.i:                                   ; preds = %land.lhs.true6.i.i.i.if.end15.i.i.i_crit_edge, %if.end.i.i.i.if.end15.i.i.i_crit_edge
  %idxprom23.i.i.i = zext i8 %1 to i32
  %arrayidx24.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %queue, i32 0, i32 1, i32 %idxprom23.i.i.i
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.cond.i.i.i.do.body.i.i.i_crit_edge, %if.end15.i.i.i
  %q.0.i.i.i = phi ptr [ %arrayidx3.i.i.i, %if.end15.i.i.i ], [ %q.1.i.i.i, %do.cond.i.i.i.do.body.i.i.i_crit_edge ]
  %cmp18.i.i.i = icmp eq ptr %q.0.i.i.i, %tasks.i.i
  %add.ptr25.i.i.i = getelementptr %struct.list_head, ptr %q.0.i.i.i, i32 -1
  %q.1.i.i.i = select i1 %cmp18.i.i.i, ptr %arrayidx24.i.i.i, ptr %add.ptr25.i.i.i
  %13 = ptrtoint ptr %q.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %q.1.i.i.i, align 4
  %cmp.i68.not.i.i.i = icmp eq ptr %14, %q.1.i.i.i
  br i1 %cmp.i68.not.i.i.i, label %do.cond.i.i.i, label %if.then29.i.i.i

if.then29.i.i.i:                                  ; preds = %do.body.i.i.i
  %add.ptr33.i.i.i = getelementptr i8, ptr %14, i32 -36
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %q.1.i.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = ashr exact i32 %sub.ptr.sub.i.i.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.div.i.i.i, i32 %idxprom.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %sub.ptr.div.i.i.i, %idxprom.i.i.i
  br i1 %cmp.not.i.i.i.i, label %if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge, label %if.then.i.i.i.i

if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge: ; preds = %if.then29.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_find_next_queued.exit.i

if.then.i.i.i.i:                                  ; preds = %if.then29.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv3.i.i.i.i = trunc i32 %sub.ptr.div.i.i.i to i8
  %15 = ptrtoint ptr %priority.i.i.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv3.i.i.i.i, ptr %priority.i.i.i, align 1
  %shl.i.i.i.i = shl nuw i32 1, %sub.ptr.div.i.i.i
  %conv5.i.i.i.i = trunc i32 %shl.i.i.i.i to i8
  %16 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv5.i.i.i.i, ptr %nr.i.i.i, align 2
  br label %__rpc_find_next_queued.exit.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %cmp39.not.i.i.i = icmp eq ptr %q.1.i.i.i, %arrayidx3.i.i.i
  br i1 %cmp39.not.i.i.i, label %do.end.i.i.i, label %do.cond.i.i.i.do.body.i.i.i_crit_edge

do.cond.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i.i

do.end.i.i.i:                                     ; preds = %do.cond.i.i.i
  call void @__sanitizer_cov_trace_cmp1(i8 %5, i8 %1)
  %cmp.not.i.i.i.i.i = icmp eq i8 %5, %1
  br i1 %cmp.not.i.i.i.i.i, label %do.end.i.i.i.rpc_wake_up_status_locked.exit_crit_edge, label %if.then.i.i.i.i.i

do.end.i.i.i.rpc_wake_up_status_locked.exit_crit_edge: ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_status_locked.exit

if.then.i.i.i.i.i:                                ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %idxprom23.i.i.i.le = zext i8 %1 to i32
  %17 = ptrtoint ptr %priority.i.i.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %1, ptr %priority.i.i.i, align 1
  %shl.i.i.i.i.i = shl nuw i32 1, %idxprom23.i.i.i.le
  %conv5.i.i.i.i.i = trunc i32 %shl.i.i.i.i.i to i8
  %18 = ptrtoint ptr %nr.i.i.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv5.i.i.i.i.i, ptr %nr.i.i.i, align 2
  br label %rpc_wake_up_status_locked.exit

if.end.i.i:                                       ; preds = %for.cond.i
  %19 = ptrtoint ptr %tasks.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %tasks.i.i, align 4
  %cmp.i10.not.i.i = icmp eq ptr %20, %tasks.i.i
  %add.ptr.i.i = getelementptr i8, ptr %20, i32 -36
  br i1 %cmp.i10.not.i.i, label %if.end.i.i.rpc_wake_up_status_locked.exit_crit_edge, label %if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge

if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_find_next_queued.exit.i

if.end.i.i.rpc_wake_up_status_locked.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_status_locked.exit

__rpc_find_next_queued.exit.i:                    ; preds = %if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge, %if.then.i.i.i.i, %if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge, %if.then9.i.i.i, %if.then.i.i.i
  %retval.0.i.i = phi ptr [ %add.ptr14.i.i.i, %if.then9.i.i.i ], [ %add.ptr.i.i.i, %if.then.i.i.i ], [ %add.ptr33.i.i.i, %if.then29.i.i.i.__rpc_find_next_queued.exit.i_crit_edge ], [ %add.ptr33.i.i.i, %if.then.i.i.i.i ], [ %add.ptr.i.i, %if.end.i.i.__rpc_find_next_queued.exit.i_crit_edge ]
  %cmp.i = icmp eq ptr %retval.0.i.i, null
  br i1 %cmp.i, label %__rpc_find_next_queued.exit.i.rpc_wake_up_status_locked.exit_crit_edge, label %if.end.i

__rpc_find_next_queued.exit.i.rpc_wake_up_status_locked.exit_crit_edge: ; preds = %__rpc_find_next_queued.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_status_locked.exit

if.end.i:                                         ; preds = %__rpc_find_next_queued.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.addr.i.i) #15
  %21 = ptrtoint ptr %status.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %status, ptr %status.addr.i.i, align 4
  %22 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i = call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %22, ptr noundef %queue, ptr noundef nonnull %retval.0.i.i, ptr noundef nonnull @rpc_task_action_set_status, ptr noundef nonnull %status.addr.i.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.addr.i.i) #15
  br label %for.cond.i

rpc_wake_up_status_locked.exit:                   ; preds = %__rpc_find_next_queued.exit.i.rpc_wake_up_status_locked.exit_crit_edge, %if.end.i.i.rpc_wake_up_status_locked.exit_crit_edge, %if.then.i.i.i.i.i, %do.end.i.i.i.rpc_wake_up_status_locked.exit_crit_edge
  call void @_raw_spin_unlock(ptr noundef %queue) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_delay(ptr noundef %task, i32 noundef %delay) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %0, %delay
  %call.i = tail call fastcc zeroext i1 @rpc_sleep_check_activated(ptr noundef %task) #15
  br i1 %call.i, label %if.end.i, label %entry.rpc_sleep_on_timeout.exit_crit_edge

entry.rpc_sleep_on_timeout.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_sleep_on_timeout.exit

if.end.i:                                         ; preds = %entry
  %tk_callback.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 3
  %1 = ptrtoint ptr %tk_callback.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %tk_callback.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %2, null
  br i1 %cmp.not.i.i, label %if.then37.critedge.i.i, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %if.end.i
  %.b44.i.i = load i1, ptr @rpc_set_tk_callback.__already_done, align 1
  br i1 %.b44.i.i, label %land.rhs.i.i.rpc_set_tk_callback.exit.i_crit_edge, label %if.then.i.i, !prof !1883

land.rhs.i.i.rpc_set_tk_callback.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_set_tk_callback.exit.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_set_tk_callback.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 409, i32 noundef 9, ptr noundef null) #15
  br label %rpc_set_tk_callback.exit.i

if.then37.critedge.i.i:                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %tk_callback.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @__rpc_atrun, ptr %tk_callback.i.i, align 8
  br label %rpc_set_tk_callback.exit.i

rpc_set_tk_callback.exit.i:                       ; preds = %if.then37.critedge.i.i, %if.then.i.i, %land.rhs.i.i.rpc_set_tk_callback.exit.i_crit_edge
  tail call void @_raw_spin_lock(ptr noundef nonnull @delay_queue) #15
  %tk_priority.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %4 = ptrtoint ptr %tk_priority.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %tk_priority.i, align 2
  %bf.lshr.i = lshr i8 %bf.load.i, 6
  tail call fastcc void @__rpc_sleep_on_priority_timeout(ptr noundef nonnull @delay_queue, ptr noundef %task, i32 noundef %add, i8 noundef zeroext %bf.lshr.i) #15
  tail call void @_raw_spin_unlock(ptr noundef nonnull @delay_queue) #15
  br label %rpc_sleep_on_timeout.exit

rpc_sleep_on_timeout.exit:                        ; preds = %rpc_set_tk_callback.exit.i, %entry.rpc_sleep_on_timeout.exit_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @__rpc_atrun(ptr nocapture noundef %task) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tk_status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %1)
  %cmp = icmp eq i32 %1, -110
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %tk_status, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_prepare_task(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_ops = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 12
  %0 = ptrtoint ptr %tk_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_ops, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tk_calldata = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 11
  %4 = ptrtoint ptr %tk_calldata to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tk_calldata, align 4
  tail call void %3(ptr noundef %task, ptr noundef %5) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_exit_task(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %0 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_action, align 4
  tail call fastcc void @trace_rpc_task_end(ptr noundef %task, ptr noundef %1)
  %2 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %tk_action, align 4
  %tk_ops = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 12
  %3 = ptrtoint ptr %tk_ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_ops, align 8
  %rpc_count_stats = getelementptr inbounds %struct.rpc_call_ops, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %rpc_count_stats to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rpc_count_stats, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tk_calldata = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 11
  %7 = ptrtoint ptr %tk_calldata to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tk_calldata, align 4
  tail call void %6(ptr noundef %task, ptr noundef %8) #15
  br label %if.end7

if.else:                                          ; preds = %entry
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %tobool4.not = icmp eq ptr %10, null
  br i1 %tobool4.not, label %if.else.if.end7_crit_edge, label %if.then5

if.else.if.end7_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.then5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %cl_metrics = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 13
  %11 = ptrtoint ptr %cl_metrics to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cl_metrics, align 4
  tail call void @rpc_count_iostats(ptr noundef %task, ptr noundef %12) #15
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.else.if.end7_crit_edge, %if.then
  %13 = ptrtoint ptr %tk_ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tk_ops, align 8
  %rpc_call_done = getelementptr inbounds %struct.rpc_call_ops, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %rpc_call_done to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rpc_call_done, align 4
  %cmp.not = icmp eq ptr %16, null
  br i1 %cmp.not, label %if.end7.if.end19_crit_edge, label %if.then9

if.end7.if.end19_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

if.then9:                                         ; preds = %if.end7
  tail call fastcc void @trace_rpc_task_call_done(ptr noundef %task, ptr noundef nonnull %16)
  %17 = ptrtoint ptr %tk_ops to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tk_ops, align 8
  %rpc_call_done13 = getelementptr inbounds %struct.rpc_call_ops, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %rpc_call_done13 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rpc_call_done13, align 4
  %tk_calldata14 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 11
  %21 = ptrtoint ptr %tk_calldata14 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tk_calldata14, align 4
  tail call void %20(ptr noundef %task, ptr noundef %22) #15
  %23 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tk_action, align 4
  %cmp16.not = icmp eq ptr %24, null
  br i1 %cmp16.not, label %if.then9.if.end19_crit_edge, label %if.then17

if.then9.if.end19_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

if.then17:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @xprt_release(ptr noundef %task) #15
  %tk_timeouts.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 21
  %25 = ptrtoint ptr %tk_timeouts.i to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 0, ptr %tk_timeouts.i, align 2
  %tk_flags.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %26 = ptrtoint ptr %tk_flags.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %tk_flags.i, align 4
  %28 = and i16 %27, -2081
  store i16 %28, ptr %tk_flags.i, align 4
  %tk_garb_retry.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 23
  %29 = ptrtoint ptr %tk_garb_retry.i.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %bf.load.i.i = load i8, ptr %tk_garb_retry.i.i, align 2
  %bf.clear.i.i = and i8 %bf.load.i.i, -64
  %bf.set6.i.i = or i8 %bf.clear.i.i, 42
  store i8 %bf.set6.i.i, ptr %tk_garb_retry.i.i, align 2
  %call.i.i = tail call i64 @ktime_get() #15
  %tk_start.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 18
  %30 = ptrtoint ptr %tk_start.i.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %call.i.i, ptr %tk_start.i.i, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.then9.if.end19_crit_edge, %if.end7.if.end19_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_end(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_end, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1894
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1895
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1895
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_end.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 384, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_count_iostats(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_call_done(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_call_done, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1898
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1899
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1899
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_call_done, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_call_done.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_call_done.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 385, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_signal_task(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  %status.addr.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %0 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tk_runstate, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %3 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_action, align 4
  tail call fastcc void @trace_rpc_task_signalled(ptr noundef %task, ptr noundef %4)
  tail call void @_set_bit(i32 noundef 6, ptr noundef %tk_runstate) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1900
  %tk_waitqueue = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 7
  %5 = ptrtoint ptr %tk_waitqueue to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %tk_waitqueue, align 8
  %tobool8.not = icmp eq ptr %6, null
  br i1 %tobool8.not, label %if.end.cleanup_crit_edge, label %if.then9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then9:                                         ; preds = %if.end
  %7 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %tk_runstate, align 4
  %9 = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.then9.cleanup_crit_edge, label %if.end.i

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef nonnull %6) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.addr.i.i) #15
  %10 = ptrtoint ptr %status.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -512, ptr %status.addr.i.i, align 4
  %11 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i = call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %11, ptr noundef nonnull %6, ptr noundef %task, ptr noundef nonnull @rpc_task_action_set_status, ptr noundef nonnull %status.addr.i.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.addr.i.i) #15
  call void @_raw_spin_unlock(ptr noundef nonnull %6) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.then9.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_signalled(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_signalled, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1901
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1902
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1902
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_signalled, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_signalled.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_signalled.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 383, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_exit(ptr noundef %task, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %0 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %status, ptr %tk_status, align 4
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %1 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @rpc_exit_task, ptr %tk_action, align 4
  %tk_waitqueue = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 7
  %2 = ptrtoint ptr %tk_waitqueue to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tk_waitqueue, align 8
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %4 = ptrtoint ptr %tk_runstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %tk_runstate.i, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %entry.rpc_wake_up_queued_task.exit_crit_edge, label %if.end.i

entry.rpc_wake_up_queued_task.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_wake_up_queued_task.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef %3) #15
  %7 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %7, ptr noundef %3, ptr noundef %task, ptr noundef null, ptr noundef null) #15
  tail call void @_raw_spin_unlock(ptr noundef %3) #15
  br label %rpc_wake_up_queued_task.exit

rpc_wake_up_queued_task.exit:                     ; preds = %if.end.i, %entry.rpc_wake_up_queued_task.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_release_calldata(ptr nocapture noundef readonly %ops, ptr noundef %calldata) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %rpc_release = getelementptr inbounds %struct.rpc_call_ops, ptr %ops, i32 0, i32 3
  %0 = ptrtoint ptr %rpc_release to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rpc_release, align 4
  %cmp.not = icmp eq ptr %1, null
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %1(ptr noundef %calldata) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_execute(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %0 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %tk_flags, align 4
  %2 = and i16 %1, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool.not = icmp eq i16 %2, 0
  %tk_client.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %3 = ptrtoint ptr %tk_client.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_client.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @rpc_task_set_debuginfo.rpc_pid, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1903
  tail call void @llvm.prefetch.p0(ptr nonnull @rpc_task_set_debuginfo.rpc_pid, i32 1, i32 3, i32 1) #15
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @rpc_task_set_debuginfo.rpc_pid, ptr nonnull @rpc_task_set_debuginfo.rpc_pid, i32 1, ptr nonnull elementtype(i32) @rpc_task_set_debuginfo.rpc_pid) #15, !srcloc !1904
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1905
  br label %rpc_set_active.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %cl_pid.i.i = getelementptr inbounds %struct.rpc_clnt, ptr %4, i32 0, i32 4
  %call.i.i7.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cl_pid.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1903
  tail call void @llvm.prefetch.p0(ptr %cl_pid.i.i, i32 1, i32 3, i32 1) #15
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cl_pid.i.i, ptr %cl_pid.i.i, i32 1, ptr elementtype(i32) %cl_pid.i.i) #15, !srcloc !1904
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1905
  br label %rpc_set_active.exit

rpc_set_active.exit:                              ; preds = %if.end.i.i, %if.then.i.i
  %.pn.i.i = phi { i32, i32 } [ %5, %if.then.i.i ], [ %6, %if.end.i.i ]
  %conv2.sink.in.i.i = extractvalue { i32, i32 } %.pn.i.i, 0
  %conv2.sink.i.i = trunc i32 %conv2.sink.in.i.i to i16
  %7 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %conv2.sink.i.i, ptr %7, align 8
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 2, ptr noundef %tk_runstate.i) #15
  tail call fastcc void @trace_rpc_task_begin(ptr noundef %task) #15
  %9 = load ptr, ptr @rpciod_workqueue, align 4
  tail call fastcc void @rpc_make_runnable(ptr noundef %9, ptr noundef %task)
  br i1 %tobool.not, label %if.then, label %rpc_set_active.exit.if.end_crit_edge

rpc_set_active.exit.if.end_crit_edge:             ; preds = %rpc_set_active.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %rpc_set_active.exit
  call void @__sanitizer_cov_trace_pc() #17
  %10 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %15, 262144
  %or.i = or i32 %15, 262144
  store i32 %or.i, ptr %flags1.i, align 4
  tail call fastcc void @__rpc_execute(ptr noundef %task)
  %16 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i5 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i5 to ptr
  %task.i6 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i6 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i6, align 8
  %flags1.i7 = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %flags1.i7 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags1.i7, align 4
  %and.i8 = and i32 %21, -262145
  %or.i9 = or i32 %and.i8, %and.i
  store i32 %or.i9, ptr %flags1.i7, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %rpc_set_active.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rpc_make_runnable(ptr noundef %wq, ptr noundef %task) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %call = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %tk_runstate) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %tk_runstate) #15
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %0 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %tk_flags, align 4
  %2 = and i16 %1, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool3.not = icmp eq i16 %2, 0
  br i1 %tobool3.not, label %if.else, label %do.body

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %u = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8
  tail call void @__init_work(ptr noundef %u, i32 noundef 0) #15
  %3 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -64, ptr %u, align 4
  %lockdep_map = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.322, ptr noundef nonnull @rpc_make_runnable.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry8 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %4 = ptrtoint ptr %entry8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %entry8, ptr %entry8, align 4
  %prev.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %entry8, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %6 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @rpc_async_schedule, ptr %func, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %wq, ptr noundef %u) #15
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @wake_up_bit(ptr noundef %tk_runstate, i32 noundef 1) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else, %do.body, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__rpc_execute(ptr noundef %task) unnamed_addr #0 align 64 {
entry:
  %k.i.i = alloca %struct.wait_bit_key, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %0 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %tk_flags, align 4
  %2 = and i16 %1, 1
  %tk_runstate = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  %3 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %tk_runstate, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.if.end29_crit_edge, label %land.rhs

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b120 = load i1, ptr @__rpc_execute.__already_done, align 1
  br i1 %.b120, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1883

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__rpc_execute.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 888, i32 noundef 9, ptr noundef null) #15
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %6 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %tk_runstate, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool39.not = icmp eq i32 %8, 0
  br i1 %tobool39.not, label %for.cond.preheader, label %if.end29.cleanup83_crit_edge

if.end29.cleanup83_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup83

for.cond.preheader:                               ; preds = %if.end29
  %tk_action = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 4
  %tk_callback = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 3
  %tk_rpc_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %tk_status.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %tk_waitqueue.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool70.not = icmp eq i16 %2, 0
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.preheader
  %9 = ptrtoint ptr %tk_callback to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_callback, align 8
  %tobool42.not = icmp eq ptr %10, null
  br i1 %tobool42.not, label %if.end46, label %if.end46.thread

if.end46.thread:                                  ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  %11 = ptrtoint ptr %tk_callback to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %tk_callback, align 8
  br label %if.end49

if.end46:                                         ; preds = %for.cond
  %12 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tk_action, align 4
  %tobool47.not = icmp eq ptr %13, null
  br i1 %tobool47.not, label %for.end, label %if.end46.if.end49_crit_edge

if.end46.if.end49_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end49

if.end49:                                         ; preds = %if.end46.if.end49_crit_edge, %if.end46.thread
  %do_action.0140 = phi ptr [ %10, %if.end46.thread ], [ %13, %if.end46.if.end49_crit_edge ]
  tail call fastcc void @trace_rpc_task_run_action(ptr noundef %task, ptr noundef nonnull %do_action.0140)
  tail call void %do_action.0140(ptr noundef %task) #15
  %14 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %tk_runstate, align 4
  %16 = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool52.not = icmp eq i32 %16, 0
  br i1 %tobool52.not, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__might_resched(ptr noundef nonnull @.str.54, i32 noundef 916, i32 noundef 0) #15
  %call.i = tail call i32 @__cond_resched() #15
  br label %for.cond.backedge

if.end56:                                         ; preds = %if.end49
  %17 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %tk_runstate, align 4
  %19 = and i32 %18, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool59.not = icmp eq i32 %19, 0
  br i1 %tobool59.not, label %if.end56.if.end61_crit_edge, label %if.then60

if.end56.if.end61_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end61

if.then60:                                        ; preds = %if.end56
  %20 = ptrtoint ptr %tk_rpc_status to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -512, ptr %tk_rpc_status, align 8
  %21 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 -512, ptr %tk_status.i, align 4
  %22 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @rpc_exit_task, ptr %tk_action, align 4
  %23 = ptrtoint ptr %tk_waitqueue.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tk_waitqueue.i, align 8
  %25 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %tk_runstate, align 4
  %27 = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i.i, label %if.then60.if.end61_crit_edge, label %if.end.i.i

if.then60.if.end61_crit_edge:                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end61

if.end.i.i:                                       ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef %24) #15
  %28 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i.i = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %28, ptr noundef %24, ptr noundef %task, ptr noundef null, ptr noundef null) #15
  tail call void @_raw_spin_unlock(ptr noundef %24) #15
  br label %if.end61

if.end61:                                         ; preds = %if.end.i.i, %if.then60.if.end61_crit_edge, %if.end56.if.end61_crit_edge
  %29 = ptrtoint ptr %tk_waitqueue.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tk_waitqueue.i, align 8
  tail call void @_raw_spin_lock(ptr noundef %30) #15
  %31 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %tk_runstate, align 4
  %33 = and i32 %32, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool64.not = icmp eq i32 %33, 0
  br i1 %tobool64.not, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock(ptr noundef %30) #15
  br label %for.cond.backedge

if.end67:                                         ; preds = %if.end61
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %tk_runstate) #15
  tail call void @_raw_spin_unlock(ptr noundef %30) #15
  br i1 %tobool70.not, label %if.end72, label %if.end67.cleanup83_crit_edge

if.end67.cleanup83_crit_edge:                     ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup83

if.end72:                                         ; preds = %if.end67
  %34 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tk_action, align 4
  tail call fastcc void @trace_rpc_task_sync_sleep(ptr noundef %task, ptr noundef %35)
  %call75 = tail call i32 @out_of_line_wait_on_bit(ptr noundef %tk_runstate, i32 noundef 1, ptr noundef nonnull @rpc_wait_bit_killable, i32 noundef 258) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %cmp = icmp slt i32 %call75, 0
  br i1 %cmp, label %if.then77, label %if.end72.if.end81_crit_edge

if.end72.if.end81_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end81

if.then77:                                        ; preds = %if.end72
  %36 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tk_action, align 4
  tail call fastcc void @trace_rpc_task_signalled(ptr noundef %task, ptr noundef %37)
  tail call void @_set_bit(i32 noundef 6, ptr noundef %tk_runstate) #15
  %38 = ptrtoint ptr %tk_rpc_status to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 -512, ptr %tk_rpc_status, align 8
  %39 = ptrtoint ptr %tk_status.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 -512, ptr %tk_status.i, align 4
  %40 = ptrtoint ptr %tk_action to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @rpc_exit_task, ptr %tk_action, align 4
  %41 = ptrtoint ptr %tk_waitqueue.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tk_waitqueue.i, align 8
  %43 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %tk_runstate, align 4
  %45 = and i32 %44, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.not.i.i133 = icmp eq i32 %45, 0
  br i1 %tobool.not.i.i133, label %if.then77.if.end81_crit_edge, label %if.end.i.i135

if.then77.if.end81_crit_edge:                     ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end81

if.end.i.i135:                                    ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock(ptr noundef %42) #15
  %46 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i.i134 = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %46, ptr noundef %42, ptr noundef %task, ptr noundef null, ptr noundef null) #15
  tail call void @_raw_spin_unlock(ptr noundef %42) #15
  br label %if.end81

if.end81:                                         ; preds = %if.end.i.i135, %if.then77.if.end81_crit_edge, %if.end72.if.end81_crit_edge
  %47 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %tk_action, align 4
  tail call fastcc void @trace_rpc_task_sync_wake(ptr noundef %task, ptr noundef %48)
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end81, %if.then65, %if.then53
  br label %for.cond

for.end:                                          ; preds = %if.end46
  %49 = ptrtoint ptr %tk_runstate to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %tk_runstate, align 4
  %51 = and i32 %50, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.not.i = icmp eq i32 %51, 0
  br i1 %tobool.not.i, label %for.end.if.end28.i_crit_edge, label %land.rhs.i

for.end.if.end28.i_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end28.i

land.rhs.i:                                       ; preds = %for.end
  %.b60.i = load i1, ptr @rpc_release_task.__already_done, align 1
  br i1 %.b60.i, label %land.rhs.i.if.end28.i_crit_edge, label %if.then.i, !prof !1883

land.rhs.i.if.end28.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end28.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rpc_release_task.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.54, i32 noundef 1200, i32 noundef 9, ptr noundef null) #15
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end28.i_crit_edge, %for.end.if.end28.i_crit_edge
  tail call fastcc void @rpc_release_resources_task(ptr noundef %task) #15
  %call.i.i.i137 = tail call zeroext i1 @__kasan_check_read(ptr noundef %task, i32 noundef 4) #15
  %52 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %task, align 4
  %54 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %tk_flags, align 4
  %56 = and i16 %55, 1
  %narrow.i = sub nuw nsw i16 2, %56
  %add.i = zext i16 %narrow.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %53, i32 %add.i)
  %cmp.not.i = icmp eq i32 %53, %add.i
  br i1 %cmp.not.i, label %if.else.i, label %if.then41.i

if.then41.i:                                      ; preds = %if.end28.i
  %call.i.i = tail call ptr @bit_waitqueue(ptr noundef %tk_runstate, i32 noundef 2) #15
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %k.i.i) #15
  %57 = getelementptr inbounds %struct.wait_bit_key, ptr %k.i.i, i32 0, i32 1
  %58 = getelementptr inbounds %struct.wait_bit_key, ptr %k.i.i, i32 0, i32 2
  %59 = ptrtoint ptr %k.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %tk_runstate, ptr %k.i.i, align 4
  %60 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 2, ptr %57, align 4
  %61 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %58, align 4
  tail call fastcc void @trace_rpc_task_complete(ptr noundef %task) #15
  %call4.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %call.i.i) #15
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %tk_runstate) #15
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %task, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1889
  tail call void @llvm.prefetch.p0(ptr %task, i32 1, i32 3, i32 1) #15
  %62 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %task, ptr %task, i32 1, ptr elementtype(i32) %task) #15, !srcloc !1890
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1891
  %head.i.i.i = getelementptr inbounds %struct.wait_queue_head, ptr %call.i.i, i32 0, i32 1
  %63 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i19.not.i.i = icmp eq ptr %64, %head.i.i.i
  br i1 %cmp.i.i19.not.i.i, label %if.then41.i.rpc_complete_task.exit.i_crit_edge, label %if.then.i.i

if.then41.i.rpc_complete_task.exit.i_crit_edge:   ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_complete_task.exit.i

if.then.i.i:                                      ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__wake_up_locked_key(ptr noundef %call.i.i, i32 noundef 3, ptr noundef nonnull %k.i.i) #15
  br label %rpc_complete_task.exit.i

rpc_complete_task.exit.i:                         ; preds = %if.then.i.i, %if.then41.i.rpc_complete_task.exit.i_crit_edge
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %62, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.not.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  call void @_raw_spin_unlock_irqrestore(ptr noundef %call.i.i, i32 noundef %call4.i.i) #15
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %k.i.i) #15
  br i1 %cmp.i.i.i.not.i, label %rpc_complete_task.exit.i.if.end50.i_crit_edge, label %rpc_complete_task.exit.i.cleanup83_crit_edge

rpc_complete_task.exit.i.cleanup83_crit_edge:     ; preds = %rpc_complete_task.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup83

rpc_complete_task.exit.i.if.end50.i_crit_edge:    ; preds = %rpc_complete_task.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i

if.else.i:                                        ; preds = %if.end28.i
  %call.i.i61.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %task, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1889
  tail call void @llvm.prefetch.p0(ptr %task, i32 1, i32 3, i32 1) #15
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %task, ptr %task, i32 1, ptr elementtype(i32) %task) #15, !srcloc !1890
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %65, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1891
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.else.i.if.end50.i_crit_edge, label %if.else.i.cleanup83_crit_edge

if.else.i.cleanup83_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup83

if.else.i.if.end50.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.else.i.if.end50.i_crit_edge, %rpc_complete_task.exit.i.if.end50.i_crit_edge
  %tk_workqueue.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 17
  %66 = ptrtoint ptr %tk_workqueue.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %tk_workqueue.i, align 4
  call fastcc void @rpc_final_put_task(ptr noundef %task, ptr noundef %67) #15
  br label %cleanup83

cleanup83:                                        ; preds = %if.end50.i, %if.else.i.cleanup83_crit_edge, %rpc_complete_task.exit.i.cleanup83_crit_edge, %if.end67.cleanup83_crit_edge, %if.end29.cleanup83_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_malloc(ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %rq_callsize = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %rq_callsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rq_callsize, align 4
  %rq_rcvsize = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 17
  %4 = ptrtoint ptr %rq_rcvsize to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rq_rcvsize, align 4
  %add = add i32 %5, %3
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %6 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %tk_flags, align 4
  %8 = and i16 %7, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool.not = icmp eq i16 %8, 0
  %spec.store.select = select i1 %tobool.not, i32 3136, i32 141312
  %add1 = add i32 %add, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2049, i32 %add1)
  %cmp = icmp ult i32 %add1, 2049
  br i1 %cmp, label %if.then3, label %if.end8.i

if.then3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %9 = load ptr, ptr @rpc_buffer_mempool, align 4
  %call = tail call noalias ptr @mempool_alloc(ptr noundef %9, i32 noundef %spec.store.select) #15
  br label %if.end5

if.end8.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add1, i32 noundef %spec.store.select) #22
  br label %if.end5

if.end5:                                          ; preds = %if.end8.i, %if.then3
  %buf.0 = phi ptr [ %call, %if.then3 ], [ %call9.i, %if.end8.i ]
  %tobool6.not = icmp eq ptr %buf.0, null
  br i1 %tobool6.not, label %if.end5.cleanup_crit_edge, label %if.end8

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end8:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %10 = ptrtoint ptr %buf.0 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %add1, ptr %buf.0, align 4
  %data = getelementptr inbounds %struct.rpc_buffer, ptr %buf.0, i32 0, i32 1
  %rq_buffer = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 14
  %11 = ptrtoint ptr %rq_buffer to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %data, ptr %rq_buffer, align 8
  %12 = ptrtoint ptr %rq_callsize to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rq_callsize, align 4
  %add.ptr = getelementptr i8, ptr %data, i32 %13
  %rq_rbuffer = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 16
  %14 = ptrtoint ptr %rq_rbuffer to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %add.ptr, ptr %rq_rbuffer, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end5.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end8 ], [ -12, %if.end5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @mempool_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_free(ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_rqstp = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 16
  %0 = ptrtoint ptr %tk_rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_rqstp, align 8
  %rq_buffer = getelementptr inbounds %struct.rpc_rqst, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %rq_buffer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_buffer, align 8
  %add.ptr = getelementptr i8, ptr %3, i32 -4
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2049, i32 %5)
  %cmp = icmp ult i32 %5, 2049
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %6 = load ptr, ptr @rpc_buffer_mempool, align 4
  tail call void @mempool_free(ptr noundef %add.ptr, ptr noundef %6) #15
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kfree(ptr noundef %add.ptr) #15
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @rpc_new_task(ptr nocapture noundef readonly %setup_data) local_unnamed_addr #0 align 64 {
entry:
  %old.i.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %setup_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %setup_data, align 4
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = load ptr, ptr @rpc_task_mempool, align 4
  %call.i = tail call noalias ptr @mempool_alloc(ptr noundef %2, i32 noundef 3136) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %task.0 = phi ptr [ %call.i, %if.then ], [ %1, %entry.if.end_crit_edge ]
  %flags.0 = phi i16 [ 128, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %3 = call ptr @memset(ptr %task.0, i32 0, i32 152)
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %task.0, i32 noundef 4) #15
  %4 = ptrtoint ptr %task.0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 1, ptr %task.0, align 4
  %flags.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 8
  %5 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %flags.i, align 4
  %tk_flags.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 20
  %7 = ptrtoint ptr %tk_flags.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %tk_flags.i, align 4
  %callback_ops.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 5
  %8 = ptrtoint ptr %callback_ops.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %callback_ops.i, align 4
  %tk_ops.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 12
  %10 = ptrtoint ptr %tk_ops.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %tk_ops.i, align 8
  %callback_data.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 6
  %11 = ptrtoint ptr %callback_data.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %callback_data.i, align 4
  %tk_calldata.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 11
  %13 = ptrtoint ptr %tk_calldata.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %tk_calldata.i, align 4
  %tk_task.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 2
  %14 = ptrtoint ptr %tk_task.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %tk_task.i, ptr %tk_task.i, align 4
  %prev.i.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 2, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %tk_task.i, ptr %prev.i.i, align 4
  %priority.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 9
  %16 = ptrtoint ptr %priority.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %priority.i, align 2
  %tk_priority.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 23
  %18 = ptrtoint ptr %tk_priority.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load.i = load i8, ptr %tk_priority.i, align 2
  %sub.i = shl i8 %17, 6
  %bf.shl.i = add i8 %sub.i, 64
  %bf.clear.i = and i8 %bf.load.i, 63
  %bf.set.i = or i8 %bf.clear.i, %bf.shl.i
  store i8 %bf.set.i, ptr %tk_priority.i, align 2
  %19 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i to ptr
  %task2.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task2.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task2.i, align 8
  %tgid.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 69
  %23 = ptrtoint ptr %tgid.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %tgid.i, align 4
  %tk_owner.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 19
  %25 = ptrtoint ptr %tk_owner.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %tk_owner.i, align 8
  %workqueue.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 7
  %26 = ptrtoint ptr %workqueue.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %workqueue.i, align 4
  %tk_workqueue.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 17
  %28 = ptrtoint ptr %tk_workqueue.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %27, ptr %tk_workqueue.i, align 4
  %rpc_client.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 1
  %29 = ptrtoint ptr %rpc_client.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rpc_client.i, align 4
  %rpc_xprt.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 2
  %31 = ptrtoint ptr %rpc_xprt.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %rpc_xprt.i, align 4
  %call3.i = tail call ptr @xprt_get(ptr noundef %32) #15
  %call4.i = tail call ptr @rpc_task_get_xprt(ptr noundef %30, ptr noundef %call3.i) #15
  %tk_xprt.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 14
  %33 = ptrtoint ptr %tk_xprt.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call4.i, ptr %tk_xprt.i, align 8
  %rpc_op_cred.i = getelementptr inbounds %struct.rpc_task_setup, ptr %setup_data, i32 0, i32 3
  %34 = ptrtoint ptr %rpc_op_cred.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rpc_op_cred.i, align 4
  %cmp.not.i.i = icmp eq ptr %35, null
  br i1 %cmp.not.i.i, label %if.end.if.end.i.i_crit_edge, label %land.lhs.true.i.i

if.end.if.end.i.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.end
  %cr_count.i.i = getelementptr inbounds %struct.rpc_cred, ptr %35, i32 0, i32 7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i.i) #15
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %cr_count.i.i, i32 noundef 4) #15
  %36 = ptrtoint ptr %cr_count.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %cr_count.i.i, align 4
  br label %do.body.i.i.i.i.i

do.body.i.i.i.i.i:                                ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, %land.lhs.true.i.i
  %38 = phi i32 [ %37, %land.lhs.true.i.i ], [ %asmresult3.i.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge ]
  %39 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %old.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i.i.i.i.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i.i.i.i.i, label %do.body.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge, label %do.cond.i.i.i.i.i

do.body.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge:    ; preds = %do.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i.i.i.i.i

do.cond.i.i.i.i.i:                                ; preds = %do.body.i.i.i.i.i
  %add.i.i.i.i.i = add i32 %38, 1
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %cr_count.i.i, i32 noundef 4) #15
  %call.i3.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i.i, i32 noundef 4) #15
  %40 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %old.i.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %cr_count.i.i, i32 1, i32 3, i32 1) #15
  br label %do.body.i.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i.i:                          ; preds = %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i.i
  %42 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %cr_count.i.i, ptr %cr_count.i.i, i32 %41, i32 %add.i.i.i.i.i, ptr elementtype(i32) %cr_count.i.i) #15, !srcloc !1906
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %42, 0
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i:   ; preds = %do.body.i.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %42, 1
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i.i, %41
  br i1 %cmp.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, !prof !1883

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i.i.i.i.i

if.end4.i.i.i.i.i:                                ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge, %do.body.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge
  %43 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %old.i.i.i.i.i, align 4
  %add5.i.i.i.i.i = add i32 %44, 1
  %45 = or i32 %add5.i.i.i.i.i, %44
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %.not.i.i.i.i.i = icmp sgt i32 %45, -1
  br i1 %.not.i.i.i.i.i, label %if.end4.i.i.i.i.i.refcount_inc_not_zero.exit.i.i_crit_edge, label %if.then10.i.i.i.i.i, !prof !1883

if.end4.i.i.i.i.i.refcount_inc_not_zero.exit.i.i_crit_edge: ; preds = %if.end4.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %refcount_inc_not_zero.exit.i.i

if.then10.i.i.i.i.i:                              ; preds = %if.end4.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @refcount_warn_saturate(ptr noundef %cr_count.i.i, i32 noundef 0) #15
  %46 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pr.i.i = load i32, ptr %old.i.i.i.i.i, align 4
  br label %refcount_inc_not_zero.exit.i.i

refcount_inc_not_zero.exit.i.i:                   ; preds = %if.then10.i.i.i.i.i, %if.end4.i.i.i.i.i.refcount_inc_not_zero.exit.i.i_crit_edge
  %47 = phi i32 [ %44, %if.end4.i.i.i.i.i.refcount_inc_not_zero.exit.i.i_crit_edge ], [ %.pr.i.i, %if.then10.i.i.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool12.i.i.i.not.i.i = icmp eq i32 %47, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i.i) #15
  br i1 %tobool12.i.i.i.not.i.i, label %refcount_inc_not_zero.exit.i.i.if.end.i.i_crit_edge, label %refcount_inc_not_zero.exit.i.i.get_rpccred.exit.i_crit_edge

refcount_inc_not_zero.exit.i.i.get_rpccred.exit.i_crit_edge: ; preds = %refcount_inc_not_zero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %get_rpccred.exit.i

refcount_inc_not_zero.exit.i.i.if.end.i.i_crit_edge: ; preds = %refcount_inc_not_zero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %refcount_inc_not_zero.exit.i.i.if.end.i.i_crit_edge, %if.end.if.end.i.i_crit_edge
  br label %get_rpccred.exit.i

get_rpccred.exit.i:                               ; preds = %if.end.i.i, %refcount_inc_not_zero.exit.i.i.get_rpccred.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ null, %if.end.i.i ], [ %35, %refcount_inc_not_zero.exit.i.i.get_rpccred.exit.i_crit_edge ]
  %tk_op_cred.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 15
  %48 = ptrtoint ptr %tk_op_cred.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %retval.0.i.i, ptr %tk_op_cred.i, align 4
  %49 = ptrtoint ptr %tk_ops.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %tk_ops.i, align 8
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %50, align 4
  %cmp.not.i = icmp eq ptr %52, null
  br i1 %cmp.not.i, label %get_rpccred.exit.i.rpc_init_task.exit_crit_edge, label %if.then.i

get_rpccred.exit.i.rpc_init_task.exit_crit_edge:  ; preds = %get_rpccred.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_init_task.exit

if.then.i:                                        ; preds = %get_rpccred.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %tk_action.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 4
  %53 = ptrtoint ptr %tk_action.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr @rpc_prepare_task, ptr %tk_action.i, align 4
  br label %rpc_init_task.exit

rpc_init_task.exit:                               ; preds = %if.then.i, %get_rpccred.exit.i.rpc_init_task.exit_crit_edge
  %54 = ptrtoint ptr %tk_priority.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %bf.load.i.i = load i8, ptr %tk_priority.i, align 2
  %bf.clear.i.i = and i8 %bf.load.i.i, -64
  %bf.set6.i.i = or i8 %bf.clear.i.i, 42
  store i8 %bf.set6.i.i, ptr %tk_priority.i, align 2
  %call.i.i = call i64 @ktime_get() #15
  %tk_start.i.i = getelementptr inbounds %struct.rpc_task, ptr %task.0, i32 0, i32 18
  %55 = ptrtoint ptr %tk_start.i.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %call.i.i, ptr %tk_start.i.i, align 8
  %56 = ptrtoint ptr %tk_flags.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %tk_flags.i, align 4
  %or = or i16 %57, %flags.0
  store i16 %or, ptr %tk_flags.i, align 4
  ret ptr %task.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_put_task(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %task, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1889
  tail call void @llvm.prefetch.p0(ptr %task, i32 1, i32 3, i32 1) #15
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %task, ptr %task, i32 1, ptr elementtype(i32) %task) #15, !srcloc !1890
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1891
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %entry.rpc_do_put_task.exit_crit_edge

entry.rpc_do_put_task.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_do_put_task.exit

if.then.i:                                        ; preds = %entry
  tail call fastcc void @rpc_release_resources_task(ptr noundef %task) #15
  %tk_flags1.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %1 = ptrtoint ptr %tk_flags1.i.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %tk_flags1.i.i, align 4
  %tk_op_cred.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 15
  %3 = ptrtoint ptr %tk_op_cred.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tk_op_cred.i.i, align 4
  tail call void @put_rpccred(ptr noundef %4) #15
  %tk_ops.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 12
  %5 = ptrtoint ptr %tk_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tk_ops.i.i, align 8
  %rpc_release.i.i.i = getelementptr inbounds %struct.rpc_call_ops, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %rpc_release.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rpc_release.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %8, null
  br i1 %cmp.not.i.i.i, label %if.then.i.rpc_release_calldata.exit.i.i_crit_edge, label %if.then.i.i.i

if.then.i.rpc_release_calldata.exit.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_release_calldata.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %tk_calldata.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 11
  %9 = ptrtoint ptr %tk_calldata.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_calldata.i.i, align 4
  tail call void %8(ptr noundef %10) #15
  br label %rpc_release_calldata.exit.i.i

rpc_release_calldata.exit.i.i:                    ; preds = %if.then.i.i.i, %if.then.i.rpc_release_calldata.exit.i.i_crit_edge
  %11 = and i16 %2, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i.i = icmp eq i16 %11, 0
  br i1 %tobool.not.i.i, label %rpc_release_calldata.exit.i.i.rpc_do_put_task.exit_crit_edge, label %if.then.i.i

rpc_release_calldata.exit.i.i.rpc_do_put_task.exit_crit_edge: ; preds = %rpc_release_calldata.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_do_put_task.exit

if.then.i.i:                                      ; preds = %rpc_release_calldata.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %12 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_free(ptr noundef %task, ptr noundef %12) #15
  br label %rpc_do_put_task.exit

rpc_do_put_task.exit:                             ; preds = %if.then.i.i, %rpc_release_calldata.exit.i.i.rpc_do_put_task.exit_crit_edge, %entry.rpc_do_put_task.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_put_task_async(ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tk_workqueue = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 17
  %0 = ptrtoint ptr %tk_workqueue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tk_workqueue, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %task, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1889
  tail call void @llvm.prefetch.p0(ptr %task, i32 1, i32 3, i32 1) #15
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %task, ptr %task, i32 1, ptr elementtype(i32) %task) #15, !srcloc !1890
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1891
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %entry.rpc_do_put_task.exit_crit_edge

entry.rpc_do_put_task.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_do_put_task.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @rpc_release_resources_task(ptr noundef %task) #15
  tail call fastcc void @rpc_final_put_task(ptr noundef %task, ptr noundef %1) #15
  br label %rpc_do_put_task.exit

rpc_do_put_task.exit:                             ; preds = %if.then.i, %entry.rpc_do_put_task.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpciod_up() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @try_module_get(ptr noundef null) #15
  %cond = select i1 %call, i32 0, i32 -22
  ret i32 %cond
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpciod_down() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @module_put(ptr noundef null) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rpc_destroy_mempool() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rpciod_workqueue, align 4
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %entry.rpciod_stop.exit_crit_edge, label %if.end.i

entry.rpciod_stop.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpciod_stop.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @rpciod_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef nonnull %0) #15
  %1 = load ptr, ptr @xprtiod_workqueue, align 4
  store ptr null, ptr @xprtiod_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef %1) #15
  br label %rpciod_stop.exit

rpciod_stop.exit:                                 ; preds = %if.end.i, %entry.rpciod_stop.exit_crit_edge
  %2 = load ptr, ptr @rpc_buffer_mempool, align 4
  tail call void @mempool_destroy(ptr noundef %2) #15
  %3 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_destroy(ptr noundef %3) #15
  %4 = load ptr, ptr @rpc_task_slabp, align 4
  tail call void @kmem_cache_destroy(ptr noundef %4) #15
  %5 = load ptr, ptr @rpc_buffer_slabp, align 4
  tail call void @kmem_cache_destroy(ptr noundef %5) #15
  %call.i = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef getelementptr inbounds (%struct.rpc_wait_queue, ptr @delay_queue, i32 0, i32 6, i32 2)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rpc_init_mempool() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__rpc_init_priority_wait_queue(ptr noundef nonnull @delay_queue, ptr noundef nonnull @.str.55, i8 noundef zeroext 1) #15
  %call.i = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.324, i32 noundef 10, i32 noundef 0) #15
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.err_nomem_crit_edge, label %if.end.i

entry.err_nomem_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %err_nomem

if.end.i:                                         ; preds = %entry
  store ptr %call.i, ptr @rpciod_workqueue, align 4
  %call1.i = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.325, i32 noundef 10, i32 noundef 0) #15
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %free_rpciod.i, label %if.end

free_rpciod.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %0 = load ptr, ptr @rpciod_workqueue, align 4
  store ptr null, ptr @rpciod_workqueue, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #15
  br label %err_nomem

if.end:                                           ; preds = %if.end.i
  store ptr %call1.i, ptr @xprtiod_workqueue, align 4
  %call1 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.56, i32 noundef 152, i32 noundef 0, i32 noundef 8192, ptr noundef null) #15
  store ptr %call1, ptr @rpc_task_slabp, align 4
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.err_nomem_crit_edge, label %if.end4

if.end.err_nomem_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %err_nomem

if.end4:                                          ; preds = %if.end
  %call5 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.57, i32 noundef 2048, i32 noundef 0, i32 noundef 8192, ptr noundef null) #15
  store ptr %call5, ptr @rpc_buffer_slabp, align 4
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %if.end4.err_nomem_crit_edge, label %if.end8

if.end4.err_nomem_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %err_nomem

if.end8:                                          ; preds = %if.end4
  %1 = load ptr, ptr @rpc_task_slabp, align 4
  %call.i17 = tail call ptr @mempool_create(i32 noundef 8, ptr noundef nonnull @mempool_alloc_slab, ptr noundef nonnull @mempool_free_slab, ptr noundef %1) #15
  store ptr %call.i17, ptr @rpc_task_mempool, align 4
  %tobool10.not = icmp eq ptr %call.i17, null
  br i1 %tobool10.not, label %if.end8.err_nomem_crit_edge, label %if.end12

if.end8.err_nomem_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %err_nomem

if.end12:                                         ; preds = %if.end8
  %2 = load ptr, ptr @rpc_buffer_slabp, align 4
  %call.i18 = tail call ptr @mempool_create(i32 noundef 8, ptr noundef nonnull @mempool_alloc_slab, ptr noundef nonnull @mempool_free_slab, ptr noundef %2) #15
  store ptr %call.i18, ptr @rpc_buffer_mempool, align 4
  %tobool14.not = icmp eq ptr %call.i18, null
  br i1 %tobool14.not, label %if.end12.err_nomem_crit_edge, label %if.end12.return_crit_edge

if.end12.return_crit_edge:                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end12.err_nomem_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %err_nomem

err_nomem:                                        ; preds = %if.end12.err_nomem_crit_edge, %if.end8.err_nomem_crit_edge, %if.end4.err_nomem_crit_edge, %if.end.err_nomem_crit_edge, %free_rpciod.i, %entry.err_nomem_crit_edge
  tail call void @rpc_destroy_mempool()
  br label %return

return:                                           ; preds = %err_nomem, %if.end12.return_crit_edge
  %retval.0 = phi i32 [ -12, %err_nomem ], [ 0, %if.end12.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xdr_buf_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %head_base to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %head_base, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %head_len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %head_len, align 4
  %page_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 8
  %10 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %page_len, align 4
  %page_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %page_base to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %page_base, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %tail_base to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tail_base, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %tail_len to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %tail_len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_buf_class, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %msg_len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %msg_len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.70, i32 noundef %3, i32 noundef %5, ptr noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %15, i32 noundef %17, i32 noundef %19) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %client_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.71, i32 noundef %3) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #7

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_new(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %client_id, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %7, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_program, align 4
  %and3 = and i32 %9, 65535
  %add.ptr4 = getelementptr i8, ptr %1, i32 %and3
  %__data_loc_server = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_server, align 4
  %and5 = and i32 %11, 65535
  %add.ptr6 = getelementptr i8, ptr %1, i32 %and5
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.78, i32 noundef %3, ptr noundef %add.ptr, ptr noundef %add.ptr2, ptr noundef %add.ptr4, ptr noundef %add.ptr6) #15
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_new_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_program, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_server = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_server to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_server, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %error = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_new_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.81, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_clnt_clone_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %client_id, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_rpc_clnt_clone_err, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.82, i32 noundef %3, i32 noundef %5) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_task_status(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_status, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.84, i32 noundef %3, i32 noundef %5, i32 noundef %7) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_proc_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_request(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_progname, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %version, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_procname, align 4
  %and1 = and i32 %11, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %async = getelementptr inbounds %struct.trace_event_raw_rpc_request, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %async to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %async, align 4, !range !1907
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not = icmp eq i8 %13, 0
  %cond = select i1 %tobool.not, ptr @.str.92, ptr @.str.91
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.90, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, i32 noundef %9, ptr noundef %add.ptr2, ptr noundef nonnull %cond) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_task_running(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %flags1 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %flags1, align 4
  %conv = zext i16 %7 to i32
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_rpc_task_running.__flags) #15
  %runstate = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %runstate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %runstate, align 4
  %call4 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %9, ptr noundef nonnull @trace_raw_output_rpc_task_running.__flags.115) #15
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status, align 4
  %action = getelementptr inbounds %struct.trace_event_raw_rpc_task_running, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %action, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.98, i32 noundef %3, i32 noundef %5, ptr noundef %call2, ptr noundef %call4, i32 noundef %11, ptr noundef %13) #15
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_task_queued(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %flags1 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %flags1, align 4
  %conv = zext i16 %7 to i32
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_rpc_task_queued.__flags) #15
  %runstate = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %runstate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %runstate, align 4
  %call4 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %9, ptr noundef nonnull @trace_raw_output_rpc_task_queued.__flags.127) #15
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status, align 4
  %timeout = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %timeout, align 4
  %__data_loc_q_name = getelementptr inbounds %struct.trace_event_raw_rpc_task_queued, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %__data_loc_q_name to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %__data_loc_q_name, align 4
  %and = and i32 %15, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.126, i32 noundef %3, i32 noundef %5, ptr noundef %call2, ptr noundef %call4, i32 noundef %11, i32 noundef %13, ptr noundef %add.ptr) #15
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_failure(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_failure, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.128, i32 noundef %3, i32 noundef %5) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_reply_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %__data_loc_servername = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_servername, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %xid, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_progname, align 4
  %and1 = and i32 %11, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %version, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_reply_event, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %__data_loc_procname, align 4
  %and3 = and i32 %15, 65535
  %add.ptr4 = getelementptr i8, ptr %1, i32 %and3
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.132, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, i32 noundef %9, ptr noundef %add.ptr2, i32 noundef %13, ptr noundef %add.ptr4) #15
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_buf_alloc(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %callsize = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %callsize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %callsize, align 4
  %recvsize = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %recvsize to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %recvsize, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_buf_alloc, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.135, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_call_rpcerror(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %tk_status = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %tk_status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tk_status, align 4
  %rpc_status = getelementptr inbounds %struct.trace_event_raw_rpc_call_rpcerror, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %rpc_status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rpc_status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.138, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_stats_latency(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_progname, align 4
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %version, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %__data_loc_procname, align 4
  %and1 = and i32 %13, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %backlog = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %backlog to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %backlog, align 4
  %rtt = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %rtt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rtt, align 4
  %execute = getelementptr inbounds %struct.trace_event_raw_rpc_stats_latency, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %execute to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %execute, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.142, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %add.ptr, i32 noundef %11, ptr noundef %add.ptr2, i32 noundef %15, i32 noundef %17, i32 noundef %19) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xdr_overflow(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 13
  %6 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_progname, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %version, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 14
  %10 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_procedure, align 4
  %and1 = and i32 %11, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %requested = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %requested to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %requested, align 4
  %p3 = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %p3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %p3, align 4
  %end = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 5
  %16 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %head_base to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %head_base, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 8
  %20 = ptrtoint ptr %head_len to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %head_len, align 4
  %page_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %page_len, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 9
  %24 = ptrtoint ptr %tail_base to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tail_base, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 10
  %26 = ptrtoint ptr %tail_len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %tail_len, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_overflow, ptr %1, i32 0, i32 12
  %28 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.148, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, i32 noundef %9, ptr noundef %add.ptr2, i32 noundef %13, ptr noundef %15, ptr noundef %17, ptr noundef %19, i32 noundef %21, i32 noundef %23, ptr noundef %25, i32 noundef %27, i32 noundef %29) #15
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xdr_alignment(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 12
  %6 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_progname, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %version, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 13
  %10 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_procedure, align 4
  %and1 = and i32 %11, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %offset = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %offset, align 4
  %copied = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %copied to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %copied, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %head_base to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %head_base, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %head_len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %head_len, align 4
  %page_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %page_len, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 8
  %22 = ptrtoint ptr %tail_base to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %tail_base, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 9
  %24 = ptrtoint ptr %tail_len to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tail_len, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_rpc_xdr_alignment, ptr %1, i32 0, i32 11
  %26 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.151, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, i32 noundef %9, ptr noundef %add.ptr2, i32 noundef %13, i32 noundef %15, ptr noundef %17, i32 noundef %19, i32 noundef %21, ptr noundef %23, i32 noundef %25, i32 noundef %27) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_socket_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %ino = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %ino, align 8
  %saddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %1, i32 0, i32 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %1, i32 0, i32 5
  %socket_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %socket_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %socket_state, align 8
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xs_socket_event.symbols) #15
  %sock_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %sock_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sock_state, align 4
  %call6 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xs_socket_event.symbols.165) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.159, i64 noundef %3, ptr noundef %saddr, ptr noundef %daddr, i32 noundef %5, ptr noundef %call3, i32 noundef %7, ptr noundef %call6) #15
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_socket_event_done(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %error = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %error, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %saddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %1, i32 0, i32 5
  %daddr = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %1, i32 0, i32 6
  %socket_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %socket_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %socket_state, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xs_socket_event_done.symbols) #15
  %sock_state = getelementptr inbounds %struct.trace_event_raw_xs_socket_event_done, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %sock_state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sock_state, align 8
  %call6 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_xs_socket_event_done.symbols.178) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.177, i32 noundef %3, i64 noundef %5, ptr noundef %saddr, ptr noundef %daddr, i32 noundef %7, ptr noundef %call3, i32 noundef %9, ptr noundef %call6) #15
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_socket_nospace(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %total = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %total, align 4
  %remaining = getelementptr inbounds %struct.trace_event_raw_rpc_socket_nospace, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %remaining to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %remaining, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.181, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xprt_lifetime_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %state = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_lifetime_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state, align 4
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rpc_xprt_lifetime_class.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.183, ptr noundef %add.ptr, ptr noundef %add.ptr2, ptr noundef %call3) #15
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpc_xprt_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %xid = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpc_xprt_event, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.193, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_transmit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %seqno = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %seqno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seqno, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_xprt_transmit, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.195, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_retransmit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %__data_loc_progname = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %__data_loc_progname to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_progname, align 4
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %version, align 4
  %__data_loc_procname = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 8
  %12 = ptrtoint ptr %__data_loc_procname to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %__data_loc_procname, align 4
  %and1 = and i32 %13, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %ntrans = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 4
  %14 = ptrtoint ptr %ntrans to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ntrans, align 4
  %timeout = getelementptr inbounds %struct.trace_event_raw_xprt_retransmit, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %timeout, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.197, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %add.ptr, i32 noundef %11, ptr noundef %add.ptr2, i32 noundef %15, i32 noundef %17) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_ping(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %status = getelementptr inbounds %struct.trace_event_raw_xprt_ping, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.198, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_writelock_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %snd_task_id = getelementptr inbounds %struct.trace_event_raw_xprt_writelock_event, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %snd_task_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %snd_task_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.200, i32 noundef %3, i32 noundef %5, i32 noundef %7) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_cong_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %snd_task_id = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %snd_task_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %snd_task_id, align 4
  %cong = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %cong to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cong, align 4
  %cwnd = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %cwnd to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cwnd, align 4
  %wait = getelementptr inbounds %struct.trace_event_raw_xprt_cong_event, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %wait to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %wait, align 4, !range !1907
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not = icmp eq i8 %13, 0
  %cond = select i1 %tobool.not, ptr @.str.92, ptr @.str.205
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.204, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef nonnull %cond) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprt_reserve(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprt_reserve, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.206, i32 noundef %3, i32 noundef %5, i32 noundef %7) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_stream_read_data(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %err = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %err, align 4
  %total = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_data, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %total, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.209, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xs_stream_read_request(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %xid = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %copied = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %copied to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %copied, align 4
  %reclen = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %reclen to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %reclen, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_xs_stream_read_request, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %offset, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.211, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_getport(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %__data_loc_servername = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %__data_loc_servername to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_servername, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %program = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %program to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %program, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %version, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %protocol, align 4
  %bind_version = getelementptr inbounds %struct.trace_event_raw_rpcb_getport, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %bind_version to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %bind_version, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.214, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_setport(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %port = getelementptr inbounds %struct.trace_event_raw_rpcb_setport, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %port to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %port, align 4
  %conv = zext i16 %9 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.215, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %conv) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_pmap_register(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %program = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %program, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %version, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %protocol to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %protocol, align 4
  %port = getelementptr inbounds %struct.trace_event_raw_pmap_register, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %port, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.216, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_register(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %program = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %program, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %version, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_netid = getelementptr inbounds %struct.trace_event_raw_rpcb_register, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_netid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_netid, align 4
  %and1 = and i32 %9, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.218, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, ptr noundef %add.ptr2) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcb_unregister(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %program = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %program, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %version, align 4
  %__data_loc_netid = getelementptr inbounds %struct.trace_event_raw_rpcb_unregister, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_netid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_netid, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.219, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xdr_msg_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %head_base to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head_base, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %head_len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %head_len, align 4
  %page_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %page_len, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %tail_base to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tail_base, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %tail_len to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tail_len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_msg_class, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %msg_len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %msg_len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.220, i32 noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9, ptr noundef %11, i32 noundef %13, i32 noundef %15) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xdr_buf_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %head_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %head_base to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head_base, align 4
  %head_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %head_len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %head_len, align 4
  %page_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %page_len, align 4
  %page_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %page_base to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %page_base, align 4
  %tail_base = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %tail_base to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tail_base, align 4
  %tail_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %tail_len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tail_len, align 4
  %msg_len = getelementptr inbounds %struct.trace_event_raw_svc_xdr_buf_class, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %msg_len to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %msg_len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.221, i32 noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef %13, i32 noundef %15, i32 noundef %17) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_authenticate(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %svc_status = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %svc_status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %svc_status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svc_authenticate.symbols) #15
  %auth_stat = getelementptr inbounds %struct.trace_event_raw_svc_authenticate, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %auth_stat to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %auth_stat, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_svc_authenticate.symbols.225) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.224, i32 noundef %3, ptr noundef %call1, ptr noundef %call3) #15
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @svc_proc_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_process(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 4
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_service, align 4
  %and1 = and i32 %7, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %vers = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %vers to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vers, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_svc_process, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_procedure, align 4
  %and3 = and i32 %11, 65535
  %add.ptr4 = getelementptr i8, ptr %1, i32 %and3
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.237, ptr noundef %add.ptr, i32 noundef %5, ptr noundef %add.ptr2, i32 noundef %9, ptr noundef %add.ptr4) #15
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_rqst_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_event, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %7, ptr noundef nonnull @trace_raw_output_svc_rqst_event.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.238, ptr noundef %add.ptr, i32 noundef %5, ptr noundef %call2) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_rqst_status(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svc_rqst_status, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %9, ptr noundef nonnull @trace_raw_output_svc_rqst_status.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.247, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7, ptr noundef %call2) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_create_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %1, i32 0, i32 4
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_program, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_protocol = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_protocol to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_protocol, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %error = getelementptr inbounds %struct.trace_event_raw_svc_xprt_create_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.250, ptr noundef %addr, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_enqueue(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %pid = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pid, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_enqueue, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %7, ptr noundef nonnull @trace_raw_output_svc_xprt_enqueue.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.252, ptr noundef %add.ptr, i32 noundef %5, ptr noundef %call2) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_event, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svc_xprt_event.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.267, ptr noundef %add.ptr, ptr noundef %call2) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_accept(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_protocol = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_protocol to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_protocol, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svc_xprt_accept, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_service, align 4
  %and3 = and i32 %7, 65535
  %add.ptr4 = getelementptr i8, ptr %1, i32 %and3
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.268, ptr noundef %add.ptr, ptr noundef %add.ptr2, ptr noundef %add.ptr4) #15
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_xprt_dequeue(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svc_xprt_dequeue.__flags) #15
  %wakeup = getelementptr inbounds %struct.trace_event_raw_svc_xprt_dequeue, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %wakeup to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wakeup, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.270, ptr noundef %add.ptr, ptr noundef %call2, i32 noundef %7) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_wake_up(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pid = getelementptr inbounds %struct.trace_event_raw_svc_wake_up, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.271, i32 noundef %3) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_alloc_arg_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pages = getelementptr inbounds %struct.trace_event_raw_svc_alloc_arg_err, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pages, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.273, i32 noundef %3) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_stats_latency(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 4
  %__data_loc_procedure = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_procedure to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_procedure, align 4
  %and1 = and i32 %7, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %execute = getelementptr inbounds %struct.trace_event_raw_svc_stats_latency, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %execute to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %execute, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.274, ptr noundef %add.ptr, i32 noundef %5, ptr noundef %add.ptr2, i32 noundef %9) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_deferred_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %dr = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %dr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dr, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svc_deferred_event, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.276, ptr noundef %add.ptr, ptr noundef %5, i32 noundef %7) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_new_socket(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %type = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %3, ptr noundef nonnull @trace_raw_output_svcsock_new_socket.symbols) #15
  %family = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %family to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %family, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svcsock_new_socket.symbols.288) #15
  %listener = getelementptr inbounds %struct.trace_event_raw_svcsock_new_socket, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %listener to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %listener, align 4, !range !1907
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.92, ptr @.str.289
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.280, ptr noundef %call1, ptr noundef %call3, ptr noundef nonnull %cond) #15
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_marker(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %length = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %length, align 4
  %last = getelementptr inbounds %struct.trace_event_raw_svcsock_marker, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %last to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %last, align 4, !range !1907
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.92, ptr @.str.293
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.292, ptr noundef %add.ptr, i32 noundef %5, ptr noundef nonnull %cond) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %result = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %result to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %result, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svcsock_class, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %7, ptr noundef nonnull @trace_raw_output_svcsock_class.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.295, ptr noundef %add.ptr, i32 noundef %5, ptr noundef %call2) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_tcp_recv_short(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %flags1 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svcsock_tcp_recv_short.__flags) #15
  %expected = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %expected to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %expected, align 4
  %received = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_recv_short, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %received to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %received, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.298, ptr noundef %add.ptr, ptr noundef %call2, i32 noundef %7, i32 noundef %9) #15
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_tcp_state(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %socket_state = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %socket_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %socket_state, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svcsock_tcp_state.symbols) #15
  %sock_state = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %sock_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sock_state, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_svcsock_tcp_state.symbols.300) #15
  %flags5 = getelementptr inbounds %struct.trace_event_raw_svcsock_tcp_state, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %flags5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags5, align 4
  %call6 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.114, i32 noundef %9, ptr noundef nonnull @trace_raw_output_svcsock_tcp_state.__flags) #15
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.299, ptr noundef %add.ptr, ptr noundef %call1, ptr noundef %call3, ptr noundef %call6) #15
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcsock_accept_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_service = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_service to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_service, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %status = getelementptr inbounds %struct.trace_event_raw_svcsock_accept_class, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.302, ptr noundef %add.ptr, i32 noundef %5) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_cache_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %h = getelementptr inbounds %struct.trace_event_raw_cache_event, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %h to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %h, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.306, ptr noundef %add.ptr, ptr noundef %5) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_register_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_program, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %version, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %7)
  %cmp1 = icmp eq i16 %7, 17
  %cond = select i1 %cmp1, ptr @.str.308, ptr @.str.309
  %port = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %port to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %port, align 2
  %conv3 = zext i16 %9 to i32
  %family = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %family to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %family, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %11, ptr noundef nonnull @trace_raw_output_register_class.symbols) #15
  %error = getelementptr inbounds %struct.trace_event_raw_register_class, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.307, ptr noundef %add.ptr, i32 noundef %5, ptr noundef nonnull %cond, i32 noundef %conv3, ptr noundef %call4, i32 noundef %13) #15
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svc_unregister(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_program = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_program to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_program, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %version = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %version, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_svc_unregister, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.310, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #10

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__rpc_queue_timer_fn(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -96
  tail call void @_raw_spin_lock(ptr noundef %add.ptr) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %timer_list = getelementptr i8, ptr %work, i32 -12
  %1 = ptrtoint ptr %timer_list to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %timer_list, align 4
  %cmp.not51 = icmp eq ptr %2, %timer_list
  br i1 %cmp.not51, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in53 = phi ptr [ %.pn55, %for.inc.for.body_crit_edge ], [ %2, %entry.for.body_crit_edge ]
  %expires.052 = phi i32 [ %expires.1, %for.inc.for.body_crit_edge ], [ %0, %entry.for.body_crit_edge ]
  %3 = ptrtoint ptr %.pn.in53 to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn55 = load ptr, ptr %.pn.in53, align 4
  %tk_timeout = getelementptr i8, ptr %.pn.in53, i32 -28
  %4 = ptrtoint ptr %tk_timeout to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tk_timeout, align 8
  %sub = sub i32 %0, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub)
  %cmp13 = icmp sgt i32 %sub, -1
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %task.054 = getelementptr i8, ptr %.pn.in53, i32 -52
  %tk_action = getelementptr i8, ptr %.pn.in53, i32 -32
  %6 = ptrtoint ptr %tk_action to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_action, align 4
  tail call fastcc void @trace_rpc_task_timeout(ptr noundef %task.054, ptr noundef %7)
  %tk_status = getelementptr i8, ptr %.pn.in53, i32 -48
  %8 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -110, ptr %tk_status, align 4
  %9 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i = tail call fastcc ptr @rpc_wake_up_task_on_wq_queue_action_locked(ptr noundef %9, ptr noundef %add.ptr, ptr noundef %task.054, ptr noundef null, ptr noundef null) #15
  br label %for.inc

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_cmp4(i32 %expires.052, i32 %0)
  %cmp14 = icmp eq i32 %expires.052, %0
  %sub15 = sub i32 %5, %expires.052
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub15)
  %cmp16 = icmp slt i32 %sub15, 0
  %or.cond = select i1 %cmp14, i1 true, i1 %cmp16
  %spec.select = select i1 %or.cond, i32 %5, i32 %expires.052
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %expires.1 = phi i32 [ %expires.052, %if.then ], [ %spec.select, %if.end ]
  %cmp.not = icmp eq ptr %.pn55, %timer_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %expires.0.lcssa = phi i32 [ %0, %entry.for.end_crit_edge ], [ %expires.1, %for.inc.for.end_crit_edge ]
  %10 = ptrtoint ptr %timer_list to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %timer_list, align 4
  %cmp.i.not = icmp eq ptr %11, %timer_list
  br i1 %cmp.i.not, label %for.end.if.end28_crit_edge, label %if.then27

for.end.if.end28_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end28

if.then27:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %expires1.i = getelementptr i8, ptr %work, i32 -4
  %13 = ptrtoint ptr %expires1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %expires.0.lcssa, ptr %expires1.i, align 4
  %sub.i = sub i32 %12, %expires.0.lcssa
  %sub2.i = sub i32 %expires.0.lcssa, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.inv.i = icmp slt i32 %sub.i, 0
  %expires.addr.0.i = select i1 %cmp.inv.i, i32 %sub2.i, i32 0
  %14 = load ptr, ptr @rpciod_workqueue, align 4
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %14, ptr noundef %work, i32 noundef %expires.addr.0.i) #15
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %for.end.if.end28_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %add.ptr) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_timeout(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_timeout, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1908
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1909
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1909
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_timeout, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_timeout.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_timeout.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 382, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mod_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__rpc_do_sleep_on_priority(ptr noundef %q, ptr noundef %task, i8 noundef zeroext %queue_priority) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_rpc_task_sleep(ptr noundef %task, ptr noundef %q)
  %u.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8
  %timer_list.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3
  %0 = ptrtoint ptr %timer_list.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %timer_list.i, ptr %timer_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3, i32 1
  %1 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %timer_list.i, ptr %prev.i.i, align 4
  %maxpriority.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 2
  %2 = ptrtoint ptr %maxpriority.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %maxpriority.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp.not.i = icmp eq i8 %3, 0
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_cmp1(i8 %3, i8 %queue_priority)
  %cmp.i.i = icmp ult i8 %3, %queue_priority
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then.i.if.end.i.i_crit_edge, !prof !1884

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.then.i.if.end.i.i_crit_edge
  %queue_priority.addr.0.i.i = phi i8 [ %3, %if.then.i.i ], [ %queue_priority, %if.then.i.if.end.i.i_crit_edge ]
  %idxprom.i.i = zext i8 %queue_priority.addr.0.i.i to i32
  %arrayidx.i.i = getelementptr %struct.rpc_wait_queue, ptr %q, i32 0, i32 1, i32 %idxprom.i.i
  %tk_owner1.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 19
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end.i.i
  %.pn.in.i.i.i = phi ptr [ %arrayidx.i.i, %if.end.i.i ], [ %.pn.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %4 = ptrtoint ptr %.pn.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn.i.i.i = load ptr, ptr %.pn.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %arrayidx.i.i
  br i1 %cmp.not.i.i.i, label %for.end.i.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %tk_owner.i.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 100
  %5 = ptrtoint ptr %tk_owner.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tk_owner.i.i.i, align 8
  %7 = ptrtoint ptr %tk_owner1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tk_owner1.i.i.i, align 8
  %cmp2.i.i.i = icmp eq i32 %6, %8
  br i1 %cmp2.i.i.i, label %if.then.i.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i.i
  %links.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1, i32 1
  %links5.i.i.i = getelementptr inbounds %struct.rpc_wait, ptr %.pn.i.i.i, i32 0, i32 1
  %prev.i.i.i.i = getelementptr inbounds %struct.rpc_wait, ptr %.pn.i.i.i, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %links.i.i.i, ptr noundef %10, ptr noundef %links5.i.i.i) #15
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.list_add_tail.exit.i.i.i_crit_edge

if.then.i.i.i.list_add_tail.exit.i.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %11 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %links.i.i.i, ptr %prev.i.i.i.i, align 4
  %12 = ptrtoint ptr %links.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %links5.i.i.i, ptr %links.i.i.i, align 4
  %prev3.i.i.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %13 = ptrtoint ptr %prev3.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev3.i.i.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %links.i.i.i, ptr %10, align 4
  br label %list_add_tail.exit.i.i.i

list_add_tail.exit.i.i.i:                         ; preds = %if.end.i.i.i.i.i, %if.then.i.i.i.list_add_tail.exit.i.i.i_crit_edge
  %15 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %arrayidx.i.i, ptr %u.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %prev.i.i.i, align 4
  br label %__rpc_add_wait_queue.exit

for.end.i.i.i:                                    ; preds = %for.cond.i.i.i
  %links18.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1, i32 1
  %17 = ptrtoint ptr %links18.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %links18.i.i.i, ptr %links18.i.i.i, align 4
  %prev.i32.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %18 = ptrtoint ptr %prev.i32.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %links18.i.i.i, ptr %prev.i32.i.i.i, align 4
  %prev.i33.i.i.i = getelementptr %struct.rpc_wait_queue, ptr %q, i32 0, i32 1, i32 %idxprom.i.i, i32 1
  %19 = ptrtoint ptr %prev.i33.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i33.i.i.i, align 4
  %call.i.i34.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %u.i, ptr noundef %20, ptr noundef %arrayidx.i.i) #15
  br i1 %call.i.i34.i.i.i, label %if.end.i.i36.i.i.i, label %for.end.i.i.i.__rpc_add_wait_queue.exit_crit_edge

for.end.i.i.i.__rpc_add_wait_queue.exit_crit_edge: ; preds = %for.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_add_wait_queue.exit

if.end.i.i36.i.i.i:                               ; preds = %for.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %21 = ptrtoint ptr %prev.i33.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %u.i, ptr %prev.i33.i.i.i, align 4
  %22 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %arrayidx.i.i, ptr %u.i, align 4
  %prev3.i.i35.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %23 = ptrtoint ptr %prev3.i.i35.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev3.i.i35.i.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %u.i, ptr %20, align 4
  br label %__rpc_add_wait_queue.exit

if.else.i:                                        ; preds = %entry
  %tk_flags.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %25 = ptrtoint ptr %tk_flags.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %tk_flags.i, align 4
  %27 = and i16 %26, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool.not.i = icmp eq i16 %27, 0
  %tasks8.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 1
  br i1 %tobool.not.i, label %if.else5.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.else.i
  %28 = ptrtoint ptr %tasks8.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %tasks8.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %u.i, ptr noundef %tasks8.i, ptr noundef %29) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then3.i.__rpc_add_wait_queue.exit_crit_edge

if.then3.i.__rpc_add_wait_queue.exit_crit_edge:   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_add_wait_queue.exit

if.end.i.i.i:                                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %u.i, ptr %prev1.i.i.i, align 4
  %31 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %29, ptr %u.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %32 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %tasks8.i, ptr %prev3.i.i.i, align 4
  %33 = ptrtoint ptr %tasks8.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %u.i, ptr %tasks8.i, align 4
  br label %__rpc_add_wait_queue.exit

if.else5.i:                                       ; preds = %if.else.i
  %prev.i24.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 1, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i24.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i24.i, align 4
  %call.i.i25.i = tail call zeroext i1 @__list_add_valid(ptr noundef %u.i, ptr noundef %35, ptr noundef %tasks8.i) #15
  br i1 %call.i.i25.i, label %if.end.i.i27.i, label %if.else5.i.__rpc_add_wait_queue.exit_crit_edge

if.else5.i.__rpc_add_wait_queue.exit_crit_edge:   ; preds = %if.else5.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__rpc_add_wait_queue.exit

if.end.i.i27.i:                                   ; preds = %if.else5.i
  call void @__sanitizer_cov_trace_pc() #17
  %36 = ptrtoint ptr %prev.i24.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %u.i, ptr %prev.i24.i, align 4
  %37 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %tasks8.i, ptr %u.i, align 4
  %prev3.i.i26.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %38 = ptrtoint ptr %prev3.i.i26.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev3.i.i26.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %u.i, ptr %35, align 4
  br label %__rpc_add_wait_queue.exit

__rpc_add_wait_queue.exit:                        ; preds = %if.end.i.i27.i, %if.else5.i.__rpc_add_wait_queue.exit_crit_edge, %if.end.i.i.i, %if.then3.i.__rpc_add_wait_queue.exit_crit_edge, %if.end.i.i36.i.i.i, %for.end.i.i.i.__rpc_add_wait_queue.exit_crit_edge, %list_add_tail.exit.i.i.i
  %tk_waitqueue.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 7
  %40 = ptrtoint ptr %tk_waitqueue.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %q, ptr %tk_waitqueue.i, align 8
  %qlen.i = getelementptr inbounds %struct.rpc_wait_queue, ptr %q, i32 0, i32 5
  %41 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %qlen.i, align 4
  %inc.i = add i16 %42, 1
  store i16 %inc.i, ptr %qlen.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1910
  %tk_runstate.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 1, ptr noundef %tk_runstate.i) #15
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_sleep(ptr noundef %task, ptr noundef %q) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_sleep, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1911
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %q) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1912
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1912
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sleep, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_sleep.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_sleep.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 432, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @rpc_task_action_set_status(ptr nocapture noundef writeonly %task, ptr nocapture noundef readonly %status) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %status, align 4
  %tk_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 1
  %2 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %tk_status, align 4
  ret i1 true
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_wakeup(ptr noundef %task, ptr noundef %q) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_wakeup, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1913
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %q) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1914
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1914
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_wakeup, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_wakeup.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_wakeup.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 433, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_begin(ptr noundef %task) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_begin, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_begin, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1915
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_begin, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef null) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1916
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1916
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !1883

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_begin, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_rpc_task_begin.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_begin.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 377, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rpc_async_schedule(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %5, 262144
  %or.i = or i32 %5, 262144
  store i32 %or.i, ptr %flags1.i, align 4
  %add.ptr = getelementptr i8, ptr %work, i32 -36
  tail call fastcc void @__rpc_execute(ptr noundef %add.ptr)
  %6 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i1 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i1 to ptr
  %task.i2 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i2, align 8
  %flags1.i3 = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags1.i3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags1.i3, align 4
  %and.i4 = and i32 %11, -262145
  %or.i5 = or i32 %and.i4, %and.i
  store i32 %or.i5, ptr %flags1.i3, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_run_action(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_run_action, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1917
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1918
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1918
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_run_action, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_run_action.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_run_action.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 378, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_sync_sleep(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_sync_sleep, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1919
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1920
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1920
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_sleep, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_sync_sleep.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_sync_sleep.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 379, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_sync_wake(ptr noundef %task, ptr noundef %action) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_sync_wake, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1921
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef %action) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1922
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1922
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1883

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_sync_wake, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rpc_task_sync_wake.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_sync_wake.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 380, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rpc_release_resources_task(ptr noundef %task) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @xprt_release(ptr noundef %task) #15
  %rpc_cred = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 10, i32 3
  %0 = ptrtoint ptr %rpc_cred to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rpc_cred, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.then:                                          ; preds = %entry
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %2 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %tk_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %3)
  %tobool1.not = icmp sgt i16 %3, -1
  br i1 %tobool1.not, label %do.body.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body.i:                                        ; preds = %if.then
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %1) #15
  br i1 %call.i.i, label %if.then.i.i, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !1884

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__invalid_creds(ptr noundef nonnull %1, ptr noundef nonnull @.str.323, i32 noundef 286) #15
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %do.body.i.__validate_creds.exit.i_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %1, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1889
  tail call void @llvm.prefetch.p0(ptr nonnull %1, i32 1, i32 3, i32 1) #15
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %1, ptr nonnull %1, i32 1, ptr nonnull elementtype(i32) %1) #15, !srcloc !1890
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %4, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1891
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then1.i, label %__validate_creds.exit.i.if.end_crit_edge

__validate_creds.exit.i.if.end_crit_edge:         ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then1.i:                                       ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_cred(ptr noundef nonnull %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then1.i, %__validate_creds.exit.i.if.end_crit_edge, %if.then.if.end_crit_edge
  %5 = ptrtoint ptr %rpc_cred to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %rpc_cred, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry.if.end7_crit_edge
  tail call void @rpc_task_release_client(ptr noundef %task) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rpc_final_put_task(ptr noundef %task, ptr noundef %q) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq ptr %q, null
  br i1 %cmp.not, label %if.else, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %u = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8
  tail call void @__init_work(ptr noundef %u, i32 noundef 0) #15
  %0 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -64, ptr %u, align 4
  %lockdep_map = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.322, ptr noundef nonnull @rpc_final_put_task.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry4 = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1
  %1 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %entry4, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 8, i32 0, i32 2
  %3 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @rpc_async_release, ptr %func, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef nonnull %q, ptr noundef %u) #15
  br label %if.end

if.else:                                          ; preds = %entry
  %tk_flags1.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %4 = ptrtoint ptr %tk_flags1.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %tk_flags1.i, align 4
  %tk_op_cred.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 15
  %6 = ptrtoint ptr %tk_op_cred.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_op_cred.i, align 4
  tail call void @put_rpccred(ptr noundef %7) #15
  %tk_ops.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 12
  %8 = ptrtoint ptr %tk_ops.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tk_ops.i, align 8
  %rpc_release.i.i = getelementptr inbounds %struct.rpc_call_ops, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %rpc_release.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rpc_release.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %11, null
  br i1 %cmp.not.i.i, label %if.else.rpc_release_calldata.exit.i_crit_edge, label %if.then.i.i

if.else.rpc_release_calldata.exit.i_crit_edge:    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_release_calldata.exit.i

if.then.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %tk_calldata.i = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 11
  %12 = ptrtoint ptr %tk_calldata.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tk_calldata.i, align 4
  tail call void %11(ptr noundef %13) #15
  br label %rpc_release_calldata.exit.i

rpc_release_calldata.exit.i:                      ; preds = %if.then.i.i, %if.else.rpc_release_calldata.exit.i_crit_edge
  %14 = and i16 %5, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool.not.i = icmp eq i16 %14, 0
  br i1 %tobool.not.i, label %rpc_release_calldata.exit.i.if.end_crit_edge, label %if.then.i

rpc_release_calldata.exit.i.if.end_crit_edge:     ; preds = %rpc_release_calldata.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then.i:                                        ; preds = %rpc_release_calldata.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %15 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_free(ptr noundef %task, ptr noundef %15) #15
  br label %if.end

if.end:                                           ; preds = %if.then.i, %rpc_release_calldata.exit.i.if.end_crit_edge, %do.body
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_task_release_client(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_cred(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @creds_are_invalid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__invalid_creds(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bit_waitqueue(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rpc_task_complete(ptr noundef %task) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rpc_task_complete, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !1893

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1883

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1923
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %task, ptr noundef null) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1924
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1924
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !1883

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.318, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1896
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rpc_task_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_rpc_task_complete.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rpc_task_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.316, i32 noundef 381, ptr noundef nonnull @.str.317) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1897
  %38 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up_locked_key(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rpc_async_release(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1.i, align 4
  %or.i = or i32 %5, 262144
  store i32 %or.i, ptr %flags1.i, align 4
  %add.ptr = getelementptr i8, ptr %work, i32 -36
  %tk_flags1.i = getelementptr i8, ptr %work, i32 104
  %6 = ptrtoint ptr %tk_flags1.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %tk_flags1.i, align 4
  %tk_op_cred.i = getelementptr i8, ptr %work, i32 80
  %8 = ptrtoint ptr %tk_op_cred.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tk_op_cred.i, align 4
  tail call void @put_rpccred(ptr noundef %9) #15
  %tk_ops.i = getelementptr i8, ptr %work, i32 68
  %10 = ptrtoint ptr %tk_ops.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tk_ops.i, align 8
  %rpc_release.i.i = getelementptr inbounds %struct.rpc_call_ops, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %rpc_release.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rpc_release.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %13, null
  br i1 %cmp.not.i.i, label %entry.rpc_release_calldata.exit.i_crit_edge, label %if.then.i.i

entry.rpc_release_calldata.exit.i_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_release_calldata.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %tk_calldata.i = getelementptr i8, ptr %work, i32 64
  %14 = ptrtoint ptr %tk_calldata.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tk_calldata.i, align 4
  tail call void %13(ptr noundef %15) #15
  br label %rpc_release_calldata.exit.i

rpc_release_calldata.exit.i:                      ; preds = %if.then.i.i, %entry.rpc_release_calldata.exit.i_crit_edge
  %16 = and i16 %7, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool.not.i = icmp eq i16 %16, 0
  br i1 %tobool.not.i, label %rpc_release_calldata.exit.i.rpc_free_task.exit_crit_edge, label %if.then.i

rpc_release_calldata.exit.i.rpc_free_task.exit_crit_edge: ; preds = %rpc_release_calldata.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rpc_free_task.exit

if.then.i:                                        ; preds = %rpc_release_calldata.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %17 = load ptr, ptr @rpc_task_mempool, align 4
  tail call void @mempool_free(ptr noundef %add.ptr, ptr noundef %17) #15
  br label %rpc_free_task.exit

rpc_free_task.exit:                               ; preds = %if.then.i, %rpc_release_calldata.exit.i.rpc_free_task.exit_crit_edge
  %and.i = and i32 %5, 262144
  %18 = tail call i32 @llvm.read_register.i32(metadata !1873) #15
  %and.i.i1 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i1 to ptr
  %task.i2 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task.i2 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i2, align 8
  %flags1.i3 = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %flags1.i3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags1.i3, align 4
  %and.i4 = and i32 %23, -262145
  %or.i5 = or i32 %and.i4, %and.i
  store i32 %or.i5, ptr %flags1.i3, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_rpccred(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rpc_task_get_xprt(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xprt_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mempool_create(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mempool_alloc_slab(i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_free_slab(ptr noundef, ptr noundef) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #15

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #16 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 647)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #16 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 647)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind readonly }
attributes #10 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #11 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { nounwind }
attributes #16 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #17 = { nomerge }
attributes #18 = { nobuiltin nounwind }
attributes #19 = { nobuiltin }
attributes #20 = { nounwind readnone }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !100, !102, !103, !104, !106, !107, !108, !110, !111, !112, !114, !115, !116, !118, !119, !120, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !148, !150, !151, !152, !154, !155, !156, !158, !159, !160, !162, !163, !164, !166, !167, !168, !170, !171, !172, !174, !175, !176, !178, !179, !180, !182, !183, !184, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !210, !211, !212, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !234, !235, !236, !238, !239, !240, !242, !243, !244, !246, !247, !248, !250, !251, !252, !254, !255, !256, !258, !259, !260, !262, !263, !264, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !279, !280, !282, !283, !284, !286, !287, !288, !290, !291, !292, !294, !295, !296, !298, !299, !300, !302, !303, !304, !306, !307, !308, !310, !311, !312, !314, !315, !316, !318, !319, !320, !322, !323, !324, !326, !327, !328, !330, !331, !332, !334, !335, !336, !338, !339, !340, !342, !343, !344, !346, !347, !348, !350, !351, !352, !354, !355, !356, !358, !359, !360, !362, !363, !364, !366, !367, !368, !370, !371, !372, !374, !375, !376, !378, !379, !380, !382, !383, !384, !386, !387, !388, !390, !391, !392, !394, !395, !396, !398, !399, !400, !402, !403, !404, !406, !407, !408, !410, !411, !412, !414, !415, !416, !418, !419, !420, !422, !423, !424, !426, !427, !428, !430, !431, !432, !434, !435, !436, !438, !439, !440, !442, !443, !444, !446, !447, !448, !450, !451, !452, !454, !455, !456, !458, !459, !460, !462, !463, !464, !466, !467, !468, !470, !471, !472, !474, !475, !476, !478, !479, !480, !482, !483, !484, !486, !487, !488, !490, !491, !492, !494, !495, !496, !498, !499, !500, !502, !503, !504, !506, !507, !508, !510, !511, !512, !514, !515, !516, !518, !519, !520, !522, !523, !524, !526, !527, !528, !530, !531, !532, !534, !535, !536, !538, !539, !540, !542, !543, !544, !546, !547, !548, !550, !551, !552, !554, !555, !556, !558, !559, !560, !562, !563, !564, !566, !567, !568, !570, !571, !572, !574, !575, !576, !578, !579, !580, !582, !583, !584, !586, !587, !588, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !665, !666, !667, !669, !670, !671, !673, !674, !675, !677, !678, !679, !681, !682, !683, !685, !686, !687, !689, !690, !691, !693, !694, !695, !697, !698, !699, !701, !702, !703, !705, !706, !707, !708, !709, !710, !711, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !771, !772, !773, !774, !775, !777, !778, !779, !780, !781, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !828, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !878, !879, !880, !881, !882, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !918, !919, !920, !922, !923, !924, !925, !926, !927, !928, !929, !930, !932, !933, !934, !935, !936, !938, !939, !940, !941, !942, !943, !944, !945, !946, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1013, !1014, !1015, !1016, !1017, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1167, !1169, !1171, !1173, !1175, !1177, !1179, !1181, !1182, !1184, !1186, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1808, !1809, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1820, !1821, !1823, !1825, !1827, !1829, !1830, !1831, !1833, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1848, !1849, !1850, !1852, !1853, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1863, !1865, !1866, !1867, !1869, !1871}
!llvm.named.register.sp = !{!1873}
!llvm.module.flags = !{!1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881}
!llvm.ident = !{!1882}

!0 = !{ptr @__tracepoint_rpc_xdr_sendto, !1, !"__tracepoint_rpc_xdr_sendto", i1 false, i1 false}
!1 = !{!"../include/trace/events/sunrpc.h", i32 104, i32 1}
!2 = !{ptr @__tracepoint_ptr_rpc_xdr_sendto, !1, !"__tracepoint_ptr_rpc_xdr_sendto", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_rpc_xdr_sendto, !1, !"__SCK__tp_func_rpc_xdr_sendto", i1 false, i1 false}
!4 = !{ptr @__tracepoint_rpc_xdr_recvfrom, !5, !"__tracepoint_rpc_xdr_recvfrom", i1 false, i1 false}
!5 = !{!"../include/trace/events/sunrpc.h", i32 105, i32 1}
!6 = !{ptr @__tracepoint_ptr_rpc_xdr_recvfrom, !5, !"__tracepoint_ptr_rpc_xdr_recvfrom", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_rpc_xdr_recvfrom, !5, !"__SCK__tp_func_rpc_xdr_recvfrom", i1 false, i1 false}
!8 = !{ptr @__tracepoint_rpc_xdr_reply_pages, !9, !"__tracepoint_rpc_xdr_reply_pages", i1 false, i1 false}
!9 = !{!"../include/trace/events/sunrpc.h", i32 106, i32 1}
!10 = !{ptr @__tracepoint_ptr_rpc_xdr_reply_pages, !9, !"__tracepoint_ptr_rpc_xdr_reply_pages", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_rpc_xdr_reply_pages, !9, !"__SCK__tp_func_rpc_xdr_reply_pages", i1 false, i1 false}
!12 = !{ptr @__tracepoint_rpc_clnt_free, !13, !"__tracepoint_rpc_clnt_free", i1 false, i1 false}
!13 = !{!"../include/trace/events/sunrpc.h", i32 135, i32 1}
!14 = !{ptr @__tracepoint_ptr_rpc_clnt_free, !13, !"__tracepoint_ptr_rpc_clnt_free", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_rpc_clnt_free, !13, !"__SCK__tp_func_rpc_clnt_free", i1 false, i1 false}
!16 = !{ptr @__tracepoint_rpc_clnt_killall, !17, !"__tracepoint_rpc_clnt_killall", i1 false, i1 false}
!17 = !{!"../include/trace/events/sunrpc.h", i32 136, i32 1}
!18 = !{ptr @__tracepoint_ptr_rpc_clnt_killall, !17, !"__tracepoint_ptr_rpc_clnt_killall", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_rpc_clnt_killall, !17, !"__SCK__tp_func_rpc_clnt_killall", i1 false, i1 false}
!20 = !{ptr @__tracepoint_rpc_clnt_shutdown, !21, !"__tracepoint_rpc_clnt_shutdown", i1 false, i1 false}
!21 = !{!"../include/trace/events/sunrpc.h", i32 137, i32 1}
!22 = !{ptr @__tracepoint_ptr_rpc_clnt_shutdown, !21, !"__tracepoint_ptr_rpc_clnt_shutdown", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_rpc_clnt_shutdown, !21, !"__SCK__tp_func_rpc_clnt_shutdown", i1 false, i1 false}
!24 = !{ptr @__tracepoint_rpc_clnt_release, !25, !"__tracepoint_rpc_clnt_release", i1 false, i1 false}
!25 = !{!"../include/trace/events/sunrpc.h", i32 138, i32 1}
!26 = !{ptr @__tracepoint_ptr_rpc_clnt_release, !25, !"__tracepoint_ptr_rpc_clnt_release", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_rpc_clnt_release, !25, !"__SCK__tp_func_rpc_clnt_release", i1 false, i1 false}
!28 = !{ptr @__tracepoint_rpc_clnt_replace_xprt, !29, !"__tracepoint_rpc_clnt_replace_xprt", i1 false, i1 false}
!29 = !{!"../include/trace/events/sunrpc.h", i32 139, i32 1}
!30 = !{ptr @__tracepoint_ptr_rpc_clnt_replace_xprt, !29, !"__tracepoint_ptr_rpc_clnt_replace_xprt", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_rpc_clnt_replace_xprt, !29, !"__SCK__tp_func_rpc_clnt_replace_xprt", i1 false, i1 false}
!32 = !{ptr @__tracepoint_rpc_clnt_replace_xprt_err, !33, !"__tracepoint_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!33 = !{!"../include/trace/events/sunrpc.h", i32 140, i32 1}
!34 = !{ptr @__tracepoint_ptr_rpc_clnt_replace_xprt_err, !33, !"__tracepoint_ptr_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_rpc_clnt_replace_xprt_err, !33, !"__SCK__tp_func_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!36 = !{ptr @__tracepoint_rpc_clnt_new, !37, !"__tracepoint_rpc_clnt_new", i1 false, i1 false}
!37 = !{!"../include/trace/events/sunrpc.h", i32 142, i32 1}
!38 = !{ptr @__tracepoint_ptr_rpc_clnt_new, !37, !"__tracepoint_ptr_rpc_clnt_new", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_rpc_clnt_new, !37, !"__SCK__tp_func_rpc_clnt_new", i1 false, i1 false}
!40 = !{ptr @__tracepoint_rpc_clnt_new_err, !41, !"__tracepoint_rpc_clnt_new_err", i1 false, i1 false}
!41 = !{!"../include/trace/events/sunrpc.h", i32 174, i32 1}
!42 = !{ptr @__tracepoint_ptr_rpc_clnt_new_err, !41, !"__tracepoint_ptr_rpc_clnt_new_err", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_rpc_clnt_new_err, !41, !"__SCK__tp_func_rpc_clnt_new_err", i1 false, i1 false}
!44 = !{ptr @__tracepoint_rpc_clnt_clone_err, !45, !"__tracepoint_rpc_clnt_clone_err", i1 false, i1 false}
!45 = !{!"../include/trace/events/sunrpc.h", i32 199, i32 1}
!46 = !{ptr @__tracepoint_ptr_rpc_clnt_clone_err, !45, !"__tracepoint_ptr_rpc_clnt_clone_err", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_rpc_clnt_clone_err, !45, !"__SCK__tp_func_rpc_clnt_clone_err", i1 false, i1 false}
!48 = !{ptr @__tracepoint_rpc_call_status, !49, !"__tracepoint_rpc_call_status", i1 false, i1 false}
!49 = !{!"../include/trace/events/sunrpc.h", i32 271, i32 1}
!50 = !{ptr @__tracepoint_ptr_rpc_call_status, !49, !"__tracepoint_ptr_rpc_call_status", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_rpc_call_status, !49, !"__SCK__tp_func_rpc_call_status", i1 false, i1 false}
!52 = !{ptr @__tracepoint_rpc_connect_status, !53, !"__tracepoint_rpc_connect_status", i1 false, i1 false}
!53 = !{!"../include/trace/events/sunrpc.h", i32 272, i32 1}
!54 = !{ptr @__tracepoint_ptr_rpc_connect_status, !53, !"__tracepoint_ptr_rpc_connect_status", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_rpc_connect_status, !53, !"__SCK__tp_func_rpc_connect_status", i1 false, i1 false}
!56 = !{ptr @__tracepoint_rpc_timeout_status, !57, !"__tracepoint_rpc_timeout_status", i1 false, i1 false}
!57 = !{!"../include/trace/events/sunrpc.h", i32 273, i32 1}
!58 = !{ptr @__tracepoint_ptr_rpc_timeout_status, !57, !"__tracepoint_ptr_rpc_timeout_status", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_rpc_timeout_status, !57, !"__SCK__tp_func_rpc_timeout_status", i1 false, i1 false}
!60 = !{ptr @__tracepoint_rpc_retry_refresh_status, !61, !"__tracepoint_rpc_retry_refresh_status", i1 false, i1 false}
!61 = !{!"../include/trace/events/sunrpc.h", i32 274, i32 1}
!62 = !{ptr @__tracepoint_ptr_rpc_retry_refresh_status, !61, !"__tracepoint_ptr_rpc_retry_refresh_status", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_rpc_retry_refresh_status, !61, !"__SCK__tp_func_rpc_retry_refresh_status", i1 false, i1 false}
!64 = !{ptr @__tracepoint_rpc_refresh_status, !65, !"__tracepoint_rpc_refresh_status", i1 false, i1 false}
!65 = !{!"../include/trace/events/sunrpc.h", i32 275, i32 1}
!66 = !{ptr @__tracepoint_ptr_rpc_refresh_status, !65, !"__tracepoint_ptr_rpc_refresh_status", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_rpc_refresh_status, !65, !"__SCK__tp_func_rpc_refresh_status", i1 false, i1 false}
!68 = !{ptr @__tracepoint_rpc_request, !69, !"__tracepoint_rpc_request", i1 false, i1 false}
!69 = !{!"../include/trace/events/sunrpc.h", i32 277, i32 1}
!70 = !{ptr @__tracepoint_ptr_rpc_request, !69, !"__tracepoint_ptr_rpc_request", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_rpc_request, !69, !"__SCK__tp_func_rpc_request", i1 false, i1 false}
!72 = !{ptr @__tracepoint_rpc_task_begin, !73, !"__tracepoint_rpc_task_begin", i1 false, i1 false}
!73 = !{!"../include/trace/events/sunrpc.h", i32 377, i32 1}
!74 = !{ptr @__tracepoint_ptr_rpc_task_begin, !73, !"__tracepoint_ptr_rpc_task_begin", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_rpc_task_begin, !73, !"__SCK__tp_func_rpc_task_begin", i1 false, i1 false}
!76 = !{ptr @__tracepoint_rpc_task_run_action, !77, !"__tracepoint_rpc_task_run_action", i1 false, i1 false}
!77 = !{!"../include/trace/events/sunrpc.h", i32 378, i32 1}
!78 = !{ptr @__tracepoint_ptr_rpc_task_run_action, !77, !"__tracepoint_ptr_rpc_task_run_action", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_rpc_task_run_action, !77, !"__SCK__tp_func_rpc_task_run_action", i1 false, i1 false}
!80 = !{ptr @__tracepoint_rpc_task_sync_sleep, !81, !"__tracepoint_rpc_task_sync_sleep", i1 false, i1 false}
!81 = !{!"../include/trace/events/sunrpc.h", i32 379, i32 1}
!82 = !{ptr @__tracepoint_ptr_rpc_task_sync_sleep, !81, !"__tracepoint_ptr_rpc_task_sync_sleep", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_rpc_task_sync_sleep, !81, !"__SCK__tp_func_rpc_task_sync_sleep", i1 false, i1 false}
!84 = !{ptr @__tracepoint_rpc_task_sync_wake, !85, !"__tracepoint_rpc_task_sync_wake", i1 false, i1 false}
!85 = !{!"../include/trace/events/sunrpc.h", i32 380, i32 1}
!86 = !{ptr @__tracepoint_ptr_rpc_task_sync_wake, !85, !"__tracepoint_ptr_rpc_task_sync_wake", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_rpc_task_sync_wake, !85, !"__SCK__tp_func_rpc_task_sync_wake", i1 false, i1 false}
!88 = !{ptr @__tracepoint_rpc_task_complete, !89, !"__tracepoint_rpc_task_complete", i1 false, i1 false}
!89 = !{!"../include/trace/events/sunrpc.h", i32 381, i32 1}
!90 = !{ptr @__tracepoint_ptr_rpc_task_complete, !89, !"__tracepoint_ptr_rpc_task_complete", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_rpc_task_complete, !89, !"__SCK__tp_func_rpc_task_complete", i1 false, i1 false}
!92 = !{ptr @__tracepoint_rpc_task_timeout, !93, !"__tracepoint_rpc_task_timeout", i1 false, i1 false}
!93 = !{!"../include/trace/events/sunrpc.h", i32 382, i32 1}
!94 = !{ptr @__tracepoint_ptr_rpc_task_timeout, !93, !"__tracepoint_ptr_rpc_task_timeout", i1 false, i1 false}
!95 = !{ptr @__SCK__tp_func_rpc_task_timeout, !93, !"__SCK__tp_func_rpc_task_timeout", i1 false, i1 false}
!96 = !{ptr @__tracepoint_rpc_task_signalled, !97, !"__tracepoint_rpc_task_signalled", i1 false, i1 false}
!97 = !{!"../include/trace/events/sunrpc.h", i32 383, i32 1}
!98 = !{ptr @__tracepoint_ptr_rpc_task_signalled, !97, !"__tracepoint_ptr_rpc_task_signalled", i1 false, i1 false}
!99 = !{ptr @__SCK__tp_func_rpc_task_signalled, !97, !"__SCK__tp_func_rpc_task_signalled", i1 false, i1 false}
!100 = !{ptr @__tracepoint_rpc_task_end, !101, !"__tracepoint_rpc_task_end", i1 false, i1 false}
!101 = !{!"../include/trace/events/sunrpc.h", i32 384, i32 1}
!102 = !{ptr @__tracepoint_ptr_rpc_task_end, !101, !"__tracepoint_ptr_rpc_task_end", i1 false, i1 false}
!103 = !{ptr @__SCK__tp_func_rpc_task_end, !101, !"__SCK__tp_func_rpc_task_end", i1 false, i1 false}
!104 = !{ptr @__tracepoint_rpc_task_call_done, !105, !"__tracepoint_rpc_task_call_done", i1 false, i1 false}
!105 = !{!"../include/trace/events/sunrpc.h", i32 385, i32 1}
!106 = !{ptr @__tracepoint_ptr_rpc_task_call_done, !105, !"__tracepoint_ptr_rpc_task_call_done", i1 false, i1 false}
!107 = !{ptr @__SCK__tp_func_rpc_task_call_done, !105, !"__SCK__tp_func_rpc_task_call_done", i1 false, i1 false}
!108 = !{ptr @__tracepoint_rpc_task_sleep, !109, !"__tracepoint_rpc_task_sleep", i1 false, i1 false}
!109 = !{!"../include/trace/events/sunrpc.h", i32 432, i32 1}
!110 = !{ptr @__tracepoint_ptr_rpc_task_sleep, !109, !"__tracepoint_ptr_rpc_task_sleep", i1 false, i1 false}
!111 = !{ptr @__SCK__tp_func_rpc_task_sleep, !109, !"__SCK__tp_func_rpc_task_sleep", i1 false, i1 false}
!112 = !{ptr @__tracepoint_rpc_task_wakeup, !113, !"__tracepoint_rpc_task_wakeup", i1 false, i1 false}
!113 = !{!"../include/trace/events/sunrpc.h", i32 433, i32 1}
!114 = !{ptr @__tracepoint_ptr_rpc_task_wakeup, !113, !"__tracepoint_ptr_rpc_task_wakeup", i1 false, i1 false}
!115 = !{ptr @__SCK__tp_func_rpc_task_wakeup, !113, !"__SCK__tp_func_rpc_task_wakeup", i1 false, i1 false}
!116 = !{ptr @__tracepoint_rpc_bad_callhdr, !117, !"__tracepoint_rpc_bad_callhdr", i1 false, i1 false}
!117 = !{!"../include/trace/events/sunrpc.h", i32 462, i32 1}
!118 = !{ptr @__tracepoint_ptr_rpc_bad_callhdr, !117, !"__tracepoint_ptr_rpc_bad_callhdr", i1 false, i1 false}
!119 = !{ptr @__SCK__tp_func_rpc_bad_callhdr, !117, !"__SCK__tp_func_rpc_bad_callhdr", i1 false, i1 false}
!120 = !{ptr @__tracepoint_rpc_bad_verifier, !121, !"__tracepoint_rpc_bad_verifier", i1 false, i1 false}
!121 = !{!"../include/trace/events/sunrpc.h", i32 463, i32 1}
!122 = !{ptr @__tracepoint_ptr_rpc_bad_verifier, !121, !"__tracepoint_ptr_rpc_bad_verifier", i1 false, i1 false}
!123 = !{ptr @__SCK__tp_func_rpc_bad_verifier, !121, !"__SCK__tp_func_rpc_bad_verifier", i1 false, i1 false}
!124 = !{ptr @__tracepoint_rpc__prog_unavail, !125, !"__tracepoint_rpc__prog_unavail", i1 false, i1 false}
!125 = !{!"../include/trace/events/sunrpc.h", i32 507, i32 1}
!126 = !{ptr @__tracepoint_ptr_rpc__prog_unavail, !125, !"__tracepoint_ptr_rpc__prog_unavail", i1 false, i1 false}
!127 = !{ptr @__SCK__tp_func_rpc__prog_unavail, !125, !"__SCK__tp_func_rpc__prog_unavail", i1 false, i1 false}
!128 = !{ptr @__tracepoint_rpc__prog_mismatch, !129, !"__tracepoint_rpc__prog_mismatch", i1 false, i1 false}
!129 = !{!"../include/trace/events/sunrpc.h", i32 508, i32 1}
!130 = !{ptr @__tracepoint_ptr_rpc__prog_mismatch, !129, !"__tracepoint_ptr_rpc__prog_mismatch", i1 false, i1 false}
!131 = !{ptr @__SCK__tp_func_rpc__prog_mismatch, !129, !"__SCK__tp_func_rpc__prog_mismatch", i1 false, i1 false}
!132 = !{ptr @__tracepoint_rpc__proc_unavail, !133, !"__tracepoint_rpc__proc_unavail", i1 false, i1 false}
!133 = !{!"../include/trace/events/sunrpc.h", i32 509, i32 1}
!134 = !{ptr @__tracepoint_ptr_rpc__proc_unavail, !133, !"__tracepoint_ptr_rpc__proc_unavail", i1 false, i1 false}
!135 = !{ptr @__SCK__tp_func_rpc__proc_unavail, !133, !"__SCK__tp_func_rpc__proc_unavail", i1 false, i1 false}
!136 = !{ptr @__tracepoint_rpc__garbage_args, !137, !"__tracepoint_rpc__garbage_args", i1 false, i1 false}
!137 = !{!"../include/trace/events/sunrpc.h", i32 510, i32 1}
!138 = !{ptr @__tracepoint_ptr_rpc__garbage_args, !137, !"__tracepoint_ptr_rpc__garbage_args", i1 false, i1 false}
!139 = !{ptr @__SCK__tp_func_rpc__garbage_args, !137, !"__SCK__tp_func_rpc__garbage_args", i1 false, i1 false}
!140 = !{ptr @__tracepoint_rpc__unparsable, !141, !"__tracepoint_rpc__unparsable", i1 false, i1 false}
!141 = !{!"../include/trace/events/sunrpc.h", i32 511, i32 1}
!142 = !{ptr @__tracepoint_ptr_rpc__unparsable, !141, !"__tracepoint_ptr_rpc__unparsable", i1 false, i1 false}
!143 = !{ptr @__SCK__tp_func_rpc__unparsable, !141, !"__SCK__tp_func_rpc__unparsable", i1 false, i1 false}
!144 = !{ptr @__tracepoint_rpc__mismatch, !145, !"__tracepoint_rpc__mismatch", i1 false, i1 false}
!145 = !{!"../include/trace/events/sunrpc.h", i32 512, i32 1}
!146 = !{ptr @__tracepoint_ptr_rpc__mismatch, !145, !"__tracepoint_ptr_rpc__mismatch", i1 false, i1 false}
!147 = !{ptr @__SCK__tp_func_rpc__mismatch, !145, !"__SCK__tp_func_rpc__mismatch", i1 false, i1 false}
!148 = !{ptr @__tracepoint_rpc__stale_creds, !149, !"__tracepoint_rpc__stale_creds", i1 false, i1 false}
!149 = !{!"../include/trace/events/sunrpc.h", i32 513, i32 1}
!150 = !{ptr @__tracepoint_ptr_rpc__stale_creds, !149, !"__tracepoint_ptr_rpc__stale_creds", i1 false, i1 false}
!151 = !{ptr @__SCK__tp_func_rpc__stale_creds, !149, !"__SCK__tp_func_rpc__stale_creds", i1 false, i1 false}
!152 = !{ptr @__tracepoint_rpc__bad_creds, !153, !"__tracepoint_rpc__bad_creds", i1 false, i1 false}
!153 = !{!"../include/trace/events/sunrpc.h", i32 514, i32 1}
!154 = !{ptr @__tracepoint_ptr_rpc__bad_creds, !153, !"__tracepoint_ptr_rpc__bad_creds", i1 false, i1 false}
!155 = !{ptr @__SCK__tp_func_rpc__bad_creds, !153, !"__SCK__tp_func_rpc__bad_creds", i1 false, i1 false}
!156 = !{ptr @__tracepoint_rpc__auth_tooweak, !157, !"__tracepoint_rpc__auth_tooweak", i1 false, i1 false}
!157 = !{!"../include/trace/events/sunrpc.h", i32 515, i32 1}
!158 = !{ptr @__tracepoint_ptr_rpc__auth_tooweak, !157, !"__tracepoint_ptr_rpc__auth_tooweak", i1 false, i1 false}
!159 = !{ptr @__SCK__tp_func_rpc__auth_tooweak, !157, !"__SCK__tp_func_rpc__auth_tooweak", i1 false, i1 false}
!160 = !{ptr @__tracepoint_rpcb_prog_unavail_err, !161, !"__tracepoint_rpcb_prog_unavail_err", i1 false, i1 false}
!161 = !{!"../include/trace/events/sunrpc.h", i32 524, i32 1}
!162 = !{ptr @__tracepoint_ptr_rpcb_prog_unavail_err, !161, !"__tracepoint_ptr_rpcb_prog_unavail_err", i1 false, i1 false}
!163 = !{ptr @__SCK__tp_func_rpcb_prog_unavail_err, !161, !"__SCK__tp_func_rpcb_prog_unavail_err", i1 false, i1 false}
!164 = !{ptr @__tracepoint_rpcb_timeout_err, !165, !"__tracepoint_rpcb_timeout_err", i1 false, i1 false}
!165 = !{!"../include/trace/events/sunrpc.h", i32 525, i32 1}
!166 = !{ptr @__tracepoint_ptr_rpcb_timeout_err, !165, !"__tracepoint_ptr_rpcb_timeout_err", i1 false, i1 false}
!167 = !{ptr @__SCK__tp_func_rpcb_timeout_err, !165, !"__SCK__tp_func_rpcb_timeout_err", i1 false, i1 false}
!168 = !{ptr @__tracepoint_rpcb_bind_version_err, !169, !"__tracepoint_rpcb_bind_version_err", i1 false, i1 false}
!169 = !{!"../include/trace/events/sunrpc.h", i32 526, i32 1}
!170 = !{ptr @__tracepoint_ptr_rpcb_bind_version_err, !169, !"__tracepoint_ptr_rpcb_bind_version_err", i1 false, i1 false}
!171 = !{ptr @__SCK__tp_func_rpcb_bind_version_err, !169, !"__SCK__tp_func_rpcb_bind_version_err", i1 false, i1 false}
!172 = !{ptr @__tracepoint_rpcb_unreachable_err, !173, !"__tracepoint_rpcb_unreachable_err", i1 false, i1 false}
!173 = !{!"../include/trace/events/sunrpc.h", i32 527, i32 1}
!174 = !{ptr @__tracepoint_ptr_rpcb_unreachable_err, !173, !"__tracepoint_ptr_rpcb_unreachable_err", i1 false, i1 false}
!175 = !{ptr @__SCK__tp_func_rpcb_unreachable_err, !173, !"__SCK__tp_func_rpcb_unreachable_err", i1 false, i1 false}
!176 = !{ptr @__tracepoint_rpcb_unrecognized_err, !177, !"__tracepoint_rpcb_unrecognized_err", i1 false, i1 false}
!177 = !{!"../include/trace/events/sunrpc.h", i32 528, i32 1}
!178 = !{ptr @__tracepoint_ptr_rpcb_unrecognized_err, !177, !"__tracepoint_ptr_rpcb_unrecognized_err", i1 false, i1 false}
!179 = !{ptr @__SCK__tp_func_rpcb_unrecognized_err, !177, !"__SCK__tp_func_rpcb_unrecognized_err", i1 false, i1 false}
!180 = !{ptr @__tracepoint_rpc_buf_alloc, !181, !"__tracepoint_rpc_buf_alloc", i1 false, i1 false}
!181 = !{!"../include/trace/events/sunrpc.h", i32 530, i32 1}
!182 = !{ptr @__tracepoint_ptr_rpc_buf_alloc, !181, !"__tracepoint_ptr_rpc_buf_alloc", i1 false, i1 false}
!183 = !{ptr @__SCK__tp_func_rpc_buf_alloc, !181, !"__SCK__tp_func_rpc_buf_alloc", i1 false, i1 false}
!184 = !{ptr @__tracepoint_rpc_call_rpcerror, !185, !"__tracepoint_rpc_call_rpcerror", i1 false, i1 false}
!185 = !{!"../include/trace/events/sunrpc.h", i32 561, i32 1}
!186 = !{ptr @__tracepoint_ptr_rpc_call_rpcerror, !185, !"__tracepoint_ptr_rpc_call_rpcerror", i1 false, i1 false}
!187 = !{ptr @__SCK__tp_func_rpc_call_rpcerror, !185, !"__SCK__tp_func_rpc_call_rpcerror", i1 false, i1 false}
!188 = !{ptr @__tracepoint_rpc_stats_latency, !189, !"__tracepoint_rpc_stats_latency", i1 false, i1 false}
!189 = !{!"../include/trace/events/sunrpc.h", i32 590, i32 1}
!190 = !{ptr @__tracepoint_ptr_rpc_stats_latency, !189, !"__tracepoint_ptr_rpc_stats_latency", i1 false, i1 false}
!191 = !{ptr @__SCK__tp_func_rpc_stats_latency, !189, !"__SCK__tp_func_rpc_stats_latency", i1 false, i1 false}
!192 = !{ptr @__tracepoint_rpc_xdr_overflow, !193, !"__tracepoint_rpc_xdr_overflow", i1 false, i1 false}
!193 = !{!"../include/trace/events/sunrpc.h", i32 632, i32 1}
!194 = !{ptr @__tracepoint_ptr_rpc_xdr_overflow, !193, !"__tracepoint_ptr_rpc_xdr_overflow", i1 false, i1 false}
!195 = !{ptr @__SCK__tp_func_rpc_xdr_overflow, !193, !"__SCK__tp_func_rpc_xdr_overflow", i1 false, i1 false}
!196 = !{ptr @__tracepoint_rpc_xdr_alignment, !197, !"__tracepoint_rpc_xdr_alignment", i1 false, i1 false}
!197 = !{!"../include/trace/events/sunrpc.h", i32 699, i32 1}
!198 = !{ptr @__tracepoint_ptr_rpc_xdr_alignment, !197, !"__tracepoint_ptr_rpc_xdr_alignment", i1 false, i1 false}
!199 = !{ptr @__SCK__tp_func_rpc_xdr_alignment, !197, !"__SCK__tp_func_rpc_xdr_alignment", i1 false, i1 false}
!200 = !{ptr @__tracepoint_rpc_socket_state_change, !201, !"__tracepoint_rpc_socket_state_change", i1 false, i1 false}
!201 = !{!"../include/trace/events/sunrpc.h", i32 919, i32 1}
!202 = !{ptr @__tracepoint_ptr_rpc_socket_state_change, !201, !"__tracepoint_ptr_rpc_socket_state_change", i1 false, i1 false}
!203 = !{ptr @__SCK__tp_func_rpc_socket_state_change, !201, !"__SCK__tp_func_rpc_socket_state_change", i1 false, i1 false}
!204 = !{ptr @__tracepoint_rpc_socket_connect, !205, !"__tracepoint_rpc_socket_connect", i1 false, i1 false}
!205 = !{!"../include/trace/events/sunrpc.h", i32 920, i32 1}
!206 = !{ptr @__tracepoint_ptr_rpc_socket_connect, !205, !"__tracepoint_ptr_rpc_socket_connect", i1 false, i1 false}
!207 = !{ptr @__SCK__tp_func_rpc_socket_connect, !205, !"__SCK__tp_func_rpc_socket_connect", i1 false, i1 false}
!208 = !{ptr @__tracepoint_rpc_socket_error, !209, !"__tracepoint_rpc_socket_error", i1 false, i1 false}
!209 = !{!"../include/trace/events/sunrpc.h", i32 921, i32 1}
!210 = !{ptr @__tracepoint_ptr_rpc_socket_error, !209, !"__tracepoint_ptr_rpc_socket_error", i1 false, i1 false}
!211 = !{ptr @__SCK__tp_func_rpc_socket_error, !209, !"__SCK__tp_func_rpc_socket_error", i1 false, i1 false}
!212 = !{ptr @__tracepoint_rpc_socket_reset_connection, !213, !"__tracepoint_rpc_socket_reset_connection", i1 false, i1 false}
!213 = !{!"../include/trace/events/sunrpc.h", i32 922, i32 1}
!214 = !{ptr @__tracepoint_ptr_rpc_socket_reset_connection, !213, !"__tracepoint_ptr_rpc_socket_reset_connection", i1 false, i1 false}
!215 = !{ptr @__SCK__tp_func_rpc_socket_reset_connection, !213, !"__SCK__tp_func_rpc_socket_reset_connection", i1 false, i1 false}
!216 = !{ptr @__tracepoint_rpc_socket_close, !217, !"__tracepoint_rpc_socket_close", i1 false, i1 false}
!217 = !{!"../include/trace/events/sunrpc.h", i32 923, i32 1}
!218 = !{ptr @__tracepoint_ptr_rpc_socket_close, !217, !"__tracepoint_ptr_rpc_socket_close", i1 false, i1 false}
!219 = !{ptr @__SCK__tp_func_rpc_socket_close, !217, !"__SCK__tp_func_rpc_socket_close", i1 false, i1 false}
!220 = !{ptr @__tracepoint_rpc_socket_shutdown, !221, !"__tracepoint_rpc_socket_shutdown", i1 false, i1 false}
!221 = !{!"../include/trace/events/sunrpc.h", i32 924, i32 1}
!222 = !{ptr @__tracepoint_ptr_rpc_socket_shutdown, !221, !"__tracepoint_ptr_rpc_socket_shutdown", i1 false, i1 false}
!223 = !{ptr @__SCK__tp_func_rpc_socket_shutdown, !221, !"__SCK__tp_func_rpc_socket_shutdown", i1 false, i1 false}
!224 = !{ptr @__tracepoint_rpc_socket_nospace, !225, !"__tracepoint_rpc_socket_nospace", i1 false, i1 false}
!225 = !{!"../include/trace/events/sunrpc.h", i32 926, i32 1}
!226 = !{ptr @__tracepoint_ptr_rpc_socket_nospace, !225, !"__tracepoint_ptr_rpc_socket_nospace", i1 false, i1 false}
!227 = !{ptr @__SCK__tp_func_rpc_socket_nospace, !225, !"__SCK__tp_func_rpc_socket_nospace", i1 false, i1 false}
!228 = !{ptr @__tracepoint_xprt_create, !229, !"__tracepoint_xprt_create", i1 false, i1 false}
!229 = !{!"../include/trace/events/sunrpc.h", i32 1003, i32 1}
!230 = !{ptr @__tracepoint_ptr_xprt_create, !229, !"__tracepoint_ptr_xprt_create", i1 false, i1 false}
!231 = !{ptr @__SCK__tp_func_xprt_create, !229, !"__SCK__tp_func_xprt_create", i1 false, i1 false}
!232 = !{ptr @__tracepoint_xprt_connect, !233, !"__tracepoint_xprt_connect", i1 false, i1 false}
!233 = !{!"../include/trace/events/sunrpc.h", i32 1004, i32 1}
!234 = !{ptr @__tracepoint_ptr_xprt_connect, !233, !"__tracepoint_ptr_xprt_connect", i1 false, i1 false}
!235 = !{ptr @__SCK__tp_func_xprt_connect, !233, !"__SCK__tp_func_xprt_connect", i1 false, i1 false}
!236 = !{ptr @__tracepoint_xprt_disconnect_auto, !237, !"__tracepoint_xprt_disconnect_auto", i1 false, i1 false}
!237 = !{!"../include/trace/events/sunrpc.h", i32 1005, i32 1}
!238 = !{ptr @__tracepoint_ptr_xprt_disconnect_auto, !237, !"__tracepoint_ptr_xprt_disconnect_auto", i1 false, i1 false}
!239 = !{ptr @__SCK__tp_func_xprt_disconnect_auto, !237, !"__SCK__tp_func_xprt_disconnect_auto", i1 false, i1 false}
!240 = !{ptr @__tracepoint_xprt_disconnect_done, !241, !"__tracepoint_xprt_disconnect_done", i1 false, i1 false}
!241 = !{!"../include/trace/events/sunrpc.h", i32 1006, i32 1}
!242 = !{ptr @__tracepoint_ptr_xprt_disconnect_done, !241, !"__tracepoint_ptr_xprt_disconnect_done", i1 false, i1 false}
!243 = !{ptr @__SCK__tp_func_xprt_disconnect_done, !241, !"__SCK__tp_func_xprt_disconnect_done", i1 false, i1 false}
!244 = !{ptr @__tracepoint_xprt_disconnect_force, !245, !"__tracepoint_xprt_disconnect_force", i1 false, i1 false}
!245 = !{!"../include/trace/events/sunrpc.h", i32 1007, i32 1}
!246 = !{ptr @__tracepoint_ptr_xprt_disconnect_force, !245, !"__tracepoint_ptr_xprt_disconnect_force", i1 false, i1 false}
!247 = !{ptr @__SCK__tp_func_xprt_disconnect_force, !245, !"__SCK__tp_func_xprt_disconnect_force", i1 false, i1 false}
!248 = !{ptr @__tracepoint_xprt_disconnect_cleanup, !249, !"__tracepoint_xprt_disconnect_cleanup", i1 false, i1 false}
!249 = !{!"../include/trace/events/sunrpc.h", i32 1008, i32 1}
!250 = !{ptr @__tracepoint_ptr_xprt_disconnect_cleanup, !249, !"__tracepoint_ptr_xprt_disconnect_cleanup", i1 false, i1 false}
!251 = !{ptr @__SCK__tp_func_xprt_disconnect_cleanup, !249, !"__SCK__tp_func_xprt_disconnect_cleanup", i1 false, i1 false}
!252 = !{ptr @__tracepoint_xprt_destroy, !253, !"__tracepoint_xprt_destroy", i1 false, i1 false}
!253 = !{!"../include/trace/events/sunrpc.h", i32 1009, i32 1}
!254 = !{ptr @__tracepoint_ptr_xprt_destroy, !253, !"__tracepoint_ptr_xprt_destroy", i1 false, i1 false}
!255 = !{ptr @__SCK__tp_func_xprt_destroy, !253, !"__SCK__tp_func_xprt_destroy", i1 false, i1 false}
!256 = !{ptr @__tracepoint_xprt_timer, !257, !"__tracepoint_xprt_timer", i1 false, i1 false}
!257 = !{!"../include/trace/events/sunrpc.h", i32 1047, i32 1}
!258 = !{ptr @__tracepoint_ptr_xprt_timer, !257, !"__tracepoint_ptr_xprt_timer", i1 false, i1 false}
!259 = !{ptr @__SCK__tp_func_xprt_timer, !257, !"__SCK__tp_func_xprt_timer", i1 false, i1 false}
!260 = !{ptr @__tracepoint_xprt_lookup_rqst, !261, !"__tracepoint_xprt_lookup_rqst", i1 false, i1 false}
!261 = !{!"../include/trace/events/sunrpc.h", i32 1048, i32 1}
!262 = !{ptr @__tracepoint_ptr_xprt_lookup_rqst, !261, !"__tracepoint_ptr_xprt_lookup_rqst", i1 false, i1 false}
!263 = !{ptr @__SCK__tp_func_xprt_lookup_rqst, !261, !"__SCK__tp_func_xprt_lookup_rqst", i1 false, i1 false}
!264 = !{ptr @__tracepoint_xprt_transmit, !265, !"__tracepoint_xprt_transmit", i1 false, i1 false}
!265 = !{!"../include/trace/events/sunrpc.h", i32 1050, i32 1}
!266 = !{ptr @__tracepoint_ptr_xprt_transmit, !265, !"__tracepoint_ptr_xprt_transmit", i1 false, i1 false}
!267 = !{ptr @__SCK__tp_func_xprt_transmit, !265, !"__SCK__tp_func_xprt_transmit", i1 false, i1 false}
!268 = !{ptr @__tracepoint_xprt_retransmit, !269, !"__tracepoint_xprt_retransmit", i1 false, i1 false}
!269 = !{!"../include/trace/events/sunrpc.h", i32 1081, i32 1}
!270 = !{ptr @__tracepoint_ptr_xprt_retransmit, !269, !"__tracepoint_ptr_xprt_retransmit", i1 false, i1 false}
!271 = !{ptr @__SCK__tp_func_xprt_retransmit, !269, !"__SCK__tp_func_xprt_retransmit", i1 false, i1 false}
!272 = !{ptr @__tracepoint_xprt_ping, !273, !"__tracepoint_xprt_ping", i1 false, i1 false}
!273 = !{!"../include/trace/events/sunrpc.h", i32 1123, i32 1}
!274 = !{ptr @__tracepoint_ptr_xprt_ping, !273, !"__tracepoint_ptr_xprt_ping", i1 false, i1 false}
!275 = !{ptr @__SCK__tp_func_xprt_ping, !273, !"__SCK__tp_func_xprt_ping", i1 false, i1 false}
!276 = !{ptr @__tracepoint_xprt_reserve_xprt, !277, !"__tracepoint_xprt_reserve_xprt", i1 false, i1 false}
!277 = !{!"../include/trace/events/sunrpc.h", i32 1187, i32 1}
!278 = !{ptr @__tracepoint_ptr_xprt_reserve_xprt, !277, !"__tracepoint_ptr_xprt_reserve_xprt", i1 false, i1 false}
!279 = !{ptr @__SCK__tp_func_xprt_reserve_xprt, !277, !"__SCK__tp_func_xprt_reserve_xprt", i1 false, i1 false}
!280 = !{ptr @__tracepoint_xprt_release_xprt, !281, !"__tracepoint_xprt_release_xprt", i1 false, i1 false}
!281 = !{!"../include/trace/events/sunrpc.h", i32 1188, i32 1}
!282 = !{ptr @__tracepoint_ptr_xprt_release_xprt, !281, !"__tracepoint_ptr_xprt_release_xprt", i1 false, i1 false}
!283 = !{ptr @__SCK__tp_func_xprt_release_xprt, !281, !"__SCK__tp_func_xprt_release_xprt", i1 false, i1 false}
!284 = !{ptr @__tracepoint_xprt_reserve_cong, !285, !"__tracepoint_xprt_reserve_cong", i1 false, i1 false}
!285 = !{!"../include/trace/events/sunrpc.h", i32 1242, i32 1}
!286 = !{ptr @__tracepoint_ptr_xprt_reserve_cong, !285, !"__tracepoint_ptr_xprt_reserve_cong", i1 false, i1 false}
!287 = !{ptr @__SCK__tp_func_xprt_reserve_cong, !285, !"__SCK__tp_func_xprt_reserve_cong", i1 false, i1 false}
!288 = !{ptr @__tracepoint_xprt_release_cong, !289, !"__tracepoint_xprt_release_cong", i1 false, i1 false}
!289 = !{!"../include/trace/events/sunrpc.h", i32 1243, i32 1}
!290 = !{ptr @__tracepoint_ptr_xprt_release_cong, !289, !"__tracepoint_ptr_xprt_release_cong", i1 false, i1 false}
!291 = !{ptr @__SCK__tp_func_xprt_release_cong, !289, !"__SCK__tp_func_xprt_release_cong", i1 false, i1 false}
!292 = !{ptr @__tracepoint_xprt_get_cong, !293, !"__tracepoint_xprt_get_cong", i1 false, i1 false}
!293 = !{!"../include/trace/events/sunrpc.h", i32 1244, i32 1}
!294 = !{ptr @__tracepoint_ptr_xprt_get_cong, !293, !"__tracepoint_ptr_xprt_get_cong", i1 false, i1 false}
!295 = !{ptr @__SCK__tp_func_xprt_get_cong, !293, !"__SCK__tp_func_xprt_get_cong", i1 false, i1 false}
!296 = !{ptr @__tracepoint_xprt_put_cong, !297, !"__tracepoint_xprt_put_cong", i1 false, i1 false}
!297 = !{!"../include/trace/events/sunrpc.h", i32 1245, i32 1}
!298 = !{ptr @__tracepoint_ptr_xprt_put_cong, !297, !"__tracepoint_ptr_xprt_put_cong", i1 false, i1 false}
!299 = !{ptr @__SCK__tp_func_xprt_put_cong, !297, !"__SCK__tp_func_xprt_put_cong", i1 false, i1 false}
!300 = !{ptr @__tracepoint_xprt_reserve, !301, !"__tracepoint_xprt_reserve", i1 false, i1 false}
!301 = !{!"../include/trace/events/sunrpc.h", i32 1247, i32 1}
!302 = !{ptr @__tracepoint_ptr_xprt_reserve, !301, !"__tracepoint_ptr_xprt_reserve", i1 false, i1 false}
!303 = !{ptr @__SCK__tp_func_xprt_reserve, !301, !"__SCK__tp_func_xprt_reserve", i1 false, i1 false}
!304 = !{ptr @__tracepoint_xs_stream_read_data, !305, !"__tracepoint_xs_stream_read_data", i1 false, i1 false}
!305 = !{!"../include/trace/events/sunrpc.h", i32 1271, i32 1}
!306 = !{ptr @__tracepoint_ptr_xs_stream_read_data, !305, !"__tracepoint_ptr_xs_stream_read_data", i1 false, i1 false}
!307 = !{ptr @__SCK__tp_func_xs_stream_read_data, !305, !"__SCK__tp_func_xs_stream_read_data", i1 false, i1 false}
!308 = !{ptr @__tracepoint_xs_stream_read_request, !309, !"__tracepoint_xs_stream_read_request", i1 false, i1 false}
!309 = !{!"../include/trace/events/sunrpc.h", i32 1298, i32 1}
!310 = !{ptr @__tracepoint_ptr_xs_stream_read_request, !309, !"__tracepoint_ptr_xs_stream_read_request", i1 false, i1 false}
!311 = !{ptr @__SCK__tp_func_xs_stream_read_request, !309, !"__SCK__tp_func_xs_stream_read_request", i1 false, i1 false}
!312 = !{ptr @__tracepoint_rpcb_getport, !313, !"__tracepoint_rpcb_getport", i1 false, i1 false}
!313 = !{!"../include/trace/events/sunrpc.h", i32 1326, i32 1}
!314 = !{ptr @__tracepoint_ptr_rpcb_getport, !313, !"__tracepoint_ptr_rpcb_getport", i1 false, i1 false}
!315 = !{ptr @__SCK__tp_func_rpcb_getport, !313, !"__SCK__tp_func_rpcb_getport", i1 false, i1 false}
!316 = !{ptr @__tracepoint_rpcb_setport, !317, !"__tracepoint_rpcb_setport", i1 false, i1 false}
!317 = !{!"../include/trace/events/sunrpc.h", i32 1363, i32 1}
!318 = !{ptr @__tracepoint_ptr_rpcb_setport, !317, !"__tracepoint_ptr_rpcb_setport", i1 false, i1 false}
!319 = !{ptr @__SCK__tp_func_rpcb_setport, !317, !"__SCK__tp_func_rpcb_setport", i1 false, i1 false}
!320 = !{ptr @__tracepoint_pmap_register, !321, !"__tracepoint_pmap_register", i1 false, i1 false}
!321 = !{!"../include/trace/events/sunrpc.h", i32 1392, i32 1}
!322 = !{ptr @__tracepoint_ptr_pmap_register, !321, !"__tracepoint_ptr_pmap_register", i1 false, i1 false}
!323 = !{ptr @__SCK__tp_func_pmap_register, !321, !"__SCK__tp_func_pmap_register", i1 false, i1 false}
!324 = !{ptr @__tracepoint_rpcb_register, !325, !"__tracepoint_rpcb_register", i1 false, i1 false}
!325 = !{!"../include/trace/events/sunrpc.h", i32 1422, i32 1}
!326 = !{ptr @__tracepoint_ptr_rpcb_register, !325, !"__tracepoint_ptr_rpcb_register", i1 false, i1 false}
!327 = !{ptr @__SCK__tp_func_rpcb_register, !325, !"__SCK__tp_func_rpcb_register", i1 false, i1 false}
!328 = !{ptr @__tracepoint_rpcb_unregister, !329, !"__tracepoint_rpcb_unregister", i1 false, i1 false}
!329 = !{!"../include/trace/events/sunrpc.h", i32 1452, i32 1}
!330 = !{ptr @__tracepoint_ptr_rpcb_unregister, !329, !"__tracepoint_ptr_rpcb_unregister", i1 false, i1 false}
!331 = !{ptr @__SCK__tp_func_rpcb_unregister, !329, !"__SCK__tp_func_rpcb_unregister", i1 false, i1 false}
!332 = !{ptr @__tracepoint_svc_xdr_recvfrom, !333, !"__tracepoint_svc_xdr_recvfrom", i1 false, i1 false}
!333 = !{!"../include/trace/events/sunrpc.h", i32 1523, i32 1}
!334 = !{ptr @__tracepoint_ptr_svc_xdr_recvfrom, !333, !"__tracepoint_ptr_svc_xdr_recvfrom", i1 false, i1 false}
!335 = !{ptr @__SCK__tp_func_svc_xdr_recvfrom, !333, !"__SCK__tp_func_svc_xdr_recvfrom", i1 false, i1 false}
!336 = !{ptr @__tracepoint_svc_xdr_sendto, !337, !"__tracepoint_svc_xdr_sendto", i1 false, i1 false}
!337 = !{!"../include/trace/events/sunrpc.h", i32 1574, i32 1}
!338 = !{ptr @__tracepoint_ptr_svc_xdr_sendto, !337, !"__tracepoint_ptr_svc_xdr_sendto", i1 false, i1 false}
!339 = !{ptr @__SCK__tp_func_svc_xdr_sendto, !337, !"__SCK__tp_func_svc_xdr_sendto", i1 false, i1 false}
!340 = !{ptr @__tracepoint_svc_authenticate, !341, !"__tracepoint_svc_authenticate", i1 false, i1 false}
!341 = !{!"../include/trace/events/sunrpc.h", i32 1628, i32 1}
!342 = !{ptr @__tracepoint_ptr_svc_authenticate, !341, !"__tracepoint_ptr_svc_authenticate", i1 false, i1 false}
!343 = !{ptr @__SCK__tp_func_svc_authenticate, !341, !"__SCK__tp_func_svc_authenticate", i1 false, i1 false}
!344 = !{ptr @__tracepoint_svc_process, !345, !"__tracepoint_svc_process", i1 false, i1 false}
!345 = !{!"../include/trace/events/sunrpc.h", i32 1650, i32 1}
!346 = !{ptr @__tracepoint_ptr_svc_process, !345, !"__tracepoint_ptr_svc_process", i1 false, i1 false}
!347 = !{ptr @__SCK__tp_func_svc_process, !345, !"__SCK__tp_func_svc_process", i1 false, i1 false}
!348 = !{ptr @__tracepoint_svc_defer, !349, !"__tracepoint_svc_defer", i1 false, i1 false}
!349 = !{!"../include/trace/events/sunrpc.h", i32 1713, i32 1}
!350 = !{ptr @__tracepoint_ptr_svc_defer, !349, !"__tracepoint_ptr_svc_defer", i1 false, i1 false}
!351 = !{ptr @__SCK__tp_func_svc_defer, !349, !"__SCK__tp_func_svc_defer", i1 false, i1 false}
!352 = !{ptr @__tracepoint_svc_drop, !353, !"__tracepoint_svc_drop", i1 false, i1 false}
!353 = !{!"../include/trace/events/sunrpc.h", i32 1714, i32 1}
!354 = !{ptr @__tracepoint_ptr_svc_drop, !353, !"__tracepoint_ptr_svc_drop", i1 false, i1 false}
!355 = !{ptr @__SCK__tp_func_svc_drop, !353, !"__SCK__tp_func_svc_drop", i1 false, i1 false}
!356 = !{ptr @__tracepoint_svc_send, !357, !"__tracepoint_svc_send", i1 false, i1 false}
!357 = !{!"../include/trace/events/sunrpc.h", i32 1741, i32 1}
!358 = !{ptr @__tracepoint_ptr_svc_send, !357, !"__tracepoint_ptr_svc_send", i1 false, i1 false}
!359 = !{ptr @__SCK__tp_func_svc_send, !357, !"__SCK__tp_func_svc_send", i1 false, i1 false}
!360 = !{ptr @__tracepoint_svc_xprt_create_err, !361, !"__tracepoint_svc_xprt_create_err", i1 false, i1 false}
!361 = !{!"../include/trace/events/sunrpc.h", i32 1762, i32 1}
!362 = !{ptr @__tracepoint_ptr_svc_xprt_create_err, !361, !"__tracepoint_ptr_svc_xprt_create_err", i1 false, i1 false}
!363 = !{ptr @__SCK__tp_func_svc_xprt_create_err, !361, !"__SCK__tp_func_svc_xprt_create_err", i1 false, i1 false}
!364 = !{ptr @__tracepoint_svc_xprt_enqueue, !365, !"__tracepoint_svc_xprt_enqueue", i1 false, i1 false}
!365 = !{!"../include/trace/events/sunrpc.h", i32 1792, i32 1}
!366 = !{ptr @__tracepoint_ptr_svc_xprt_enqueue, !365, !"__tracepoint_ptr_svc_xprt_enqueue", i1 false, i1 false}
!367 = !{ptr @__SCK__tp_func_svc_xprt_enqueue, !365, !"__SCK__tp_func_svc_xprt_enqueue", i1 false, i1 false}
!368 = !{ptr @__tracepoint_svc_xprt_no_write_space, !369, !"__tracepoint_svc_xprt_no_write_space", i1 false, i1 false}
!369 = !{!"../include/trace/events/sunrpc.h", i32 1839, i32 1}
!370 = !{ptr @__tracepoint_ptr_svc_xprt_no_write_space, !369, !"__tracepoint_ptr_svc_xprt_no_write_space", i1 false, i1 false}
!371 = !{ptr @__SCK__tp_func_svc_xprt_no_write_space, !369, !"__SCK__tp_func_svc_xprt_no_write_space", i1 false, i1 false}
!372 = !{ptr @__tracepoint_svc_xprt_close, !373, !"__tracepoint_svc_xprt_close", i1 false, i1 false}
!373 = !{!"../include/trace/events/sunrpc.h", i32 1840, i32 1}
!374 = !{ptr @__tracepoint_ptr_svc_xprt_close, !373, !"__tracepoint_ptr_svc_xprt_close", i1 false, i1 false}
!375 = !{ptr @__SCK__tp_func_svc_xprt_close, !373, !"__SCK__tp_func_svc_xprt_close", i1 false, i1 false}
!376 = !{ptr @__tracepoint_svc_xprt_detach, !377, !"__tracepoint_svc_xprt_detach", i1 false, i1 false}
!377 = !{!"../include/trace/events/sunrpc.h", i32 1841, i32 1}
!378 = !{ptr @__tracepoint_ptr_svc_xprt_detach, !377, !"__tracepoint_ptr_svc_xprt_detach", i1 false, i1 false}
!379 = !{ptr @__SCK__tp_func_svc_xprt_detach, !377, !"__SCK__tp_func_svc_xprt_detach", i1 false, i1 false}
!380 = !{ptr @__tracepoint_svc_xprt_free, !381, !"__tracepoint_svc_xprt_free", i1 false, i1 false}
!381 = !{!"../include/trace/events/sunrpc.h", i32 1842, i32 1}
!382 = !{ptr @__tracepoint_ptr_svc_xprt_free, !381, !"__tracepoint_ptr_svc_xprt_free", i1 false, i1 false}
!383 = !{ptr @__SCK__tp_func_svc_xprt_free, !381, !"__SCK__tp_func_svc_xprt_free", i1 false, i1 false}
!384 = !{ptr @__tracepoint_svc_xprt_accept, !385, !"__tracepoint_svc_xprt_accept", i1 false, i1 false}
!385 = !{!"../include/trace/events/sunrpc.h", i32 1844, i32 1}
!386 = !{ptr @__tracepoint_ptr_svc_xprt_accept, !385, !"__tracepoint_ptr_svc_xprt_accept", i1 false, i1 false}
!387 = !{ptr @__SCK__tp_func_svc_xprt_accept, !385, !"__SCK__tp_func_svc_xprt_accept", i1 false, i1 false}
!388 = !{ptr @__tracepoint_svc_xprt_dequeue, !389, !"__tracepoint_svc_xprt_dequeue", i1 false, i1 false}
!389 = !{!"../include/trace/events/sunrpc.h", i32 1869, i32 1}
!390 = !{ptr @__tracepoint_ptr_svc_xprt_dequeue, !389, !"__tracepoint_ptr_svc_xprt_dequeue", i1 false, i1 false}
!391 = !{ptr @__SCK__tp_func_svc_xprt_dequeue, !389, !"__SCK__tp_func_svc_xprt_dequeue", i1 false, i1 false}
!392 = !{ptr @__tracepoint_svc_wake_up, !393, !"__tracepoint_svc_wake_up", i1 false, i1 false}
!393 = !{!"../include/trace/events/sunrpc.h", i32 1891, i32 1}
!394 = !{ptr @__tracepoint_ptr_svc_wake_up, !393, !"__tracepoint_ptr_svc_wake_up", i1 false, i1 false}
!395 = !{ptr @__SCK__tp_func_svc_wake_up, !393, !"__SCK__tp_func_svc_wake_up", i1 false, i1 false}
!396 = !{ptr @__tracepoint_svc_alloc_arg_err, !397, !"__tracepoint_svc_alloc_arg_err", i1 false, i1 false}
!397 = !{!"../include/trace/events/sunrpc.h", i32 1907, i32 1}
!398 = !{ptr @__tracepoint_ptr_svc_alloc_arg_err, !397, !"__tracepoint_ptr_svc_alloc_arg_err", i1 false, i1 false}
!399 = !{ptr @__SCK__tp_func_svc_alloc_arg_err, !397, !"__SCK__tp_func_svc_alloc_arg_err", i1 false, i1 false}
!400 = !{ptr @__tracepoint_svc_stats_latency, !401, !"__tracepoint_svc_stats_latency", i1 false, i1 false}
!401 = !{!"../include/trace/events/sunrpc.h", i32 1925, i32 1}
!402 = !{ptr @__tracepoint_ptr_svc_stats_latency, !401, !"__tracepoint_ptr_svc_stats_latency", i1 false, i1 false}
!403 = !{ptr @__SCK__tp_func_svc_stats_latency, !401, !"__SCK__tp_func_svc_stats_latency", i1 false, i1 false}
!404 = !{ptr @__tracepoint_svc_defer_drop, !405, !"__tracepoint_svc_defer_drop", i1 false, i1 false}
!405 = !{!"../include/trace/events/sunrpc.h", i32 1981, i32 1}
!406 = !{ptr @__tracepoint_ptr_svc_defer_drop, !405, !"__tracepoint_ptr_svc_defer_drop", i1 false, i1 false}
!407 = !{ptr @__SCK__tp_func_svc_defer_drop, !405, !"__SCK__tp_func_svc_defer_drop", i1 false, i1 false}
!408 = !{ptr @__tracepoint_svc_defer_queue, !409, !"__tracepoint_svc_defer_queue", i1 false, i1 false}
!409 = !{!"../include/trace/events/sunrpc.h", i32 1982, i32 1}
!410 = !{ptr @__tracepoint_ptr_svc_defer_queue, !409, !"__tracepoint_ptr_svc_defer_queue", i1 false, i1 false}
!411 = !{ptr @__SCK__tp_func_svc_defer_queue, !409, !"__SCK__tp_func_svc_defer_queue", i1 false, i1 false}
!412 = !{ptr @__tracepoint_svc_defer_recv, !413, !"__tracepoint_svc_defer_recv", i1 false, i1 false}
!413 = !{!"../include/trace/events/sunrpc.h", i32 1983, i32 1}
!414 = !{ptr @__tracepoint_ptr_svc_defer_recv, !413, !"__tracepoint_ptr_svc_defer_recv", i1 false, i1 false}
!415 = !{ptr @__SCK__tp_func_svc_defer_recv, !413, !"__SCK__tp_func_svc_defer_recv", i1 false, i1 false}
!416 = !{ptr @__tracepoint_svcsock_new_socket, !417, !"__tracepoint_svcsock_new_socket", i1 false, i1 false}
!417 = !{!"../include/trace/events/sunrpc.h", i32 1985, i32 1}
!418 = !{ptr @__tracepoint_ptr_svcsock_new_socket, !417, !"__tracepoint_ptr_svcsock_new_socket", i1 false, i1 false}
!419 = !{ptr @__SCK__tp_func_svcsock_new_socket, !417, !"__SCK__tp_func_svcsock_new_socket", i1 false, i1 false}
!420 = !{ptr @__tracepoint_svcsock_marker, !421, !"__tracepoint_svcsock_marker", i1 false, i1 false}
!421 = !{!"../include/trace/events/sunrpc.h", i32 2011, i32 1}
!422 = !{ptr @__tracepoint_ptr_svcsock_marker, !421, !"__tracepoint_ptr_svcsock_marker", i1 false, i1 false}
!423 = !{ptr @__SCK__tp_func_svcsock_marker, !421, !"__SCK__tp_func_svcsock_marker", i1 false, i1 false}
!424 = !{ptr @__tracepoint_svcsock_udp_send, !425, !"__tracepoint_svcsock_udp_send", i1 false, i1 false}
!425 = !{!"../include/trace/events/sunrpc.h", i32 2068, i32 1}
!426 = !{ptr @__tracepoint_ptr_svcsock_udp_send, !425, !"__tracepoint_ptr_svcsock_udp_send", i1 false, i1 false}
!427 = !{ptr @__SCK__tp_func_svcsock_udp_send, !425, !"__SCK__tp_func_svcsock_udp_send", i1 false, i1 false}
!428 = !{ptr @__tracepoint_svcsock_udp_recv, !429, !"__tracepoint_svcsock_udp_recv", i1 false, i1 false}
!429 = !{!"../include/trace/events/sunrpc.h", i32 2069, i32 1}
!430 = !{ptr @__tracepoint_ptr_svcsock_udp_recv, !429, !"__tracepoint_ptr_svcsock_udp_recv", i1 false, i1 false}
!431 = !{ptr @__SCK__tp_func_svcsock_udp_recv, !429, !"__SCK__tp_func_svcsock_udp_recv", i1 false, i1 false}
!432 = !{ptr @__tracepoint_svcsock_udp_recv_err, !433, !"__tracepoint_svcsock_udp_recv_err", i1 false, i1 false}
!433 = !{!"../include/trace/events/sunrpc.h", i32 2070, i32 1}
!434 = !{ptr @__tracepoint_ptr_svcsock_udp_recv_err, !433, !"__tracepoint_ptr_svcsock_udp_recv_err", i1 false, i1 false}
!435 = !{ptr @__SCK__tp_func_svcsock_udp_recv_err, !433, !"__SCK__tp_func_svcsock_udp_recv_err", i1 false, i1 false}
!436 = !{ptr @__tracepoint_svcsock_tcp_send, !437, !"__tracepoint_svcsock_tcp_send", i1 false, i1 false}
!437 = !{!"../include/trace/events/sunrpc.h", i32 2071, i32 1}
!438 = !{ptr @__tracepoint_ptr_svcsock_tcp_send, !437, !"__tracepoint_ptr_svcsock_tcp_send", i1 false, i1 false}
!439 = !{ptr @__SCK__tp_func_svcsock_tcp_send, !437, !"__SCK__tp_func_svcsock_tcp_send", i1 false, i1 false}
!440 = !{ptr @__tracepoint_svcsock_tcp_recv, !441, !"__tracepoint_svcsock_tcp_recv", i1 false, i1 false}
!441 = !{!"../include/trace/events/sunrpc.h", i32 2072, i32 1}
!442 = !{ptr @__tracepoint_ptr_svcsock_tcp_recv, !441, !"__tracepoint_ptr_svcsock_tcp_recv", i1 false, i1 false}
!443 = !{ptr @__SCK__tp_func_svcsock_tcp_recv, !441, !"__SCK__tp_func_svcsock_tcp_recv", i1 false, i1 false}
!444 = !{ptr @__tracepoint_svcsock_tcp_recv_eagain, !445, !"__tracepoint_svcsock_tcp_recv_eagain", i1 false, i1 false}
!445 = !{!"../include/trace/events/sunrpc.h", i32 2073, i32 1}
!446 = !{ptr @__tracepoint_ptr_svcsock_tcp_recv_eagain, !445, !"__tracepoint_ptr_svcsock_tcp_recv_eagain", i1 false, i1 false}
!447 = !{ptr @__SCK__tp_func_svcsock_tcp_recv_eagain, !445, !"__SCK__tp_func_svcsock_tcp_recv_eagain", i1 false, i1 false}
!448 = !{ptr @__tracepoint_svcsock_tcp_recv_err, !449, !"__tracepoint_svcsock_tcp_recv_err", i1 false, i1 false}
!449 = !{!"../include/trace/events/sunrpc.h", i32 2074, i32 1}
!450 = !{ptr @__tracepoint_ptr_svcsock_tcp_recv_err, !449, !"__tracepoint_ptr_svcsock_tcp_recv_err", i1 false, i1 false}
!451 = !{ptr @__SCK__tp_func_svcsock_tcp_recv_err, !449, !"__SCK__tp_func_svcsock_tcp_recv_err", i1 false, i1 false}
!452 = !{ptr @__tracepoint_svcsock_data_ready, !453, !"__tracepoint_svcsock_data_ready", i1 false, i1 false}
!453 = !{!"../include/trace/events/sunrpc.h", i32 2075, i32 1}
!454 = !{ptr @__tracepoint_ptr_svcsock_data_ready, !453, !"__tracepoint_ptr_svcsock_data_ready", i1 false, i1 false}
!455 = !{ptr @__SCK__tp_func_svcsock_data_ready, !453, !"__SCK__tp_func_svcsock_data_ready", i1 false, i1 false}
!456 = !{ptr @__tracepoint_svcsock_write_space, !457, !"__tracepoint_svcsock_write_space", i1 false, i1 false}
!457 = !{!"../include/trace/events/sunrpc.h", i32 2076, i32 1}
!458 = !{ptr @__tracepoint_ptr_svcsock_write_space, !457, !"__tracepoint_ptr_svcsock_write_space", i1 false, i1 false}
!459 = !{ptr @__SCK__tp_func_svcsock_write_space, !457, !"__SCK__tp_func_svcsock_write_space", i1 false, i1 false}
!460 = !{ptr @__tracepoint_svcsock_tcp_recv_short, !461, !"__tracepoint_svcsock_tcp_recv_short", i1 false, i1 false}
!461 = !{!"../include/trace/events/sunrpc.h", i32 2078, i32 1}
!462 = !{ptr @__tracepoint_ptr_svcsock_tcp_recv_short, !461, !"__tracepoint_ptr_svcsock_tcp_recv_short", i1 false, i1 false}
!463 = !{ptr @__SCK__tp_func_svcsock_tcp_recv_short, !461, !"__SCK__tp_func_svcsock_tcp_recv_short", i1 false, i1 false}
!464 = !{ptr @__tracepoint_svcsock_tcp_state, !465, !"__tracepoint_svcsock_tcp_state", i1 false, i1 false}
!465 = !{!"../include/trace/events/sunrpc.h", i32 2107, i32 1}
!466 = !{ptr @__tracepoint_ptr_svcsock_tcp_state, !465, !"__tracepoint_ptr_svcsock_tcp_state", i1 false, i1 false}
!467 = !{ptr @__SCK__tp_func_svcsock_tcp_state, !465, !"__SCK__tp_func_svcsock_tcp_state", i1 false, i1 false}
!468 = !{ptr @__tracepoint_svcsock_accept_err, !469, !"__tracepoint_svcsock_accept_err", i1 false, i1 false}
!469 = !{!"../include/trace/events/sunrpc.h", i32 2171, i32 1}
!470 = !{ptr @__tracepoint_ptr_svcsock_accept_err, !469, !"__tracepoint_ptr_svcsock_accept_err", i1 false, i1 false}
!471 = !{ptr @__SCK__tp_func_svcsock_accept_err, !469, !"__SCK__tp_func_svcsock_accept_err", i1 false, i1 false}
!472 = !{ptr @__tracepoint_svcsock_getpeername_err, !473, !"__tracepoint_svcsock_getpeername_err", i1 false, i1 false}
!473 = !{!"../include/trace/events/sunrpc.h", i32 2172, i32 1}
!474 = !{ptr @__tracepoint_ptr_svcsock_getpeername_err, !473, !"__tracepoint_ptr_svcsock_getpeername_err", i1 false, i1 false}
!475 = !{ptr @__SCK__tp_func_svcsock_getpeername_err, !473, !"__SCK__tp_func_svcsock_getpeername_err", i1 false, i1 false}
!476 = !{ptr @__tracepoint_cache_entry_expired, !477, !"__tracepoint_cache_entry_expired", i1 false, i1 false}
!477 = !{!"../include/trace/events/sunrpc.h", i32 2201, i32 1}
!478 = !{ptr @__tracepoint_ptr_cache_entry_expired, !477, !"__tracepoint_ptr_cache_entry_expired", i1 false, i1 false}
!479 = !{ptr @__SCK__tp_func_cache_entry_expired, !477, !"__SCK__tp_func_cache_entry_expired", i1 false, i1 false}
!480 = !{ptr @__tracepoint_cache_entry_upcall, !481, !"__tracepoint_cache_entry_upcall", i1 false, i1 false}
!481 = !{!"../include/trace/events/sunrpc.h", i32 2202, i32 1}
!482 = !{ptr @__tracepoint_ptr_cache_entry_upcall, !481, !"__tracepoint_ptr_cache_entry_upcall", i1 false, i1 false}
!483 = !{ptr @__SCK__tp_func_cache_entry_upcall, !481, !"__SCK__tp_func_cache_entry_upcall", i1 false, i1 false}
!484 = !{ptr @__tracepoint_cache_entry_update, !485, !"__tracepoint_cache_entry_update", i1 false, i1 false}
!485 = !{!"../include/trace/events/sunrpc.h", i32 2203, i32 1}
!486 = !{ptr @__tracepoint_ptr_cache_entry_update, !485, !"__tracepoint_ptr_cache_entry_update", i1 false, i1 false}
!487 = !{ptr @__SCK__tp_func_cache_entry_update, !485, !"__SCK__tp_func_cache_entry_update", i1 false, i1 false}
!488 = !{ptr @__tracepoint_cache_entry_make_negative, !489, !"__tracepoint_cache_entry_make_negative", i1 false, i1 false}
!489 = !{!"../include/trace/events/sunrpc.h", i32 2204, i32 1}
!490 = !{ptr @__tracepoint_ptr_cache_entry_make_negative, !489, !"__tracepoint_ptr_cache_entry_make_negative", i1 false, i1 false}
!491 = !{ptr @__SCK__tp_func_cache_entry_make_negative, !489, !"__SCK__tp_func_cache_entry_make_negative", i1 false, i1 false}
!492 = !{ptr @__tracepoint_cache_entry_no_listener, !493, !"__tracepoint_cache_entry_no_listener", i1 false, i1 false}
!493 = !{!"../include/trace/events/sunrpc.h", i32 2205, i32 1}
!494 = !{ptr @__tracepoint_ptr_cache_entry_no_listener, !493, !"__tracepoint_ptr_cache_entry_no_listener", i1 false, i1 false}
!495 = !{ptr @__SCK__tp_func_cache_entry_no_listener, !493, !"__SCK__tp_func_cache_entry_no_listener", i1 false, i1 false}
!496 = !{ptr @__tracepoint_svc_register, !497, !"__tracepoint_svc_register", i1 false, i1 false}
!497 = !{!"../include/trace/events/sunrpc.h", i32 2258, i32 1}
!498 = !{ptr @__tracepoint_ptr_svc_register, !497, !"__tracepoint_ptr_svc_register", i1 false, i1 false}
!499 = !{ptr @__SCK__tp_func_svc_register, !497, !"__SCK__tp_func_svc_register", i1 false, i1 false}
!500 = !{ptr @__tracepoint_svc_noregister, !501, !"__tracepoint_svc_noregister", i1 false, i1 false}
!501 = !{!"../include/trace/events/sunrpc.h", i32 2259, i32 1}
!502 = !{ptr @__tracepoint_ptr_svc_noregister, !501, !"__tracepoint_ptr_svc_noregister", i1 false, i1 false}
!503 = !{ptr @__SCK__tp_func_svc_noregister, !501, !"__SCK__tp_func_svc_noregister", i1 false, i1 false}
!504 = !{ptr @__tracepoint_svc_unregister, !505, !"__tracepoint_svc_unregister", i1 false, i1 false}
!505 = !{!"../include/trace/events/sunrpc.h", i32 2261, i32 1}
!506 = !{ptr @__tracepoint_ptr_svc_unregister, !505, !"__tracepoint_ptr_svc_unregister", i1 false, i1 false}
!507 = !{ptr @__SCK__tp_func_svc_unregister, !505, !"__SCK__tp_func_svc_unregister", i1 false, i1 false}
!508 = !{ptr @.str, !509, !"<string literal>", i1 false, i1 false}
!509 = !{!"../include/trace/events/sunrpc.h", i32 19, i32 1}
!510 = !{ptr @__TRACE_SYSTEM_SOCK_STREAM, !509, !"__TRACE_SYSTEM_SOCK_STREAM", i1 false, i1 false}
!511 = !{ptr @TRACE_SYSTEM_SOCK_STREAM, !509, !"TRACE_SYSTEM_SOCK_STREAM", i1 false, i1 false}
!512 = !{ptr @.str.1, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../include/trace/events/sunrpc.h", i32 20, i32 1}
!514 = !{ptr @__TRACE_SYSTEM_SOCK_DGRAM, !513, !"__TRACE_SYSTEM_SOCK_DGRAM", i1 false, i1 false}
!515 = !{ptr @TRACE_SYSTEM_SOCK_DGRAM, !513, !"TRACE_SYSTEM_SOCK_DGRAM", i1 false, i1 false}
!516 = !{ptr @.str.2, !517, !"<string literal>", i1 false, i1 false}
!517 = !{!"../include/trace/events/sunrpc.h", i32 21, i32 1}
!518 = !{ptr @__TRACE_SYSTEM_SOCK_RAW, !517, !"__TRACE_SYSTEM_SOCK_RAW", i1 false, i1 false}
!519 = !{ptr @TRACE_SYSTEM_SOCK_RAW, !517, !"TRACE_SYSTEM_SOCK_RAW", i1 false, i1 false}
!520 = !{ptr @.str.3, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../include/trace/events/sunrpc.h", i32 22, i32 1}
!522 = !{ptr @__TRACE_SYSTEM_SOCK_RDM, !521, !"__TRACE_SYSTEM_SOCK_RDM", i1 false, i1 false}
!523 = !{ptr @TRACE_SYSTEM_SOCK_RDM, !521, !"TRACE_SYSTEM_SOCK_RDM", i1 false, i1 false}
!524 = !{ptr @.str.4, !525, !"<string literal>", i1 false, i1 false}
!525 = !{!"../include/trace/events/sunrpc.h", i32 23, i32 1}
!526 = !{ptr @__TRACE_SYSTEM_SOCK_SEQPACKET, !525, !"__TRACE_SYSTEM_SOCK_SEQPACKET", i1 false, i1 false}
!527 = !{ptr @TRACE_SYSTEM_SOCK_SEQPACKET, !525, !"TRACE_SYSTEM_SOCK_SEQPACKET", i1 false, i1 false}
!528 = !{ptr @.str.5, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../include/trace/events/sunrpc.h", i32 24, i32 1}
!530 = !{ptr @__TRACE_SYSTEM_SOCK_DCCP, !529, !"__TRACE_SYSTEM_SOCK_DCCP", i1 false, i1 false}
!531 = !{ptr @TRACE_SYSTEM_SOCK_DCCP, !529, !"TRACE_SYSTEM_SOCK_DCCP", i1 false, i1 false}
!532 = !{ptr @.str.6, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../include/trace/events/sunrpc.h", i32 25, i32 1}
!534 = !{ptr @__TRACE_SYSTEM_SOCK_PACKET, !533, !"__TRACE_SYSTEM_SOCK_PACKET", i1 false, i1 false}
!535 = !{ptr @TRACE_SYSTEM_SOCK_PACKET, !533, !"TRACE_SYSTEM_SOCK_PACKET", i1 false, i1 false}
!536 = !{ptr @.str.7, !537, !"<string literal>", i1 false, i1 false}
!537 = !{!"../include/trace/events/sunrpc.h", i32 38, i32 1}
!538 = !{ptr @__TRACE_SYSTEM_AF_UNSPEC, !537, !"__TRACE_SYSTEM_AF_UNSPEC", i1 false, i1 false}
!539 = !{ptr @TRACE_SYSTEM_AF_UNSPEC, !537, !"TRACE_SYSTEM_AF_UNSPEC", i1 false, i1 false}
!540 = !{ptr @.str.8, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../include/trace/events/sunrpc.h", i32 39, i32 1}
!542 = !{ptr @__TRACE_SYSTEM_AF_UNIX, !541, !"__TRACE_SYSTEM_AF_UNIX", i1 false, i1 false}
!543 = !{ptr @TRACE_SYSTEM_AF_UNIX, !541, !"TRACE_SYSTEM_AF_UNIX", i1 false, i1 false}
!544 = !{ptr @.str.9, !545, !"<string literal>", i1 false, i1 false}
!545 = !{!"../include/trace/events/sunrpc.h", i32 40, i32 1}
!546 = !{ptr @__TRACE_SYSTEM_AF_LOCAL, !545, !"__TRACE_SYSTEM_AF_LOCAL", i1 false, i1 false}
!547 = !{ptr @TRACE_SYSTEM_AF_LOCAL, !545, !"TRACE_SYSTEM_AF_LOCAL", i1 false, i1 false}
!548 = !{ptr @.str.10, !549, !"<string literal>", i1 false, i1 false}
!549 = !{!"../include/trace/events/sunrpc.h", i32 41, i32 1}
!550 = !{ptr @__TRACE_SYSTEM_AF_INET, !549, !"__TRACE_SYSTEM_AF_INET", i1 false, i1 false}
!551 = !{ptr @TRACE_SYSTEM_AF_INET, !549, !"TRACE_SYSTEM_AF_INET", i1 false, i1 false}
!552 = !{ptr @.str.11, !553, !"<string literal>", i1 false, i1 false}
!553 = !{!"../include/trace/events/sunrpc.h", i32 42, i32 1}
!554 = !{ptr @__TRACE_SYSTEM_AF_INET6, !553, !"__TRACE_SYSTEM_AF_INET6", i1 false, i1 false}
!555 = !{ptr @TRACE_SYSTEM_AF_INET6, !553, !"TRACE_SYSTEM_AF_INET6", i1 false, i1 false}
!556 = !{ptr @.str.12, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../include/trace/events/sunrpc.h", i32 222, i32 1}
!558 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_OK, !557, !"__TRACE_SYSTEM_RPC_AUTH_OK", i1 false, i1 false}
!559 = !{ptr @TRACE_SYSTEM_RPC_AUTH_OK, !557, !"TRACE_SYSTEM_RPC_AUTH_OK", i1 false, i1 false}
!560 = !{ptr @.str.13, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../include/trace/events/sunrpc.h", i32 223, i32 1}
!562 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_BADCRED, !561, !"__TRACE_SYSTEM_RPC_AUTH_BADCRED", i1 false, i1 false}
!563 = !{ptr @TRACE_SYSTEM_RPC_AUTH_BADCRED, !561, !"TRACE_SYSTEM_RPC_AUTH_BADCRED", i1 false, i1 false}
!564 = !{ptr @.str.14, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../include/trace/events/sunrpc.h", i32 224, i32 1}
!566 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, !565, !"__TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED", i1 false, i1 false}
!567 = !{ptr @TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED, !565, !"TRACE_SYSTEM_RPC_AUTH_REJECTEDCRED", i1 false, i1 false}
!568 = !{ptr @.str.15, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../include/trace/events/sunrpc.h", i32 225, i32 1}
!570 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_BADVERF, !569, !"__TRACE_SYSTEM_RPC_AUTH_BADVERF", i1 false, i1 false}
!571 = !{ptr @TRACE_SYSTEM_RPC_AUTH_BADVERF, !569, !"TRACE_SYSTEM_RPC_AUTH_BADVERF", i1 false, i1 false}
!572 = !{ptr @.str.16, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../include/trace/events/sunrpc.h", i32 226, i32 1}
!574 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, !573, !"__TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF", i1 false, i1 false}
!575 = !{ptr @TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF, !573, !"TRACE_SYSTEM_RPC_AUTH_REJECTEDVERF", i1 false, i1 false}
!576 = !{ptr @.str.17, !577, !"<string literal>", i1 false, i1 false}
!577 = !{!"../include/trace/events/sunrpc.h", i32 227, i32 1}
!578 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_TOOWEAK, !577, !"__TRACE_SYSTEM_RPC_AUTH_TOOWEAK", i1 false, i1 false}
!579 = !{ptr @TRACE_SYSTEM_RPC_AUTH_TOOWEAK, !577, !"TRACE_SYSTEM_RPC_AUTH_TOOWEAK", i1 false, i1 false}
!580 = !{ptr @.str.18, !581, !"<string literal>", i1 false, i1 false}
!581 = !{!"../include/trace/events/sunrpc.h", i32 228, i32 1}
!582 = !{ptr @__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, !581, !"__TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM", i1 false, i1 false}
!583 = !{ptr @TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM, !581, !"TRACE_SYSTEM_RPCSEC_GSS_CREDPROBLEM", i1 false, i1 false}
!584 = !{ptr @.str.19, !585, !"<string literal>", i1 false, i1 false}
!585 = !{!"../include/trace/events/sunrpc.h", i32 229, i32 1}
!586 = !{ptr @__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, !585, !"__TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM", i1 false, i1 false}
!587 = !{ptr @TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM, !585, !"TRACE_SYSTEM_RPCSEC_GSS_CTXPROBLEM", i1 false, i1 false}
!588 = !{ptr @.str.20, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../include/trace/events/sunrpc.h", i32 777, i32 1}
!590 = !{ptr @__TRACE_SYSTEM_SS_FREE, !589, !"__TRACE_SYSTEM_SS_FREE", i1 false, i1 false}
!591 = !{ptr @TRACE_SYSTEM_SS_FREE, !589, !"TRACE_SYSTEM_SS_FREE", i1 false, i1 false}
!592 = !{ptr @.str.21, !589, !"<string literal>", i1 false, i1 false}
!593 = !{ptr @__TRACE_SYSTEM_SS_UNCONNECTED, !589, !"__TRACE_SYSTEM_SS_UNCONNECTED", i1 false, i1 false}
!594 = !{ptr @TRACE_SYSTEM_SS_UNCONNECTED, !589, !"TRACE_SYSTEM_SS_UNCONNECTED", i1 false, i1 false}
!595 = !{ptr @.str.22, !589, !"<string literal>", i1 false, i1 false}
!596 = !{ptr @__TRACE_SYSTEM_SS_CONNECTING, !589, !"__TRACE_SYSTEM_SS_CONNECTING", i1 false, i1 false}
!597 = !{ptr @TRACE_SYSTEM_SS_CONNECTING, !589, !"TRACE_SYSTEM_SS_CONNECTING", i1 false, i1 false}
!598 = !{ptr @.str.23, !589, !"<string literal>", i1 false, i1 false}
!599 = !{ptr @__TRACE_SYSTEM_SS_CONNECTED, !589, !"__TRACE_SYSTEM_SS_CONNECTED", i1 false, i1 false}
!600 = !{ptr @TRACE_SYSTEM_SS_CONNECTED, !589, !"TRACE_SYSTEM_SS_CONNECTED", i1 false, i1 false}
!601 = !{ptr @.str.24, !589, !"<string literal>", i1 false, i1 false}
!602 = !{ptr @__TRACE_SYSTEM_SS_DISCONNECTING, !589, !"__TRACE_SYSTEM_SS_DISCONNECTING", i1 false, i1 false}
!603 = !{ptr @TRACE_SYSTEM_SS_DISCONNECTING, !589, !"TRACE_SYSTEM_SS_DISCONNECTING", i1 false, i1 false}
!604 = !{ptr @.str.25, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../include/trace/events/sunrpc.h", i32 795, i32 1}
!606 = !{ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, !605, !"__TRACE_SYSTEM_TCP_ESTABLISHED", i1 false, i1 false}
!607 = !{ptr @TRACE_SYSTEM_TCP_ESTABLISHED, !605, !"TRACE_SYSTEM_TCP_ESTABLISHED", i1 false, i1 false}
!608 = !{ptr @.str.26, !605, !"<string literal>", i1 false, i1 false}
!609 = !{ptr @__TRACE_SYSTEM_TCP_SYN_SENT, !605, !"__TRACE_SYSTEM_TCP_SYN_SENT", i1 false, i1 false}
!610 = !{ptr @TRACE_SYSTEM_TCP_SYN_SENT, !605, !"TRACE_SYSTEM_TCP_SYN_SENT", i1 false, i1 false}
!611 = !{ptr @.str.27, !605, !"<string literal>", i1 false, i1 false}
!612 = !{ptr @__TRACE_SYSTEM_TCP_SYN_RECV, !605, !"__TRACE_SYSTEM_TCP_SYN_RECV", i1 false, i1 false}
!613 = !{ptr @TRACE_SYSTEM_TCP_SYN_RECV, !605, !"TRACE_SYSTEM_TCP_SYN_RECV", i1 false, i1 false}
!614 = !{ptr @.str.28, !605, !"<string literal>", i1 false, i1 false}
!615 = !{ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, !605, !"__TRACE_SYSTEM_TCP_FIN_WAIT1", i1 false, i1 false}
!616 = !{ptr @TRACE_SYSTEM_TCP_FIN_WAIT1, !605, !"TRACE_SYSTEM_TCP_FIN_WAIT1", i1 false, i1 false}
!617 = !{ptr @.str.29, !605, !"<string literal>", i1 false, i1 false}
!618 = !{ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, !605, !"__TRACE_SYSTEM_TCP_FIN_WAIT2", i1 false, i1 false}
!619 = !{ptr @TRACE_SYSTEM_TCP_FIN_WAIT2, !605, !"TRACE_SYSTEM_TCP_FIN_WAIT2", i1 false, i1 false}
!620 = !{ptr @.str.30, !605, !"<string literal>", i1 false, i1 false}
!621 = !{ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, !605, !"__TRACE_SYSTEM_TCP_TIME_WAIT", i1 false, i1 false}
!622 = !{ptr @TRACE_SYSTEM_TCP_TIME_WAIT, !605, !"TRACE_SYSTEM_TCP_TIME_WAIT", i1 false, i1 false}
!623 = !{ptr @.str.31, !605, !"<string literal>", i1 false, i1 false}
!624 = !{ptr @__TRACE_SYSTEM_TCP_CLOSE, !605, !"__TRACE_SYSTEM_TCP_CLOSE", i1 false, i1 false}
!625 = !{ptr @TRACE_SYSTEM_TCP_CLOSE, !605, !"TRACE_SYSTEM_TCP_CLOSE", i1 false, i1 false}
!626 = !{ptr @.str.32, !605, !"<string literal>", i1 false, i1 false}
!627 = !{ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, !605, !"__TRACE_SYSTEM_TCP_CLOSE_WAIT", i1 false, i1 false}
!628 = !{ptr @TRACE_SYSTEM_TCP_CLOSE_WAIT, !605, !"TRACE_SYSTEM_TCP_CLOSE_WAIT", i1 false, i1 false}
!629 = !{ptr @.str.33, !605, !"<string literal>", i1 false, i1 false}
!630 = !{ptr @__TRACE_SYSTEM_TCP_LAST_ACK, !605, !"__TRACE_SYSTEM_TCP_LAST_ACK", i1 false, i1 false}
!631 = !{ptr @TRACE_SYSTEM_TCP_LAST_ACK, !605, !"TRACE_SYSTEM_TCP_LAST_ACK", i1 false, i1 false}
!632 = !{ptr @.str.34, !605, !"<string literal>", i1 false, i1 false}
!633 = !{ptr @__TRACE_SYSTEM_TCP_LISTEN, !605, !"__TRACE_SYSTEM_TCP_LISTEN", i1 false, i1 false}
!634 = !{ptr @TRACE_SYSTEM_TCP_LISTEN, !605, !"TRACE_SYSTEM_TCP_LISTEN", i1 false, i1 false}
!635 = !{ptr @.str.35, !605, !"<string literal>", i1 false, i1 false}
!636 = !{ptr @__TRACE_SYSTEM_TCP_CLOSING, !605, !"__TRACE_SYSTEM_TCP_CLOSING", i1 false, i1 false}
!637 = !{ptr @TRACE_SYSTEM_TCP_CLOSING, !605, !"TRACE_SYSTEM_TCP_CLOSING", i1 false, i1 false}
!638 = !{ptr @.str.36, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../include/trace/events/sunrpc.h", i32 1594, i32 1}
!640 = !{ptr @__TRACE_SYSTEM_RQ_SECURE, !639, !"__TRACE_SYSTEM_RQ_SECURE", i1 false, i1 false}
!641 = !{ptr @TRACE_SYSTEM_RQ_SECURE, !639, !"TRACE_SYSTEM_RQ_SECURE", i1 false, i1 false}
!642 = !{ptr @.str.37, !639, !"<string literal>", i1 false, i1 false}
!643 = !{ptr @__TRACE_SYSTEM_RQ_LOCAL, !639, !"__TRACE_SYSTEM_RQ_LOCAL", i1 false, i1 false}
!644 = !{ptr @TRACE_SYSTEM_RQ_LOCAL, !639, !"TRACE_SYSTEM_RQ_LOCAL", i1 false, i1 false}
!645 = !{ptr @.str.38, !639, !"<string literal>", i1 false, i1 false}
!646 = !{ptr @__TRACE_SYSTEM_RQ_USEDEFERRAL, !639, !"__TRACE_SYSTEM_RQ_USEDEFERRAL", i1 false, i1 false}
!647 = !{ptr @TRACE_SYSTEM_RQ_USEDEFERRAL, !639, !"TRACE_SYSTEM_RQ_USEDEFERRAL", i1 false, i1 false}
!648 = !{ptr @.str.39, !639, !"<string literal>", i1 false, i1 false}
!649 = !{ptr @__TRACE_SYSTEM_RQ_DROPME, !639, !"__TRACE_SYSTEM_RQ_DROPME", i1 false, i1 false}
!650 = !{ptr @TRACE_SYSTEM_RQ_DROPME, !639, !"TRACE_SYSTEM_RQ_DROPME", i1 false, i1 false}
!651 = !{ptr @.str.40, !639, !"<string literal>", i1 false, i1 false}
!652 = !{ptr @__TRACE_SYSTEM_RQ_SPLICE_OK, !639, !"__TRACE_SYSTEM_RQ_SPLICE_OK", i1 false, i1 false}
!653 = !{ptr @TRACE_SYSTEM_RQ_SPLICE_OK, !639, !"TRACE_SYSTEM_RQ_SPLICE_OK", i1 false, i1 false}
!654 = !{ptr @.str.41, !639, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @__TRACE_SYSTEM_RQ_VICTIM, !639, !"__TRACE_SYSTEM_RQ_VICTIM", i1 false, i1 false}
!656 = !{ptr @TRACE_SYSTEM_RQ_VICTIM, !639, !"TRACE_SYSTEM_RQ_VICTIM", i1 false, i1 false}
!657 = !{ptr @.str.42, !639, !"<string literal>", i1 false, i1 false}
!658 = !{ptr @__TRACE_SYSTEM_RQ_BUSY, !639, !"__TRACE_SYSTEM_RQ_BUSY", i1 false, i1 false}
!659 = !{ptr @TRACE_SYSTEM_RQ_BUSY, !639, !"TRACE_SYSTEM_RQ_BUSY", i1 false, i1 false}
!660 = !{ptr @.str.43, !639, !"<string literal>", i1 false, i1 false}
!661 = !{ptr @__TRACE_SYSTEM_RQ_DATA, !639, !"__TRACE_SYSTEM_RQ_DATA", i1 false, i1 false}
!662 = !{ptr @TRACE_SYSTEM_RQ_DATA, !639, !"TRACE_SYSTEM_RQ_DATA", i1 false, i1 false}
!663 = !{ptr @.str.44, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../include/trace/events/sunrpc.h", i32 1604, i32 1}
!665 = !{ptr @__TRACE_SYSTEM_SVC_GARBAGE, !664, !"__TRACE_SYSTEM_SVC_GARBAGE", i1 false, i1 false}
!666 = !{ptr @TRACE_SYSTEM_SVC_GARBAGE, !664, !"TRACE_SYSTEM_SVC_GARBAGE", i1 false, i1 false}
!667 = !{ptr @.str.45, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../include/trace/events/sunrpc.h", i32 1605, i32 1}
!669 = !{ptr @__TRACE_SYSTEM_SVC_SYSERR, !668, !"__TRACE_SYSTEM_SVC_SYSERR", i1 false, i1 false}
!670 = !{ptr @TRACE_SYSTEM_SVC_SYSERR, !668, !"TRACE_SYSTEM_SVC_SYSERR", i1 false, i1 false}
!671 = !{ptr @.str.46, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../include/trace/events/sunrpc.h", i32 1606, i32 1}
!673 = !{ptr @__TRACE_SYSTEM_SVC_VALID, !672, !"__TRACE_SYSTEM_SVC_VALID", i1 false, i1 false}
!674 = !{ptr @TRACE_SYSTEM_SVC_VALID, !672, !"TRACE_SYSTEM_SVC_VALID", i1 false, i1 false}
!675 = !{ptr @.str.47, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../include/trace/events/sunrpc.h", i32 1607, i32 1}
!677 = !{ptr @__TRACE_SYSTEM_SVC_NEGATIVE, !676, !"__TRACE_SYSTEM_SVC_NEGATIVE", i1 false, i1 false}
!678 = !{ptr @TRACE_SYSTEM_SVC_NEGATIVE, !676, !"TRACE_SYSTEM_SVC_NEGATIVE", i1 false, i1 false}
!679 = !{ptr @.str.48, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../include/trace/events/sunrpc.h", i32 1608, i32 1}
!681 = !{ptr @__TRACE_SYSTEM_SVC_OK, !680, !"__TRACE_SYSTEM_SVC_OK", i1 false, i1 false}
!682 = !{ptr @TRACE_SYSTEM_SVC_OK, !680, !"TRACE_SYSTEM_SVC_OK", i1 false, i1 false}
!683 = !{ptr @.str.49, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../include/trace/events/sunrpc.h", i32 1609, i32 1}
!685 = !{ptr @__TRACE_SYSTEM_SVC_DROP, !684, !"__TRACE_SYSTEM_SVC_DROP", i1 false, i1 false}
!686 = !{ptr @TRACE_SYSTEM_SVC_DROP, !684, !"TRACE_SYSTEM_SVC_DROP", i1 false, i1 false}
!687 = !{ptr @.str.50, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../include/trace/events/sunrpc.h", i32 1610, i32 1}
!689 = !{ptr @__TRACE_SYSTEM_SVC_CLOSE, !688, !"__TRACE_SYSTEM_SVC_CLOSE", i1 false, i1 false}
!690 = !{ptr @TRACE_SYSTEM_SVC_CLOSE, !688, !"TRACE_SYSTEM_SVC_CLOSE", i1 false, i1 false}
!691 = !{ptr @.str.51, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../include/trace/events/sunrpc.h", i32 1611, i32 1}
!693 = !{ptr @__TRACE_SYSTEM_SVC_DENIED, !692, !"__TRACE_SYSTEM_SVC_DENIED", i1 false, i1 false}
!694 = !{ptr @TRACE_SYSTEM_SVC_DENIED, !692, !"TRACE_SYSTEM_SVC_DENIED", i1 false, i1 false}
!695 = !{ptr @.str.52, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../include/trace/events/sunrpc.h", i32 1612, i32 1}
!697 = !{ptr @__TRACE_SYSTEM_SVC_PENDING, !696, !"__TRACE_SYSTEM_SVC_PENDING", i1 false, i1 false}
!698 = !{ptr @TRACE_SYSTEM_SVC_PENDING, !696, !"TRACE_SYSTEM_SVC_PENDING", i1 false, i1 false}
!699 = !{ptr @.str.53, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../include/trace/events/sunrpc.h", i32 1613, i32 1}
!701 = !{ptr @__TRACE_SYSTEM_SVC_COMPLETE, !700, !"__TRACE_SYSTEM_SVC_COMPLETE", i1 false, i1 false}
!702 = !{ptr @TRACE_SYSTEM_SVC_COMPLETE, !700, !"TRACE_SYSTEM_SVC_COMPLETE", i1 false, i1 false}
!703 = !{ptr @event_class_rpc_xdr_buf_class, !704, !"event_class_rpc_xdr_buf_class", i1 false, i1 false}
!704 = !{!"../include/trace/events/sunrpc.h", i32 52, i32 1}
!705 = !{ptr @event_rpc_xdr_sendto, !1, !"event_rpc_xdr_sendto", i1 false, i1 false}
!706 = !{ptr @__event_rpc_xdr_sendto, !1, !"__event_rpc_xdr_sendto", i1 false, i1 false}
!707 = !{ptr @event_rpc_xdr_recvfrom, !5, !"event_rpc_xdr_recvfrom", i1 false, i1 false}
!708 = !{ptr @__event_rpc_xdr_recvfrom, !5, !"__event_rpc_xdr_recvfrom", i1 false, i1 false}
!709 = !{ptr @event_rpc_xdr_reply_pages, !9, !"event_rpc_xdr_reply_pages", i1 false, i1 false}
!710 = !{ptr @__event_rpc_xdr_reply_pages, !9, !"__event_rpc_xdr_reply_pages", i1 false, i1 false}
!711 = !{ptr @event_class_rpc_clnt_class, !712, !"event_class_rpc_clnt_class", i1 false, i1 false}
!712 = !{!"../include/trace/events/sunrpc.h", i32 109, i32 1}
!713 = !{ptr @event_rpc_clnt_free, !13, !"event_rpc_clnt_free", i1 false, i1 false}
!714 = !{ptr @__event_rpc_clnt_free, !13, !"__event_rpc_clnt_free", i1 false, i1 false}
!715 = !{ptr @event_rpc_clnt_killall, !17, !"event_rpc_clnt_killall", i1 false, i1 false}
!716 = !{ptr @__event_rpc_clnt_killall, !17, !"__event_rpc_clnt_killall", i1 false, i1 false}
!717 = !{ptr @event_rpc_clnt_shutdown, !21, !"event_rpc_clnt_shutdown", i1 false, i1 false}
!718 = !{ptr @__event_rpc_clnt_shutdown, !21, !"__event_rpc_clnt_shutdown", i1 false, i1 false}
!719 = !{ptr @event_rpc_clnt_release, !25, !"event_rpc_clnt_release", i1 false, i1 false}
!720 = !{ptr @__event_rpc_clnt_release, !25, !"__event_rpc_clnt_release", i1 false, i1 false}
!721 = !{ptr @event_rpc_clnt_replace_xprt, !29, !"event_rpc_clnt_replace_xprt", i1 false, i1 false}
!722 = !{ptr @__event_rpc_clnt_replace_xprt, !29, !"__event_rpc_clnt_replace_xprt", i1 false, i1 false}
!723 = !{ptr @event_rpc_clnt_replace_xprt_err, !33, !"event_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!724 = !{ptr @__event_rpc_clnt_replace_xprt_err, !33, !"__event_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!725 = !{ptr @event_class_rpc_clnt_new, !37, !"event_class_rpc_clnt_new", i1 false, i1 false}
!726 = !{ptr @event_rpc_clnt_new, !37, !"event_rpc_clnt_new", i1 false, i1 false}
!727 = !{ptr @__event_rpc_clnt_new, !37, !"__event_rpc_clnt_new", i1 false, i1 false}
!728 = !{ptr @event_class_rpc_clnt_new_err, !41, !"event_class_rpc_clnt_new_err", i1 false, i1 false}
!729 = !{ptr @event_rpc_clnt_new_err, !41, !"event_rpc_clnt_new_err", i1 false, i1 false}
!730 = !{ptr @__event_rpc_clnt_new_err, !41, !"__event_rpc_clnt_new_err", i1 false, i1 false}
!731 = !{ptr @event_class_rpc_clnt_clone_err, !45, !"event_class_rpc_clnt_clone_err", i1 false, i1 false}
!732 = !{ptr @event_rpc_clnt_clone_err, !45, !"event_rpc_clnt_clone_err", i1 false, i1 false}
!733 = !{ptr @__event_rpc_clnt_clone_err, !45, !"__event_rpc_clnt_clone_err", i1 false, i1 false}
!734 = !{ptr @event_class_rpc_task_status, !735, !"event_class_rpc_task_status", i1 false, i1 false}
!735 = !{!"../include/trace/events/sunrpc.h", i32 242, i32 1}
!736 = !{ptr @event_rpc_call_status, !49, !"event_rpc_call_status", i1 false, i1 false}
!737 = !{ptr @__event_rpc_call_status, !49, !"__event_rpc_call_status", i1 false, i1 false}
!738 = !{ptr @event_rpc_connect_status, !53, !"event_rpc_connect_status", i1 false, i1 false}
!739 = !{ptr @__event_rpc_connect_status, !53, !"__event_rpc_connect_status", i1 false, i1 false}
!740 = !{ptr @event_rpc_timeout_status, !57, !"event_rpc_timeout_status", i1 false, i1 false}
!741 = !{ptr @__event_rpc_timeout_status, !57, !"__event_rpc_timeout_status", i1 false, i1 false}
!742 = !{ptr @event_rpc_retry_refresh_status, !61, !"event_rpc_retry_refresh_status", i1 false, i1 false}
!743 = !{ptr @__event_rpc_retry_refresh_status, !61, !"__event_rpc_retry_refresh_status", i1 false, i1 false}
!744 = !{ptr @event_rpc_refresh_status, !65, !"event_rpc_refresh_status", i1 false, i1 false}
!745 = !{ptr @__event_rpc_refresh_status, !65, !"__event_rpc_refresh_status", i1 false, i1 false}
!746 = !{ptr @event_class_rpc_request, !69, !"event_class_rpc_request", i1 false, i1 false}
!747 = !{ptr @event_rpc_request, !69, !"event_rpc_request", i1 false, i1 false}
!748 = !{ptr @__event_rpc_request, !69, !"__event_rpc_request", i1 false, i1 false}
!749 = !{ptr @event_class_rpc_task_running, !750, !"event_class_rpc_task_running", i1 false, i1 false}
!750 = !{!"../include/trace/events/sunrpc.h", i32 335, i32 1}
!751 = !{ptr @event_rpc_task_begin, !73, !"event_rpc_task_begin", i1 false, i1 false}
!752 = !{ptr @__event_rpc_task_begin, !73, !"__event_rpc_task_begin", i1 false, i1 false}
!753 = !{ptr @event_rpc_task_run_action, !77, !"event_rpc_task_run_action", i1 false, i1 false}
!754 = !{ptr @__event_rpc_task_run_action, !77, !"__event_rpc_task_run_action", i1 false, i1 false}
!755 = !{ptr @event_rpc_task_sync_sleep, !81, !"event_rpc_task_sync_sleep", i1 false, i1 false}
!756 = !{ptr @__event_rpc_task_sync_sleep, !81, !"__event_rpc_task_sync_sleep", i1 false, i1 false}
!757 = !{ptr @event_rpc_task_sync_wake, !85, !"event_rpc_task_sync_wake", i1 false, i1 false}
!758 = !{ptr @__event_rpc_task_sync_wake, !85, !"__event_rpc_task_sync_wake", i1 false, i1 false}
!759 = !{ptr @event_rpc_task_complete, !89, !"event_rpc_task_complete", i1 false, i1 false}
!760 = !{ptr @__event_rpc_task_complete, !89, !"__event_rpc_task_complete", i1 false, i1 false}
!761 = !{ptr @event_rpc_task_timeout, !93, !"event_rpc_task_timeout", i1 false, i1 false}
!762 = !{ptr @__event_rpc_task_timeout, !93, !"__event_rpc_task_timeout", i1 false, i1 false}
!763 = !{ptr @event_rpc_task_signalled, !97, !"event_rpc_task_signalled", i1 false, i1 false}
!764 = !{ptr @__event_rpc_task_signalled, !97, !"__event_rpc_task_signalled", i1 false, i1 false}
!765 = !{ptr @event_rpc_task_end, !101, !"event_rpc_task_end", i1 false, i1 false}
!766 = !{ptr @__event_rpc_task_end, !101, !"__event_rpc_task_end", i1 false, i1 false}
!767 = !{ptr @event_rpc_task_call_done, !105, !"event_rpc_task_call_done", i1 false, i1 false}
!768 = !{ptr @__event_rpc_task_call_done, !105, !"__event_rpc_task_call_done", i1 false, i1 false}
!769 = !{ptr @event_class_rpc_task_queued, !770, !"event_class_rpc_task_queued", i1 false, i1 false}
!770 = !{!"../include/trace/events/sunrpc.h", i32 387, i32 1}
!771 = !{ptr @event_rpc_task_sleep, !109, !"event_rpc_task_sleep", i1 false, i1 false}
!772 = !{ptr @__event_rpc_task_sleep, !109, !"__event_rpc_task_sleep", i1 false, i1 false}
!773 = !{ptr @event_rpc_task_wakeup, !113, !"event_rpc_task_wakeup", i1 false, i1 false}
!774 = !{ptr @__event_rpc_task_wakeup, !113, !"__event_rpc_task_wakeup", i1 false, i1 false}
!775 = !{ptr @event_class_rpc_failure, !776, !"event_class_rpc_failure", i1 false, i1 false}
!776 = !{!"../include/trace/events/sunrpc.h", i32 435, i32 1}
!777 = !{ptr @event_rpc_bad_callhdr, !117, !"event_rpc_bad_callhdr", i1 false, i1 false}
!778 = !{ptr @__event_rpc_bad_callhdr, !117, !"__event_rpc_bad_callhdr", i1 false, i1 false}
!779 = !{ptr @event_rpc_bad_verifier, !121, !"event_rpc_bad_verifier", i1 false, i1 false}
!780 = !{ptr @__event_rpc_bad_verifier, !121, !"__event_rpc_bad_verifier", i1 false, i1 false}
!781 = !{ptr @event_class_rpc_reply_event, !782, !"event_class_rpc_reply_event", i1 false, i1 false}
!782 = !{!"../include/trace/events/sunrpc.h", i32 465, i32 1}
!783 = !{ptr @event_rpc__prog_unavail, !125, !"event_rpc__prog_unavail", i1 false, i1 false}
!784 = !{ptr @__event_rpc__prog_unavail, !125, !"__event_rpc__prog_unavail", i1 false, i1 false}
!785 = !{ptr @event_rpc__prog_mismatch, !129, !"event_rpc__prog_mismatch", i1 false, i1 false}
!786 = !{ptr @__event_rpc__prog_mismatch, !129, !"__event_rpc__prog_mismatch", i1 false, i1 false}
!787 = !{ptr @event_rpc__proc_unavail, !133, !"event_rpc__proc_unavail", i1 false, i1 false}
!788 = !{ptr @__event_rpc__proc_unavail, !133, !"__event_rpc__proc_unavail", i1 false, i1 false}
!789 = !{ptr @event_rpc__garbage_args, !137, !"event_rpc__garbage_args", i1 false, i1 false}
!790 = !{ptr @__event_rpc__garbage_args, !137, !"__event_rpc__garbage_args", i1 false, i1 false}
!791 = !{ptr @event_rpc__unparsable, !141, !"event_rpc__unparsable", i1 false, i1 false}
!792 = !{ptr @__event_rpc__unparsable, !141, !"__event_rpc__unparsable", i1 false, i1 false}
!793 = !{ptr @event_rpc__mismatch, !145, !"event_rpc__mismatch", i1 false, i1 false}
!794 = !{ptr @__event_rpc__mismatch, !145, !"__event_rpc__mismatch", i1 false, i1 false}
!795 = !{ptr @event_rpc__stale_creds, !149, !"event_rpc__stale_creds", i1 false, i1 false}
!796 = !{ptr @__event_rpc__stale_creds, !149, !"__event_rpc__stale_creds", i1 false, i1 false}
!797 = !{ptr @event_rpc__bad_creds, !153, !"event_rpc__bad_creds", i1 false, i1 false}
!798 = !{ptr @__event_rpc__bad_creds, !153, !"__event_rpc__bad_creds", i1 false, i1 false}
!799 = !{ptr @event_rpc__auth_tooweak, !157, !"event_rpc__auth_tooweak", i1 false, i1 false}
!800 = !{ptr @__event_rpc__auth_tooweak, !157, !"__event_rpc__auth_tooweak", i1 false, i1 false}
!801 = !{ptr @event_rpcb_prog_unavail_err, !161, !"event_rpcb_prog_unavail_err", i1 false, i1 false}
!802 = !{ptr @__event_rpcb_prog_unavail_err, !161, !"__event_rpcb_prog_unavail_err", i1 false, i1 false}
!803 = !{ptr @event_rpcb_timeout_err, !165, !"event_rpcb_timeout_err", i1 false, i1 false}
!804 = !{ptr @__event_rpcb_timeout_err, !165, !"__event_rpcb_timeout_err", i1 false, i1 false}
!805 = !{ptr @event_rpcb_bind_version_err, !169, !"event_rpcb_bind_version_err", i1 false, i1 false}
!806 = !{ptr @__event_rpcb_bind_version_err, !169, !"__event_rpcb_bind_version_err", i1 false, i1 false}
!807 = !{ptr @event_rpcb_unreachable_err, !173, !"event_rpcb_unreachable_err", i1 false, i1 false}
!808 = !{ptr @__event_rpcb_unreachable_err, !173, !"__event_rpcb_unreachable_err", i1 false, i1 false}
!809 = !{ptr @event_rpcb_unrecognized_err, !177, !"event_rpcb_unrecognized_err", i1 false, i1 false}
!810 = !{ptr @__event_rpcb_unrecognized_err, !177, !"__event_rpcb_unrecognized_err", i1 false, i1 false}
!811 = !{ptr @event_class_rpc_buf_alloc, !181, !"event_class_rpc_buf_alloc", i1 false, i1 false}
!812 = !{ptr @event_rpc_buf_alloc, !181, !"event_rpc_buf_alloc", i1 false, i1 false}
!813 = !{ptr @__event_rpc_buf_alloc, !181, !"__event_rpc_buf_alloc", i1 false, i1 false}
!814 = !{ptr @event_class_rpc_call_rpcerror, !185, !"event_class_rpc_call_rpcerror", i1 false, i1 false}
!815 = !{ptr @event_rpc_call_rpcerror, !185, !"event_rpc_call_rpcerror", i1 false, i1 false}
!816 = !{ptr @__event_rpc_call_rpcerror, !185, !"__event_rpc_call_rpcerror", i1 false, i1 false}
!817 = !{ptr @event_class_rpc_stats_latency, !189, !"event_class_rpc_stats_latency", i1 false, i1 false}
!818 = !{ptr @event_rpc_stats_latency, !189, !"event_rpc_stats_latency", i1 false, i1 false}
!819 = !{ptr @__event_rpc_stats_latency, !189, !"__event_rpc_stats_latency", i1 false, i1 false}
!820 = !{ptr @event_class_rpc_xdr_overflow, !193, !"event_class_rpc_xdr_overflow", i1 false, i1 false}
!821 = !{ptr @event_rpc_xdr_overflow, !193, !"event_rpc_xdr_overflow", i1 false, i1 false}
!822 = !{ptr @__event_rpc_xdr_overflow, !193, !"__event_rpc_xdr_overflow", i1 false, i1 false}
!823 = !{ptr @event_class_rpc_xdr_alignment, !197, !"event_class_rpc_xdr_alignment", i1 false, i1 false}
!824 = !{ptr @event_rpc_xdr_alignment, !197, !"event_rpc_xdr_alignment", i1 false, i1 false}
!825 = !{ptr @__event_rpc_xdr_alignment, !197, !"__event_rpc_xdr_alignment", i1 false, i1 false}
!826 = !{ptr @event_class_xs_socket_event, !827, !"event_class_xs_socket_event", i1 false, i1 false}
!827 = !{!"../include/trace/events/sunrpc.h", i32 809, i32 1}
!828 = !{ptr @event_class_xs_socket_event_done, !829, !"event_class_xs_socket_event_done", i1 false, i1 false}
!829 = !{!"../include/trace/events/sunrpc.h", i32 862, i32 1}
!830 = !{ptr @event_rpc_socket_state_change, !201, !"event_rpc_socket_state_change", i1 false, i1 false}
!831 = !{ptr @__event_rpc_socket_state_change, !201, !"__event_rpc_socket_state_change", i1 false, i1 false}
!832 = !{ptr @event_rpc_socket_connect, !205, !"event_rpc_socket_connect", i1 false, i1 false}
!833 = !{ptr @__event_rpc_socket_connect, !205, !"__event_rpc_socket_connect", i1 false, i1 false}
!834 = !{ptr @event_rpc_socket_error, !209, !"event_rpc_socket_error", i1 false, i1 false}
!835 = !{ptr @__event_rpc_socket_error, !209, !"__event_rpc_socket_error", i1 false, i1 false}
!836 = !{ptr @event_rpc_socket_reset_connection, !213, !"event_rpc_socket_reset_connection", i1 false, i1 false}
!837 = !{ptr @__event_rpc_socket_reset_connection, !213, !"__event_rpc_socket_reset_connection", i1 false, i1 false}
!838 = !{ptr @event_rpc_socket_close, !217, !"event_rpc_socket_close", i1 false, i1 false}
!839 = !{ptr @__event_rpc_socket_close, !217, !"__event_rpc_socket_close", i1 false, i1 false}
!840 = !{ptr @event_rpc_socket_shutdown, !221, !"event_rpc_socket_shutdown", i1 false, i1 false}
!841 = !{ptr @__event_rpc_socket_shutdown, !221, !"__event_rpc_socket_shutdown", i1 false, i1 false}
!842 = !{ptr @event_class_rpc_socket_nospace, !225, !"event_class_rpc_socket_nospace", i1 false, i1 false}
!843 = !{ptr @event_rpc_socket_nospace, !225, !"event_rpc_socket_nospace", i1 false, i1 false}
!844 = !{ptr @__event_rpc_socket_nospace, !225, !"__event_rpc_socket_nospace", i1 false, i1 false}
!845 = !{ptr @event_class_rpc_xprt_lifetime_class, !846, !"event_class_rpc_xprt_lifetime_class", i1 false, i1 false}
!846 = !{!"../include/trace/events/sunrpc.h", i32 971, i32 1}
!847 = !{ptr @event_xprt_create, !229, !"event_xprt_create", i1 false, i1 false}
!848 = !{ptr @__event_xprt_create, !229, !"__event_xprt_create", i1 false, i1 false}
!849 = !{ptr @event_xprt_connect, !233, !"event_xprt_connect", i1 false, i1 false}
!850 = !{ptr @__event_xprt_connect, !233, !"__event_xprt_connect", i1 false, i1 false}
!851 = !{ptr @event_xprt_disconnect_auto, !237, !"event_xprt_disconnect_auto", i1 false, i1 false}
!852 = !{ptr @__event_xprt_disconnect_auto, !237, !"__event_xprt_disconnect_auto", i1 false, i1 false}
!853 = !{ptr @event_xprt_disconnect_done, !241, !"event_xprt_disconnect_done", i1 false, i1 false}
!854 = !{ptr @__event_xprt_disconnect_done, !241, !"__event_xprt_disconnect_done", i1 false, i1 false}
!855 = !{ptr @event_xprt_disconnect_force, !245, !"event_xprt_disconnect_force", i1 false, i1 false}
!856 = !{ptr @__event_xprt_disconnect_force, !245, !"__event_xprt_disconnect_force", i1 false, i1 false}
!857 = !{ptr @event_xprt_disconnect_cleanup, !249, !"event_xprt_disconnect_cleanup", i1 false, i1 false}
!858 = !{ptr @__event_xprt_disconnect_cleanup, !249, !"__event_xprt_disconnect_cleanup", i1 false, i1 false}
!859 = !{ptr @event_xprt_destroy, !253, !"event_xprt_destroy", i1 false, i1 false}
!860 = !{ptr @__event_xprt_destroy, !253, !"__event_xprt_destroy", i1 false, i1 false}
!861 = !{ptr @event_class_rpc_xprt_event, !862, !"event_class_rpc_xprt_event", i1 false, i1 false}
!862 = !{!"../include/trace/events/sunrpc.h", i32 1011, i32 1}
!863 = !{ptr @event_xprt_timer, !257, !"event_xprt_timer", i1 false, i1 false}
!864 = !{ptr @__event_xprt_timer, !257, !"__event_xprt_timer", i1 false, i1 false}
!865 = !{ptr @event_xprt_lookup_rqst, !261, !"event_xprt_lookup_rqst", i1 false, i1 false}
!866 = !{ptr @__event_xprt_lookup_rqst, !261, !"__event_xprt_lookup_rqst", i1 false, i1 false}
!867 = !{ptr @event_class_xprt_transmit, !265, !"event_class_xprt_transmit", i1 false, i1 false}
!868 = !{ptr @event_xprt_transmit, !265, !"event_xprt_transmit", i1 false, i1 false}
!869 = !{ptr @__event_xprt_transmit, !265, !"__event_xprt_transmit", i1 false, i1 false}
!870 = !{ptr @event_class_xprt_retransmit, !269, !"event_class_xprt_retransmit", i1 false, i1 false}
!871 = !{ptr @event_xprt_retransmit, !269, !"event_xprt_retransmit", i1 false, i1 false}
!872 = !{ptr @__event_xprt_retransmit, !269, !"__event_xprt_retransmit", i1 false, i1 false}
!873 = !{ptr @event_class_xprt_ping, !273, !"event_class_xprt_ping", i1 false, i1 false}
!874 = !{ptr @event_xprt_ping, !273, !"event_xprt_ping", i1 false, i1 false}
!875 = !{ptr @__event_xprt_ping, !273, !"__event_xprt_ping", i1 false, i1 false}
!876 = !{ptr @event_class_xprt_writelock_event, !877, !"event_class_xprt_writelock_event", i1 false, i1 false}
!877 = !{!"../include/trace/events/sunrpc.h", i32 1144, i32 1}
!878 = !{ptr @event_xprt_reserve_xprt, !277, !"event_xprt_reserve_xprt", i1 false, i1 false}
!879 = !{ptr @__event_xprt_reserve_xprt, !277, !"__event_xprt_reserve_xprt", i1 false, i1 false}
!880 = !{ptr @event_xprt_release_xprt, !281, !"event_xprt_release_xprt", i1 false, i1 false}
!881 = !{ptr @__event_xprt_release_xprt, !281, !"__event_xprt_release_xprt", i1 false, i1 false}
!882 = !{ptr @event_class_xprt_cong_event, !883, !"event_class_xprt_cong_event", i1 false, i1 false}
!883 = !{!"../include/trace/events/sunrpc.h", i32 1190, i32 1}
!884 = !{ptr @event_xprt_reserve_cong, !285, !"event_xprt_reserve_cong", i1 false, i1 false}
!885 = !{ptr @__event_xprt_reserve_cong, !285, !"__event_xprt_reserve_cong", i1 false, i1 false}
!886 = !{ptr @event_xprt_release_cong, !289, !"event_xprt_release_cong", i1 false, i1 false}
!887 = !{ptr @__event_xprt_release_cong, !289, !"__event_xprt_release_cong", i1 false, i1 false}
!888 = !{ptr @event_xprt_get_cong, !293, !"event_xprt_get_cong", i1 false, i1 false}
!889 = !{ptr @__event_xprt_get_cong, !293, !"__event_xprt_get_cong", i1 false, i1 false}
!890 = !{ptr @event_xprt_put_cong, !297, !"event_xprt_put_cong", i1 false, i1 false}
!891 = !{ptr @__event_xprt_put_cong, !297, !"__event_xprt_put_cong", i1 false, i1 false}
!892 = !{ptr @event_class_xprt_reserve, !301, !"event_class_xprt_reserve", i1 false, i1 false}
!893 = !{ptr @event_xprt_reserve, !301, !"event_xprt_reserve", i1 false, i1 false}
!894 = !{ptr @__event_xprt_reserve, !301, !"__event_xprt_reserve", i1 false, i1 false}
!895 = !{ptr @event_class_xs_stream_read_data, !305, !"event_class_xs_stream_read_data", i1 false, i1 false}
!896 = !{ptr @event_xs_stream_read_data, !305, !"event_xs_stream_read_data", i1 false, i1 false}
!897 = !{ptr @__event_xs_stream_read_data, !305, !"__event_xs_stream_read_data", i1 false, i1 false}
!898 = !{ptr @event_class_xs_stream_read_request, !309, !"event_class_xs_stream_read_request", i1 false, i1 false}
!899 = !{ptr @event_xs_stream_read_request, !309, !"event_xs_stream_read_request", i1 false, i1 false}
!900 = !{ptr @__event_xs_stream_read_request, !309, !"__event_xs_stream_read_request", i1 false, i1 false}
!901 = !{ptr @event_class_rpcb_getport, !313, !"event_class_rpcb_getport", i1 false, i1 false}
!902 = !{ptr @event_rpcb_getport, !313, !"event_rpcb_getport", i1 false, i1 false}
!903 = !{ptr @__event_rpcb_getport, !313, !"__event_rpcb_getport", i1 false, i1 false}
!904 = !{ptr @event_class_rpcb_setport, !317, !"event_class_rpcb_setport", i1 false, i1 false}
!905 = !{ptr @event_rpcb_setport, !317, !"event_rpcb_setport", i1 false, i1 false}
!906 = !{ptr @__event_rpcb_setport, !317, !"__event_rpcb_setport", i1 false, i1 false}
!907 = !{ptr @event_class_pmap_register, !321, !"event_class_pmap_register", i1 false, i1 false}
!908 = !{ptr @event_pmap_register, !321, !"event_pmap_register", i1 false, i1 false}
!909 = !{ptr @__event_pmap_register, !321, !"__event_pmap_register", i1 false, i1 false}
!910 = !{ptr @event_class_rpcb_register, !325, !"event_class_rpcb_register", i1 false, i1 false}
!911 = !{ptr @event_rpcb_register, !325, !"event_rpcb_register", i1 false, i1 false}
!912 = !{ptr @__event_rpcb_register, !325, !"__event_rpcb_register", i1 false, i1 false}
!913 = !{ptr @event_class_rpcb_unregister, !329, !"event_class_rpcb_unregister", i1 false, i1 false}
!914 = !{ptr @event_rpcb_unregister, !329, !"event_rpcb_unregister", i1 false, i1 false}
!915 = !{ptr @__event_rpcb_unregister, !329, !"__event_rpcb_unregister", i1 false, i1 false}
!916 = !{ptr @event_class_svc_xdr_msg_class, !917, !"event_class_svc_xdr_msg_class", i1 false, i1 false}
!917 = !{!"../include/trace/events/sunrpc.h", i32 1479, i32 1}
!918 = !{ptr @event_svc_xdr_recvfrom, !333, !"event_svc_xdr_recvfrom", i1 false, i1 false}
!919 = !{ptr @__event_svc_xdr_recvfrom, !333, !"__event_svc_xdr_recvfrom", i1 false, i1 false}
!920 = !{ptr @event_class_svc_xdr_buf_class, !921, !"event_class_svc_xdr_buf_class", i1 false, i1 false}
!921 = !{!"../include/trace/events/sunrpc.h", i32 1526, i32 1}
!922 = !{ptr @event_svc_xdr_sendto, !337, !"event_svc_xdr_sendto", i1 false, i1 false}
!923 = !{ptr @__event_svc_xdr_sendto, !337, !"__event_svc_xdr_sendto", i1 false, i1 false}
!924 = !{ptr @event_class_svc_authenticate, !341, !"event_class_svc_authenticate", i1 false, i1 false}
!925 = !{ptr @event_svc_authenticate, !341, !"event_svc_authenticate", i1 false, i1 false}
!926 = !{ptr @__event_svc_authenticate, !341, !"__event_svc_authenticate", i1 false, i1 false}
!927 = !{ptr @event_class_svc_process, !345, !"event_class_svc_process", i1 false, i1 false}
!928 = !{ptr @event_svc_process, !345, !"event_svc_process", i1 false, i1 false}
!929 = !{ptr @__event_svc_process, !345, !"__event_svc_process", i1 false, i1 false}
!930 = !{ptr @event_class_svc_rqst_event, !931, !"event_class_svc_rqst_event", i1 false, i1 false}
!931 = !{!"../include/trace/events/sunrpc.h", i32 1682, i32 1}
!932 = !{ptr @event_svc_defer, !349, !"event_svc_defer", i1 false, i1 false}
!933 = !{ptr @__event_svc_defer, !349, !"__event_svc_defer", i1 false, i1 false}
!934 = !{ptr @event_svc_drop, !353, !"event_svc_drop", i1 false, i1 false}
!935 = !{ptr @__event_svc_drop, !353, !"__event_svc_drop", i1 false, i1 false}
!936 = !{ptr @event_class_svc_rqst_status, !937, !"event_class_svc_rqst_status", i1 false, i1 false}
!937 = !{!"../include/trace/events/sunrpc.h", i32 1716, i32 1}
!938 = !{ptr @event_svc_send, !357, !"event_svc_send", i1 false, i1 false}
!939 = !{ptr @__event_svc_send, !357, !"__event_svc_send", i1 false, i1 false}
!940 = !{ptr @event_class_svc_xprt_create_err, !361, !"event_class_svc_xprt_create_err", i1 false, i1 false}
!941 = !{ptr @event_svc_xprt_create_err, !361, !"event_svc_xprt_create_err", i1 false, i1 false}
!942 = !{ptr @__event_svc_xprt_create_err, !361, !"__event_svc_xprt_create_err", i1 false, i1 false}
!943 = !{ptr @event_class_svc_xprt_enqueue, !365, !"event_class_svc_xprt_enqueue", i1 false, i1 false}
!944 = !{ptr @event_svc_xprt_enqueue, !365, !"event_svc_xprt_enqueue", i1 false, i1 false}
!945 = !{ptr @__event_svc_xprt_enqueue, !365, !"__event_svc_xprt_enqueue", i1 false, i1 false}
!946 = !{ptr @event_class_svc_xprt_event, !947, !"event_class_svc_xprt_event", i1 false, i1 false}
!947 = !{!"../include/trace/events/sunrpc.h", i32 1813, i32 1}
!948 = !{ptr @event_svc_xprt_no_write_space, !369, !"event_svc_xprt_no_write_space", i1 false, i1 false}
!949 = !{ptr @__event_svc_xprt_no_write_space, !369, !"__event_svc_xprt_no_write_space", i1 false, i1 false}
!950 = !{ptr @event_svc_xprt_close, !373, !"event_svc_xprt_close", i1 false, i1 false}
!951 = !{ptr @__event_svc_xprt_close, !373, !"__event_svc_xprt_close", i1 false, i1 false}
!952 = !{ptr @event_svc_xprt_detach, !377, !"event_svc_xprt_detach", i1 false, i1 false}
!953 = !{ptr @__event_svc_xprt_detach, !377, !"__event_svc_xprt_detach", i1 false, i1 false}
!954 = !{ptr @event_svc_xprt_free, !381, !"event_svc_xprt_free", i1 false, i1 false}
!955 = !{ptr @__event_svc_xprt_free, !381, !"__event_svc_xprt_free", i1 false, i1 false}
!956 = !{ptr @event_class_svc_xprt_accept, !385, !"event_class_svc_xprt_accept", i1 false, i1 false}
!957 = !{ptr @event_svc_xprt_accept, !385, !"event_svc_xprt_accept", i1 false, i1 false}
!958 = !{ptr @__event_svc_xprt_accept, !385, !"__event_svc_xprt_accept", i1 false, i1 false}
!959 = !{ptr @event_class_svc_xprt_dequeue, !389, !"event_class_svc_xprt_dequeue", i1 false, i1 false}
!960 = !{ptr @event_svc_xprt_dequeue, !389, !"event_svc_xprt_dequeue", i1 false, i1 false}
!961 = !{ptr @__event_svc_xprt_dequeue, !389, !"__event_svc_xprt_dequeue", i1 false, i1 false}
!962 = !{ptr @event_class_svc_wake_up, !393, !"event_class_svc_wake_up", i1 false, i1 false}
!963 = !{ptr @event_svc_wake_up, !393, !"event_svc_wake_up", i1 false, i1 false}
!964 = !{ptr @__event_svc_wake_up, !393, !"__event_svc_wake_up", i1 false, i1 false}
!965 = !{ptr @event_class_svc_alloc_arg_err, !397, !"event_class_svc_alloc_arg_err", i1 false, i1 false}
!966 = !{ptr @event_svc_alloc_arg_err, !397, !"event_svc_alloc_arg_err", i1 false, i1 false}
!967 = !{ptr @__event_svc_alloc_arg_err, !397, !"__event_svc_alloc_arg_err", i1 false, i1 false}
!968 = !{ptr @event_class_svc_stats_latency, !401, !"event_class_svc_stats_latency", i1 false, i1 false}
!969 = !{ptr @event_svc_stats_latency, !401, !"event_svc_stats_latency", i1 false, i1 false}
!970 = !{ptr @__event_svc_stats_latency, !401, !"__event_svc_stats_latency", i1 false, i1 false}
!971 = !{ptr @event_class_svc_deferred_event, !972, !"event_class_svc_deferred_event", i1 false, i1 false}
!972 = !{!"../include/trace/events/sunrpc.h", i32 1950, i32 1}
!973 = !{ptr @event_svc_defer_drop, !405, !"event_svc_defer_drop", i1 false, i1 false}
!974 = !{ptr @__event_svc_defer_drop, !405, !"__event_svc_defer_drop", i1 false, i1 false}
!975 = !{ptr @event_svc_defer_queue, !409, !"event_svc_defer_queue", i1 false, i1 false}
!976 = !{ptr @__event_svc_defer_queue, !409, !"__event_svc_defer_queue", i1 false, i1 false}
!977 = !{ptr @event_svc_defer_recv, !413, !"event_svc_defer_recv", i1 false, i1 false}
!978 = !{ptr @__event_svc_defer_recv, !413, !"__event_svc_defer_recv", i1 false, i1 false}
!979 = !{ptr @event_class_svcsock_new_socket, !417, !"event_class_svcsock_new_socket", i1 false, i1 false}
!980 = !{ptr @event_svcsock_new_socket, !417, !"event_svcsock_new_socket", i1 false, i1 false}
!981 = !{ptr @__event_svcsock_new_socket, !417, !"__event_svcsock_new_socket", i1 false, i1 false}
!982 = !{ptr @event_class_svcsock_marker, !421, !"event_class_svcsock_marker", i1 false, i1 false}
!983 = !{ptr @event_svcsock_marker, !421, !"event_svcsock_marker", i1 false, i1 false}
!984 = !{ptr @__event_svcsock_marker, !421, !"__event_svcsock_marker", i1 false, i1 false}
!985 = !{ptr @event_class_svcsock_class, !986, !"event_class_svcsock_class", i1 false, i1 false}
!986 = !{!"../include/trace/events/sunrpc.h", i32 2035, i32 1}
!987 = !{ptr @event_svcsock_udp_send, !425, !"event_svcsock_udp_send", i1 false, i1 false}
!988 = !{ptr @__event_svcsock_udp_send, !425, !"__event_svcsock_udp_send", i1 false, i1 false}
!989 = !{ptr @event_svcsock_udp_recv, !429, !"event_svcsock_udp_recv", i1 false, i1 false}
!990 = !{ptr @__event_svcsock_udp_recv, !429, !"__event_svcsock_udp_recv", i1 false, i1 false}
!991 = !{ptr @event_svcsock_udp_recv_err, !433, !"event_svcsock_udp_recv_err", i1 false, i1 false}
!992 = !{ptr @__event_svcsock_udp_recv_err, !433, !"__event_svcsock_udp_recv_err", i1 false, i1 false}
!993 = !{ptr @event_svcsock_tcp_send, !437, !"event_svcsock_tcp_send", i1 false, i1 false}
!994 = !{ptr @__event_svcsock_tcp_send, !437, !"__event_svcsock_tcp_send", i1 false, i1 false}
!995 = !{ptr @event_svcsock_tcp_recv, !441, !"event_svcsock_tcp_recv", i1 false, i1 false}
!996 = !{ptr @__event_svcsock_tcp_recv, !441, !"__event_svcsock_tcp_recv", i1 false, i1 false}
!997 = !{ptr @event_svcsock_tcp_recv_eagain, !445, !"event_svcsock_tcp_recv_eagain", i1 false, i1 false}
!998 = !{ptr @__event_svcsock_tcp_recv_eagain, !445, !"__event_svcsock_tcp_recv_eagain", i1 false, i1 false}
!999 = !{ptr @event_svcsock_tcp_recv_err, !449, !"event_svcsock_tcp_recv_err", i1 false, i1 false}
!1000 = !{ptr @__event_svcsock_tcp_recv_err, !449, !"__event_svcsock_tcp_recv_err", i1 false, i1 false}
!1001 = !{ptr @event_svcsock_data_ready, !453, !"event_svcsock_data_ready", i1 false, i1 false}
!1002 = !{ptr @__event_svcsock_data_ready, !453, !"__event_svcsock_data_ready", i1 false, i1 false}
!1003 = !{ptr @event_svcsock_write_space, !457, !"event_svcsock_write_space", i1 false, i1 false}
!1004 = !{ptr @__event_svcsock_write_space, !457, !"__event_svcsock_write_space", i1 false, i1 false}
!1005 = !{ptr @event_class_svcsock_tcp_recv_short, !461, !"event_class_svcsock_tcp_recv_short", i1 false, i1 false}
!1006 = !{ptr @event_svcsock_tcp_recv_short, !461, !"event_svcsock_tcp_recv_short", i1 false, i1 false}
!1007 = !{ptr @__event_svcsock_tcp_recv_short, !461, !"__event_svcsock_tcp_recv_short", i1 false, i1 false}
!1008 = !{ptr @event_class_svcsock_tcp_state, !465, !"event_class_svcsock_tcp_state", i1 false, i1 false}
!1009 = !{ptr @event_svcsock_tcp_state, !465, !"event_svcsock_tcp_state", i1 false, i1 false}
!1010 = !{ptr @__event_svcsock_tcp_state, !465, !"__event_svcsock_tcp_state", i1 false, i1 false}
!1011 = !{ptr @event_class_svcsock_accept_class, !1012, !"event_class_svcsock_accept_class", i1 false, i1 false}
!1012 = !{!"../include/trace/events/sunrpc.h", i32 2136, i32 1}
!1013 = !{ptr @event_svcsock_accept_err, !469, !"event_svcsock_accept_err", i1 false, i1 false}
!1014 = !{ptr @__event_svcsock_accept_err, !469, !"__event_svcsock_accept_err", i1 false, i1 false}
!1015 = !{ptr @event_svcsock_getpeername_err, !473, !"event_svcsock_getpeername_err", i1 false, i1 false}
!1016 = !{ptr @__event_svcsock_getpeername_err, !473, !"__event_svcsock_getpeername_err", i1 false, i1 false}
!1017 = !{ptr @event_class_cache_event, !1018, !"event_class_cache_event", i1 false, i1 false}
!1018 = !{!"../include/trace/events/sunrpc.h", i32 2174, i32 1}
!1019 = !{ptr @event_cache_entry_expired, !477, !"event_cache_entry_expired", i1 false, i1 false}
!1020 = !{ptr @__event_cache_entry_expired, !477, !"__event_cache_entry_expired", i1 false, i1 false}
!1021 = !{ptr @event_cache_entry_upcall, !481, !"event_cache_entry_upcall", i1 false, i1 false}
!1022 = !{ptr @__event_cache_entry_upcall, !481, !"__event_cache_entry_upcall", i1 false, i1 false}
!1023 = !{ptr @event_cache_entry_update, !485, !"event_cache_entry_update", i1 false, i1 false}
!1024 = !{ptr @__event_cache_entry_update, !485, !"__event_cache_entry_update", i1 false, i1 false}
!1025 = !{ptr @event_cache_entry_make_negative, !489, !"event_cache_entry_make_negative", i1 false, i1 false}
!1026 = !{ptr @__event_cache_entry_make_negative, !489, !"__event_cache_entry_make_negative", i1 false, i1 false}
!1027 = !{ptr @event_cache_entry_no_listener, !493, !"event_cache_entry_no_listener", i1 false, i1 false}
!1028 = !{ptr @__event_cache_entry_no_listener, !493, !"__event_cache_entry_no_listener", i1 false, i1 false}
!1029 = !{ptr @event_class_register_class, !1030, !"event_class_register_class", i1 false, i1 false}
!1030 = !{!"../include/trace/events/sunrpc.h", i32 2207, i32 1}
!1031 = !{ptr @event_svc_register, !497, !"event_svc_register", i1 false, i1 false}
!1032 = !{ptr @__event_svc_register, !497, !"__event_svc_register", i1 false, i1 false}
!1033 = !{ptr @event_svc_noregister, !501, !"event_svc_noregister", i1 false, i1 false}
!1034 = !{ptr @__event_svc_noregister, !501, !"__event_svc_noregister", i1 false, i1 false}
!1035 = !{ptr @event_class_svc_unregister, !505, !"event_class_svc_unregister", i1 false, i1 false}
!1036 = !{ptr @event_svc_unregister, !505, !"event_svc_unregister", i1 false, i1 false}
!1037 = !{ptr @__event_svc_unregister, !505, !"__event_svc_unregister", i1 false, i1 false}
!1038 = !{ptr @__bpf_trace_tp_map_rpc_xdr_sendto, !1, !"__bpf_trace_tp_map_rpc_xdr_sendto", i1 false, i1 false}
!1039 = !{ptr @__bpf_trace_tp_map_rpc_xdr_recvfrom, !5, !"__bpf_trace_tp_map_rpc_xdr_recvfrom", i1 false, i1 false}
!1040 = !{ptr @__bpf_trace_tp_map_rpc_xdr_reply_pages, !9, !"__bpf_trace_tp_map_rpc_xdr_reply_pages", i1 false, i1 false}
!1041 = !{ptr @__bpf_trace_tp_map_rpc_clnt_free, !13, !"__bpf_trace_tp_map_rpc_clnt_free", i1 false, i1 false}
!1042 = !{ptr @__bpf_trace_tp_map_rpc_clnt_killall, !17, !"__bpf_trace_tp_map_rpc_clnt_killall", i1 false, i1 false}
!1043 = !{ptr @__bpf_trace_tp_map_rpc_clnt_shutdown, !21, !"__bpf_trace_tp_map_rpc_clnt_shutdown", i1 false, i1 false}
!1044 = !{ptr @__bpf_trace_tp_map_rpc_clnt_release, !25, !"__bpf_trace_tp_map_rpc_clnt_release", i1 false, i1 false}
!1045 = !{ptr @__bpf_trace_tp_map_rpc_clnt_replace_xprt, !29, !"__bpf_trace_tp_map_rpc_clnt_replace_xprt", i1 false, i1 false}
!1046 = !{ptr @__bpf_trace_tp_map_rpc_clnt_replace_xprt_err, !33, !"__bpf_trace_tp_map_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!1047 = !{ptr @__bpf_trace_tp_map_rpc_clnt_new, !37, !"__bpf_trace_tp_map_rpc_clnt_new", i1 false, i1 false}
!1048 = !{ptr @__bpf_trace_tp_map_rpc_clnt_new_err, !41, !"__bpf_trace_tp_map_rpc_clnt_new_err", i1 false, i1 false}
!1049 = !{ptr @__bpf_trace_tp_map_rpc_clnt_clone_err, !45, !"__bpf_trace_tp_map_rpc_clnt_clone_err", i1 false, i1 false}
!1050 = !{ptr @__bpf_trace_tp_map_rpc_call_status, !49, !"__bpf_trace_tp_map_rpc_call_status", i1 false, i1 false}
!1051 = !{ptr @__bpf_trace_tp_map_rpc_connect_status, !53, !"__bpf_trace_tp_map_rpc_connect_status", i1 false, i1 false}
!1052 = !{ptr @__bpf_trace_tp_map_rpc_timeout_status, !57, !"__bpf_trace_tp_map_rpc_timeout_status", i1 false, i1 false}
!1053 = !{ptr @__bpf_trace_tp_map_rpc_retry_refresh_status, !61, !"__bpf_trace_tp_map_rpc_retry_refresh_status", i1 false, i1 false}
!1054 = !{ptr @__bpf_trace_tp_map_rpc_refresh_status, !65, !"__bpf_trace_tp_map_rpc_refresh_status", i1 false, i1 false}
!1055 = !{ptr @__bpf_trace_tp_map_rpc_request, !69, !"__bpf_trace_tp_map_rpc_request", i1 false, i1 false}
!1056 = !{ptr @__bpf_trace_tp_map_rpc_task_begin, !73, !"__bpf_trace_tp_map_rpc_task_begin", i1 false, i1 false}
!1057 = !{ptr @__bpf_trace_tp_map_rpc_task_run_action, !77, !"__bpf_trace_tp_map_rpc_task_run_action", i1 false, i1 false}
!1058 = !{ptr @__bpf_trace_tp_map_rpc_task_sync_sleep, !81, !"__bpf_trace_tp_map_rpc_task_sync_sleep", i1 false, i1 false}
!1059 = !{ptr @__bpf_trace_tp_map_rpc_task_sync_wake, !85, !"__bpf_trace_tp_map_rpc_task_sync_wake", i1 false, i1 false}
!1060 = !{ptr @__bpf_trace_tp_map_rpc_task_complete, !89, !"__bpf_trace_tp_map_rpc_task_complete", i1 false, i1 false}
!1061 = !{ptr @__bpf_trace_tp_map_rpc_task_timeout, !93, !"__bpf_trace_tp_map_rpc_task_timeout", i1 false, i1 false}
!1062 = !{ptr @__bpf_trace_tp_map_rpc_task_signalled, !97, !"__bpf_trace_tp_map_rpc_task_signalled", i1 false, i1 false}
!1063 = !{ptr @__bpf_trace_tp_map_rpc_task_end, !101, !"__bpf_trace_tp_map_rpc_task_end", i1 false, i1 false}
!1064 = !{ptr @__bpf_trace_tp_map_rpc_task_call_done, !105, !"__bpf_trace_tp_map_rpc_task_call_done", i1 false, i1 false}
!1065 = !{ptr @__bpf_trace_tp_map_rpc_task_sleep, !109, !"__bpf_trace_tp_map_rpc_task_sleep", i1 false, i1 false}
!1066 = !{ptr @__bpf_trace_tp_map_rpc_task_wakeup, !113, !"__bpf_trace_tp_map_rpc_task_wakeup", i1 false, i1 false}
!1067 = !{ptr @__bpf_trace_tp_map_rpc_bad_callhdr, !117, !"__bpf_trace_tp_map_rpc_bad_callhdr", i1 false, i1 false}
!1068 = !{ptr @__bpf_trace_tp_map_rpc_bad_verifier, !121, !"__bpf_trace_tp_map_rpc_bad_verifier", i1 false, i1 false}
!1069 = !{ptr @__bpf_trace_tp_map_rpc__prog_unavail, !125, !"__bpf_trace_tp_map_rpc__prog_unavail", i1 false, i1 false}
!1070 = !{ptr @__bpf_trace_tp_map_rpc__prog_mismatch, !129, !"__bpf_trace_tp_map_rpc__prog_mismatch", i1 false, i1 false}
!1071 = !{ptr @__bpf_trace_tp_map_rpc__proc_unavail, !133, !"__bpf_trace_tp_map_rpc__proc_unavail", i1 false, i1 false}
!1072 = !{ptr @__bpf_trace_tp_map_rpc__garbage_args, !137, !"__bpf_trace_tp_map_rpc__garbage_args", i1 false, i1 false}
!1073 = !{ptr @__bpf_trace_tp_map_rpc__unparsable, !141, !"__bpf_trace_tp_map_rpc__unparsable", i1 false, i1 false}
!1074 = !{ptr @__bpf_trace_tp_map_rpc__mismatch, !145, !"__bpf_trace_tp_map_rpc__mismatch", i1 false, i1 false}
!1075 = !{ptr @__bpf_trace_tp_map_rpc__stale_creds, !149, !"__bpf_trace_tp_map_rpc__stale_creds", i1 false, i1 false}
!1076 = !{ptr @__bpf_trace_tp_map_rpc__bad_creds, !153, !"__bpf_trace_tp_map_rpc__bad_creds", i1 false, i1 false}
!1077 = !{ptr @__bpf_trace_tp_map_rpc__auth_tooweak, !157, !"__bpf_trace_tp_map_rpc__auth_tooweak", i1 false, i1 false}
!1078 = !{ptr @__bpf_trace_tp_map_rpcb_prog_unavail_err, !161, !"__bpf_trace_tp_map_rpcb_prog_unavail_err", i1 false, i1 false}
!1079 = !{ptr @__bpf_trace_tp_map_rpcb_timeout_err, !165, !"__bpf_trace_tp_map_rpcb_timeout_err", i1 false, i1 false}
!1080 = !{ptr @__bpf_trace_tp_map_rpcb_bind_version_err, !169, !"__bpf_trace_tp_map_rpcb_bind_version_err", i1 false, i1 false}
!1081 = !{ptr @__bpf_trace_tp_map_rpcb_unreachable_err, !173, !"__bpf_trace_tp_map_rpcb_unreachable_err", i1 false, i1 false}
!1082 = !{ptr @__bpf_trace_tp_map_rpcb_unrecognized_err, !177, !"__bpf_trace_tp_map_rpcb_unrecognized_err", i1 false, i1 false}
!1083 = !{ptr @__bpf_trace_tp_map_rpc_buf_alloc, !181, !"__bpf_trace_tp_map_rpc_buf_alloc", i1 false, i1 false}
!1084 = !{ptr @__bpf_trace_tp_map_rpc_call_rpcerror, !185, !"__bpf_trace_tp_map_rpc_call_rpcerror", i1 false, i1 false}
!1085 = !{ptr @__bpf_trace_tp_map_rpc_stats_latency, !189, !"__bpf_trace_tp_map_rpc_stats_latency", i1 false, i1 false}
!1086 = !{ptr @__bpf_trace_tp_map_rpc_xdr_overflow, !193, !"__bpf_trace_tp_map_rpc_xdr_overflow", i1 false, i1 false}
!1087 = !{ptr @__bpf_trace_tp_map_rpc_xdr_alignment, !197, !"__bpf_trace_tp_map_rpc_xdr_alignment", i1 false, i1 false}
!1088 = !{ptr @__bpf_trace_tp_map_rpc_socket_state_change, !201, !"__bpf_trace_tp_map_rpc_socket_state_change", i1 false, i1 false}
!1089 = !{ptr @__bpf_trace_tp_map_rpc_socket_connect, !205, !"__bpf_trace_tp_map_rpc_socket_connect", i1 false, i1 false}
!1090 = !{ptr @__bpf_trace_tp_map_rpc_socket_error, !209, !"__bpf_trace_tp_map_rpc_socket_error", i1 false, i1 false}
!1091 = !{ptr @__bpf_trace_tp_map_rpc_socket_reset_connection, !213, !"__bpf_trace_tp_map_rpc_socket_reset_connection", i1 false, i1 false}
!1092 = !{ptr @__bpf_trace_tp_map_rpc_socket_close, !217, !"__bpf_trace_tp_map_rpc_socket_close", i1 false, i1 false}
!1093 = !{ptr @__bpf_trace_tp_map_rpc_socket_shutdown, !221, !"__bpf_trace_tp_map_rpc_socket_shutdown", i1 false, i1 false}
!1094 = !{ptr @__bpf_trace_tp_map_rpc_socket_nospace, !225, !"__bpf_trace_tp_map_rpc_socket_nospace", i1 false, i1 false}
!1095 = !{ptr @__bpf_trace_tp_map_xprt_create, !229, !"__bpf_trace_tp_map_xprt_create", i1 false, i1 false}
!1096 = !{ptr @__bpf_trace_tp_map_xprt_connect, !233, !"__bpf_trace_tp_map_xprt_connect", i1 false, i1 false}
!1097 = !{ptr @__bpf_trace_tp_map_xprt_disconnect_auto, !237, !"__bpf_trace_tp_map_xprt_disconnect_auto", i1 false, i1 false}
!1098 = !{ptr @__bpf_trace_tp_map_xprt_disconnect_done, !241, !"__bpf_trace_tp_map_xprt_disconnect_done", i1 false, i1 false}
!1099 = !{ptr @__bpf_trace_tp_map_xprt_disconnect_force, !245, !"__bpf_trace_tp_map_xprt_disconnect_force", i1 false, i1 false}
!1100 = !{ptr @__bpf_trace_tp_map_xprt_disconnect_cleanup, !249, !"__bpf_trace_tp_map_xprt_disconnect_cleanup", i1 false, i1 false}
!1101 = !{ptr @__bpf_trace_tp_map_xprt_destroy, !253, !"__bpf_trace_tp_map_xprt_destroy", i1 false, i1 false}
!1102 = !{ptr @__bpf_trace_tp_map_xprt_timer, !257, !"__bpf_trace_tp_map_xprt_timer", i1 false, i1 false}
!1103 = !{ptr @__bpf_trace_tp_map_xprt_lookup_rqst, !261, !"__bpf_trace_tp_map_xprt_lookup_rqst", i1 false, i1 false}
!1104 = !{ptr @__bpf_trace_tp_map_xprt_transmit, !265, !"__bpf_trace_tp_map_xprt_transmit", i1 false, i1 false}
!1105 = !{ptr @__bpf_trace_tp_map_xprt_retransmit, !269, !"__bpf_trace_tp_map_xprt_retransmit", i1 false, i1 false}
!1106 = !{ptr @__bpf_trace_tp_map_xprt_ping, !273, !"__bpf_trace_tp_map_xprt_ping", i1 false, i1 false}
!1107 = !{ptr @__bpf_trace_tp_map_xprt_reserve_xprt, !277, !"__bpf_trace_tp_map_xprt_reserve_xprt", i1 false, i1 false}
!1108 = !{ptr @__bpf_trace_tp_map_xprt_release_xprt, !281, !"__bpf_trace_tp_map_xprt_release_xprt", i1 false, i1 false}
!1109 = !{ptr @__bpf_trace_tp_map_xprt_reserve_cong, !285, !"__bpf_trace_tp_map_xprt_reserve_cong", i1 false, i1 false}
!1110 = !{ptr @__bpf_trace_tp_map_xprt_release_cong, !289, !"__bpf_trace_tp_map_xprt_release_cong", i1 false, i1 false}
!1111 = !{ptr @__bpf_trace_tp_map_xprt_get_cong, !293, !"__bpf_trace_tp_map_xprt_get_cong", i1 false, i1 false}
!1112 = !{ptr @__bpf_trace_tp_map_xprt_put_cong, !297, !"__bpf_trace_tp_map_xprt_put_cong", i1 false, i1 false}
!1113 = !{ptr @__bpf_trace_tp_map_xprt_reserve, !301, !"__bpf_trace_tp_map_xprt_reserve", i1 false, i1 false}
!1114 = !{ptr @__bpf_trace_tp_map_xs_stream_read_data, !305, !"__bpf_trace_tp_map_xs_stream_read_data", i1 false, i1 false}
!1115 = !{ptr @__bpf_trace_tp_map_xs_stream_read_request, !309, !"__bpf_trace_tp_map_xs_stream_read_request", i1 false, i1 false}
!1116 = !{ptr @__bpf_trace_tp_map_rpcb_getport, !313, !"__bpf_trace_tp_map_rpcb_getport", i1 false, i1 false}
!1117 = !{ptr @__bpf_trace_tp_map_rpcb_setport, !317, !"__bpf_trace_tp_map_rpcb_setport", i1 false, i1 false}
!1118 = !{ptr @__bpf_trace_tp_map_pmap_register, !321, !"__bpf_trace_tp_map_pmap_register", i1 false, i1 false}
!1119 = !{ptr @__bpf_trace_tp_map_rpcb_register, !325, !"__bpf_trace_tp_map_rpcb_register", i1 false, i1 false}
!1120 = !{ptr @__bpf_trace_tp_map_rpcb_unregister, !329, !"__bpf_trace_tp_map_rpcb_unregister", i1 false, i1 false}
!1121 = !{ptr @__bpf_trace_tp_map_svc_xdr_recvfrom, !333, !"__bpf_trace_tp_map_svc_xdr_recvfrom", i1 false, i1 false}
!1122 = !{ptr @__bpf_trace_tp_map_svc_xdr_sendto, !337, !"__bpf_trace_tp_map_svc_xdr_sendto", i1 false, i1 false}
!1123 = !{ptr @__bpf_trace_tp_map_svc_authenticate, !341, !"__bpf_trace_tp_map_svc_authenticate", i1 false, i1 false}
!1124 = !{ptr @__bpf_trace_tp_map_svc_process, !345, !"__bpf_trace_tp_map_svc_process", i1 false, i1 false}
!1125 = !{ptr @__bpf_trace_tp_map_svc_defer, !349, !"__bpf_trace_tp_map_svc_defer", i1 false, i1 false}
!1126 = !{ptr @__bpf_trace_tp_map_svc_drop, !353, !"__bpf_trace_tp_map_svc_drop", i1 false, i1 false}
!1127 = !{ptr @__bpf_trace_tp_map_svc_send, !357, !"__bpf_trace_tp_map_svc_send", i1 false, i1 false}
!1128 = !{ptr @__bpf_trace_tp_map_svc_xprt_create_err, !361, !"__bpf_trace_tp_map_svc_xprt_create_err", i1 false, i1 false}
!1129 = !{ptr @__bpf_trace_tp_map_svc_xprt_enqueue, !365, !"__bpf_trace_tp_map_svc_xprt_enqueue", i1 false, i1 false}
!1130 = !{ptr @__bpf_trace_tp_map_svc_xprt_no_write_space, !369, !"__bpf_trace_tp_map_svc_xprt_no_write_space", i1 false, i1 false}
!1131 = !{ptr @__bpf_trace_tp_map_svc_xprt_close, !373, !"__bpf_trace_tp_map_svc_xprt_close", i1 false, i1 false}
!1132 = !{ptr @__bpf_trace_tp_map_svc_xprt_detach, !377, !"__bpf_trace_tp_map_svc_xprt_detach", i1 false, i1 false}
!1133 = !{ptr @__bpf_trace_tp_map_svc_xprt_free, !381, !"__bpf_trace_tp_map_svc_xprt_free", i1 false, i1 false}
!1134 = !{ptr @__bpf_trace_tp_map_svc_xprt_accept, !385, !"__bpf_trace_tp_map_svc_xprt_accept", i1 false, i1 false}
!1135 = !{ptr @__bpf_trace_tp_map_svc_xprt_dequeue, !389, !"__bpf_trace_tp_map_svc_xprt_dequeue", i1 false, i1 false}
!1136 = !{ptr @__bpf_trace_tp_map_svc_wake_up, !393, !"__bpf_trace_tp_map_svc_wake_up", i1 false, i1 false}
!1137 = !{ptr @__bpf_trace_tp_map_svc_alloc_arg_err, !397, !"__bpf_trace_tp_map_svc_alloc_arg_err", i1 false, i1 false}
!1138 = !{ptr @__bpf_trace_tp_map_svc_stats_latency, !401, !"__bpf_trace_tp_map_svc_stats_latency", i1 false, i1 false}
!1139 = !{ptr @__bpf_trace_tp_map_svc_defer_drop, !405, !"__bpf_trace_tp_map_svc_defer_drop", i1 false, i1 false}
!1140 = !{ptr @__bpf_trace_tp_map_svc_defer_queue, !409, !"__bpf_trace_tp_map_svc_defer_queue", i1 false, i1 false}
!1141 = !{ptr @__bpf_trace_tp_map_svc_defer_recv, !413, !"__bpf_trace_tp_map_svc_defer_recv", i1 false, i1 false}
!1142 = !{ptr @__bpf_trace_tp_map_svcsock_new_socket, !417, !"__bpf_trace_tp_map_svcsock_new_socket", i1 false, i1 false}
!1143 = !{ptr @__bpf_trace_tp_map_svcsock_marker, !421, !"__bpf_trace_tp_map_svcsock_marker", i1 false, i1 false}
!1144 = !{ptr @__bpf_trace_tp_map_svcsock_udp_send, !425, !"__bpf_trace_tp_map_svcsock_udp_send", i1 false, i1 false}
!1145 = !{ptr @__bpf_trace_tp_map_svcsock_udp_recv, !429, !"__bpf_trace_tp_map_svcsock_udp_recv", i1 false, i1 false}
!1146 = !{ptr @__bpf_trace_tp_map_svcsock_udp_recv_err, !433, !"__bpf_trace_tp_map_svcsock_udp_recv_err", i1 false, i1 false}
!1147 = !{ptr @__bpf_trace_tp_map_svcsock_tcp_send, !437, !"__bpf_trace_tp_map_svcsock_tcp_send", i1 false, i1 false}
!1148 = !{ptr @__bpf_trace_tp_map_svcsock_tcp_recv, !441, !"__bpf_trace_tp_map_svcsock_tcp_recv", i1 false, i1 false}
!1149 = !{ptr @__bpf_trace_tp_map_svcsock_tcp_recv_eagain, !445, !"__bpf_trace_tp_map_svcsock_tcp_recv_eagain", i1 false, i1 false}
!1150 = !{ptr @__bpf_trace_tp_map_svcsock_tcp_recv_err, !449, !"__bpf_trace_tp_map_svcsock_tcp_recv_err", i1 false, i1 false}
!1151 = !{ptr @__bpf_trace_tp_map_svcsock_data_ready, !453, !"__bpf_trace_tp_map_svcsock_data_ready", i1 false, i1 false}
!1152 = !{ptr @__bpf_trace_tp_map_svcsock_write_space, !457, !"__bpf_trace_tp_map_svcsock_write_space", i1 false, i1 false}
!1153 = !{ptr @__bpf_trace_tp_map_svcsock_tcp_recv_short, !461, !"__bpf_trace_tp_map_svcsock_tcp_recv_short", i1 false, i1 false}
!1154 = !{ptr @__bpf_trace_tp_map_svcsock_tcp_state, !465, !"__bpf_trace_tp_map_svcsock_tcp_state", i1 false, i1 false}
!1155 = !{ptr @__bpf_trace_tp_map_svcsock_accept_err, !469, !"__bpf_trace_tp_map_svcsock_accept_err", i1 false, i1 false}
!1156 = !{ptr @__bpf_trace_tp_map_svcsock_getpeername_err, !473, !"__bpf_trace_tp_map_svcsock_getpeername_err", i1 false, i1 false}
!1157 = !{ptr @__bpf_trace_tp_map_cache_entry_expired, !477, !"__bpf_trace_tp_map_cache_entry_expired", i1 false, i1 false}
!1158 = !{ptr @__bpf_trace_tp_map_cache_entry_upcall, !481, !"__bpf_trace_tp_map_cache_entry_upcall", i1 false, i1 false}
!1159 = !{ptr @__bpf_trace_tp_map_cache_entry_update, !485, !"__bpf_trace_tp_map_cache_entry_update", i1 false, i1 false}
!1160 = !{ptr @__bpf_trace_tp_map_cache_entry_make_negative, !489, !"__bpf_trace_tp_map_cache_entry_make_negative", i1 false, i1 false}
!1161 = !{ptr @__bpf_trace_tp_map_cache_entry_no_listener, !493, !"__bpf_trace_tp_map_cache_entry_no_listener", i1 false, i1 false}
!1162 = !{ptr @__bpf_trace_tp_map_svc_register, !497, !"__bpf_trace_tp_map_svc_register", i1 false, i1 false}
!1163 = !{ptr @__bpf_trace_tp_map_svc_noregister, !501, !"__bpf_trace_tp_map_svc_noregister", i1 false, i1 false}
!1164 = !{ptr @__bpf_trace_tp_map_svc_unregister, !505, !"__bpf_trace_tp_map_svc_unregister", i1 false, i1 false}
!1165 = !{ptr @__ksymtab_xprtiod_workqueue, !1166, !"__ksymtab_xprtiod_workqueue", i1 false, i1 false}
!1166 = !{!"../net/sunrpc/sched.c", i32 58, i32 1}
!1167 = !{ptr @__ksymtab_rpc_task_timeout, !1168, !"__ksymtab_rpc_task_timeout", i1 false, i1 false}
!1168 = !{!"../net/sunrpc/sched.c", i32 72, i32 1}
!1169 = !{ptr @__ksymtab_rpc_init_priority_wait_queue, !1170, !"__ksymtab_rpc_init_priority_wait_queue", i1 false, i1 false}
!1170 = !{!"../net/sunrpc/sched.c", i32 255, i32 1}
!1171 = !{ptr @__ksymtab_rpc_init_wait_queue, !1172, !"__ksymtab_rpc_init_wait_queue", i1 false, i1 false}
!1172 = !{!"../net/sunrpc/sched.c", i32 261, i32 1}
!1173 = !{ptr @__ksymtab_rpc_destroy_wait_queue, !1174, !"__ksymtab_rpc_destroy_wait_queue", i1 false, i1 false}
!1174 = !{!"../net/sunrpc/sched.c", i32 267, i32 1}
!1175 = !{ptr @__ksymtab___rpc_wait_for_completion_task, !1176, !"__ksymtab___rpc_wait_for_completion_task", i1 false, i1 false}
!1176 = !{!"../net/sunrpc/sched.c", i32 342, i32 1}
!1177 = !{ptr @__ksymtab_rpc_sleep_on_timeout, !1178, !"__ksymtab_rpc_sleep_on_timeout", i1 false, i1 false}
!1178 = !{!"../net/sunrpc/sched.c", i32 439, i32 1}
!1179 = distinct !{null, !1180, !"__already_done", i1 false, i1 false}
!1180 = !{!"../net/sunrpc/sched.c", i32 449, i32 2}
!1181 = !{ptr @.str.54, !1180, !"<string literal>", i1 false, i1 false}
!1182 = !{ptr @__ksymtab_rpc_sleep_on, !1183, !"__ksymtab_rpc_sleep_on", i1 false, i1 false}
!1183 = !{!"../net/sunrpc/sched.c", i32 457, i32 1}
!1184 = !{ptr @__ksymtab_rpc_sleep_on_priority_timeout, !1185, !"__ksymtab_rpc_sleep_on_priority_timeout", i1 false, i1 false}
!1185 = !{!"../net/sunrpc/sched.c", i32 473, i32 1}
!1186 = distinct !{null, !1187, !"__already_done", i1 false, i1 false}
!1187 = !{!"../net/sunrpc/sched.c", i32 481, i32 2}
!1188 = !{ptr @__ksymtab_rpc_sleep_on_priority, !1189, !"__ksymtab_rpc_sleep_on_priority", i1 false, i1 false}
!1189 = !{!"../net/sunrpc/sched.c", i32 490, i32 1}
!1190 = !{ptr @__ksymtab_rpc_wake_up_queued_task, !1191, !"__ksymtab_rpc_wake_up_queued_task", i1 false, i1 false}
!1191 = !{!"../net/sunrpc/sched.c", i32 558, i32 1}
!1192 = !{ptr @__ksymtab_rpc_wake_up_first, !1193, !"__ksymtab_rpc_wake_up_first", i1 false, i1 false}
!1193 = !{!"../net/sunrpc/sched.c", i32 680, i32 1}
!1194 = !{ptr @__ksymtab_rpc_wake_up_next, !1195, !"__ksymtab_rpc_wake_up_next", i1 false, i1 false}
!1195 = !{!"../net/sunrpc/sched.c", i32 694, i32 1}
!1196 = !{ptr @__ksymtab_rpc_wake_up, !1197, !"__ksymtab_rpc_wake_up", i1 false, i1 false}
!1197 = !{!"../net/sunrpc/sched.c", i32 725, i32 1}
!1198 = !{ptr @__ksymtab_rpc_wake_up_status, !1199, !"__ksymtab_rpc_wake_up_status", i1 false, i1 false}
!1199 = !{!"../net/sunrpc/sched.c", i32 757, i32 1}
!1200 = !{ptr @__ksymtab_rpc_delay, !1201, !"__ksymtab_rpc_delay", i1 false, i1 false}
!1201 = !{!"../net/sunrpc/sched.c", i32 798, i32 1}
!1202 = !{ptr @__ksymtab_rpc_exit, !1203, !"__ksymtab_rpc_exit", i1 false, i1 false}
!1203 = !{!"../net/sunrpc/sched.c", i32 871, i32 1}
!1204 = !{ptr @__ksymtab_rpc_malloc, !1205, !"__ksymtab_rpc_malloc", i1 false, i1 false}
!1205 = !{!"../net/sunrpc/sched.c", i32 1043, i32 1}
!1206 = !{ptr @__ksymtab_rpc_free, !1207, !"__ksymtab_rpc_free", i1 false, i1 false}
!1207 = !{!"../net/sunrpc/sched.c", i32 1064, i32 1}
!1208 = !{ptr @__ksymtab_rpc_put_task, !1209, !"__ksymtab_rpc_put_task", i1 false, i1 false}
!1209 = !{!"../net/sunrpc/sched.c", i32 1190, i32 1}
!1210 = !{ptr @__ksymtab_rpc_put_task_async, !1211, !"__ksymtab_rpc_put_task_async", i1 false, i1 false}
!1211 = !{!"../net/sunrpc/sched.c", i32 1196, i32 1}
!1212 = !{ptr @.str.55, !1213, !"<string literal>", i1 false, i1 false}
!1213 = !{!"../net/sunrpc/sched.c", i32 1290, i32 36}
!1214 = !{ptr @.str.56, !1215, !"<string literal>", i1 false, i1 false}
!1215 = !{!"../net/sunrpc/sched.c", i32 1294, i32 37}
!1216 = !{ptr @.str.57, !1217, !"<string literal>", i1 false, i1 false}
!1217 = !{!"../net/sunrpc/sched.c", i32 1300, i32 39}
!1218 = !{ptr @rpc_task_slabp, !1219, !"rpc_task_slabp", i1 false, i1 false}
!1219 = !{!"../net/sunrpc/sched.c", i32 39, i32 27}
!1220 = !{ptr @rpc_buffer_slabp, !1221, !"rpc_buffer_slabp", i1 false, i1 false}
!1221 = !{!"../net/sunrpc/sched.c", i32 40, i32 27}
!1222 = !{ptr @rpc_task_mempool, !1223, !"rpc_task_mempool", i1 false, i1 false}
!1223 = !{!"../net/sunrpc/sched.c", i32 41, i32 19}
!1224 = !{ptr @rpc_buffer_mempool, !1225, !"rpc_buffer_mempool", i1 false, i1 false}
!1225 = !{!"../net/sunrpc/sched.c", i32 42, i32 19}
!1226 = !{ptr @delay_queue, !1227, !"delay_queue", i1 false, i1 false}
!1227 = !{!"../net/sunrpc/sched.c", i32 51, i32 30}
!1228 = !{ptr @rpciod_workqueue, !1229, !"rpciod_workqueue", i1 false, i1 false}
!1229 = !{!"../net/sunrpc/sched.c", i32 56, i32 26}
!1230 = !{ptr @xprtiod_workqueue, !1231, !"xprtiod_workqueue", i1 false, i1 false}
!1231 = !{!"../net/sunrpc/sched.c", i32 57, i32 26}
!1232 = !{ptr @__tpstrtab_rpc_xdr_sendto, !1, !"__tpstrtab_rpc_xdr_sendto", i1 false, i1 false}
!1233 = !{ptr @__tpstrtab_rpc_xdr_recvfrom, !5, !"__tpstrtab_rpc_xdr_recvfrom", i1 false, i1 false}
!1234 = !{ptr @__tpstrtab_rpc_xdr_reply_pages, !9, !"__tpstrtab_rpc_xdr_reply_pages", i1 false, i1 false}
!1235 = !{ptr @__tpstrtab_rpc_clnt_free, !13, !"__tpstrtab_rpc_clnt_free", i1 false, i1 false}
!1236 = !{ptr @__tpstrtab_rpc_clnt_killall, !17, !"__tpstrtab_rpc_clnt_killall", i1 false, i1 false}
!1237 = !{ptr @__tpstrtab_rpc_clnt_shutdown, !21, !"__tpstrtab_rpc_clnt_shutdown", i1 false, i1 false}
!1238 = !{ptr @__tpstrtab_rpc_clnt_release, !25, !"__tpstrtab_rpc_clnt_release", i1 false, i1 false}
!1239 = !{ptr @__tpstrtab_rpc_clnt_replace_xprt, !29, !"__tpstrtab_rpc_clnt_replace_xprt", i1 false, i1 false}
!1240 = !{ptr @__tpstrtab_rpc_clnt_replace_xprt_err, !33, !"__tpstrtab_rpc_clnt_replace_xprt_err", i1 false, i1 false}
!1241 = !{ptr @__tpstrtab_rpc_clnt_new, !37, !"__tpstrtab_rpc_clnt_new", i1 false, i1 false}
!1242 = !{ptr @__tpstrtab_rpc_clnt_new_err, !41, !"__tpstrtab_rpc_clnt_new_err", i1 false, i1 false}
!1243 = !{ptr @__tpstrtab_rpc_clnt_clone_err, !45, !"__tpstrtab_rpc_clnt_clone_err", i1 false, i1 false}
!1244 = !{ptr @__tpstrtab_rpc_call_status, !49, !"__tpstrtab_rpc_call_status", i1 false, i1 false}
!1245 = !{ptr @__tpstrtab_rpc_connect_status, !53, !"__tpstrtab_rpc_connect_status", i1 false, i1 false}
!1246 = !{ptr @__tpstrtab_rpc_timeout_status, !57, !"__tpstrtab_rpc_timeout_status", i1 false, i1 false}
!1247 = !{ptr @__tpstrtab_rpc_retry_refresh_status, !61, !"__tpstrtab_rpc_retry_refresh_status", i1 false, i1 false}
!1248 = !{ptr @__tpstrtab_rpc_refresh_status, !65, !"__tpstrtab_rpc_refresh_status", i1 false, i1 false}
!1249 = !{ptr @__tpstrtab_rpc_request, !69, !"__tpstrtab_rpc_request", i1 false, i1 false}
!1250 = !{ptr @__tpstrtab_rpc_task_begin, !73, !"__tpstrtab_rpc_task_begin", i1 false, i1 false}
!1251 = !{ptr @__tpstrtab_rpc_task_run_action, !77, !"__tpstrtab_rpc_task_run_action", i1 false, i1 false}
!1252 = !{ptr @__tpstrtab_rpc_task_sync_sleep, !81, !"__tpstrtab_rpc_task_sync_sleep", i1 false, i1 false}
!1253 = !{ptr @__tpstrtab_rpc_task_sync_wake, !85, !"__tpstrtab_rpc_task_sync_wake", i1 false, i1 false}
!1254 = !{ptr @__tpstrtab_rpc_task_complete, !89, !"__tpstrtab_rpc_task_complete", i1 false, i1 false}
!1255 = !{ptr @__tpstrtab_rpc_task_timeout, !93, !"__tpstrtab_rpc_task_timeout", i1 false, i1 false}
!1256 = !{ptr @__tpstrtab_rpc_task_signalled, !97, !"__tpstrtab_rpc_task_signalled", i1 false, i1 false}
!1257 = !{ptr @__tpstrtab_rpc_task_end, !101, !"__tpstrtab_rpc_task_end", i1 false, i1 false}
!1258 = !{ptr @__tpstrtab_rpc_task_call_done, !105, !"__tpstrtab_rpc_task_call_done", i1 false, i1 false}
!1259 = !{ptr @__tpstrtab_rpc_task_sleep, !109, !"__tpstrtab_rpc_task_sleep", i1 false, i1 false}
!1260 = !{ptr @__tpstrtab_rpc_task_wakeup, !113, !"__tpstrtab_rpc_task_wakeup", i1 false, i1 false}
!1261 = !{ptr @__tpstrtab_rpc_bad_callhdr, !117, !"__tpstrtab_rpc_bad_callhdr", i1 false, i1 false}
!1262 = !{ptr @__tpstrtab_rpc_bad_verifier, !121, !"__tpstrtab_rpc_bad_verifier", i1 false, i1 false}
!1263 = !{ptr @__tpstrtab_rpc__prog_unavail, !125, !"__tpstrtab_rpc__prog_unavail", i1 false, i1 false}
!1264 = !{ptr @__tpstrtab_rpc__prog_mismatch, !129, !"__tpstrtab_rpc__prog_mismatch", i1 false, i1 false}
!1265 = !{ptr @__tpstrtab_rpc__proc_unavail, !133, !"__tpstrtab_rpc__proc_unavail", i1 false, i1 false}
!1266 = !{ptr @__tpstrtab_rpc__garbage_args, !137, !"__tpstrtab_rpc__garbage_args", i1 false, i1 false}
!1267 = !{ptr @__tpstrtab_rpc__unparsable, !141, !"__tpstrtab_rpc__unparsable", i1 false, i1 false}
!1268 = !{ptr @__tpstrtab_rpc__mismatch, !145, !"__tpstrtab_rpc__mismatch", i1 false, i1 false}
!1269 = !{ptr @__tpstrtab_rpc__stale_creds, !149, !"__tpstrtab_rpc__stale_creds", i1 false, i1 false}
!1270 = !{ptr @__tpstrtab_rpc__bad_creds, !153, !"__tpstrtab_rpc__bad_creds", i1 false, i1 false}
!1271 = !{ptr @__tpstrtab_rpc__auth_tooweak, !157, !"__tpstrtab_rpc__auth_tooweak", i1 false, i1 false}
!1272 = !{ptr @__tpstrtab_rpcb_prog_unavail_err, !161, !"__tpstrtab_rpcb_prog_unavail_err", i1 false, i1 false}
!1273 = !{ptr @__tpstrtab_rpcb_timeout_err, !165, !"__tpstrtab_rpcb_timeout_err", i1 false, i1 false}
!1274 = !{ptr @__tpstrtab_rpcb_bind_version_err, !169, !"__tpstrtab_rpcb_bind_version_err", i1 false, i1 false}
!1275 = !{ptr @__tpstrtab_rpcb_unreachable_err, !173, !"__tpstrtab_rpcb_unreachable_err", i1 false, i1 false}
!1276 = !{ptr @__tpstrtab_rpcb_unrecognized_err, !177, !"__tpstrtab_rpcb_unrecognized_err", i1 false, i1 false}
!1277 = !{ptr @__tpstrtab_rpc_buf_alloc, !181, !"__tpstrtab_rpc_buf_alloc", i1 false, i1 false}
!1278 = !{ptr @__tpstrtab_rpc_call_rpcerror, !185, !"__tpstrtab_rpc_call_rpcerror", i1 false, i1 false}
!1279 = !{ptr @__tpstrtab_rpc_stats_latency, !189, !"__tpstrtab_rpc_stats_latency", i1 false, i1 false}
!1280 = !{ptr @__tpstrtab_rpc_xdr_overflow, !193, !"__tpstrtab_rpc_xdr_overflow", i1 false, i1 false}
!1281 = !{ptr @__tpstrtab_rpc_xdr_alignment, !197, !"__tpstrtab_rpc_xdr_alignment", i1 false, i1 false}
!1282 = !{ptr @__tpstrtab_rpc_socket_state_change, !201, !"__tpstrtab_rpc_socket_state_change", i1 false, i1 false}
!1283 = !{ptr @__tpstrtab_rpc_socket_connect, !205, !"__tpstrtab_rpc_socket_connect", i1 false, i1 false}
!1284 = !{ptr @__tpstrtab_rpc_socket_error, !209, !"__tpstrtab_rpc_socket_error", i1 false, i1 false}
!1285 = !{ptr @__tpstrtab_rpc_socket_reset_connection, !213, !"__tpstrtab_rpc_socket_reset_connection", i1 false, i1 false}
!1286 = !{ptr @__tpstrtab_rpc_socket_close, !217, !"__tpstrtab_rpc_socket_close", i1 false, i1 false}
!1287 = !{ptr @__tpstrtab_rpc_socket_shutdown, !221, !"__tpstrtab_rpc_socket_shutdown", i1 false, i1 false}
!1288 = !{ptr @__tpstrtab_rpc_socket_nospace, !225, !"__tpstrtab_rpc_socket_nospace", i1 false, i1 false}
!1289 = !{ptr @__tpstrtab_xprt_create, !229, !"__tpstrtab_xprt_create", i1 false, i1 false}
!1290 = !{ptr @__tpstrtab_xprt_connect, !233, !"__tpstrtab_xprt_connect", i1 false, i1 false}
!1291 = !{ptr @__tpstrtab_xprt_disconnect_auto, !237, !"__tpstrtab_xprt_disconnect_auto", i1 false, i1 false}
!1292 = !{ptr @__tpstrtab_xprt_disconnect_done, !241, !"__tpstrtab_xprt_disconnect_done", i1 false, i1 false}
!1293 = !{ptr @__tpstrtab_xprt_disconnect_force, !245, !"__tpstrtab_xprt_disconnect_force", i1 false, i1 false}
!1294 = !{ptr @__tpstrtab_xprt_disconnect_cleanup, !249, !"__tpstrtab_xprt_disconnect_cleanup", i1 false, i1 false}
!1295 = !{ptr @__tpstrtab_xprt_destroy, !253, !"__tpstrtab_xprt_destroy", i1 false, i1 false}
!1296 = !{ptr @__tpstrtab_xprt_timer, !257, !"__tpstrtab_xprt_timer", i1 false, i1 false}
!1297 = !{ptr @__tpstrtab_xprt_lookup_rqst, !261, !"__tpstrtab_xprt_lookup_rqst", i1 false, i1 false}
!1298 = !{ptr @__tpstrtab_xprt_transmit, !265, !"__tpstrtab_xprt_transmit", i1 false, i1 false}
!1299 = !{ptr @__tpstrtab_xprt_retransmit, !269, !"__tpstrtab_xprt_retransmit", i1 false, i1 false}
!1300 = !{ptr @__tpstrtab_xprt_ping, !273, !"__tpstrtab_xprt_ping", i1 false, i1 false}
!1301 = !{ptr @__tpstrtab_xprt_reserve_xprt, !277, !"__tpstrtab_xprt_reserve_xprt", i1 false, i1 false}
!1302 = !{ptr @__tpstrtab_xprt_release_xprt, !281, !"__tpstrtab_xprt_release_xprt", i1 false, i1 false}
!1303 = !{ptr @__tpstrtab_xprt_reserve_cong, !285, !"__tpstrtab_xprt_reserve_cong", i1 false, i1 false}
!1304 = !{ptr @__tpstrtab_xprt_release_cong, !289, !"__tpstrtab_xprt_release_cong", i1 false, i1 false}
!1305 = !{ptr @__tpstrtab_xprt_get_cong, !293, !"__tpstrtab_xprt_get_cong", i1 false, i1 false}
!1306 = !{ptr @__tpstrtab_xprt_put_cong, !297, !"__tpstrtab_xprt_put_cong", i1 false, i1 false}
!1307 = !{ptr @__tpstrtab_xprt_reserve, !301, !"__tpstrtab_xprt_reserve", i1 false, i1 false}
!1308 = !{ptr @__tpstrtab_xs_stream_read_data, !305, !"__tpstrtab_xs_stream_read_data", i1 false, i1 false}
!1309 = !{ptr @__tpstrtab_xs_stream_read_request, !309, !"__tpstrtab_xs_stream_read_request", i1 false, i1 false}
!1310 = !{ptr @__tpstrtab_rpcb_getport, !313, !"__tpstrtab_rpcb_getport", i1 false, i1 false}
!1311 = !{ptr @__tpstrtab_rpcb_setport, !317, !"__tpstrtab_rpcb_setport", i1 false, i1 false}
!1312 = !{ptr @__tpstrtab_pmap_register, !321, !"__tpstrtab_pmap_register", i1 false, i1 false}
!1313 = !{ptr @__tpstrtab_rpcb_register, !325, !"__tpstrtab_rpcb_register", i1 false, i1 false}
!1314 = !{ptr @__tpstrtab_rpcb_unregister, !329, !"__tpstrtab_rpcb_unregister", i1 false, i1 false}
!1315 = !{ptr @__tpstrtab_svc_xdr_recvfrom, !333, !"__tpstrtab_svc_xdr_recvfrom", i1 false, i1 false}
!1316 = !{ptr @__tpstrtab_svc_xdr_sendto, !337, !"__tpstrtab_svc_xdr_sendto", i1 false, i1 false}
!1317 = !{ptr @__tpstrtab_svc_authenticate, !341, !"__tpstrtab_svc_authenticate", i1 false, i1 false}
!1318 = !{ptr @__tpstrtab_svc_process, !345, !"__tpstrtab_svc_process", i1 false, i1 false}
!1319 = !{ptr @__tpstrtab_svc_defer, !349, !"__tpstrtab_svc_defer", i1 false, i1 false}
!1320 = !{ptr @__tpstrtab_svc_drop, !353, !"__tpstrtab_svc_drop", i1 false, i1 false}
!1321 = !{ptr @__tpstrtab_svc_send, !357, !"__tpstrtab_svc_send", i1 false, i1 false}
!1322 = !{ptr @__tpstrtab_svc_xprt_create_err, !361, !"__tpstrtab_svc_xprt_create_err", i1 false, i1 false}
!1323 = !{ptr @__tpstrtab_svc_xprt_enqueue, !365, !"__tpstrtab_svc_xprt_enqueue", i1 false, i1 false}
!1324 = !{ptr @__tpstrtab_svc_xprt_no_write_space, !369, !"__tpstrtab_svc_xprt_no_write_space", i1 false, i1 false}
!1325 = !{ptr @__tpstrtab_svc_xprt_close, !373, !"__tpstrtab_svc_xprt_close", i1 false, i1 false}
!1326 = !{ptr @__tpstrtab_svc_xprt_detach, !377, !"__tpstrtab_svc_xprt_detach", i1 false, i1 false}
!1327 = !{ptr @__tpstrtab_svc_xprt_free, !381, !"__tpstrtab_svc_xprt_free", i1 false, i1 false}
!1328 = !{ptr @__tpstrtab_svc_xprt_accept, !385, !"__tpstrtab_svc_xprt_accept", i1 false, i1 false}
!1329 = !{ptr @__tpstrtab_svc_xprt_dequeue, !389, !"__tpstrtab_svc_xprt_dequeue", i1 false, i1 false}
!1330 = !{ptr @__tpstrtab_svc_wake_up, !393, !"__tpstrtab_svc_wake_up", i1 false, i1 false}
!1331 = !{ptr @__tpstrtab_svc_alloc_arg_err, !397, !"__tpstrtab_svc_alloc_arg_err", i1 false, i1 false}
!1332 = !{ptr @__tpstrtab_svc_stats_latency, !401, !"__tpstrtab_svc_stats_latency", i1 false, i1 false}
!1333 = !{ptr @__tpstrtab_svc_defer_drop, !405, !"__tpstrtab_svc_defer_drop", i1 false, i1 false}
!1334 = !{ptr @__tpstrtab_svc_defer_queue, !409, !"__tpstrtab_svc_defer_queue", i1 false, i1 false}
!1335 = !{ptr @__tpstrtab_svc_defer_recv, !413, !"__tpstrtab_svc_defer_recv", i1 false, i1 false}
!1336 = !{ptr @__tpstrtab_svcsock_new_socket, !417, !"__tpstrtab_svcsock_new_socket", i1 false, i1 false}
!1337 = !{ptr @__tpstrtab_svcsock_marker, !421, !"__tpstrtab_svcsock_marker", i1 false, i1 false}
!1338 = !{ptr @__tpstrtab_svcsock_udp_send, !425, !"__tpstrtab_svcsock_udp_send", i1 false, i1 false}
!1339 = !{ptr @__tpstrtab_svcsock_udp_recv, !429, !"__tpstrtab_svcsock_udp_recv", i1 false, i1 false}
!1340 = !{ptr @__tpstrtab_svcsock_udp_recv_err, !433, !"__tpstrtab_svcsock_udp_recv_err", i1 false, i1 false}
!1341 = !{ptr @__tpstrtab_svcsock_tcp_send, !437, !"__tpstrtab_svcsock_tcp_send", i1 false, i1 false}
!1342 = !{ptr @__tpstrtab_svcsock_tcp_recv, !441, !"__tpstrtab_svcsock_tcp_recv", i1 false, i1 false}
!1343 = !{ptr @__tpstrtab_svcsock_tcp_recv_eagain, !445, !"__tpstrtab_svcsock_tcp_recv_eagain", i1 false, i1 false}
!1344 = !{ptr @__tpstrtab_svcsock_tcp_recv_err, !449, !"__tpstrtab_svcsock_tcp_recv_err", i1 false, i1 false}
!1345 = !{ptr @__tpstrtab_svcsock_data_ready, !453, !"__tpstrtab_svcsock_data_ready", i1 false, i1 false}
!1346 = !{ptr @__tpstrtab_svcsock_write_space, !457, !"__tpstrtab_svcsock_write_space", i1 false, i1 false}
!1347 = !{ptr @__tpstrtab_svcsock_tcp_recv_short, !461, !"__tpstrtab_svcsock_tcp_recv_short", i1 false, i1 false}
!1348 = !{ptr @__tpstrtab_svcsock_tcp_state, !465, !"__tpstrtab_svcsock_tcp_state", i1 false, i1 false}
!1349 = !{ptr @__tpstrtab_svcsock_accept_err, !469, !"__tpstrtab_svcsock_accept_err", i1 false, i1 false}
!1350 = !{ptr @__tpstrtab_svcsock_getpeername_err, !473, !"__tpstrtab_svcsock_getpeername_err", i1 false, i1 false}
!1351 = !{ptr @__tpstrtab_cache_entry_expired, !477, !"__tpstrtab_cache_entry_expired", i1 false, i1 false}
!1352 = !{ptr @__tpstrtab_cache_entry_upcall, !481, !"__tpstrtab_cache_entry_upcall", i1 false, i1 false}
!1353 = !{ptr @__tpstrtab_cache_entry_update, !485, !"__tpstrtab_cache_entry_update", i1 false, i1 false}
!1354 = !{ptr @__tpstrtab_cache_entry_make_negative, !489, !"__tpstrtab_cache_entry_make_negative", i1 false, i1 false}
!1355 = !{ptr @__tpstrtab_cache_entry_no_listener, !493, !"__tpstrtab_cache_entry_no_listener", i1 false, i1 false}
!1356 = !{ptr @__tpstrtab_svc_register, !497, !"__tpstrtab_svc_register", i1 false, i1 false}
!1357 = !{ptr @__tpstrtab_svc_noregister, !501, !"__tpstrtab_svc_noregister", i1 false, i1 false}
!1358 = !{ptr @__tpstrtab_svc_unregister, !505, !"__tpstrtab_svc_unregister", i1 false, i1 false}
!1359 = !{ptr @str__sunrpc__trace_system_name, !1360, !"str__sunrpc__trace_system_name", i1 false, i1 false}
!1360 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!1361 = !{ptr @.str.58, !704, !"<string literal>", i1 false, i1 false}
!1362 = !{ptr @.str.59, !704, !"<string literal>", i1 false, i1 false}
!1363 = !{ptr @.str.60, !704, !"<string literal>", i1 false, i1 false}
!1364 = !{ptr @.str.61, !704, !"<string literal>", i1 false, i1 false}
!1365 = !{ptr @.str.62, !704, !"<string literal>", i1 false, i1 false}
!1366 = !{ptr @.str.63, !704, !"<string literal>", i1 false, i1 false}
!1367 = !{ptr @.str.64, !704, !"<string literal>", i1 false, i1 false}
!1368 = !{ptr @.str.65, !704, !"<string literal>", i1 false, i1 false}
!1369 = !{ptr @.str.66, !704, !"<string literal>", i1 false, i1 false}
!1370 = !{ptr @.str.67, !704, !"<string literal>", i1 false, i1 false}
!1371 = !{ptr @.str.68, !704, !"<string literal>", i1 false, i1 false}
!1372 = !{ptr @.str.69, !704, !"<string literal>", i1 false, i1 false}
!1373 = !{ptr @trace_event_fields_rpc_xdr_buf_class, !704, !"trace_event_fields_rpc_xdr_buf_class", i1 false, i1 false}
!1374 = !{ptr @trace_event_type_funcs_rpc_xdr_buf_class, !704, !"trace_event_type_funcs_rpc_xdr_buf_class", i1 false, i1 false}
!1375 = !{ptr @.str.70, !704, !"<string literal>", i1 false, i1 false}
!1376 = !{ptr @print_fmt_rpc_xdr_buf_class, !704, !"print_fmt_rpc_xdr_buf_class", i1 false, i1 false}
!1377 = !{ptr @trace_event_fields_rpc_clnt_class, !712, !"trace_event_fields_rpc_clnt_class", i1 false, i1 false}
!1378 = !{ptr @trace_event_type_funcs_rpc_clnt_class, !712, !"trace_event_type_funcs_rpc_clnt_class", i1 false, i1 false}
!1379 = !{ptr @.str.71, !712, !"<string literal>", i1 false, i1 false}
!1380 = !{ptr @print_fmt_rpc_clnt_class, !712, !"print_fmt_rpc_clnt_class", i1 false, i1 false}
!1381 = !{ptr @.str.72, !37, !"<string literal>", i1 false, i1 false}
!1382 = !{ptr @.str.73, !37, !"<string literal>", i1 false, i1 false}
!1383 = !{ptr @.str.74, !37, !"<string literal>", i1 false, i1 false}
!1384 = !{ptr @.str.75, !37, !"<string literal>", i1 false, i1 false}
!1385 = !{ptr @.str.76, !37, !"<string literal>", i1 false, i1 false}
!1386 = !{ptr @.str.77, !37, !"<string literal>", i1 false, i1 false}
!1387 = !{ptr @trace_event_fields_rpc_clnt_new, !37, !"trace_event_fields_rpc_clnt_new", i1 false, i1 false}
!1388 = !{ptr @trace_event_type_funcs_rpc_clnt_new, !37, !"trace_event_type_funcs_rpc_clnt_new", i1 false, i1 false}
!1389 = !{ptr @.str.78, !37, !"<string literal>", i1 false, i1 false}
!1390 = !{ptr @print_fmt_rpc_clnt_new, !37, !"print_fmt_rpc_clnt_new", i1 false, i1 false}
!1391 = !{ptr @.str.79, !41, !"<string literal>", i1 false, i1 false}
!1392 = !{ptr @.str.80, !41, !"<string literal>", i1 false, i1 false}
!1393 = !{ptr @trace_event_fields_rpc_clnt_new_err, !41, !"trace_event_fields_rpc_clnt_new_err", i1 false, i1 false}
!1394 = !{ptr @trace_event_type_funcs_rpc_clnt_new_err, !41, !"trace_event_type_funcs_rpc_clnt_new_err", i1 false, i1 false}
!1395 = !{ptr @.str.81, !41, !"<string literal>", i1 false, i1 false}
!1396 = !{ptr @print_fmt_rpc_clnt_new_err, !41, !"print_fmt_rpc_clnt_new_err", i1 false, i1 false}
!1397 = !{ptr @trace_event_fields_rpc_clnt_clone_err, !45, !"trace_event_fields_rpc_clnt_clone_err", i1 false, i1 false}
!1398 = !{ptr @trace_event_type_funcs_rpc_clnt_clone_err, !45, !"trace_event_type_funcs_rpc_clnt_clone_err", i1 false, i1 false}
!1399 = !{ptr @.str.82, !45, !"<string literal>", i1 false, i1 false}
!1400 = !{ptr @print_fmt_rpc_clnt_clone_err, !45, !"print_fmt_rpc_clnt_clone_err", i1 false, i1 false}
!1401 = !{ptr @.str.83, !735, !"<string literal>", i1 false, i1 false}
!1402 = !{ptr @trace_event_fields_rpc_task_status, !735, !"trace_event_fields_rpc_task_status", i1 false, i1 false}
!1403 = !{ptr @trace_event_type_funcs_rpc_task_status, !735, !"trace_event_type_funcs_rpc_task_status", i1 false, i1 false}
!1404 = !{ptr @.str.84, !735, !"<string literal>", i1 false, i1 false}
!1405 = !{ptr @print_fmt_rpc_task_status, !735, !"print_fmt_rpc_task_status", i1 false, i1 false}
!1406 = !{ptr @.str.85, !69, !"<string literal>", i1 false, i1 false}
!1407 = !{ptr @.str.86, !69, !"<string literal>", i1 false, i1 false}
!1408 = !{ptr @.str.87, !69, !"<string literal>", i1 false, i1 false}
!1409 = !{ptr @.str.88, !69, !"<string literal>", i1 false, i1 false}
!1410 = !{ptr @.str.89, !69, !"<string literal>", i1 false, i1 false}
!1411 = !{ptr @trace_event_fields_rpc_request, !69, !"trace_event_fields_rpc_request", i1 false, i1 false}
!1412 = !{ptr @trace_event_type_funcs_rpc_request, !69, !"trace_event_type_funcs_rpc_request", i1 false, i1 false}
!1413 = !{ptr @.str.90, !69, !"<string literal>", i1 false, i1 false}
!1414 = !{ptr @.str.91, !69, !"<string literal>", i1 false, i1 false}
!1415 = !{ptr @.str.92, !69, !"<string literal>", i1 false, i1 false}
!1416 = !{ptr @print_fmt_rpc_request, !69, !"print_fmt_rpc_request", i1 false, i1 false}
!1417 = !{ptr @.str.93, !750, !"<string literal>", i1 false, i1 false}
!1418 = !{ptr @.str.94, !750, !"<string literal>", i1 false, i1 false}
!1419 = !{ptr @.str.95, !750, !"<string literal>", i1 false, i1 false}
!1420 = !{ptr @.str.96, !750, !"<string literal>", i1 false, i1 false}
!1421 = !{ptr @.str.97, !750, !"<string literal>", i1 false, i1 false}
!1422 = !{ptr @trace_event_fields_rpc_task_running, !750, !"trace_event_fields_rpc_task_running", i1 false, i1 false}
!1423 = !{ptr @trace_event_type_funcs_rpc_task_running, !750, !"trace_event_type_funcs_rpc_task_running", i1 false, i1 false}
!1424 = !{ptr @.str.98, !750, !"<string literal>", i1 false, i1 false}
!1425 = !{ptr @.str.99, !750, !"<string literal>", i1 false, i1 false}
!1426 = !{ptr @.str.100, !750, !"<string literal>", i1 false, i1 false}
!1427 = !{ptr @.str.101, !750, !"<string literal>", i1 false, i1 false}
!1428 = !{ptr @.str.102, !750, !"<string literal>", i1 false, i1 false}
!1429 = !{ptr @.str.103, !750, !"<string literal>", i1 false, i1 false}
!1430 = !{ptr @.str.104, !750, !"<string literal>", i1 false, i1 false}
!1431 = !{ptr @.str.105, !750, !"<string literal>", i1 false, i1 false}
!1432 = !{ptr @.str.106, !750, !"<string literal>", i1 false, i1 false}
!1433 = !{ptr @.str.107, !750, !"<string literal>", i1 false, i1 false}
!1434 = !{ptr @.str.108, !750, !"<string literal>", i1 false, i1 false}
!1435 = !{ptr @.str.109, !750, !"<string literal>", i1 false, i1 false}
!1436 = !{ptr @.str.110, !750, !"<string literal>", i1 false, i1 false}
!1437 = !{ptr @.str.111, !750, !"<string literal>", i1 false, i1 false}
!1438 = !{ptr @.str.112, !750, !"<string literal>", i1 false, i1 false}
!1439 = !{ptr @.str.113, !750, !"<string literal>", i1 false, i1 false}
!1440 = !{ptr @trace_raw_output_rpc_task_running.__flags, !750, !"__flags", i1 false, i1 false}
!1441 = !{ptr @.str.114, !750, !"<string literal>", i1 false, i1 false}
!1442 = !{ptr @.str.116, !750, !"<string literal>", i1 false, i1 false}
!1443 = !{ptr @.str.117, !750, !"<string literal>", i1 false, i1 false}
!1444 = !{ptr @.str.118, !750, !"<string literal>", i1 false, i1 false}
!1445 = !{ptr @.str.119, !750, !"<string literal>", i1 false, i1 false}
!1446 = !{ptr @.str.120, !750, !"<string literal>", i1 false, i1 false}
!1447 = !{ptr @.str.121, !750, !"<string literal>", i1 false, i1 false}
!1448 = !{ptr @.str.122, !750, !"<string literal>", i1 false, i1 false}
!1449 = !{ptr @trace_raw_output_rpc_task_running.__flags.115, !750, !"__flags", i1 false, i1 false}
!1450 = !{ptr @print_fmt_rpc_task_running, !750, !"print_fmt_rpc_task_running", i1 false, i1 false}
!1451 = !{ptr @.str.123, !1452, !"<string literal>", i1 false, i1 false}
!1452 = !{!"../include/linux/sunrpc/sched.h", i32 275, i32 37}
!1453 = !{ptr @.str.124, !770, !"<string literal>", i1 false, i1 false}
!1454 = !{ptr @.str.125, !770, !"<string literal>", i1 false, i1 false}
!1455 = !{ptr @trace_event_fields_rpc_task_queued, !770, !"trace_event_fields_rpc_task_queued", i1 false, i1 false}
!1456 = !{ptr @trace_event_type_funcs_rpc_task_queued, !770, !"trace_event_type_funcs_rpc_task_queued", i1 false, i1 false}
!1457 = !{ptr @.str.126, !770, !"<string literal>", i1 false, i1 false}
!1458 = !{ptr @trace_raw_output_rpc_task_queued.__flags, !770, !"__flags", i1 false, i1 false}
!1459 = !{ptr @trace_raw_output_rpc_task_queued.__flags.127, !770, !"__flags", i1 false, i1 false}
!1460 = !{ptr @print_fmt_rpc_task_queued, !770, !"print_fmt_rpc_task_queued", i1 false, i1 false}
!1461 = !{ptr @trace_event_fields_rpc_failure, !776, !"trace_event_fields_rpc_failure", i1 false, i1 false}
!1462 = !{ptr @trace_event_type_funcs_rpc_failure, !776, !"trace_event_type_funcs_rpc_failure", i1 false, i1 false}
!1463 = !{ptr @.str.128, !776, !"<string literal>", i1 false, i1 false}
!1464 = !{ptr @print_fmt_rpc_failure, !776, !"print_fmt_rpc_failure", i1 false, i1 false}
!1465 = !{ptr @.str.129, !782, !"<string literal>", i1 false, i1 false}
!1466 = !{ptr @.str.130, !782, !"<string literal>", i1 false, i1 false}
!1467 = !{ptr @.str.131, !782, !"<string literal>", i1 false, i1 false}
!1468 = !{ptr @trace_event_fields_rpc_reply_event, !782, !"trace_event_fields_rpc_reply_event", i1 false, i1 false}
!1469 = !{ptr @trace_event_type_funcs_rpc_reply_event, !782, !"trace_event_type_funcs_rpc_reply_event", i1 false, i1 false}
!1470 = !{ptr @.str.132, !782, !"<string literal>", i1 false, i1 false}
!1471 = !{ptr @print_fmt_rpc_reply_event, !782, !"print_fmt_rpc_reply_event", i1 false, i1 false}
!1472 = !{ptr @.str.133, !181, !"<string literal>", i1 false, i1 false}
!1473 = !{ptr @.str.134, !181, !"<string literal>", i1 false, i1 false}
!1474 = !{ptr @trace_event_fields_rpc_buf_alloc, !181, !"trace_event_fields_rpc_buf_alloc", i1 false, i1 false}
!1475 = !{ptr @trace_event_type_funcs_rpc_buf_alloc, !181, !"trace_event_type_funcs_rpc_buf_alloc", i1 false, i1 false}
!1476 = !{ptr @.str.135, !181, !"<string literal>", i1 false, i1 false}
!1477 = !{ptr @print_fmt_rpc_buf_alloc, !181, !"print_fmt_rpc_buf_alloc", i1 false, i1 false}
!1478 = !{ptr @.str.136, !185, !"<string literal>", i1 false, i1 false}
!1479 = !{ptr @.str.137, !185, !"<string literal>", i1 false, i1 false}
!1480 = !{ptr @trace_event_fields_rpc_call_rpcerror, !185, !"trace_event_fields_rpc_call_rpcerror", i1 false, i1 false}
!1481 = !{ptr @trace_event_type_funcs_rpc_call_rpcerror, !185, !"trace_event_type_funcs_rpc_call_rpcerror", i1 false, i1 false}
!1482 = !{ptr @.str.138, !185, !"<string literal>", i1 false, i1 false}
!1483 = !{ptr @print_fmt_rpc_call_rpcerror, !185, !"print_fmt_rpc_call_rpcerror", i1 false, i1 false}
!1484 = !{ptr @.str.139, !189, !"<string literal>", i1 false, i1 false}
!1485 = !{ptr @.str.140, !189, !"<string literal>", i1 false, i1 false}
!1486 = !{ptr @.str.141, !189, !"<string literal>", i1 false, i1 false}
!1487 = !{ptr @trace_event_fields_rpc_stats_latency, !189, !"trace_event_fields_rpc_stats_latency", i1 false, i1 false}
!1488 = !{ptr @trace_event_type_funcs_rpc_stats_latency, !189, !"trace_event_type_funcs_rpc_stats_latency", i1 false, i1 false}
!1489 = !{ptr @.str.142, !189, !"<string literal>", i1 false, i1 false}
!1490 = !{ptr @print_fmt_rpc_stats_latency, !189, !"print_fmt_rpc_stats_latency", i1 false, i1 false}
!1491 = !{ptr @.str.143, !193, !"<string literal>", i1 false, i1 false}
!1492 = !{ptr @.str.144, !193, !"<string literal>", i1 false, i1 false}
!1493 = !{ptr @.str.145, !193, !"<string literal>", i1 false, i1 false}
!1494 = !{ptr @.str.146, !193, !"<string literal>", i1 false, i1 false}
!1495 = !{ptr @.str.147, !193, !"<string literal>", i1 false, i1 false}
!1496 = !{ptr @trace_event_fields_rpc_xdr_overflow, !193, !"trace_event_fields_rpc_xdr_overflow", i1 false, i1 false}
!1497 = !{ptr @trace_event_type_funcs_rpc_xdr_overflow, !193, !"trace_event_type_funcs_rpc_xdr_overflow", i1 false, i1 false}
!1498 = !{ptr @.str.148, !193, !"<string literal>", i1 false, i1 false}
!1499 = !{ptr @print_fmt_rpc_xdr_overflow, !193, !"print_fmt_rpc_xdr_overflow", i1 false, i1 false}
!1500 = !{ptr @.str.149, !197, !"<string literal>", i1 false, i1 false}
!1501 = !{ptr @.str.150, !197, !"<string literal>", i1 false, i1 false}
!1502 = !{ptr @trace_event_fields_rpc_xdr_alignment, !197, !"trace_event_fields_rpc_xdr_alignment", i1 false, i1 false}
!1503 = !{ptr @trace_event_type_funcs_rpc_xdr_alignment, !197, !"trace_event_type_funcs_rpc_xdr_alignment", i1 false, i1 false}
!1504 = !{ptr @.str.151, !197, !"<string literal>", i1 false, i1 false}
!1505 = !{ptr @print_fmt_rpc_xdr_alignment, !197, !"print_fmt_rpc_xdr_alignment", i1 false, i1 false}
!1506 = !{ptr @.str.152, !827, !"<string literal>", i1 false, i1 false}
!1507 = !{ptr @.str.153, !827, !"<string literal>", i1 false, i1 false}
!1508 = !{ptr @.str.154, !827, !"<string literal>", i1 false, i1 false}
!1509 = !{ptr @.str.155, !827, !"<string literal>", i1 false, i1 false}
!1510 = !{ptr @.str.156, !827, !"<string literal>", i1 false, i1 false}
!1511 = !{ptr @.str.157, !827, !"<string literal>", i1 false, i1 false}
!1512 = !{ptr @.str.158, !827, !"<string literal>", i1 false, i1 false}
!1513 = !{ptr @trace_event_fields_xs_socket_event, !827, !"trace_event_fields_xs_socket_event", i1 false, i1 false}
!1514 = !{ptr @trace_event_fields_xs_socket_event_done, !829, !"trace_event_fields_xs_socket_event_done", i1 false, i1 false}
!1515 = !{ptr @trace_event_type_funcs_xs_socket_event, !827, !"trace_event_type_funcs_xs_socket_event", i1 false, i1 false}
!1516 = !{ptr @.str.159, !827, !"<string literal>", i1 false, i1 false}
!1517 = !{ptr @.str.160, !827, !"<string literal>", i1 false, i1 false}
!1518 = !{ptr @.str.161, !827, !"<string literal>", i1 false, i1 false}
!1519 = !{ptr @.str.162, !827, !"<string literal>", i1 false, i1 false}
!1520 = !{ptr @.str.163, !827, !"<string literal>", i1 false, i1 false}
!1521 = !{ptr @.str.164, !827, !"<string literal>", i1 false, i1 false}
!1522 = !{ptr @trace_raw_output_xs_socket_event.symbols, !827, !"symbols", i1 false, i1 false}
!1523 = !{ptr @.str.166, !827, !"<string literal>", i1 false, i1 false}
!1524 = !{ptr @.str.167, !827, !"<string literal>", i1 false, i1 false}
!1525 = !{ptr @.str.168, !827, !"<string literal>", i1 false, i1 false}
!1526 = !{ptr @.str.169, !827, !"<string literal>", i1 false, i1 false}
!1527 = !{ptr @.str.170, !827, !"<string literal>", i1 false, i1 false}
!1528 = !{ptr @.str.171, !827, !"<string literal>", i1 false, i1 false}
!1529 = !{ptr @.str.172, !827, !"<string literal>", i1 false, i1 false}
!1530 = !{ptr @.str.173, !827, !"<string literal>", i1 false, i1 false}
!1531 = !{ptr @.str.174, !827, !"<string literal>", i1 false, i1 false}
!1532 = !{ptr @.str.175, !827, !"<string literal>", i1 false, i1 false}
!1533 = !{ptr @.str.176, !827, !"<string literal>", i1 false, i1 false}
!1534 = !{ptr @trace_raw_output_xs_socket_event.symbols.165, !827, !"symbols", i1 false, i1 false}
!1535 = !{ptr @print_fmt_xs_socket_event, !827, !"print_fmt_xs_socket_event", i1 false, i1 false}
!1536 = !{ptr @trace_event_type_funcs_xs_socket_event_done, !829, !"trace_event_type_funcs_xs_socket_event_done", i1 false, i1 false}
!1537 = !{ptr @.str.177, !829, !"<string literal>", i1 false, i1 false}
!1538 = !{ptr @trace_raw_output_xs_socket_event_done.symbols, !829, !"symbols", i1 false, i1 false}
!1539 = !{ptr @trace_raw_output_xs_socket_event_done.symbols.178, !829, !"symbols", i1 false, i1 false}
!1540 = !{ptr @print_fmt_xs_socket_event_done, !829, !"print_fmt_xs_socket_event_done", i1 false, i1 false}
!1541 = !{ptr @.str.179, !225, !"<string literal>", i1 false, i1 false}
!1542 = !{ptr @.str.180, !225, !"<string literal>", i1 false, i1 false}
!1543 = !{ptr @trace_event_fields_rpc_socket_nospace, !225, !"trace_event_fields_rpc_socket_nospace", i1 false, i1 false}
!1544 = !{ptr @trace_event_type_funcs_rpc_socket_nospace, !225, !"trace_event_type_funcs_rpc_socket_nospace", i1 false, i1 false}
!1545 = !{ptr @.str.181, !225, !"<string literal>", i1 false, i1 false}
!1546 = !{ptr @print_fmt_rpc_socket_nospace, !225, !"print_fmt_rpc_socket_nospace", i1 false, i1 false}
!1547 = !{ptr @.str.182, !846, !"<string literal>", i1 false, i1 false}
!1548 = !{ptr @trace_event_fields_rpc_xprt_lifetime_class, !846, !"trace_event_fields_rpc_xprt_lifetime_class", i1 false, i1 false}
!1549 = !{ptr @trace_event_type_funcs_rpc_xprt_lifetime_class, !846, !"trace_event_type_funcs_rpc_xprt_lifetime_class", i1 false, i1 false}
!1550 = !{ptr @.str.183, !846, !"<string literal>", i1 false, i1 false}
!1551 = !{ptr @.str.184, !846, !"<string literal>", i1 false, i1 false}
!1552 = !{ptr @.str.185, !846, !"<string literal>", i1 false, i1 false}
!1553 = !{ptr @.str.186, !846, !"<string literal>", i1 false, i1 false}
!1554 = !{ptr @.str.187, !846, !"<string literal>", i1 false, i1 false}
!1555 = !{ptr @.str.188, !846, !"<string literal>", i1 false, i1 false}
!1556 = !{ptr @.str.189, !846, !"<string literal>", i1 false, i1 false}
!1557 = !{ptr @.str.190, !846, !"<string literal>", i1 false, i1 false}
!1558 = !{ptr @.str.191, !846, !"<string literal>", i1 false, i1 false}
!1559 = !{ptr @.str.192, !846, !"<string literal>", i1 false, i1 false}
!1560 = !{ptr @trace_raw_output_rpc_xprt_lifetime_class.__flags, !846, !"__flags", i1 false, i1 false}
!1561 = !{ptr @print_fmt_rpc_xprt_lifetime_class, !846, !"print_fmt_rpc_xprt_lifetime_class", i1 false, i1 false}
!1562 = !{ptr @trace_event_fields_rpc_xprt_event, !862, !"trace_event_fields_rpc_xprt_event", i1 false, i1 false}
!1563 = !{ptr @trace_event_type_funcs_rpc_xprt_event, !862, !"trace_event_type_funcs_rpc_xprt_event", i1 false, i1 false}
!1564 = !{ptr @.str.193, !862, !"<string literal>", i1 false, i1 false}
!1565 = !{ptr @print_fmt_rpc_xprt_event, !862, !"print_fmt_rpc_xprt_event", i1 false, i1 false}
!1566 = !{ptr @.str.194, !265, !"<string literal>", i1 false, i1 false}
!1567 = !{ptr @trace_event_fields_xprt_transmit, !265, !"trace_event_fields_xprt_transmit", i1 false, i1 false}
!1568 = !{ptr @trace_event_type_funcs_xprt_transmit, !265, !"trace_event_type_funcs_xprt_transmit", i1 false, i1 false}
!1569 = !{ptr @.str.195, !265, !"<string literal>", i1 false, i1 false}
!1570 = !{ptr @print_fmt_xprt_transmit, !265, !"print_fmt_xprt_transmit", i1 false, i1 false}
!1571 = !{ptr @.str.196, !269, !"<string literal>", i1 false, i1 false}
!1572 = !{ptr @trace_event_fields_xprt_retransmit, !269, !"trace_event_fields_xprt_retransmit", i1 false, i1 false}
!1573 = !{ptr @trace_event_type_funcs_xprt_retransmit, !269, !"trace_event_type_funcs_xprt_retransmit", i1 false, i1 false}
!1574 = !{ptr @.str.197, !269, !"<string literal>", i1 false, i1 false}
!1575 = !{ptr @print_fmt_xprt_retransmit, !269, !"print_fmt_xprt_retransmit", i1 false, i1 false}
!1576 = !{ptr @trace_event_fields_xprt_ping, !273, !"trace_event_fields_xprt_ping", i1 false, i1 false}
!1577 = !{ptr @trace_event_type_funcs_xprt_ping, !273, !"trace_event_type_funcs_xprt_ping", i1 false, i1 false}
!1578 = !{ptr @.str.198, !273, !"<string literal>", i1 false, i1 false}
!1579 = !{ptr @print_fmt_xprt_ping, !273, !"print_fmt_xprt_ping", i1 false, i1 false}
!1580 = !{ptr @.str.199, !877, !"<string literal>", i1 false, i1 false}
!1581 = !{ptr @trace_event_fields_xprt_writelock_event, !877, !"trace_event_fields_xprt_writelock_event", i1 false, i1 false}
!1582 = !{ptr @trace_event_type_funcs_xprt_writelock_event, !877, !"trace_event_type_funcs_xprt_writelock_event", i1 false, i1 false}
!1583 = !{ptr @.str.200, !877, !"<string literal>", i1 false, i1 false}
!1584 = !{ptr @print_fmt_xprt_writelock_event, !877, !"print_fmt_xprt_writelock_event", i1 false, i1 false}
!1585 = !{ptr @.str.201, !883, !"<string literal>", i1 false, i1 false}
!1586 = !{ptr @.str.202, !883, !"<string literal>", i1 false, i1 false}
!1587 = !{ptr @.str.203, !883, !"<string literal>", i1 false, i1 false}
!1588 = !{ptr @trace_event_fields_xprt_cong_event, !883, !"trace_event_fields_xprt_cong_event", i1 false, i1 false}
!1589 = !{ptr @trace_event_type_funcs_xprt_cong_event, !883, !"trace_event_type_funcs_xprt_cong_event", i1 false, i1 false}
!1590 = !{ptr @.str.204, !883, !"<string literal>", i1 false, i1 false}
!1591 = !{ptr @.str.205, !883, !"<string literal>", i1 false, i1 false}
!1592 = !{ptr @print_fmt_xprt_cong_event, !883, !"print_fmt_xprt_cong_event", i1 false, i1 false}
!1593 = !{ptr @trace_event_fields_xprt_reserve, !301, !"trace_event_fields_xprt_reserve", i1 false, i1 false}
!1594 = !{ptr @trace_event_type_funcs_xprt_reserve, !301, !"trace_event_type_funcs_xprt_reserve", i1 false, i1 false}
!1595 = !{ptr @.str.206, !301, !"<string literal>", i1 false, i1 false}
!1596 = !{ptr @print_fmt_xprt_reserve, !301, !"print_fmt_xprt_reserve", i1 false, i1 false}
!1597 = !{ptr @.str.207, !305, !"<string literal>", i1 false, i1 false}
!1598 = !{ptr @.str.208, !305, !"<string literal>", i1 false, i1 false}
!1599 = !{ptr @trace_event_fields_xs_stream_read_data, !305, !"trace_event_fields_xs_stream_read_data", i1 false, i1 false}
!1600 = !{ptr @trace_event_type_funcs_xs_stream_read_data, !305, !"trace_event_type_funcs_xs_stream_read_data", i1 false, i1 false}
!1601 = !{ptr @.str.209, !305, !"<string literal>", i1 false, i1 false}
!1602 = !{ptr @print_fmt_xs_stream_read_data, !305, !"print_fmt_xs_stream_read_data", i1 false, i1 false}
!1603 = !{ptr @.str.210, !309, !"<string literal>", i1 false, i1 false}
!1604 = !{ptr @trace_event_fields_xs_stream_read_request, !309, !"trace_event_fields_xs_stream_read_request", i1 false, i1 false}
!1605 = !{ptr @trace_event_type_funcs_xs_stream_read_request, !309, !"trace_event_type_funcs_xs_stream_read_request", i1 false, i1 false}
!1606 = !{ptr @.str.211, !309, !"<string literal>", i1 false, i1 false}
!1607 = !{ptr @print_fmt_xs_stream_read_request, !309, !"print_fmt_xs_stream_read_request", i1 false, i1 false}
!1608 = !{ptr @.str.212, !313, !"<string literal>", i1 false, i1 false}
!1609 = !{ptr @.str.213, !313, !"<string literal>", i1 false, i1 false}
!1610 = !{ptr @trace_event_fields_rpcb_getport, !313, !"trace_event_fields_rpcb_getport", i1 false, i1 false}
!1611 = !{ptr @trace_event_type_funcs_rpcb_getport, !313, !"trace_event_type_funcs_rpcb_getport", i1 false, i1 false}
!1612 = !{ptr @.str.214, !313, !"<string literal>", i1 false, i1 false}
!1613 = !{ptr @print_fmt_rpcb_getport, !313, !"print_fmt_rpcb_getport", i1 false, i1 false}
!1614 = !{ptr @trace_event_fields_rpcb_setport, !317, !"trace_event_fields_rpcb_setport", i1 false, i1 false}
!1615 = !{ptr @trace_event_type_funcs_rpcb_setport, !317, !"trace_event_type_funcs_rpcb_setport", i1 false, i1 false}
!1616 = !{ptr @.str.215, !317, !"<string literal>", i1 false, i1 false}
!1617 = !{ptr @print_fmt_rpcb_setport, !317, !"print_fmt_rpcb_setport", i1 false, i1 false}
!1618 = !{ptr @trace_event_fields_pmap_register, !321, !"trace_event_fields_pmap_register", i1 false, i1 false}
!1619 = !{ptr @trace_event_type_funcs_pmap_register, !321, !"trace_event_type_funcs_pmap_register", i1 false, i1 false}
!1620 = !{ptr @.str.216, !321, !"<string literal>", i1 false, i1 false}
!1621 = !{ptr @print_fmt_pmap_register, !321, !"print_fmt_pmap_register", i1 false, i1 false}
!1622 = !{ptr @.str.217, !325, !"<string literal>", i1 false, i1 false}
!1623 = !{ptr @trace_event_fields_rpcb_register, !325, !"trace_event_fields_rpcb_register", i1 false, i1 false}
!1624 = !{ptr @trace_event_type_funcs_rpcb_register, !325, !"trace_event_type_funcs_rpcb_register", i1 false, i1 false}
!1625 = !{ptr @.str.218, !325, !"<string literal>", i1 false, i1 false}
!1626 = !{ptr @print_fmt_rpcb_register, !325, !"print_fmt_rpcb_register", i1 false, i1 false}
!1627 = !{ptr @trace_event_fields_rpcb_unregister, !329, !"trace_event_fields_rpcb_unregister", i1 false, i1 false}
!1628 = !{ptr @trace_event_type_funcs_rpcb_unregister, !329, !"trace_event_type_funcs_rpcb_unregister", i1 false, i1 false}
!1629 = !{ptr @.str.219, !329, !"<string literal>", i1 false, i1 false}
!1630 = !{ptr @print_fmt_rpcb_unregister, !329, !"print_fmt_rpcb_unregister", i1 false, i1 false}
!1631 = !{ptr @trace_event_fields_svc_xdr_msg_class, !917, !"trace_event_fields_svc_xdr_msg_class", i1 false, i1 false}
!1632 = !{ptr @trace_event_type_funcs_svc_xdr_msg_class, !917, !"trace_event_type_funcs_svc_xdr_msg_class", i1 false, i1 false}
!1633 = !{ptr @.str.220, !917, !"<string literal>", i1 false, i1 false}
!1634 = !{ptr @print_fmt_svc_xdr_msg_class, !917, !"print_fmt_svc_xdr_msg_class", i1 false, i1 false}
!1635 = !{ptr @trace_event_fields_svc_xdr_buf_class, !921, !"trace_event_fields_svc_xdr_buf_class", i1 false, i1 false}
!1636 = !{ptr @trace_event_type_funcs_svc_xdr_buf_class, !921, !"trace_event_type_funcs_svc_xdr_buf_class", i1 false, i1 false}
!1637 = !{ptr @.str.221, !921, !"<string literal>", i1 false, i1 false}
!1638 = !{ptr @print_fmt_svc_xdr_buf_class, !921, !"print_fmt_svc_xdr_buf_class", i1 false, i1 false}
!1639 = !{ptr @.str.222, !341, !"<string literal>", i1 false, i1 false}
!1640 = !{ptr @.str.223, !341, !"<string literal>", i1 false, i1 false}
!1641 = !{ptr @trace_event_fields_svc_authenticate, !341, !"trace_event_fields_svc_authenticate", i1 false, i1 false}
!1642 = !{ptr @trace_event_type_funcs_svc_authenticate, !341, !"trace_event_type_funcs_svc_authenticate", i1 false, i1 false}
!1643 = !{ptr @.str.224, !341, !"<string literal>", i1 false, i1 false}
!1644 = !{ptr @trace_raw_output_svc_authenticate.symbols, !341, !"symbols", i1 false, i1 false}
!1645 = !{ptr @.str.226, !341, !"<string literal>", i1 false, i1 false}
!1646 = !{ptr @.str.227, !341, !"<string literal>", i1 false, i1 false}
!1647 = !{ptr @.str.228, !341, !"<string literal>", i1 false, i1 false}
!1648 = !{ptr @.str.229, !341, !"<string literal>", i1 false, i1 false}
!1649 = !{ptr @.str.230, !341, !"<string literal>", i1 false, i1 false}
!1650 = !{ptr @.str.231, !341, !"<string literal>", i1 false, i1 false}
!1651 = !{ptr @.str.232, !341, !"<string literal>", i1 false, i1 false}
!1652 = !{ptr @.str.233, !341, !"<string literal>", i1 false, i1 false}
!1653 = !{ptr @trace_raw_output_svc_authenticate.symbols.225, !341, !"symbols", i1 false, i1 false}
!1654 = !{ptr @print_fmt_svc_authenticate, !341, !"print_fmt_svc_authenticate", i1 false, i1 false}
!1655 = !{ptr @.str.234, !345, !"<string literal>", i1 false, i1 false}
!1656 = !{ptr @.str.235, !345, !"<string literal>", i1 false, i1 false}
!1657 = !{ptr @.str.236, !345, !"<string literal>", i1 false, i1 false}
!1658 = !{ptr @trace_event_fields_svc_process, !345, !"trace_event_fields_svc_process", i1 false, i1 false}
!1659 = !{ptr @trace_event_type_funcs_svc_process, !345, !"trace_event_type_funcs_svc_process", i1 false, i1 false}
!1660 = !{ptr @.str.237, !345, !"<string literal>", i1 false, i1 false}
!1661 = !{ptr @print_fmt_svc_process, !345, !"print_fmt_svc_process", i1 false, i1 false}
!1662 = !{ptr @trace_event_fields_svc_rqst_event, !931, !"trace_event_fields_svc_rqst_event", i1 false, i1 false}
!1663 = !{ptr @trace_event_type_funcs_svc_rqst_event, !931, !"trace_event_type_funcs_svc_rqst_event", i1 false, i1 false}
!1664 = !{ptr @.str.238, !931, !"<string literal>", i1 false, i1 false}
!1665 = !{ptr @.str.239, !931, !"<string literal>", i1 false, i1 false}
!1666 = !{ptr @.str.240, !931, !"<string literal>", i1 false, i1 false}
!1667 = !{ptr @.str.241, !931, !"<string literal>", i1 false, i1 false}
!1668 = !{ptr @.str.242, !931, !"<string literal>", i1 false, i1 false}
!1669 = !{ptr @.str.243, !931, !"<string literal>", i1 false, i1 false}
!1670 = !{ptr @.str.244, !931, !"<string literal>", i1 false, i1 false}
!1671 = !{ptr @.str.245, !931, !"<string literal>", i1 false, i1 false}
!1672 = !{ptr @.str.246, !931, !"<string literal>", i1 false, i1 false}
!1673 = !{ptr @trace_raw_output_svc_rqst_event.__flags, !931, !"__flags", i1 false, i1 false}
!1674 = !{ptr @print_fmt_svc_rqst_event, !931, !"print_fmt_svc_rqst_event", i1 false, i1 false}
!1675 = !{ptr @trace_event_fields_svc_rqst_status, !937, !"trace_event_fields_svc_rqst_status", i1 false, i1 false}
!1676 = !{ptr @trace_event_type_funcs_svc_rqst_status, !937, !"trace_event_type_funcs_svc_rqst_status", i1 false, i1 false}
!1677 = !{ptr @.str.247, !937, !"<string literal>", i1 false, i1 false}
!1678 = !{ptr @trace_raw_output_svc_rqst_status.__flags, !937, !"__flags", i1 false, i1 false}
!1679 = !{ptr @print_fmt_svc_rqst_status, !937, !"print_fmt_svc_rqst_status", i1 false, i1 false}
!1680 = !{ptr @.str.248, !361, !"<string literal>", i1 false, i1 false}
!1681 = !{ptr @.str.249, !361, !"<string literal>", i1 false, i1 false}
!1682 = !{ptr @trace_event_fields_svc_xprt_create_err, !361, !"trace_event_fields_svc_xprt_create_err", i1 false, i1 false}
!1683 = !{ptr @trace_event_type_funcs_svc_xprt_create_err, !361, !"trace_event_type_funcs_svc_xprt_create_err", i1 false, i1 false}
!1684 = !{ptr @.str.250, !361, !"<string literal>", i1 false, i1 false}
!1685 = !{ptr @print_fmt_svc_xprt_create_err, !361, !"print_fmt_svc_xprt_create_err", i1 false, i1 false}
!1686 = !{ptr @.str.251, !365, !"<string literal>", i1 false, i1 false}
!1687 = !{ptr @trace_event_fields_svc_xprt_enqueue, !365, !"trace_event_fields_svc_xprt_enqueue", i1 false, i1 false}
!1688 = !{ptr @trace_event_type_funcs_svc_xprt_enqueue, !365, !"trace_event_type_funcs_svc_xprt_enqueue", i1 false, i1 false}
!1689 = !{ptr @.str.252, !365, !"<string literal>", i1 false, i1 false}
!1690 = !{ptr @.str.253, !365, !"<string literal>", i1 false, i1 false}
!1691 = !{ptr @.str.254, !365, !"<string literal>", i1 false, i1 false}
!1692 = !{ptr @.str.255, !365, !"<string literal>", i1 false, i1 false}
!1693 = !{ptr @.str.256, !365, !"<string literal>", i1 false, i1 false}
!1694 = !{ptr @.str.257, !365, !"<string literal>", i1 false, i1 false}
!1695 = !{ptr @.str.258, !365, !"<string literal>", i1 false, i1 false}
!1696 = !{ptr @.str.259, !365, !"<string literal>", i1 false, i1 false}
!1697 = !{ptr @.str.260, !365, !"<string literal>", i1 false, i1 false}
!1698 = !{ptr @.str.261, !365, !"<string literal>", i1 false, i1 false}
!1699 = !{ptr @.str.262, !365, !"<string literal>", i1 false, i1 false}
!1700 = !{ptr @.str.263, !365, !"<string literal>", i1 false, i1 false}
!1701 = !{ptr @.str.264, !365, !"<string literal>", i1 false, i1 false}
!1702 = !{ptr @.str.265, !365, !"<string literal>", i1 false, i1 false}
!1703 = !{ptr @.str.266, !365, !"<string literal>", i1 false, i1 false}
!1704 = !{ptr @trace_raw_output_svc_xprt_enqueue.__flags, !365, !"__flags", i1 false, i1 false}
!1705 = !{ptr @print_fmt_svc_xprt_enqueue, !365, !"print_fmt_svc_xprt_enqueue", i1 false, i1 false}
!1706 = !{ptr @trace_event_fields_svc_xprt_event, !947, !"trace_event_fields_svc_xprt_event", i1 false, i1 false}
!1707 = !{ptr @trace_event_type_funcs_svc_xprt_event, !947, !"trace_event_type_funcs_svc_xprt_event", i1 false, i1 false}
!1708 = !{ptr @.str.267, !947, !"<string literal>", i1 false, i1 false}
!1709 = !{ptr @trace_raw_output_svc_xprt_event.__flags, !947, !"__flags", i1 false, i1 false}
!1710 = !{ptr @print_fmt_svc_xprt_event, !947, !"print_fmt_svc_xprt_event", i1 false, i1 false}
!1711 = !{ptr @trace_event_fields_svc_xprt_accept, !385, !"trace_event_fields_svc_xprt_accept", i1 false, i1 false}
!1712 = !{ptr @trace_event_type_funcs_svc_xprt_accept, !385, !"trace_event_type_funcs_svc_xprt_accept", i1 false, i1 false}
!1713 = !{ptr @.str.268, !385, !"<string literal>", i1 false, i1 false}
!1714 = !{ptr @print_fmt_svc_xprt_accept, !385, !"print_fmt_svc_xprt_accept", i1 false, i1 false}
!1715 = !{ptr @.str.269, !389, !"<string literal>", i1 false, i1 false}
!1716 = !{ptr @trace_event_fields_svc_xprt_dequeue, !389, !"trace_event_fields_svc_xprt_dequeue", i1 false, i1 false}
!1717 = !{ptr @trace_event_type_funcs_svc_xprt_dequeue, !389, !"trace_event_type_funcs_svc_xprt_dequeue", i1 false, i1 false}
!1718 = !{ptr @.str.270, !389, !"<string literal>", i1 false, i1 false}
!1719 = !{ptr @trace_raw_output_svc_xprt_dequeue.__flags, !389, !"__flags", i1 false, i1 false}
!1720 = !{ptr @print_fmt_svc_xprt_dequeue, !389, !"print_fmt_svc_xprt_dequeue", i1 false, i1 false}
!1721 = !{ptr @trace_event_fields_svc_wake_up, !393, !"trace_event_fields_svc_wake_up", i1 false, i1 false}
!1722 = !{ptr @trace_event_type_funcs_svc_wake_up, !393, !"trace_event_type_funcs_svc_wake_up", i1 false, i1 false}
!1723 = !{ptr @.str.271, !393, !"<string literal>", i1 false, i1 false}
!1724 = !{ptr @print_fmt_svc_wake_up, !393, !"print_fmt_svc_wake_up", i1 false, i1 false}
!1725 = !{ptr @.str.272, !397, !"<string literal>", i1 false, i1 false}
!1726 = !{ptr @trace_event_fields_svc_alloc_arg_err, !397, !"trace_event_fields_svc_alloc_arg_err", i1 false, i1 false}
!1727 = !{ptr @trace_event_type_funcs_svc_alloc_arg_err, !397, !"trace_event_type_funcs_svc_alloc_arg_err", i1 false, i1 false}
!1728 = !{ptr @.str.273, !397, !"<string literal>", i1 false, i1 false}
!1729 = !{ptr @print_fmt_svc_alloc_arg_err, !397, !"print_fmt_svc_alloc_arg_err", i1 false, i1 false}
!1730 = !{ptr @trace_event_fields_svc_stats_latency, !401, !"trace_event_fields_svc_stats_latency", i1 false, i1 false}
!1731 = !{ptr @trace_event_type_funcs_svc_stats_latency, !401, !"trace_event_type_funcs_svc_stats_latency", i1 false, i1 false}
!1732 = !{ptr @.str.274, !401, !"<string literal>", i1 false, i1 false}
!1733 = !{ptr @print_fmt_svc_stats_latency, !401, !"print_fmt_svc_stats_latency", i1 false, i1 false}
!1734 = !{ptr @.str.275, !972, !"<string literal>", i1 false, i1 false}
!1735 = !{ptr @trace_event_fields_svc_deferred_event, !972, !"trace_event_fields_svc_deferred_event", i1 false, i1 false}
!1736 = !{ptr @trace_event_type_funcs_svc_deferred_event, !972, !"trace_event_type_funcs_svc_deferred_event", i1 false, i1 false}
!1737 = !{ptr @.str.276, !972, !"<string literal>", i1 false, i1 false}
!1738 = !{ptr @print_fmt_svc_deferred_event, !972, !"print_fmt_svc_deferred_event", i1 false, i1 false}
!1739 = !{ptr @.str.277, !417, !"<string literal>", i1 false, i1 false}
!1740 = !{ptr @.str.278, !417, !"<string literal>", i1 false, i1 false}
!1741 = !{ptr @.str.279, !417, !"<string literal>", i1 false, i1 false}
!1742 = !{ptr @trace_event_fields_svcsock_new_socket, !417, !"trace_event_fields_svcsock_new_socket", i1 false, i1 false}
!1743 = !{ptr @trace_event_type_funcs_svcsock_new_socket, !417, !"trace_event_type_funcs_svcsock_new_socket", i1 false, i1 false}
!1744 = !{ptr @.str.280, !417, !"<string literal>", i1 false, i1 false}
!1745 = !{ptr @.str.281, !417, !"<string literal>", i1 false, i1 false}
!1746 = !{ptr @.str.282, !417, !"<string literal>", i1 false, i1 false}
!1747 = !{ptr @.str.283, !417, !"<string literal>", i1 false, i1 false}
!1748 = !{ptr @.str.284, !417, !"<string literal>", i1 false, i1 false}
!1749 = !{ptr @.str.285, !417, !"<string literal>", i1 false, i1 false}
!1750 = !{ptr @.str.286, !417, !"<string literal>", i1 false, i1 false}
!1751 = !{ptr @.str.287, !417, !"<string literal>", i1 false, i1 false}
!1752 = !{ptr @trace_raw_output_svcsock_new_socket.symbols, !417, !"symbols", i1 false, i1 false}
!1753 = !{ptr @trace_raw_output_svcsock_new_socket.symbols.288, !417, !"symbols", i1 false, i1 false}
!1754 = !{ptr @.str.289, !417, !"<string literal>", i1 false, i1 false}
!1755 = !{ptr @print_fmt_svcsock_new_socket, !417, !"print_fmt_svcsock_new_socket", i1 false, i1 false}
!1756 = !{ptr @.str.290, !421, !"<string literal>", i1 false, i1 false}
!1757 = !{ptr @.str.291, !421, !"<string literal>", i1 false, i1 false}
!1758 = !{ptr @trace_event_fields_svcsock_marker, !421, !"trace_event_fields_svcsock_marker", i1 false, i1 false}
!1759 = !{ptr @trace_event_type_funcs_svcsock_marker, !421, !"trace_event_type_funcs_svcsock_marker", i1 false, i1 false}
!1760 = !{ptr @.str.292, !421, !"<string literal>", i1 false, i1 false}
!1761 = !{ptr @.str.293, !421, !"<string literal>", i1 false, i1 false}
!1762 = !{ptr @print_fmt_svcsock_marker, !421, !"print_fmt_svcsock_marker", i1 false, i1 false}
!1763 = !{ptr @.str.294, !986, !"<string literal>", i1 false, i1 false}
!1764 = !{ptr @trace_event_fields_svcsock_class, !986, !"trace_event_fields_svcsock_class", i1 false, i1 false}
!1765 = !{ptr @trace_event_type_funcs_svcsock_class, !986, !"trace_event_type_funcs_svcsock_class", i1 false, i1 false}
!1766 = !{ptr @.str.295, !986, !"<string literal>", i1 false, i1 false}
!1767 = !{ptr @trace_raw_output_svcsock_class.__flags, !986, !"__flags", i1 false, i1 false}
!1768 = !{ptr @print_fmt_svcsock_class, !986, !"print_fmt_svcsock_class", i1 false, i1 false}
!1769 = !{ptr @.str.296, !461, !"<string literal>", i1 false, i1 false}
!1770 = !{ptr @.str.297, !461, !"<string literal>", i1 false, i1 false}
!1771 = !{ptr @trace_event_fields_svcsock_tcp_recv_short, !461, !"trace_event_fields_svcsock_tcp_recv_short", i1 false, i1 false}
!1772 = !{ptr @trace_event_type_funcs_svcsock_tcp_recv_short, !461, !"trace_event_type_funcs_svcsock_tcp_recv_short", i1 false, i1 false}
!1773 = !{ptr @.str.298, !461, !"<string literal>", i1 false, i1 false}
!1774 = !{ptr @trace_raw_output_svcsock_tcp_recv_short.__flags, !461, !"__flags", i1 false, i1 false}
!1775 = !{ptr @print_fmt_svcsock_tcp_recv_short, !461, !"print_fmt_svcsock_tcp_recv_short", i1 false, i1 false}
!1776 = !{ptr @trace_event_fields_svcsock_tcp_state, !465, !"trace_event_fields_svcsock_tcp_state", i1 false, i1 false}
!1777 = !{ptr @trace_event_type_funcs_svcsock_tcp_state, !465, !"trace_event_type_funcs_svcsock_tcp_state", i1 false, i1 false}
!1778 = !{ptr @.str.299, !465, !"<string literal>", i1 false, i1 false}
!1779 = !{ptr @trace_raw_output_svcsock_tcp_state.symbols, !465, !"symbols", i1 false, i1 false}
!1780 = !{ptr @trace_raw_output_svcsock_tcp_state.symbols.300, !465, !"symbols", i1 false, i1 false}
!1781 = !{ptr @trace_raw_output_svcsock_tcp_state.__flags, !465, !"__flags", i1 false, i1 false}
!1782 = !{ptr @print_fmt_svcsock_tcp_state, !465, !"print_fmt_svcsock_tcp_state", i1 false, i1 false}
!1783 = !{ptr @.str.301, !1012, !"<string literal>", i1 false, i1 false}
!1784 = !{ptr @trace_event_fields_svcsock_accept_class, !1012, !"trace_event_fields_svcsock_accept_class", i1 false, i1 false}
!1785 = !{ptr @trace_event_type_funcs_svcsock_accept_class, !1012, !"trace_event_type_funcs_svcsock_accept_class", i1 false, i1 false}
!1786 = !{ptr @.str.302, !1012, !"<string literal>", i1 false, i1 false}
!1787 = !{ptr @print_fmt_svcsock_accept_class, !1012, !"print_fmt_svcsock_accept_class", i1 false, i1 false}
!1788 = !{ptr @.str.303, !1018, !"<string literal>", i1 false, i1 false}
!1789 = !{ptr @.str.304, !1018, !"<string literal>", i1 false, i1 false}
!1790 = !{ptr @.str.305, !1018, !"<string literal>", i1 false, i1 false}
!1791 = !{ptr @trace_event_fields_cache_event, !1018, !"trace_event_fields_cache_event", i1 false, i1 false}
!1792 = !{ptr @trace_event_type_funcs_cache_event, !1018, !"trace_event_type_funcs_cache_event", i1 false, i1 false}
!1793 = !{ptr @.str.306, !1018, !"<string literal>", i1 false, i1 false}
!1794 = !{ptr @print_fmt_cache_event, !1018, !"print_fmt_cache_event", i1 false, i1 false}
!1795 = !{ptr @trace_event_fields_register_class, !1030, !"trace_event_fields_register_class", i1 false, i1 false}
!1796 = !{ptr @trace_event_type_funcs_register_class, !1030, !"trace_event_type_funcs_register_class", i1 false, i1 false}
!1797 = !{ptr @.str.307, !1030, !"<string literal>", i1 false, i1 false}
!1798 = !{ptr @.str.308, !1030, !"<string literal>", i1 false, i1 false}
!1799 = !{ptr @.str.309, !1030, !"<string literal>", i1 false, i1 false}
!1800 = !{ptr @trace_raw_output_register_class.symbols, !1030, !"symbols", i1 false, i1 false}
!1801 = !{ptr @print_fmt_register_class, !1030, !"print_fmt_register_class", i1 false, i1 false}
!1802 = !{ptr @trace_event_fields_svc_unregister, !505, !"trace_event_fields_svc_unregister", i1 false, i1 false}
!1803 = !{ptr @trace_event_type_funcs_svc_unregister, !505, !"trace_event_type_funcs_svc_unregister", i1 false, i1 false}
!1804 = !{ptr @.str.310, !505, !"<string literal>", i1 false, i1 false}
!1805 = !{ptr @print_fmt_svc_unregister, !505, !"print_fmt_svc_unregister", i1 false, i1 false}
!1806 = !{ptr @__rpc_init_priority_wait_queue.__key, !1807, !"__key", i1 false, i1 false}
!1807 = !{!"../net/sunrpc/sched.c", i32 239, i32 2}
!1808 = !{ptr @.str.311, !1807, !"<string literal>", i1 false, i1 false}
!1809 = !{ptr @__rpc_init_priority_wait_queue.__key.312, !1810, !"__key", i1 false, i1 false}
!1810 = !{!"../net/sunrpc/sched.c", i32 246, i32 2}
!1811 = !{ptr @.str.313, !1810, !"<string literal>", i1 false, i1 false}
!1812 = !{ptr @__rpc_init_priority_wait_queue.__key.314, !1810, !"__key", i1 false, i1 false}
!1813 = !{ptr @.str.315, !1810, !"<string literal>", i1 false, i1 false}
!1814 = distinct !{null, !93, !"__already_done", i1 false, i1 false}
!1815 = !{ptr @.str.316, !93, !"<string literal>", i1 false, i1 false}
!1816 = distinct !{null, !93, !"__warned", i1 false, i1 false}
!1817 = !{ptr @.str.317, !93, !"<string literal>", i1 false, i1 false}
!1818 = distinct !{null, !1819, !"__already_done", i1 false, i1 false}
!1819 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!1820 = !{ptr @.str.318, !1819, !"<string literal>", i1 false, i1 false}
!1821 = !{ptr @.str.319, !1822, !"<string literal>", i1 false, i1 false}
!1822 = !{!"../include/linux/freezer.h", i32 57, i32 2}
!1823 = distinct !{null, !1824, !"__already_done", i1 false, i1 false}
!1824 = !{!"../net/sunrpc/sched.c", i32 416, i32 6}
!1825 = distinct !{null, !1826, !"__already_done", i1 false, i1 false}
!1826 = !{!"../net/sunrpc/sched.c", i32 409, i32 17}
!1827 = distinct !{null, !1828, !"__already_done", i1 false, i1 false}
!1828 = !{!"../net/sunrpc/sched.c", i32 398, i32 6}
!1829 = distinct !{null, !109, !"__already_done", i1 false, i1 false}
!1830 = distinct !{null, !109, !"__warned", i1 false, i1 false}
!1831 = distinct !{null, !1832, !"__already_done", i1 false, i1 false}
!1832 = !{!"../net/sunrpc/sched.c", i32 389, i32 6}
!1833 = !{ptr @.str.320, !1834, !"<string literal>", i1 false, i1 false}
!1834 = !{!"../net/sunrpc/sched.c", i32 506, i32 3}
!1835 = !{ptr @.str.321, !1834, !"<string literal>", i1 false, i1 false}
!1836 = !{ptr @__rpc_do_wake_up_task_on_wq._entry, !1834, !"_entry", i1 false, i1 false}
!1837 = !{ptr @__rpc_do_wake_up_task_on_wq._entry_ptr, !1834, !"_entry_ptr", i1 false, i1 false}
!1838 = distinct !{null, !113, !"__already_done", i1 false, i1 false}
!1839 = distinct !{null, !113, !"__warned", i1 false, i1 false}
!1840 = distinct !{null, !101, !"__already_done", i1 false, i1 false}
!1841 = distinct !{null, !101, !"__warned", i1 false, i1 false}
!1842 = distinct !{null, !105, !"__already_done", i1 false, i1 false}
!1843 = distinct !{null, !105, !"__warned", i1 false, i1 false}
!1844 = distinct !{null, !97, !"__already_done", i1 false, i1 false}
!1845 = distinct !{null, !97, !"__warned", i1 false, i1 false}
!1846 = !{ptr @rpc_task_set_debuginfo.rpc_pid, !1847, !"rpc_pid", i1 false, i1 false}
!1847 = !{!"../net/sunrpc/sched.c", i32 284, i32 19}
!1848 = distinct !{null, !73, !"__already_done", i1 false, i1 false}
!1849 = distinct !{null, !73, !"__warned", i1 false, i1 false}
!1850 = !{ptr @rpc_make_runnable.__key, !1851, !"__key", i1 false, i1 false}
!1851 = !{!"../net/sunrpc/sched.c", i32 364, i32 3}
!1852 = !{ptr @.str.322, !1851, !"<string literal>", i1 false, i1 false}
!1853 = distinct !{null, !1854, !"__already_done", i1 false, i1 false}
!1854 = !{!"../net/sunrpc/sched.c", i32 888, i32 2}
!1855 = distinct !{null, !77, !"__already_done", i1 false, i1 false}
!1856 = distinct !{null, !77, !"__warned", i1 false, i1 false}
!1857 = distinct !{null, !81, !"__already_done", i1 false, i1 false}
!1858 = distinct !{null, !81, !"__warned", i1 false, i1 false}
!1859 = distinct !{null, !85, !"__already_done", i1 false, i1 false}
!1860 = distinct !{null, !85, !"__warned", i1 false, i1 false}
!1861 = distinct !{null, !1862, !"__already_done", i1 false, i1 false}
!1862 = !{!"../net/sunrpc/sched.c", i32 1200, i32 2}
!1863 = !{ptr @.str.323, !1864, !"<string literal>", i1 false, i1 false}
!1864 = !{!"../include/linux/cred.h", i32 286, i32 3}
!1865 = distinct !{null, !89, !"__already_done", i1 false, i1 false}
!1866 = distinct !{null, !89, !"__warned", i1 false, i1 false}
!1867 = !{ptr @rpc_final_put_task.__key, !1868, !"__key", i1 false, i1 false}
!1868 = !{!"../net/sunrpc/sched.c", i32 1172, i32 3}
!1869 = !{ptr @.str.324, !1870, !"<string literal>", i1 false, i1 false}
!1870 = !{!"../net/sunrpc/sched.c", i32 1240, i32 23}
!1871 = !{ptr @.str.325, !1872, !"<string literal>", i1 false, i1 false}
!1872 = !{!"../net/sunrpc/sched.c", i32 1244, i32 23}
!1873 = !{!"sp"}
!1874 = !{i32 1, !"wchar_size", i32 2}
!1875 = !{i32 1, !"min_enum_size", i32 4}
!1876 = !{i32 8, !"branch-target-enforcement", i32 0}
!1877 = !{i32 8, !"sign-return-address", i32 0}
!1878 = !{i32 8, !"sign-return-address-all", i32 0}
!1879 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1880 = !{i32 7, !"uwtable", i32 1}
!1881 = !{i32 7, !"frame-pointer", i32 2}
!1882 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1883 = !{!"branch_weights", i32 2000, i32 1}
!1884 = !{!"branch_weights", i32 1, i32 2000}
!1885 = !{!"auto-init"}
!1886 = !{i64 732857, i64 732884, i64 732906, i64 732934}
!1887 = !{i64 733265, i64 733292, i64 733325, i64 733346, i64 733373, i64 733399}
!1888 = !{i64 2152769801}
!1889 = !{i64 2148460453}
!1890 = !{i64 2148375162, i64 2148375194, i64 2148375223, i64 2148375257, i64 2148375288, i64 2148375311}
!1891 = !{i64 2148460682}
!1892 = !{i64 2165620653}
!1893 = !{i64 2148985354, i64 2148985359, i64 2148985372, i64 2148985416, i64 2148985450, i64 2148985471}
!1894 = !{i64 2158045175}
!1895 = !{i64 2158045386}
!1896 = !{i64 2149396695}
!1897 = !{i64 2149397731}
!1898 = !{i64 2158062002}
!1899 = !{i64 2158062225}
!1900 = !{i64 2165643981}
!1901 = !{i64 2158028264}
!1902 = !{i64 2158028487}
!1903 = !{i64 2148457412}
!1904 = !{i64 2148372697, i64 2148372729, i64 2148372758, i64 2148372792, i64 2148372823, i64 2148372846}
!1905 = !{i64 2148457641}
!1906 = !{i64 856510, i64 856534, i64 856555, i64 856572, i64 856589}
!1907 = !{i8 0, i8 2}
!1908 = !{i64 2158007160}
!1909 = !{i64 2158007379}
!1910 = !{i64 2165589607}
!1911 = !{i64 2158079122}
!1912 = !{i64 2158079327}
!1913 = !{i64 2158100111}
!1914 = !{i64 2158100318}
!1915 = !{i64 2157917546}
!1916 = !{i64 2157917761}
!1917 = !{i64 2157934521}
!1918 = !{i64 2157934746}
!1919 = !{i64 2157955827}
!1920 = !{i64 2157956052}
!1921 = !{i64 2157973032}
!1922 = !{i64 2157973255}
!1923 = !{i64 2157990143}
!1924 = !{i64 2157990364}
