; ModuleID = '/llk/IR_all_yes/net/sunrpc/xprtrdma/module.c_pt.bc'
source_filename = "../net/sunrpc/xprtrdma/module.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.203 }
%union.anon.203 = type { %struct.anon.204 }
%struct.anon.204 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.205, %struct.trace_event, ptr, ptr, %union.anon.206, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.205 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.206 = type { ptr }
%union.anon.207 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.208 = type { %struct.bpf_raw_event_map }
%union.anon.209 = type { %struct.bpf_raw_event_map }
%union.anon.210 = type { %struct.bpf_raw_event_map }
%union.anon.211 = type { %struct.bpf_raw_event_map }
%union.anon.212 = type { %struct.bpf_raw_event_map }
%union.anon.213 = type { %struct.bpf_raw_event_map }
%union.anon.214 = type { %struct.bpf_raw_event_map }
%union.anon.215 = type { %struct.bpf_raw_event_map }
%union.anon.216 = type { %struct.bpf_raw_event_map }
%union.anon.217 = type { %struct.bpf_raw_event_map }
%union.anon.218 = type { %struct.bpf_raw_event_map }
%union.anon.219 = type { %struct.bpf_raw_event_map }
%union.anon.220 = type { %struct.bpf_raw_event_map }
%union.anon.221 = type { %struct.bpf_raw_event_map }
%union.anon.222 = type { %struct.bpf_raw_event_map }
%union.anon.223 = type { %struct.bpf_raw_event_map }
%union.anon.224 = type { %struct.bpf_raw_event_map }
%union.anon.225 = type { %struct.bpf_raw_event_map }
%union.anon.226 = type { %struct.bpf_raw_event_map }
%union.anon.227 = type { %struct.bpf_raw_event_map }
%union.anon.228 = type { %struct.bpf_raw_event_map }
%union.anon.229 = type { %struct.bpf_raw_event_map }
%union.anon.230 = type { %struct.bpf_raw_event_map }
%union.anon.231 = type { %struct.bpf_raw_event_map }
%union.anon.232 = type { %struct.bpf_raw_event_map }
%union.anon.233 = type { %struct.bpf_raw_event_map }
%union.anon.234 = type { %struct.bpf_raw_event_map }
%union.anon.235 = type { %struct.bpf_raw_event_map }
%union.anon.236 = type { %struct.bpf_raw_event_map }
%union.anon.237 = type { %struct.bpf_raw_event_map }
%union.anon.238 = type { %struct.bpf_raw_event_map }
%union.anon.239 = type { %struct.bpf_raw_event_map }
%union.anon.240 = type { %struct.bpf_raw_event_map }
%union.anon.241 = type { %struct.bpf_raw_event_map }
%union.anon.242 = type { %struct.bpf_raw_event_map }
%union.anon.243 = type { %struct.bpf_raw_event_map }
%union.anon.244 = type { %struct.bpf_raw_event_map }
%union.anon.245 = type { %struct.bpf_raw_event_map }
%union.anon.246 = type { %struct.bpf_raw_event_map }
%union.anon.247 = type { %struct.bpf_raw_event_map }
%union.anon.248 = type { %struct.bpf_raw_event_map }
%union.anon.249 = type { %struct.bpf_raw_event_map }
%union.anon.250 = type { %struct.bpf_raw_event_map }
%union.anon.251 = type { %struct.bpf_raw_event_map }
%union.anon.252 = type { %struct.bpf_raw_event_map }
%union.anon.253 = type { %struct.bpf_raw_event_map }
%union.anon.254 = type { %struct.bpf_raw_event_map }
%union.anon.255 = type { %struct.bpf_raw_event_map }
%union.anon.256 = type { %struct.bpf_raw_event_map }
%union.anon.257 = type { %struct.bpf_raw_event_map }
%union.anon.258 = type { %struct.bpf_raw_event_map }
%union.anon.259 = type { %struct.bpf_raw_event_map }
%union.anon.260 = type { %struct.bpf_raw_event_map }
%union.anon.261 = type { %struct.bpf_raw_event_map }
%union.anon.262 = type { %struct.bpf_raw_event_map }
%union.anon.263 = type { %struct.bpf_raw_event_map }
%union.anon.264 = type { %struct.bpf_raw_event_map }
%union.anon.265 = type { %struct.bpf_raw_event_map }
%union.anon.266 = type { %struct.bpf_raw_event_map }
%union.anon.267 = type { %struct.bpf_raw_event_map }
%union.anon.268 = type { %struct.bpf_raw_event_map }
%union.anon.269 = type { %struct.bpf_raw_event_map }
%union.anon.270 = type { %struct.bpf_raw_event_map }
%union.anon.271 = type { %struct.bpf_raw_event_map }
%union.anon.272 = type { %struct.bpf_raw_event_map }
%union.anon.273 = type { %struct.bpf_raw_event_map }
%union.anon.274 = type { %struct.bpf_raw_event_map }
%union.anon.275 = type { %struct.bpf_raw_event_map }
%union.anon.276 = type { %struct.bpf_raw_event_map }
%union.anon.277 = type { %struct.bpf_raw_event_map }
%union.anon.278 = type { %struct.bpf_raw_event_map }
%union.anon.279 = type { %struct.bpf_raw_event_map }
%union.anon.280 = type { %struct.bpf_raw_event_map }
%union.anon.281 = type { %struct.bpf_raw_event_map }
%union.anon.282 = type { %struct.bpf_raw_event_map }
%union.anon.283 = type { %struct.bpf_raw_event_map }
%union.anon.284 = type { %struct.bpf_raw_event_map }
%union.anon.285 = type { %struct.bpf_raw_event_map }
%union.anon.286 = type { %struct.bpf_raw_event_map }
%union.anon.287 = type { %struct.bpf_raw_event_map }
%union.anon.288 = type { %struct.bpf_raw_event_map }
%union.anon.289 = type { %struct.bpf_raw_event_map }
%union.anon.290 = type { %struct.bpf_raw_event_map }
%union.anon.291 = type { %struct.bpf_raw_event_map }
%union.anon.292 = type { %struct.bpf_raw_event_map }
%union.anon.293 = type { %struct.bpf_raw_event_map }
%union.anon.294 = type { %struct.bpf_raw_event_map }
%union.anon.295 = type { %struct.bpf_raw_event_map }
%union.anon.296 = type { %struct.bpf_raw_event_map }
%union.anon.297 = type { %struct.bpf_raw_event_map }
%union.anon.298 = type { %struct.bpf_raw_event_map }
%union.anon.299 = type { %struct.bpf_raw_event_map }
%union.anon.300 = type { %struct.bpf_raw_event_map }
%union.anon.301 = type { %struct.bpf_raw_event_map }
%union.anon.302 = type { %struct.bpf_raw_event_map }
%union.anon.303 = type { %struct.bpf_raw_event_map }
%union.anon.304 = type { %struct.bpf_raw_event_map }
%struct.trace_print_flags = type { i32, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_rpcrdma_completion_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.rpc_rdma_cid = type { i32, i32 }
%struct.ib_wc = type { %union.anon.137, i32, i32, i32, i32, ptr, %union.anon.138, i32, i32, i32, i16, i8, i8, i32, [6 x i8], i16, i8 }
%union.anon.137 = type { i64 }
%union.anon.138 = type { i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_rpcrdma_send_completion_class = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcrdma_send_flush_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcrdma_mr_completion_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcrdma_receive_completion_class = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcrdma_receive_success_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rpcrdma_receive_flush_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.rpcrdma_rep = type { %struct.ib_cqe, %struct.rpc_rdma_cid, i32, i32, i32, i32, i32, i8, ptr, ptr, ptr, %struct.xdr_buf, %struct.xdr_stream, %struct.llist_node, %struct.ib_recv_wr, %struct.list_head }
%struct.ib_cqe = type { ptr }
%struct.xdr_buf = type { [1 x %struct.kvec], [1 x %struct.kvec], ptr, ptr, i32, i32, i32, i32, i32 }
%struct.kvec = type { ptr, i32 }
%struct.xdr_stream = type { ptr, ptr, ptr, ptr, %struct.kvec, ptr, i32, ptr }
%struct.llist_node = type { ptr }
%struct.ib_recv_wr = type { ptr, %union.anon.161, ptr, i32 }
%union.anon.161 = type { i64 }
%struct.rpc_xprt = type { %struct.kref, ptr, i32, ptr, %struct.__kernel_sockaddr_storage, i32, i32, i32, i32, i32, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.rpc_wait_queue, %struct.list_head, i32, i32, i32, i32, i8, %struct.atomic_t, i32, %struct.list_head, i32, i32, i32, %struct.work_struct, %struct.timer_list, i32, i32, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.spinlock, %struct.spinlock, i32, ptr, %struct.list_head, %struct.atomic_t, ptr, ptr, i32, i32, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.rb_root, %struct.anon.180, ptr, ptr, [6 x ptr], ptr, %struct.callback_head, ptr, ptr, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__kernel_sockaddr_storage = type { %union.anon.173 }
%union.anon.173 = type { ptr, [124 x i8] }
%struct.rpc_wait_queue = type { %struct.spinlock, [4 x %struct.list_head], i8, i8, i8, i16, %struct.rpc_timer, ptr }
%struct.rpc_timer = type { %struct.list_head, i32, %struct.delayed_work }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.rb_root = type { ptr }
%struct.anon.180 = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.callback_head = type { ptr, ptr }
%struct.trace_event_raw_xprtrdma_reply_class = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_rxprt = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_connect_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.rpcrdma_xprt = type { %struct.rpc_xprt, ptr, %struct.rpcrdma_buffer, %struct.delayed_work, %struct.rpc_timeout, %struct.rpcrdma_stats }
%struct.rpcrdma_buffer = type { %struct.spinlock, %struct.list_head, %struct.list_head, i32, i32, i32, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.llist_head, i32, i32, i32, i32, %struct.work_struct }
%struct.llist_head = type { ptr }
%struct.rpc_timeout = type { i32, i32, i32, i32, i8 }
%struct.rpcrdma_stats = type { i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32 }
%struct.rpcrdma_ep = type { %struct.kref, ptr, ptr, i32, i32, ptr, i32, %struct.completion, i32, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.ib_qp_init_attr, %struct.wait_queue_head, ptr, %struct.rpcrdma_connect_private, %struct.rdma_conn_param, i32, i32, i32, i32, %struct.atomic_t, [4 x i8] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.ib_qp_init_attr = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.ib_qp_cap, i32, i32, i32, i32, ptr, i32 }
%struct.ib_qp_cap = type { i32, i32, i32, i32, i32, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.rpcrdma_connect_private = type { i32, i8, i8, i8, i8 }
%struct.rdma_conn_param = type { ptr, i8, i8, i8, i8, i8, i8, i8, i32, i32 }
%struct.rpc_task = type { %struct.atomic_t, i32, %struct.list_head, ptr, ptr, i32, i32, ptr, %union.anon.176, i32, %struct.rpc_message, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i32, i16, i16, i16, i8 }
%union.anon.176 = type { %struct.work_struct }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.trace_event_raw_xprtrdma_rdch_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, i32, [0 x i8] }
%struct.rpc_clnt = type { %struct.refcount_struct, i32, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.spinlock, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i8, ptr, ptr, %struct.atomic_t, i32, [65 x i8], %struct.rpc_pipe_dir_head, ptr, %struct.rpc_rtt, %struct.rpc_timeout, ptr, ptr, ptr, ptr, %union.anon.177, ptr, i32 }
%struct.rpc_pipe_dir_head = type { %struct.list_head, ptr }
%struct.rpc_rtt = type { i32, [5 x i32], [5 x i32], [5 x i32] }
%union.anon.177 = type { %struct.work_struct }
%struct.rpcrdma_mr = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.ib_cqe, %struct.completion, %union.anon.182, ptr, i32, i32, i64, %struct.list_head, %struct.rpc_rdma_cid }
%union.anon.182 = type { %struct.ib_reg_wr }
%struct.ib_reg_wr = type { %struct.ib_send_wr, ptr, i32, i32 }
%struct.ib_send_wr = type { ptr, %union.anon.159, ptr, i32, i32, i32, %union.anon.160 }
%union.anon.159 = type { i64 }
%union.anon.160 = type { i32 }
%struct.trace_event_raw_xprtrdma_wrch_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i64, i32, [0 x i8] }
%struct.rpcrdma_req = type { %struct.list_head, %struct.rpc_rqst, ptr, %struct.xdr_stream, %struct.xdr_buf, %struct.ib_send_wr, ptr, ptr, ptr, ptr, %struct.list_head, %struct.kref, %struct.list_head, %struct.list_head, [260 x %struct.rpcrdma_mr_seg] }
%struct.rpc_rqst = type { ptr, %struct.xdr_buf, %struct.xdr_buf, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.anon.181, %struct.list_head, %struct.list_head, ptr, i32, ptr, i32, i32, i32, %struct.xdr_buf, i32, i32, i32, i64, i32, i32, %struct.atomic_t, i32, i64, i32, %struct.list_head, i32, %struct.list_head }
%union.anon.181 = type { %struct.rb_node }
%struct.rb_node = type { i32, ptr, ptr }
%struct.rpcrdma_mr_seg = type { i32, ptr, i64 }
%struct.trace_event_raw_xprtrdma_mr_class = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, i32, [0 x i8] }
%struct.ib_mr = type { ptr, ptr, i32, i32, i64, i64, i32, i32, i8, %union.anon.127, ptr, ptr, %struct.rdma_restrack_entry }
%union.anon.127 = type { %struct.list_head }
%struct.rdma_restrack_entry = type { i8, i8, %struct.kref, %struct.completion, ptr, ptr, i32, i8, i32 }
%struct.trace_event_raw_xprtrdma_anonymous_mr_class = type { %struct.trace_entry, i32, i32, i32, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_callback_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_inline_thresh = type { %struct.trace_entry, i32, i32, i32, i32, [28 x i8], [28 x i8], [0 x i8] }
%struct.rdma_cm_id = type { ptr, ptr, ptr, ptr, %struct.rdma_route, i32, i32, i32 }
%struct.rdma_route = type { %struct.rdma_addr, ptr, i32 }
%struct.rdma_addr = type { %struct.__kernel_sockaddr_storage, %struct.__kernel_sockaddr_storage, %struct.rdma_dev_addr }
%struct.rdma_dev_addr = type { [32 x i8], [32 x i8], [32 x i8], i16, i32, i32, ptr, ptr, i32, i32 }
%struct.trace_event_raw_xprtrdma_op_connect = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_op_set_cto = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_createmrs = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_nomrs_err = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_marshal = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_marshal_failed = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_prepsend_failed = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.rpcrdma_sendctx = type { %struct.ib_cqe, %struct.rpc_rdma_cid, ptr, i32, [0 x %struct.ib_sge] }
%struct.ib_sge = type { i64, i32, i32 }
%struct.trace_event_raw_xprtrdma_post_send = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.ib_cq = type { ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.atomic_t, i32, ptr, %struct.list_head, %union.anon.139, ptr, ptr, i64, i8, i32, %struct.rdma_restrack_entry }
%union.anon.139 = type { %struct.work_struct }
%struct.trace_event_raw_xprtrdma_post_send_err = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_post_recv = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_post_recvs = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_post_recvs_err = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_post_linv_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_frwr_alloc = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_frwr_dereg = type { %struct.trace_entry, i32, i32, i32, i32, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_frwr_sgerr = type { %struct.trace_entry, i32, i64, i32, i32, [0 x i8] }
%struct.scatterlist = type { i32, i32, i32, i32, i32 }
%struct.trace_event_raw_xprtrdma_frwr_maperr = type { %struct.trace_entry, i32, i64, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_dma_maperr = type { %struct.trace_entry, i64, [0 x i8] }
%struct.trace_event_raw_xprtrdma_reply = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_err_vers = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_err_chunk = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_err_unrecognized = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_fixup = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_decode_seg = type { %struct.trace_entry, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_xprtrdma_mrs_zap = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_xprtrdma_cb_setup = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.svc_xprt = type { ptr, ptr, %struct.kref, %struct.list_head, %struct.list_head, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.spinlock, ptr, %struct.list_head, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, [58 x i8], %struct.list_head, ptr, ptr, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.trace_event_raw_svcrdma_accept_class = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.svc_rdma_recv_ctxt = type { %struct.llist_node, %struct.list_head, %struct.ib_recv_wr, %struct.ib_cqe, %struct.rpc_rdma_cid, %struct.ib_sge, ptr, %struct.xdr_stream, i8, i32, i32, i32, i32, %struct.svc_rdma_pcl, %struct.svc_rdma_pcl, ptr, %struct.svc_rdma_pcl, %struct.svc_rdma_pcl }
%struct.svc_rdma_pcl = type { i32, %struct.list_head }
%struct.trace_event_raw_svcrdma_decode_rqst = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_decode_short_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_badreq_event = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.svc_rdma_send_ctxt = type { %struct.llist_node, %struct.rpc_rdma_cid, %struct.ib_send_wr, %struct.ib_cqe, %struct.completion, %struct.xdr_buf, %struct.xdr_stream, ptr, i32, [0 x %struct.ib_sge] }
%struct.trace_event_raw_svcrdma_encode_wseg = type { %struct.trace_entry, i32, i32, i32, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_svcrdma_decode_rseg = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, [0 x i8] }
%struct.svc_rdma_chunk = type { %struct.list_head, i32, i32, i32, i32, [0 x %struct.svc_rdma_segment] }
%struct.svc_rdma_segment = type { i32, i32, i64 }
%struct.trace_event_raw_svcrdma_decode_wseg = type { %struct.trace_entry, i32, i32, i32, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_svcrdma_error_event = type { %struct.trace_entry, i32, [0 x i8] }
%struct.svcxprt_rdma = type { %struct.svc_xprt, ptr, %struct.list_head, i32, i32, i8, %struct.atomic_t, i32, i32, i32, i32, i32, i8, ptr, %struct.spinlock, %struct.llist_head, %struct.spinlock, %struct.llist_head, i32, i32, %struct.list_head, %struct.spinlock, ptr, ptr, ptr, %struct.spinlock, %struct.wait_queue_head, i32, %struct.work_struct, %struct.llist_head, %struct.atomic_t }
%struct.ib_device = type { ptr, %struct.ib_device_ops, [64 x i8], %struct.callback_head, %struct.list_head, %struct.rw_semaphore, %struct.spinlock, %struct.rw_semaphore, %struct.xarray, %struct.mutex, %struct.rwlock_t, ptr, i32, %union.anon.171, [4 x ptr], i64, [64 x i8], i64, i32, i8, i8, i32, %struct.ib_device_attr, ptr, %struct.rdmacg_device, i32, %struct.spinlock, [3 x %struct.list_head], ptr, ptr, %struct.refcount_struct, %struct.completion, %struct.work_struct, ptr, %struct.mutex, %struct.xarray, [16 x i8], i32, i32 }
%struct.ib_device_ops = type { ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%union.anon.171 = type { %struct.ib_core_device }
%struct.ib_core_device = type { %struct.device, %struct.possible_net_t, ptr, %struct.list_head, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.possible_net_t = type { ptr }
%struct.ib_device_attr = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, i32, i32, %struct.ib_odp_caps, i64, i64, %struct.ib_rss_caps, i32, i32, %struct.ib_tm_caps, %struct.ib_cq_caps, i64, i32 }
%struct.ib_odp_caps = type { i64, %struct.anon.162 }
%struct.anon.162 = type { i32, i32, i32, i32 }
%struct.ib_rss_caps = type { i32, i32, i32 }
%struct.ib_tm_caps = type { i32, i32, i32, i32, i32 }
%struct.ib_cq_caps = type { i16, i16 }
%struct.rdmacg_device = type { %struct.list_head, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.trace_event_raw_svcrdma_dma_map_class = type { %struct.trace_entry, i64, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_dma_map_rw_err = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_no_rwctx_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_page_overrun_err = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.svc_rqst = type { %struct.list_head, %struct.callback_head, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, ptr, ptr, ptr, ptr, %struct.svc_cred, ptr, ptr, i32, %struct.xdr_buf, %struct.xdr_stream, %struct.xdr_stream, ptr, %struct.xdr_buf, [260 x ptr], ptr, ptr, ptr, %struct.pagevec, [259 x %struct.kvec], [259 x %struct.bio_vec], i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i32, i32, i32, i64, %struct.cache_req, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr }
%struct.svc_cred = type { %struct.kuid_t, %struct.kgid_t, ptr, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.cache_req = type { ptr, i32 }
%struct.trace_event_raw_svcrdma_small_wrch_err = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_send_pullup = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_send_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_post_send = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_post_recv = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_rq_post_err = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_post_chunk_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_wc_read = type { %struct.trace_entry, i32, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_qp_error = type { %struct.trace_entry, i32, i32, [58 x i8], [0 x i8] }
%struct.ib_event = type { ptr, %union.anon.129, i32 }
%union.anon.129 = type { ptr }
%struct.trace_event_raw_svcrdma_sendqueue_event = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_svcrdma_sq_post_err = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_xprtrdma_inline_thresh = internal constant [23 x i8] c"xprtrdma_inline_thresh\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_inline_thresh = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_inline_thresh }, align 4
@__tracepoint_xprtrdma_inline_thresh = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_inline_thresh, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_inline_thresh, ptr null, ptr @__traceiter_xprtrdma_inline_thresh, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_inline_thresh = internal constant ptr @__tracepoint_xprtrdma_inline_thresh, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_connect = internal constant [17 x i8] c"xprtrdma_connect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_connect = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_connect }, align 4
@__tracepoint_xprtrdma_connect = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_connect, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_connect, ptr null, ptr @__traceiter_xprtrdma_connect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_connect = internal constant ptr @__tracepoint_xprtrdma_connect, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_disconnect = internal constant [20 x i8] c"xprtrdma_disconnect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_disconnect = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_disconnect }, align 4
@__tracepoint_xprtrdma_disconnect = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_disconnect, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_disconnect, ptr null, ptr @__traceiter_xprtrdma_disconnect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_disconnect = internal constant ptr @__tracepoint_xprtrdma_disconnect, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_op_inject_dsc = internal constant [23 x i8] c"xprtrdma_op_inject_dsc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_op_inject_dsc = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_op_inject_dsc }, align 4
@__tracepoint_xprtrdma_op_inject_dsc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_op_inject_dsc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_op_inject_dsc, ptr null, ptr @__traceiter_xprtrdma_op_inject_dsc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_op_inject_dsc = internal constant ptr @__tracepoint_xprtrdma_op_inject_dsc, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_op_connect = internal constant [20 x i8] c"xprtrdma_op_connect\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_op_connect = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_op_connect }, align 4
@__tracepoint_xprtrdma_op_connect = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_op_connect, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_op_connect, ptr null, ptr @__traceiter_xprtrdma_op_connect, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_op_connect = internal constant ptr @__tracepoint_xprtrdma_op_connect, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_op_set_cto = internal constant [20 x i8] c"xprtrdma_op_set_cto\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_op_set_cto = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_op_set_cto }, align 4
@__tracepoint_xprtrdma_op_set_cto = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_op_set_cto, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_op_set_cto, ptr null, ptr @__traceiter_xprtrdma_op_set_cto, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_op_set_cto = internal constant ptr @__tracepoint_xprtrdma_op_set_cto, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_createmrs = internal constant [19 x i8] c"xprtrdma_createmrs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_createmrs = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_createmrs }, align 4
@__tracepoint_xprtrdma_createmrs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_createmrs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_createmrs, ptr null, ptr @__traceiter_xprtrdma_createmrs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_createmrs = internal constant ptr @__tracepoint_xprtrdma_createmrs, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_nomrs_err = internal constant [19 x i8] c"xprtrdma_nomrs_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_nomrs_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_nomrs_err }, align 4
@__tracepoint_xprtrdma_nomrs_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_nomrs_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_nomrs_err, ptr null, ptr @__traceiter_xprtrdma_nomrs_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_nomrs_err = internal constant ptr @__tracepoint_xprtrdma_nomrs_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_chunk_read = internal constant [20 x i8] c"xprtrdma_chunk_read\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_chunk_read = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_chunk_read }, align 4
@__tracepoint_xprtrdma_chunk_read = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_chunk_read, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_chunk_read, ptr null, ptr @__traceiter_xprtrdma_chunk_read, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_chunk_read = internal constant ptr @__tracepoint_xprtrdma_chunk_read, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_chunk_write = internal constant [21 x i8] c"xprtrdma_chunk_write\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_chunk_write = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_chunk_write }, align 4
@__tracepoint_xprtrdma_chunk_write = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_chunk_write, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_chunk_write, ptr null, ptr @__traceiter_xprtrdma_chunk_write, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_chunk_write = internal constant ptr @__tracepoint_xprtrdma_chunk_write, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_chunk_reply = internal constant [21 x i8] c"xprtrdma_chunk_reply\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_chunk_reply = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_chunk_reply }, align 4
@__tracepoint_xprtrdma_chunk_reply = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_chunk_reply, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_chunk_reply, ptr null, ptr @__traceiter_xprtrdma_chunk_reply, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_chunk_reply = internal constant ptr @__tracepoint_xprtrdma_chunk_reply, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_chunk_wp = internal constant [18 x i8] c"xprtrdma_chunk_wp\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_chunk_wp = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_chunk_wp }, align 4
@__tracepoint_xprtrdma_chunk_wp = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_chunk_wp, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_chunk_wp, ptr null, ptr @__traceiter_xprtrdma_chunk_wp, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_chunk_wp = internal constant ptr @__tracepoint_xprtrdma_chunk_wp, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_marshal = internal constant [17 x i8] c"xprtrdma_marshal\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_marshal = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_marshal }, align 4
@__tracepoint_xprtrdma_marshal = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_marshal, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_marshal, ptr null, ptr @__traceiter_xprtrdma_marshal, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_marshal = internal constant ptr @__tracepoint_xprtrdma_marshal, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_marshal_failed = internal constant [24 x i8] c"xprtrdma_marshal_failed\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_marshal_failed = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_marshal_failed }, align 4
@__tracepoint_xprtrdma_marshal_failed = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_marshal_failed, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_marshal_failed, ptr null, ptr @__traceiter_xprtrdma_marshal_failed, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_marshal_failed = internal constant ptr @__tracepoint_xprtrdma_marshal_failed, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_prepsend_failed = internal constant [25 x i8] c"xprtrdma_prepsend_failed\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_prepsend_failed = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_prepsend_failed }, align 4
@__tracepoint_xprtrdma_prepsend_failed = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_prepsend_failed, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_prepsend_failed, ptr null, ptr @__traceiter_xprtrdma_prepsend_failed, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_prepsend_failed = internal constant ptr @__tracepoint_xprtrdma_prepsend_failed, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_post_send = internal constant [19 x i8] c"xprtrdma_post_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_post_send = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_post_send }, align 4
@__tracepoint_xprtrdma_post_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_post_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_post_send, ptr null, ptr @__traceiter_xprtrdma_post_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_post_send = internal constant ptr @__tracepoint_xprtrdma_post_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_post_send_err = internal constant [23 x i8] c"xprtrdma_post_send_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_post_send_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_post_send_err }, align 4
@__tracepoint_xprtrdma_post_send_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_post_send_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_post_send_err, ptr null, ptr @__traceiter_xprtrdma_post_send_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_post_send_err = internal constant ptr @__tracepoint_xprtrdma_post_send_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_post_recv = internal constant [19 x i8] c"xprtrdma_post_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_post_recv = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_post_recv }, align 4
@__tracepoint_xprtrdma_post_recv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_post_recv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_post_recv, ptr null, ptr @__traceiter_xprtrdma_post_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_post_recv = internal constant ptr @__tracepoint_xprtrdma_post_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_post_recvs = internal constant [20 x i8] c"xprtrdma_post_recvs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_post_recvs = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_post_recvs }, align 4
@__tracepoint_xprtrdma_post_recvs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_post_recvs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_post_recvs, ptr null, ptr @__traceiter_xprtrdma_post_recvs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_post_recvs = internal constant ptr @__tracepoint_xprtrdma_post_recvs, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_post_recvs_err = internal constant [24 x i8] c"xprtrdma_post_recvs_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_post_recvs_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_post_recvs_err }, align 4
@__tracepoint_xprtrdma_post_recvs_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_post_recvs_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_post_recvs_err, ptr null, ptr @__traceiter_xprtrdma_post_recvs_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_post_recvs_err = internal constant ptr @__tracepoint_xprtrdma_post_recvs_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_post_linv_err = internal constant [23 x i8] c"xprtrdma_post_linv_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_post_linv_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_post_linv_err }, align 4
@__tracepoint_xprtrdma_post_linv_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_post_linv_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_post_linv_err, ptr null, ptr @__traceiter_xprtrdma_post_linv_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_post_linv_err = internal constant ptr @__tracepoint_xprtrdma_post_linv_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_wc_receive = internal constant [20 x i8] c"xprtrdma_wc_receive\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_wc_receive = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_wc_receive }, align 4
@__tracepoint_xprtrdma_wc_receive = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_wc_receive, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_wc_receive, ptr null, ptr @__traceiter_xprtrdma_wc_receive, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_wc_receive = internal constant ptr @__tracepoint_xprtrdma_wc_receive, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_wc_send = internal constant [17 x i8] c"xprtrdma_wc_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_wc_send = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_wc_send }, align 4
@__tracepoint_xprtrdma_wc_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_wc_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_wc_send, ptr null, ptr @__traceiter_xprtrdma_wc_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_wc_send = internal constant ptr @__tracepoint_xprtrdma_wc_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_wc_fastreg = internal constant [20 x i8] c"xprtrdma_wc_fastreg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_wc_fastreg = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_wc_fastreg }, align 4
@__tracepoint_xprtrdma_wc_fastreg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_wc_fastreg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_wc_fastreg, ptr null, ptr @__traceiter_xprtrdma_wc_fastreg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_wc_fastreg = internal constant ptr @__tracepoint_xprtrdma_wc_fastreg, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_wc_li = internal constant [15 x i8] c"xprtrdma_wc_li\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_wc_li = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_wc_li }, align 4
@__tracepoint_xprtrdma_wc_li = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_wc_li, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_wc_li, ptr null, ptr @__traceiter_xprtrdma_wc_li, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_wc_li = internal constant ptr @__tracepoint_xprtrdma_wc_li, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_wc_li_wake = internal constant [20 x i8] c"xprtrdma_wc_li_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_wc_li_wake = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_wc_li_wake }, align 4
@__tracepoint_xprtrdma_wc_li_wake = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_wc_li_wake, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_wc_li_wake, ptr null, ptr @__traceiter_xprtrdma_wc_li_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_wc_li_wake = internal constant ptr @__tracepoint_xprtrdma_wc_li_wake, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_wc_li_done = internal constant [20 x i8] c"xprtrdma_wc_li_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_wc_li_done = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_wc_li_done }, align 4
@__tracepoint_xprtrdma_wc_li_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_wc_li_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_wc_li_done, ptr null, ptr @__traceiter_xprtrdma_wc_li_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_wc_li_done = internal constant ptr @__tracepoint_xprtrdma_wc_li_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_frwr_alloc = internal constant [20 x i8] c"xprtrdma_frwr_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_frwr_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_frwr_alloc }, align 4
@__tracepoint_xprtrdma_frwr_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_frwr_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_frwr_alloc, ptr null, ptr @__traceiter_xprtrdma_frwr_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_frwr_alloc = internal constant ptr @__tracepoint_xprtrdma_frwr_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_frwr_dereg = internal constant [20 x i8] c"xprtrdma_frwr_dereg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_frwr_dereg = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_frwr_dereg }, align 4
@__tracepoint_xprtrdma_frwr_dereg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_frwr_dereg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_frwr_dereg, ptr null, ptr @__traceiter_xprtrdma_frwr_dereg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_frwr_dereg = internal constant ptr @__tracepoint_xprtrdma_frwr_dereg, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_frwr_sgerr = internal constant [20 x i8] c"xprtrdma_frwr_sgerr\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_frwr_sgerr = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_frwr_sgerr }, align 4
@__tracepoint_xprtrdma_frwr_sgerr = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_frwr_sgerr, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_frwr_sgerr, ptr null, ptr @__traceiter_xprtrdma_frwr_sgerr, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_frwr_sgerr = internal constant ptr @__tracepoint_xprtrdma_frwr_sgerr, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_frwr_maperr = internal constant [21 x i8] c"xprtrdma_frwr_maperr\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_frwr_maperr = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_frwr_maperr }, align 4
@__tracepoint_xprtrdma_frwr_maperr = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_frwr_maperr, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_frwr_maperr, ptr null, ptr @__traceiter_xprtrdma_frwr_maperr, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_frwr_maperr = internal constant ptr @__tracepoint_xprtrdma_frwr_maperr, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_mr_fastreg = internal constant [20 x i8] c"xprtrdma_mr_fastreg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_mr_fastreg = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_mr_fastreg }, align 4
@__tracepoint_xprtrdma_mr_fastreg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_mr_fastreg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_mr_fastreg, ptr null, ptr @__traceiter_xprtrdma_mr_fastreg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_mr_fastreg = internal constant ptr @__tracepoint_xprtrdma_mr_fastreg, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_mr_localinv = internal constant [21 x i8] c"xprtrdma_mr_localinv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_mr_localinv = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_mr_localinv }, align 4
@__tracepoint_xprtrdma_mr_localinv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_mr_localinv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_mr_localinv, ptr null, ptr @__traceiter_xprtrdma_mr_localinv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_mr_localinv = internal constant ptr @__tracepoint_xprtrdma_mr_localinv, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_mr_reminv = internal constant [19 x i8] c"xprtrdma_mr_reminv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_mr_reminv = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_mr_reminv }, align 4
@__tracepoint_xprtrdma_mr_reminv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_mr_reminv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_mr_reminv, ptr null, ptr @__traceiter_xprtrdma_mr_reminv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_mr_reminv = internal constant ptr @__tracepoint_xprtrdma_mr_reminv, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_mr_map = internal constant [16 x i8] c"xprtrdma_mr_map\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_mr_map = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_mr_map }, align 4
@__tracepoint_xprtrdma_mr_map = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_mr_map, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_mr_map, ptr null, ptr @__traceiter_xprtrdma_mr_map, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_mr_map = internal constant ptr @__tracepoint_xprtrdma_mr_map, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_mr_unmap = internal constant [18 x i8] c"xprtrdma_mr_unmap\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_mr_unmap = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_mr_unmap }, align 4
@__tracepoint_xprtrdma_mr_unmap = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_mr_unmap, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_mr_unmap, ptr null, ptr @__traceiter_xprtrdma_mr_unmap, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_mr_unmap = internal constant ptr @__tracepoint_xprtrdma_mr_unmap, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_dma_maperr = internal constant [20 x i8] c"xprtrdma_dma_maperr\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_dma_maperr = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_dma_maperr }, align 4
@__tracepoint_xprtrdma_dma_maperr = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_dma_maperr, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_dma_maperr, ptr null, ptr @__traceiter_xprtrdma_dma_maperr, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_dma_maperr = internal constant ptr @__tracepoint_xprtrdma_dma_maperr, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_reply = internal constant [15 x i8] c"xprtrdma_reply\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_reply = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_reply }, align 4
@__tracepoint_xprtrdma_reply = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_reply, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_reply, ptr null, ptr @__traceiter_xprtrdma_reply, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_reply = internal constant ptr @__tracepoint_xprtrdma_reply, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_reply_vers_err = internal constant [24 x i8] c"xprtrdma_reply_vers_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_reply_vers_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_reply_vers_err }, align 4
@__tracepoint_xprtrdma_reply_vers_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_reply_vers_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_reply_vers_err, ptr null, ptr @__traceiter_xprtrdma_reply_vers_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_reply_vers_err = internal constant ptr @__tracepoint_xprtrdma_reply_vers_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_reply_rqst_err = internal constant [24 x i8] c"xprtrdma_reply_rqst_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_reply_rqst_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_reply_rqst_err }, align 4
@__tracepoint_xprtrdma_reply_rqst_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_reply_rqst_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_reply_rqst_err, ptr null, ptr @__traceiter_xprtrdma_reply_rqst_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_reply_rqst_err = internal constant ptr @__tracepoint_xprtrdma_reply_rqst_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_reply_short_err = internal constant [25 x i8] c"xprtrdma_reply_short_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_reply_short_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_reply_short_err }, align 4
@__tracepoint_xprtrdma_reply_short_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_reply_short_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_reply_short_err, ptr null, ptr @__traceiter_xprtrdma_reply_short_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_reply_short_err = internal constant ptr @__tracepoint_xprtrdma_reply_short_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_reply_hdr_err = internal constant [23 x i8] c"xprtrdma_reply_hdr_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_reply_hdr_err = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_reply_hdr_err }, align 4
@__tracepoint_xprtrdma_reply_hdr_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_reply_hdr_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_reply_hdr_err, ptr null, ptr @__traceiter_xprtrdma_reply_hdr_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_reply_hdr_err = internal constant ptr @__tracepoint_xprtrdma_reply_hdr_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_err_vers = internal constant [18 x i8] c"xprtrdma_err_vers\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_err_vers = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_err_vers }, align 4
@__tracepoint_xprtrdma_err_vers = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_err_vers, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_err_vers, ptr null, ptr @__traceiter_xprtrdma_err_vers, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_err_vers = internal constant ptr @__tracepoint_xprtrdma_err_vers, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_err_chunk = internal constant [19 x i8] c"xprtrdma_err_chunk\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_err_chunk = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_err_chunk }, align 4
@__tracepoint_xprtrdma_err_chunk = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_err_chunk, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_err_chunk, ptr null, ptr @__traceiter_xprtrdma_err_chunk, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_err_chunk = internal constant ptr @__tracepoint_xprtrdma_err_chunk, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_err_unrecognized = internal constant [26 x i8] c"xprtrdma_err_unrecognized\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_err_unrecognized = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_err_unrecognized }, align 4
@__tracepoint_xprtrdma_err_unrecognized = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_err_unrecognized, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_err_unrecognized, ptr null, ptr @__traceiter_xprtrdma_err_unrecognized, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_err_unrecognized = internal constant ptr @__tracepoint_xprtrdma_err_unrecognized, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_fixup = internal constant [15 x i8] c"xprtrdma_fixup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_fixup = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_fixup }, align 4
@__tracepoint_xprtrdma_fixup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_fixup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_fixup, ptr null, ptr @__traceiter_xprtrdma_fixup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_fixup = internal constant ptr @__tracepoint_xprtrdma_fixup, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_decode_seg = internal constant [20 x i8] c"xprtrdma_decode_seg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_decode_seg = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_decode_seg }, align 4
@__tracepoint_xprtrdma_decode_seg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_decode_seg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_decode_seg, ptr null, ptr @__traceiter_xprtrdma_decode_seg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_decode_seg = internal constant ptr @__tracepoint_xprtrdma_decode_seg, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_mrs_zap = internal constant [17 x i8] c"xprtrdma_mrs_zap\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_mrs_zap = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_mrs_zap }, align 4
@__tracepoint_xprtrdma_mrs_zap = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_mrs_zap, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_mrs_zap, ptr null, ptr @__traceiter_xprtrdma_mrs_zap, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_mrs_zap = internal constant ptr @__tracepoint_xprtrdma_mrs_zap, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_cb_setup = internal constant [18 x i8] c"xprtrdma_cb_setup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_cb_setup = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_cb_setup }, align 4
@__tracepoint_xprtrdma_cb_setup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_cb_setup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_cb_setup, ptr null, ptr @__traceiter_xprtrdma_cb_setup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_cb_setup = internal constant ptr @__tracepoint_xprtrdma_cb_setup, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_cb_call = internal constant [17 x i8] c"xprtrdma_cb_call\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_cb_call = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_cb_call }, align 4
@__tracepoint_xprtrdma_cb_call = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_cb_call, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_cb_call, ptr null, ptr @__traceiter_xprtrdma_cb_call, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_cb_call = internal constant ptr @__tracepoint_xprtrdma_cb_call, section "__tracepoints_ptrs", align 4
@__tpstrtab_xprtrdma_cb_reply = internal constant [18 x i8] c"xprtrdma_cb_reply\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xprtrdma_cb_reply = dso_local global %struct.static_call_key { ptr @__traceiter_xprtrdma_cb_reply }, align 4
@__tracepoint_xprtrdma_cb_reply = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xprtrdma_cb_reply, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xprtrdma_cb_reply, ptr null, ptr @__traceiter_xprtrdma_cb_reply, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xprtrdma_cb_reply = internal constant ptr @__tracepoint_xprtrdma_cb_reply, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_pd_err = internal constant [15 x i8] c"svcrdma_pd_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_pd_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_pd_err }, align 4
@__tracepoint_svcrdma_pd_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_pd_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_pd_err, ptr null, ptr @__traceiter_svcrdma_pd_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_pd_err = internal constant ptr @__tracepoint_svcrdma_pd_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_qp_err = internal constant [15 x i8] c"svcrdma_qp_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_qp_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_qp_err }, align 4
@__tracepoint_svcrdma_qp_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_qp_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_qp_err, ptr null, ptr @__traceiter_svcrdma_qp_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_qp_err = internal constant ptr @__tracepoint_svcrdma_qp_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_fabric_err = internal constant [19 x i8] c"svcrdma_fabric_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_fabric_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_fabric_err }, align 4
@__tracepoint_svcrdma_fabric_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_fabric_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_fabric_err, ptr null, ptr @__traceiter_svcrdma_fabric_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_fabric_err = internal constant ptr @__tracepoint_svcrdma_fabric_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_initdepth_err = internal constant [22 x i8] c"svcrdma_initdepth_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_initdepth_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_initdepth_err }, align 4
@__tracepoint_svcrdma_initdepth_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_initdepth_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_initdepth_err, ptr null, ptr @__traceiter_svcrdma_initdepth_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_initdepth_err = internal constant ptr @__tracepoint_svcrdma_initdepth_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_accept_err = internal constant [19 x i8] c"svcrdma_accept_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_accept_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_accept_err }, align 4
@__tracepoint_svcrdma_accept_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_accept_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_accept_err, ptr null, ptr @__traceiter_svcrdma_accept_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_accept_err = internal constant ptr @__tracepoint_svcrdma_accept_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_rqst = internal constant [20 x i8] c"svcrdma_decode_rqst\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_rqst = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_rqst }, align 4
@__tracepoint_svcrdma_decode_rqst = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_rqst, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_rqst, ptr null, ptr @__traceiter_svcrdma_decode_rqst, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_rqst = internal constant ptr @__tracepoint_svcrdma_decode_rqst, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_short_err = internal constant [25 x i8] c"svcrdma_decode_short_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_short_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_short_err }, align 4
@__tracepoint_svcrdma_decode_short_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_short_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_short_err, ptr null, ptr @__traceiter_svcrdma_decode_short_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_short_err = internal constant ptr @__tracepoint_svcrdma_decode_short_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_badvers_err = internal constant [27 x i8] c"svcrdma_decode_badvers_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_badvers_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_badvers_err }, align 4
@__tracepoint_svcrdma_decode_badvers_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_badvers_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_badvers_err, ptr null, ptr @__traceiter_svcrdma_decode_badvers_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_badvers_err = internal constant ptr @__tracepoint_svcrdma_decode_badvers_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_drop_err = internal constant [24 x i8] c"svcrdma_decode_drop_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_drop_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_drop_err }, align 4
@__tracepoint_svcrdma_decode_drop_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_drop_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_drop_err, ptr null, ptr @__traceiter_svcrdma_decode_drop_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_drop_err = internal constant ptr @__tracepoint_svcrdma_decode_drop_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_badproc_err = internal constant [27 x i8] c"svcrdma_decode_badproc_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_badproc_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_badproc_err }, align 4
@__tracepoint_svcrdma_decode_badproc_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_badproc_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_badproc_err, ptr null, ptr @__traceiter_svcrdma_decode_badproc_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_badproc_err = internal constant ptr @__tracepoint_svcrdma_decode_badproc_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_parse_err = internal constant [25 x i8] c"svcrdma_decode_parse_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_parse_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_parse_err }, align 4
@__tracepoint_svcrdma_decode_parse_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_parse_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_parse_err, ptr null, ptr @__traceiter_svcrdma_decode_parse_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_parse_err = internal constant ptr @__tracepoint_svcrdma_decode_parse_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_encode_wseg = internal constant [20 x i8] c"svcrdma_encode_wseg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_encode_wseg = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_encode_wseg }, align 4
@__tracepoint_svcrdma_encode_wseg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_encode_wseg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_encode_wseg, ptr null, ptr @__traceiter_svcrdma_encode_wseg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_encode_wseg = internal constant ptr @__tracepoint_svcrdma_encode_wseg, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_rseg = internal constant [20 x i8] c"svcrdma_decode_rseg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_rseg = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_rseg }, align 4
@__tracepoint_svcrdma_decode_rseg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_rseg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_rseg, ptr null, ptr @__traceiter_svcrdma_decode_rseg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_rseg = internal constant ptr @__tracepoint_svcrdma_decode_rseg, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_decode_wseg = internal constant [20 x i8] c"svcrdma_decode_wseg\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_decode_wseg = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_decode_wseg }, align 4
@__tracepoint_svcrdma_decode_wseg = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_decode_wseg, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_decode_wseg, ptr null, ptr @__traceiter_svcrdma_decode_wseg, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_decode_wseg = internal constant ptr @__tracepoint_svcrdma_decode_wseg, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_err_vers = internal constant [17 x i8] c"svcrdma_err_vers\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_err_vers = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_err_vers }, align 4
@__tracepoint_svcrdma_err_vers = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_err_vers, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_err_vers, ptr null, ptr @__traceiter_svcrdma_err_vers, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_err_vers = internal constant ptr @__tracepoint_svcrdma_err_vers, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_err_chunk = internal constant [18 x i8] c"svcrdma_err_chunk\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_err_chunk = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_err_chunk }, align 4
@__tracepoint_svcrdma_err_chunk = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_err_chunk, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_err_chunk, ptr null, ptr @__traceiter_svcrdma_err_chunk, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_err_chunk = internal constant ptr @__tracepoint_svcrdma_err_chunk, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_dma_map_page = internal constant [21 x i8] c"svcrdma_dma_map_page\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_dma_map_page = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_dma_map_page }, align 4
@__tracepoint_svcrdma_dma_map_page = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_dma_map_page, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_dma_map_page, ptr null, ptr @__traceiter_svcrdma_dma_map_page, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_dma_map_page = internal constant ptr @__tracepoint_svcrdma_dma_map_page, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_dma_map_err = internal constant [20 x i8] c"svcrdma_dma_map_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_dma_map_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_dma_map_err }, align 4
@__tracepoint_svcrdma_dma_map_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_dma_map_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_dma_map_err, ptr null, ptr @__traceiter_svcrdma_dma_map_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_dma_map_err = internal constant ptr @__tracepoint_svcrdma_dma_map_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_dma_unmap_page = internal constant [23 x i8] c"svcrdma_dma_unmap_page\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_dma_unmap_page = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_dma_unmap_page }, align 4
@__tracepoint_svcrdma_dma_unmap_page = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_dma_unmap_page, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_dma_unmap_page, ptr null, ptr @__traceiter_svcrdma_dma_unmap_page, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_dma_unmap_page = internal constant ptr @__tracepoint_svcrdma_dma_unmap_page, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_dma_map_rw_err = internal constant [23 x i8] c"svcrdma_dma_map_rw_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_dma_map_rw_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_dma_map_rw_err }, align 4
@__tracepoint_svcrdma_dma_map_rw_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_dma_map_rw_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_dma_map_rw_err, ptr null, ptr @__traceiter_svcrdma_dma_map_rw_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_dma_map_rw_err = internal constant ptr @__tracepoint_svcrdma_dma_map_rw_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_no_rwctx_err = internal constant [21 x i8] c"svcrdma_no_rwctx_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_no_rwctx_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_no_rwctx_err }, align 4
@__tracepoint_svcrdma_no_rwctx_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_no_rwctx_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_no_rwctx_err, ptr null, ptr @__traceiter_svcrdma_no_rwctx_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_no_rwctx_err = internal constant ptr @__tracepoint_svcrdma_no_rwctx_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_page_overrun_err = internal constant [25 x i8] c"svcrdma_page_overrun_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_page_overrun_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_page_overrun_err }, align 4
@__tracepoint_svcrdma_page_overrun_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_page_overrun_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_page_overrun_err, ptr null, ptr @__traceiter_svcrdma_page_overrun_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_page_overrun_err = internal constant ptr @__tracepoint_svcrdma_page_overrun_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_small_wrch_err = internal constant [23 x i8] c"svcrdma_small_wrch_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_small_wrch_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_small_wrch_err }, align 4
@__tracepoint_svcrdma_small_wrch_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_small_wrch_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_small_wrch_err, ptr null, ptr @__traceiter_svcrdma_small_wrch_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_small_wrch_err = internal constant ptr @__tracepoint_svcrdma_small_wrch_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_send_pullup = internal constant [20 x i8] c"svcrdma_send_pullup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_send_pullup = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_send_pullup }, align 4
@__tracepoint_svcrdma_send_pullup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_send_pullup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_send_pullup, ptr null, ptr @__traceiter_svcrdma_send_pullup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_send_pullup = internal constant ptr @__tracepoint_svcrdma_send_pullup, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_send_err = internal constant [17 x i8] c"svcrdma_send_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_send_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_send_err }, align 4
@__tracepoint_svcrdma_send_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_send_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_send_err, ptr null, ptr @__traceiter_svcrdma_send_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_send_err = internal constant ptr @__tracepoint_svcrdma_send_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_post_send = internal constant [18 x i8] c"svcrdma_post_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_post_send = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_post_send }, align 4
@__tracepoint_svcrdma_post_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_post_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_post_send, ptr null, ptr @__traceiter_svcrdma_post_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_post_send = internal constant ptr @__tracepoint_svcrdma_post_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_send = internal constant [16 x i8] c"svcrdma_wc_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_send = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_send }, align 4
@__tracepoint_svcrdma_wc_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_send, ptr null, ptr @__traceiter_svcrdma_wc_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_send = internal constant ptr @__tracepoint_svcrdma_wc_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_send_flush = internal constant [22 x i8] c"svcrdma_wc_send_flush\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_send_flush = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_send_flush }, align 4
@__tracepoint_svcrdma_wc_send_flush = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_send_flush, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_send_flush, ptr null, ptr @__traceiter_svcrdma_wc_send_flush, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_send_flush = internal constant ptr @__tracepoint_svcrdma_wc_send_flush, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_send_err = internal constant [20 x i8] c"svcrdma_wc_send_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_send_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_send_err }, align 4
@__tracepoint_svcrdma_wc_send_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_send_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_send_err, ptr null, ptr @__traceiter_svcrdma_wc_send_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_send_err = internal constant ptr @__tracepoint_svcrdma_wc_send_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_post_recv = internal constant [18 x i8] c"svcrdma_post_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_post_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_post_recv }, align 4
@__tracepoint_svcrdma_post_recv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_post_recv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_post_recv, ptr null, ptr @__traceiter_svcrdma_post_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_post_recv = internal constant ptr @__tracepoint_svcrdma_post_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_recv = internal constant [16 x i8] c"svcrdma_wc_recv\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_recv = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_recv }, align 4
@__tracepoint_svcrdma_wc_recv = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_recv, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_recv, ptr null, ptr @__traceiter_svcrdma_wc_recv, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_recv = internal constant ptr @__tracepoint_svcrdma_wc_recv, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_recv_flush = internal constant [22 x i8] c"svcrdma_wc_recv_flush\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_recv_flush = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_recv_flush }, align 4
@__tracepoint_svcrdma_wc_recv_flush = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_recv_flush, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_recv_flush, ptr null, ptr @__traceiter_svcrdma_wc_recv_flush, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_recv_flush = internal constant ptr @__tracepoint_svcrdma_wc_recv_flush, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_recv_err = internal constant [20 x i8] c"svcrdma_wc_recv_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_recv_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_recv_err }, align 4
@__tracepoint_svcrdma_wc_recv_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_recv_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_recv_err, ptr null, ptr @__traceiter_svcrdma_wc_recv_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_recv_err = internal constant ptr @__tracepoint_svcrdma_wc_recv_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_rq_post_err = internal constant [20 x i8] c"svcrdma_rq_post_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_rq_post_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_rq_post_err }, align 4
@__tracepoint_svcrdma_rq_post_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_rq_post_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_rq_post_err, ptr null, ptr @__traceiter_svcrdma_rq_post_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_rq_post_err = internal constant ptr @__tracepoint_svcrdma_rq_post_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_post_read_chunk = internal constant [24 x i8] c"svcrdma_post_read_chunk\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_post_read_chunk = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_post_read_chunk }, align 4
@__tracepoint_svcrdma_post_read_chunk = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_post_read_chunk, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_post_read_chunk, ptr null, ptr @__traceiter_svcrdma_post_read_chunk, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_post_read_chunk = internal constant ptr @__tracepoint_svcrdma_post_read_chunk, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_post_write_chunk = internal constant [25 x i8] c"svcrdma_post_write_chunk\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_post_write_chunk = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_post_write_chunk }, align 4
@__tracepoint_svcrdma_post_write_chunk = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_post_write_chunk, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_post_write_chunk, ptr null, ptr @__traceiter_svcrdma_post_write_chunk, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_post_write_chunk = internal constant ptr @__tracepoint_svcrdma_post_write_chunk, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_post_reply_chunk = internal constant [25 x i8] c"svcrdma_post_reply_chunk\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_post_reply_chunk = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_post_reply_chunk }, align 4
@__tracepoint_svcrdma_post_reply_chunk = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_post_reply_chunk, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_post_reply_chunk, ptr null, ptr @__traceiter_svcrdma_post_reply_chunk, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_post_reply_chunk = internal constant ptr @__tracepoint_svcrdma_post_reply_chunk, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_read = internal constant [16 x i8] c"svcrdma_wc_read\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_read = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_read }, align 4
@__tracepoint_svcrdma_wc_read = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_read, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_read, ptr null, ptr @__traceiter_svcrdma_wc_read, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_read = internal constant ptr @__tracepoint_svcrdma_wc_read, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_read_flush = internal constant [22 x i8] c"svcrdma_wc_read_flush\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_read_flush = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_read_flush }, align 4
@__tracepoint_svcrdma_wc_read_flush = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_read_flush, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_read_flush, ptr null, ptr @__traceiter_svcrdma_wc_read_flush, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_read_flush = internal constant ptr @__tracepoint_svcrdma_wc_read_flush, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_read_err = internal constant [20 x i8] c"svcrdma_wc_read_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_read_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_read_err }, align 4
@__tracepoint_svcrdma_wc_read_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_read_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_read_err, ptr null, ptr @__traceiter_svcrdma_wc_read_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_read_err = internal constant ptr @__tracepoint_svcrdma_wc_read_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_write = internal constant [17 x i8] c"svcrdma_wc_write\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_write = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_write }, align 4
@__tracepoint_svcrdma_wc_write = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_write, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_write, ptr null, ptr @__traceiter_svcrdma_wc_write, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_write = internal constant ptr @__tracepoint_svcrdma_wc_write, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_write_flush = internal constant [23 x i8] c"svcrdma_wc_write_flush\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_write_flush = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_write_flush }, align 4
@__tracepoint_svcrdma_wc_write_flush = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_write_flush, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_write_flush, ptr null, ptr @__traceiter_svcrdma_wc_write_flush, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_write_flush = internal constant ptr @__tracepoint_svcrdma_wc_write_flush, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_wc_write_err = internal constant [21 x i8] c"svcrdma_wc_write_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_wc_write_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_wc_write_err }, align 4
@__tracepoint_svcrdma_wc_write_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_wc_write_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_wc_write_err, ptr null, ptr @__traceiter_svcrdma_wc_write_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_wc_write_err = internal constant ptr @__tracepoint_svcrdma_wc_write_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_qp_error = internal constant [17 x i8] c"svcrdma_qp_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_qp_error = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_qp_error }, align 4
@__tracepoint_svcrdma_qp_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_qp_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_qp_error, ptr null, ptr @__traceiter_svcrdma_qp_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_qp_error = internal constant ptr @__tracepoint_svcrdma_qp_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_sq_full = internal constant [16 x i8] c"svcrdma_sq_full\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_sq_full = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_sq_full }, align 4
@__tracepoint_svcrdma_sq_full = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_sq_full, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_sq_full, ptr null, ptr @__traceiter_svcrdma_sq_full, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_sq_full = internal constant ptr @__tracepoint_svcrdma_sq_full, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_sq_retry = internal constant [17 x i8] c"svcrdma_sq_retry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_sq_retry = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_sq_retry }, align 4
@__tracepoint_svcrdma_sq_retry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_sq_retry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_sq_retry, ptr null, ptr @__traceiter_svcrdma_sq_retry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_sq_retry = internal constant ptr @__tracepoint_svcrdma_sq_retry, section "__tracepoints_ptrs", align 4
@__tpstrtab_svcrdma_sq_post_err = internal constant [20 x i8] c"svcrdma_sq_post_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_svcrdma_sq_post_err = dso_local global %struct.static_call_key { ptr @__traceiter_svcrdma_sq_post_err }, align 4
@__tracepoint_svcrdma_sq_post_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_svcrdma_sq_post_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_svcrdma_sq_post_err, ptr null, ptr @__traceiter_svcrdma_sq_post_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_svcrdma_sq_post_err = internal constant ptr @__tracepoint_svcrdma_sq_post_err, section "__tracepoints_ptrs", align 4
@str__rpcrdma__trace_system_name = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"rpcrdma\00", [24 x i8] zeroinitializer }, align 32
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"IB_EVENT_CQ_ERR\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_CQ_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_CQ_ERR = internal global ptr @__TRACE_SYSTEM_IB_EVENT_CQ_ERR, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_EVENT_QP_FATAL\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_QP_FATAL = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.1, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_QP_FATAL = internal global ptr @__TRACE_SYSTEM_IB_EVENT_QP_FATAL, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_EVENT_QP_REQ_ERR\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.2, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR = internal global ptr @__TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IB_EVENT_QP_ACCESS_ERR\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.3, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR = internal global ptr @__TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_EVENT_COMM_EST\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_COMM_EST = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.4, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_COMM_EST = internal global ptr @__TRACE_SYSTEM_IB_EVENT_COMM_EST, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_EVENT_SQ_DRAINED\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_SQ_DRAINED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_SQ_DRAINED = internal global ptr @__TRACE_SYSTEM_IB_EVENT_SQ_DRAINED, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_EVENT_PATH_MIG\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_PATH_MIG = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.6, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_PATH_MIG = internal global ptr @__TRACE_SYSTEM_IB_EVENT_PATH_MIG, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IB_EVENT_PATH_MIG_ERR\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.7, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR = internal global ptr @__TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IB_EVENT_DEVICE_FATAL\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.8, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL = internal global ptr @__TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IB_EVENT_PORT_ACTIVE\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.9, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE = internal global ptr @__TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_EVENT_PORT_ERR\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_PORT_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.10, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_PORT_ERR = internal global ptr @__TRACE_SYSTEM_IB_EVENT_PORT_ERR, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_EVENT_LID_CHANGE\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_LID_CHANGE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.11, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_LID_CHANGE = internal global ptr @__TRACE_SYSTEM_IB_EVENT_LID_CHANGE, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IB_EVENT_PKEY_CHANGE\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.12, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE = internal global ptr @__TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_EVENT_SM_CHANGE\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_SM_CHANGE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.13, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_SM_CHANGE = internal global ptr @__TRACE_SYSTEM_IB_EVENT_SM_CHANGE, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IB_EVENT_SRQ_ERR\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_SRQ_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.14, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_SRQ_ERR = internal global ptr @__TRACE_SYSTEM_IB_EVENT_SRQ_ERR, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"IB_EVENT_SRQ_LIMIT_REACHED\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.15, i32 15 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED = internal global ptr @__TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"IB_EVENT_QP_LAST_WQE_REACHED\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.16, i32 16 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED = internal global ptr @__TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"IB_EVENT_CLIENT_REREGISTER\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.17, i32 17 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER = internal global ptr @__TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_EVENT_GID_CHANGE\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_GID_CHANGE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.18, i32 18 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_GID_CHANGE = internal global ptr @__TRACE_SYSTEM_IB_EVENT_GID_CHANGE, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_EVENT_WQ_FATAL\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_EVENT_WQ_FATAL = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.19, i32 19 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_EVENT_WQ_FATAL = internal global ptr @__TRACE_SYSTEM_IB_EVENT_WQ_FATAL, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"IB_WC_SUCCESS\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_SUCCESS = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.20, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_SUCCESS = internal global ptr @__TRACE_SYSTEM_IB_WC_SUCCESS, section "_ftrace_eval_map", align 4
@.str.21 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_WC_LOC_LEN_ERR\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_LOC_LEN_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.21, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_LOC_LEN_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_LOC_LEN_ERR, section "_ftrace_eval_map", align 4
@.str.22 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_WC_LOC_QP_OP_ERR\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.22, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR, section "_ftrace_eval_map", align 4
@.str.23 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IB_WC_LOC_EEC_OP_ERR\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.23, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR, section "_ftrace_eval_map", align 4
@.str.24 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_WC_LOC_PROT_ERR\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_LOC_PROT_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.24, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_LOC_PROT_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_LOC_PROT_ERR, section "_ftrace_eval_map", align 4
@.str.25 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_WC_WR_FLUSH_ERR\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.25, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR, section "_ftrace_eval_map", align 4
@.str.26 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_WC_MW_BIND_ERR\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_MW_BIND_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.26, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_MW_BIND_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_MW_BIND_ERR, section "_ftrace_eval_map", align 4
@.str.27 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_WC_BAD_RESP_ERR\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_BAD_RESP_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.27, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_BAD_RESP_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_BAD_RESP_ERR, section "_ftrace_eval_map", align 4
@.str.28 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IB_WC_LOC_ACCESS_ERR\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.28, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR, section "_ftrace_eval_map", align 4
@.str.29 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IB_WC_REM_INV_REQ_ERR\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.29, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR, section "_ftrace_eval_map", align 4
@.str.30 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IB_WC_REM_ACCESS_ERR\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.30, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR, section "_ftrace_eval_map", align 4
@.str.31 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IB_WC_REM_OP_ERR\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_REM_OP_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.31, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_REM_OP_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_REM_OP_ERR, section "_ftrace_eval_map", align 4
@.str.32 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_WC_RETRY_EXC_ERR\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.32, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR, section "_ftrace_eval_map", align 4
@.str.33 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IB_WC_RNR_RETRY_EXC_ERR\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.33, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR, section "_ftrace_eval_map", align 4
@.str.34 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IB_WC_LOC_RDD_VIOL_ERR\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.34, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR, section "_ftrace_eval_map", align 4
@.str.35 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IB_WC_REM_INV_RD_REQ_ERR\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.35, i32 15 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR, section "_ftrace_eval_map", align 4
@.str.36 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_WC_REM_ABORT_ERR\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_REM_ABORT_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.36, i32 16 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_REM_ABORT_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_REM_ABORT_ERR, section "_ftrace_eval_map", align 4
@.str.37 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_WC_INV_EECN_ERR\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_INV_EECN_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.37, i32 17 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_INV_EECN_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_INV_EECN_ERR, section "_ftrace_eval_map", align 4
@.str.38 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IB_WC_INV_EEC_STATE_ERR\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.38, i32 18 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR, section "_ftrace_eval_map", align 4
@.str.39 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"IB_WC_FATAL_ERR\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_FATAL_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.39, i32 19 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_FATAL_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_FATAL_ERR, section "_ftrace_eval_map", align 4
@.str.40 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IB_WC_RESP_TIMEOUT_ERR\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.40, i32 20 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR, section "_ftrace_eval_map", align 4
@.str.41 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"IB_WC_GENERAL_ERR\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_WC_GENERAL_ERR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.41, i32 21 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_WC_GENERAL_ERR = internal global ptr @__TRACE_SYSTEM_IB_WC_GENERAL_ERR, section "_ftrace_eval_map", align 4
@.str.42 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"IB_CM_REQ_ERROR\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_REQ_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.42, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_REQ_ERROR = internal global ptr @__TRACE_SYSTEM_IB_CM_REQ_ERROR, section "_ftrace_eval_map", align 4
@.str.43 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_REQ_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_REQ_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.43, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_REQ_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_REQ_RECEIVED, section "_ftrace_eval_map", align 4
@.str.44 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"IB_CM_REP_ERROR\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_REP_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.44, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_REP_ERROR = internal global ptr @__TRACE_SYSTEM_IB_CM_REP_ERROR, section "_ftrace_eval_map", align 4
@.str.45 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_REP_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_REP_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.45, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_REP_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_REP_RECEIVED, section "_ftrace_eval_map", align 4
@.str.46 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_RTU_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_RTU_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.46, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_RTU_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_RTU_RECEIVED, section "_ftrace_eval_map", align 4
@.str.47 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IB_CM_USER_ESTABLISHED\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_USER_ESTABLISHED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.47, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_USER_ESTABLISHED = internal global ptr @__TRACE_SYSTEM_IB_CM_USER_ESTABLISHED, section "_ftrace_eval_map", align 4
@.str.48 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IB_CM_DREQ_ERROR\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_DREQ_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.48, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_DREQ_ERROR = internal global ptr @__TRACE_SYSTEM_IB_CM_DREQ_ERROR, section "_ftrace_eval_map", align 4
@.str.49 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_CM_DREQ_RECEIVED\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_DREQ_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.49, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_DREQ_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_DREQ_RECEIVED, section "_ftrace_eval_map", align 4
@.str.50 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_CM_DREP_RECEIVED\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_DREP_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.50, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_DREP_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_DREP_RECEIVED, section "_ftrace_eval_map", align 4
@.str.51 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IB_CM_TIMEWAIT_EXIT\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.51, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT = internal global ptr @__TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT, section "_ftrace_eval_map", align 4
@.str.52 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_MRA_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_MRA_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.52, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_MRA_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_MRA_RECEIVED, section "_ftrace_eval_map", align 4
@.str.53 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_REJ_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_REJ_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.53, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_REJ_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_REJ_RECEIVED, section "_ftrace_eval_map", align 4
@.str.54 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"IB_CM_LAP_ERROR\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_LAP_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.54, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_LAP_ERROR = internal global ptr @__TRACE_SYSTEM_IB_CM_LAP_ERROR, section "_ftrace_eval_map", align 4
@.str.55 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_LAP_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_LAP_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.55, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_LAP_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_LAP_RECEIVED, section "_ftrace_eval_map", align 4
@.str.56 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IB_CM_APR_RECEIVED\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_APR_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.56, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_APR_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_APR_RECEIVED, section "_ftrace_eval_map", align 4
@.str.57 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IB_CM_SIDR_REQ_ERROR\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.57, i32 15 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR = internal global ptr @__TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR, section "_ftrace_eval_map", align 4
@.str.58 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IB_CM_SIDR_REQ_RECEIVED\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.58, i32 16 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED, section "_ftrace_eval_map", align 4
@.str.59 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IB_CM_SIDR_REP_RECEIVED\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.59, i32 17 }, section ".init.data", align 4
@TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED = internal global ptr @__TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED, section "_ftrace_eval_map", align 4
@.str.60 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"RDMA_CM_EVENT_ADDR_RESOLVED\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.60, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED, section "_ftrace_eval_map", align 4
@.str.61 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"RDMA_CM_EVENT_ADDR_ERROR\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.61, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR, section "_ftrace_eval_map", align 4
@.str.62 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"RDMA_CM_EVENT_ROUTE_RESOLVED\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.62, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED, section "_ftrace_eval_map", align 4
@.str.63 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"RDMA_CM_EVENT_ROUTE_ERROR\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.63, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR, section "_ftrace_eval_map", align 4
@.str.64 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"RDMA_CM_EVENT_CONNECT_REQUEST\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.64, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST, section "_ftrace_eval_map", align 4
@.str.65 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"RDMA_CM_EVENT_CONNECT_RESPONSE\00", [33 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.65, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE, section "_ftrace_eval_map", align 4
@.str.66 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"RDMA_CM_EVENT_CONNECT_ERROR\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.66, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR, section "_ftrace_eval_map", align 4
@.str.67 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"RDMA_CM_EVENT_UNREACHABLE\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.67, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE, section "_ftrace_eval_map", align 4
@.str.68 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"RDMA_CM_EVENT_REJECTED\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.68, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED, section "_ftrace_eval_map", align 4
@.str.69 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"RDMA_CM_EVENT_ESTABLISHED\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.69, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED, section "_ftrace_eval_map", align 4
@.str.70 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"RDMA_CM_EVENT_DISCONNECTED\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.70, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED, section "_ftrace_eval_map", align 4
@.str.71 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"RDMA_CM_EVENT_DEVICE_REMOVAL\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.71, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL, section "_ftrace_eval_map", align 4
@.str.72 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"RDMA_CM_EVENT_MULTICAST_JOIN\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.72, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN, section "_ftrace_eval_map", align 4
@.str.73 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"RDMA_CM_EVENT_MULTICAST_ERROR\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.73, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR, section "_ftrace_eval_map", align 4
@.str.74 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"RDMA_CM_EVENT_ADDR_CHANGE\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.74, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE, section "_ftrace_eval_map", align 4
@.str.75 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"RDMA_CM_EVENT_TIMEWAIT_EXIT\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.75, i32 15 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT = internal global ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT, section "_ftrace_eval_map", align 4
@.str.76 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"DMA_BIDIRECTIONAL\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_DMA_BIDIRECTIONAL = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.76, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_DMA_BIDIRECTIONAL = internal global ptr @__TRACE_SYSTEM_DMA_BIDIRECTIONAL, section "_ftrace_eval_map", align 4
@.str.77 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"DMA_TO_DEVICE\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_DMA_TO_DEVICE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.77, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_DMA_TO_DEVICE = internal global ptr @__TRACE_SYSTEM_DMA_TO_DEVICE, section "_ftrace_eval_map", align 4
@.str.78 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"DMA_FROM_DEVICE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_DMA_FROM_DEVICE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.78, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_DMA_FROM_DEVICE = internal global ptr @__TRACE_SYSTEM_DMA_FROM_DEVICE, section "_ftrace_eval_map", align 4
@.str.79 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"DMA_NONE\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_DMA_NONE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.79, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_DMA_NONE = internal global ptr @__TRACE_SYSTEM_DMA_NONE, section "_ftrace_eval_map", align 4
@.str.80 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rpcrdma_noch\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_noch = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.80, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_noch = internal global ptr @__TRACE_SYSTEM_rpcrdma_noch, section "_ftrace_eval_map", align 4
@.str.81 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rpcrdma_noch_pullup\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_noch_pullup = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.81, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_noch_pullup = internal global ptr @__TRACE_SYSTEM_rpcrdma_noch_pullup, section "_ftrace_eval_map", align 4
@.str.82 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rpcrdma_noch_mapped\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_noch_mapped = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.82, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_noch_mapped = internal global ptr @__TRACE_SYSTEM_rpcrdma_noch_mapped, section "_ftrace_eval_map", align 4
@.str.83 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rpcrdma_readch\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_readch = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.83, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_readch = internal global ptr @__TRACE_SYSTEM_rpcrdma_readch, section "_ftrace_eval_map", align 4
@.str.84 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rpcrdma_areadch\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_areadch = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.84, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_areadch = internal global ptr @__TRACE_SYSTEM_rpcrdma_areadch, section "_ftrace_eval_map", align 4
@.str.85 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rpcrdma_writech\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_writech = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.85, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_writech = internal global ptr @__TRACE_SYSTEM_rpcrdma_writech, section "_ftrace_eval_map", align 4
@.str.86 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rpcrdma_replych\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_rpcrdma_replych = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.86, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_rpcrdma_replych = internal global ptr @__TRACE_SYSTEM_rpcrdma_replych, section "_ftrace_eval_map", align 4
@.str.87 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"RDMA_MSG\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_MSG = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.87, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_MSG = internal global ptr @__TRACE_SYSTEM_RDMA_MSG, section "_ftrace_eval_map", align 4
@.str.88 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"RDMA_NOMSG\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_NOMSG = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.88, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_NOMSG = internal global ptr @__TRACE_SYSTEM_RDMA_NOMSG, section "_ftrace_eval_map", align 4
@.str.89 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RDMA_MSGP\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_MSGP = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.89, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_MSGP = internal global ptr @__TRACE_SYSTEM_RDMA_MSGP, section "_ftrace_eval_map", align 4
@.str.90 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RDMA_DONE\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_DONE = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.90, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_DONE = internal global ptr @__TRACE_SYSTEM_RDMA_DONE, section "_ftrace_eval_map", align 4
@.str.91 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"RDMA_ERROR\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RDMA_ERROR = internal global %struct.trace_eval_map { ptr @str__rpcrdma__trace_system_name, ptr @.str.91, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_RDMA_ERROR = internal global ptr @__TRACE_SYSTEM_RDMA_ERROR, section "_ftrace_eval_map", align 4
@trace_event_fields_rpcrdma_completion_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_completion_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_completion_class, ptr @perf_trace_rpcrdma_completion_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_completion_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_completion_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_completion_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_rpcrdma_send_completion_class = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_send_completion_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_send_completion_class, ptr @perf_trace_rpcrdma_send_completion_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_send_completion_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_send_completion_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_send_completion_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_rpcrdma_send_flush_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_send_flush_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_send_flush_class, ptr @perf_trace_rpcrdma_send_flush_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_send_flush_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_send_flush_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_send_flush_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_rpcrdma_mr_completion_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_mr_completion_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_mr_completion_class, ptr @perf_trace_rpcrdma_mr_completion_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_mr_completion_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_mr_completion_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_mr_completion_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_rpcrdma_receive_completion_class = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_receive_completion_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_receive_completion_class, ptr @perf_trace_rpcrdma_receive_completion_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_receive_completion_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_receive_completion_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_receive_completion_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_rpcrdma_receive_success_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_receive_success_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_receive_success_class, ptr @perf_trace_rpcrdma_receive_success_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_receive_success_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_receive_success_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_receive_success_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_rpcrdma_receive_flush_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rpcrdma_receive_flush_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_rpcrdma_receive_flush_class, ptr @perf_trace_rpcrdma_receive_flush_class, ptr @trace_event_reg, ptr @trace_event_fields_rpcrdma_receive_flush_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rpcrdma_receive_flush_class, i64 24), ptr getelementptr (i8, ptr @event_class_rpcrdma_receive_flush_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_reply_class = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.103, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.104, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_reply_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_reply_class, ptr @perf_trace_xprtrdma_reply_class, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_reply_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_reply_class, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_reply_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_rxprt = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_rxprt = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_rxprt, ptr @perf_trace_xprtrdma_rxprt, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_rxprt, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_rxprt, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_rxprt, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_connect_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.108, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.109, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_connect_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_connect_class, ptr @perf_trace_xprtrdma_connect_class, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_connect_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_connect_class, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_connect_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_rdch_event = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.112, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.118, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_rdch_event = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_rdch_event, ptr @perf_trace_xprtrdma_rdch_event, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_rdch_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_rdch_event, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_rdch_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_wrch_event = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.118, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_wrch_event = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_wrch_event, ptr @perf_trace_xprtrdma_wrch_event, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_wrch_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_wrch_event, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_wrch_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_mr_class = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_mr_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_mr_class, ptr @perf_trace_xprtrdma_mr_class, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_mr_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_mr_class, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_mr_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_anonymous_mr_class = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_anonymous_mr_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_anonymous_mr_class, ptr @perf_trace_xprtrdma_anonymous_mr_class, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_anonymous_mr_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_anonymous_mr_class, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_anonymous_mr_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_callback_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_callback_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_callback_class, ptr @perf_trace_xprtrdma_callback_class, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_callback_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_callback_class, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_callback_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_xprtrdma_inline_thresh = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.121, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.122, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.123, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.124, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.125, %union.anon.203 { %struct.anon.204 { ptr @.str.126, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.125, %union.anon.203 { %struct.anon.204 { ptr @.str.127, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_inline_thresh = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_inline_thresh, ptr @perf_trace_xprtrdma_inline_thresh, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_inline_thresh, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_inline_thresh, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_inline_thresh, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_inline_thresh = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_inline_thresh, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_inline_thresh = internal global { [155 x i8], [37 x i8] } { [155 x i8] c"\22%pISpc -> %pISpc neg send/recv=%u/%u, calc send/recv=%u/%u\22, REC->srcaddr, REC->dstaddr, REC->inline_send, REC->inline_recv, REC->max_send, REC->max_recv\00", [37 x i8] zeroinitializer }, align 32
@event_xprtrdma_inline_thresh = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_inline_thresh, %union.anon.205 { ptr @__tracepoint_xprtrdma_inline_thresh }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_inline_thresh }, ptr @print_fmt_xprtrdma_inline_thresh, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_inline_thresh = internal global ptr @event_xprtrdma_inline_thresh, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_connect_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_connect_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_connect_class = internal global { [106 x i8], [54 x i8] } { [106 x i8] c"\22peer=[%s]:%s rc=%d connection status=%d\22, __get_str(addr), __get_str(port), REC->rc, REC->connect_status\00", [54 x i8] zeroinitializer }, align 32
@event_xprtrdma_connect = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_connect_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_connect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_connect_class }, ptr @print_fmt_xprtrdma_connect_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_connect = internal global ptr @event_xprtrdma_connect, section "_ftrace_events", align 4
@event_xprtrdma_disconnect = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_connect_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_disconnect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_connect_class }, ptr @print_fmt_xprtrdma_connect_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_disconnect = internal global ptr @event_xprtrdma_disconnect, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_rxprt = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_rxprt, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_rxprt = internal global { [49 x i8], [47 x i8] } { [49 x i8] c"\22peer=[%s]:%s\22, __get_str(addr), __get_str(port)\00", [47 x i8] zeroinitializer }, align 32
@event_xprtrdma_op_inject_dsc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_rxprt, %union.anon.205 { ptr @__tracepoint_xprtrdma_op_inject_dsc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_rxprt }, ptr @print_fmt_xprtrdma_rxprt, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_op_inject_dsc = internal global ptr @event_xprtrdma_op_inject_dsc, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_op_connect = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.131, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_op_connect = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_op_connect, ptr @perf_trace_xprtrdma_op_connect, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_op_connect, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_op_connect, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_op_connect, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_op_connect = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_op_connect, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_op_connect = internal global { [71 x i8], [57 x i8] } { [71 x i8] c"\22peer=[%s]:%s delay=%lu\22, __get_str(addr), __get_str(port), REC->delay\00", [57 x i8] zeroinitializer }, align 32
@event_xprtrdma_op_connect = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_op_connect, %union.anon.205 { ptr @__tracepoint_xprtrdma_op_connect }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_op_connect }, ptr @print_fmt_xprtrdma_op_connect, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_op_connect = internal global ptr @event_xprtrdma_op_connect, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_op_set_cto = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.133, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.134, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_op_set_cto = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_op_set_cto, ptr @perf_trace_xprtrdma_op_set_cto, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_op_set_cto, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_op_set_cto, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_op_set_cto, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_op_set_cto = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_op_set_cto, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_op_set_cto = internal global { [117 x i8], [43 x i8] } { [117 x i8] c"\22peer=[%s]:%s connect=%lu reconnect=%lu\22, __get_str(addr), __get_str(port), REC->connect / 100, REC->reconnect / 100\00", [43 x i8] zeroinitializer }, align 32
@event_xprtrdma_op_set_cto = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_op_set_cto, %union.anon.205 { ptr @__tracepoint_xprtrdma_op_set_cto }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_op_set_cto }, ptr @print_fmt_xprtrdma_op_set_cto, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_op_set_cto = internal global ptr @event_xprtrdma_op_set_cto, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_createmrs = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.136, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_createmrs = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_createmrs, ptr @perf_trace_xprtrdma_createmrs, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_createmrs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_createmrs, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_createmrs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_createmrs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_createmrs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_createmrs = internal global { [76 x i8], [52 x i8] } { [76 x i8] c"\22peer=[%s]:%s created %u MRs\22, __get_str(addr), __get_str(port), REC->count\00", [52 x i8] zeroinitializer }, align 32
@event_xprtrdma_createmrs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_createmrs, %union.anon.205 { ptr @__tracepoint_xprtrdma_createmrs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_createmrs }, ptr @print_fmt_xprtrdma_createmrs, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_createmrs = internal global ptr @event_xprtrdma_createmrs, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_nomrs_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_nomrs_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_nomrs_err, ptr @perf_trace_xprtrdma_nomrs_err, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_nomrs_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_nomrs_err, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_nomrs_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_nomrs_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_nomrs_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_nomrs_err = internal global { [94 x i8], [34 x i8] } { [94 x i8] c"\22task:%08x@%08x peer=[%s]:%s\22, REC->task_id, REC->client_id, __get_str(addr), __get_str(port)\00", [34 x i8] zeroinitializer }, align 32
@event_xprtrdma_nomrs_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_nomrs_err, %union.anon.205 { ptr @__tracepoint_xprtrdma_nomrs_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_nomrs_err }, ptr @print_fmt_xprtrdma_nomrs_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_nomrs_err = internal global ptr @event_xprtrdma_nomrs_err, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_rdch_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_rdch_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_rdch_event = internal global { [191 x i8], [33 x i8] } { [191 x i8] c"\22task:%08x@%08x pos=%u %u@0x%016llx:0x%08x (%s)\22, REC->task_id, REC->client_id, REC->pos, REC->length, (unsigned long long)REC->offset, REC->handle, REC->nents < REC->nsegs ? \22more\22 : \22last\22\00", [33 x i8] zeroinitializer }, align 32
@event_xprtrdma_chunk_read = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_rdch_event, %union.anon.205 { ptr @__tracepoint_xprtrdma_chunk_read }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_rdch_event }, ptr @print_fmt_xprtrdma_rdch_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_chunk_read = internal global ptr @event_xprtrdma_chunk_read, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_wrch_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_wrch_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_wrch_event = internal global { [174 x i8], [50 x i8] } { [174 x i8] c"\22task:%08x@%08x %u@0x%016llx:0x%08x (%s)\22, REC->task_id, REC->client_id, REC->length, (unsigned long long)REC->offset, REC->handle, REC->nents < REC->nsegs ? \22more\22 : \22last\22\00", [50 x i8] zeroinitializer }, align 32
@event_xprtrdma_chunk_write = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_wrch_event, %union.anon.205 { ptr @__tracepoint_xprtrdma_chunk_write }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_wrch_event }, ptr @print_fmt_xprtrdma_wrch_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_chunk_write = internal global ptr @event_xprtrdma_chunk_write, section "_ftrace_events", align 4
@event_xprtrdma_chunk_reply = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_wrch_event, %union.anon.205 { ptr @__tracepoint_xprtrdma_chunk_reply }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_wrch_event }, ptr @print_fmt_xprtrdma_wrch_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_chunk_reply = internal global ptr @event_xprtrdma_chunk_reply, section "_ftrace_events", align 4
@event_xprtrdma_chunk_wp = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_wrch_event, %union.anon.205 { ptr @__tracepoint_xprtrdma_chunk_wp }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_wrch_event }, ptr @print_fmt_xprtrdma_wrch_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_chunk_wp = internal global ptr @event_xprtrdma_chunk_wp, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_marshal = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.143, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.144, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.145, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.148, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_marshal = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_marshal, ptr @perf_trace_xprtrdma_marshal, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_marshal, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_marshal, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_marshal, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_marshal = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_marshal, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_marshal = internal global { [683 x i8], [181 x i8] } { [683 x i8] c"\22task:%08x@%08x xid=0x%08x hdr=%u xdr=%u/%u/%u %s/%s\22, REC->task_id, REC->client_id, REC->xid, REC->hdrlen, REC->headlen, REC->pagelen, REC->taillen, __print_symbolic(REC->rtype, { rpcrdma_noch, \22inline\22 }, { rpcrdma_noch_pullup, \22pullup\22 }, { rpcrdma_noch_mapped, \22mapped\22 }, { rpcrdma_readch, \22read list\22 }, { rpcrdma_areadch, \22*read list\22 }, { rpcrdma_writech, \22write list\22 }, { rpcrdma_replych, \22reply chunk\22 }), __print_symbolic(REC->wtype, { rpcrdma_noch, \22inline\22 }, { rpcrdma_noch_pullup, \22pullup\22 }, { rpcrdma_noch_mapped, \22mapped\22 }, { rpcrdma_readch, \22read list\22 }, { rpcrdma_areadch, \22*read list\22 }, { rpcrdma_writech, \22write list\22 }, { rpcrdma_replych, \22reply chunk\22 })\00", [181 x i8] zeroinitializer }, align 32
@event_xprtrdma_marshal = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_marshal, %union.anon.205 { ptr @__tracepoint_xprtrdma_marshal }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_marshal }, ptr @print_fmt_xprtrdma_marshal, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_marshal = internal global ptr @event_xprtrdma_marshal, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_marshal_failed = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.158, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_marshal_failed = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_marshal_failed, ptr @perf_trace_xprtrdma_marshal_failed, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_marshal_failed, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_marshal_failed, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_marshal_failed, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_marshal_failed = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_marshal_failed, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_marshal_failed = internal global { [85 x i8], [43 x i8] } { [85 x i8] c"\22task:%08x@%08x xid=0x%08x ret=%d\22, REC->task_id, REC->client_id, REC->xid, REC->ret\00", [43 x i8] zeroinitializer }, align 32
@event_xprtrdma_marshal_failed = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_marshal_failed, %union.anon.205 { ptr @__tracepoint_xprtrdma_marshal_failed }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_marshal_failed }, ptr @print_fmt_xprtrdma_marshal_failed, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_marshal_failed = internal global ptr @event_xprtrdma_marshal_failed, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_prepsend_failed = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.158, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_prepsend_failed = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_prepsend_failed, ptr @perf_trace_xprtrdma_prepsend_failed, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_prepsend_failed, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_prepsend_failed, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_prepsend_failed, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_prepsend_failed = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_prepsend_failed, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_prepsend_failed = internal global { [85 x i8], [43 x i8] } { [85 x i8] c"\22task:%08x@%08x xid=0x%08x ret=%d\22, REC->task_id, REC->client_id, REC->xid, REC->ret\00", [43 x i8] zeroinitializer }, align 32
@event_xprtrdma_prepsend_failed = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_prepsend_failed, %union.anon.205 { ptr @__tracepoint_xprtrdma_prepsend_failed }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_prepsend_failed }, ptr @print_fmt_xprtrdma_prepsend_failed, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_prepsend_failed = internal global ptr @event_xprtrdma_prepsend_failed, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_post_send = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.160, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.161, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_post_send = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_post_send, ptr @perf_trace_xprtrdma_post_send, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_post_send, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_post_send, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_post_send, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_post_send = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_post_send, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_post_send = internal global { [190 x i8], [34 x i8] } { [190 x i8] c"\22task:%08x@%08x cq.id=%u cid=%d (%d SGE%s) %s\22, REC->task_id, REC->client_id, REC->cq_id, REC->completion_id, REC->num_sge, (REC->num_sge == 1 ? \22\22 : \22s\22), (REC->signaled ? \22signaled\22 : \22\22)\00", [34 x i8] zeroinitializer }, align 32
@event_xprtrdma_post_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_post_send, %union.anon.205 { ptr @__tracepoint_xprtrdma_post_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_post_send }, ptr @print_fmt_xprtrdma_post_send, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_post_send = internal global ptr @event_xprtrdma_post_send, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_post_send_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.108, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_post_send_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_post_send_err, ptr @perf_trace_xprtrdma_post_send_err, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_post_send_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_post_send_err, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_post_send_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_post_send_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_post_send_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_post_send_err = internal global { [83 x i8], [45 x i8] } { [83 x i8] c"\22task:%08x@%08x cq.id=%u rc=%d\22, REC->task_id, REC->client_id, REC->cq_id, REC->rc\00", [45 x i8] zeroinitializer }, align 32
@event_xprtrdma_post_send_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_post_send_err, %union.anon.205 { ptr @__tracepoint_xprtrdma_post_send_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_post_send_err }, ptr @print_fmt_xprtrdma_post_send_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_post_send_err = internal global ptr @event_xprtrdma_post_send_err, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_post_recv = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_post_recv = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_post_recv, ptr @perf_trace_xprtrdma_post_recv, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_post_recv, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_post_recv, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_post_recv, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_post_recv = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_post_recv, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_post_recv = internal global { [50 x i8], [46 x i8] } { [50 x i8] c"\22cq.id=%d cid=%d\22, REC->cq_id, REC->completion_id\00", [46 x i8] zeroinitializer }, align 32
@event_xprtrdma_post_recv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_post_recv, %union.anon.205 { ptr @__tracepoint_xprtrdma_post_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_post_recv }, ptr @print_fmt_xprtrdma_post_recv, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_post_recv = internal global ptr @event_xprtrdma_post_recv, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_post_recvs = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.136, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.167, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_post_recvs = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_post_recvs, ptr @perf_trace_xprtrdma_post_recvs, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_post_recvs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_post_recvs, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_post_recvs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_post_recvs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_post_recvs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_post_recvs = internal global { [119 x i8], [41 x i8] } { [119 x i8] c"\22peer=[%s]:%s cq.id=%d %u new recvs, %d active\22, __get_str(addr), __get_str(port), REC->cq_id, REC->count, REC->posted\00", [41 x i8] zeroinitializer }, align 32
@event_xprtrdma_post_recvs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_post_recvs, %union.anon.205 { ptr @__tracepoint_xprtrdma_post_recvs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_post_recvs }, ptr @print_fmt_xprtrdma_post_recvs, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_post_recvs = internal global ptr @event_xprtrdma_post_recvs, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_post_recvs_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_post_recvs_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_post_recvs_err, ptr @perf_trace_xprtrdma_post_recvs_err, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_post_recvs_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_post_recvs_err, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_post_recvs_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_post_recvs_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_post_recvs_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_post_recvs_err = internal global { [89 x i8], [39 x i8] } { [89 x i8] c"\22peer=[%s]:%s cq.id=%d rc=%d\22, __get_str(addr), __get_str(port), REC->cq_id, REC->status\00", [39 x i8] zeroinitializer }, align 32
@event_xprtrdma_post_recvs_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_post_recvs_err, %union.anon.205 { ptr @__tracepoint_xprtrdma_post_recvs_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_post_recvs_err }, ptr @print_fmt_xprtrdma_post_recvs_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_post_recvs_err = internal global ptr @event_xprtrdma_post_recvs_err, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_post_linv_err = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_post_linv_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_post_linv_err, ptr @perf_trace_xprtrdma_post_linv_err, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_post_linv_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_post_linv_err, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_post_linv_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_post_linv_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_post_linv_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_post_linv_err = internal global { [70 x i8], [58 x i8] } { [70 x i8] c"\22task:%08x@%08x status=%d\22, REC->task_id, REC->client_id, REC->status\00", [58 x i8] zeroinitializer }, align 32
@event_xprtrdma_post_linv_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_post_linv_err, %union.anon.205 { ptr @__tracepoint_xprtrdma_post_linv_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_post_linv_err }, ptr @print_fmt_xprtrdma_post_linv_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_post_linv_err = internal global ptr @event_xprtrdma_post_linv_err, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_receive_completion_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_receive_completion_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_receive_completion_class = internal global { [1085 x i8], [259 x i8] } { [1085 x i8] c"\22cq.id=%u cid=%d status=%s (%lu/0x%x) received=%u\22, REC->cq_id, REC->completion_id, __print_symbolic(REC->status, { IB_WC_SUCCESS, \22SUCCESS\22 }, { IB_WC_LOC_LEN_ERR, \22LOC_LEN_ERR\22 }, { IB_WC_LOC_QP_OP_ERR, \22LOC_QP_OP_ERR\22 }, { IB_WC_LOC_EEC_OP_ERR, \22LOC_EEC_OP_ERR\22 }, { IB_WC_LOC_PROT_ERR, \22LOC_PROT_ERR\22 }, { IB_WC_WR_FLUSH_ERR, \22WR_FLUSH_ERR\22 }, { IB_WC_MW_BIND_ERR, \22MW_BIND_ERR\22 }, { IB_WC_BAD_RESP_ERR, \22BAD_RESP_ERR\22 }, { IB_WC_LOC_ACCESS_ERR, \22LOC_ACCESS_ERR\22 }, { IB_WC_REM_INV_REQ_ERR, \22REM_INV_REQ_ERR\22 }, { IB_WC_REM_ACCESS_ERR, \22REM_ACCESS_ERR\22 }, { IB_WC_REM_OP_ERR, \22REM_OP_ERR\22 }, { IB_WC_RETRY_EXC_ERR, \22RETRY_EXC_ERR\22 }, { IB_WC_RNR_RETRY_EXC_ERR, \22RNR_RETRY_EXC_ERR\22 }, { IB_WC_LOC_RDD_VIOL_ERR, \22LOC_RDD_VIOL_ERR\22 }, { IB_WC_REM_INV_RD_REQ_ERR, \22REM_INV_RD_REQ_ERR\22 }, { IB_WC_REM_ABORT_ERR, \22REM_ABORT_ERR\22 }, { IB_WC_INV_EECN_ERR, \22INV_EECN_ERR\22 }, { IB_WC_INV_EEC_STATE_ERR, \22INV_EEC_STATE_ERR\22 }, { IB_WC_FATAL_ERR, \22FATAL_ERR\22 }, { IB_WC_RESP_TIMEOUT_ERR, \22RESP_TIMEOUT_ERR\22 }, { IB_WC_GENERAL_ERR, \22GENERAL_ERR\22 }), REC->status, REC->vendor_err, REC->received\00", [259 x i8] zeroinitializer }, align 32
@event_xprtrdma_wc_receive = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_receive_completion_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_wc_receive }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_receive_completion_class }, ptr @print_fmt_rpcrdma_receive_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_wc_receive = internal global ptr @event_xprtrdma_wc_receive, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_completion_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_completion_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_completion_class = internal global { [1058 x i8], [286 x i8] } { [1058 x i8] c"\22cq.id=%u cid=%d status=%s (%lu/0x%x)\22, REC->cq_id, REC->completion_id, __print_symbolic(REC->status, { IB_WC_SUCCESS, \22SUCCESS\22 }, { IB_WC_LOC_LEN_ERR, \22LOC_LEN_ERR\22 }, { IB_WC_LOC_QP_OP_ERR, \22LOC_QP_OP_ERR\22 }, { IB_WC_LOC_EEC_OP_ERR, \22LOC_EEC_OP_ERR\22 }, { IB_WC_LOC_PROT_ERR, \22LOC_PROT_ERR\22 }, { IB_WC_WR_FLUSH_ERR, \22WR_FLUSH_ERR\22 }, { IB_WC_MW_BIND_ERR, \22MW_BIND_ERR\22 }, { IB_WC_BAD_RESP_ERR, \22BAD_RESP_ERR\22 }, { IB_WC_LOC_ACCESS_ERR, \22LOC_ACCESS_ERR\22 }, { IB_WC_REM_INV_REQ_ERR, \22REM_INV_REQ_ERR\22 }, { IB_WC_REM_ACCESS_ERR, \22REM_ACCESS_ERR\22 }, { IB_WC_REM_OP_ERR, \22REM_OP_ERR\22 }, { IB_WC_RETRY_EXC_ERR, \22RETRY_EXC_ERR\22 }, { IB_WC_RNR_RETRY_EXC_ERR, \22RNR_RETRY_EXC_ERR\22 }, { IB_WC_LOC_RDD_VIOL_ERR, \22LOC_RDD_VIOL_ERR\22 }, { IB_WC_REM_INV_RD_REQ_ERR, \22REM_INV_RD_REQ_ERR\22 }, { IB_WC_REM_ABORT_ERR, \22REM_ABORT_ERR\22 }, { IB_WC_INV_EECN_ERR, \22INV_EECN_ERR\22 }, { IB_WC_INV_EEC_STATE_ERR, \22INV_EEC_STATE_ERR\22 }, { IB_WC_FATAL_ERR, \22FATAL_ERR\22 }, { IB_WC_RESP_TIMEOUT_ERR, \22RESP_TIMEOUT_ERR\22 }, { IB_WC_GENERAL_ERR, \22GENERAL_ERR\22 }), REC->status, REC->vendor_err\00", [286 x i8] zeroinitializer }, align 32
@event_xprtrdma_wc_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_completion_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_wc_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_completion_class }, ptr @print_fmt_rpcrdma_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_wc_send = internal global ptr @event_xprtrdma_wc_send, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_mr_completion_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_mr_completion_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_mr_completion_class = internal global { [1060 x i8], [284 x i8] } { [1060 x i8] c"\22cq.id=%u mr.id=%d status=%s (%lu/0x%x)\22, REC->cq_id, REC->completion_id, __print_symbolic(REC->status, { IB_WC_SUCCESS, \22SUCCESS\22 }, { IB_WC_LOC_LEN_ERR, \22LOC_LEN_ERR\22 }, { IB_WC_LOC_QP_OP_ERR, \22LOC_QP_OP_ERR\22 }, { IB_WC_LOC_EEC_OP_ERR, \22LOC_EEC_OP_ERR\22 }, { IB_WC_LOC_PROT_ERR, \22LOC_PROT_ERR\22 }, { IB_WC_WR_FLUSH_ERR, \22WR_FLUSH_ERR\22 }, { IB_WC_MW_BIND_ERR, \22MW_BIND_ERR\22 }, { IB_WC_BAD_RESP_ERR, \22BAD_RESP_ERR\22 }, { IB_WC_LOC_ACCESS_ERR, \22LOC_ACCESS_ERR\22 }, { IB_WC_REM_INV_REQ_ERR, \22REM_INV_REQ_ERR\22 }, { IB_WC_REM_ACCESS_ERR, \22REM_ACCESS_ERR\22 }, { IB_WC_REM_OP_ERR, \22REM_OP_ERR\22 }, { IB_WC_RETRY_EXC_ERR, \22RETRY_EXC_ERR\22 }, { IB_WC_RNR_RETRY_EXC_ERR, \22RNR_RETRY_EXC_ERR\22 }, { IB_WC_LOC_RDD_VIOL_ERR, \22LOC_RDD_VIOL_ERR\22 }, { IB_WC_REM_INV_RD_REQ_ERR, \22REM_INV_RD_REQ_ERR\22 }, { IB_WC_REM_ABORT_ERR, \22REM_ABORT_ERR\22 }, { IB_WC_INV_EECN_ERR, \22INV_EECN_ERR\22 }, { IB_WC_INV_EEC_STATE_ERR, \22INV_EEC_STATE_ERR\22 }, { IB_WC_FATAL_ERR, \22FATAL_ERR\22 }, { IB_WC_RESP_TIMEOUT_ERR, \22RESP_TIMEOUT_ERR\22 }, { IB_WC_GENERAL_ERR, \22GENERAL_ERR\22 }), REC->status, REC->vendor_err\00", [284 x i8] zeroinitializer }, align 32
@event_xprtrdma_wc_fastreg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_mr_completion_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_wc_fastreg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_mr_completion_class }, ptr @print_fmt_rpcrdma_mr_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_wc_fastreg = internal global ptr @event_xprtrdma_wc_fastreg, section "_ftrace_events", align 4
@event_xprtrdma_wc_li = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_mr_completion_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_wc_li }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_mr_completion_class }, ptr @print_fmt_rpcrdma_mr_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_wc_li = internal global ptr @event_xprtrdma_wc_li, section "_ftrace_events", align 4
@event_xprtrdma_wc_li_wake = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_mr_completion_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_wc_li_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_mr_completion_class }, ptr @print_fmt_rpcrdma_mr_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_wc_li_wake = internal global ptr @event_xprtrdma_wc_li_wake, section "_ftrace_events", align 4
@event_xprtrdma_wc_li_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_mr_completion_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_wc_li_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_mr_completion_class }, ptr @print_fmt_rpcrdma_mr_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_wc_li_done = internal global ptr @event_xprtrdma_wc_li_done, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_frwr_alloc = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.108, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_frwr_alloc = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_frwr_alloc, ptr @perf_trace_xprtrdma_frwr_alloc, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_frwr_alloc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_alloc, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_alloc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_frwr_alloc = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_frwr_alloc, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_frwr_alloc = internal global { [39 x i8], [57 x i8] } { [39 x i8] c"\22mr.id=%u: rc=%d\22, REC->mr_id, REC->rc\00", [57 x i8] zeroinitializer }, align 32
@event_xprtrdma_frwr_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_frwr_alloc, %union.anon.205 { ptr @__tracepoint_xprtrdma_frwr_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_frwr_alloc }, ptr @print_fmt_xprtrdma_frwr_alloc, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_frwr_alloc = internal global ptr @event_xprtrdma_frwr_alloc, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_frwr_dereg = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.108, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_frwr_dereg = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_frwr_dereg, ptr @perf_trace_xprtrdma_frwr_dereg, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_frwr_dereg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_dereg, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_dereg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_frwr_dereg = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_frwr_dereg, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_frwr_dereg = internal global { [294 x i8], [90 x i8] } { [294 x i8] c"\22mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s): rc=%d\22, REC->mr_id, REC->nents, REC->length, (unsigned long long)REC->offset, REC->handle, __print_symbolic(REC->dir, { DMA_BIDIRECTIONAL, \22BIDIR\22 }, { DMA_TO_DEVICE, \22TO_DEVICE\22 }, { DMA_FROM_DEVICE, \22FROM_DEVICE\22 }, { DMA_NONE, \22NONE\22 }), REC->rc\00", [90 x i8] zeroinitializer }, align 32
@event_xprtrdma_frwr_dereg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_frwr_dereg, %union.anon.205 { ptr @__tracepoint_xprtrdma_frwr_dereg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_frwr_dereg }, ptr @print_fmt_xprtrdma_frwr_dereg, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_frwr_dereg = internal global ptr @event_xprtrdma_frwr_dereg, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_frwr_sgerr = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_frwr_sgerr = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_frwr_sgerr, ptr @perf_trace_xprtrdma_frwr_sgerr, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_frwr_sgerr, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_sgerr, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_sgerr, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_frwr_sgerr = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_frwr_sgerr, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_frwr_sgerr = internal global { [229 x i8], [59 x i8] } { [229 x i8] c"\22mr.id=%u DMA addr=0x%llx (%s) sg_nents=%d\22, REC->mr_id, REC->addr, __print_symbolic(REC->dir, { DMA_BIDIRECTIONAL, \22BIDIR\22 }, { DMA_TO_DEVICE, \22TO_DEVICE\22 }, { DMA_FROM_DEVICE, \22FROM_DEVICE\22 }, { DMA_NONE, \22NONE\22 }), REC->nents\00", [59 x i8] zeroinitializer }, align 32
@event_xprtrdma_frwr_sgerr = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_frwr_sgerr, %union.anon.205 { ptr @__tracepoint_xprtrdma_frwr_sgerr }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_frwr_sgerr }, ptr @print_fmt_xprtrdma_frwr_sgerr, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_frwr_sgerr = internal global ptr @event_xprtrdma_frwr_sgerr, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_frwr_maperr = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.203, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_frwr_maperr = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_frwr_maperr, ptr @perf_trace_xprtrdma_frwr_maperr, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_frwr_maperr, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_maperr, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_frwr_maperr, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_frwr_maperr = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_frwr_maperr, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_frwr_maperr = internal global { [249 x i8], [39 x i8] } { [249 x i8] c"\22mr.id=%u DMA addr=0x%llx (%s) nents=%d of %d\22, REC->mr_id, REC->addr, __print_symbolic(REC->dir, { DMA_BIDIRECTIONAL, \22BIDIR\22 }, { DMA_TO_DEVICE, \22TO_DEVICE\22 }, { DMA_FROM_DEVICE, \22FROM_DEVICE\22 }, { DMA_NONE, \22NONE\22 }), REC->num_mapped, REC->nents\00", [39 x i8] zeroinitializer }, align 32
@event_xprtrdma_frwr_maperr = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_frwr_maperr, %union.anon.205 { ptr @__tracepoint_xprtrdma_frwr_maperr }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_frwr_maperr }, ptr @print_fmt_xprtrdma_frwr_maperr, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_frwr_maperr = internal global ptr @event_xprtrdma_frwr_maperr, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_mr_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_mr_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_mr_class = internal global { [323 x i8], [93 x i8] } { [323 x i8] c"\22task:%08x@%08x mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s)\22, REC->task_id, REC->client_id, REC->mr_id, REC->nents, REC->length, (unsigned long long)REC->offset, REC->handle, __print_symbolic(REC->dir, { DMA_BIDIRECTIONAL, \22BIDIR\22 }, { DMA_TO_DEVICE, \22TO_DEVICE\22 }, { DMA_FROM_DEVICE, \22FROM_DEVICE\22 }, { DMA_NONE, \22NONE\22 })\00", [93 x i8] zeroinitializer }, align 32
@event_xprtrdma_mr_fastreg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_mr_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_mr_fastreg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_mr_class }, ptr @print_fmt_xprtrdma_mr_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_mr_fastreg = internal global ptr @event_xprtrdma_mr_fastreg, section "_ftrace_events", align 4
@event_xprtrdma_mr_localinv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_mr_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_mr_localinv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_mr_class }, ptr @print_fmt_xprtrdma_mr_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_mr_localinv = internal global ptr @event_xprtrdma_mr_localinv, section "_ftrace_events", align 4
@event_xprtrdma_mr_reminv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_mr_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_mr_reminv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_mr_class }, ptr @print_fmt_xprtrdma_mr_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_mr_reminv = internal global ptr @event_xprtrdma_mr_reminv, section "_ftrace_events", align 4
@event_xprtrdma_mr_map = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_mr_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_mr_map }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_mr_class }, ptr @print_fmt_xprtrdma_mr_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_mr_map = internal global ptr @event_xprtrdma_mr_map, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_anonymous_mr_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_anonymous_mr_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_anonymous_mr_class = internal global { [278 x i8], [74 x i8] } { [278 x i8] c"\22mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s)\22, REC->mr_id, REC->nents, REC->length, (unsigned long long)REC->offset, REC->handle, __print_symbolic(REC->dir, { DMA_BIDIRECTIONAL, \22BIDIR\22 }, { DMA_TO_DEVICE, \22TO_DEVICE\22 }, { DMA_FROM_DEVICE, \22FROM_DEVICE\22 }, { DMA_NONE, \22NONE\22 })\00", [74 x i8] zeroinitializer }, align 32
@event_xprtrdma_mr_unmap = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_anonymous_mr_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_mr_unmap }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_anonymous_mr_class }, ptr @print_fmt_xprtrdma_anonymous_mr_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_mr_unmap = internal global ptr @event_xprtrdma_mr_unmap, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_dma_maperr = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_dma_maperr = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_dma_maperr, ptr @perf_trace_xprtrdma_dma_maperr, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_dma_maperr, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_dma_maperr, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_dma_maperr, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_dma_maperr = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_dma_maperr, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_dma_maperr = internal global { [30 x i8], [34 x i8] } { [30 x i8] c"\22dma addr=0x%llx\0A\22, REC->addr\00", [34 x i8] zeroinitializer }, align 32
@event_xprtrdma_dma_maperr = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_dma_maperr, %union.anon.205 { ptr @__tracepoint_xprtrdma_dma_maperr }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_dma_maperr }, ptr @print_fmt_xprtrdma_dma_maperr, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_dma_maperr = internal global ptr @event_xprtrdma_dma_maperr, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_reply = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.208, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_reply = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_reply, ptr @perf_trace_xprtrdma_reply, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_reply, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_reply, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_reply, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_reply = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_reply, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_reply = internal global { [93 x i8], [35 x i8] } { [93 x i8] c"\22task:%08x@%08x xid=0x%08x credits=%u\22, REC->task_id, REC->client_id, REC->xid, REC->credits\00", [35 x i8] zeroinitializer }, align 32
@event_xprtrdma_reply = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_reply, %union.anon.205 { ptr @__tracepoint_xprtrdma_reply }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_reply }, ptr @print_fmt_xprtrdma_reply, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_reply = internal global ptr @event_xprtrdma_reply, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_reply_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_reply_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_reply_class = internal global { [114 x i8], [46 x i8] } { [114 x i8] c"\22peer=[%s]:%s xid=0x%08x version=%u proc=%u\22, __get_str(addr), __get_str(port), REC->xid, REC->version, REC->proc\00", [46 x i8] zeroinitializer }, align 32
@event_xprtrdma_reply_vers_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_reply_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_reply_vers_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_reply_class }, ptr @print_fmt_xprtrdma_reply_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_reply_vers_err = internal global ptr @event_xprtrdma_reply_vers_err, section "_ftrace_events", align 4
@event_xprtrdma_reply_rqst_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_reply_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_reply_rqst_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_reply_class }, ptr @print_fmt_xprtrdma_reply_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_reply_rqst_err = internal global ptr @event_xprtrdma_reply_rqst_err, section "_ftrace_events", align 4
@event_xprtrdma_reply_short_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_reply_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_reply_short_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_reply_class }, ptr @print_fmt_xprtrdma_reply_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_reply_short_err = internal global ptr @event_xprtrdma_reply_short_err, section "_ftrace_events", align 4
@event_xprtrdma_reply_hdr_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_reply_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_reply_hdr_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_reply_class }, ptr @print_fmt_xprtrdma_reply_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_reply_hdr_err = internal global ptr @event_xprtrdma_reply_hdr_err, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_err_vers = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.211, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.212, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_err_vers = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_err_vers, ptr @perf_trace_xprtrdma_err_vers, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_err_vers, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_err_vers, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_err_vers, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_err_vers = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_err_vers, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_err_vers = internal global { [106 x i8], [54 x i8] } { [106 x i8] c"\22task:%08x@%08x xid=0x%08x versions=[%u, %u]\22, REC->task_id, REC->client_id, REC->xid, REC->min, REC->max\00", [54 x i8] zeroinitializer }, align 32
@event_xprtrdma_err_vers = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_err_vers, %union.anon.205 { ptr @__tracepoint_xprtrdma_err_vers }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_err_vers }, ptr @print_fmt_xprtrdma_err_vers, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_err_vers = internal global ptr @event_xprtrdma_err_vers, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_err_chunk = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_err_chunk = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_err_chunk, ptr @perf_trace_xprtrdma_err_chunk, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_err_chunk, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_err_chunk, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_err_chunk, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_err_chunk = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_err_chunk, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_err_chunk = internal global { [68 x i8], [60 x i8] } { [68 x i8] c"\22task:%08x@%08x xid=0x%08x\22, REC->task_id, REC->client_id, REC->xid\00", [60 x i8] zeroinitializer }, align 32
@event_xprtrdma_err_chunk = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_err_chunk, %union.anon.205 { ptr @__tracepoint_xprtrdma_err_chunk }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_err_chunk }, ptr @print_fmt_xprtrdma_err_chunk, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_err_chunk = internal global ptr @event_xprtrdma_err_chunk, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_err_unrecognized = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.215, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_err_unrecognized = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_err_unrecognized, ptr @perf_trace_xprtrdma_err_unrecognized, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_err_unrecognized, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_err_unrecognized, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_err_unrecognized, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_err_unrecognized = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_err_unrecognized, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_err_unrecognized = internal global { [97 x i8], [63 x i8] } { [97 x i8] c"\22task:%08x@%08x xid=0x%08x procedure=%u\22, REC->task_id, REC->client_id, REC->xid, REC->procedure\00", [63 x i8] zeroinitializer }, align 32
@event_xprtrdma_err_unrecognized = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_err_unrecognized, %union.anon.205 { ptr @__tracepoint_xprtrdma_err_unrecognized }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_err_unrecognized }, ptr @print_fmt_xprtrdma_err_unrecognized, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_err_unrecognized = internal global ptr @event_xprtrdma_err_unrecognized, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_fixup = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.203 { %struct.anon.204 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.203 { %struct.anon.204 { ptr @.str.144, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.145, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.203 { %struct.anon.204 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_fixup = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_fixup, ptr @perf_trace_xprtrdma_fixup, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_fixup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_fixup, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_fixup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_fixup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_fixup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_fixup = internal global { [126 x i8], [34 x i8] } { [126 x i8] c"\22task:%08x@%08x fixup=%lu xdr=%zu/%u/%zu\22, REC->task_id, REC->client_id, REC->fixup, REC->headlen, REC->pagelen, REC->taillen\00", [34 x i8] zeroinitializer }, align 32
@event_xprtrdma_fixup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_fixup, %union.anon.205 { ptr @__tracepoint_xprtrdma_fixup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_fixup }, ptr @print_fmt_xprtrdma_fixup, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_fixup = internal global ptr @event_xprtrdma_fixup, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_decode_seg = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_decode_seg = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_decode_seg, ptr @perf_trace_xprtrdma_decode_seg, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_decode_seg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_decode_seg, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_decode_seg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_decode_seg = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_decode_seg, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_decode_seg = internal global { [81 x i8], [47 x i8] } { [81 x i8] c"\22%u@0x%016llx:0x%08x\22, REC->length, (unsigned long long)REC->offset, REC->handle\00", [47 x i8] zeroinitializer }, align 32
@event_xprtrdma_decode_seg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_decode_seg, %union.anon.205 { ptr @__tracepoint_xprtrdma_decode_seg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_decode_seg }, ptr @print_fmt_xprtrdma_decode_seg, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_decode_seg = internal global ptr @event_xprtrdma_decode_seg, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_mrs_zap = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_mrs_zap = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_mrs_zap, ptr @perf_trace_xprtrdma_mrs_zap, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_mrs_zap, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_mrs_zap, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_mrs_zap, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_mrs_zap = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_mrs_zap, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_mrs_zap = internal global { [47 x i8], [49 x i8] } { [47 x i8] c"\22task:%08x@%08x\22, REC->task_id, REC->client_id\00", [49 x i8] zeroinitializer }, align 32
@event_xprtrdma_mrs_zap = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_mrs_zap, %union.anon.205 { ptr @__tracepoint_xprtrdma_mrs_zap }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_mrs_zap }, ptr @print_fmt_xprtrdma_mrs_zap, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_mrs_zap = internal global ptr @event_xprtrdma_mrs_zap, section "_ftrace_events", align 4
@trace_event_fields_xprtrdma_cb_setup = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.222, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.107, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xprtrdma_cb_setup = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_xprtrdma_cb_setup, ptr @perf_trace_xprtrdma_cb_setup, ptr @trace_event_reg, ptr @trace_event_fields_xprtrdma_cb_setup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xprtrdma_cb_setup, i64 24), ptr getelementptr (i8, ptr @event_class_xprtrdma_cb_setup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xprtrdma_cb_setup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_cb_setup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_cb_setup = internal global { [68 x i8], [60 x i8] } { [68 x i8] c"\22peer=[%s]:%s %u reqs\22, __get_str(addr), __get_str(port), REC->reqs\00", [60 x i8] zeroinitializer }, align 32
@event_xprtrdma_cb_setup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_cb_setup, %union.anon.205 { ptr @__tracepoint_xprtrdma_cb_setup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_cb_setup }, ptr @print_fmt_xprtrdma_cb_setup, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_cb_setup = internal global ptr @event_xprtrdma_cb_setup, section "_ftrace_events", align 4
@trace_event_type_funcs_xprtrdma_callback_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xprtrdma_callback_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xprtrdma_callback_class = internal global { [70 x i8], [58 x i8] } { [70 x i8] c"\22peer=[%s]:%s xid=0x%08x\22, __get_str(addr), __get_str(port), REC->xid\00", [58 x i8] zeroinitializer }, align 32
@event_xprtrdma_cb_call = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_callback_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_cb_call }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_callback_class }, ptr @print_fmt_xprtrdma_callback_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_cb_call = internal global ptr @event_xprtrdma_cb_call, section "_ftrace_events", align 4
@event_xprtrdma_cb_reply = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xprtrdma_callback_class, %union.anon.205 { ptr @__tracepoint_xprtrdma_cb_reply }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xprtrdma_callback_class }, ptr @print_fmt_xprtrdma_callback_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xprtrdma_cb_reply = internal global ptr @event_xprtrdma_cb_reply, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_accept_class = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.225, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svcrdma_accept_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_accept_class, ptr @perf_trace_svcrdma_accept_class, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_accept_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_accept_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_accept_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_accept_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_accept_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_accept_class = internal global { [51 x i8], [45 x i8] } { [51 x i8] c"\22addr=%s status=%ld\22, __get_str(addr), REC->status\00", [45 x i8] zeroinitializer }, align 32
@event_svcrdma_pd_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_accept_class, %union.anon.205 { ptr @__tracepoint_svcrdma_pd_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_accept_class }, ptr @print_fmt_svcrdma_accept_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_pd_err = internal global ptr @event_svcrdma_pd_err, section "_ftrace_events", align 4
@event_svcrdma_qp_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_accept_class, %union.anon.205 { ptr @__tracepoint_svcrdma_qp_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_accept_class }, ptr @print_fmt_svcrdma_accept_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_qp_err = internal global ptr @event_svcrdma_qp_err, section "_ftrace_events", align 4
@event_svcrdma_fabric_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_accept_class, %union.anon.205 { ptr @__tracepoint_svcrdma_fabric_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_accept_class }, ptr @print_fmt_svcrdma_accept_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_fabric_err = internal global ptr @event_svcrdma_fabric_err, section "_ftrace_events", align 4
@event_svcrdma_initdepth_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_accept_class, %union.anon.205 { ptr @__tracepoint_svcrdma_initdepth_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_accept_class }, ptr @print_fmt_svcrdma_accept_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_initdepth_err = internal global ptr @event_svcrdma_initdepth_err, section "_ftrace_events", align 4
@event_svcrdma_accept_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_accept_class, %union.anon.205 { ptr @__tracepoint_svcrdma_accept_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_accept_class }, ptr @print_fmt_svcrdma_accept_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_accept_err = internal global ptr @event_svcrdma_accept_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_decode_rqst = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.227, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.104, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.208, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.143, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_decode_rqst = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_decode_rqst, ptr @perf_trace_svcrdma_decode_rqst, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_decode_rqst, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_decode_rqst, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_decode_rqst, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_decode_rqst = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_decode_rqst, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_decode_rqst = internal global { [317 x i8], [67 x i8] } { [317 x i8] c"\22cq.id=%u cid=%d xid=0x%08x vers=%u credits=%u proc=%s hdrlen=%u\22, REC->cq_id, REC->completion_id, REC->xid, REC->vers, REC->credits, __print_symbolic(REC->proc, { RDMA_MSG, \22RDMA_MSG\22 }, { RDMA_NOMSG, \22RDMA_NOMSG\22 }, { RDMA_MSGP, \22RDMA_MSGP\22 }, { RDMA_DONE, \22RDMA_DONE\22 }, { RDMA_ERROR, \22RDMA_ERROR\22 }), REC->hdrlen\00", [67 x i8] zeroinitializer }, align 32
@event_svcrdma_decode_rqst = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_decode_rqst, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_rqst }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_decode_rqst }, ptr @print_fmt_svcrdma_decode_rqst, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_rqst = internal global ptr @event_svcrdma_decode_rqst, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_decode_short_err = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.143, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_decode_short_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_decode_short_err, ptr @perf_trace_svcrdma_decode_short_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_decode_short_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_decode_short_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_decode_short_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_decode_short_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_decode_short_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_decode_short_err = internal global { [73 x i8], [55 x i8] } { [73 x i8] c"\22cq.id=%u cid=%d hdrlen=%u\22, REC->cq_id, REC->completion_id, REC->hdrlen\00", [55 x i8] zeroinitializer }, align 32
@event_svcrdma_decode_short_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_decode_short_err, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_short_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_decode_short_err }, ptr @print_fmt_svcrdma_decode_short_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_short_err = internal global ptr @event_svcrdma_decode_short_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_badreq_event = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.227, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.104, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.208, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svcrdma_badreq_event = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_badreq_event, ptr @perf_trace_svcrdma_badreq_event, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_badreq_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_badreq_event, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_badreq_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_badreq_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_badreq_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_badreq_event = internal global { [134 x i8], [58 x i8] } { [134 x i8] c"\22cq.id=%u cid=%d xid=0x%08x vers=%u credits=%u proc=%u\22, REC->cq_id, REC->completion_id, REC->xid, REC->vers, REC->credits, REC->proc\00", [58 x i8] zeroinitializer }, align 32
@event_svcrdma_decode_badvers_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_badreq_event, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_badvers_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_badreq_event }, ptr @print_fmt_svcrdma_badreq_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_badvers_err = internal global ptr @event_svcrdma_decode_badvers_err, section "_ftrace_events", align 4
@event_svcrdma_decode_drop_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_badreq_event, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_drop_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_badreq_event }, ptr @print_fmt_svcrdma_badreq_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_drop_err = internal global ptr @event_svcrdma_decode_drop_err, section "_ftrace_events", align 4
@event_svcrdma_decode_badproc_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_badreq_event, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_badproc_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_badreq_event }, ptr @print_fmt_svcrdma_badreq_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_badproc_err = internal global ptr @event_svcrdma_decode_badproc_err, section "_ftrace_events", align 4
@event_svcrdma_decode_parse_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_badreq_event, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_parse_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_badreq_event }, ptr @print_fmt_svcrdma_badreq_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_parse_err = internal global ptr @event_svcrdma_decode_parse_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_encode_wseg = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.231, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svcrdma_encode_wseg = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_encode_wseg, ptr @perf_trace_svcrdma_encode_wseg, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_encode_wseg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_encode_wseg, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_encode_wseg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_encode_wseg = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_encode_wseg, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_encode_wseg = internal global { [150 x i8], [42 x i8] } { [150 x i8] c"\22cq_id=%u cid=%d segno=%u %u@0x%016llx:0x%08x\22, REC->cq_id, REC->completion_id, REC->segno, REC->length, (unsigned long long)REC->offset, REC->handle\00", [42 x i8] zeroinitializer }, align 32
@event_svcrdma_encode_wseg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_encode_wseg, %union.anon.205 { ptr @__tracepoint_svcrdma_encode_wseg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_encode_wseg }, ptr @print_fmt_svcrdma_encode_wseg, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_encode_wseg = internal global ptr @event_svcrdma_encode_wseg, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_decode_rseg = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.231, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.233, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_decode_rseg = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_decode_rseg, ptr @perf_trace_svcrdma_decode_rseg, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_decode_rseg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_decode_rseg, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_decode_rseg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_decode_rseg = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_decode_rseg, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_decode_rseg = internal global { [177 x i8], [47 x i8] } { [177 x i8] c"\22cq_id=%u cid=%d segno=%u position=%u %u@0x%016llx:0x%08x\22, REC->cq_id, REC->completion_id, REC->segno, REC->position, REC->length, (unsigned long long)REC->offset, REC->handle\00", [47 x i8] zeroinitializer }, align 32
@event_svcrdma_decode_rseg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_decode_rseg, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_rseg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_decode_rseg }, ptr @print_fmt_svcrdma_decode_rseg, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_rseg = internal global ptr @event_svcrdma_decode_rseg, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_decode_wseg = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.231, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.117, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svcrdma_decode_wseg = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_decode_wseg, ptr @perf_trace_svcrdma_decode_wseg, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_decode_wseg, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_decode_wseg, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_decode_wseg, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_decode_wseg = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_decode_wseg, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_decode_wseg = internal global { [150 x i8], [42 x i8] } { [150 x i8] c"\22cq_id=%u cid=%d segno=%u %u@0x%016llx:0x%08x\22, REC->cq_id, REC->completion_id, REC->segno, REC->length, (unsigned long long)REC->offset, REC->handle\00", [42 x i8] zeroinitializer }, align 32
@event_svcrdma_decode_wseg = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_decode_wseg, %union.anon.205 { ptr @__tracepoint_svcrdma_decode_wseg }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_decode_wseg }, ptr @print_fmt_svcrdma_decode_wseg, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_decode_wseg = internal global ptr @event_svcrdma_decode_wseg, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_error_event = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_svcrdma_error_event = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_error_event, ptr @perf_trace_svcrdma_error_event, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_error_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_error_event, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_error_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_error_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_error_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_error_event = internal global { [23 x i8], [41 x i8] } { [23 x i8] c"\22xid=0x%08x\22, REC->xid\00", [41 x i8] zeroinitializer }, align 32
@event_svcrdma_err_vers = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_error_event, %union.anon.205 { ptr @__tracepoint_svcrdma_err_vers }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_error_event }, ptr @print_fmt_svcrdma_error_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_err_vers = internal global ptr @event_svcrdma_err_vers, section "_ftrace_events", align 4
@event_svcrdma_err_chunk = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_error_event, %union.anon.205 { ptr @__tracepoint_svcrdma_err_chunk }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_error_event }, ptr @print_fmt_svcrdma_error_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_err_chunk = internal global ptr @event_svcrdma_err_chunk, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_dma_map_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.116, %union.anon.203 { %struct.anon.204 { ptr @.str.236, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.237, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_dma_map_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_dma_map_class, ptr @perf_trace_svcrdma_dma_map_class, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_dma_map_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_dma_map_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_dma_map_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_dma_map_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_dma_map_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_dma_map_class = internal global { [108 x i8], [52 x i8] } { [108 x i8] c"\22addr=%s device=%s dma_addr=%llu length=%u\22, __get_str(addr), __get_str(device), REC->dma_addr, REC->length\00", [52 x i8] zeroinitializer }, align 32
@event_svcrdma_dma_map_page = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_dma_map_class, %union.anon.205 { ptr @__tracepoint_svcrdma_dma_map_page }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_dma_map_class }, ptr @print_fmt_svcrdma_dma_map_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_dma_map_page = internal global ptr @event_svcrdma_dma_map_page, section "_ftrace_events", align 4
@event_svcrdma_dma_map_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_dma_map_class, %union.anon.205 { ptr @__tracepoint_svcrdma_dma_map_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_dma_map_class }, ptr @print_fmt_svcrdma_dma_map_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_dma_map_err = internal global ptr @event_svcrdma_dma_map_err, section "_ftrace_events", align 4
@event_svcrdma_dma_unmap_page = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_dma_map_class, %union.anon.205 { ptr @__tracepoint_svcrdma_dma_unmap_page }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_dma_map_class }, ptr @print_fmt_svcrdma_dma_map_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_dma_unmap_page = internal global ptr @event_svcrdma_dma_unmap_page, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_dma_map_rw_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.113, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.237, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_dma_map_rw_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_dma_map_rw_err, ptr @perf_trace_svcrdma_dma_map_rw_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_dma_map_rw_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_dma_map_rw_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_dma_map_rw_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_dma_map_rw_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_dma_map_rw_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_dma_map_rw_err = internal global { [100 x i8], [60 x i8] } { [100 x i8] c"\22addr=%s device=%s nents=%u status=%d\22, __get_str(addr), __get_str(device), REC->nents, REC->status\00", [60 x i8] zeroinitializer }, align 32
@event_svcrdma_dma_map_rw_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_dma_map_rw_err, %union.anon.205 { ptr @__tracepoint_svcrdma_dma_map_rw_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_dma_map_rw_err }, ptr @print_fmt_svcrdma_dma_map_rw_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_dma_map_rw_err = internal global ptr @event_svcrdma_dma_map_rw_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_no_rwctx_err = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.240, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.237, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_no_rwctx_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_no_rwctx_err, ptr @perf_trace_svcrdma_no_rwctx_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_no_rwctx_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_no_rwctx_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_no_rwctx_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_no_rwctx_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_no_rwctx_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_no_rwctx_err = internal global { [83 x i8], [45 x i8] } { [83 x i8] c"\22addr=%s device=%s num_sges=%d\22, __get_str(addr), __get_str(device), REC->num_sges\00", [45 x i8] zeroinitializer }, align 32
@event_svcrdma_no_rwctx_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_no_rwctx_err, %union.anon.205 { ptr @__tracepoint_svcrdma_no_rwctx_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_no_rwctx_err }, ptr @print_fmt_svcrdma_no_rwctx_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_no_rwctx_err = internal global ptr @event_svcrdma_no_rwctx_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_page_overrun_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.242, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.237, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_page_overrun_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_page_overrun_err, ptr @perf_trace_svcrdma_page_overrun_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_page_overrun_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_page_overrun_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_page_overrun_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_page_overrun_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_page_overrun_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_page_overrun_err = internal global { [100 x i8], [60 x i8] } { [100 x i8] c"\22addr=%s device=%s xid=0x%08x pageno=%u\22, __get_str(addr), __get_str(device), REC->xid, REC->pageno\00", [60 x i8] zeroinitializer }, align 32
@event_svcrdma_page_overrun_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_page_overrun_err, %union.anon.205 { ptr @__tracepoint_svcrdma_page_overrun_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_page_overrun_err }, ptr @print_fmt_svcrdma_page_overrun_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_page_overrun_err = internal global ptr @event_svcrdma_page_overrun_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_small_wrch_err = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.244, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.245, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.246, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.237, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_svcrdma_small_wrch_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_small_wrch_err, ptr @perf_trace_svcrdma_small_wrch_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_small_wrch_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_small_wrch_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_small_wrch_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_small_wrch_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_small_wrch_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_small_wrch_err = internal global { [135 x i8], [57 x i8] } { [135 x i8] c"\22addr=%s device=%s remaining=%u seg_no=%u num_segs=%u\22, __get_str(addr), __get_str(device), REC->remaining, REC->seg_no, REC->num_segs\00", [57 x i8] zeroinitializer }, align 32
@event_svcrdma_small_wrch_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_small_wrch_err, %union.anon.205 { ptr @__tracepoint_svcrdma_small_wrch_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_small_wrch_err }, ptr @print_fmt_svcrdma_small_wrch_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_small_wrch_err = internal global ptr @event_svcrdma_small_wrch_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_send_pullup = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.143, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.248, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_send_pullup = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_send_pullup, ptr @perf_trace_svcrdma_send_pullup, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_send_pullup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_send_pullup, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_send_pullup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_send_pullup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_send_pullup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_send_pullup = internal global { [128 x i8], [32 x i8] } { [128 x i8] c"\22cq_id=%u cid=%d hdr=%u msg=%u (total %u)\22, REC->cq_id, REC->completion_id, REC->hdrlen, REC->msglen, REC->hdrlen + REC->msglen\00", [32 x i8] zeroinitializer }, align 32
@event_svcrdma_send_pullup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_send_pullup, %union.anon.205 { ptr @__tracepoint_svcrdma_send_pullup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_send_pullup }, ptr @print_fmt_svcrdma_send_pullup, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_send_pullup = internal global ptr @event_svcrdma_send_pullup, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_send_err = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_send_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_send_err, ptr @perf_trace_svcrdma_send_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_send_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_send_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_send_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_send_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_send_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_send_err = internal global { [71 x i8], [57 x i8] } { [71 x i8] c"\22addr=%s xid=0x%08x status=%d\22, __get_str(addr), REC->xid, REC->status\00", [57 x i8] zeroinitializer }, align 32
@event_svcrdma_send_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_send_err, %union.anon.205 { ptr @__tracepoint_svcrdma_send_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_send_err }, ptr @print_fmt_svcrdma_send_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_send_err = internal global ptr @event_svcrdma_send_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_post_send = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.160, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.251, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_post_send = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_post_send, ptr @perf_trace_svcrdma_post_send, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_post_send, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_post_send, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_post_send, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_post_send = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_post_send, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_post_send = internal global { [106 x i8], [54 x i8] } { [106 x i8] c"\22cq_id=%u cid=%d num_sge=%u inv_rkey=0x%08x\22, REC->cq_id, REC->completion_id, REC->num_sge, REC->inv_rkey\00", [54 x i8] zeroinitializer }, align 32
@event_svcrdma_post_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_post_send, %union.anon.205 { ptr @__tracepoint_svcrdma_post_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_post_send }, ptr @print_fmt_svcrdma_post_send, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_post_send = internal global ptr @event_svcrdma_post_send, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_send_completion_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_send_completion_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_send_completion_class = internal global { [50 x i8], [46 x i8] } { [50 x i8] c"\22cq.id=%u cid=%d\22, REC->cq_id, REC->completion_id\00", [46 x i8] zeroinitializer }, align 32
@event_svcrdma_wc_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_completion_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_completion_class }, ptr @print_fmt_rpcrdma_send_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_send = internal global ptr @event_svcrdma_wc_send, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_send_flush_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_send_flush_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_send_flush_class = internal global { [1058 x i8], [286 x i8] } { [1058 x i8] c"\22cq.id=%u cid=%d status=%s (%lu/0x%x)\22, REC->cq_id, REC->completion_id, __print_symbolic(REC->status, { IB_WC_SUCCESS, \22SUCCESS\22 }, { IB_WC_LOC_LEN_ERR, \22LOC_LEN_ERR\22 }, { IB_WC_LOC_QP_OP_ERR, \22LOC_QP_OP_ERR\22 }, { IB_WC_LOC_EEC_OP_ERR, \22LOC_EEC_OP_ERR\22 }, { IB_WC_LOC_PROT_ERR, \22LOC_PROT_ERR\22 }, { IB_WC_WR_FLUSH_ERR, \22WR_FLUSH_ERR\22 }, { IB_WC_MW_BIND_ERR, \22MW_BIND_ERR\22 }, { IB_WC_BAD_RESP_ERR, \22BAD_RESP_ERR\22 }, { IB_WC_LOC_ACCESS_ERR, \22LOC_ACCESS_ERR\22 }, { IB_WC_REM_INV_REQ_ERR, \22REM_INV_REQ_ERR\22 }, { IB_WC_REM_ACCESS_ERR, \22REM_ACCESS_ERR\22 }, { IB_WC_REM_OP_ERR, \22REM_OP_ERR\22 }, { IB_WC_RETRY_EXC_ERR, \22RETRY_EXC_ERR\22 }, { IB_WC_RNR_RETRY_EXC_ERR, \22RNR_RETRY_EXC_ERR\22 }, { IB_WC_LOC_RDD_VIOL_ERR, \22LOC_RDD_VIOL_ERR\22 }, { IB_WC_REM_INV_RD_REQ_ERR, \22REM_INV_RD_REQ_ERR\22 }, { IB_WC_REM_ABORT_ERR, \22REM_ABORT_ERR\22 }, { IB_WC_INV_EECN_ERR, \22INV_EECN_ERR\22 }, { IB_WC_INV_EEC_STATE_ERR, \22INV_EEC_STATE_ERR\22 }, { IB_WC_FATAL_ERR, \22FATAL_ERR\22 }, { IB_WC_RESP_TIMEOUT_ERR, \22RESP_TIMEOUT_ERR\22 }, { IB_WC_GENERAL_ERR, \22GENERAL_ERR\22 }), REC->status, REC->vendor_err\00", [286 x i8] zeroinitializer }, align 32
@event_svcrdma_wc_send_flush = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_send_flush }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_flush_class }, ptr @print_fmt_rpcrdma_send_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_send_flush = internal global ptr @event_svcrdma_wc_send_flush, section "_ftrace_events", align 4
@event_svcrdma_wc_send_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_send_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_flush_class }, ptr @print_fmt_rpcrdma_send_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_send_err = internal global ptr @event_svcrdma_wc_send_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_post_recv = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svcrdma_post_recv = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_post_recv, ptr @perf_trace_svcrdma_post_recv, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_post_recv, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_post_recv, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_post_recv, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_post_recv = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_post_recv, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_post_recv = internal global { [50 x i8], [46 x i8] } { [50 x i8] c"\22cq.id=%d cid=%d\22, REC->cq_id, REC->completion_id\00", [46 x i8] zeroinitializer }, align 32
@event_svcrdma_post_recv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_post_recv, %union.anon.205 { ptr @__tracepoint_svcrdma_post_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_post_recv }, ptr @print_fmt_svcrdma_post_recv, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_post_recv = internal global ptr @event_svcrdma_post_recv, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_receive_success_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_receive_success_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_receive_success_class = internal global { [77 x i8], [51 x i8] } { [77 x i8] c"\22cq.id=%u cid=%d received=%u\22, REC->cq_id, REC->completion_id, REC->received\00", [51 x i8] zeroinitializer }, align 32
@event_svcrdma_wc_recv = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_receive_success_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_recv }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_receive_success_class }, ptr @print_fmt_rpcrdma_receive_success_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_recv = internal global ptr @event_svcrdma_wc_recv, section "_ftrace_events", align 4
@trace_event_type_funcs_rpcrdma_receive_flush_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rpcrdma_receive_flush_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rpcrdma_receive_flush_class = internal global { [1058 x i8], [286 x i8] } { [1058 x i8] c"\22cq.id=%u cid=%d status=%s (%lu/0x%x)\22, REC->cq_id, REC->completion_id, __print_symbolic(REC->status, { IB_WC_SUCCESS, \22SUCCESS\22 }, { IB_WC_LOC_LEN_ERR, \22LOC_LEN_ERR\22 }, { IB_WC_LOC_QP_OP_ERR, \22LOC_QP_OP_ERR\22 }, { IB_WC_LOC_EEC_OP_ERR, \22LOC_EEC_OP_ERR\22 }, { IB_WC_LOC_PROT_ERR, \22LOC_PROT_ERR\22 }, { IB_WC_WR_FLUSH_ERR, \22WR_FLUSH_ERR\22 }, { IB_WC_MW_BIND_ERR, \22MW_BIND_ERR\22 }, { IB_WC_BAD_RESP_ERR, \22BAD_RESP_ERR\22 }, { IB_WC_LOC_ACCESS_ERR, \22LOC_ACCESS_ERR\22 }, { IB_WC_REM_INV_REQ_ERR, \22REM_INV_REQ_ERR\22 }, { IB_WC_REM_ACCESS_ERR, \22REM_ACCESS_ERR\22 }, { IB_WC_REM_OP_ERR, \22REM_OP_ERR\22 }, { IB_WC_RETRY_EXC_ERR, \22RETRY_EXC_ERR\22 }, { IB_WC_RNR_RETRY_EXC_ERR, \22RNR_RETRY_EXC_ERR\22 }, { IB_WC_LOC_RDD_VIOL_ERR, \22LOC_RDD_VIOL_ERR\22 }, { IB_WC_REM_INV_RD_REQ_ERR, \22REM_INV_RD_REQ_ERR\22 }, { IB_WC_REM_ABORT_ERR, \22REM_ABORT_ERR\22 }, { IB_WC_INV_EECN_ERR, \22INV_EECN_ERR\22 }, { IB_WC_INV_EEC_STATE_ERR, \22INV_EEC_STATE_ERR\22 }, { IB_WC_FATAL_ERR, \22FATAL_ERR\22 }, { IB_WC_RESP_TIMEOUT_ERR, \22RESP_TIMEOUT_ERR\22 }, { IB_WC_GENERAL_ERR, \22GENERAL_ERR\22 }), REC->status, REC->vendor_err\00", [286 x i8] zeroinitializer }, align 32
@event_svcrdma_wc_recv_flush = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_receive_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_recv_flush }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_receive_flush_class }, ptr @print_fmt_rpcrdma_receive_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_recv_flush = internal global ptr @event_svcrdma_wc_recv_flush, section "_ftrace_events", align 4
@event_svcrdma_wc_recv_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_receive_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_recv_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_receive_flush_class }, ptr @print_fmt_rpcrdma_receive_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_recv_err = internal global ptr @event_svcrdma_wc_recv_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_rq_post_err = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_svcrdma_rq_post_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_rq_post_err, ptr @perf_trace_svcrdma_rq_post_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_rq_post_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_rq_post_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_rq_post_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_rq_post_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_rq_post_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_rq_post_err = internal global { [50 x i8], [46 x i8] } { [50 x i8] c"\22addr=%s status=%d\22, __get_str(addr), REC->status\00", [46 x i8] zeroinitializer }, align 32
@event_svcrdma_rq_post_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_rq_post_err, %union.anon.205 { ptr @__tracepoint_svcrdma_rq_post_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_rq_post_err }, ptr @print_fmt_svcrdma_rq_post_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_rq_post_err = internal global ptr @event_svcrdma_rq_post_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_post_chunk_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.256, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_post_chunk_class = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_post_chunk_class, ptr @perf_trace_svcrdma_post_chunk_class, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_post_chunk_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_post_chunk_class, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_post_chunk_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_post_chunk_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_post_chunk_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_post_chunk_class = internal global { [77 x i8], [51 x i8] } { [77 x i8] c"\22cq.id=%u cid=%d sqecount=%d\22, REC->cq_id, REC->completion_id, REC->sqecount\00", [51 x i8] zeroinitializer }, align 32
@event_svcrdma_post_read_chunk = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_post_chunk_class, %union.anon.205 { ptr @__tracepoint_svcrdma_post_read_chunk }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_post_chunk_class }, ptr @print_fmt_svcrdma_post_chunk_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_post_read_chunk = internal global ptr @event_svcrdma_post_read_chunk, section "_ftrace_events", align 4
@event_svcrdma_post_write_chunk = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_post_chunk_class, %union.anon.205 { ptr @__tracepoint_svcrdma_post_write_chunk }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_post_chunk_class }, ptr @print_fmt_svcrdma_post_chunk_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_post_write_chunk = internal global ptr @event_svcrdma_post_write_chunk, section "_ftrace_events", align 4
@event_svcrdma_post_reply_chunk = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_post_chunk_class, %union.anon.205 { ptr @__tracepoint_svcrdma_post_reply_chunk }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_post_chunk_class }, ptr @print_fmt_svcrdma_post_chunk_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_post_reply_chunk = internal global ptr @event_svcrdma_post_reply_chunk, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_wc_read = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.92, %union.anon.203 { %struct.anon.204 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.258, %union.anon.203 { %struct.anon.204 { ptr @.str.259, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.260, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_wc_read = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_wc_read, ptr @perf_trace_svcrdma_wc_read, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_wc_read, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_wc_read, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_wc_read, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_wc_read = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_wc_read, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_wc_read = internal global { [116 x i8], [44 x i8] } { [116 x i8] c"\22cq.id=%u cid=%d totalbytes=%u latency-us=%lld\22, REC->cq_id, REC->completion_id, REC->totalbytes, REC->read_latency\00", [44 x i8] zeroinitializer }, align 32
@event_svcrdma_wc_read = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_wc_read, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_read }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_wc_read }, ptr @print_fmt_svcrdma_wc_read, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_read = internal global ptr @event_svcrdma_wc_read, section "_ftrace_events", align 4
@event_svcrdma_wc_read_flush = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_read_flush }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_flush_class }, ptr @print_fmt_rpcrdma_send_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_read_flush = internal global ptr @event_svcrdma_wc_read_flush, section "_ftrace_events", align 4
@event_svcrdma_wc_read_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_read_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_flush_class }, ptr @print_fmt_rpcrdma_send_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_read_err = internal global ptr @event_svcrdma_wc_read_err, section "_ftrace_events", align 4
@event_svcrdma_wc_write = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_completion_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_write }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_completion_class }, ptr @print_fmt_rpcrdma_send_completion_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_write = internal global ptr @event_svcrdma_wc_write, section "_ftrace_events", align 4
@event_svcrdma_wc_write_flush = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_write_flush }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_flush_class }, ptr @print_fmt_rpcrdma_send_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_write_flush = internal global ptr @event_svcrdma_wc_write_flush, section "_ftrace_events", align 4
@event_svcrdma_wc_write_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rpcrdma_send_flush_class, %union.anon.205 { ptr @__tracepoint_svcrdma_wc_write_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rpcrdma_send_flush_class }, ptr @print_fmt_rpcrdma_send_flush_class, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_wc_write_err = internal global ptr @event_svcrdma_wc_write_err, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_qp_error = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.98, %union.anon.203 { %struct.anon.204 { ptr @.str.263, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.237, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.264, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 58, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_qp_error = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_qp_error, ptr @perf_trace_svcrdma_qp_error, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_qp_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_qp_error, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_qp_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_qp_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_qp_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_qp_error = internal global { [911 x i8], [241 x i8] } { [911 x i8] c"\22addr=%s dev=%s event=%s (%u)\22, REC->addr, __get_str(device), __print_symbolic(REC->event, { IB_EVENT_CQ_ERR, \22CQ_ERR\22 }, { IB_EVENT_QP_FATAL, \22QP_FATAL\22 }, { IB_EVENT_QP_REQ_ERR, \22QP_REQ_ERR\22 }, { IB_EVENT_QP_ACCESS_ERR, \22QP_ACCESS_ERR\22 }, { IB_EVENT_COMM_EST, \22COMM_EST\22 }, { IB_EVENT_SQ_DRAINED, \22SQ_DRAINED\22 }, { IB_EVENT_PATH_MIG, \22PATH_MIG\22 }, { IB_EVENT_PATH_MIG_ERR, \22PATH_MIG_ERR\22 }, { IB_EVENT_DEVICE_FATAL, \22DEVICE_FATAL\22 }, { IB_EVENT_PORT_ACTIVE, \22PORT_ACTIVE\22 }, { IB_EVENT_PORT_ERR, \22PORT_ERR\22 }, { IB_EVENT_LID_CHANGE, \22LID_CHANGE\22 }, { IB_EVENT_PKEY_CHANGE, \22PKEY_CHANGE\22 }, { IB_EVENT_SM_CHANGE, \22SM_CHANGE\22 }, { IB_EVENT_SRQ_ERR, \22SRQ_ERR\22 }, { IB_EVENT_SRQ_LIMIT_REACHED, \22SRQ_LIMIT_REACHED\22 }, { IB_EVENT_QP_LAST_WQE_REACHED, \22QP_LAST_WQE_REACHED\22 }, { IB_EVENT_CLIENT_REREGISTER, \22CLIENT_REREGISTER\22 }, { IB_EVENT_GID_CHANGE, \22GID_CHANGE\22 }, { IB_EVENT_WQ_FATAL, \22WQ_FATAL\22 }), REC->event\00", [241 x i8] zeroinitializer }, align 32
@event_svcrdma_qp_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_qp_error, %union.anon.205 { ptr @__tracepoint_svcrdma_qp_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_qp_error }, ptr @print_fmt_svcrdma_qp_error, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_qp_error = internal global ptr @event_svcrdma_qp_error, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_sendqueue_event = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.286, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.287, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_svcrdma_sendqueue_event = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_sendqueue_event, ptr @perf_trace_svcrdma_sendqueue_event, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_sendqueue_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_sendqueue_event, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_sendqueue_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_sendqueue_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_sendqueue_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_sendqueue_event = internal global { [69 x i8], [59 x i8] } { [69 x i8] c"\22addr=%s sc_sq_avail=%d/%d\22, __get_str(addr), REC->avail, REC->depth\00", [59 x i8] zeroinitializer }, align 32
@event_svcrdma_sq_full = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_sendqueue_event, %union.anon.205 { ptr @__tracepoint_svcrdma_sq_full }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_sendqueue_event }, ptr @print_fmt_svcrdma_sendqueue_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_sq_full = internal global ptr @event_svcrdma_sq_full, section "_ftrace_events", align 4
@event_svcrdma_sq_retry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_sendqueue_event, %union.anon.205 { ptr @__tracepoint_svcrdma_sq_retry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_sendqueue_event }, ptr @print_fmt_svcrdma_sendqueue_event, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_sq_retry = internal global ptr @event_svcrdma_sq_retry, section "_ftrace_events", align 4
@trace_event_fields_svcrdma_sq_post_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.286, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.287, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.94, %union.anon.203 { %struct.anon.204 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.105, %union.anon.203 { %struct.anon.204 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_svcrdma_sq_post_err = internal global %struct.trace_event_class { ptr @str__rpcrdma__trace_system_name, ptr @trace_event_raw_event_svcrdma_sq_post_err, ptr @perf_trace_svcrdma_sq_post_err, ptr @trace_event_reg, ptr @trace_event_fields_svcrdma_sq_post_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_svcrdma_sq_post_err, i64 24), ptr getelementptr (i8, ptr @event_class_svcrdma_sq_post_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_svcrdma_sq_post_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_svcrdma_sq_post_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_svcrdma_sq_post_err = internal global { [92 x i8], [36 x i8] } { [92 x i8] c"\22addr=%s sc_sq_avail=%d/%d status=%d\22, __get_str(addr), REC->avail, REC->depth, REC->status\00", [36 x i8] zeroinitializer }, align 32
@event_svcrdma_sq_post_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_svcrdma_sq_post_err, %union.anon.205 { ptr @__tracepoint_svcrdma_sq_post_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_svcrdma_sq_post_err }, ptr @print_fmt_svcrdma_sq_post_err, ptr null, %union.anon.206 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_svcrdma_sq_post_err = internal global ptr @event_svcrdma_sq_post_err, section "_ftrace_events", align 4
@__bpf_trace_tp_map_xprtrdma_inline_thresh = internal global %union.anon.207 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_inline_thresh, ptr @__bpf_trace_xprtrdma_inline_thresh, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_connect = internal global %union.anon.208 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_connect, ptr @__bpf_trace_xprtrdma_connect_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_disconnect = internal global %union.anon.209 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_disconnect, ptr @__bpf_trace_xprtrdma_connect_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_op_inject_dsc = internal global %union.anon.210 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_op_inject_dsc, ptr @__bpf_trace_xprtrdma_rxprt, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_op_connect = internal global %union.anon.211 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_op_connect, ptr @__bpf_trace_xprtrdma_op_connect, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_op_set_cto = internal global %union.anon.212 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_op_set_cto, ptr @__bpf_trace_xprtrdma_op_set_cto, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_createmrs = internal global %union.anon.213 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_createmrs, ptr @__bpf_trace_xprtrdma_createmrs, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_nomrs_err = internal global %union.anon.214 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_nomrs_err, ptr @__bpf_trace_xprtrdma_nomrs_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_chunk_read = internal global %union.anon.215 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_chunk_read, ptr @__bpf_trace_xprtrdma_rdch_event, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_chunk_write = internal global %union.anon.216 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_chunk_write, ptr @__bpf_trace_xprtrdma_wrch_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_chunk_reply = internal global %union.anon.217 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_chunk_reply, ptr @__bpf_trace_xprtrdma_wrch_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_chunk_wp = internal global %union.anon.218 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_chunk_wp, ptr @__bpf_trace_xprtrdma_wrch_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_marshal = internal global %union.anon.219 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_marshal, ptr @__bpf_trace_xprtrdma_marshal, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_marshal_failed = internal global %union.anon.220 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_marshal_failed, ptr @__bpf_trace_xprtrdma_marshal_failed, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_prepsend_failed = internal global %union.anon.221 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_prepsend_failed, ptr @__bpf_trace_xprtrdma_prepsend_failed, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_post_send = internal global %union.anon.222 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_post_send, ptr @__bpf_trace_xprtrdma_post_send, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_post_send_err = internal global %union.anon.223 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_post_send_err, ptr @__bpf_trace_xprtrdma_post_send_err, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_post_recv = internal global %union.anon.224 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_post_recv, ptr @__bpf_trace_xprtrdma_post_recv, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_post_recvs = internal global %union.anon.225 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_post_recvs, ptr @__bpf_trace_xprtrdma_post_recvs, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_post_recvs_err = internal global %union.anon.226 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_post_recvs_err, ptr @__bpf_trace_xprtrdma_post_recvs_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_post_linv_err = internal global %union.anon.227 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_post_linv_err, ptr @__bpf_trace_xprtrdma_post_linv_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_wc_receive = internal global %union.anon.228 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_wc_receive, ptr @__bpf_trace_rpcrdma_receive_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_wc_send = internal global %union.anon.229 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_wc_send, ptr @__bpf_trace_rpcrdma_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_wc_fastreg = internal global %union.anon.230 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_wc_fastreg, ptr @__bpf_trace_rpcrdma_mr_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_wc_li = internal global %union.anon.231 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_wc_li, ptr @__bpf_trace_rpcrdma_mr_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_wc_li_wake = internal global %union.anon.232 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_wc_li_wake, ptr @__bpf_trace_rpcrdma_mr_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_wc_li_done = internal global %union.anon.233 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_wc_li_done, ptr @__bpf_trace_rpcrdma_mr_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_frwr_alloc = internal global %union.anon.234 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_frwr_alloc, ptr @__bpf_trace_xprtrdma_frwr_alloc, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_frwr_dereg = internal global %union.anon.235 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_frwr_dereg, ptr @__bpf_trace_xprtrdma_frwr_dereg, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_frwr_sgerr = internal global %union.anon.236 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_frwr_sgerr, ptr @__bpf_trace_xprtrdma_frwr_sgerr, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_frwr_maperr = internal global %union.anon.237 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_frwr_maperr, ptr @__bpf_trace_xprtrdma_frwr_maperr, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_mr_fastreg = internal global %union.anon.238 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_mr_fastreg, ptr @__bpf_trace_xprtrdma_mr_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_mr_localinv = internal global %union.anon.239 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_mr_localinv, ptr @__bpf_trace_xprtrdma_mr_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_mr_reminv = internal global %union.anon.240 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_mr_reminv, ptr @__bpf_trace_xprtrdma_mr_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_mr_map = internal global %union.anon.241 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_mr_map, ptr @__bpf_trace_xprtrdma_mr_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_mr_unmap = internal global %union.anon.242 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_mr_unmap, ptr @__bpf_trace_xprtrdma_anonymous_mr_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_dma_maperr = internal global %union.anon.243 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_dma_maperr, ptr @__bpf_trace_xprtrdma_dma_maperr, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_reply = internal global %union.anon.244 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_reply, ptr @__bpf_trace_xprtrdma_reply, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_reply_vers_err = internal global %union.anon.245 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_reply_vers_err, ptr @__bpf_trace_xprtrdma_reply_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_reply_rqst_err = internal global %union.anon.246 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_reply_rqst_err, ptr @__bpf_trace_xprtrdma_reply_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_reply_short_err = internal global %union.anon.247 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_reply_short_err, ptr @__bpf_trace_xprtrdma_reply_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_reply_hdr_err = internal global %union.anon.248 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_reply_hdr_err, ptr @__bpf_trace_xprtrdma_reply_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_err_vers = internal global %union.anon.249 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_err_vers, ptr @__bpf_trace_xprtrdma_err_vers, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_err_chunk = internal global %union.anon.250 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_err_chunk, ptr @__bpf_trace_xprtrdma_err_chunk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_err_unrecognized = internal global %union.anon.251 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_err_unrecognized, ptr @__bpf_trace_xprtrdma_err_unrecognized, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_fixup = internal global %union.anon.252 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_fixup, ptr @__bpf_trace_xprtrdma_fixup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_decode_seg = internal global %union.anon.253 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_decode_seg, ptr @__bpf_trace_xprtrdma_decode_seg, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_mrs_zap = internal global %union.anon.254 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_mrs_zap, ptr @__bpf_trace_xprtrdma_mrs_zap, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_cb_setup = internal global %union.anon.255 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_cb_setup, ptr @__bpf_trace_xprtrdma_cb_setup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_cb_call = internal global %union.anon.256 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_cb_call, ptr @__bpf_trace_xprtrdma_callback_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xprtrdma_cb_reply = internal global %union.anon.257 { %struct.bpf_raw_event_map { ptr @__tracepoint_xprtrdma_cb_reply, ptr @__bpf_trace_xprtrdma_callback_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_pd_err = internal global %union.anon.258 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_pd_err, ptr @__bpf_trace_svcrdma_accept_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_qp_err = internal global %union.anon.259 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_qp_err, ptr @__bpf_trace_svcrdma_accept_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_fabric_err = internal global %union.anon.260 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_fabric_err, ptr @__bpf_trace_svcrdma_accept_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_initdepth_err = internal global %union.anon.261 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_initdepth_err, ptr @__bpf_trace_svcrdma_accept_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_accept_err = internal global %union.anon.262 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_accept_err, ptr @__bpf_trace_svcrdma_accept_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_rqst = internal global %union.anon.263 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_rqst, ptr @__bpf_trace_svcrdma_decode_rqst, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_short_err = internal global %union.anon.264 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_short_err, ptr @__bpf_trace_svcrdma_decode_short_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_badvers_err = internal global %union.anon.265 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_badvers_err, ptr @__bpf_trace_svcrdma_badreq_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_drop_err = internal global %union.anon.266 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_drop_err, ptr @__bpf_trace_svcrdma_badreq_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_badproc_err = internal global %union.anon.267 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_badproc_err, ptr @__bpf_trace_svcrdma_badreq_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_parse_err = internal global %union.anon.268 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_parse_err, ptr @__bpf_trace_svcrdma_badreq_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_encode_wseg = internal global %union.anon.269 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_encode_wseg, ptr @__bpf_trace_svcrdma_encode_wseg, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_rseg = internal global %union.anon.270 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_rseg, ptr @__bpf_trace_svcrdma_decode_rseg, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_decode_wseg = internal global %union.anon.271 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_decode_wseg, ptr @__bpf_trace_svcrdma_decode_wseg, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_err_vers = internal global %union.anon.272 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_err_vers, ptr @__bpf_trace_svcrdma_error_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_err_chunk = internal global %union.anon.273 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_err_chunk, ptr @__bpf_trace_svcrdma_error_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_dma_map_page = internal global %union.anon.274 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_dma_map_page, ptr @__bpf_trace_svcrdma_dma_map_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_dma_map_err = internal global %union.anon.275 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_dma_map_err, ptr @__bpf_trace_svcrdma_dma_map_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_dma_unmap_page = internal global %union.anon.276 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_dma_unmap_page, ptr @__bpf_trace_svcrdma_dma_map_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_dma_map_rw_err = internal global %union.anon.277 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_dma_map_rw_err, ptr @__bpf_trace_svcrdma_dma_map_rw_err, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_no_rwctx_err = internal global %union.anon.278 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_no_rwctx_err, ptr @__bpf_trace_svcrdma_no_rwctx_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_page_overrun_err = internal global %union.anon.279 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_page_overrun_err, ptr @__bpf_trace_svcrdma_page_overrun_err, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_small_wrch_err = internal global %union.anon.280 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_small_wrch_err, ptr @__bpf_trace_svcrdma_small_wrch_err, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_send_pullup = internal global %union.anon.281 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_send_pullup, ptr @__bpf_trace_svcrdma_send_pullup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_send_err = internal global %union.anon.282 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_send_err, ptr @__bpf_trace_svcrdma_send_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_post_send = internal global %union.anon.283 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_post_send, ptr @__bpf_trace_svcrdma_post_send, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_send = internal global %union.anon.284 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_send, ptr @__bpf_trace_rpcrdma_send_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_send_flush = internal global %union.anon.285 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_send_flush, ptr @__bpf_trace_rpcrdma_send_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_send_err = internal global %union.anon.286 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_send_err, ptr @__bpf_trace_rpcrdma_send_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_post_recv = internal global %union.anon.287 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_post_recv, ptr @__bpf_trace_svcrdma_post_recv, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_recv = internal global %union.anon.288 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_recv, ptr @__bpf_trace_rpcrdma_receive_success_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_recv_flush = internal global %union.anon.289 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_recv_flush, ptr @__bpf_trace_rpcrdma_receive_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_recv_err = internal global %union.anon.290 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_recv_err, ptr @__bpf_trace_rpcrdma_receive_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_rq_post_err = internal global %union.anon.291 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_rq_post_err, ptr @__bpf_trace_svcrdma_rq_post_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_post_read_chunk = internal global %union.anon.292 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_post_read_chunk, ptr @__bpf_trace_svcrdma_post_chunk_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_post_write_chunk = internal global %union.anon.293 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_post_write_chunk, ptr @__bpf_trace_svcrdma_post_chunk_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_post_reply_chunk = internal global %union.anon.294 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_post_reply_chunk, ptr @__bpf_trace_svcrdma_post_chunk_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_read = internal global %union.anon.295 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_read, ptr @__bpf_trace_svcrdma_wc_read, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_read_flush = internal global %union.anon.296 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_read_flush, ptr @__bpf_trace_rpcrdma_send_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_read_err = internal global %union.anon.297 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_read_err, ptr @__bpf_trace_rpcrdma_send_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_write = internal global %union.anon.298 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_write, ptr @__bpf_trace_rpcrdma_send_completion_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_write_flush = internal global %union.anon.299 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_write_flush, ptr @__bpf_trace_rpcrdma_send_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_wc_write_err = internal global %union.anon.300 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_wc_write_err, ptr @__bpf_trace_rpcrdma_send_flush_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_qp_error = internal global %union.anon.301 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_qp_error, ptr @__bpf_trace_svcrdma_qp_error, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_sq_full = internal global %union.anon.302 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_sq_full, ptr @__bpf_trace_svcrdma_sendqueue_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_sq_retry = internal global %union.anon.303 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_sq_retry, ptr @__bpf_trace_svcrdma_sendqueue_event, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_svcrdma_sq_post_err = internal global %union.anon.304 { %struct.bpf_raw_event_map { ptr @__tracepoint_svcrdma_sq_post_err, ptr @__bpf_trace_svcrdma_sq_post_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__UNIQUE_ID_author1002 = internal constant [63 x i8] c"rpcrdma.author=Open Grid Computing and Network Appliance, Inc.\00", section ".modinfo", align 1
@__UNIQUE_ID_description1003 = internal constant [39 x i8] c"rpcrdma.description=RPC/RDMA Transport\00", section ".modinfo", align 1
@__UNIQUE_ID_file1004 = internal constant [41 x i8] c"rpcrdma.file=net/sunrpc/xprtrdma/rpcrdma\00", section ".modinfo", align 1
@__UNIQUE_ID_license1005 = internal constant [29 x i8] c"rpcrdma.license=Dual BSD/GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_alias1006 = internal constant [22 x i8] c"rpcrdma.alias=svcrdma\00", section ".modinfo", align 1
@__UNIQUE_ID_alias1007 = internal constant [23 x i8] c"rpcrdma.alias=xprtrdma\00", section ".modinfo", align 1
@__UNIQUE_ID_alias1008 = internal constant [23 x i8] c"rpcrdma.alias=rpcrdma6\00", section ".modinfo", align 1
@__initcall__kmod_rpcrdma__1009_51_rpc_rdma_init6 = internal global ptr @rpc_rdma_init, section ".initcall6.init", align 4
@__exitcall_rpc_rdma_cleanup = internal global ptr @rpc_rdma_cleanup, section ".exitcall.exit", align 4
@.str.92 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u32\00", [28 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"cq_id\00", [26 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"completion_id\00", [18 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"vendor_err\00", [21 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"received\00", [23 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"xid\00", [28 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"proc\00", [27 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"addr\00", [27 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"port\00", [27 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"rc\00", [29 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"connect_status\00", [17 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"task_id\00", [24 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"client_id\00", [22 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pos\00", [28 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"nents\00", [26 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"handle\00", [25 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"length\00", [25 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"nsegs\00", [26 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"mr_id\00", [26 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dir\00", [28 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"inline_send\00", [20 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"inline_recv\00", [20 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"max_send\00", [23 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"max_recv\00", [23 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"unsigned char[sizeof(struct sockaddr_in6)]\00", [53 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"srcaddr\00", [24 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dstaddr\00", [24 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"%pISpc -> %pISpc neg send/recv=%u/%u, calc send/recv=%u/%u\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"peer=[%s]:%s rc=%d connection status=%d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"peer=[%s]:%s\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"delay\00", [26 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"peer=[%s]:%s delay=%lu\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"connect\00", [24 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"reconnect\00", [22 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"peer=[%s]:%s connect=%lu reconnect=%lu\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"count\00", [26 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"peer=[%s]:%s created %u MRs\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"task:%08x@%08x peer=[%s]:%s\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"task:%08x@%08x pos=%u %u@0x%016llx:0x%08x (%s)\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"more\00", [27 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"last\00", [27 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"task:%08x@%08x %u@0x%016llx:0x%08x (%s)\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"hdrlen\00", [25 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"headlen\00", [24 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"pagelen\00", [24 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"taillen\00", [24 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"rtype\00", [26 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"wtype\00", [26 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"task:%08x@%08x xid=0x%08x hdr=%u xdr=%u/%u/%u %s/%s\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_marshal.symbols = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.150 }, %struct.trace_print_flags { i32 1, ptr @.str.151 }, %struct.trace_print_flags { i32 2, ptr @.str.152 }, %struct.trace_print_flags { i32 3, ptr @.str.153 }, %struct.trace_print_flags { i32 4, ptr @.str.154 }, %struct.trace_print_flags { i32 5, ptr @.str.155 }, %struct.trace_print_flags { i32 6, ptr @.str.156 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"inline\00", [25 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"pullup\00", [25 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"mapped\00", [25 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"read list\00", [22 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"*read list\00", [21 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"write list\00", [21 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"reply chunk\00", [20 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_marshal.symbols.157 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.150 }, %struct.trace_print_flags { i32 1, ptr @.str.151 }, %struct.trace_print_flags { i32 2, ptr @.str.152 }, %struct.trace_print_flags { i32 3, ptr @.str.153 }, %struct.trace_print_flags { i32 4, ptr @.str.154 }, %struct.trace_print_flags { i32 5, ptr @.str.155 }, %struct.trace_print_flags { i32 6, ptr @.str.156 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ret\00", [28 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"task:%08x@%08x xid=0x%08x ret=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"num_sge\00", [24 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"signaled\00", [23 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"task:%08x@%08x cq.id=%u cid=%d (%d SGE%s) %s\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.164 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"s\00", [30 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"task:%08x@%08x cq.id=%u rc=%d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"cq.id=%d cid=%d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"posted\00", [25 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"peer=[%s]:%s cq.id=%d %u new recvs, %d active\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"peer=[%s]:%s cq.id=%d rc=%d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"task:%08x@%08x status=%d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"cq.id=%u cid=%d status=%s (%lu/0x%x) received=%u\0A\00", [46 x i8] zeroinitializer }, align 32
@trace_raw_output_rpcrdma_receive_completion_class.symbols = internal constant { [23 x %struct.trace_print_flags], [40 x i8] } { [23 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.172 }, %struct.trace_print_flags { i32 1, ptr @.str.173 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.175 }, %struct.trace_print_flags { i32 4, ptr @.str.176 }, %struct.trace_print_flags { i32 5, ptr @.str.177 }, %struct.trace_print_flags { i32 6, ptr @.str.178 }, %struct.trace_print_flags { i32 7, ptr @.str.179 }, %struct.trace_print_flags { i32 8, ptr @.str.180 }, %struct.trace_print_flags { i32 9, ptr @.str.181 }, %struct.trace_print_flags { i32 10, ptr @.str.182 }, %struct.trace_print_flags { i32 11, ptr @.str.183 }, %struct.trace_print_flags { i32 12, ptr @.str.184 }, %struct.trace_print_flags { i32 13, ptr @.str.185 }, %struct.trace_print_flags { i32 14, ptr @.str.186 }, %struct.trace_print_flags { i32 15, ptr @.str.187 }, %struct.trace_print_flags { i32 16, ptr @.str.188 }, %struct.trace_print_flags { i32 17, ptr @.str.189 }, %struct.trace_print_flags { i32 18, ptr @.str.190 }, %struct.trace_print_flags { i32 19, ptr @.str.191 }, %struct.trace_print_flags { i32 20, ptr @.str.192 }, %struct.trace_print_flags { i32 21, ptr @.str.193 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SUCCESS\00", [24 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"LOC_LEN_ERR\00", [20 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"LOC_QP_OP_ERR\00", [18 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"LOC_EEC_OP_ERR\00", [17 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"LOC_PROT_ERR\00", [19 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"WR_FLUSH_ERR\00", [19 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"MW_BIND_ERR\00", [20 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"BAD_RESP_ERR\00", [19 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"LOC_ACCESS_ERR\00", [17 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"REM_INV_REQ_ERR\00", [16 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"REM_ACCESS_ERR\00", [17 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"REM_OP_ERR\00", [21 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"RETRY_EXC_ERR\00", [18 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"RNR_RETRY_EXC_ERR\00", [46 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"LOC_RDD_VIOL_ERR\00", [47 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"REM_INV_RD_REQ_ERR\00", [45 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"REM_ABORT_ERR\00", [18 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"INV_EECN_ERR\00", [19 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"INV_EEC_STATE_ERR\00", [46 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"FATAL_ERR\00", [22 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RESP_TIMEOUT_ERR\00", [47 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GENERAL_ERR\00", [20 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"cq.id=%u cid=%d status=%s (%lu/0x%x)\0A\00", [58 x i8] zeroinitializer }, align 32
@trace_raw_output_rpcrdma_completion_class.symbols = internal constant { [23 x %struct.trace_print_flags], [40 x i8] } { [23 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.172 }, %struct.trace_print_flags { i32 1, ptr @.str.173 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.175 }, %struct.trace_print_flags { i32 4, ptr @.str.176 }, %struct.trace_print_flags { i32 5, ptr @.str.177 }, %struct.trace_print_flags { i32 6, ptr @.str.178 }, %struct.trace_print_flags { i32 7, ptr @.str.179 }, %struct.trace_print_flags { i32 8, ptr @.str.180 }, %struct.trace_print_flags { i32 9, ptr @.str.181 }, %struct.trace_print_flags { i32 10, ptr @.str.182 }, %struct.trace_print_flags { i32 11, ptr @.str.183 }, %struct.trace_print_flags { i32 12, ptr @.str.184 }, %struct.trace_print_flags { i32 13, ptr @.str.185 }, %struct.trace_print_flags { i32 14, ptr @.str.186 }, %struct.trace_print_flags { i32 15, ptr @.str.187 }, %struct.trace_print_flags { i32 16, ptr @.str.188 }, %struct.trace_print_flags { i32 17, ptr @.str.189 }, %struct.trace_print_flags { i32 18, ptr @.str.190 }, %struct.trace_print_flags { i32 19, ptr @.str.191 }, %struct.trace_print_flags { i32 20, ptr @.str.192 }, %struct.trace_print_flags { i32 21, ptr @.str.193 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"cq.id=%u mr.id=%d status=%s (%lu/0x%x)\0A\00", [56 x i8] zeroinitializer }, align 32
@trace_raw_output_rpcrdma_mr_completion_class.symbols = internal constant { [23 x %struct.trace_print_flags], [40 x i8] } { [23 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.172 }, %struct.trace_print_flags { i32 1, ptr @.str.173 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.175 }, %struct.trace_print_flags { i32 4, ptr @.str.176 }, %struct.trace_print_flags { i32 5, ptr @.str.177 }, %struct.trace_print_flags { i32 6, ptr @.str.178 }, %struct.trace_print_flags { i32 7, ptr @.str.179 }, %struct.trace_print_flags { i32 8, ptr @.str.180 }, %struct.trace_print_flags { i32 9, ptr @.str.181 }, %struct.trace_print_flags { i32 10, ptr @.str.182 }, %struct.trace_print_flags { i32 11, ptr @.str.183 }, %struct.trace_print_flags { i32 12, ptr @.str.184 }, %struct.trace_print_flags { i32 13, ptr @.str.185 }, %struct.trace_print_flags { i32 14, ptr @.str.186 }, %struct.trace_print_flags { i32 15, ptr @.str.187 }, %struct.trace_print_flags { i32 16, ptr @.str.188 }, %struct.trace_print_flags { i32 17, ptr @.str.189 }, %struct.trace_print_flags { i32 18, ptr @.str.190 }, %struct.trace_print_flags { i32 19, ptr @.str.191 }, %struct.trace_print_flags { i32 20, ptr @.str.192 }, %struct.trace_print_flags { i32 21, ptr @.str.193 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"mr.id=%u: rc=%d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s): rc=%d\0A\00", [45 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_frwr_dereg.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.198 }, %struct.trace_print_flags { i32 1, ptr @.str.199 }, %struct.trace_print_flags { i32 2, ptr @.str.200 }, %struct.trace_print_flags { i32 3, ptr @.str.201 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"BIDIR\00", [26 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"TO_DEVICE\00", [22 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"FROM_DEVICE\00", [20 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NONE\00", [27 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"mr.id=%u DMA addr=0x%llx (%s) sg_nents=%d\0A\00", [53 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_frwr_sgerr.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.198 }, %struct.trace_print_flags { i32 1, ptr @.str.199 }, %struct.trace_print_flags { i32 2, ptr @.str.200 }, %struct.trace_print_flags { i32 3, ptr @.str.201 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"num_mapped\00", [21 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"mr.id=%u DMA addr=0x%llx (%s) nents=%d of %d\0A\00", [50 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_frwr_maperr.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.198 }, %struct.trace_print_flags { i32 1, ptr @.str.199 }, %struct.trace_print_flags { i32 2, ptr @.str.200 }, %struct.trace_print_flags { i32 3, ptr @.str.201 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"task:%08x@%08x mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s)\0A\00", [37 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_mr_class.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.198 }, %struct.trace_print_flags { i32 1, ptr @.str.199 }, %struct.trace_print_flags { i32 2, ptr @.str.200 }, %struct.trace_print_flags { i32 3, ptr @.str.201 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s)\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_xprtrdma_anonymous_mr_class.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.198 }, %struct.trace_print_flags { i32 1, ptr @.str.199 }, %struct.trace_print_flags { i32 2, ptr @.str.200 }, %struct.trace_print_flags { i32 3, ptr @.str.201 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"dma addr=0x%llx\0A\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"credits\00", [24 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"task:%08x@%08x xid=0x%08x credits=%u\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"peer=[%s]:%s xid=0x%08x version=%u proc=%u\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"min\00", [28 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"max\00", [28 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"task:%08x@%08x xid=0x%08x versions=[%u, %u]\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"task:%08x@%08x xid=0x%08x\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"procedure\00", [22 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"task:%08x@%08x xid=0x%08x procedure=%u\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"fixup\00", [26 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"size_t\00", [25 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"task:%08x@%08x fixup=%lu xdr=%zu/%u/%zu\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%u@0x%016llx:0x%08x\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"task:%08x@%08x\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"reqs\00", [27 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"peer=[%s]:%s %u reqs\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"peer=[%s]:%s xid=0x%08x\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"addr=%s status=%ld\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"vers\00", [27 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"cq.id=%u cid=%d xid=0x%08x vers=%u credits=%u proc=%s hdrlen=%u\0A\00", [63 x i8] zeroinitializer }, align 32
@trace_raw_output_svcrdma_decode_rqst.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.87 }, %struct.trace_print_flags { i32 1, ptr @.str.88 }, %struct.trace_print_flags { i32 2, ptr @.str.89 }, %struct.trace_print_flags { i32 3, ptr @.str.90 }, %struct.trace_print_flags { i32 4, ptr @.str.91 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"cq.id=%u cid=%d hdrlen=%u\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"cq.id=%u cid=%d xid=0x%08x vers=%u credits=%u proc=%u\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"segno\00", [26 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"cq_id=%u cid=%d segno=%u %u@0x%016llx:0x%08x\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"position\00", [23 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"cq_id=%u cid=%d segno=%u position=%u %u@0x%016llx:0x%08x\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"xid=0x%08x\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dma_addr\00", [23 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"device\00", [25 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"addr=%s device=%s dma_addr=%llu length=%u\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"addr=%s device=%s nents=%u status=%d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"num_sges\00", [23 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"addr=%s device=%s num_sges=%d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"pageno\00", [25 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"addr=%s device=%s xid=0x%08x pageno=%u\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"remaining\00", [22 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"seg_no\00", [25 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"num_segs\00", [23 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"addr=%s device=%s remaining=%u seg_no=%u num_segs=%u\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"msglen\00", [25 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"cq_id=%u cid=%d hdr=%u msg=%u (total %u)\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"addr=%s xid=0x%08x status=%d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"inv_rkey\00", [23 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"cq_id=%u cid=%d num_sge=%u inv_rkey=0x%08x\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"cq.id=%u cid=%d\0A\00", [47 x i8] zeroinitializer }, align 32
@trace_raw_output_rpcrdma_send_flush_class.symbols = internal constant { [23 x %struct.trace_print_flags], [40 x i8] } { [23 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.172 }, %struct.trace_print_flags { i32 1, ptr @.str.173 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.175 }, %struct.trace_print_flags { i32 4, ptr @.str.176 }, %struct.trace_print_flags { i32 5, ptr @.str.177 }, %struct.trace_print_flags { i32 6, ptr @.str.178 }, %struct.trace_print_flags { i32 7, ptr @.str.179 }, %struct.trace_print_flags { i32 8, ptr @.str.180 }, %struct.trace_print_flags { i32 9, ptr @.str.181 }, %struct.trace_print_flags { i32 10, ptr @.str.182 }, %struct.trace_print_flags { i32 11, ptr @.str.183 }, %struct.trace_print_flags { i32 12, ptr @.str.184 }, %struct.trace_print_flags { i32 13, ptr @.str.185 }, %struct.trace_print_flags { i32 14, ptr @.str.186 }, %struct.trace_print_flags { i32 15, ptr @.str.187 }, %struct.trace_print_flags { i32 16, ptr @.str.188 }, %struct.trace_print_flags { i32 17, ptr @.str.189 }, %struct.trace_print_flags { i32 18, ptr @.str.190 }, %struct.trace_print_flags { i32 19, ptr @.str.191 }, %struct.trace_print_flags { i32 20, ptr @.str.192 }, %struct.trace_print_flags { i32 21, ptr @.str.193 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"cq.id=%u cid=%d received=%u\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_rpcrdma_receive_flush_class.symbols = internal constant { [23 x %struct.trace_print_flags], [40 x i8] } { [23 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.172 }, %struct.trace_print_flags { i32 1, ptr @.str.173 }, %struct.trace_print_flags { i32 2, ptr @.str.174 }, %struct.trace_print_flags { i32 3, ptr @.str.175 }, %struct.trace_print_flags { i32 4, ptr @.str.176 }, %struct.trace_print_flags { i32 5, ptr @.str.177 }, %struct.trace_print_flags { i32 6, ptr @.str.178 }, %struct.trace_print_flags { i32 7, ptr @.str.179 }, %struct.trace_print_flags { i32 8, ptr @.str.180 }, %struct.trace_print_flags { i32 9, ptr @.str.181 }, %struct.trace_print_flags { i32 10, ptr @.str.182 }, %struct.trace_print_flags { i32 11, ptr @.str.183 }, %struct.trace_print_flags { i32 12, ptr @.str.184 }, %struct.trace_print_flags { i32 13, ptr @.str.185 }, %struct.trace_print_flags { i32 14, ptr @.str.186 }, %struct.trace_print_flags { i32 15, ptr @.str.187 }, %struct.trace_print_flags { i32 16, ptr @.str.188 }, %struct.trace_print_flags { i32 17, ptr @.str.189 }, %struct.trace_print_flags { i32 18, ptr @.str.190 }, %struct.trace_print_flags { i32 19, ptr @.str.191 }, %struct.trace_print_flags { i32 20, ptr @.str.192 }, %struct.trace_print_flags { i32 21, ptr @.str.193 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"addr=%s status=%d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"sqecount\00", [23 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"cq.id=%u cid=%d sqecount=%d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"s64\00", [28 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"read_latency\00", [19 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"totalbytes\00", [21 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"cq.id=%u cid=%d totalbytes=%u latency-us=%lld\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%pISpc\00", [25 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"event\00", [26 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__u8[(48) + 10]\00", [16 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"addr=%s dev=%s event=%s (%u)\0A\00", [34 x i8] zeroinitializer }, align 32
@trace_raw_output_svcrdma_qp_error.symbols = internal constant { [21 x %struct.trace_print_flags], [56 x i8] } { [21 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.266 }, %struct.trace_print_flags { i32 1, ptr @.str.267 }, %struct.trace_print_flags { i32 2, ptr @.str.268 }, %struct.trace_print_flags { i32 3, ptr @.str.269 }, %struct.trace_print_flags { i32 4, ptr @.str.270 }, %struct.trace_print_flags { i32 5, ptr @.str.271 }, %struct.trace_print_flags { i32 6, ptr @.str.272 }, %struct.trace_print_flags { i32 7, ptr @.str.273 }, %struct.trace_print_flags { i32 8, ptr @.str.274 }, %struct.trace_print_flags { i32 9, ptr @.str.275 }, %struct.trace_print_flags { i32 10, ptr @.str.276 }, %struct.trace_print_flags { i32 11, ptr @.str.277 }, %struct.trace_print_flags { i32 12, ptr @.str.278 }, %struct.trace_print_flags { i32 13, ptr @.str.279 }, %struct.trace_print_flags { i32 14, ptr @.str.280 }, %struct.trace_print_flags { i32 15, ptr @.str.281 }, %struct.trace_print_flags { i32 16, ptr @.str.282 }, %struct.trace_print_flags { i32 17, ptr @.str.283 }, %struct.trace_print_flags { i32 18, ptr @.str.284 }, %struct.trace_print_flags { i32 19, ptr @.str.285 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"CQ_ERR\00", [25 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"QP_FATAL\00", [23 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"QP_REQ_ERR\00", [21 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"QP_ACCESS_ERR\00", [18 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"COMM_EST\00", [23 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SQ_DRAINED\00", [21 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"PATH_MIG\00", [23 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"PATH_MIG_ERR\00", [19 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"DEVICE_FATAL\00", [19 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"PORT_ACTIVE\00", [20 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"PORT_ERR\00", [23 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"LID_CHANGE\00", [21 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"PKEY_CHANGE\00", [20 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"SM_CHANGE\00", [22 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SRQ_ERR\00", [24 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"SRQ_LIMIT_REACHED\00", [46 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"QP_LAST_WQE_REACHED\00", [44 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"CLIENT_REREGISTER\00", [46 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GID_CHANGE\00", [21 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"WQ_FATAL\00", [23 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"avail\00", [26 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"depth\00", [26 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"addr=%s sc_sq_avail=%d/%d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"addr=%s sc_sq_avail=%d/%d status=%d\0A\00", [59 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@___asan_gen_ = private constant [32 x i8] c"../net/sunrpc/xprtrdma/module.c\00", align 1
@___asan_gen_.290 = private unnamed_addr constant [32 x i8] c"str__rpcrdma__trace_system_name\00", align 1
@___asan_gen_.291 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.291, i32 36, i32 1 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.519, i32 37, i32 1 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.519, i32 81, i32 1 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.519, i32 121, i32 1 }
@___asan_gen_.519 = private unnamed_addr constant [31 x i8] c"../include/trace/events/rdma.h\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.519, i32 159, i32 1 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 489, i32 1 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 490, i32 1 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 491, i32 1 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 492, i32 1 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 794, i32 1 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 795, i32 1 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 796, i32 1 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 797, i32 1 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 798, i32 1 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 799, i32 1 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 800, i32 1 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1522, i32 1 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1523, i32 1 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1524, i32 1 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1525, i32 1 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1526, i32 1 }
@___asan_gen_.569 = private unnamed_addr constant [44 x i8] c"trace_event_fields_rpcrdma_completion_class\00", align 1
@___asan_gen_.572 = private unnamed_addr constant [49 x i8] c"trace_event_fields_rpcrdma_send_completion_class\00", align 1
@___asan_gen_.575 = private unnamed_addr constant [44 x i8] c"trace_event_fields_rpcrdma_send_flush_class\00", align 1
@___asan_gen_.578 = private unnamed_addr constant [47 x i8] c"trace_event_fields_rpcrdma_mr_completion_class\00", align 1
@___asan_gen_.581 = private unnamed_addr constant [52 x i8] c"trace_event_fields_rpcrdma_receive_completion_class\00", align 1
@___asan_gen_.584 = private unnamed_addr constant [49 x i8] c"trace_event_fields_rpcrdma_receive_success_class\00", align 1
@___asan_gen_.587 = private unnamed_addr constant [47 x i8] c"trace_event_fields_rpcrdma_receive_flush_class\00", align 1
@___asan_gen_.590 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xprtrdma_reply_class\00", align 1
@___asan_gen_.593 = private unnamed_addr constant [34 x i8] c"trace_event_fields_xprtrdma_rxprt\00", align 1
@___asan_gen_.596 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xprtrdma_connect_class\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_rdch_event\00", align 1
@___asan_gen_.602 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_wrch_event\00", align 1
@___asan_gen_.605 = private unnamed_addr constant [37 x i8] c"trace_event_fields_xprtrdma_mr_class\00", align 1
@___asan_gen_.608 = private unnamed_addr constant [47 x i8] c"trace_event_fields_xprtrdma_anonymous_mr_class\00", align 1
@___asan_gen_.611 = private unnamed_addr constant [43 x i8] c"trace_event_fields_xprtrdma_callback_class\00", align 1
@___asan_gen_.614 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xprtrdma_inline_thresh\00", align 1
@___asan_gen_.617 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xprtrdma_inline_thresh\00", align 1
@___asan_gen_.620 = private unnamed_addr constant [33 x i8] c"print_fmt_xprtrdma_inline_thresh\00", align 1
@___asan_gen_.623 = private unnamed_addr constant [29 x i8] c"event_xprtrdma_inline_thresh\00", align 1
@___asan_gen_.626 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xprtrdma_connect_class\00", align 1
@___asan_gen_.629 = private unnamed_addr constant [33 x i8] c"print_fmt_xprtrdma_connect_class\00", align 1
@___asan_gen_.632 = private unnamed_addr constant [23 x i8] c"event_xprtrdma_connect\00", align 1
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 670, i32 1 }
@___asan_gen_.635 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_disconnect\00", align 1
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 671, i32 1 }
@___asan_gen_.638 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_xprtrdma_rxprt\00", align 1
@___asan_gen_.641 = private unnamed_addr constant [25 x i8] c"print_fmt_xprtrdma_rxprt\00", align 1
@___asan_gen_.644 = private unnamed_addr constant [29 x i8] c"event_xprtrdma_op_inject_dsc\00", align 1
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 673, i32 1 }
@___asan_gen_.647 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_op_connect\00", align 1
@___asan_gen_.650 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_op_connect\00", align 1
@___asan_gen_.653 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_op_connect\00", align 1
@___asan_gen_.656 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_op_connect\00", align 1
@___asan_gen_.659 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_op_set_cto\00", align 1
@___asan_gen_.662 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_op_set_cto\00", align 1
@___asan_gen_.665 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_op_set_cto\00", align 1
@___asan_gen_.668 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_op_set_cto\00", align 1
@___asan_gen_.671 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xprtrdma_createmrs\00", align 1
@___asan_gen_.674 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xprtrdma_createmrs\00", align 1
@___asan_gen_.677 = private unnamed_addr constant [29 x i8] c"print_fmt_xprtrdma_createmrs\00", align 1
@___asan_gen_.680 = private unnamed_addr constant [25 x i8] c"event_xprtrdma_createmrs\00", align 1
@___asan_gen_.683 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xprtrdma_nomrs_err\00", align 1
@___asan_gen_.686 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xprtrdma_nomrs_err\00", align 1
@___asan_gen_.689 = private unnamed_addr constant [29 x i8] c"print_fmt_xprtrdma_nomrs_err\00", align 1
@___asan_gen_.692 = private unnamed_addr constant [25 x i8] c"event_xprtrdma_nomrs_err\00", align 1
@___asan_gen_.695 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_rdch_event\00", align 1
@___asan_gen_.698 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_rdch_event\00", align 1
@___asan_gen_.701 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_chunk_read\00", align 1
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 789, i32 1 }
@___asan_gen_.704 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_wrch_event\00", align 1
@___asan_gen_.707 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_wrch_event\00", align 1
@___asan_gen_.710 = private unnamed_addr constant [27 x i8] c"event_xprtrdma_chunk_write\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 790, i32 1 }
@___asan_gen_.713 = private unnamed_addr constant [27 x i8] c"event_xprtrdma_chunk_reply\00", align 1
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 791, i32 1 }
@___asan_gen_.716 = private unnamed_addr constant [24 x i8] c"event_xprtrdma_chunk_wp\00", align 1
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 792, i32 1 }
@___asan_gen_.719 = private unnamed_addr constant [36 x i8] c"trace_event_fields_xprtrdma_marshal\00", align 1
@___asan_gen_.722 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_xprtrdma_marshal\00", align 1
@___asan_gen_.725 = private unnamed_addr constant [27 x i8] c"print_fmt_xprtrdma_marshal\00", align 1
@___asan_gen_.728 = private unnamed_addr constant [23 x i8] c"event_xprtrdma_marshal\00", align 1
@___asan_gen_.731 = private unnamed_addr constant [43 x i8] c"trace_event_fields_xprtrdma_marshal_failed\00", align 1
@___asan_gen_.734 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_xprtrdma_marshal_failed\00", align 1
@___asan_gen_.737 = private unnamed_addr constant [34 x i8] c"print_fmt_xprtrdma_marshal_failed\00", align 1
@___asan_gen_.740 = private unnamed_addr constant [30 x i8] c"event_xprtrdma_marshal_failed\00", align 1
@___asan_gen_.743 = private unnamed_addr constant [44 x i8] c"trace_event_fields_xprtrdma_prepsend_failed\00", align 1
@___asan_gen_.746 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_xprtrdma_prepsend_failed\00", align 1
@___asan_gen_.749 = private unnamed_addr constant [35 x i8] c"print_fmt_xprtrdma_prepsend_failed\00", align 1
@___asan_gen_.752 = private unnamed_addr constant [31 x i8] c"event_xprtrdma_prepsend_failed\00", align 1
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 884, i32 1 }
@___asan_gen_.755 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xprtrdma_post_send\00", align 1
@___asan_gen_.758 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xprtrdma_post_send\00", align 1
@___asan_gen_.761 = private unnamed_addr constant [29 x i8] c"print_fmt_xprtrdma_post_send\00", align 1
@___asan_gen_.764 = private unnamed_addr constant [25 x i8] c"event_xprtrdma_post_send\00", align 1
@___asan_gen_.767 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xprtrdma_post_send_err\00", align 1
@___asan_gen_.770 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xprtrdma_post_send_err\00", align 1
@___asan_gen_.773 = private unnamed_addr constant [33 x i8] c"print_fmt_xprtrdma_post_send_err\00", align 1
@___asan_gen_.776 = private unnamed_addr constant [29 x i8] c"event_xprtrdma_post_send_err\00", align 1
@___asan_gen_.779 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xprtrdma_post_recv\00", align 1
@___asan_gen_.782 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xprtrdma_post_recv\00", align 1
@___asan_gen_.785 = private unnamed_addr constant [29 x i8] c"print_fmt_xprtrdma_post_recv\00", align 1
@___asan_gen_.788 = private unnamed_addr constant [25 x i8] c"event_xprtrdma_post_recv\00", align 1
@___asan_gen_.791 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_post_recvs\00", align 1
@___asan_gen_.794 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_post_recvs\00", align 1
@___asan_gen_.797 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_post_recvs\00", align 1
@___asan_gen_.800 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_post_recvs\00", align 1
@___asan_gen_.803 = private unnamed_addr constant [43 x i8] c"trace_event_fields_xprtrdma_post_recvs_err\00", align 1
@___asan_gen_.806 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_xprtrdma_post_recvs_err\00", align 1
@___asan_gen_.809 = private unnamed_addr constant [34 x i8] c"print_fmt_xprtrdma_post_recvs_err\00", align 1
@___asan_gen_.812 = private unnamed_addr constant [30 x i8] c"event_xprtrdma_post_recvs_err\00", align 1
@___asan_gen_.815 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xprtrdma_post_linv_err\00", align 1
@___asan_gen_.818 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xprtrdma_post_linv_err\00", align 1
@___asan_gen_.821 = private unnamed_addr constant [33 x i8] c"print_fmt_xprtrdma_post_linv_err\00", align 1
@___asan_gen_.824 = private unnamed_addr constant [29 x i8] c"event_xprtrdma_post_linv_err\00", align 1
@___asan_gen_.827 = private unnamed_addr constant [56 x i8] c"trace_event_type_funcs_rpcrdma_receive_completion_class\00", align 1
@___asan_gen_.830 = private unnamed_addr constant [43 x i8] c"print_fmt_rpcrdma_receive_completion_class\00", align 1
@___asan_gen_.833 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_wc_receive\00", align 1
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1096, i32 1 }
@___asan_gen_.836 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_rpcrdma_completion_class\00", align 1
@___asan_gen_.839 = private unnamed_addr constant [35 x i8] c"print_fmt_rpcrdma_completion_class\00", align 1
@___asan_gen_.842 = private unnamed_addr constant [23 x i8] c"event_xprtrdma_wc_send\00", align 1
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1098, i32 1 }
@___asan_gen_.845 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_rpcrdma_mr_completion_class\00", align 1
@___asan_gen_.848 = private unnamed_addr constant [38 x i8] c"print_fmt_rpcrdma_mr_completion_class\00", align 1
@___asan_gen_.851 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_wc_fastreg\00", align 1
@___asan_gen_.853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1099, i32 1 }
@___asan_gen_.854 = private unnamed_addr constant [21 x i8] c"event_xprtrdma_wc_li\00", align 1
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1100, i32 1 }
@___asan_gen_.857 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_wc_li_wake\00", align 1
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1101, i32 1 }
@___asan_gen_.860 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_wc_li_done\00", align 1
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1102, i32 1 }
@___asan_gen_.863 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_frwr_alloc\00", align 1
@___asan_gen_.866 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_frwr_alloc\00", align 1
@___asan_gen_.869 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_frwr_alloc\00", align 1
@___asan_gen_.872 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_frwr_alloc\00", align 1
@___asan_gen_.875 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_frwr_dereg\00", align 1
@___asan_gen_.878 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_frwr_dereg\00", align 1
@___asan_gen_.881 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_frwr_dereg\00", align 1
@___asan_gen_.884 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_frwr_dereg\00", align 1
@___asan_gen_.887 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_frwr_sgerr\00", align 1
@___asan_gen_.890 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_frwr_sgerr\00", align 1
@___asan_gen_.893 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_frwr_sgerr\00", align 1
@___asan_gen_.896 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_frwr_sgerr\00", align 1
@___asan_gen_.899 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xprtrdma_frwr_maperr\00", align 1
@___asan_gen_.902 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xprtrdma_frwr_maperr\00", align 1
@___asan_gen_.905 = private unnamed_addr constant [31 x i8] c"print_fmt_xprtrdma_frwr_maperr\00", align 1
@___asan_gen_.908 = private unnamed_addr constant [27 x i8] c"event_xprtrdma_frwr_maperr\00", align 1
@___asan_gen_.911 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_xprtrdma_mr_class\00", align 1
@___asan_gen_.914 = private unnamed_addr constant [28 x i8] c"print_fmt_xprtrdma_mr_class\00", align 1
@___asan_gen_.917 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_mr_fastreg\00", align 1
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1223, i32 1 }
@___asan_gen_.920 = private unnamed_addr constant [27 x i8] c"event_xprtrdma_mr_localinv\00", align 1
@___asan_gen_.922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1224, i32 1 }
@___asan_gen_.923 = private unnamed_addr constant [25 x i8] c"event_xprtrdma_mr_reminv\00", align 1
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1225, i32 1 }
@___asan_gen_.926 = private unnamed_addr constant [22 x i8] c"event_xprtrdma_mr_map\00", align 1
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1226, i32 1 }
@___asan_gen_.929 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_xprtrdma_anonymous_mr_class\00", align 1
@___asan_gen_.932 = private unnamed_addr constant [38 x i8] c"print_fmt_xprtrdma_anonymous_mr_class\00", align 1
@___asan_gen_.935 = private unnamed_addr constant [24 x i8] c"event_xprtrdma_mr_unmap\00", align 1
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1228, i32 1 }
@___asan_gen_.938 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_dma_maperr\00", align 1
@___asan_gen_.941 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_dma_maperr\00", align 1
@___asan_gen_.944 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_dma_maperr\00", align 1
@___asan_gen_.947 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_dma_maperr\00", align 1
@___asan_gen_.950 = private unnamed_addr constant [34 x i8] c"trace_event_fields_xprtrdma_reply\00", align 1
@___asan_gen_.953 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_xprtrdma_reply\00", align 1
@___asan_gen_.956 = private unnamed_addr constant [25 x i8] c"print_fmt_xprtrdma_reply\00", align 1
@___asan_gen_.959 = private unnamed_addr constant [21 x i8] c"event_xprtrdma_reply\00", align 1
@___asan_gen_.962 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xprtrdma_reply_class\00", align 1
@___asan_gen_.965 = private unnamed_addr constant [31 x i8] c"print_fmt_xprtrdma_reply_class\00", align 1
@___asan_gen_.968 = private unnamed_addr constant [30 x i8] c"event_xprtrdma_reply_vers_err\00", align 1
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1281, i32 1 }
@___asan_gen_.971 = private unnamed_addr constant [30 x i8] c"event_xprtrdma_reply_rqst_err\00", align 1
@___asan_gen_.973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1282, i32 1 }
@___asan_gen_.974 = private unnamed_addr constant [31 x i8] c"event_xprtrdma_reply_short_err\00", align 1
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1283, i32 1 }
@___asan_gen_.977 = private unnamed_addr constant [29 x i8] c"event_xprtrdma_reply_hdr_err\00", align 1
@___asan_gen_.979 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1284, i32 1 }
@___asan_gen_.980 = private unnamed_addr constant [37 x i8] c"trace_event_fields_xprtrdma_err_vers\00", align 1
@___asan_gen_.983 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_xprtrdma_err_vers\00", align 1
@___asan_gen_.986 = private unnamed_addr constant [28 x i8] c"print_fmt_xprtrdma_err_vers\00", align 1
@___asan_gen_.989 = private unnamed_addr constant [24 x i8] c"event_xprtrdma_err_vers\00", align 1
@___asan_gen_.992 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xprtrdma_err_chunk\00", align 1
@___asan_gen_.995 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xprtrdma_err_chunk\00", align 1
@___asan_gen_.998 = private unnamed_addr constant [29 x i8] c"print_fmt_xprtrdma_err_chunk\00", align 1
@___asan_gen_.1001 = private unnamed_addr constant [25 x i8] c"event_xprtrdma_err_chunk\00", align 1
@___asan_gen_.1004 = private unnamed_addr constant [45 x i8] c"trace_event_fields_xprtrdma_err_unrecognized\00", align 1
@___asan_gen_.1007 = private unnamed_addr constant [49 x i8] c"trace_event_type_funcs_xprtrdma_err_unrecognized\00", align 1
@___asan_gen_.1010 = private unnamed_addr constant [36 x i8] c"print_fmt_xprtrdma_err_unrecognized\00", align 1
@___asan_gen_.1013 = private unnamed_addr constant [32 x i8] c"event_xprtrdma_err_unrecognized\00", align 1
@___asan_gen_.1016 = private unnamed_addr constant [34 x i8] c"trace_event_fields_xprtrdma_fixup\00", align 1
@___asan_gen_.1019 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_xprtrdma_fixup\00", align 1
@___asan_gen_.1022 = private unnamed_addr constant [25 x i8] c"print_fmt_xprtrdma_fixup\00", align 1
@___asan_gen_.1025 = private unnamed_addr constant [21 x i8] c"event_xprtrdma_fixup\00", align 1
@___asan_gen_.1028 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xprtrdma_decode_seg\00", align 1
@___asan_gen_.1031 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xprtrdma_decode_seg\00", align 1
@___asan_gen_.1034 = private unnamed_addr constant [30 x i8] c"print_fmt_xprtrdma_decode_seg\00", align 1
@___asan_gen_.1037 = private unnamed_addr constant [26 x i8] c"event_xprtrdma_decode_seg\00", align 1
@___asan_gen_.1040 = private unnamed_addr constant [36 x i8] c"trace_event_fields_xprtrdma_mrs_zap\00", align 1
@___asan_gen_.1043 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_xprtrdma_mrs_zap\00", align 1
@___asan_gen_.1046 = private unnamed_addr constant [27 x i8] c"print_fmt_xprtrdma_mrs_zap\00", align 1
@___asan_gen_.1049 = private unnamed_addr constant [23 x i8] c"event_xprtrdma_mrs_zap\00", align 1
@___asan_gen_.1052 = private unnamed_addr constant [37 x i8] c"trace_event_fields_xprtrdma_cb_setup\00", align 1
@___asan_gen_.1055 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_xprtrdma_cb_setup\00", align 1
@___asan_gen_.1058 = private unnamed_addr constant [28 x i8] c"print_fmt_xprtrdma_cb_setup\00", align 1
@___asan_gen_.1061 = private unnamed_addr constant [24 x i8] c"event_xprtrdma_cb_setup\00", align 1
@___asan_gen_.1064 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_xprtrdma_callback_class\00", align 1
@___asan_gen_.1067 = private unnamed_addr constant [34 x i8] c"print_fmt_xprtrdma_callback_class\00", align 1
@___asan_gen_.1070 = private unnamed_addr constant [23 x i8] c"event_xprtrdma_cb_call\00", align 1
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1478, i32 1 }
@___asan_gen_.1073 = private unnamed_addr constant [24 x i8] c"event_xprtrdma_cb_reply\00", align 1
@___asan_gen_.1075 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1479, i32 1 }
@___asan_gen_.1076 = private unnamed_addr constant [40 x i8] c"trace_event_fields_svcrdma_accept_class\00", align 1
@___asan_gen_.1079 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_svcrdma_accept_class\00", align 1
@___asan_gen_.1082 = private unnamed_addr constant [31 x i8] c"print_fmt_svcrdma_accept_class\00", align 1
@___asan_gen_.1085 = private unnamed_addr constant [21 x i8] c"event_svcrdma_pd_err\00", align 1
@___asan_gen_.1087 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1516, i32 1 }
@___asan_gen_.1088 = private unnamed_addr constant [21 x i8] c"event_svcrdma_qp_err\00", align 1
@___asan_gen_.1090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1517, i32 1 }
@___asan_gen_.1091 = private unnamed_addr constant [25 x i8] c"event_svcrdma_fabric_err\00", align 1
@___asan_gen_.1093 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1518, i32 1 }
@___asan_gen_.1094 = private unnamed_addr constant [28 x i8] c"event_svcrdma_initdepth_err\00", align 1
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1519, i32 1 }
@___asan_gen_.1097 = private unnamed_addr constant [25 x i8] c"event_svcrdma_accept_err\00", align 1
@___asan_gen_.1099 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1520, i32 1 }
@___asan_gen_.1100 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_decode_rqst\00", align 1
@___asan_gen_.1103 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_decode_rqst\00", align 1
@___asan_gen_.1106 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_decode_rqst\00", align 1
@___asan_gen_.1109 = private unnamed_addr constant [26 x i8] c"event_svcrdma_decode_rqst\00", align 1
@___asan_gen_.1112 = private unnamed_addr constant [44 x i8] c"trace_event_fields_svcrdma_decode_short_err\00", align 1
@___asan_gen_.1115 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_svcrdma_decode_short_err\00", align 1
@___asan_gen_.1118 = private unnamed_addr constant [35 x i8] c"print_fmt_svcrdma_decode_short_err\00", align 1
@___asan_gen_.1121 = private unnamed_addr constant [31 x i8] c"event_svcrdma_decode_short_err\00", align 1
@___asan_gen_.1124 = private unnamed_addr constant [40 x i8] c"trace_event_fields_svcrdma_badreq_event\00", align 1
@___asan_gen_.1127 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_svcrdma_badreq_event\00", align 1
@___asan_gen_.1130 = private unnamed_addr constant [31 x i8] c"print_fmt_svcrdma_badreq_event\00", align 1
@___asan_gen_.1133 = private unnamed_addr constant [33 x i8] c"event_svcrdma_decode_badvers_err\00", align 1
@___asan_gen_.1135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1636, i32 1 }
@___asan_gen_.1136 = private unnamed_addr constant [30 x i8] c"event_svcrdma_decode_drop_err\00", align 1
@___asan_gen_.1138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1637, i32 1 }
@___asan_gen_.1139 = private unnamed_addr constant [33 x i8] c"event_svcrdma_decode_badproc_err\00", align 1
@___asan_gen_.1141 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1638, i32 1 }
@___asan_gen_.1142 = private unnamed_addr constant [31 x i8] c"event_svcrdma_decode_parse_err\00", align 1
@___asan_gen_.1144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1639, i32 1 }
@___asan_gen_.1145 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_encode_wseg\00", align 1
@___asan_gen_.1148 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_encode_wseg\00", align 1
@___asan_gen_.1151 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_encode_wseg\00", align 1
@___asan_gen_.1154 = private unnamed_addr constant [26 x i8] c"event_svcrdma_encode_wseg\00", align 1
@___asan_gen_.1157 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_decode_rseg\00", align 1
@___asan_gen_.1160 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_decode_rseg\00", align 1
@___asan_gen_.1163 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_decode_rseg\00", align 1
@___asan_gen_.1166 = private unnamed_addr constant [26 x i8] c"event_svcrdma_decode_rseg\00", align 1
@___asan_gen_.1169 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_decode_wseg\00", align 1
@___asan_gen_.1172 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_decode_wseg\00", align 1
@___asan_gen_.1175 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_decode_wseg\00", align 1
@___asan_gen_.1178 = private unnamed_addr constant [26 x i8] c"event_svcrdma_decode_wseg\00", align 1
@___asan_gen_.1180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1713, i32 1 }
@___asan_gen_.1181 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_error_event\00", align 1
@___asan_gen_.1184 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_error_event\00", align 1
@___asan_gen_.1187 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_error_event\00", align 1
@___asan_gen_.1190 = private unnamed_addr constant [23 x i8] c"event_svcrdma_err_vers\00", align 1
@___asan_gen_.1192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1777, i32 1 }
@___asan_gen_.1193 = private unnamed_addr constant [24 x i8] c"event_svcrdma_err_chunk\00", align 1
@___asan_gen_.1195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1778, i32 1 }
@___asan_gen_.1196 = private unnamed_addr constant [41 x i8] c"trace_event_fields_svcrdma_dma_map_class\00", align 1
@___asan_gen_.1199 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_svcrdma_dma_map_class\00", align 1
@___asan_gen_.1202 = private unnamed_addr constant [32 x i8] c"print_fmt_svcrdma_dma_map_class\00", align 1
@___asan_gen_.1205 = private unnamed_addr constant [27 x i8] c"event_svcrdma_dma_map_page\00", align 1
@___asan_gen_.1207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1822, i32 1 }
@___asan_gen_.1208 = private unnamed_addr constant [26 x i8] c"event_svcrdma_dma_map_err\00", align 1
@___asan_gen_.1210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1823, i32 1 }
@___asan_gen_.1211 = private unnamed_addr constant [29 x i8] c"event_svcrdma_dma_unmap_page\00", align 1
@___asan_gen_.1213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1824, i32 1 }
@___asan_gen_.1214 = private unnamed_addr constant [42 x i8] c"trace_event_fields_svcrdma_dma_map_rw_err\00", align 1
@___asan_gen_.1217 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_svcrdma_dma_map_rw_err\00", align 1
@___asan_gen_.1220 = private unnamed_addr constant [33 x i8] c"print_fmt_svcrdma_dma_map_rw_err\00", align 1
@___asan_gen_.1223 = private unnamed_addr constant [29 x i8] c"event_svcrdma_dma_map_rw_err\00", align 1
@___asan_gen_.1226 = private unnamed_addr constant [40 x i8] c"trace_event_fields_svcrdma_no_rwctx_err\00", align 1
@___asan_gen_.1229 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_svcrdma_no_rwctx_err\00", align 1
@___asan_gen_.1232 = private unnamed_addr constant [31 x i8] c"print_fmt_svcrdma_no_rwctx_err\00", align 1
@___asan_gen_.1235 = private unnamed_addr constant [27 x i8] c"event_svcrdma_no_rwctx_err\00", align 1
@___asan_gen_.1238 = private unnamed_addr constant [44 x i8] c"trace_event_fields_svcrdma_page_overrun_err\00", align 1
@___asan_gen_.1241 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_svcrdma_page_overrun_err\00", align 1
@___asan_gen_.1244 = private unnamed_addr constant [35 x i8] c"print_fmt_svcrdma_page_overrun_err\00", align 1
@___asan_gen_.1247 = private unnamed_addr constant [31 x i8] c"event_svcrdma_page_overrun_err\00", align 1
@___asan_gen_.1250 = private unnamed_addr constant [42 x i8] c"trace_event_fields_svcrdma_small_wrch_err\00", align 1
@___asan_gen_.1253 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_svcrdma_small_wrch_err\00", align 1
@___asan_gen_.1256 = private unnamed_addr constant [33 x i8] c"print_fmt_svcrdma_small_wrch_err\00", align 1
@___asan_gen_.1259 = private unnamed_addr constant [29 x i8] c"event_svcrdma_small_wrch_err\00", align 1
@___asan_gen_.1262 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_send_pullup\00", align 1
@___asan_gen_.1265 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_send_pullup\00", align 1
@___asan_gen_.1268 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_send_pullup\00", align 1
@___asan_gen_.1271 = private unnamed_addr constant [26 x i8] c"event_svcrdma_send_pullup\00", align 1
@___asan_gen_.1274 = private unnamed_addr constant [36 x i8] c"trace_event_fields_svcrdma_send_err\00", align 1
@___asan_gen_.1277 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_svcrdma_send_err\00", align 1
@___asan_gen_.1280 = private unnamed_addr constant [27 x i8] c"print_fmt_svcrdma_send_err\00", align 1
@___asan_gen_.1283 = private unnamed_addr constant [23 x i8] c"event_svcrdma_send_err\00", align 1
@___asan_gen_.1286 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svcrdma_post_send\00", align 1
@___asan_gen_.1289 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svcrdma_post_send\00", align 1
@___asan_gen_.1292 = private unnamed_addr constant [28 x i8] c"print_fmt_svcrdma_post_send\00", align 1
@___asan_gen_.1295 = private unnamed_addr constant [24 x i8] c"event_svcrdma_post_send\00", align 1
@___asan_gen_.1298 = private unnamed_addr constant [53 x i8] c"trace_event_type_funcs_rpcrdma_send_completion_class\00", align 1
@___asan_gen_.1301 = private unnamed_addr constant [40 x i8] c"print_fmt_rpcrdma_send_completion_class\00", align 1
@___asan_gen_.1304 = private unnamed_addr constant [22 x i8] c"event_svcrdma_wc_send\00", align 1
@___asan_gen_.1306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2023, i32 1 }
@___asan_gen_.1307 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_rpcrdma_send_flush_class\00", align 1
@___asan_gen_.1310 = private unnamed_addr constant [35 x i8] c"print_fmt_rpcrdma_send_flush_class\00", align 1
@___asan_gen_.1313 = private unnamed_addr constant [28 x i8] c"event_svcrdma_wc_send_flush\00", align 1
@___asan_gen_.1315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2024, i32 1 }
@___asan_gen_.1316 = private unnamed_addr constant [26 x i8] c"event_svcrdma_wc_send_err\00", align 1
@___asan_gen_.1318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2025, i32 1 }
@___asan_gen_.1319 = private unnamed_addr constant [37 x i8] c"trace_event_fields_svcrdma_post_recv\00", align 1
@___asan_gen_.1322 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_svcrdma_post_recv\00", align 1
@___asan_gen_.1325 = private unnamed_addr constant [28 x i8] c"print_fmt_svcrdma_post_recv\00", align 1
@___asan_gen_.1328 = private unnamed_addr constant [24 x i8] c"event_svcrdma_post_recv\00", align 1
@___asan_gen_.1330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2027, i32 1 }
@___asan_gen_.1331 = private unnamed_addr constant [53 x i8] c"trace_event_type_funcs_rpcrdma_receive_success_class\00", align 1
@___asan_gen_.1334 = private unnamed_addr constant [40 x i8] c"print_fmt_rpcrdma_receive_success_class\00", align 1
@___asan_gen_.1337 = private unnamed_addr constant [22 x i8] c"event_svcrdma_wc_recv\00", align 1
@___asan_gen_.1339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2049, i32 1 }
@___asan_gen_.1340 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_rpcrdma_receive_flush_class\00", align 1
@___asan_gen_.1343 = private unnamed_addr constant [38 x i8] c"print_fmt_rpcrdma_receive_flush_class\00", align 1
@___asan_gen_.1346 = private unnamed_addr constant [28 x i8] c"event_svcrdma_wc_recv_flush\00", align 1
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2050, i32 1 }
@___asan_gen_.1349 = private unnamed_addr constant [26 x i8] c"event_svcrdma_wc_recv_err\00", align 1
@___asan_gen_.1351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2051, i32 1 }
@___asan_gen_.1352 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_rq_post_err\00", align 1
@___asan_gen_.1355 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_rq_post_err\00", align 1
@___asan_gen_.1358 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_rq_post_err\00", align 1
@___asan_gen_.1361 = private unnamed_addr constant [26 x i8] c"event_svcrdma_rq_post_err\00", align 1
@___asan_gen_.1364 = private unnamed_addr constant [44 x i8] c"trace_event_fields_svcrdma_post_chunk_class\00", align 1
@___asan_gen_.1367 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_svcrdma_post_chunk_class\00", align 1
@___asan_gen_.1370 = private unnamed_addr constant [35 x i8] c"print_fmt_svcrdma_post_chunk_class\00", align 1
@___asan_gen_.1373 = private unnamed_addr constant [30 x i8] c"event_svcrdma_post_read_chunk\00", align 1
@___asan_gen_.1375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2111, i32 1 }
@___asan_gen_.1376 = private unnamed_addr constant [31 x i8] c"event_svcrdma_post_write_chunk\00", align 1
@___asan_gen_.1378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2112, i32 1 }
@___asan_gen_.1379 = private unnamed_addr constant [31 x i8] c"event_svcrdma_post_reply_chunk\00", align 1
@___asan_gen_.1381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2113, i32 1 }
@___asan_gen_.1382 = private unnamed_addr constant [35 x i8] c"trace_event_fields_svcrdma_wc_read\00", align 1
@___asan_gen_.1385 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_svcrdma_wc_read\00", align 1
@___asan_gen_.1388 = private unnamed_addr constant [26 x i8] c"print_fmt_svcrdma_wc_read\00", align 1
@___asan_gen_.1391 = private unnamed_addr constant [22 x i8] c"event_svcrdma_wc_read\00", align 1
@___asan_gen_.1394 = private unnamed_addr constant [28 x i8] c"event_svcrdma_wc_read_flush\00", align 1
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2145, i32 1 }
@___asan_gen_.1397 = private unnamed_addr constant [26 x i8] c"event_svcrdma_wc_read_err\00", align 1
@___asan_gen_.1399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2146, i32 1 }
@___asan_gen_.1400 = private unnamed_addr constant [23 x i8] c"event_svcrdma_wc_write\00", align 1
@___asan_gen_.1402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2148, i32 1 }
@___asan_gen_.1403 = private unnamed_addr constant [29 x i8] c"event_svcrdma_wc_write_flush\00", align 1
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2149, i32 1 }
@___asan_gen_.1406 = private unnamed_addr constant [27 x i8] c"event_svcrdma_wc_write_err\00", align 1
@___asan_gen_.1408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2150, i32 1 }
@___asan_gen_.1409 = private unnamed_addr constant [36 x i8] c"trace_event_fields_svcrdma_qp_error\00", align 1
@___asan_gen_.1412 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_svcrdma_qp_error\00", align 1
@___asan_gen_.1415 = private unnamed_addr constant [27 x i8] c"print_fmt_svcrdma_qp_error\00", align 1
@___asan_gen_.1418 = private unnamed_addr constant [23 x i8] c"event_svcrdma_qp_error\00", align 1
@___asan_gen_.1421 = private unnamed_addr constant [43 x i8] c"trace_event_fields_svcrdma_sendqueue_event\00", align 1
@___asan_gen_.1424 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_svcrdma_sendqueue_event\00", align 1
@___asan_gen_.1427 = private unnamed_addr constant [34 x i8] c"print_fmt_svcrdma_sendqueue_event\00", align 1
@___asan_gen_.1430 = private unnamed_addr constant [22 x i8] c"event_svcrdma_sq_full\00", align 1
@___asan_gen_.1432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2210, i32 1 }
@___asan_gen_.1433 = private unnamed_addr constant [23 x i8] c"event_svcrdma_sq_retry\00", align 1
@___asan_gen_.1435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2211, i32 1 }
@___asan_gen_.1436 = private unnamed_addr constant [39 x i8] c"trace_event_fields_svcrdma_sq_post_err\00", align 1
@___asan_gen_.1439 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_svcrdma_sq_post_err\00", align 1
@___asan_gen_.1442 = private unnamed_addr constant [30 x i8] c"print_fmt_svcrdma_sq_post_err\00", align 1
@___asan_gen_.1445 = private unnamed_addr constant [26 x i8] c"event_svcrdma_sq_post_err\00", align 1
@___asan_gen_.1558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 634, i32 1 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 355, i32 1 }
@___asan_gen_.1564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 326, i32 1 }
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 675, i32 1 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 701, i32 1 }
@___asan_gen_.1585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 734, i32 1 }
@___asan_gen_.1588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 759, i32 1 }
@___asan_gen_.1597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 391, i32 1 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 442, i32 1 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 812, i32 1 }
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 857, i32 1 }
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 911, i32 1 }
@___asan_gen_.1672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 948, i32 1 }
@___asan_gen_.1675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 981, i32 1 }
@___asan_gen_.1681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1003, i32 1 }
@___asan_gen_.1684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1035, i32 1 }
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1065, i32 1 }
@___asan_gen_.1759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 173, i32 1 }
@___asan_gen_.1765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 25, i32 1 }
@___asan_gen_.1771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 133, i32 1 }
@___asan_gen_.1774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1104, i32 1 }
@___asan_gen_.1792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1127, i32 1 }
@___asan_gen_.1798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1163, i32 1 }
@___asan_gen_.1807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1192, i32 1 }
@___asan_gen_.1813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 501, i32 1 }
@___asan_gen_.1819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 556, i32 1 }
@___asan_gen_.1822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1230, i32 1 }
@___asan_gen_.1828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1252, i32 1 }
@___asan_gen_.1831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 289, i32 1 }
@___asan_gen_.1840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1286, i32 1 }
@___asan_gen_.1843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1317, i32 1 }
@___asan_gen_.1849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1341, i32 1 }
@___asan_gen_.1858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1368, i32 1 }
@___asan_gen_.1861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1400, i32 1 }
@___asan_gen_.1864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1427, i32 1 }
@___asan_gen_.1870 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1453, i32 1 }
@___asan_gen_.1873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 596, i32 1 }
@___asan_gen_.1879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1485, i32 1 }
@___asan_gen_.1888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1536, i32 1 }
@___asan_gen_.1891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1571, i32 1 }
@___asan_gen_.1894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1596, i32 1 }
@___asan_gen_.1900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1641, i32 1 }
@___asan_gen_.1906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1677, i32 1 }
@___asan_gen_.1909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1750, i32 1 }
@___asan_gen_.1918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1784, i32 1 }
@___asan_gen_.1921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1826, i32 1 }
@___asan_gen_.1927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1855, i32 1 }
@___asan_gen_.1933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1880, i32 1 }
@___asan_gen_.1945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1908, i32 1 }
@___asan_gen_.1951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1940, i32 1 }
@___asan_gen_.1954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1968, i32 1 }
@___asan_gen_.1960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 1993, i32 1 }
@___asan_gen_.1963 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 65, i32 1 }
@___asan_gen_.1966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 96, i32 1 }
@___asan_gen_.1969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 218, i32 1 }
@___asan_gen_.1972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 252, i32 1 }
@___asan_gen_.1975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2053, i32 1 }
@___asan_gen_.1981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2076, i32 1 }
@___asan_gen_.1993 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2115, i32 1 }
@___asan_gen_.2006 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.2068 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2152, i32 1 }
@___asan_gen_.2077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2179, i32 1 }
@___asan_gen_.2078 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2079 = private unnamed_addr constant [34 x i8] c"../include/trace/events/rpcrdma.h\00", align 1
@___asan_gen_.2080 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2079, i32 2213, i32 1 }
@llvm.compiler.used = appending global [1248 x ptr] [ptr @TRACE_SYSTEM_DMA_BIDIRECTIONAL, ptr @TRACE_SYSTEM_DMA_FROM_DEVICE, ptr @TRACE_SYSTEM_DMA_NONE, ptr @TRACE_SYSTEM_DMA_TO_DEVICE, ptr @TRACE_SYSTEM_IB_CM_APR_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_DREP_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_DREQ_ERROR, ptr @TRACE_SYSTEM_IB_CM_DREQ_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_LAP_ERROR, ptr @TRACE_SYSTEM_IB_CM_LAP_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_MRA_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_REJ_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_REP_ERROR, ptr @TRACE_SYSTEM_IB_CM_REP_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_REQ_ERROR, ptr @TRACE_SYSTEM_IB_CM_REQ_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_RTU_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR, ptr @TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED, ptr @TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT, ptr @TRACE_SYSTEM_IB_CM_USER_ESTABLISHED, ptr @TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER, ptr @TRACE_SYSTEM_IB_EVENT_COMM_EST, ptr @TRACE_SYSTEM_IB_EVENT_CQ_ERR, ptr @TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL, ptr @TRACE_SYSTEM_IB_EVENT_GID_CHANGE, ptr @TRACE_SYSTEM_IB_EVENT_LID_CHANGE, ptr @TRACE_SYSTEM_IB_EVENT_PATH_MIG, ptr @TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR, ptr @TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE, ptr @TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE, ptr @TRACE_SYSTEM_IB_EVENT_PORT_ERR, ptr @TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR, ptr @TRACE_SYSTEM_IB_EVENT_QP_FATAL, ptr @TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED, ptr @TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR, ptr @TRACE_SYSTEM_IB_EVENT_SM_CHANGE, ptr @TRACE_SYSTEM_IB_EVENT_SQ_DRAINED, ptr @TRACE_SYSTEM_IB_EVENT_SRQ_ERR, ptr @TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED, ptr @TRACE_SYSTEM_IB_EVENT_WQ_FATAL, ptr @TRACE_SYSTEM_IB_WC_BAD_RESP_ERR, ptr @TRACE_SYSTEM_IB_WC_FATAL_ERR, ptr @TRACE_SYSTEM_IB_WC_GENERAL_ERR, ptr @TRACE_SYSTEM_IB_WC_INV_EECN_ERR, ptr @TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR, ptr @TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR, ptr @TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR, ptr @TRACE_SYSTEM_IB_WC_LOC_LEN_ERR, ptr @TRACE_SYSTEM_IB_WC_LOC_PROT_ERR, ptr @TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR, ptr @TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR, ptr @TRACE_SYSTEM_IB_WC_MW_BIND_ERR, ptr @TRACE_SYSTEM_IB_WC_REM_ABORT_ERR, ptr @TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR, ptr @TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR, ptr @TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR, ptr @TRACE_SYSTEM_IB_WC_REM_OP_ERR, ptr @TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR, ptr @TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR, ptr @TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR, ptr @TRACE_SYSTEM_IB_WC_SUCCESS, ptr @TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT, ptr @TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE, ptr @TRACE_SYSTEM_RDMA_DONE, ptr @TRACE_SYSTEM_RDMA_ERROR, ptr @TRACE_SYSTEM_RDMA_MSG, ptr @TRACE_SYSTEM_RDMA_MSGP, ptr @TRACE_SYSTEM_RDMA_NOMSG, ptr @TRACE_SYSTEM_rpcrdma_areadch, ptr @TRACE_SYSTEM_rpcrdma_noch, ptr @TRACE_SYSTEM_rpcrdma_noch_mapped, ptr @TRACE_SYSTEM_rpcrdma_noch_pullup, ptr @TRACE_SYSTEM_rpcrdma_readch, ptr @TRACE_SYSTEM_rpcrdma_replych, ptr @TRACE_SYSTEM_rpcrdma_writech, ptr @__TRACE_SYSTEM_DMA_BIDIRECTIONAL, ptr @__TRACE_SYSTEM_DMA_FROM_DEVICE, ptr @__TRACE_SYSTEM_DMA_NONE, ptr @__TRACE_SYSTEM_DMA_TO_DEVICE, ptr @__TRACE_SYSTEM_IB_CM_APR_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_DREP_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_DREQ_ERROR, ptr @__TRACE_SYSTEM_IB_CM_DREQ_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_LAP_ERROR, ptr @__TRACE_SYSTEM_IB_CM_LAP_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_MRA_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_REJ_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_REP_ERROR, ptr @__TRACE_SYSTEM_IB_CM_REP_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_REQ_ERROR, ptr @__TRACE_SYSTEM_IB_CM_REQ_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_RTU_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR, ptr @__TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED, ptr @__TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT, ptr @__TRACE_SYSTEM_IB_CM_USER_ESTABLISHED, ptr @__TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER, ptr @__TRACE_SYSTEM_IB_EVENT_COMM_EST, ptr @__TRACE_SYSTEM_IB_EVENT_CQ_ERR, ptr @__TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL, ptr @__TRACE_SYSTEM_IB_EVENT_GID_CHANGE, ptr @__TRACE_SYSTEM_IB_EVENT_LID_CHANGE, ptr @__TRACE_SYSTEM_IB_EVENT_PATH_MIG, ptr @__TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR, ptr @__TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE, ptr @__TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE, ptr @__TRACE_SYSTEM_IB_EVENT_PORT_ERR, ptr @__TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR, ptr @__TRACE_SYSTEM_IB_EVENT_QP_FATAL, ptr @__TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED, ptr @__TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR, ptr @__TRACE_SYSTEM_IB_EVENT_SM_CHANGE, ptr @__TRACE_SYSTEM_IB_EVENT_SQ_DRAINED, ptr @__TRACE_SYSTEM_IB_EVENT_SRQ_ERR, ptr @__TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED, ptr @__TRACE_SYSTEM_IB_EVENT_WQ_FATAL, ptr @__TRACE_SYSTEM_IB_WC_BAD_RESP_ERR, ptr @__TRACE_SYSTEM_IB_WC_FATAL_ERR, ptr @__TRACE_SYSTEM_IB_WC_GENERAL_ERR, ptr @__TRACE_SYSTEM_IB_WC_INV_EECN_ERR, ptr @__TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR, ptr @__TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR, ptr @__TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR, ptr @__TRACE_SYSTEM_IB_WC_LOC_LEN_ERR, ptr @__TRACE_SYSTEM_IB_WC_LOC_PROT_ERR, ptr @__TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR, ptr @__TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR, ptr @__TRACE_SYSTEM_IB_WC_MW_BIND_ERR, ptr @__TRACE_SYSTEM_IB_WC_REM_ABORT_ERR, ptr @__TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR, ptr @__TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR, ptr @__TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR, ptr @__TRACE_SYSTEM_IB_WC_REM_OP_ERR, ptr @__TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR, ptr @__TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR, ptr @__TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR, ptr @__TRACE_SYSTEM_IB_WC_SUCCESS, ptr @__TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT, ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE, ptr @__TRACE_SYSTEM_RDMA_DONE, ptr @__TRACE_SYSTEM_RDMA_ERROR, ptr @__TRACE_SYSTEM_RDMA_MSG, ptr @__TRACE_SYSTEM_RDMA_MSGP, ptr @__TRACE_SYSTEM_RDMA_NOMSG, ptr @__TRACE_SYSTEM_rpcrdma_areadch, ptr @__TRACE_SYSTEM_rpcrdma_noch, ptr @__TRACE_SYSTEM_rpcrdma_noch_mapped, ptr @__TRACE_SYSTEM_rpcrdma_noch_pullup, ptr @__TRACE_SYSTEM_rpcrdma_readch, ptr @__TRACE_SYSTEM_rpcrdma_replych, ptr @__TRACE_SYSTEM_rpcrdma_writech, ptr @__UNIQUE_ID_alias1006, ptr @__UNIQUE_ID_alias1007, ptr @__UNIQUE_ID_alias1008, ptr @__UNIQUE_ID_author1002, ptr @__UNIQUE_ID_description1003, ptr @__UNIQUE_ID_file1004, ptr @__UNIQUE_ID_license1005, ptr @__bpf_trace_tp_map_svcrdma_accept_err, ptr @__bpf_trace_tp_map_svcrdma_decode_badproc_err, ptr @__bpf_trace_tp_map_svcrdma_decode_badvers_err, ptr @__bpf_trace_tp_map_svcrdma_decode_drop_err, ptr @__bpf_trace_tp_map_svcrdma_decode_parse_err, ptr @__bpf_trace_tp_map_svcrdma_decode_rqst, ptr @__bpf_trace_tp_map_svcrdma_decode_rseg, ptr @__bpf_trace_tp_map_svcrdma_decode_short_err, ptr @__bpf_trace_tp_map_svcrdma_decode_wseg, ptr @__bpf_trace_tp_map_svcrdma_dma_map_err, ptr @__bpf_trace_tp_map_svcrdma_dma_map_page, ptr @__bpf_trace_tp_map_svcrdma_dma_map_rw_err, ptr @__bpf_trace_tp_map_svcrdma_dma_unmap_page, ptr @__bpf_trace_tp_map_svcrdma_encode_wseg, ptr @__bpf_trace_tp_map_svcrdma_err_chunk, ptr @__bpf_trace_tp_map_svcrdma_err_vers, ptr @__bpf_trace_tp_map_svcrdma_fabric_err, ptr @__bpf_trace_tp_map_svcrdma_initdepth_err, ptr @__bpf_trace_tp_map_svcrdma_no_rwctx_err, ptr @__bpf_trace_tp_map_svcrdma_page_overrun_err, ptr @__bpf_trace_tp_map_svcrdma_pd_err, ptr @__bpf_trace_tp_map_svcrdma_post_read_chunk, ptr @__bpf_trace_tp_map_svcrdma_post_recv, ptr @__bpf_trace_tp_map_svcrdma_post_reply_chunk, ptr @__bpf_trace_tp_map_svcrdma_post_send, ptr @__bpf_trace_tp_map_svcrdma_post_write_chunk, ptr @__bpf_trace_tp_map_svcrdma_qp_err, ptr @__bpf_trace_tp_map_svcrdma_qp_error, ptr @__bpf_trace_tp_map_svcrdma_rq_post_err, ptr @__bpf_trace_tp_map_svcrdma_send_err, ptr @__bpf_trace_tp_map_svcrdma_send_pullup, ptr @__bpf_trace_tp_map_svcrdma_small_wrch_err, ptr @__bpf_trace_tp_map_svcrdma_sq_full, ptr @__bpf_trace_tp_map_svcrdma_sq_post_err, ptr @__bpf_trace_tp_map_svcrdma_sq_retry, ptr @__bpf_trace_tp_map_svcrdma_wc_read, ptr @__bpf_trace_tp_map_svcrdma_wc_read_err, ptr @__bpf_trace_tp_map_svcrdma_wc_read_flush, ptr @__bpf_trace_tp_map_svcrdma_wc_recv, ptr @__bpf_trace_tp_map_svcrdma_wc_recv_err, ptr @__bpf_trace_tp_map_svcrdma_wc_recv_flush, ptr @__bpf_trace_tp_map_svcrdma_wc_send, ptr @__bpf_trace_tp_map_svcrdma_wc_send_err, ptr @__bpf_trace_tp_map_svcrdma_wc_send_flush, ptr @__bpf_trace_tp_map_svcrdma_wc_write, ptr @__bpf_trace_tp_map_svcrdma_wc_write_err, ptr @__bpf_trace_tp_map_svcrdma_wc_write_flush, ptr @__bpf_trace_tp_map_xprtrdma_cb_call, ptr @__bpf_trace_tp_map_xprtrdma_cb_reply, ptr @__bpf_trace_tp_map_xprtrdma_cb_setup, ptr @__bpf_trace_tp_map_xprtrdma_chunk_read, ptr @__bpf_trace_tp_map_xprtrdma_chunk_reply, ptr @__bpf_trace_tp_map_xprtrdma_chunk_wp, ptr @__bpf_trace_tp_map_xprtrdma_chunk_write, ptr @__bpf_trace_tp_map_xprtrdma_connect, ptr @__bpf_trace_tp_map_xprtrdma_createmrs, ptr @__bpf_trace_tp_map_xprtrdma_decode_seg, ptr @__bpf_trace_tp_map_xprtrdma_disconnect, ptr @__bpf_trace_tp_map_xprtrdma_dma_maperr, ptr @__bpf_trace_tp_map_xprtrdma_err_chunk, ptr @__bpf_trace_tp_map_xprtrdma_err_unrecognized, ptr @__bpf_trace_tp_map_xprtrdma_err_vers, ptr @__bpf_trace_tp_map_xprtrdma_fixup, ptr @__bpf_trace_tp_map_xprtrdma_frwr_alloc, ptr @__bpf_trace_tp_map_xprtrdma_frwr_dereg, ptr @__bpf_trace_tp_map_xprtrdma_frwr_maperr, ptr @__bpf_trace_tp_map_xprtrdma_frwr_sgerr, ptr @__bpf_trace_tp_map_xprtrdma_inline_thresh, ptr @__bpf_trace_tp_map_xprtrdma_marshal, ptr @__bpf_trace_tp_map_xprtrdma_marshal_failed, ptr @__bpf_trace_tp_map_xprtrdma_mr_fastreg, ptr @__bpf_trace_tp_map_xprtrdma_mr_localinv, ptr @__bpf_trace_tp_map_xprtrdma_mr_map, ptr @__bpf_trace_tp_map_xprtrdma_mr_reminv, ptr @__bpf_trace_tp_map_xprtrdma_mr_unmap, ptr @__bpf_trace_tp_map_xprtrdma_mrs_zap, ptr @__bpf_trace_tp_map_xprtrdma_nomrs_err, ptr @__bpf_trace_tp_map_xprtrdma_op_connect, ptr @__bpf_trace_tp_map_xprtrdma_op_inject_dsc, ptr @__bpf_trace_tp_map_xprtrdma_op_set_cto, ptr @__bpf_trace_tp_map_xprtrdma_post_linv_err, ptr @__bpf_trace_tp_map_xprtrdma_post_recv, ptr @__bpf_trace_tp_map_xprtrdma_post_recvs, ptr @__bpf_trace_tp_map_xprtrdma_post_recvs_err, ptr @__bpf_trace_tp_map_xprtrdma_post_send, ptr @__bpf_trace_tp_map_xprtrdma_post_send_err, ptr @__bpf_trace_tp_map_xprtrdma_prepsend_failed, ptr @__bpf_trace_tp_map_xprtrdma_reply, ptr @__bpf_trace_tp_map_xprtrdma_reply_hdr_err, ptr @__bpf_trace_tp_map_xprtrdma_reply_rqst_err, ptr @__bpf_trace_tp_map_xprtrdma_reply_short_err, ptr @__bpf_trace_tp_map_xprtrdma_reply_vers_err, ptr @__bpf_trace_tp_map_xprtrdma_wc_fastreg, ptr @__bpf_trace_tp_map_xprtrdma_wc_li, ptr @__bpf_trace_tp_map_xprtrdma_wc_li_done, ptr @__bpf_trace_tp_map_xprtrdma_wc_li_wake, ptr @__bpf_trace_tp_map_xprtrdma_wc_receive, ptr @__bpf_trace_tp_map_xprtrdma_wc_send, ptr @__event_svcrdma_accept_err, ptr @__event_svcrdma_decode_badproc_err, ptr @__event_svcrdma_decode_badvers_err, ptr @__event_svcrdma_decode_drop_err, ptr @__event_svcrdma_decode_parse_err, ptr @__event_svcrdma_decode_rqst, ptr @__event_svcrdma_decode_rseg, ptr @__event_svcrdma_decode_short_err, ptr @__event_svcrdma_decode_wseg, ptr @__event_svcrdma_dma_map_err, ptr @__event_svcrdma_dma_map_page, ptr @__event_svcrdma_dma_map_rw_err, ptr @__event_svcrdma_dma_unmap_page, ptr @__event_svcrdma_encode_wseg, ptr @__event_svcrdma_err_chunk, ptr @__event_svcrdma_err_vers, ptr @__event_svcrdma_fabric_err, ptr @__event_svcrdma_initdepth_err, ptr @__event_svcrdma_no_rwctx_err, ptr @__event_svcrdma_page_overrun_err, ptr @__event_svcrdma_pd_err, ptr @__event_svcrdma_post_read_chunk, ptr @__event_svcrdma_post_recv, ptr @__event_svcrdma_post_reply_chunk, ptr @__event_svcrdma_post_send, ptr @__event_svcrdma_post_write_chunk, ptr @__event_svcrdma_qp_err, ptr @__event_svcrdma_qp_error, ptr @__event_svcrdma_rq_post_err, ptr @__event_svcrdma_send_err, ptr @__event_svcrdma_send_pullup, ptr @__event_svcrdma_small_wrch_err, ptr @__event_svcrdma_sq_full, ptr @__event_svcrdma_sq_post_err, ptr @__event_svcrdma_sq_retry, ptr @__event_svcrdma_wc_read, ptr @__event_svcrdma_wc_read_err, ptr @__event_svcrdma_wc_read_flush, ptr @__event_svcrdma_wc_recv, ptr @__event_svcrdma_wc_recv_err, ptr @__event_svcrdma_wc_recv_flush, ptr @__event_svcrdma_wc_send, ptr @__event_svcrdma_wc_send_err, ptr @__event_svcrdma_wc_send_flush, ptr @__event_svcrdma_wc_write, ptr @__event_svcrdma_wc_write_err, ptr @__event_svcrdma_wc_write_flush, ptr @__event_xprtrdma_cb_call, ptr @__event_xprtrdma_cb_reply, ptr @__event_xprtrdma_cb_setup, ptr @__event_xprtrdma_chunk_read, ptr @__event_xprtrdma_chunk_reply, ptr @__event_xprtrdma_chunk_wp, ptr @__event_xprtrdma_chunk_write, ptr @__event_xprtrdma_connect, ptr @__event_xprtrdma_createmrs, ptr @__event_xprtrdma_decode_seg, ptr @__event_xprtrdma_disconnect, ptr @__event_xprtrdma_dma_maperr, ptr @__event_xprtrdma_err_chunk, ptr @__event_xprtrdma_err_unrecognized, ptr @__event_xprtrdma_err_vers, ptr @__event_xprtrdma_fixup, ptr @__event_xprtrdma_frwr_alloc, ptr @__event_xprtrdma_frwr_dereg, ptr @__event_xprtrdma_frwr_maperr, ptr @__event_xprtrdma_frwr_sgerr, ptr @__event_xprtrdma_inline_thresh, ptr @__event_xprtrdma_marshal, ptr @__event_xprtrdma_marshal_failed, ptr @__event_xprtrdma_mr_fastreg, ptr @__event_xprtrdma_mr_localinv, ptr @__event_xprtrdma_mr_map, ptr @__event_xprtrdma_mr_reminv, ptr @__event_xprtrdma_mr_unmap, ptr @__event_xprtrdma_mrs_zap, ptr @__event_xprtrdma_nomrs_err, ptr @__event_xprtrdma_op_connect, ptr @__event_xprtrdma_op_inject_dsc, ptr @__event_xprtrdma_op_set_cto, ptr @__event_xprtrdma_post_linv_err, ptr @__event_xprtrdma_post_recv, ptr @__event_xprtrdma_post_recvs, ptr @__event_xprtrdma_post_recvs_err, ptr @__event_xprtrdma_post_send, ptr @__event_xprtrdma_post_send_err, ptr @__event_xprtrdma_prepsend_failed, ptr @__event_xprtrdma_reply, ptr @__event_xprtrdma_reply_hdr_err, ptr @__event_xprtrdma_reply_rqst_err, ptr @__event_xprtrdma_reply_short_err, ptr @__event_xprtrdma_reply_vers_err, ptr @__event_xprtrdma_wc_fastreg, ptr @__event_xprtrdma_wc_li, ptr @__event_xprtrdma_wc_li_done, ptr @__event_xprtrdma_wc_li_wake, ptr @__event_xprtrdma_wc_receive, ptr @__event_xprtrdma_wc_send, ptr @__exitcall_rpc_rdma_cleanup, ptr @__initcall__kmod_rpcrdma__1009_51_rpc_rdma_init6, ptr @__tracepoint_ptr_svcrdma_accept_err, ptr @__tracepoint_ptr_svcrdma_decode_badproc_err, ptr @__tracepoint_ptr_svcrdma_decode_badvers_err, ptr @__tracepoint_ptr_svcrdma_decode_drop_err, ptr @__tracepoint_ptr_svcrdma_decode_parse_err, ptr @__tracepoint_ptr_svcrdma_decode_rqst, ptr @__tracepoint_ptr_svcrdma_decode_rseg, ptr @__tracepoint_ptr_svcrdma_decode_short_err, ptr @__tracepoint_ptr_svcrdma_decode_wseg, ptr @__tracepoint_ptr_svcrdma_dma_map_err, ptr @__tracepoint_ptr_svcrdma_dma_map_page, ptr @__tracepoint_ptr_svcrdma_dma_map_rw_err, ptr @__tracepoint_ptr_svcrdma_dma_unmap_page, ptr @__tracepoint_ptr_svcrdma_encode_wseg, ptr @__tracepoint_ptr_svcrdma_err_chunk, ptr @__tracepoint_ptr_svcrdma_err_vers, ptr @__tracepoint_ptr_svcrdma_fabric_err, ptr @__tracepoint_ptr_svcrdma_initdepth_err, ptr @__tracepoint_ptr_svcrdma_no_rwctx_err, ptr @__tracepoint_ptr_svcrdma_page_overrun_err, ptr @__tracepoint_ptr_svcrdma_pd_err, ptr @__tracepoint_ptr_svcrdma_post_read_chunk, ptr @__tracepoint_ptr_svcrdma_post_recv, ptr @__tracepoint_ptr_svcrdma_post_reply_chunk, ptr @__tracepoint_ptr_svcrdma_post_send, ptr @__tracepoint_ptr_svcrdma_post_write_chunk, ptr @__tracepoint_ptr_svcrdma_qp_err, ptr @__tracepoint_ptr_svcrdma_qp_error, ptr @__tracepoint_ptr_svcrdma_rq_post_err, ptr @__tracepoint_ptr_svcrdma_send_err, ptr @__tracepoint_ptr_svcrdma_send_pullup, ptr @__tracepoint_ptr_svcrdma_small_wrch_err, ptr @__tracepoint_ptr_svcrdma_sq_full, ptr @__tracepoint_ptr_svcrdma_sq_post_err, ptr @__tracepoint_ptr_svcrdma_sq_retry, ptr @__tracepoint_ptr_svcrdma_wc_read, ptr @__tracepoint_ptr_svcrdma_wc_read_err, ptr @__tracepoint_ptr_svcrdma_wc_read_flush, ptr @__tracepoint_ptr_svcrdma_wc_recv, ptr @__tracepoint_ptr_svcrdma_wc_recv_err, ptr @__tracepoint_ptr_svcrdma_wc_recv_flush, ptr @__tracepoint_ptr_svcrdma_wc_send, ptr @__tracepoint_ptr_svcrdma_wc_send_err, ptr @__tracepoint_ptr_svcrdma_wc_send_flush, ptr @__tracepoint_ptr_svcrdma_wc_write, ptr @__tracepoint_ptr_svcrdma_wc_write_err, ptr @__tracepoint_ptr_svcrdma_wc_write_flush, ptr @__tracepoint_ptr_xprtrdma_cb_call, ptr @__tracepoint_ptr_xprtrdma_cb_reply, ptr @__tracepoint_ptr_xprtrdma_cb_setup, ptr @__tracepoint_ptr_xprtrdma_chunk_read, ptr @__tracepoint_ptr_xprtrdma_chunk_reply, ptr @__tracepoint_ptr_xprtrdma_chunk_wp, ptr @__tracepoint_ptr_xprtrdma_chunk_write, ptr @__tracepoint_ptr_xprtrdma_connect, ptr @__tracepoint_ptr_xprtrdma_createmrs, ptr @__tracepoint_ptr_xprtrdma_decode_seg, ptr @__tracepoint_ptr_xprtrdma_disconnect, ptr @__tracepoint_ptr_xprtrdma_dma_maperr, ptr @__tracepoint_ptr_xprtrdma_err_chunk, ptr @__tracepoint_ptr_xprtrdma_err_unrecognized, ptr @__tracepoint_ptr_xprtrdma_err_vers, ptr @__tracepoint_ptr_xprtrdma_fixup, ptr @__tracepoint_ptr_xprtrdma_frwr_alloc, ptr @__tracepoint_ptr_xprtrdma_frwr_dereg, ptr @__tracepoint_ptr_xprtrdma_frwr_maperr, ptr @__tracepoint_ptr_xprtrdma_frwr_sgerr, ptr @__tracepoint_ptr_xprtrdma_inline_thresh, ptr @__tracepoint_ptr_xprtrdma_marshal, ptr @__tracepoint_ptr_xprtrdma_marshal_failed, ptr @__tracepoint_ptr_xprtrdma_mr_fastreg, ptr @__tracepoint_ptr_xprtrdma_mr_localinv, ptr @__tracepoint_ptr_xprtrdma_mr_map, ptr @__tracepoint_ptr_xprtrdma_mr_reminv, ptr @__tracepoint_ptr_xprtrdma_mr_unmap, ptr @__tracepoint_ptr_xprtrdma_mrs_zap, ptr @__tracepoint_ptr_xprtrdma_nomrs_err, ptr @__tracepoint_ptr_xprtrdma_op_connect, ptr @__tracepoint_ptr_xprtrdma_op_inject_dsc, ptr @__tracepoint_ptr_xprtrdma_op_set_cto, ptr @__tracepoint_ptr_xprtrdma_post_linv_err, ptr @__tracepoint_ptr_xprtrdma_post_recv, ptr @__tracepoint_ptr_xprtrdma_post_recvs, ptr @__tracepoint_ptr_xprtrdma_post_recvs_err, ptr @__tracepoint_ptr_xprtrdma_post_send, ptr @__tracepoint_ptr_xprtrdma_post_send_err, ptr @__tracepoint_ptr_xprtrdma_prepsend_failed, ptr @__tracepoint_ptr_xprtrdma_reply, ptr @__tracepoint_ptr_xprtrdma_reply_hdr_err, ptr @__tracepoint_ptr_xprtrdma_reply_rqst_err, ptr @__tracepoint_ptr_xprtrdma_reply_short_err, ptr @__tracepoint_ptr_xprtrdma_reply_vers_err, ptr @__tracepoint_ptr_xprtrdma_wc_fastreg, ptr @__tracepoint_ptr_xprtrdma_wc_li, ptr @__tracepoint_ptr_xprtrdma_wc_li_done, ptr @__tracepoint_ptr_xprtrdma_wc_li_wake, ptr @__tracepoint_ptr_xprtrdma_wc_receive, ptr @__tracepoint_ptr_xprtrdma_wc_send, ptr @__tracepoint_svcrdma_accept_err, ptr @__tracepoint_svcrdma_decode_badproc_err, ptr @__tracepoint_svcrdma_decode_badvers_err, ptr @__tracepoint_svcrdma_decode_drop_err, ptr @__tracepoint_svcrdma_decode_parse_err, ptr @__tracepoint_svcrdma_decode_rqst, ptr @__tracepoint_svcrdma_decode_rseg, ptr @__tracepoint_svcrdma_decode_short_err, ptr @__tracepoint_svcrdma_decode_wseg, ptr @__tracepoint_svcrdma_dma_map_err, ptr @__tracepoint_svcrdma_dma_map_page, ptr @__tracepoint_svcrdma_dma_map_rw_err, ptr @__tracepoint_svcrdma_dma_unmap_page, ptr @__tracepoint_svcrdma_encode_wseg, ptr @__tracepoint_svcrdma_err_chunk, ptr @__tracepoint_svcrdma_err_vers, ptr @__tracepoint_svcrdma_fabric_err, ptr @__tracepoint_svcrdma_initdepth_err, ptr @__tracepoint_svcrdma_no_rwctx_err, ptr @__tracepoint_svcrdma_page_overrun_err, ptr @__tracepoint_svcrdma_pd_err, ptr @__tracepoint_svcrdma_post_read_chunk, ptr @__tracepoint_svcrdma_post_recv, ptr @__tracepoint_svcrdma_post_reply_chunk, ptr @__tracepoint_svcrdma_post_send, ptr @__tracepoint_svcrdma_post_write_chunk, ptr @__tracepoint_svcrdma_qp_err, ptr @__tracepoint_svcrdma_qp_error, ptr @__tracepoint_svcrdma_rq_post_err, ptr @__tracepoint_svcrdma_send_err, ptr @__tracepoint_svcrdma_send_pullup, ptr @__tracepoint_svcrdma_small_wrch_err, ptr @__tracepoint_svcrdma_sq_full, ptr @__tracepoint_svcrdma_sq_post_err, ptr @__tracepoint_svcrdma_sq_retry, ptr @__tracepoint_svcrdma_wc_read, ptr @__tracepoint_svcrdma_wc_read_err, ptr @__tracepoint_svcrdma_wc_read_flush, ptr @__tracepoint_svcrdma_wc_recv, ptr @__tracepoint_svcrdma_wc_recv_err, ptr @__tracepoint_svcrdma_wc_recv_flush, ptr @__tracepoint_svcrdma_wc_send, ptr @__tracepoint_svcrdma_wc_send_err, ptr @__tracepoint_svcrdma_wc_send_flush, ptr @__tracepoint_svcrdma_wc_write, ptr @__tracepoint_svcrdma_wc_write_err, ptr @__tracepoint_svcrdma_wc_write_flush, ptr @__tracepoint_xprtrdma_cb_call, ptr @__tracepoint_xprtrdma_cb_reply, ptr @__tracepoint_xprtrdma_cb_setup, ptr @__tracepoint_xprtrdma_chunk_read, ptr @__tracepoint_xprtrdma_chunk_reply, ptr @__tracepoint_xprtrdma_chunk_wp, ptr @__tracepoint_xprtrdma_chunk_write, ptr @__tracepoint_xprtrdma_connect, ptr @__tracepoint_xprtrdma_createmrs, ptr @__tracepoint_xprtrdma_decode_seg, ptr @__tracepoint_xprtrdma_disconnect, ptr @__tracepoint_xprtrdma_dma_maperr, ptr @__tracepoint_xprtrdma_err_chunk, ptr @__tracepoint_xprtrdma_err_unrecognized, ptr @__tracepoint_xprtrdma_err_vers, ptr @__tracepoint_xprtrdma_fixup, ptr @__tracepoint_xprtrdma_frwr_alloc, ptr @__tracepoint_xprtrdma_frwr_dereg, ptr @__tracepoint_xprtrdma_frwr_maperr, ptr @__tracepoint_xprtrdma_frwr_sgerr, ptr @__tracepoint_xprtrdma_inline_thresh, ptr @__tracepoint_xprtrdma_marshal, ptr @__tracepoint_xprtrdma_marshal_failed, ptr @__tracepoint_xprtrdma_mr_fastreg, ptr @__tracepoint_xprtrdma_mr_localinv, ptr @__tracepoint_xprtrdma_mr_map, ptr @__tracepoint_xprtrdma_mr_reminv, ptr @__tracepoint_xprtrdma_mr_unmap, ptr @__tracepoint_xprtrdma_mrs_zap, ptr @__tracepoint_xprtrdma_nomrs_err, ptr @__tracepoint_xprtrdma_op_connect, ptr @__tracepoint_xprtrdma_op_inject_dsc, ptr @__tracepoint_xprtrdma_op_set_cto, ptr @__tracepoint_xprtrdma_post_linv_err, ptr @__tracepoint_xprtrdma_post_recv, ptr @__tracepoint_xprtrdma_post_recvs, ptr @__tracepoint_xprtrdma_post_recvs_err, ptr @__tracepoint_xprtrdma_post_send, ptr @__tracepoint_xprtrdma_post_send_err, ptr @__tracepoint_xprtrdma_prepsend_failed, ptr @__tracepoint_xprtrdma_reply, ptr @__tracepoint_xprtrdma_reply_hdr_err, ptr @__tracepoint_xprtrdma_reply_rqst_err, ptr @__tracepoint_xprtrdma_reply_short_err, ptr @__tracepoint_xprtrdma_reply_vers_err, ptr @__tracepoint_xprtrdma_wc_fastreg, ptr @__tracepoint_xprtrdma_wc_li, ptr @__tracepoint_xprtrdma_wc_li_done, ptr @__tracepoint_xprtrdma_wc_li_wake, ptr @__tracepoint_xprtrdma_wc_receive, ptr @__tracepoint_xprtrdma_wc_send, ptr @event_class_rpcrdma_completion_class, ptr @event_class_rpcrdma_mr_completion_class, ptr @event_class_rpcrdma_receive_completion_class, ptr @event_class_rpcrdma_receive_flush_class, ptr @event_class_rpcrdma_receive_success_class, ptr @event_class_rpcrdma_send_completion_class, ptr @event_class_rpcrdma_send_flush_class, ptr @event_class_svcrdma_accept_class, ptr @event_class_svcrdma_badreq_event, ptr @event_class_svcrdma_decode_rqst, ptr @event_class_svcrdma_decode_rseg, ptr @event_class_svcrdma_decode_short_err, ptr @event_class_svcrdma_decode_wseg, ptr @event_class_svcrdma_dma_map_class, ptr @event_class_svcrdma_dma_map_rw_err, ptr @event_class_svcrdma_encode_wseg, ptr @event_class_svcrdma_error_event, ptr @event_class_svcrdma_no_rwctx_err, ptr @event_class_svcrdma_page_overrun_err, ptr @event_class_svcrdma_post_chunk_class, ptr @event_class_svcrdma_post_recv, ptr @event_class_svcrdma_post_send, ptr @event_class_svcrdma_qp_error, ptr @event_class_svcrdma_rq_post_err, ptr @event_class_svcrdma_send_err, ptr @event_class_svcrdma_send_pullup, ptr @event_class_svcrdma_sendqueue_event, ptr @event_class_svcrdma_small_wrch_err, ptr @event_class_svcrdma_sq_post_err, ptr @event_class_svcrdma_wc_read, ptr @event_class_xprtrdma_anonymous_mr_class, ptr @event_class_xprtrdma_callback_class, ptr @event_class_xprtrdma_cb_setup, ptr @event_class_xprtrdma_connect_class, ptr @event_class_xprtrdma_createmrs, ptr @event_class_xprtrdma_decode_seg, ptr @event_class_xprtrdma_dma_maperr, ptr @event_class_xprtrdma_err_chunk, ptr @event_class_xprtrdma_err_unrecognized, ptr @event_class_xprtrdma_err_vers, ptr @event_class_xprtrdma_fixup, ptr @event_class_xprtrdma_frwr_alloc, ptr @event_class_xprtrdma_frwr_dereg, ptr @event_class_xprtrdma_frwr_maperr, ptr @event_class_xprtrdma_frwr_sgerr, ptr @event_class_xprtrdma_inline_thresh, ptr @event_class_xprtrdma_marshal, ptr @event_class_xprtrdma_marshal_failed, ptr @event_class_xprtrdma_mr_class, ptr @event_class_xprtrdma_mrs_zap, ptr @event_class_xprtrdma_nomrs_err, ptr @event_class_xprtrdma_op_connect, ptr @event_class_xprtrdma_op_set_cto, ptr @event_class_xprtrdma_post_linv_err, ptr @event_class_xprtrdma_post_recv, ptr @event_class_xprtrdma_post_recvs, ptr @event_class_xprtrdma_post_recvs_err, ptr @event_class_xprtrdma_post_send, ptr @event_class_xprtrdma_post_send_err, ptr @event_class_xprtrdma_prepsend_failed, ptr @event_class_xprtrdma_rdch_event, ptr @event_class_xprtrdma_reply, ptr @event_class_xprtrdma_reply_class, ptr @event_class_xprtrdma_rxprt, ptr @event_class_xprtrdma_wrch_event, ptr @event_svcrdma_accept_err, ptr @event_svcrdma_decode_badproc_err, ptr @event_svcrdma_decode_badvers_err, ptr @event_svcrdma_decode_drop_err, ptr @event_svcrdma_decode_parse_err, ptr @event_svcrdma_decode_rqst, ptr @event_svcrdma_decode_rseg, ptr @event_svcrdma_decode_short_err, ptr @event_svcrdma_decode_wseg, ptr @event_svcrdma_dma_map_err, ptr @event_svcrdma_dma_map_page, ptr @event_svcrdma_dma_map_rw_err, ptr @event_svcrdma_dma_unmap_page, ptr @event_svcrdma_encode_wseg, ptr @event_svcrdma_err_chunk, ptr @event_svcrdma_err_vers, ptr @event_svcrdma_fabric_err, ptr @event_svcrdma_initdepth_err, ptr @event_svcrdma_no_rwctx_err, ptr @event_svcrdma_page_overrun_err, ptr @event_svcrdma_pd_err, ptr @event_svcrdma_post_read_chunk, ptr @event_svcrdma_post_recv, ptr @event_svcrdma_post_reply_chunk, ptr @event_svcrdma_post_send, ptr @event_svcrdma_post_write_chunk, ptr @event_svcrdma_qp_err, ptr @event_svcrdma_qp_error, ptr @event_svcrdma_rq_post_err, ptr @event_svcrdma_send_err, ptr @event_svcrdma_send_pullup, ptr @event_svcrdma_small_wrch_err, ptr @event_svcrdma_sq_full, ptr @event_svcrdma_sq_post_err, ptr @event_svcrdma_sq_retry, ptr @event_svcrdma_wc_read, ptr @event_svcrdma_wc_read_err, ptr @event_svcrdma_wc_read_flush, ptr @event_svcrdma_wc_recv, ptr @event_svcrdma_wc_recv_err, ptr @event_svcrdma_wc_recv_flush, ptr @event_svcrdma_wc_send, ptr @event_svcrdma_wc_send_err, ptr @event_svcrdma_wc_send_flush, ptr @event_svcrdma_wc_write, ptr @event_svcrdma_wc_write_err, ptr @event_svcrdma_wc_write_flush, ptr @event_xprtrdma_cb_call, ptr @event_xprtrdma_cb_reply, ptr @event_xprtrdma_cb_setup, ptr @event_xprtrdma_chunk_read, ptr @event_xprtrdma_chunk_reply, ptr @event_xprtrdma_chunk_wp, ptr @event_xprtrdma_chunk_write, ptr @event_xprtrdma_connect, ptr @event_xprtrdma_createmrs, ptr @event_xprtrdma_decode_seg, ptr @event_xprtrdma_disconnect, ptr @event_xprtrdma_dma_maperr, ptr @event_xprtrdma_err_chunk, ptr @event_xprtrdma_err_unrecognized, ptr @event_xprtrdma_err_vers, ptr @event_xprtrdma_fixup, ptr @event_xprtrdma_frwr_alloc, ptr @event_xprtrdma_frwr_dereg, ptr @event_xprtrdma_frwr_maperr, ptr @event_xprtrdma_frwr_sgerr, ptr @event_xprtrdma_inline_thresh, ptr @event_xprtrdma_marshal, ptr @event_xprtrdma_marshal_failed, ptr @event_xprtrdma_mr_fastreg, ptr @event_xprtrdma_mr_localinv, ptr @event_xprtrdma_mr_map, ptr @event_xprtrdma_mr_reminv, ptr @event_xprtrdma_mr_unmap, ptr @event_xprtrdma_mrs_zap, ptr @event_xprtrdma_nomrs_err, ptr @event_xprtrdma_op_connect, ptr @event_xprtrdma_op_inject_dsc, ptr @event_xprtrdma_op_set_cto, ptr @event_xprtrdma_post_linv_err, ptr @event_xprtrdma_post_recv, ptr @event_xprtrdma_post_recvs, ptr @event_xprtrdma_post_recvs_err, ptr @event_xprtrdma_post_send, ptr @event_xprtrdma_post_send_err, ptr @event_xprtrdma_prepsend_failed, ptr @event_xprtrdma_reply, ptr @event_xprtrdma_reply_hdr_err, ptr @event_xprtrdma_reply_rqst_err, ptr @event_xprtrdma_reply_short_err, ptr @event_xprtrdma_reply_vers_err, ptr @event_xprtrdma_wc_fastreg, ptr @event_xprtrdma_wc_li, ptr @event_xprtrdma_wc_li_done, ptr @event_xprtrdma_wc_li_wake, ptr @event_xprtrdma_wc_receive, ptr @event_xprtrdma_wc_send, ptr @rpc_rdma_cleanup, ptr @str__rpcrdma__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @trace_event_fields_rpcrdma_completion_class, ptr @trace_event_fields_rpcrdma_send_completion_class, ptr @trace_event_fields_rpcrdma_send_flush_class, ptr @trace_event_fields_rpcrdma_mr_completion_class, ptr @trace_event_fields_rpcrdma_receive_completion_class, ptr @trace_event_fields_rpcrdma_receive_success_class, ptr @trace_event_fields_rpcrdma_receive_flush_class, ptr @trace_event_fields_xprtrdma_reply_class, ptr @trace_event_fields_xprtrdma_rxprt, ptr @trace_event_fields_xprtrdma_connect_class, ptr @trace_event_fields_xprtrdma_rdch_event, ptr @trace_event_fields_xprtrdma_wrch_event, ptr @trace_event_fields_xprtrdma_mr_class, ptr @trace_event_fields_xprtrdma_anonymous_mr_class, ptr @trace_event_fields_xprtrdma_callback_class, ptr @trace_event_fields_xprtrdma_inline_thresh, ptr @trace_event_type_funcs_xprtrdma_inline_thresh, ptr @print_fmt_xprtrdma_inline_thresh, ptr @trace_event_type_funcs_xprtrdma_connect_class, ptr @print_fmt_xprtrdma_connect_class, ptr @trace_event_type_funcs_xprtrdma_rxprt, ptr @print_fmt_xprtrdma_rxprt, ptr @trace_event_fields_xprtrdma_op_connect, ptr @trace_event_type_funcs_xprtrdma_op_connect, ptr @print_fmt_xprtrdma_op_connect, ptr @trace_event_fields_xprtrdma_op_set_cto, ptr @trace_event_type_funcs_xprtrdma_op_set_cto, ptr @print_fmt_xprtrdma_op_set_cto, ptr @trace_event_fields_xprtrdma_createmrs, ptr @trace_event_type_funcs_xprtrdma_createmrs, ptr @print_fmt_xprtrdma_createmrs, ptr @trace_event_fields_xprtrdma_nomrs_err, ptr @trace_event_type_funcs_xprtrdma_nomrs_err, ptr @print_fmt_xprtrdma_nomrs_err, ptr @trace_event_type_funcs_xprtrdma_rdch_event, ptr @print_fmt_xprtrdma_rdch_event, ptr @trace_event_type_funcs_xprtrdma_wrch_event, ptr @print_fmt_xprtrdma_wrch_event, ptr @trace_event_fields_xprtrdma_marshal, ptr @trace_event_type_funcs_xprtrdma_marshal, ptr @print_fmt_xprtrdma_marshal, ptr @trace_event_fields_xprtrdma_marshal_failed, ptr @trace_event_type_funcs_xprtrdma_marshal_failed, ptr @print_fmt_xprtrdma_marshal_failed, ptr @trace_event_fields_xprtrdma_prepsend_failed, ptr @trace_event_type_funcs_xprtrdma_prepsend_failed, ptr @print_fmt_xprtrdma_prepsend_failed, ptr @trace_event_fields_xprtrdma_post_send, ptr @trace_event_type_funcs_xprtrdma_post_send, ptr @print_fmt_xprtrdma_post_send, ptr @trace_event_fields_xprtrdma_post_send_err, ptr @trace_event_type_funcs_xprtrdma_post_send_err, ptr @print_fmt_xprtrdma_post_send_err, ptr @trace_event_fields_xprtrdma_post_recv, ptr @trace_event_type_funcs_xprtrdma_post_recv, ptr @print_fmt_xprtrdma_post_recv, ptr @trace_event_fields_xprtrdma_post_recvs, ptr @trace_event_type_funcs_xprtrdma_post_recvs, ptr @print_fmt_xprtrdma_post_recvs, ptr @trace_event_fields_xprtrdma_post_recvs_err, ptr @trace_event_type_funcs_xprtrdma_post_recvs_err, ptr @print_fmt_xprtrdma_post_recvs_err, ptr @trace_event_fields_xprtrdma_post_linv_err, ptr @trace_event_type_funcs_xprtrdma_post_linv_err, ptr @print_fmt_xprtrdma_post_linv_err, ptr @trace_event_type_funcs_rpcrdma_receive_completion_class, ptr @print_fmt_rpcrdma_receive_completion_class, ptr @trace_event_type_funcs_rpcrdma_completion_class, ptr @print_fmt_rpcrdma_completion_class, ptr @trace_event_type_funcs_rpcrdma_mr_completion_class, ptr @print_fmt_rpcrdma_mr_completion_class, ptr @trace_event_fields_xprtrdma_frwr_alloc, ptr @trace_event_type_funcs_xprtrdma_frwr_alloc, ptr @print_fmt_xprtrdma_frwr_alloc, ptr @trace_event_fields_xprtrdma_frwr_dereg, ptr @trace_event_type_funcs_xprtrdma_frwr_dereg, ptr @print_fmt_xprtrdma_frwr_dereg, ptr @trace_event_fields_xprtrdma_frwr_sgerr, ptr @trace_event_type_funcs_xprtrdma_frwr_sgerr, ptr @print_fmt_xprtrdma_frwr_sgerr, ptr @trace_event_fields_xprtrdma_frwr_maperr, ptr @trace_event_type_funcs_xprtrdma_frwr_maperr, ptr @print_fmt_xprtrdma_frwr_maperr, ptr @trace_event_type_funcs_xprtrdma_mr_class, ptr @print_fmt_xprtrdma_mr_class, ptr @trace_event_type_funcs_xprtrdma_anonymous_mr_class, ptr @print_fmt_xprtrdma_anonymous_mr_class, ptr @trace_event_fields_xprtrdma_dma_maperr, ptr @trace_event_type_funcs_xprtrdma_dma_maperr, ptr @print_fmt_xprtrdma_dma_maperr, ptr @trace_event_fields_xprtrdma_reply, ptr @trace_event_type_funcs_xprtrdma_reply, ptr @print_fmt_xprtrdma_reply, ptr @trace_event_type_funcs_xprtrdma_reply_class, ptr @print_fmt_xprtrdma_reply_class, ptr @trace_event_fields_xprtrdma_err_vers, ptr @trace_event_type_funcs_xprtrdma_err_vers, ptr @print_fmt_xprtrdma_err_vers, ptr @trace_event_fields_xprtrdma_err_chunk, ptr @trace_event_type_funcs_xprtrdma_err_chunk, ptr @print_fmt_xprtrdma_err_chunk, ptr @trace_event_fields_xprtrdma_err_unrecognized, ptr @trace_event_type_funcs_xprtrdma_err_unrecognized, ptr @print_fmt_xprtrdma_err_unrecognized, ptr @trace_event_fields_xprtrdma_fixup, ptr @trace_event_type_funcs_xprtrdma_fixup, ptr @print_fmt_xprtrdma_fixup, ptr @trace_event_fields_xprtrdma_decode_seg, ptr @trace_event_type_funcs_xprtrdma_decode_seg, ptr @print_fmt_xprtrdma_decode_seg, ptr @trace_event_fields_xprtrdma_mrs_zap, ptr @trace_event_type_funcs_xprtrdma_mrs_zap, ptr @print_fmt_xprtrdma_mrs_zap, ptr @trace_event_fields_xprtrdma_cb_setup, ptr @trace_event_type_funcs_xprtrdma_cb_setup, ptr @print_fmt_xprtrdma_cb_setup, ptr @trace_event_type_funcs_xprtrdma_callback_class, ptr @print_fmt_xprtrdma_callback_class, ptr @trace_event_fields_svcrdma_accept_class, ptr @trace_event_type_funcs_svcrdma_accept_class, ptr @print_fmt_svcrdma_accept_class, ptr @trace_event_fields_svcrdma_decode_rqst, ptr @trace_event_type_funcs_svcrdma_decode_rqst, ptr @print_fmt_svcrdma_decode_rqst, ptr @trace_event_fields_svcrdma_decode_short_err, ptr @trace_event_type_funcs_svcrdma_decode_short_err, ptr @print_fmt_svcrdma_decode_short_err, ptr @trace_event_fields_svcrdma_badreq_event, ptr @trace_event_type_funcs_svcrdma_badreq_event, ptr @print_fmt_svcrdma_badreq_event, ptr @trace_event_fields_svcrdma_encode_wseg, ptr @trace_event_type_funcs_svcrdma_encode_wseg, ptr @print_fmt_svcrdma_encode_wseg, ptr @trace_event_fields_svcrdma_decode_rseg, ptr @trace_event_type_funcs_svcrdma_decode_rseg, ptr @print_fmt_svcrdma_decode_rseg, ptr @trace_event_fields_svcrdma_decode_wseg, ptr @trace_event_type_funcs_svcrdma_decode_wseg, ptr @print_fmt_svcrdma_decode_wseg, ptr @trace_event_fields_svcrdma_error_event, ptr @trace_event_type_funcs_svcrdma_error_event, ptr @print_fmt_svcrdma_error_event, ptr @trace_event_fields_svcrdma_dma_map_class, ptr @trace_event_type_funcs_svcrdma_dma_map_class, ptr @print_fmt_svcrdma_dma_map_class, ptr @trace_event_fields_svcrdma_dma_map_rw_err, ptr @trace_event_type_funcs_svcrdma_dma_map_rw_err, ptr @print_fmt_svcrdma_dma_map_rw_err, ptr @trace_event_fields_svcrdma_no_rwctx_err, ptr @trace_event_type_funcs_svcrdma_no_rwctx_err, ptr @print_fmt_svcrdma_no_rwctx_err, ptr @trace_event_fields_svcrdma_page_overrun_err, ptr @trace_event_type_funcs_svcrdma_page_overrun_err, ptr @print_fmt_svcrdma_page_overrun_err, ptr @trace_event_fields_svcrdma_small_wrch_err, ptr @trace_event_type_funcs_svcrdma_small_wrch_err, ptr @print_fmt_svcrdma_small_wrch_err, ptr @trace_event_fields_svcrdma_send_pullup, ptr @trace_event_type_funcs_svcrdma_send_pullup, ptr @print_fmt_svcrdma_send_pullup, ptr @trace_event_fields_svcrdma_send_err, ptr @trace_event_type_funcs_svcrdma_send_err, ptr @print_fmt_svcrdma_send_err, ptr @trace_event_fields_svcrdma_post_send, ptr @trace_event_type_funcs_svcrdma_post_send, ptr @print_fmt_svcrdma_post_send, ptr @trace_event_type_funcs_rpcrdma_send_completion_class, ptr @print_fmt_rpcrdma_send_completion_class, ptr @trace_event_type_funcs_rpcrdma_send_flush_class, ptr @print_fmt_rpcrdma_send_flush_class, ptr @trace_event_fields_svcrdma_post_recv, ptr @trace_event_type_funcs_svcrdma_post_recv, ptr @print_fmt_svcrdma_post_recv, ptr @trace_event_type_funcs_rpcrdma_receive_success_class, ptr @print_fmt_rpcrdma_receive_success_class, ptr @trace_event_type_funcs_rpcrdma_receive_flush_class, ptr @print_fmt_rpcrdma_receive_flush_class, ptr @trace_event_fields_svcrdma_rq_post_err, ptr @trace_event_type_funcs_svcrdma_rq_post_err, ptr @print_fmt_svcrdma_rq_post_err, ptr @trace_event_fields_svcrdma_post_chunk_class, ptr @trace_event_type_funcs_svcrdma_post_chunk_class, ptr @print_fmt_svcrdma_post_chunk_class, ptr @trace_event_fields_svcrdma_wc_read, ptr @trace_event_type_funcs_svcrdma_wc_read, ptr @print_fmt_svcrdma_wc_read, ptr @trace_event_fields_svcrdma_qp_error, ptr @trace_event_type_funcs_svcrdma_qp_error, ptr @print_fmt_svcrdma_qp_error, ptr @trace_event_fields_svcrdma_sendqueue_event, ptr @trace_event_type_funcs_svcrdma_sendqueue_event, ptr @print_fmt_svcrdma_sendqueue_event, ptr @trace_event_fields_svcrdma_sq_post_err, ptr @trace_event_type_funcs_svcrdma_sq_post_err, ptr @print_fmt_svcrdma_sq_post_err, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @trace_raw_output_xprtrdma_marshal.symbols, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @trace_raw_output_xprtrdma_marshal.symbols.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @trace_raw_output_rpcrdma_receive_completion_class.symbols, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @trace_raw_output_rpcrdma_completion_class.symbols, ptr @.str.195, ptr @trace_raw_output_rpcrdma_mr_completion_class.symbols, ptr @.str.196, ptr @.str.197, ptr @trace_raw_output_xprtrdma_frwr_dereg.symbols, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @trace_raw_output_xprtrdma_frwr_sgerr.symbols, ptr @.str.203, ptr @.str.204, ptr @trace_raw_output_xprtrdma_frwr_maperr.symbols, ptr @.str.205, ptr @trace_raw_output_xprtrdma_mr_class.symbols, ptr @.str.206, ptr @trace_raw_output_xprtrdma_anonymous_mr_class.symbols, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @trace_raw_output_svcrdma_decode_rqst.symbols, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @trace_raw_output_rpcrdma_send_flush_class.symbols, ptr @.str.254, ptr @trace_raw_output_rpcrdma_receive_flush_class.symbols, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @trace_raw_output_svcrdma_qp_error.symbols, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289], section "llvm.metadata"
@0 = internal global [597 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__rpcrdma__trace_system_name to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_completion_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_send_completion_class to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_send_flush_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_mr_completion_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_receive_completion_class to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_receive_success_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rpcrdma_receive_flush_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_reply_class to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_rxprt to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_connect_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_rdch_event to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_wrch_event to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_mr_class to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_anonymous_mr_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_callback_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_inline_thresh to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_inline_thresh to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_inline_thresh to i32), i32 155, i32 192, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_inline_thresh to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_connect_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_connect_class to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_connect to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_disconnect to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_rxprt to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_rxprt to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_op_inject_dsc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_op_connect to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_op_connect to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_op_connect to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_op_connect to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_op_set_cto to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_op_set_cto to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_op_set_cto to i32), i32 117, i32 160, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_op_set_cto to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_createmrs to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_createmrs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_createmrs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_createmrs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_nomrs_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_nomrs_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_nomrs_err to i32), i32 94, i32 128, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_nomrs_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_rdch_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_rdch_event to i32), i32 191, i32 224, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_chunk_read to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_wrch_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_wrch_event to i32), i32 174, i32 224, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_chunk_write to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_chunk_reply to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_chunk_wp to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_marshal to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_marshal to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_marshal to i32), i32 683, i32 864, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_marshal to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_marshal_failed to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_marshal_failed to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_marshal_failed to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_marshal_failed to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_prepsend_failed to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_prepsend_failed to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_prepsend_failed to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_prepsend_failed to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_post_send to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_post_send to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_post_send to i32), i32 190, i32 224, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_post_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_post_send_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_post_send_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_post_send_err to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_post_send_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_post_recv to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_post_recv to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_post_recv to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_post_recv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_post_recvs to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_post_recvs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_post_recvs to i32), i32 119, i32 160, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_post_recvs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_post_recvs_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_post_recvs_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_post_recvs_err to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_post_recvs_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_post_linv_err to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_post_linv_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_post_linv_err to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_post_linv_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_receive_completion_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_receive_completion_class to i32), i32 1085, i32 1344, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_wc_receive to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_completion_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_completion_class to i32), i32 1058, i32 1344, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_wc_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_mr_completion_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_mr_completion_class to i32), i32 1060, i32 1344, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_wc_fastreg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_wc_li to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_wc_li_wake to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_wc_li_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_frwr_alloc to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_frwr_alloc to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_frwr_alloc to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_frwr_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_frwr_dereg to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_frwr_dereg to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_frwr_dereg to i32), i32 294, i32 384, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_frwr_dereg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_frwr_sgerr to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_frwr_sgerr to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_frwr_sgerr to i32), i32 229, i32 288, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_frwr_sgerr to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_frwr_maperr to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_frwr_maperr to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_frwr_maperr to i32), i32 249, i32 288, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_frwr_maperr to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_mr_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_mr_class to i32), i32 323, i32 416, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_mr_fastreg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_mr_localinv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_mr_reminv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_mr_map to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_anonymous_mr_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_anonymous_mr_class to i32), i32 278, i32 352, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_mr_unmap to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_dma_maperr to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_dma_maperr to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_dma_maperr to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_dma_maperr to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_reply to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_reply to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_reply to i32), i32 93, i32 128, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_reply to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_reply_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_reply_class to i32), i32 114, i32 160, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_reply_vers_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_reply_rqst_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_reply_short_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_reply_hdr_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.979 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_err_vers to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_err_vers to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_err_vers to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_err_vers to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_err_chunk to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_err_chunk to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_err_chunk to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_err_chunk to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_err_unrecognized to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_err_unrecognized to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_err_unrecognized to i32), i32 97, i32 160, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_err_unrecognized to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_fixup to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_fixup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_fixup to i32), i32 126, i32 160, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_fixup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_decode_seg to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_decode_seg to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_decode_seg to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_decode_seg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_mrs_zap to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_mrs_zap to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_mrs_zap to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_mrs_zap to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xprtrdma_cb_setup to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_cb_setup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_cb_setup to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_cb_setup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xprtrdma_callback_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xprtrdma_callback_class to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_cb_call to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1070 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xprtrdma_cb_reply to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_accept_class to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_accept_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_accept_class to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_pd_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_qp_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1088 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_fabric_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_initdepth_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_accept_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_decode_rqst to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1100 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_decode_rqst to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_decode_rqst to i32), i32 317, i32 384, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_rqst to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1109 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_decode_short_err to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_decode_short_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_decode_short_err to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_short_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_badreq_event to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_badreq_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_badreq_event to i32), i32 134, i32 192, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_badvers_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_drop_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1136 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_badproc_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_parse_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_encode_wseg to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1145 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_encode_wseg to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_encode_wseg to i32), i32 150, i32 192, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_encode_wseg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_decode_rseg to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_decode_rseg to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_decode_rseg to i32), i32 177, i32 224, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_rseg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_decode_wseg to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_decode_wseg to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1172 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_decode_wseg to i32), i32 150, i32 192, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_decode_wseg to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_error_event to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1181 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_error_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_error_event to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_err_vers to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_err_chunk to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_dma_map_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1196 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_dma_map_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_dma_map_class to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_dma_map_page to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_dma_map_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1208 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_dma_unmap_page to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1211 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_dma_map_rw_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_dma_map_rw_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_dma_map_rw_err to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_dma_map_rw_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_no_rwctx_err to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_no_rwctx_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1229 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_no_rwctx_err to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_no_rwctx_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_page_overrun_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_page_overrun_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1241 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_page_overrun_err to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.1244 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_page_overrun_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_small_wrch_err to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_small_wrch_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1253 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_small_wrch_err to i32), i32 135, i32 192, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_small_wrch_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_send_pullup to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1262 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_send_pullup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1265 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_send_pullup to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_send_pullup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_send_err to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1274 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_send_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_send_err to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.1280 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_send_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_post_send to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_post_send to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1289 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_post_send to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.1292 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_post_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_send_completion_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1298 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_send_completion_class to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1304 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_send_flush_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_send_flush_class to i32), i32 1058, i32 1344, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_send_flush to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1313 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_send_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1316 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_post_recv to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1319 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_post_recv to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1322 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_post_recv to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_post_recv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_receive_success_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_receive_success_class to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.1334 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_recv to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rpcrdma_receive_flush_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rpcrdma_receive_flush_class to i32), i32 1058, i32 1344, i32 ptrtoint (ptr @___asan_gen_.1343 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_recv_flush to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_recv_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_rq_post_err to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_rq_post_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_rq_post_err to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_rq_post_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1361 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_post_chunk_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_post_chunk_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_post_chunk_class to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.1370 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_post_read_chunk to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_post_write_chunk to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_post_reply_chunk to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1379 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_wc_read to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_wc_read to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_wc_read to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_read to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1391 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_read_flush to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1394 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_read_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_write to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1400 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_write_flush to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1403 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_wc_write_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_qp_error to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1409 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_qp_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1412 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_qp_error to i32), i32 911, i32 1152, i32 ptrtoint (ptr @___asan_gen_.1415 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_qp_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_sendqueue_event to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1421 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_sendqueue_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1424 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_sendqueue_event to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.1427 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_sq_full to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1430 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_sq_retry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_svcrdma_sq_post_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1436 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_svcrdma_sq_post_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1439 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_svcrdma_sq_post_err to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1442 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_svcrdma_sq_post_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_marshal.symbols to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_marshal.symbols.157 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpcrdma_receive_completion_class.symbols to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpcrdma_completion_class.symbols to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpcrdma_mr_completion_class.symbols to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_frwr_dereg.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_frwr_sgerr.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_frwr_maperr.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_mr_class.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xprtrdma_anonymous_mr_class.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcrdma_decode_rqst.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpcrdma_send_flush_class.symbols to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_rpcrdma_receive_flush_class.symbols to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_svcrdma_qp_error.symbols to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2078 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_inline_thresh(ptr nocapture readnone %__data, ptr noundef %ep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_inline_thresh, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ep) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_connect(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_connect, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %rc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_disconnect(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_disconnect, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %rc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_op_inject_dsc(ptr nocapture readnone %__data, ptr noundef %r_xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_op_inject_dsc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_op_connect(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %delay) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_op_connect, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %delay) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_op_set_cto(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %connect, i32 noundef %reconnect) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_op_set_cto, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %connect, i32 noundef %reconnect) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_createmrs(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_createmrs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %count) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_nomrs_err(ptr nocapture readnone %__data, ptr noundef %r_xprt, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_nomrs_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, ptr noundef %req) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_chunk_read(ptr nocapture readnone %__data, ptr noundef %task, i32 noundef %pos, ptr noundef %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_chunk_read, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, i32 noundef %pos, ptr noundef %mr, i32 noundef %nsegs) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_chunk_write(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_chunk_write, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_chunk_reply(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_chunk_reply, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_chunk_wp(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_chunk_wp, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_marshal(ptr nocapture readnone %__data, ptr noundef %req, i32 noundef %rtype, i32 noundef %wtype) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_marshal, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %req, i32 noundef %rtype, i32 noundef %wtype) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_marshal_failed(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_marshal_failed, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %ret) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_prepsend_failed(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_prepsend_failed, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %ret) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_post_send(ptr nocapture readnone %__data, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_post_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %req) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_post_send_err(ptr nocapture readnone %__data, ptr noundef %r_xprt, ptr noundef %req, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_post_send_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, ptr noundef %req, i32 noundef %rc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_post_recv(ptr nocapture readnone %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_post_recv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rep) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_post_recvs(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_post_recvs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %count) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_post_recvs_err(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_post_recvs_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_post_linv_err(ptr nocapture readnone %__data, ptr noundef %req, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_post_linv_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %req, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_wc_receive(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_wc_receive, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_wc_send(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_wc_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_wc_fastreg(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_wc_fastreg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_wc_li(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_wc_li, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_wc_li_wake(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_wc_li_wake, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_wc_li_done(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_wc_li_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_frwr_alloc(ptr nocapture readnone %__data, ptr noundef %mr, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_frwr_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr, i32 noundef %rc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_frwr_dereg(ptr nocapture readnone %__data, ptr noundef %mr, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_frwr_dereg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr, i32 noundef %rc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_frwr_sgerr(ptr nocapture readnone %__data, ptr noundef %mr, i32 noundef %sg_nents) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_frwr_sgerr, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr, i32 noundef %sg_nents) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_frwr_maperr(ptr nocapture readnone %__data, ptr noundef %mr, i32 noundef %num_mapped) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_frwr_maperr, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr, i32 noundef %num_mapped) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_mr_fastreg(ptr nocapture readnone %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_mr_fastreg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_mr_localinv(ptr nocapture readnone %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_mr_localinv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_mr_reminv(ptr nocapture readnone %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_mr_reminv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_mr_map(ptr nocapture readnone %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_mr_map, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_mr_unmap(ptr nocapture readnone %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_mr_unmap, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mr) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_dma_maperr(ptr nocapture readnone %__data, i64 noundef %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_dma_maperr, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i64 noundef %addr) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_reply(ptr nocapture readnone %__data, ptr noundef %task, ptr noundef %rep, i32 noundef %credits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_reply, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task, ptr noundef %rep, i32 noundef %credits) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_reply_vers_err(ptr nocapture readnone %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_reply_vers_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rep) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_reply_rqst_err(ptr nocapture readnone %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_reply_rqst_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rep) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_reply_short_err(ptr nocapture readnone %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_reply_short_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rep) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_reply_hdr_err(ptr nocapture readnone %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_reply_hdr_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rep) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_err_vers(ptr nocapture readnone %__data, ptr noundef %rqst, ptr noundef %min, ptr noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_err_vers, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, ptr noundef %min, ptr noundef %max) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_err_chunk(ptr nocapture readnone %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_err_chunk, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_err_unrecognized(ptr nocapture readnone %__data, ptr noundef %rqst, ptr noundef %procedure) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_err_unrecognized, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, ptr noundef %procedure) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_fixup(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %fixup) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_fixup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %fixup) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_decode_seg(ptr nocapture readnone %__data, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_decode_seg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_mrs_zap(ptr nocapture readnone %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_mrs_zap, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %task) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_cb_setup(ptr nocapture readnone %__data, ptr noundef %r_xprt, i32 noundef %reqs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_cb_setup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, i32 noundef %reqs) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_cb_call(ptr nocapture readnone %__data, ptr noundef %r_xprt, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_cb_call, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, ptr noundef %rqst) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xprtrdma_cb_reply(ptr nocapture readnone %__data, ptr noundef %r_xprt, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xprtrdma_cb_reply, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %r_xprt, ptr noundef %rqst) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_pd_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_pd_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_qp_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_qp_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_fabric_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_fabric_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_initdepth_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_initdepth_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_accept_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_accept_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_rqst(ptr nocapture readnone %__data, ptr noundef %ctxt, ptr noundef %p, i32 noundef %hdrlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_rqst, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, ptr noundef %p, i32 noundef %hdrlen) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_short_err(ptr nocapture readnone %__data, ptr noundef %ctxt, i32 noundef %hdrlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_short_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, i32 noundef %hdrlen) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_badvers_err(ptr nocapture readnone %__data, ptr noundef %ctxt, ptr noundef %p) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_badvers_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, ptr noundef %p) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_drop_err(ptr nocapture readnone %__data, ptr noundef %ctxt, ptr noundef %p) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_drop_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, ptr noundef %p) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_badproc_err(ptr nocapture readnone %__data, ptr noundef %ctxt, ptr noundef %p) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_badproc_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, ptr noundef %p) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_parse_err(ptr nocapture readnone %__data, ptr noundef %ctxt, ptr noundef %p) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_parse_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, ptr noundef %p) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_encode_wseg(ptr nocapture readnone %__data, ptr noundef %ctxt, i32 noundef %segno, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_encode_wseg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, i32 noundef %segno, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_rseg(ptr nocapture readnone %__data, ptr noundef %cid, ptr noundef %chunk, ptr noundef %segment) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_rseg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cid, ptr noundef %chunk, ptr noundef %segment) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_decode_wseg(ptr nocapture readnone %__data, ptr noundef %cid, ptr noundef %chunk, i32 noundef %segno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_decode_wseg, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cid, ptr noundef %chunk, i32 noundef %segno) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_err_vers(ptr nocapture readnone %__data, i32 noundef %xid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_err_vers, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %xid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_err_chunk(ptr nocapture readnone %__data, i32 noundef %xid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_err_chunk, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %xid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_dma_map_page(ptr nocapture readnone %__data, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_dma_map_page, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_dma_map_err(ptr nocapture readnone %__data, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_dma_map_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_dma_unmap_page(ptr nocapture readnone %__data, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_dma_unmap_page, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_dma_map_rw_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %nents, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_dma_map_rw_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %nents, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_no_rwctx_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %num_sges) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_no_rwctx_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %num_sges) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_page_overrun_err(ptr nocapture readnone %__data, ptr noundef %rdma, ptr noundef %rqst, i32 noundef %pageno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_page_overrun_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, ptr noundef %rqst, i32 noundef %pageno) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_small_wrch_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %remaining, i32 noundef %seg_no, i32 noundef %num_segs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_small_wrch_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %remaining, i32 noundef %seg_no, i32 noundef %num_segs) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_send_pullup(ptr nocapture readnone %__data, ptr noundef %ctxt, i32 noundef %msglen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_send_pullup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt, i32 noundef %msglen) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_send_err(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_send_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_post_send(ptr nocapture readnone %__data, ptr noundef %ctxt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_post_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_send(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_send_flush(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_send_flush, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_send_err(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_send_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_post_recv(ptr nocapture readnone %__data, ptr noundef %ctxt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_post_recv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ctxt) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_recv(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_recv, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_recv_flush(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_recv_flush, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_recv_err(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_recv_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_rq_post_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_rq_post_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_post_read_chunk(ptr nocapture readnone %__data, ptr noundef %cid, i32 noundef %sqecount) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_post_read_chunk, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cid, i32 noundef %sqecount) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_post_write_chunk(ptr nocapture readnone %__data, ptr noundef %cid, i32 noundef %sqecount) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_post_write_chunk, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cid, i32 noundef %sqecount) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_post_reply_chunk(ptr nocapture readnone %__data, ptr noundef %cid, i32 noundef %sqecount) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_post_reply_chunk, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cid, i32 noundef %sqecount) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_read(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid, i32 noundef %totalbytes, i64 noundef %posttime) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_read, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid, i32 noundef %totalbytes, i64 noundef %posttime) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_read_flush(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_read_flush, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_read_err(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_read_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_write(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_write, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_write_flush(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_write_flush, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_wc_write_err(ptr nocapture readnone %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_wc_write_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wc, ptr noundef %cid) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_qp_error(ptr nocapture readnone %__data, ptr noundef %event, ptr noundef %sap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_qp_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %event, ptr noundef %sap) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_sq_full(ptr nocapture readnone %__data, ptr noundef %rdma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_sq_full, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_sq_retry(ptr nocapture readnone %__data, ptr noundef %rdma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_sq_retry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_svcrdma_sq_post_err(ptr nocapture readnone %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_svcrdma_sq_post_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rdma, i32 noundef %status) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_completion_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %status, align 8
  %status6 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %status6, align 4
  %12 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool8.not = icmp eq i32 %12, 0
  br i1 %tobool8.not, label %if.end5.if.end12_crit_edge, label %if.then9

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end12

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %13 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vendor_err, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.end5.if.end12_crit_edge
  %.sink = phi i32 [ %14, %if.then9 ], [ 0, %if.end5.if.end12_crit_edge ]
  %15 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %.sink, ptr %15, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_completion_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %33 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %status, align 8
  %status17 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %status17, align 4
  %36 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool19.not = icmp eq i32 %36, 0
  br i1 %tobool19.not, label %if.end16.if.end23_crit_edge, label %if.then20

if.end16.if.end23_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end23

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %37 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %vendor_err, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end16.if.end23_crit_edge
  %.sink = phi i32 [ %38, %if.then20 ], [ 0, %if.end16.if.end23_crit_edge ]
  %39 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %.sink, ptr %39, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_send_completion_class(ptr noundef %__data, ptr nocapture noundef readnone %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_completion_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_completion_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_send_completion_class(ptr noundef %__data, ptr nocapture noundef readnone %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_completion_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_completion_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_send_flush_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %status, align 8
  %status6 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %status6, align 4
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %12 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %vendor_err, align 8
  %vendor_err7 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %vendor_err7 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %vendor_err7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_send_flush_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %33 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %status, align 8
  %status17 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %status17, align 4
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %36 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %vendor_err, align 8
  %vendor_err18 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %vendor_err18 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %vendor_err18, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_mr_completion_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %status, align 8
  %status6 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %status6, align 4
  %12 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool8.not = icmp eq i32 %12, 0
  br i1 %tobool8.not, label %if.end5.if.end12_crit_edge, label %if.then9

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end12

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %13 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vendor_err, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.end5.if.end12_crit_edge
  %.sink = phi i32 [ %14, %if.then9 ], [ 0, %if.end5.if.end12_crit_edge ]
  %15 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %.sink, ptr %15, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_mr_completion_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %33 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %status, align 8
  %status17 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %status17, align 4
  %36 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool19.not = icmp eq i32 %36, 0
  br i1 %tobool19.not, label %if.end16.if.end23_crit_edge, label %if.then20

if.end16.if.end23_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end23

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %37 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %vendor_err, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end16.if.end23_crit_edge
  %.sink = phi i32 [ %38, %if.then20 ], [ 0, %if.end16.if.end23_crit_edge ]
  %39 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %.sink, ptr %39, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_receive_completion_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %status, align 8
  %status6 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %status6, align 4
  %12 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool8.not = icmp eq i32 %12, 0
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %received = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %received to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %received, align 4
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %14 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vendor_err, align 8
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %byte_len = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 4
  %16 = ptrtoint ptr %byte_len to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %byte_len, align 4
  %received11 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %received11 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %received11, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then9
  %.sink = phi i32 [ 0, %if.else ], [ %15, %if.then9 ]
  %19 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %.sink, ptr %19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_receive_completion_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %33 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %status, align 8
  %status17 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %status17, align 4
  %36 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool19.not = icmp eq i32 %36, 0
  br i1 %tobool19.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %received = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %received to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %received, align 4
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %38 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vendor_err, align 8
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %byte_len = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 4
  %40 = ptrtoint ptr %byte_len to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %byte_len, align 4
  %received22 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %received22 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %received22, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then20
  %.sink = phi i32 [ 0, %if.else ], [ %39, %if.then20 ]
  %43 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %.sink, ptr %43, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_receive_success_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %byte_len = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 4
  %9 = ptrtoint ptr %byte_len to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %byte_len, align 4
  %received = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %received to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %received, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_receive_success_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %byte_len = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 4
  %33 = ptrtoint ptr %byte_len to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %byte_len, align 4
  %received = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %received to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %received, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rpcrdma_receive_flush_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %9 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %status, align 8
  %status6 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %status6, align 4
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %12 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %vendor_err, align 8
  %vendor_err7 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %vendor_err7 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %vendor_err7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rpcrdma_receive_flush_class(ptr noundef %__data, ptr nocapture noundef readonly %wc, ptr nocapture noundef readonly %cid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 1
  %33 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %status, align 8
  %status17 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %status17, align 4
  %vendor_err = getelementptr inbounds %struct.ib_wc, ptr %wc, i32 0, i32 3
  %36 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %vendor_err, align 8
  %vendor_err18 = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %vendor_err18 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %vendor_err18, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_reply_class(ptr noundef %__data, ptr nocapture noundef readonly %rep) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rr_rxprt.i = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 9
  %3 = ptrtoint ptr %rr_rxprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rr_rxprt.i, align 8
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %4, i32 0, i32 51
  %5 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i46 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i46, ptr @.str.101, ptr %6
  %call4.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %4, i32 0, i32 51, i32 1
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool10.not.i = icmp eq ptr %8, null
  %cond16.i = select i1 %tobool10.not.i, ptr @.str.101, ptr %8
  %call17.i = tail call i32 @strlen(ptr noundef nonnull %cond16.i) #13
  %add18.i = add i32 %call17.i, 1
  %add24.i = add i32 %call4.i, 29
  %add = add i32 %add24.i, %add18.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl21.i = shl i32 %add18.i, 16
  %or23.i = or i32 %shl21.i, %add24.i
  %add.i = shl i32 %call4.i, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or23.i, ptr %__data_loc_port, align 4
  %rr_xid = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 2
  %11 = ptrtoint ptr %rr_xid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rr_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call3, i32 0, i32 1
  %13 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %xid, align 4
  %rr_vers = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 3
  %14 = ptrtoint ptr %rr_vers to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rr_vers, align 8
  %version = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %version, align 4
  %rr_proc = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 4
  %17 = ptrtoint ptr %rr_proc to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rr_proc, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %proc, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %20 = ptrtoint ptr %rr_rxprt.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rr_rxprt.i, align 8
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %21, i32 0, i32 51
  %22 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %address_strings.i, align 8
  %tobool8.not = icmp eq ptr %23, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %23
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add24.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %24 = ptrtoint ptr %rr_rxprt.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rr_rxprt.i, align 8
  %arrayidx.i = getelementptr %struct.rpc_xprt, ptr %25, i32 0, i32 51, i32 1
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i, align 4
  %tobool17.not = icmp eq ptr %27, null
  %cond23 = select i1 %tobool17.not, ptr @.str.101, ptr %27
  %call24 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond23) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_reply_class(ptr noundef %__data, ptr nocapture noundef readonly %rep) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %rr_rxprt.i = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 9
  %2 = ptrtoint ptr %rr_rxprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rr_rxprt.i, align 8
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %3, i32 0, i32 51
  %4 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %5
  %call4.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call4.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 28
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %3, i32 0, i32 51, i32 1
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool10.not.i = icmp eq ptr %7, null
  %cond16.i = select i1 %tobool10.not.i, ptr @.str.101, ptr %7
  %call17.i = tail call i32 @strlen(ptr noundef nonnull %cond16.i) #13
  %add18.i = add i32 %call17.i, 1
  %add20.i = add i32 %call4.i, 29
  %shl21.i = shl i32 %add18.i, 16
  %or23.i = or i32 %shl21.i, %add20.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %8 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %perf_events, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %18 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %17, align 4
  %tobool.not.i70.not = icmp eq ptr %21, null
  br i1 %tobool.not.i70.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add24.i = add i32 %call4.i, 40
  %add12 = add i32 %add24.i, %add18.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %22 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %__regs, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #10
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx.i, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %28 = ptrtoint ptr %27 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  %29 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx2.i, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call13, i32 0, i32 5
  %34 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or23.i, ptr %__data_loc_port, align 4
  %rr_xid = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 2
  %35 = ptrtoint ptr %rr_xid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rr_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call13, i32 0, i32 1
  %37 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %xid, align 4
  %rr_vers = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 3
  %38 = ptrtoint ptr %rr_vers to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rr_vers, align 8
  %version = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %version, align 4
  %rr_proc = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 4
  %41 = ptrtoint ptr %rr_proc to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rr_proc, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %proc, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %44 = ptrtoint ptr %rr_rxprt.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %rr_rxprt.i, align 8
  %address_strings.i = getelementptr inbounds %struct.rpc_xprt, ptr %45, i32 0, i32 51
  %46 = ptrtoint ptr %address_strings.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %address_strings.i, align 8
  %tobool20.not = icmp eq ptr %47, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %47
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add20.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %48 = ptrtoint ptr %rr_rxprt.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rr_rxprt.i, align 8
  %arrayidx.i72 = getelementptr %struct.rpc_xprt, ptr %49, i32 0, i32 51, i32 1
  %50 = ptrtoint ptr %arrayidx.i72 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx.i72, align 4
  %tobool29.not = icmp eq ptr %51, null
  %cond35 = select i1 %tobool29.not, ptr @.str.101, ptr %51
  %call36 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond35) #14
  %52 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rctx, align 4
  %54 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %53, ptr noundef %__data, i64 noundef 1, ptr noundef %55, ptr noundef %17, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_rxprt(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i37 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i37, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 17
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rxprt, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rxprt, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %9 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %address_strings.i.i, align 8
  %tobool8.not = icmp eq ptr %10, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %10
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and12 = and i32 %add21.i, 65535
  %add.ptr13 = getelementptr i8, ptr %call3, i32 %and12
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool15.not = icmp eq ptr %12, null
  %cond20 = select i1 %tobool15.not, ptr @.str.101, ptr %12
  %call21 = call ptr @strcpy(ptr noundef %add.ptr13, ptr noundef nonnull %cond20) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_rxprt(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 16
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 17
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i61.not = icmp eq ptr %19, null
  br i1 %tobool.not.i61.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 28
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rxprt, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rxprt, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %33 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %address_strings.i.i, align 8
  %tobool20.not = icmp eq ptr %34, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %34
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and24 = and i32 %add17.i, 65535
  %add.ptr25 = getelementptr i8, ptr %call13, i32 %and24
  %35 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool27.not = icmp eq ptr %36, null
  %cond32 = select i1 %tobool27.not, ptr @.str.101, ptr %36
  %call33 = call ptr @strcpy(ptr noundef %add.ptr25, ptr noundef nonnull %cond32) #14
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_connect_class(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %rc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i42 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i42, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 25
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rc6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %rc6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %rc, ptr %rc6, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %10 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rx_ep, align 8
  %re_connect_status = getelementptr inbounds %struct.rpcrdma_ep, ptr %11, i32 0, i32 13
  %12 = ptrtoint ptr %re_connect_status to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %re_connect_status, align 4
  %connect_status = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %connect_status to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %connect_status, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %15 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %16, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %16
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %17 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %18, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %18
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_connect_class(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %rc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 25
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i66.not = icmp eq ptr %19, null
  br i1 %tobool.not.i66.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 36
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rc17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %rc17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %rc, ptr %rc17, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %34 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rx_ep, align 8
  %re_connect_status = getelementptr inbounds %struct.rpcrdma_ep, ptr %35, i32 0, i32 13
  %36 = ptrtoint ptr %re_connect_status to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %re_connect_status, align 4
  %connect_status = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %connect_status to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %connect_status, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %39 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %40, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %40
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %41 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %42, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %42
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_rdch_event(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %pos, ptr nocapture noundef readonly %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  %pos6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %pos6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %pos, ptr %pos6, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %12 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %15 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %18 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %21 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 7
  %23 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %offset, align 8
  %nsegs7 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call3, i32 0, i32 8
  %24 = ptrtoint ptr %nsegs7 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %nsegs, ptr %nsegs7, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_rdch_event(ptr noundef %__data, ptr nocapture noundef readonly %task, i32 noundef %pos, ptr nocapture noundef readonly %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %pos17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %pos17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %pos, ptr %pos17, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %36 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %39 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %42 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %45 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 7
  %47 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %offset, align 8
  %nsegs18 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %call13, i32 0, i32 8
  %48 = ptrtoint ptr %nsegs18 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %nsegs, ptr %nsegs18, align 8
  %49 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rctx, align 4
  %51 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %50, ptr noundef %__data, i64 noundef 1, ptr noundef %52, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_wrch_event(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %11 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %nents, align 8
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %14 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %handle, align 4
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %17 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %length, align 8
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %20 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 6
  %22 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %offset, align 8
  %nsegs6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call3, i32 0, i32 7
  %23 = ptrtoint ptr %nsegs6 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %nsegs, ptr %nsegs6, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_wrch_event(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %35 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %nents, align 8
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %38 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %handle, align 4
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %41 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %length, align 8
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %44 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 6
  %46 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %offset, align 8
  %nsegs17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %call13, i32 0, i32 7
  %47 = ptrtoint ptr %nsegs17 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %nsegs, ptr %nsegs17, align 8
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_mr_class(ptr noundef %__data, ptr nocapture noundef readonly %mr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %mr_req = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 1
  %3 = ptrtoint ptr %mr_req to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mr_req, align 8
  %tobool6.not = icmp eq ptr %4, null
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %4, i32 0, i32 1, i32 3
  %5 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 22
  %7 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %8 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %conv, ptr %task_id, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %6, i32 0, i32 13
  %10 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cl_clid, align 4
  br label %if.end10

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %task_id8 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 1
  %14 = ptrtoint ptr %task_id8 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %task_id8, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %.sink = phi i32 [ -1, %if.else ], [ %13, %if.then7 ]
  %15 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %.sink, ptr %15, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %17 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %18, i32 0, i32 12, i32 8
  %19 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 3
  %21 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %mr_id, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %22 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 4
  %24 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %25 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 5
  %27 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %28 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 6
  %30 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %31 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 7
  %33 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %offset, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %34 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call3, i32 0, i32 8
  %36 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %dir, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_mr_class(ptr noundef %__data, ptr nocapture noundef readonly %mr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %mr_req = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 1
  %27 = ptrtoint ptr %mr_req to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mr_req, align 8
  %tobool17.not = icmp eq ptr %28, null
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %28, i32 0, i32 1, i32 3
  %29 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %30, i32 0, i32 22
  %31 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %32 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %conv, ptr %task_id, align 8
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %30, i32 0, i32 13
  %34 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cl_clid, align 4
  br label %if.end21

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %task_id19 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 1
  %38 = ptrtoint ptr %task_id19 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %task_id19, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %.sink = phi i32 [ -1, %if.else ], [ %37, %if.then18 ]
  %39 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %.sink, ptr %39, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %41 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %42, i32 0, i32 12, i32 8
  %43 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 3
  %45 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %mr_id, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %46 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 4
  %48 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %49 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 5
  %51 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %52 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 6
  %54 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %55 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 7
  %57 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %56, ptr %offset, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %58 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %call13, i32 0, i32 8
  %60 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %dir, align 8
  %61 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %rctx, align 4
  %63 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %62, ptr noundef %__data, i64 noundef 1, ptr noundef %64, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_anonymous_mr_class(ptr noundef %__data, ptr nocapture noundef readonly %mr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %3 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %4, i32 0, i32 12, i32 8
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %mr_id, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %8 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %11 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %14 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %17 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %offset, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %20 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call3, i32 0, i32 6
  %22 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %dir, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_anonymous_mr_class(ptr noundef %__data, ptr nocapture noundef readonly %mr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %27 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %28, i32 0, i32 12, i32 8
  %29 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %mr_id, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %32 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %35 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %38 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %41 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %offset, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %44 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %call13, i32 0, i32 6
  %46 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %dir, align 8
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_callback_class(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i39 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i39, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 21
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %9 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %12 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %address_strings.i.i, align 8
  %tobool8.not = icmp eq ptr %13, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %13
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and12 = and i32 %add21.i, 65535
  %add.ptr13 = getelementptr i8, ptr %call3, i32 %and12
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool15.not = icmp eq ptr %15, null
  %cond20 = select i1 %tobool15.not, ptr @.str.101, ptr %15
  %call21 = call ptr @strcpy(ptr noundef %add.ptr13, ptr noundef nonnull %cond20) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_callback_class(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 21
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i63.not = icmp eq ptr %19, null
  br i1 %tobool.not.i63.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 32
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %33 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %36 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %address_strings.i.i, align 8
  %tobool20.not = icmp eq ptr %37, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %37
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and24 = and i32 %add17.i, 65535
  %add.ptr25 = getelementptr i8, ptr %call13, i32 %and24
  %38 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool27.not = icmp eq ptr %39, null
  %cond32 = select i1 %tobool27.not, ptr @.str.101, ptr %39
  %call33 = call ptr @strcpy(ptr noundef %add.ptr25, ptr noundef nonnull %cond32) #14
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_inline_thresh(ptr noundef %__data, ptr nocapture noundef readonly %ep) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %re_id = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 1
  %3 = ptrtoint ptr %re_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %re_id, align 4
  %re_inline_send = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 23
  %5 = ptrtoint ptr %re_inline_send to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %re_inline_send, align 4
  %inline_send = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %inline_send to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %inline_send, align 4
  %re_inline_recv = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 24
  %8 = ptrtoint ptr %re_inline_recv to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %re_inline_recv, align 4
  %inline_recv = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %inline_recv to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %inline_recv, align 4
  %re_max_inline_send = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 10
  %11 = ptrtoint ptr %re_max_inline_send to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %re_max_inline_send, align 4
  %max_send = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %max_send to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %max_send, align 4
  %re_max_inline_recv = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 11
  %14 = ptrtoint ptr %re_max_inline_recv to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %re_max_inline_recv, align 4
  %max_recv = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %max_recv to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %max_recv, align 4
  %srcaddr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call3, i32 0, i32 5
  %route = getelementptr inbounds %struct.rdma_cm_id, ptr %4, i32 0, i32 4
  %17 = call ptr @memcpy(ptr %srcaddr, ptr %route, i32 28)
  %dstaddr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call3, i32 0, i32 6
  %dst_addr = getelementptr inbounds %struct.rdma_cm_id, ptr %4, i32 0, i32 4, i32 0, i32 1
  %18 = call ptr @memcpy(ptr %dstaddr, ptr %dst_addr, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_inline_thresh(ptr noundef %__data, ptr nocapture noundef readonly %ep) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %re_id = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 1
  %27 = ptrtoint ptr %re_id to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %re_id, align 4
  %re_inline_send = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 23
  %29 = ptrtoint ptr %re_inline_send to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %re_inline_send, align 4
  %inline_send = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %inline_send to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %inline_send, align 4
  %re_inline_recv = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 24
  %32 = ptrtoint ptr %re_inline_recv to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %re_inline_recv, align 4
  %inline_recv = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %inline_recv to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %inline_recv, align 4
  %re_max_inline_send = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 10
  %35 = ptrtoint ptr %re_max_inline_send to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %re_max_inline_send, align 4
  %max_send = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %max_send to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %max_send, align 4
  %re_max_inline_recv = getelementptr inbounds %struct.rpcrdma_ep, ptr %ep, i32 0, i32 11
  %38 = ptrtoint ptr %re_max_inline_recv to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %re_max_inline_recv, align 4
  %max_recv = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %max_recv to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %max_recv, align 4
  %srcaddr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call13, i32 0, i32 5
  %route = getelementptr inbounds %struct.rdma_cm_id, ptr %28, i32 0, i32 4
  %41 = call ptr @memcpy(ptr %srcaddr, ptr %route, i32 28)
  %dstaddr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %call13, i32 0, i32 6
  %dst_addr = getelementptr inbounds %struct.rdma_cm_id, ptr %28, i32 0, i32 4, i32 0, i32 1
  %42 = call ptr @memcpy(ptr %dstaddr, ptr %dst_addr, i32 28)
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_op_connect(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %delay) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i40 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i40, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 21
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %delay6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %delay6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %delay, ptr %delay6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %10 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %11, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %11
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %13, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %13
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_op_connect(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %delay) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 21
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i64.not = icmp eq ptr %19, null
  br i1 %tobool.not.i64.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 32
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %delay17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %delay17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %delay, ptr %delay17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %34 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %35, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %35
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %36 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %37, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %37
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_op_set_cto(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %connect, i32 noundef %reconnect) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i43 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i43, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 25
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %connect6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %connect6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %connect, ptr %connect6, align 4
  %reconnect7 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %reconnect7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %reconnect, ptr %reconnect7, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %11 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %address_strings.i.i, align 8
  %tobool10.not = icmp eq ptr %12, null
  %spec.select = select i1 %tobool10.not, ptr @.str.101, ptr %12
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and14 = and i32 %add21.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool17.not = icmp eq ptr %14, null
  %cond22 = select i1 %tobool17.not, ptr @.str.101, ptr %14
  %call23 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond22) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_op_set_cto(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %connect, i32 noundef %reconnect) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 25
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i67.not = icmp eq ptr %19, null
  br i1 %tobool.not.i67.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 36
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %connect17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %connect17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %connect, ptr %connect17, align 4
  %reconnect18 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %reconnect18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %reconnect, ptr %reconnect18, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %35 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %address_strings.i.i, align 8
  %tobool22.not = icmp eq ptr %36, null
  %spec.select = select i1 %tobool22.not, ptr @.str.101, ptr %36
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and26 = and i32 %add17.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %37 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool29.not = icmp eq ptr %38, null
  %cond34 = select i1 %tobool29.not, ptr @.str.101, ptr %38
  %call35 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond34) #14
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_createmrs(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i40 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i40, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 21
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %count6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %count6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %count, ptr %count6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %10 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %11, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %11
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %13, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %13
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_createmrs(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 21
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i64.not = icmp eq ptr %19, null
  br i1 %tobool.not.i64.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 32
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %count17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %count17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %count, ptr %count17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %34 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %35, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %35
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %36 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %37, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %37
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_nomrs_err(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, ptr nocapture noundef readonly %req) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i42 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i42, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 25
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %10, i32 0, i32 22
  %11 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %12 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call3, i32 0, i32 1
  %13 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv, ptr %task_id, align 4
  %14 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %14, i32 0, i32 13
  %15 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call3, i32 0, i32 2
  %19 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %20 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %21, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %21
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %23, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %23
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_nomrs_err(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, ptr nocapture noundef readonly %req) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 25
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i66.not = icmp eq ptr %19, null
  br i1 %tobool.not.i66.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 36
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %33 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %34, i32 0, i32 22
  %35 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %36 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call13, i32 0, i32 1
  %37 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv, ptr %task_id, align 4
  %38 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %38, i32 0, i32 13
  %39 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %call13, i32 0, i32 2
  %43 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %client_id, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %44 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %45, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %45
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %46 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %47, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %47
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_marshal(ptr noundef %__data, ptr nocapture noundef readonly %req, i32 noundef %rtype, i32 noundef %wtype) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  %len = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 4, i32 8
  %17 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %len, align 8
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %hdrlen to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %hdrlen, align 4
  %iov_len = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %20 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %iov_len, align 4
  %headlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 5
  %22 = ptrtoint ptr %headlen to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %headlen, align 4
  %page_len = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 1, i32 5
  %23 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %page_len, align 4
  %pagelen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 6
  %25 = ptrtoint ptr %pagelen to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %pagelen, align 4
  %iov_len10 = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 1, i32 1, i32 0, i32 1
  %26 = ptrtoint ptr %iov_len10 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %iov_len10, align 4
  %taillen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 7
  %28 = ptrtoint ptr %taillen to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %taillen, align 4
  %rtype11 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 8
  %29 = ptrtoint ptr %rtype11 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %rtype, ptr %rtype11, align 4
  %wtype12 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call3, i32 0, i32 9
  %30 = ptrtoint ptr %wtype12 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %wtype, ptr %wtype12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_marshal(ptr noundef %__data, ptr nocapture noundef readonly %req, i32 noundef %rtype, i32 noundef %wtype) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %len = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 4, i32 8
  %41 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %len, align 8
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %hdrlen to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %hdrlen, align 4
  %iov_len = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %44 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %iov_len, align 4
  %headlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 5
  %46 = ptrtoint ptr %headlen to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %headlen, align 4
  %page_len = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 1, i32 5
  %47 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %page_len, align 4
  %pagelen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 6
  %49 = ptrtoint ptr %pagelen to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %pagelen, align 4
  %iov_len23 = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 1, i32 1, i32 0, i32 1
  %50 = ptrtoint ptr %iov_len23 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %iov_len23, align 4
  %taillen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 7
  %52 = ptrtoint ptr %taillen to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %taillen, align 4
  %rtype24 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 8
  %53 = ptrtoint ptr %rtype24 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %rtype, ptr %rtype24, align 4
  %wtype25 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %call13, i32 0, i32 9
  %54 = ptrtoint ptr %wtype25 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %wtype, ptr %wtype25, align 4
  %55 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %rctx, align 4
  %57 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %56, ptr noundef %__data, i64 noundef 1, ptr noundef %58, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_marshal_failed(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %ret) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  %ret7 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %ret7 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %ret, ptr %ret7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_marshal_failed(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %ret) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %ret18 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %ret18 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %ret, ptr %ret18, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_prepsend_failed(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %ret) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  %ret7 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %ret7 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %ret, ptr %ret7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_prepsend_failed(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %ret) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %ret18 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %ret18 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %ret, ptr %ret18, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_post_send(ptr noundef %__data, ptr nocapture noundef readonly %req) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %rl_sendctx = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 6
  %3 = ptrtoint ptr %rl_sendctx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rl_sendctx, align 8
  %sc_cid = getelementptr inbounds %struct.rpcrdma_sendctx, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpcrdma_sendctx, ptr %4, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %completion_id, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %12, i32 0, i32 22
  %13 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %14 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv, ptr %task_id, align 4
  %16 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %16, i32 0, i32 13
  %17 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tk_client, align 4
  %tobool8.not = icmp eq ptr %18, null
  br i1 %tobool8.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %20, %cond.true ], [ -1, %if.end5.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %cond, ptr %client_id, align 4
  %num_sge = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 5, i32 3
  %22 = ptrtoint ptr %num_sge to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_sge, align 4
  %num_sge11 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call3, i32 0, i32 5
  %24 = ptrtoint ptr %num_sge11 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %num_sge11, align 4
  %send_flags = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 5, i32 5
  %25 = ptrtoint ptr %send_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %send_flags, align 4
  %and = and i32 %26, 2
  %signaled = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call3, i32 0, i32 6
  %27 = ptrtoint ptr %signaled to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %and, ptr %signaled, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_post_send(ptr noundef %__data, ptr nocapture noundef readonly %req) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rl_sendctx = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 6
  %27 = ptrtoint ptr %rl_sendctx to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rl_sendctx, align 8
  %sc_cid = getelementptr inbounds %struct.rpcrdma_sendctx, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpcrdma_sendctx, ptr %28, i32 0, i32 1, i32 1
  %32 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %completion_id, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %35 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %36, i32 0, i32 22
  %37 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %38 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %conv, ptr %task_id, align 4
  %40 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %40, i32 0, i32 13
  %41 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tk_client, align 4
  %tobool19.not = icmp eq ptr %42, null
  br i1 %tobool19.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %cl_clid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %44, %cond.true ], [ -1, %if.end16.cond.end_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %cond, ptr %client_id, align 4
  %num_sge = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 5, i32 3
  %46 = ptrtoint ptr %num_sge to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %num_sge, align 4
  %num_sge22 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call13, i32 0, i32 5
  %48 = ptrtoint ptr %num_sge22 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %num_sge22, align 4
  %send_flags = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 5, i32 5
  %49 = ptrtoint ptr %send_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %send_flags, align 4
  %and24 = and i32 %50, 2
  %signaled = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %call13, i32 0, i32 6
  %51 = ptrtoint ptr %signaled to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %and24, ptr %signaled, align 4
  %52 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rctx, align 4
  %54 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %53, ptr noundef %__data, i64 noundef 1, ptr noundef %55, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_post_send_err(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, ptr nocapture noundef readonly %req, i32 noundef %rc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %3 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rx_ep, align 8
  %tobool6.not = icmp eq ptr %4, null
  br i1 %tobool6.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %recv_cq = getelementptr inbounds %struct.rpcrdma_ep, ptr %4, i32 0, i32 16, i32 3
  %5 = ptrtoint ptr %recv_cq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %recv_cq, align 4
  %id = getelementptr inbounds %struct.ib_cq, ptr %6, i32 0, i32 17, i32 8
  %7 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %id, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %8, %cond.true ], [ 0, %if.end5.cond.end_crit_edge ]
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %cond, ptr %cq_id, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %10 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %13 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv, ptr %task_id, align 4
  %15 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %15, i32 0, i32 13
  %16 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tk_client, align 4
  %tobool8.not = icmp eq ptr %17, null
  br i1 %tobool8.not, label %cond.end.cond.end13_crit_edge, label %cond.true9

cond.end.cond.end13_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end13

cond.true9:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cl_clid, align 4
  br label %cond.end13

cond.end13:                                       ; preds = %cond.true9, %cond.end.cond.end13_crit_edge
  %cond14 = phi i32 [ %19, %cond.true9 ], [ -1, %cond.end.cond.end13_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %cond14, ptr %client_id, align 4
  %rc15 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %rc15 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %rc, ptr %rc15, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_post_send_err(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, ptr nocapture noundef readonly %req, i32 noundef %rc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %27 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rx_ep, align 8
  %tobool17.not = icmp eq ptr %28, null
  br i1 %tobool17.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %recv_cq = getelementptr inbounds %struct.rpcrdma_ep, ptr %28, i32 0, i32 16, i32 3
  %29 = ptrtoint ptr %recv_cq to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %recv_cq, align 4
  %id = getelementptr inbounds %struct.ib_cq, ptr %30, i32 0, i32 17, i32 8
  %31 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %id, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %32, %cond.true ], [ 0, %if.end16.cond.end_crit_edge ]
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %cond, ptr %cq_id, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %34 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %35, i32 0, i32 22
  %36 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %37 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %conv, ptr %task_id, align 4
  %39 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %39, i32 0, i32 13
  %40 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %tk_client, align 4
  %tobool19.not = icmp eq ptr %41, null
  br i1 %tobool19.not, label %cond.end.cond.end24_crit_edge, label %cond.true20

cond.end.cond.end24_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end24

cond.true20:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cl_clid, align 4
  br label %cond.end24

cond.end24:                                       ; preds = %cond.true20, %cond.end.cond.end24_crit_edge
  %cond25 = phi i32 [ %43, %cond.true20 ], [ -1, %cond.end.cond.end24_crit_edge ]
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %cond25, ptr %client_id, align 4
  %rc26 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %rc26 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %rc, ptr %rc26, align 4
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_post_recv(ptr noundef %__data, ptr nocapture noundef readonly %rep) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rr_cid = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 1
  %3 = ptrtoint ptr %rr_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rr_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recv, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recv, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_post_recv(ptr noundef %__data, ptr nocapture noundef readonly %rep) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rr_cid = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 1
  %27 = ptrtoint ptr %rr_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rr_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recv, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recv, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_post_recvs(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i44 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i44, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 29
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call3, i32 0, i32 4
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call3, i32 0, i32 5
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %9 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rx_ep, align 8
  %recv_cq = getelementptr inbounds %struct.rpcrdma_ep, ptr %10, i32 0, i32 16, i32 3
  %11 = ptrtoint ptr %recv_cq to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %recv_cq, align 4
  %id = getelementptr inbounds %struct.ib_cq, ptr %12, i32 0, i32 17, i32 8
  %13 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %id, align 8
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call3, i32 0, i32 1
  %15 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %cq_id, align 4
  %count6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %count6 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %count, ptr %count6, align 4
  %re_receive_count = getelementptr inbounds %struct.rpcrdma_ep, ptr %10, i32 0, i32 21
  %17 = ptrtoint ptr %re_receive_count to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %re_receive_count, align 4
  %posted = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %posted to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %posted, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %20 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %21, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %21
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %23, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %23
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_post_recvs(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 28
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 29
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i68.not = icmp eq ptr %19, null
  br i1 %tobool.not.i68.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 40
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call13, i32 0, i32 4
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call13, i32 0, i32 5
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %33 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rx_ep, align 8
  %recv_cq = getelementptr inbounds %struct.rpcrdma_ep, ptr %34, i32 0, i32 16, i32 3
  %35 = ptrtoint ptr %recv_cq to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %recv_cq, align 4
  %id = getelementptr inbounds %struct.ib_cq, ptr %36, i32 0, i32 17, i32 8
  %37 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %id, align 8
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call13, i32 0, i32 1
  %39 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %cq_id, align 4
  %count17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %count17 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %count, ptr %count17, align 4
  %re_receive_count = getelementptr inbounds %struct.rpcrdma_ep, ptr %34, i32 0, i32 21
  %41 = ptrtoint ptr %re_receive_count to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %re_receive_count, align 4
  %posted = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %posted to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %posted, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %44 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %45, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %45
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %46 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %47, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %47
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_post_recvs_err(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i42 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i42, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 25
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %9 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rx_ep, align 8
  %recv_cq = getelementptr inbounds %struct.rpcrdma_ep, ptr %10, i32 0, i32 16, i32 3
  %11 = ptrtoint ptr %recv_cq to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %recv_cq, align 4
  %id = getelementptr inbounds %struct.ib_cq, ptr %12, i32 0, i32 17, i32 8
  %13 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %id, align 8
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call3, i32 0, i32 1
  %15 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %cq_id, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %status, ptr %status6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %17 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %18, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %18
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %19 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %20, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %20
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_post_recvs_err(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 25
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i66.not = icmp eq ptr %19, null
  br i1 %tobool.not.i66.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 36
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %rx_ep = getelementptr inbounds %struct.rpcrdma_xprt, ptr %r_xprt, i32 0, i32 1
  %33 = ptrtoint ptr %rx_ep to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rx_ep, align 8
  %recv_cq = getelementptr inbounds %struct.rpcrdma_ep, ptr %34, i32 0, i32 16, i32 3
  %35 = ptrtoint ptr %recv_cq to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %recv_cq, align 4
  %id = getelementptr inbounds %struct.ib_cq, ptr %36, i32 0, i32 17, i32 8
  %37 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %id, align 8
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call13, i32 0, i32 1
  %39 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %cq_id, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %status, ptr %status17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %41 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %42, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %42
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %43 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %44, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %44
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_post_linv_err(ptr noundef %__data, ptr nocapture noundef readonly %req, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 13
  %8 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %client_id, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %status, ptr %status6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_post_linv_err(ptr noundef %__data, ptr nocapture noundef readonly %req, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpcrdma_req, ptr %req, i32 0, i32 1, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 13
  %32 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %client_id, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %status, ptr %status17, align 4
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_frwr_alloc(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %rc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %3 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %4, i32 0, i32 12, i32 8
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_alloc, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %mr_id, align 4
  %rc6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_alloc, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %rc6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %rc, ptr %rc6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_frwr_alloc(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %rc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %27 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %28, i32 0, i32 12, i32 8
  %29 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_alloc, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %mr_id, align 4
  %rc17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_alloc, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %rc17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %rc, ptr %rc17, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_frwr_dereg(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %rc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %3 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %4, i32 0, i32 12, i32 8
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %mr_id, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %8 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %11 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %14 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %17 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %offset, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %20 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 6
  %22 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %dir, align 8
  %rc6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call3, i32 0, i32 7
  %23 = ptrtoint ptr %rc6 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %rc, ptr %rc6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_frwr_dereg(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %rc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %27 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %28, i32 0, i32 12, i32 8
  %29 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %mr_id, align 8
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %32 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %nents, align 4
  %mr_handle = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 11
  %35 = ptrtoint ptr %mr_handle to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mr_handle, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %handle, align 8
  %mr_length = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 12
  %38 = ptrtoint ptr %mr_length to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %mr_length, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %length, align 4
  %mr_offset = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 13
  %41 = ptrtoint ptr %mr_offset to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %mr_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %offset, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %44 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 6
  %46 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %dir, align 8
  %rc17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %call13, i32 0, i32 7
  %47 = ptrtoint ptr %rc17 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %rc, ptr %rc17, align 4
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_frwr_sgerr(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %sg_nents) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %3 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %4, i32 0, i32 12, i32 8
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %mr_id, align 8
  %mr_sg = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 4
  %8 = ptrtoint ptr %mr_sg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mr_sg, align 4
  %dma_address = getelementptr inbounds %struct.scatterlist, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %dma_address to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dma_address, align 4
  %conv = zext i32 %11 to i64
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %addr to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %conv, ptr %addr, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %13 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %dir, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sg_nents, ptr %nents, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_frwr_sgerr(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %sg_nents) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %27 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %28, i32 0, i32 12, i32 8
  %29 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %mr_id, align 8
  %mr_sg = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 4
  %32 = ptrtoint ptr %mr_sg to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mr_sg, align 4
  %dma_address = getelementptr inbounds %struct.scatterlist, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %dma_address to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %dma_address, align 4
  %conv = zext i32 %35 to i64
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %addr to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %conv, ptr %addr, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %37 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %dir, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %sg_nents, ptr %nents, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_frwr_maperr(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %num_mapped) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %3 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %4, i32 0, i32 12, i32 8
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %mr_id, align 8
  %mr_sg = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 4
  %8 = ptrtoint ptr %mr_sg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mr_sg, align 4
  %dma_address = getelementptr inbounds %struct.scatterlist, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %dma_address to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dma_address, align 4
  %conv = zext i32 %11 to i64
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %addr to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %conv, ptr %addr, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %13 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %dir, align 8
  %num_mapped6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %num_mapped6 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %num_mapped, ptr %num_mapped6, align 4
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %17 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %nents, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_frwr_maperr(ptr noundef %__data, ptr nocapture noundef readonly %mr, i32 noundef %num_mapped) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %mr_ibmr = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 2
  %27 = ptrtoint ptr %mr_ibmr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mr_ibmr, align 4
  %id = getelementptr inbounds %struct.ib_mr, ptr %28, i32 0, i32 12, i32 8
  %29 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %mr_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %mr_id, align 8
  %mr_sg = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 4
  %32 = ptrtoint ptr %mr_sg to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mr_sg, align 4
  %dma_address = getelementptr inbounds %struct.scatterlist, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %dma_address to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %dma_address, align 4
  %conv = zext i32 %35 to i64
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %addr to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %conv, ptr %addr, align 8
  %mr_dir = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 6
  %37 = ptrtoint ptr %mr_dir to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %mr_dir, align 4
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %dir, align 8
  %num_mapped17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %num_mapped17 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %num_mapped, ptr %num_mapped17, align 4
  %mr_nents = getelementptr inbounds %struct.rpcrdma_mr, ptr %mr, i32 0, i32 5
  %41 = ptrtoint ptr %mr_nents to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %mr_nents, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %nents, align 8
  %44 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rctx, align 4
  %46 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %45, ptr noundef %__data, i64 noundef 1, ptr noundef %47, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_dma_maperr(ptr noundef %__data, i64 noundef %addr) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %addr6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_dma_maperr, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %addr6 to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %addr, ptr %addr6, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_dma_maperr(ptr noundef %__data, i64 noundef %addr) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %addr17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_dma_maperr, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %addr17 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %addr, ptr %addr17, align 8
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_reply(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %rep, i32 noundef %credits) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  %rr_xid = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 2
  %11 = ptrtoint ptr %rr_xid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rr_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %xid, align 4
  %credits6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %credits6 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %credits, ptr %credits6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_reply(ptr noundef %__data, ptr nocapture noundef readonly %task, ptr nocapture noundef readonly %rep, i32 noundef %credits) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %rr_xid = getelementptr inbounds %struct.rpcrdma_rep, ptr %rep, i32 0, i32 2
  %35 = ptrtoint ptr %rr_xid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rr_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %xid, align 4
  %credits17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %credits17 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %credits, ptr %credits17, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_err_vers(ptr noundef %__data, ptr nocapture noundef readonly %rqst, ptr nocapture noundef readonly %min, ptr nocapture noundef readonly %max) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  %17 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %min, align 4
  %min8 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %min8 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %min8, align 4
  %20 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max, align 4
  %max10 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call3, i32 0, i32 5
  %22 = ptrtoint ptr %max10 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %max10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_err_vers(ptr noundef %__data, ptr nocapture noundef readonly %rqst, ptr nocapture noundef readonly %min, ptr nocapture noundef readonly %max) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %41 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %min, align 4
  %min19 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %min19 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %min19, align 4
  %44 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %max, align 4
  %max21 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %call13, i32 0, i32 5
  %46 = ptrtoint ptr %max21 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %max21, align 4
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_err_chunk(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %14 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %xid, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_err_chunk(ptr noundef %__data, ptr nocapture noundef readonly %rqst) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %rq_xid = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 5
  %38 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %xid, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_err_unrecognized(ptr noundef %__data, ptr nocapture noundef readonly %rqst, ptr nocapture noundef readonly %procedure) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %14 = ptrtoint ptr %procedure to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %procedure, align 4
  %procedure8 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %procedure8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %procedure8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_err_unrecognized(ptr noundef %__data, ptr nocapture noundef readonly %rqst, ptr nocapture noundef readonly %procedure) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %38 = ptrtoint ptr %procedure to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %procedure, align 4
  %procedure19 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %procedure19 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %procedure19, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_fixup(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %fixup) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %3 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %4, i32 0, i32 22
  %5 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %6 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %task_id, align 4
  %8 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %client_id, align 4
  %fixup7 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %fixup7 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %fixup, ptr %fixup7, align 4
  %iov_len = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 2, i32 0, i32 0, i32 1
  %15 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %iov_len, align 4
  %headlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %headlen to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %headlen, align 4
  %page_len = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 2, i32 5
  %18 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %page_len, align 4
  %pagelen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %pagelen to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %pagelen, align 4
  %iov_len11 = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 2, i32 1, i32 0, i32 1
  %21 = ptrtoint ptr %iov_len11 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %iov_len11, align 4
  %taillen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call3, i32 0, i32 6
  %23 = ptrtoint ptr %taillen to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %taillen, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_fixup(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %fixup) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_task = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 3
  %27 = ptrtoint ptr %rq_task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_task, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %30 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %task_id, align 4
  %32 = load ptr, ptr %rq_task, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %32, i32 0, i32 13
  %33 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %client_id, align 4
  %fixup18 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %fixup18 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %fixup, ptr %fixup18, align 4
  %iov_len = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 2, i32 0, i32 0, i32 1
  %39 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %iov_len, align 4
  %headlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %headlen to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %headlen, align 4
  %page_len = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 2, i32 5
  %42 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %page_len, align 4
  %pagelen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %pagelen to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %pagelen, align 4
  %iov_len24 = getelementptr inbounds %struct.rpc_rqst, ptr %rqst, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = ptrtoint ptr %iov_len24 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %iov_len24, align 4
  %taillen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %call13, i32 0, i32 6
  %47 = ptrtoint ptr %taillen to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %taillen, align 4
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_decode_seg(ptr noundef %__data, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %handle6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %handle6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %handle, ptr %handle6, align 8
  %length7 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %length7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %length, ptr %length7, align 4
  %offset8 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %offset8 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %offset, ptr %offset8, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_decode_seg(ptr noundef %__data, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %handle17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %handle17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %handle, ptr %handle17, align 8
  %length18 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %length18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %length, ptr %length18, align 4
  %offset19 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %offset19 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %offset, ptr %offset19, align 8
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_mrs_zap(ptr noundef %__data, ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %3 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %4 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mrs_zap, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %6 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mrs_zap, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %client_id, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_mrs_zap(ptr noundef %__data, ptr nocapture noundef readonly %task) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tk_pid = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 22
  %27 = ptrtoint ptr %tk_pid to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %tk_pid, align 8
  %conv = zext i16 %28 to i32
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mrs_zap, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %task_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %task_id, align 4
  %tk_client = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 13
  %30 = ptrtoint ptr %tk_client to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tk_client, align 4
  %cl_clid = getelementptr inbounds %struct.rpc_clnt, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %cl_clid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_clid, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mrs_zap, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %client_id to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %client_id, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xprtrdma_cb_setup(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %reqs) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %3 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i40 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i40, ptr @.str.101, ptr %4
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %6
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add21.i = add i32 %call3.i, 21
  %add = add i32 %add21.i, %add15.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add21.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %reqs6 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %reqs6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %reqs, ptr %reqs6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %10 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %address_strings.i.i, align 8
  %tobool9.not = icmp eq ptr %11, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %11
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and13 = and i32 %add21.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool16.not = icmp eq ptr %13, null
  %cond21 = select i1 %tobool16.not, ptr @.str.101, ptr %13
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond21) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xprtrdma_cb_setup(ptr noundef %__data, ptr nocapture noundef readonly %r_xprt, i32 noundef %reqs) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %address_strings.i.i = getelementptr inbounds %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51
  %2 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %address_strings.i.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.101, ptr %3
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #13
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %arrayidx.i.i = getelementptr %struct.rpc_xprt, ptr %r_xprt, i32 0, i32 51, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  %cond13.i = select i1 %tobool8.not.i, ptr @.str.101, ptr %5
  %call14.i = tail call i32 @strlen(ptr noundef nonnull %cond13.i) #13
  %add15.i = add i32 %call14.i, 1
  %add17.i = add i32 %call3.i, 21
  %shl18.i = shl i32 %add15.i, 16
  %or20.i = or i32 %shl18.i, %add17.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i64.not = icmp eq ptr %19, null
  br i1 %tobool.not.i64.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add21.i = add i32 %call3.i, 32
  %add12 = add i32 %add21.i, %add15.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or20.i, ptr %__data_loc_port, align 4
  %reqs17 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %reqs17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %reqs, ptr %reqs17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %34 = ptrtoint ptr %address_strings.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %address_strings.i.i, align 8
  %tobool21.not = icmp eq ptr %35, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %35
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and25 = and i32 %add17.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %36 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool28.not = icmp eq ptr %37, null
  %cond33 = select i1 %tobool28.not, ptr @.str.101, ptr %37
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond33) #14
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_accept_class(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i25 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add = add i32 %call.i25, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %add.i = shl i32 %call.i25, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_accept_class, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_accept_class, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %status, ptr %status6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %tobool8.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_accept_class(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_accept_class, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_accept_class, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %status, ptr %status17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_decode_rqst(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, ptr nocapture noundef readonly %p, i32 noundef %hdrlen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %3 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %incdec.ptr = getelementptr i32, ptr %p, i32 1
  %9 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %p, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %incdec.ptr8 = getelementptr i32, ptr %p, i32 2
  %12 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %incdec.ptr, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %vers, align 4
  %incdec.ptr10 = getelementptr i32, ptr %p, i32 3
  %15 = ptrtoint ptr %incdec.ptr8 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %incdec.ptr8, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %credits to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %credits, align 4
  %18 = ptrtoint ptr %incdec.ptr10 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %incdec.ptr10, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %proc, align 4
  %hdrlen13 = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call3, i32 0, i32 7
  %21 = ptrtoint ptr %hdrlen13 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %hdrlen, ptr %hdrlen13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_decode_rqst(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, ptr nocapture noundef readonly %p, i32 noundef %hdrlen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %27 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %incdec.ptr = getelementptr i32, ptr %p, i32 1
  %33 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %p, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %incdec.ptr19 = getelementptr i32, ptr %p, i32 2
  %36 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %incdec.ptr, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %vers, align 4
  %incdec.ptr21 = getelementptr i32, ptr %p, i32 3
  %39 = ptrtoint ptr %incdec.ptr19 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %incdec.ptr19, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %credits to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %credits, align 4
  %42 = ptrtoint ptr %incdec.ptr21 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %incdec.ptr21, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %proc, align 4
  %hdrlen24 = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %call13, i32 0, i32 7
  %45 = ptrtoint ptr %hdrlen24 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %hdrlen, ptr %hdrlen24, align 4
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_decode_short_err(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, i32 noundef %hdrlen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %3 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %hdrlen7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %hdrlen7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %hdrlen, ptr %hdrlen7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_decode_short_err(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, i32 noundef %hdrlen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %27 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %hdrlen18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %hdrlen18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %hdrlen, ptr %hdrlen18, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_badreq_event(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, ptr nocapture noundef readonly %p) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %3 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %incdec.ptr = getelementptr i32, ptr %p, i32 1
  %9 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %p, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %incdec.ptr8 = getelementptr i32, ptr %p, i32 2
  %12 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %incdec.ptr, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %vers, align 4
  %incdec.ptr10 = getelementptr i32, ptr %p, i32 3
  %15 = ptrtoint ptr %incdec.ptr8 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %incdec.ptr8, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %credits to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %credits, align 4
  %18 = ptrtoint ptr %incdec.ptr10 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %incdec.ptr10, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %proc, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_badreq_event(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, ptr nocapture noundef readonly %p) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %27 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %incdec.ptr = getelementptr i32, ptr %p, i32 1
  %33 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %p, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %incdec.ptr19 = getelementptr i32, ptr %p, i32 2
  %36 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %incdec.ptr, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %vers, align 4
  %incdec.ptr21 = getelementptr i32, ptr %p, i32 3
  %39 = ptrtoint ptr %incdec.ptr19 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %incdec.ptr19, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %credits to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %credits, align 4
  %42 = ptrtoint ptr %incdec.ptr21 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %incdec.ptr21, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %proc, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_encode_wseg(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, i32 noundef %segno, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %sc_cid = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %segno7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %segno7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %segno, ptr %segno7, align 8
  %handle8 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %handle8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %handle, ptr %handle8, align 4
  %length9 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %length9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %length, ptr %length9, align 8
  %offset10 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %offset10 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %offset, ptr %offset10, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_encode_wseg(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, i32 noundef %segno, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sc_cid = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1
  %27 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %segno18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %segno18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %segno, ptr %segno18, align 8
  %handle19 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %handle19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %handle, ptr %handle19, align 4
  %length20 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %length20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %length, ptr %length20, align 8
  %offset21 = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %offset21 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %offset, ptr %offset21, align 8
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_decode_rseg(ptr noundef %__data, ptr nocapture noundef readonly %cid, ptr nocapture noundef readonly %chunk, ptr nocapture noundef readonly %segment) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %ch_segcount = getelementptr inbounds %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 4
  %9 = ptrtoint ptr %ch_segcount to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ch_segcount, align 4
  %segno = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %segno to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %segno, align 8
  %ch_position = getelementptr inbounds %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 1
  %12 = ptrtoint ptr %ch_position to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ch_position, align 8
  %position = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %position to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %position, align 4
  %15 = ptrtoint ptr %segment to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %segment, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %handle, align 8
  %rs_length = getelementptr inbounds %struct.svc_rdma_segment, ptr %segment, i32 0, i32 1
  %18 = ptrtoint ptr %rs_length to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rs_length, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %length, align 4
  %rs_offset = getelementptr inbounds %struct.svc_rdma_segment, ptr %segment, i32 0, i32 2
  %21 = ptrtoint ptr %rs_offset to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %rs_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call3, i32 0, i32 7
  %23 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %offset, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_decode_rseg(ptr noundef %__data, ptr nocapture noundef readonly %cid, ptr nocapture noundef readonly %chunk, ptr nocapture noundef readonly %segment) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %ch_segcount = getelementptr inbounds %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 4
  %33 = ptrtoint ptr %ch_segcount to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ch_segcount, align 4
  %segno = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %segno to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %segno, align 8
  %ch_position = getelementptr inbounds %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 1
  %36 = ptrtoint ptr %ch_position to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ch_position, align 8
  %position = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %position to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %position, align 4
  %39 = ptrtoint ptr %segment to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %segment, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %handle, align 8
  %rs_length = getelementptr inbounds %struct.svc_rdma_segment, ptr %segment, i32 0, i32 1
  %42 = ptrtoint ptr %rs_length to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rs_length, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %length, align 4
  %rs_offset = getelementptr inbounds %struct.svc_rdma_segment, ptr %segment, i32 0, i32 2
  %45 = ptrtoint ptr %rs_offset to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %rs_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %call13, i32 0, i32 7
  %47 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %offset, align 8
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_decode_wseg(ptr noundef %__data, ptr nocapture noundef readonly %cid, ptr nocapture noundef readonly %chunk, i32 noundef %segno) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %arrayidx = getelementptr %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 5, i32 %segno
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %segno6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %segno6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %segno, ptr %segno6, align 8
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %handle, align 4
  %rs_length = getelementptr %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 5, i32 %segno, i32 1
  %13 = ptrtoint ptr %rs_length to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rs_length, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %length, align 8
  %rs_offset = getelementptr %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 5, i32 %segno, i32 2
  %16 = ptrtoint ptr %rs_offset to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %rs_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call3, i32 0, i32 6
  %18 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %offset, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_decode_wseg(ptr noundef %__data, ptr nocapture noundef readonly %cid, ptr nocapture noundef readonly %chunk, i32 noundef %segno) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %arrayidx17 = getelementptr %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 5, i32 %segno
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %segno18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %segno18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %segno, ptr %segno18, align 8
  %34 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx17, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %handle to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %handle, align 4
  %rs_length = getelementptr %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 5, i32 %segno, i32 1
  %37 = ptrtoint ptr %rs_length to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rs_length, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %length, align 8
  %rs_offset = getelementptr %struct.svc_rdma_chunk, ptr %chunk, i32 0, i32 5, i32 %segno, i32 2
  %40 = ptrtoint ptr %rs_offset to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %rs_offset, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %call13, i32 0, i32 6
  %42 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %offset, align 8
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_error_event(ptr noundef %__data, i32 noundef %xid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %xid6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_error_event, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %xid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %xid, ptr %xid6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_error_event(ptr noundef %__data, i32 noundef %xid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %xid17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_error_event, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %xid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %xid, ptr %xid17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_dma_map_class(ptr noundef %__data, ptr noundef readonly %rdma, i64 noundef %dma_addr, i32 noundef %length) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc_cm_id.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %6, i32 0, i32 2
  %call.i48 = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add26.i = add i32 %call.i48, 33
  %add = add i32 %add26.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl23.i = shl i32 %add20.i, 16
  %add22.i = add i32 %call.i48, 29
  %or25.i = or i32 %shl23.i, %add22.i
  %add.i = shl i32 %call.i48, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or25.i, ptr %__data_loc_addr, align 8
  %dma_addr6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dma_addr6 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %dma_addr, ptr %dma_addr6, align 8
  %length7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %length7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %length, ptr %length7, align 8
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %11 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sc_cm_id.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %14, i32 0, i32 2
  %tobool10.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool10.not, ptr @.str.101, ptr %name
  %call15 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and17 = and i32 %add22.i, 65535
  %add.ptr18 = getelementptr i8, ptr %call3, i32 %and17
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond27 = select i1 %tobool20.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call28 = call ptr @strcpy(ptr noundef %add.ptr18, ptr noundef nonnull %cond27) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_dma_map_class(ptr noundef %__data, ptr noundef readonly %rdma, i64 noundef %dma_addr, i32 noundef %length) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %2 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sc_cm_id.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %5, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 28
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 29
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i.not = icmp eq ptr %19, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add26.i = add i32 %call.i, 44
  %add12 = add i32 %add26.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or25.i, ptr %__data_loc_addr, align 8
  %dma_addr17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dma_addr17 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %dma_addr, ptr %dma_addr17, align 8
  %length18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %length18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %length, ptr %length18, align 8
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %35 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sc_cm_id.i, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %38, i32 0, i32 2
  %tobool22.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool22.not, ptr @.str.101, ptr %name
  %call27 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and29 = and i32 %add22.i, 65535
  %add.ptr30 = getelementptr i8, ptr %call13, i32 %and29
  %tobool32.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond39 = select i1 %tobool32.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call40 = call ptr @strcpy(ptr noundef %add.ptr30, ptr noundef nonnull %cond39) #14
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_dma_map_rw_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %nents, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc_cm_id.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %6, i32 0, i32 2
  %call.i48 = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add26.i = add i32 %call.i48, 25
  %add = add i32 %add26.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add26.i
  %add.i = shl i32 %call.i48, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %status, ptr %status6, align 4
  %nents7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %nents7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %nents, ptr %nents7, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %11 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sc_cm_id.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %14, i32 0, i32 2
  %tobool10.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool10.not, ptr @.str.101, ptr %name
  %call15 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and17 = and i32 %add26.i, 65535
  %add.ptr18 = getelementptr i8, ptr %call3, i32 %and17
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond27 = select i1 %tobool20.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call28 = call ptr @strcpy(ptr noundef %add.ptr18, ptr noundef nonnull %cond27) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_dma_map_rw_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %nents, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %2 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sc_cm_id.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %5, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 25
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i.not = icmp eq ptr %19, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add26.i = add i32 %call.i, 36
  %add12 = add i32 %add26.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %status, ptr %status17, align 4
  %nents18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %nents18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %nents, ptr %nents18, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %35 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sc_cm_id.i, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %38, i32 0, i32 2
  %tobool22.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool22.not, ptr @.str.101, ptr %name
  %call27 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and29 = and i32 %add22.i, 65535
  %add.ptr30 = getelementptr i8, ptr %call13, i32 %and29
  %tobool32.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond39 = select i1 %tobool32.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call40 = call ptr @strcpy(ptr noundef %add.ptr30, ptr noundef nonnull %cond39) #14
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_no_rwctx_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %num_sges) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc_cm_id.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %6, i32 0, i32 2
  %call.i45 = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add26.i = add i32 %call.i45, 21
  %add = add i32 %add26.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add26.i
  %add.i = shl i32 %call.i45, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %num_sges6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %num_sges6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %num_sges, ptr %num_sges6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %10 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sc_cm_id.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %13, i32 0, i32 2
  %tobool9.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %name
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and16 = and i32 %add26.i, 65535
  %add.ptr17 = getelementptr i8, ptr %call3, i32 %and16
  %tobool19.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond26 = select i1 %tobool19.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call27 = call ptr @strcpy(ptr noundef %add.ptr17, ptr noundef nonnull %cond26) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_no_rwctx_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %num_sges) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %2 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sc_cm_id.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %5, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 21
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i.not = icmp eq ptr %19, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add26.i = add i32 %call.i, 32
  %add12 = add i32 %add26.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %num_sges17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %num_sges17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %num_sges, ptr %num_sges17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %34 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sc_cm_id.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %37, i32 0, i32 2
  %tobool21.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %name
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and28 = and i32 %add22.i, 65535
  %add.ptr29 = getelementptr i8, ptr %call13, i32 %and28
  %tobool31.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond38 = select i1 %tobool31.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call39 = call ptr @strcpy(ptr noundef %add.ptr29, ptr noundef nonnull %cond38) #14
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_page_overrun_err(ptr noundef %__data, ptr noundef readonly %rdma, ptr nocapture noundef readonly %rqst, i32 noundef %pageno) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc_cm_id.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %6, i32 0, i32 2
  %call.i47 = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add26.i = add i32 %call.i47, 25
  %add = add i32 %add26.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add26.i
  %add.i = shl i32 %call.i47, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %pageno6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %pageno6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %pageno, ptr %pageno6, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %10 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %13 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sc_cm_id.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %16, i32 0, i32 2
  %tobool9.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %name
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and16 = and i32 %add26.i, 65535
  %add.ptr17 = getelementptr i8, ptr %call3, i32 %and16
  %tobool19.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond26 = select i1 %tobool19.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call27 = call ptr @strcpy(ptr noundef %add.ptr17, ptr noundef nonnull %cond26) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_page_overrun_err(ptr noundef %__data, ptr noundef readonly %rdma, ptr nocapture noundef readonly %rqst, i32 noundef %pageno) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %2 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sc_cm_id.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %5, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 25
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i.not = icmp eq ptr %19, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add26.i = add i32 %call.i, 36
  %add12 = add i32 %add26.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %pageno17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %pageno17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %pageno, ptr %pageno17, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %34 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %37 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %sc_cm_id.i, align 4
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %38, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %40, i32 0, i32 2
  %tobool21.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %name
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and28 = and i32 %add22.i, 65535
  %add.ptr29 = getelementptr i8, ptr %call13, i32 %and28
  %tobool31.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond38 = select i1 %tobool31.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call39 = call ptr @strcpy(ptr noundef %add.ptr29, ptr noundef nonnull %cond38) #14
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_small_wrch_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %remaining, i32 noundef %seg_no, i32 noundef %num_segs) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc_cm_id.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %6, i32 0, i32 2
  %call.i51 = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add26.i = add i32 %call.i51, 29
  %add = add i32 %add26.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add26.i
  %add.i = shl i32 %call.i51, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call3, i32 0, i32 4
  %7 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call3, i32 0, i32 5
  %8 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %remaining6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %remaining6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %remaining, ptr %remaining6, align 4
  %seg_no7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %seg_no7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %seg_no, ptr %seg_no7, align 4
  %num_segs8 = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %num_segs8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %num_segs, ptr %num_segs8, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %12 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sc_cm_id.i, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %15, i32 0, i32 2
  %tobool11.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool11.not, ptr @.str.101, ptr %name
  %call16 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and18 = and i32 %add26.i, 65535
  %add.ptr19 = getelementptr i8, ptr %call3, i32 %and18
  %tobool21.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond28 = select i1 %tobool21.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call29 = call ptr @strcpy(ptr noundef %add.ptr19, ptr noundef nonnull %cond28) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_small_wrch_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %remaining, i32 noundef %seg_no, i32 noundef %num_segs) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %sc_cm_id.i = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 1
  %2 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sc_cm_id.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %5, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 28
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 29
  %shl23.i = shl i32 %add20.i, 16
  %or25.i = or i32 %shl23.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i.not = icmp eq ptr %19, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add26.i = add i32 %call.i, 40
  %add12 = add i32 %add26.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #10
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call13, i32 0, i32 4
  %31 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call13, i32 0, i32 5
  %32 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or25.i, ptr %__data_loc_addr, align 4
  %remaining17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %remaining17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %remaining, ptr %remaining17, align 4
  %seg_no18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %seg_no18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %seg_no, ptr %seg_no18, align 4
  %num_segs19 = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %num_segs19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %num_segs, ptr %num_segs19, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %36 = ptrtoint ptr %sc_cm_id.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sc_cm_id.i, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %39, i32 0, i32 2
  %tobool23.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool23.not, ptr @.str.101, ptr %name
  %call28 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %and30 = and i32 %add22.i, 65535
  %add.ptr31 = getelementptr i8, ptr %call13, i32 %and30
  %tobool33.not = icmp eq ptr %xpt_remotebuf.i, null
  %cond40 = select i1 %tobool33.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call41 = call ptr @strcpy(ptr noundef %add.ptr31, ptr noundef nonnull %cond40) #14
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %15, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_send_pullup(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, i32 noundef %msglen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %sc_cid = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %len = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 5, i32 8
  %9 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len, align 4
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %hdrlen to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %hdrlen, align 4
  %msglen7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %msglen7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %msglen, ptr %msglen7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_send_pullup(ptr noundef %__data, ptr nocapture noundef readonly %ctxt, i32 noundef %msglen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sc_cid = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1
  %27 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %len = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 5, i32 8
  %33 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %len, align 4
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %hdrlen to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %hdrlen, align 4
  %msglen18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %msglen18 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %msglen, ptr %msglen18, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_send_err(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 17
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add = add i32 %call.i27, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %status, ptr %status6, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %7 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %10 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %11, i32 0, i32 17
  %tobool8.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %xpt_remotebuf
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_send_err(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %rq_xprt.i = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 2
  %2 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %3, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #10
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %status, ptr %status17, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %31 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %xid, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %34 = ptrtoint ptr %rq_xprt.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rq_xprt.i, align 8
  %xpt_remotebuf = getelementptr inbounds %struct.svc_xprt, ptr %35, i32 0, i32 17
  %tobool20.not = icmp eq ptr %xpt_remotebuf, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %xpt_remotebuf
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_post_send(ptr noundef %__data, ptr nocapture noundef readonly %ctxt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sc_cid = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1
  %3 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %num_sge = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 2, i32 3
  %9 = ptrtoint ptr %num_sge to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_sge, align 4
  %num_sge7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %num_sge7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %num_sge7, align 4
  %opcode = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 2, i32 4
  %12 = ptrtoint ptr %opcode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %opcode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %13)
  %cmp = icmp eq i32 %13, 9
  br i1 %cmp, label %cond.true, label %if.end5.cond.end_crit_edge

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %ex = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 2, i32 6
  %14 = ptrtoint ptr %ex to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ex, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %15, %cond.true ], [ 0, %if.end5.cond.end_crit_edge ]
  %inv_rkey = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %inv_rkey to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %cond, ptr %inv_rkey, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_post_send(ptr noundef %__data, ptr nocapture noundef readonly %ctxt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sc_cid = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1
  %27 = ptrtoint ptr %sc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %num_sge = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 2, i32 3
  %33 = ptrtoint ptr %num_sge to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %num_sge, align 4
  %num_sge18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %num_sge18 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %num_sge18, align 4
  %opcode = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 2, i32 4
  %36 = ptrtoint ptr %opcode to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %opcode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %37)
  %cmp = icmp eq i32 %37, 9
  br i1 %cmp, label %cond.true, label %if.end16.cond.end_crit_edge

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %ex = getelementptr inbounds %struct.svc_rdma_send_ctxt, ptr %ctxt, i32 0, i32 2, i32 6
  %38 = ptrtoint ptr %ex to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ex, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %39, %cond.true ], [ 0, %if.end16.cond.end_crit_edge ]
  %inv_rkey = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %inv_rkey to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %cond, ptr %inv_rkey, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_post_recv(ptr noundef %__data, ptr nocapture noundef readonly %ctxt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %3 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_recv, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_recv, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_post_recv(ptr noundef %__data, ptr nocapture noundef readonly %ctxt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rc_cid = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4
  %27 = ptrtoint ptr %rc_cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rc_cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_recv, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.svc_rdma_recv_ctxt, ptr %ctxt, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_recv, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_rq_post_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i25 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add = add i32 %call.i25, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %add.i = shl i32 %call.i25, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_rq_post_err, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %status6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_rq_post_err, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %status6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %status, ptr %status6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %tobool8.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_rq_post_err(ptr noundef %__data, ptr noundef readonly %rdma, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_rq_post_err, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_rq_post_err, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %status17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %status, ptr %status17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_post_chunk_class(ptr noundef %__data, ptr nocapture noundef readonly %cid, i32 noundef %sqecount) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %sqecount6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %sqecount6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sqecount, ptr %sqecount6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_post_chunk_class(ptr noundef %__data, ptr nocapture noundef readonly %cid, i32 noundef %sqecount) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 4
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %sqecount17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %sqecount17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %sqecount, ptr %sqecount17, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_wc_read(ptr noundef %__data, ptr nocapture noundef readnone %wc, ptr nocapture noundef readonly %cid, i32 noundef %totalbytes, i64 noundef %posttime) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %6 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %completion_id, align 4
  %totalbytes6 = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %totalbytes6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %totalbytes, ptr %totalbytes6, align 8
  %call7 = call i64 @ktime_get() #10
  %sub.i = sub i64 %call7, %posttime
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %cmp8.i.i.i = icmp slt i64 %sub.i, 0
  %10 = call i64 @llvm.abs.i64(i64 %sub.i, i1 false) #10
  %11 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %10, i32 0) #15, !srcloc !1604
  %asmresult.i.i.i.i = extractvalue { i64, i32 } %11, 0
  %asmresult4.i.i.i.i = extractvalue { i64, i32 } %11, 1
  %12 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %10, i64 %asmresult.i.i.i.i, i32 %asmresult4.i.i.i.i) #15, !srcloc !1605
  %asmresult10.i.i.i.i = extractvalue { i64, i32 } %12, 0
  %div1811.i.i.i = lshr i64 %asmresult10.i.i.i.i, 9
  %sub210.i.i.i = sub nsw i64 0, %div1811.i.i.i
  %cond213.i.i.i = select i1 %cmp8.i.i.i, i64 %sub210.i.i.i, i64 %div1811.i.i.i
  %read_latency = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %read_latency to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %cond213.i.i.i, ptr %read_latency, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_wc_read(ptr noundef %__data, ptr nocapture noundef readnone %wc, ptr nocapture noundef readonly %cid, i32 noundef %totalbytes, i64 noundef %posttime) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %cid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cid, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cq_id to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cq_id, align 8
  %ci_completion_id = getelementptr inbounds %struct.rpc_rdma_cid, ptr %cid, i32 0, i32 1
  %30 = ptrtoint ptr %ci_completion_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ci_completion_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %completion_id to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %completion_id, align 4
  %totalbytes17 = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %totalbytes17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %totalbytes, ptr %totalbytes17, align 8
  %call18 = call i64 @ktime_get() #10
  %sub.i = sub i64 %call18, %posttime
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %cmp8.i.i.i = icmp slt i64 %sub.i, 0
  %34 = call i64 @llvm.abs.i64(i64 %sub.i, i1 false) #10
  %35 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %34, i32 0) #15, !srcloc !1604
  %asmresult.i.i.i.i = extractvalue { i64, i32 } %35, 0
  %asmresult4.i.i.i.i = extractvalue { i64, i32 } %35, 1
  %36 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %34, i64 %asmresult.i.i.i.i, i32 %asmresult4.i.i.i.i) #15, !srcloc !1605
  %asmresult10.i.i.i.i = extractvalue { i64, i32 } %36, 0
  %div1811.i.i.i = lshr i64 %asmresult10.i.i.i.i, 9
  %sub210.i.i.i = sub nsw i64 0, %div1811.i.i.i
  %cond213.i.i.i = select i1 %cmp8.i.i.i, i64 %sub210.i.i.i, i64 %div1811.i.i.i
  %read_latency = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %read_latency to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %cond213.i.i.i, ptr %read_latency, align 8
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_qp_error(ptr noundef %__data, ptr nocapture noundef readonly %event, ptr noundef %sap) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %event, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %4, i32 0, i32 2
  %call.i31 = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add = add i32 %call.i31, 77
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %add.i = shl i32 %call.i31, 16
  %or.i = add i32 %add.i, 65610
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %event6 = getelementptr inbounds %struct.ib_event, ptr %event, i32 0, i32 2
  %6 = ptrtoint ptr %event6 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %event6, align 4
  %event7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %event7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %event7, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 74
  %9 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %event, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %10, i32 0, i32 2
  %tobool10.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool10.not, ptr @.str.101, ptr %name
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %call3, i32 0, i32 3
  %call16 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %addr, i32 noundef 57, ptr noundef nonnull @.str.262, ptr noundef %sap)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_qp_error(ptr noundef %__data, ptr nocapture noundef readonly %event, ptr noundef %sap) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %2 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %event, align 4
  %name.i = getelementptr inbounds %struct.ib_device, ptr %3, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #13
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65610
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 88
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #10
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_device, align 4
  %event17 = getelementptr inbounds %struct.ib_event, ptr %event, i32 0, i32 2
  %30 = ptrtoint ptr %event17 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %event17, align 4
  %event18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %event18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %event18, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 74
  %33 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %event, align 4
  %name = getelementptr inbounds %struct.ib_device, ptr %34, i32 0, i32 2
  %tobool22.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool22.not, ptr @.str.101, ptr %name
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %call13, i32 0, i32 3
  %call28 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %addr, i32 noundef 57, ptr noundef nonnull @.str.262, ptr noundef %sap)
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %13, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_sendqueue_event(ptr noundef %__data, ptr noundef %rdma) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add = add i32 %call.i27, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %sc_sq_avail = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 6
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sc_sq_avail, i32 noundef 4) #10
  %4 = ptrtoint ptr %sc_sq_avail to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sc_sq_avail, align 4
  %avail = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %avail to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %avail, align 4
  %sc_sq_depth = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 7
  %7 = ptrtoint ptr %sc_sq_depth to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sc_sq_depth, align 4
  %depth = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %depth, align 4
  %10 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %11, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %tobool8.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool8.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_sendqueue_event(ptr noundef %__data, ptr noundef %rdma) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %sc_sq_avail = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 6
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sc_sq_avail, i32 noundef 4) #10
  %28 = ptrtoint ptr %sc_sq_avail to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %sc_sq_avail, align 4
  %avail = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %avail to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %avail, align 4
  %sc_sq_depth = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 7
  %31 = ptrtoint ptr %sc_sq_depth to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sc_sq_depth, align 4
  %depth = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %depth, align 4
  %34 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %__data_loc_addr, align 4
  %and19 = and i32 %35, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and19
  %tobool20.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool20.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_svcrdma_sq_post_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1601

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1602

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add = add i32 %call.i30, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %sc_sq_avail = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 6
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sc_sq_avail, i32 noundef 4) #10
  %4 = ptrtoint ptr %sc_sq_avail to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sc_sq_avail, align 4
  %avail = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %avail to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %avail, align 4
  %sc_sq_depth = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 7
  %7 = ptrtoint ptr %sc_sq_depth to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sc_sq_depth, align 4
  %depth = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %depth, align 4
  %status7 = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %status7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %status, ptr %status7, align 4
  %11 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %12, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %tobool9.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool9.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call13 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_svcrdma_sq_post_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1603
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1603
  %xpt_remotebuf.i = getelementptr inbounds %struct.svc_xprt, ptr %rdma, i32 0, i32 17
  %call.i = tail call i32 @strlen(ptr noundef nonnull %xpt_remotebuf.i) #13
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1591) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1591) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_addr, align 4
  %sc_sq_avail = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 6
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sc_sq_avail, i32 noundef 4) #10
  %28 = ptrtoint ptr %sc_sq_avail to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %sc_sq_avail, align 4
  %avail = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %avail to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %avail, align 4
  %sc_sq_depth = getelementptr inbounds %struct.svcxprt_rdma, ptr %rdma, i32 0, i32 7
  %31 = ptrtoint ptr %sc_sq_depth to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sc_sq_depth, align 4
  %depth = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %depth, align 4
  %status18 = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %status18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %status, ptr %status18, align 4
  %35 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %__data_loc_addr, align 4
  %and20 = and i32 %36, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and20
  %tobool21.not = icmp eq ptr %xpt_remotebuf.i, null
  %spec.select = select i1 %tobool21.not, ptr @.str.101, ptr %xpt_remotebuf.i
  %call25 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #14
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_inline_thresh(ptr noundef %__data, ptr noundef %ep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ep to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_connect_class(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %rc to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_rxprt(ptr noundef %__data, ptr noundef %r_xprt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_op_connect(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %delay) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %delay to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_op_set_cto(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %connect, i32 noundef %reconnect) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %connect to i64
  %conv8 = zext i32 %reconnect to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_createmrs(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %count to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_nomrs_err(ptr noundef %__data, ptr noundef %r_xprt, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %req to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_rdch_event(ptr noundef %__data, ptr noundef %task, i32 noundef %pos, ptr noundef %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %pos to i64
  %1 = ptrtoint ptr %mr to i32
  %conv8 = zext i32 %1 to i64
  %conv12 = zext i32 %nsegs to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_wrch_event(ptr noundef %__data, ptr noundef %task, ptr noundef %mr, i32 noundef %nsegs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %mr to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %nsegs to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_marshal(ptr noundef %__data, ptr noundef %req, i32 noundef %rtype, i32 noundef %wtype) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %req to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %rtype to i64
  %conv8 = zext i32 %wtype to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_marshal_failed(ptr noundef %__data, ptr noundef %rqst, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %ret to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_prepsend_failed(ptr noundef %__data, ptr noundef %rqst, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %ret to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_post_send(ptr noundef %__data, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %req to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_post_send_err(ptr noundef %__data, ptr noundef %r_xprt, ptr noundef %req, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %req to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %rc to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_post_recv(ptr noundef %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rep to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_post_recvs(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %count to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_post_recvs_err(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_post_linv_err(ptr noundef %__data, ptr noundef %req, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %req to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_receive_completion_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_completion_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_mr_completion_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_frwr_alloc(ptr noundef %__data, ptr noundef %mr, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %mr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %rc to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_frwr_dereg(ptr noundef %__data, ptr noundef %mr, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %mr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %rc to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_frwr_sgerr(ptr noundef %__data, ptr noundef %mr, i32 noundef %sg_nents) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %mr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %sg_nents to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_frwr_maperr(ptr noundef %__data, ptr noundef %mr, i32 noundef %num_mapped) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %mr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %num_mapped to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_mr_class(ptr noundef %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %mr to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_anonymous_mr_class(ptr noundef %__data, ptr noundef %mr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %mr to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_dma_maperr(ptr noundef %__data, i64 noundef %addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %addr) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_reply(ptr noundef %__data, ptr noundef %task, ptr noundef %rep, i32 noundef %credits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rep to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %credits to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_reply_class(ptr noundef %__data, ptr noundef %rep) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rep to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_err_vers(ptr noundef %__data, ptr noundef %rqst, ptr noundef %min, ptr noundef %max) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %min to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %max to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_err_chunk(ptr noundef %__data, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_err_unrecognized(ptr noundef %__data, ptr noundef %rqst, ptr noundef %procedure) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %procedure to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_fixup(ptr noundef %__data, ptr noundef %rqst, i32 noundef %fixup) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %fixup to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_decode_seg(ptr noundef %__data, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %conv = zext i32 %handle to i64
  %conv4 = zext i32 %length to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %offset) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_mrs_zap(ptr noundef %__data, ptr noundef %task) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %task to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_cb_setup(ptr noundef %__data, ptr noundef %r_xprt, i32 noundef %reqs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %reqs to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xprtrdma_callback_class(ptr noundef %__data, ptr noundef %r_xprt, ptr noundef %rqst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %r_xprt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqst to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_accept_class(ptr noundef %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_decode_rqst(ptr noundef %__data, ptr noundef %ctxt, ptr noundef %p, i32 noundef %hdrlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %p to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %hdrlen to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_decode_short_err(ptr noundef %__data, ptr noundef %ctxt, i32 noundef %hdrlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %hdrlen to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_badreq_event(ptr noundef %__data, ptr noundef %ctxt, ptr noundef %p) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %p to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_encode_wseg(ptr noundef %__data, ptr noundef %ctxt, i32 noundef %segno, i32 noundef %handle, i32 noundef %length, i64 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %segno to i64
  %conv8 = zext i32 %handle to i64
  %conv12 = zext i32 %length to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %offset) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_decode_rseg(ptr noundef %__data, ptr noundef %cid, ptr noundef %chunk, ptr noundef %segment) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %cid to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %chunk to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %segment to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_decode_wseg(ptr noundef %__data, ptr noundef %cid, ptr noundef %chunk, i32 noundef %segno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %cid to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %chunk to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %segno to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_error_event(ptr noundef %__data, i32 noundef %xid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %conv = zext i32 %xid to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_dma_map_class(ptr noundef %__data, ptr noundef %rdma, i64 noundef %dma_addr, i32 noundef %length) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv7 = zext i32 %length to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %dma_addr, i64 noundef %conv7) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_dma_map_rw_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %nents, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %nents to i64
  %conv8 = zext i32 %status to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_no_rwctx_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %num_sges) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %num_sges to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_page_overrun_err(ptr noundef %__data, ptr noundef %rdma, ptr noundef %rqst, i32 noundef %pageno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqst to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %pageno to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_small_wrch_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %remaining, i32 noundef %seg_no, i32 noundef %num_segs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %remaining to i64
  %conv8 = zext i32 %seg_no to i64
  %conv12 = zext i32 %num_segs to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_send_pullup(ptr noundef %__data, ptr noundef %ctxt, i32 noundef %msglen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %msglen to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_send_err(ptr noundef %__data, ptr noundef %rqst, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_post_send(ptr noundef %__data, ptr noundef %ctxt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_send_completion_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_send_flush_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_post_recv(ptr noundef %__data, ptr noundef %ctxt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %ctxt to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_receive_success_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rpcrdma_receive_flush_class(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_rq_post_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_post_chunk_class(ptr noundef %__data, ptr noundef %cid, i32 noundef %sqecount) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %cid to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %sqecount to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_wc_read(ptr noundef %__data, ptr noundef %wc, ptr noundef %cid, i32 noundef %totalbytes, i64 noundef %posttime) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cid to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %totalbytes to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %posttime) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_qp_error(ptr noundef %__data, ptr noundef %event, ptr noundef %sap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %event to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %sap to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_sendqueue_event(ptr noundef %__data, ptr noundef %rdma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_svcrdma_sq_post_err(ptr noundef %__data, ptr noundef %rdma, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %rdma to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @rpc_rdma_cleanup() #3 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @xprt_rdma_cleanup() #10
  tail call void @svc_rdma_cleanup() #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xprt_rdma_cleanup() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @svc_rdma_cleanup() local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @rpc_rdma_init() #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @svc_rdma_init() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @xprt_rdma_init() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end.out_crit_edge, label %if.then3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @svc_rdma_cleanup() #10
  br label %out

out:                                              ; preds = %if.then3, %if.end.out_crit_edge, %entry.out_crit_edge
  %rc.0 = phi i32 [ %call, %entry.out_crit_edge ], [ %call1, %if.then3 ], [ 0, %if.end.out_crit_edge ]
  ret i32 %rc.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_inline_thresh(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %srcaddr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %1, i32 0, i32 5
  %dstaddr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %1, i32 0, i32 6
  %inline_send = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %inline_send to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %inline_send, align 4
  %inline_recv = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %inline_recv to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %inline_recv, align 4
  %max_send = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %max_send to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_send, align 4
  %max_recv = getelementptr inbounds %struct.trace_event_raw_xprtrdma_inline_thresh, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %max_recv to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max_recv, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.128, ptr noundef %srcaddr, ptr noundef %dstaddr, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_connect_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %rc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rc, align 4
  %connect_status = getelementptr inbounds %struct.trace_event_raw_xprtrdma_connect_class, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %connect_status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %connect_status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.129, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_rxprt(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rxprt, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rxprt, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.130, ptr noundef %add.ptr, ptr noundef %add.ptr2) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_op_connect(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %delay = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_connect, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %delay to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %delay, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.132, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_op_set_cto(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %connect = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %connect to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %connect, align 4
  %div = udiv i32 %7, 100
  %reconnect = getelementptr inbounds %struct.trace_event_raw_xprtrdma_op_set_cto, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %reconnect to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %reconnect, align 4
  %div3 = udiv i32 %9, 100
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.135, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %div, i32 noundef %div3) #10
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_createmrs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %count = getelementptr inbounds %struct.trace_event_raw_xprtrdma_createmrs, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.137, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_nomrs_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_nomrs_err, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %9, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.138, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, ptr noundef %add.ptr2) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_rdch_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 8
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %pos = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pos, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %length, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 7
  %10 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %handle, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 4
  %14 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nents, align 4
  %nsegs = getelementptr inbounds %struct.trace_event_raw_xprtrdma_rdch_event, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %nsegs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %nsegs, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %17)
  %cmp1 = icmp slt i32 %15, %17
  %cond = select i1 %cmp1, ptr @.str.140, ptr @.str.141
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.139, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i64 noundef %11, i32 noundef %13, ptr noundef nonnull %cond) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_wrch_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 8
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %length, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %handle, align 4
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nents, align 8
  %nsegs = getelementptr inbounds %struct.trace_event_raw_xprtrdma_wrch_event, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %nsegs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nsegs, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp1 = icmp slt i32 %13, %15
  %cond = select i1 %cmp1, ptr @.str.140, ptr @.str.141
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.142, i32 noundef %3, i32 noundef %5, i32 noundef %7, i64 noundef %9, i32 noundef %11, ptr noundef nonnull %cond) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_marshal(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %hdrlen to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %hdrlen, align 4
  %headlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %headlen to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %headlen, align 4
  %pagelen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %pagelen to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pagelen, align 4
  %taillen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %taillen to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %taillen, align 4
  %rtype = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %rtype to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rtype, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %17, ptr noundef nonnull @trace_raw_output_xprtrdma_marshal.symbols) #10
  %wtype = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %wtype to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %wtype, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %19, ptr noundef nonnull @trace_raw_output_xprtrdma_marshal.symbols.157) #10
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.149, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, ptr noundef %call1, ptr noundef %call3) #10
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_marshal_failed(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %ret1 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_marshal_failed, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ret1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ret1, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.159, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_prepsend_failed(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %ret1 = getelementptr inbounds %struct.trace_event_raw_xprtrdma_prepsend_failed, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ret1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ret1, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.159, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_post_send(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %completion_id, align 4
  %num_sge = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %num_sge to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_sge, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp2 = icmp eq i32 %11, 1
  %cond = select i1 %cmp2, ptr @.str.163, ptr @.str.164
  %signaled = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %signaled to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %signaled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not = icmp eq i32 %13, 0
  %cond3 = select i1 %tobool.not, ptr @.str.163, ptr @.str.161
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.162, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef nonnull %cond, ptr noundef nonnull %cond3) #10
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_post_send_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cq_id, align 4
  %rc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_send_err, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.165, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_post_recv(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recv, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recv, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.166, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_post_recvs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cq_id, align 4
  %count = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %count, align 4
  %posted = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %posted to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %posted, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.168, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_post_recvs_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %cq_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cq_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_recvs_err, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.169, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_post_linv_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_xprtrdma_post_linv_err, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.170, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_receive_completion_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rpcrdma_receive_completion_class.symbols) #10
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  %vendor_err = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vendor_err, align 4
  %received = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_completion_class, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %received to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %received, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.171, i32 noundef %3, i32 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11, i32 noundef %13) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_completion_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rpcrdma_completion_class.symbols) #10
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  %vendor_err = getelementptr inbounds %struct.trace_event_raw_rpcrdma_completion_class, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vendor_err, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.194, i32 noundef %3, i32 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_mr_completion_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rpcrdma_mr_completion_class.symbols) #10
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  %vendor_err = getelementptr inbounds %struct.trace_event_raw_rpcrdma_mr_completion_class, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vendor_err, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.195, i32 noundef %3, i32 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_frwr_alloc(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_alloc, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mr_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mr_id, align 4
  %rc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_alloc, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.196, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_frwr_dereg(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mr_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mr_id, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nents, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %length, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %handle, align 8
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dir, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_xprtrdma_frwr_dereg.symbols) #10
  %rc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_dereg, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.197, i32 noundef %3, i32 noundef %5, i32 noundef %7, i64 noundef %9, i32 noundef %11, ptr noundef %call1, i32 noundef %15) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_frwr_sgerr(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mr_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mr_id, align 8
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %addr, align 8
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dir, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xprtrdma_frwr_sgerr.symbols) #10
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_sgerr, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nents, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.202, i32 noundef %3, i64 noundef %5, ptr noundef %call1, i32 noundef %9) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_frwr_maperr(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mr_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mr_id, align 8
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %addr, align 8
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dir, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xprtrdma_frwr_maperr.symbols) #10
  %num_mapped = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %num_mapped to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_mapped, align 4
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_frwr_maperr, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nents, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.204, i32 noundef %3, i64 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_mr_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 8
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %mr_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mr_id, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nents, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %length, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %handle, align 8
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mr_class, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %dir, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %17, ptr noundef nonnull @trace_raw_output_xprtrdma_mr_class.symbols) #10
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.205, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i64 noundef %13, i32 noundef %15, ptr noundef %call1) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_anonymous_mr_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %mr_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mr_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mr_id, align 8
  %nents = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nents, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %length, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %handle, align 8
  %dir = getelementptr inbounds %struct.trace_event_raw_xprtrdma_anonymous_mr_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dir, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_xprtrdma_anonymous_mr_class.symbols) #10
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.206, i32 noundef %3, i32 noundef %5, i32 noundef %7, i64 noundef %9, i32 noundef %11, ptr noundef %call1) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_dma_maperr(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_dma_maperr, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %addr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %addr, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.207, i64 noundef %3) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_reply(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %credits to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %credits, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.209, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_reply_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %version = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %version, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_xprtrdma_reply_class, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %proc to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %proc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.210, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_err_vers(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %min = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %min to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %min, align 4
  %max = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_vers, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %max to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.213, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_err_chunk(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_chunk, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.214, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_err_unrecognized(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %procedure = getelementptr inbounds %struct.trace_event_raw_xprtrdma_err_unrecognized, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %procedure to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %procedure, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.216, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_fixup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  %fixup = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %fixup to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fixup, align 4
  %headlen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %headlen to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %headlen, align 4
  %pagelen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %pagelen to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pagelen, align 4
  %taillen = getelementptr inbounds %struct.trace_event_raw_xprtrdma_fixup, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %taillen to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %taillen, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.219, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_decode_seg(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %length = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %length, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_xprtrdma_decode_seg, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %handle, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.220, i32 noundef %3, i64 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_mrs_zap(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %task_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mrs_zap, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %task_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %task_id, align 4
  %client_id = getelementptr inbounds %struct.trace_event_raw_xprtrdma_mrs_zap, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %client_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %client_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.221, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_cb_setup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %reqs = getelementptr inbounds %struct.trace_event_raw_xprtrdma_cb_setup, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %reqs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %reqs, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.223, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xprtrdma_callback_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_port = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_port, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %xid = getelementptr inbounds %struct.trace_event_raw_xprtrdma_callback_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.224, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_accept_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_accept_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %status = getelementptr inbounds %struct.trace_event_raw_svcrdma_accept_class, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.226, ptr noundef %add.ptr, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_decode_rqst(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %vers to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vers, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %credits to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %credits, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %proc to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %proc, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_svcrdma_decode_rqst.symbols) #10
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rqst, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %hdrlen to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %hdrlen, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.228, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef %call1, i32 noundef %15) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_decode_short_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_short_err, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %hdrlen to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hdrlen, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.229, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_badreq_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %vers to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vers, align 4
  %credits = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %credits to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %credits, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_svcrdma_badreq_event, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %proc to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %proc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.230, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_encode_wseg(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 8
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %segno = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %segno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %segno, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %length, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_encode_wseg, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %handle, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.232, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i64 noundef %11, i32 noundef %13) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_decode_rseg(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 8
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %segno = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %segno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %segno, align 8
  %position = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %position to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %position, align 4
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %length, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_rseg, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %handle, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.234, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i64 noundef %13, i32 noundef %15) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_decode_wseg(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 8
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %segno = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %segno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %segno, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %length, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %offset, align 8
  %handle = getelementptr inbounds %struct.trace_event_raw_svcrdma_decode_wseg, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %handle, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.232, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i64 noundef %11, i32 noundef %13) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_error_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_error_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.235, i32 noundef %3) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_dma_map_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 8
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_device, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %dma_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %dma_addr to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %dma_addr, align 8
  %length = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_class, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %length, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.238, ptr noundef %add.ptr, ptr noundef %add.ptr2, i64 noundef %7, i32 noundef %9) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_dma_map_rw_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_device, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %nents = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nents, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_svcrdma_dma_map_rw_err, ptr %1, i32 0, i32 1
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.239, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_no_rwctx_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_device, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %num_sges = getelementptr inbounds %struct.trace_event_raw_svcrdma_no_rwctx_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %num_sges to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_sges, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.241, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_page_overrun_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_device, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xid, align 4
  %pageno = getelementptr inbounds %struct.trace_event_raw_svcrdma_page_overrun_err, ptr %1, i32 0, i32 1
  %8 = ptrtoint ptr %pageno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pageno, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.243, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_small_wrch_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_device, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %remaining = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %remaining to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %remaining, align 4
  %seg_no = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %seg_no to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seg_no, align 4
  %num_segs = getelementptr inbounds %struct.trace_event_raw_svcrdma_small_wrch_err, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %num_segs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_segs, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.247, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_send_pullup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %hdrlen = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %hdrlen to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hdrlen, align 4
  %msglen = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_pullup, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %msglen to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %msglen, align 4
  %add = add i32 %9, %7
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.249, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %add) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_send_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %xid = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_svcrdma_send_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.250, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_post_send(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %num_sge = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %num_sge to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_sge, align 4
  %inv_rkey = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_send, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %inv_rkey to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %inv_rkey, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.252, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_send_completion_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_completion_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_completion_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.253, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_send_flush_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rpcrdma_send_flush_class.symbols) #10
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  %vendor_err = getelementptr inbounds %struct.trace_event_raw_rpcrdma_send_flush_class, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vendor_err, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.194, i32 noundef %3, i32 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_post_recv(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_recv, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_recv, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.166, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_receive_success_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %received = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_success_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %received to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %received, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.254, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rpcrdma_receive_flush_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_rpcrdma_receive_flush_class.symbols) #10
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  %vendor_err = getelementptr inbounds %struct.trace_event_raw_rpcrdma_receive_flush_class, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %vendor_err to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vendor_err, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.194, i32 noundef %3, i32 noundef %5, ptr noundef %call1, i32 noundef %9, i32 noundef %11) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_rq_post_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_rq_post_err, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %status = getelementptr inbounds %struct.trace_event_raw_svcrdma_rq_post_err, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.255, ptr noundef %add.ptr, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_post_chunk_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 4
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %sqecount = getelementptr inbounds %struct.trace_event_raw_svcrdma_post_chunk_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %sqecount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sqecount, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.257, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_wc_read(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cq_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cq_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cq_id, align 8
  %completion_id = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %completion_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %completion_id, align 4
  %totalbytes = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %totalbytes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %totalbytes, align 8
  %read_latency = getelementptr inbounds %struct.trace_event_raw_svcrdma_wc_read, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %read_latency to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %read_latency, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.261, i32 noundef %3, i32 noundef %5, i32 noundef %7, i64 noundef %9) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_qp_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %1, i32 0, i32 3
  %__data_loc_device = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_device to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_device, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %event = getelementptr inbounds %struct.trace_event_raw_svcrdma_qp_error, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %event, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_svcrdma_qp_error.symbols) #10
  %6 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %event, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.265, ptr noundef %addr, ptr noundef %add.ptr, ptr noundef %call1, i32 noundef %7) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_sendqueue_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %avail = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %avail to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %avail, align 4
  %depth = getelementptr inbounds %struct.trace_event_raw_svcrdma_sendqueue_event, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %depth, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.288, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_svcrdma_sq_post_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_addr = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_addr, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %avail = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %avail to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %avail, align 4
  %depth = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %depth, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_svcrdma_sq_post_err, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.289, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %7, i32 noundef %9) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #7

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #8

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @svc_rdma_init() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xprt_rdma_init() local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #10

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #11 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 597)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #11 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 597)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nounwind readonly }
attributes #8 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { nounwind }
attributes #11 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #12 = { nomerge }
attributes #13 = { nobuiltin nounwind }
attributes #14 = { nobuiltin }
attributes #15 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !100, !102, !103, !104, !106, !107, !108, !110, !111, !112, !114, !115, !116, !118, !119, !120, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !148, !150, !151, !152, !154, !155, !156, !158, !159, !160, !162, !163, !164, !166, !167, !168, !170, !171, !172, !174, !175, !176, !178, !179, !180, !182, !183, !184, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !210, !211, !212, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !234, !235, !236, !238, !239, !240, !242, !243, !244, !246, !247, !248, !250, !251, !252, !254, !255, !256, !258, !259, !260, !262, !263, !264, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !279, !280, !282, !283, !284, !286, !287, !288, !290, !291, !292, !294, !295, !296, !298, !299, !300, !302, !303, !304, !306, !307, !308, !310, !311, !312, !314, !315, !316, !318, !319, !320, !322, !323, !324, !326, !327, !328, !330, !331, !332, !334, !335, !336, !338, !339, !340, !342, !343, !344, !346, !347, !348, !350, !351, !352, !354, !355, !356, !358, !359, !360, !362, !363, !364, !366, !367, !368, !370, !371, !372, !374, !375, !376, !378, !379, !380, !382, !383, !384, !386, !387, !388, !390, !391, !392, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !626, !627, !628, !630, !631, !632, !634, !635, !636, !638, !639, !640, !642, !643, !644, !646, !647, !648, !650, !651, !652, !654, !655, !656, !658, !659, !660, !662, !663, !664, !666, !667, !668, !670, !671, !672, !674, !675, !676, !678, !679, !680, !682, !683, !684, !686, !687, !688, !690, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !886, !887, !888, !889, !890, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1070, !1072, !1074, !1075, !1077, !1079, !1081, !1083, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590}
!llvm.named.register.sp = !{!1591}
!llvm.module.flags = !{!1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599}
!llvm.ident = !{!1600}

!0 = !{ptr @__tracepoint_xprtrdma_inline_thresh, !1, !"__tracepoint_xprtrdma_inline_thresh", i1 false, i1 false}
!1 = !{!"../include/trace/events/rpcrdma.h", i32 634, i32 1}
!2 = !{ptr @__tracepoint_ptr_xprtrdma_inline_thresh, !1, !"__tracepoint_ptr_xprtrdma_inline_thresh", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_xprtrdma_inline_thresh, !1, !"__SCK__tp_func_xprtrdma_inline_thresh", i1 false, i1 false}
!4 = !{ptr @__tracepoint_xprtrdma_connect, !5, !"__tracepoint_xprtrdma_connect", i1 false, i1 false}
!5 = !{!"../include/trace/events/rpcrdma.h", i32 670, i32 1}
!6 = !{ptr @__tracepoint_ptr_xprtrdma_connect, !5, !"__tracepoint_ptr_xprtrdma_connect", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_xprtrdma_connect, !5, !"__SCK__tp_func_xprtrdma_connect", i1 false, i1 false}
!8 = !{ptr @__tracepoint_xprtrdma_disconnect, !9, !"__tracepoint_xprtrdma_disconnect", i1 false, i1 false}
!9 = !{!"../include/trace/events/rpcrdma.h", i32 671, i32 1}
!10 = !{ptr @__tracepoint_ptr_xprtrdma_disconnect, !9, !"__tracepoint_ptr_xprtrdma_disconnect", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_xprtrdma_disconnect, !9, !"__SCK__tp_func_xprtrdma_disconnect", i1 false, i1 false}
!12 = !{ptr @__tracepoint_xprtrdma_op_inject_dsc, !13, !"__tracepoint_xprtrdma_op_inject_dsc", i1 false, i1 false}
!13 = !{!"../include/trace/events/rpcrdma.h", i32 673, i32 1}
!14 = !{ptr @__tracepoint_ptr_xprtrdma_op_inject_dsc, !13, !"__tracepoint_ptr_xprtrdma_op_inject_dsc", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_xprtrdma_op_inject_dsc, !13, !"__SCK__tp_func_xprtrdma_op_inject_dsc", i1 false, i1 false}
!16 = !{ptr @__tracepoint_xprtrdma_op_connect, !17, !"__tracepoint_xprtrdma_op_connect", i1 false, i1 false}
!17 = !{!"../include/trace/events/rpcrdma.h", i32 675, i32 1}
!18 = !{ptr @__tracepoint_ptr_xprtrdma_op_connect, !17, !"__tracepoint_ptr_xprtrdma_op_connect", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_xprtrdma_op_connect, !17, !"__SCK__tp_func_xprtrdma_op_connect", i1 false, i1 false}
!20 = !{ptr @__tracepoint_xprtrdma_op_set_cto, !21, !"__tracepoint_xprtrdma_op_set_cto", i1 false, i1 false}
!21 = !{!"../include/trace/events/rpcrdma.h", i32 701, i32 1}
!22 = !{ptr @__tracepoint_ptr_xprtrdma_op_set_cto, !21, !"__tracepoint_ptr_xprtrdma_op_set_cto", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_xprtrdma_op_set_cto, !21, !"__SCK__tp_func_xprtrdma_op_set_cto", i1 false, i1 false}
!24 = !{ptr @__tracepoint_xprtrdma_createmrs, !25, !"__tracepoint_xprtrdma_createmrs", i1 false, i1 false}
!25 = !{!"../include/trace/events/rpcrdma.h", i32 734, i32 1}
!26 = !{ptr @__tracepoint_ptr_xprtrdma_createmrs, !25, !"__tracepoint_ptr_xprtrdma_createmrs", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_xprtrdma_createmrs, !25, !"__SCK__tp_func_xprtrdma_createmrs", i1 false, i1 false}
!28 = !{ptr @__tracepoint_xprtrdma_nomrs_err, !29, !"__tracepoint_xprtrdma_nomrs_err", i1 false, i1 false}
!29 = !{!"../include/trace/events/rpcrdma.h", i32 759, i32 1}
!30 = !{ptr @__tracepoint_ptr_xprtrdma_nomrs_err, !29, !"__tracepoint_ptr_xprtrdma_nomrs_err", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_xprtrdma_nomrs_err, !29, !"__SCK__tp_func_xprtrdma_nomrs_err", i1 false, i1 false}
!32 = !{ptr @__tracepoint_xprtrdma_chunk_read, !33, !"__tracepoint_xprtrdma_chunk_read", i1 false, i1 false}
!33 = !{!"../include/trace/events/rpcrdma.h", i32 789, i32 1}
!34 = !{ptr @__tracepoint_ptr_xprtrdma_chunk_read, !33, !"__tracepoint_ptr_xprtrdma_chunk_read", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_xprtrdma_chunk_read, !33, !"__SCK__tp_func_xprtrdma_chunk_read", i1 false, i1 false}
!36 = !{ptr @__tracepoint_xprtrdma_chunk_write, !37, !"__tracepoint_xprtrdma_chunk_write", i1 false, i1 false}
!37 = !{!"../include/trace/events/rpcrdma.h", i32 790, i32 1}
!38 = !{ptr @__tracepoint_ptr_xprtrdma_chunk_write, !37, !"__tracepoint_ptr_xprtrdma_chunk_write", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_xprtrdma_chunk_write, !37, !"__SCK__tp_func_xprtrdma_chunk_write", i1 false, i1 false}
!40 = !{ptr @__tracepoint_xprtrdma_chunk_reply, !41, !"__tracepoint_xprtrdma_chunk_reply", i1 false, i1 false}
!41 = !{!"../include/trace/events/rpcrdma.h", i32 791, i32 1}
!42 = !{ptr @__tracepoint_ptr_xprtrdma_chunk_reply, !41, !"__tracepoint_ptr_xprtrdma_chunk_reply", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_xprtrdma_chunk_reply, !41, !"__SCK__tp_func_xprtrdma_chunk_reply", i1 false, i1 false}
!44 = !{ptr @__tracepoint_xprtrdma_chunk_wp, !45, !"__tracepoint_xprtrdma_chunk_wp", i1 false, i1 false}
!45 = !{!"../include/trace/events/rpcrdma.h", i32 792, i32 1}
!46 = !{ptr @__tracepoint_ptr_xprtrdma_chunk_wp, !45, !"__tracepoint_ptr_xprtrdma_chunk_wp", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_xprtrdma_chunk_wp, !45, !"__SCK__tp_func_xprtrdma_chunk_wp", i1 false, i1 false}
!48 = !{ptr @__tracepoint_xprtrdma_marshal, !49, !"__tracepoint_xprtrdma_marshal", i1 false, i1 false}
!49 = !{!"../include/trace/events/rpcrdma.h", i32 812, i32 1}
!50 = !{ptr @__tracepoint_ptr_xprtrdma_marshal, !49, !"__tracepoint_ptr_xprtrdma_marshal", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_xprtrdma_marshal, !49, !"__SCK__tp_func_xprtrdma_marshal", i1 false, i1 false}
!52 = !{ptr @__tracepoint_xprtrdma_marshal_failed, !53, !"__tracepoint_xprtrdma_marshal_failed", i1 false, i1 false}
!53 = !{!"../include/trace/events/rpcrdma.h", i32 857, i32 1}
!54 = !{ptr @__tracepoint_ptr_xprtrdma_marshal_failed, !53, !"__tracepoint_ptr_xprtrdma_marshal_failed", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_xprtrdma_marshal_failed, !53, !"__SCK__tp_func_xprtrdma_marshal_failed", i1 false, i1 false}
!56 = !{ptr @__tracepoint_xprtrdma_prepsend_failed, !57, !"__tracepoint_xprtrdma_prepsend_failed", i1 false, i1 false}
!57 = !{!"../include/trace/events/rpcrdma.h", i32 884, i32 1}
!58 = !{ptr @__tracepoint_ptr_xprtrdma_prepsend_failed, !57, !"__tracepoint_ptr_xprtrdma_prepsend_failed", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_xprtrdma_prepsend_failed, !57, !"__SCK__tp_func_xprtrdma_prepsend_failed", i1 false, i1 false}
!60 = !{ptr @__tracepoint_xprtrdma_post_send, !61, !"__tracepoint_xprtrdma_post_send", i1 false, i1 false}
!61 = !{!"../include/trace/events/rpcrdma.h", i32 911, i32 1}
!62 = !{ptr @__tracepoint_ptr_xprtrdma_post_send, !61, !"__tracepoint_ptr_xprtrdma_post_send", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_xprtrdma_post_send, !61, !"__SCK__tp_func_xprtrdma_post_send", i1 false, i1 false}
!64 = !{ptr @__tracepoint_xprtrdma_post_send_err, !65, !"__tracepoint_xprtrdma_post_send_err", i1 false, i1 false}
!65 = !{!"../include/trace/events/rpcrdma.h", i32 948, i32 1}
!66 = !{ptr @__tracepoint_ptr_xprtrdma_post_send_err, !65, !"__tracepoint_ptr_xprtrdma_post_send_err", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_xprtrdma_post_send_err, !65, !"__SCK__tp_func_xprtrdma_post_send_err", i1 false, i1 false}
!68 = !{ptr @__tracepoint_xprtrdma_post_recv, !69, !"__tracepoint_xprtrdma_post_recv", i1 false, i1 false}
!69 = !{!"../include/trace/events/rpcrdma.h", i32 981, i32 1}
!70 = !{ptr @__tracepoint_ptr_xprtrdma_post_recv, !69, !"__tracepoint_ptr_xprtrdma_post_recv", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_xprtrdma_post_recv, !69, !"__SCK__tp_func_xprtrdma_post_recv", i1 false, i1 false}
!72 = !{ptr @__tracepoint_xprtrdma_post_recvs, !73, !"__tracepoint_xprtrdma_post_recvs", i1 false, i1 false}
!73 = !{!"../include/trace/events/rpcrdma.h", i32 1003, i32 1}
!74 = !{ptr @__tracepoint_ptr_xprtrdma_post_recvs, !73, !"__tracepoint_ptr_xprtrdma_post_recvs", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_xprtrdma_post_recvs, !73, !"__SCK__tp_func_xprtrdma_post_recvs", i1 false, i1 false}
!76 = !{ptr @__tracepoint_xprtrdma_post_recvs_err, !77, !"__tracepoint_xprtrdma_post_recvs_err", i1 false, i1 false}
!77 = !{!"../include/trace/events/rpcrdma.h", i32 1035, i32 1}
!78 = !{ptr @__tracepoint_ptr_xprtrdma_post_recvs_err, !77, !"__tracepoint_ptr_xprtrdma_post_recvs_err", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_xprtrdma_post_recvs_err, !77, !"__SCK__tp_func_xprtrdma_post_recvs_err", i1 false, i1 false}
!80 = !{ptr @__tracepoint_xprtrdma_post_linv_err, !81, !"__tracepoint_xprtrdma_post_linv_err", i1 false, i1 false}
!81 = !{!"../include/trace/events/rpcrdma.h", i32 1065, i32 1}
!82 = !{ptr @__tracepoint_ptr_xprtrdma_post_linv_err, !81, !"__tracepoint_ptr_xprtrdma_post_linv_err", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_xprtrdma_post_linv_err, !81, !"__SCK__tp_func_xprtrdma_post_linv_err", i1 false, i1 false}
!84 = !{ptr @__tracepoint_xprtrdma_wc_receive, !85, !"__tracepoint_xprtrdma_wc_receive", i1 false, i1 false}
!85 = !{!"../include/trace/events/rpcrdma.h", i32 1096, i32 1}
!86 = !{ptr @__tracepoint_ptr_xprtrdma_wc_receive, !85, !"__tracepoint_ptr_xprtrdma_wc_receive", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_xprtrdma_wc_receive, !85, !"__SCK__tp_func_xprtrdma_wc_receive", i1 false, i1 false}
!88 = !{ptr @__tracepoint_xprtrdma_wc_send, !89, !"__tracepoint_xprtrdma_wc_send", i1 false, i1 false}
!89 = !{!"../include/trace/events/rpcrdma.h", i32 1098, i32 1}
!90 = !{ptr @__tracepoint_ptr_xprtrdma_wc_send, !89, !"__tracepoint_ptr_xprtrdma_wc_send", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_xprtrdma_wc_send, !89, !"__SCK__tp_func_xprtrdma_wc_send", i1 false, i1 false}
!92 = !{ptr @__tracepoint_xprtrdma_wc_fastreg, !93, !"__tracepoint_xprtrdma_wc_fastreg", i1 false, i1 false}
!93 = !{!"../include/trace/events/rpcrdma.h", i32 1099, i32 1}
!94 = !{ptr @__tracepoint_ptr_xprtrdma_wc_fastreg, !93, !"__tracepoint_ptr_xprtrdma_wc_fastreg", i1 false, i1 false}
!95 = !{ptr @__SCK__tp_func_xprtrdma_wc_fastreg, !93, !"__SCK__tp_func_xprtrdma_wc_fastreg", i1 false, i1 false}
!96 = !{ptr @__tracepoint_xprtrdma_wc_li, !97, !"__tracepoint_xprtrdma_wc_li", i1 false, i1 false}
!97 = !{!"../include/trace/events/rpcrdma.h", i32 1100, i32 1}
!98 = !{ptr @__tracepoint_ptr_xprtrdma_wc_li, !97, !"__tracepoint_ptr_xprtrdma_wc_li", i1 false, i1 false}
!99 = !{ptr @__SCK__tp_func_xprtrdma_wc_li, !97, !"__SCK__tp_func_xprtrdma_wc_li", i1 false, i1 false}
!100 = !{ptr @__tracepoint_xprtrdma_wc_li_wake, !101, !"__tracepoint_xprtrdma_wc_li_wake", i1 false, i1 false}
!101 = !{!"../include/trace/events/rpcrdma.h", i32 1101, i32 1}
!102 = !{ptr @__tracepoint_ptr_xprtrdma_wc_li_wake, !101, !"__tracepoint_ptr_xprtrdma_wc_li_wake", i1 false, i1 false}
!103 = !{ptr @__SCK__tp_func_xprtrdma_wc_li_wake, !101, !"__SCK__tp_func_xprtrdma_wc_li_wake", i1 false, i1 false}
!104 = !{ptr @__tracepoint_xprtrdma_wc_li_done, !105, !"__tracepoint_xprtrdma_wc_li_done", i1 false, i1 false}
!105 = !{!"../include/trace/events/rpcrdma.h", i32 1102, i32 1}
!106 = !{ptr @__tracepoint_ptr_xprtrdma_wc_li_done, !105, !"__tracepoint_ptr_xprtrdma_wc_li_done", i1 false, i1 false}
!107 = !{ptr @__SCK__tp_func_xprtrdma_wc_li_done, !105, !"__SCK__tp_func_xprtrdma_wc_li_done", i1 false, i1 false}
!108 = !{ptr @__tracepoint_xprtrdma_frwr_alloc, !109, !"__tracepoint_xprtrdma_frwr_alloc", i1 false, i1 false}
!109 = !{!"../include/trace/events/rpcrdma.h", i32 1104, i32 1}
!110 = !{ptr @__tracepoint_ptr_xprtrdma_frwr_alloc, !109, !"__tracepoint_ptr_xprtrdma_frwr_alloc", i1 false, i1 false}
!111 = !{ptr @__SCK__tp_func_xprtrdma_frwr_alloc, !109, !"__SCK__tp_func_xprtrdma_frwr_alloc", i1 false, i1 false}
!112 = !{ptr @__tracepoint_xprtrdma_frwr_dereg, !113, !"__tracepoint_xprtrdma_frwr_dereg", i1 false, i1 false}
!113 = !{!"../include/trace/events/rpcrdma.h", i32 1127, i32 1}
!114 = !{ptr @__tracepoint_ptr_xprtrdma_frwr_dereg, !113, !"__tracepoint_ptr_xprtrdma_frwr_dereg", i1 false, i1 false}
!115 = !{ptr @__SCK__tp_func_xprtrdma_frwr_dereg, !113, !"__SCK__tp_func_xprtrdma_frwr_dereg", i1 false, i1 false}
!116 = !{ptr @__tracepoint_xprtrdma_frwr_sgerr, !117, !"__tracepoint_xprtrdma_frwr_sgerr", i1 false, i1 false}
!117 = !{!"../include/trace/events/rpcrdma.h", i32 1163, i32 1}
!118 = !{ptr @__tracepoint_ptr_xprtrdma_frwr_sgerr, !117, !"__tracepoint_ptr_xprtrdma_frwr_sgerr", i1 false, i1 false}
!119 = !{ptr @__SCK__tp_func_xprtrdma_frwr_sgerr, !117, !"__SCK__tp_func_xprtrdma_frwr_sgerr", i1 false, i1 false}
!120 = !{ptr @__tracepoint_xprtrdma_frwr_maperr, !121, !"__tracepoint_xprtrdma_frwr_maperr", i1 false, i1 false}
!121 = !{!"../include/trace/events/rpcrdma.h", i32 1192, i32 1}
!122 = !{ptr @__tracepoint_ptr_xprtrdma_frwr_maperr, !121, !"__tracepoint_ptr_xprtrdma_frwr_maperr", i1 false, i1 false}
!123 = !{ptr @__SCK__tp_func_xprtrdma_frwr_maperr, !121, !"__SCK__tp_func_xprtrdma_frwr_maperr", i1 false, i1 false}
!124 = !{ptr @__tracepoint_xprtrdma_mr_fastreg, !125, !"__tracepoint_xprtrdma_mr_fastreg", i1 false, i1 false}
!125 = !{!"../include/trace/events/rpcrdma.h", i32 1223, i32 1}
!126 = !{ptr @__tracepoint_ptr_xprtrdma_mr_fastreg, !125, !"__tracepoint_ptr_xprtrdma_mr_fastreg", i1 false, i1 false}
!127 = !{ptr @__SCK__tp_func_xprtrdma_mr_fastreg, !125, !"__SCK__tp_func_xprtrdma_mr_fastreg", i1 false, i1 false}
!128 = !{ptr @__tracepoint_xprtrdma_mr_localinv, !129, !"__tracepoint_xprtrdma_mr_localinv", i1 false, i1 false}
!129 = !{!"../include/trace/events/rpcrdma.h", i32 1224, i32 1}
!130 = !{ptr @__tracepoint_ptr_xprtrdma_mr_localinv, !129, !"__tracepoint_ptr_xprtrdma_mr_localinv", i1 false, i1 false}
!131 = !{ptr @__SCK__tp_func_xprtrdma_mr_localinv, !129, !"__SCK__tp_func_xprtrdma_mr_localinv", i1 false, i1 false}
!132 = !{ptr @__tracepoint_xprtrdma_mr_reminv, !133, !"__tracepoint_xprtrdma_mr_reminv", i1 false, i1 false}
!133 = !{!"../include/trace/events/rpcrdma.h", i32 1225, i32 1}
!134 = !{ptr @__tracepoint_ptr_xprtrdma_mr_reminv, !133, !"__tracepoint_ptr_xprtrdma_mr_reminv", i1 false, i1 false}
!135 = !{ptr @__SCK__tp_func_xprtrdma_mr_reminv, !133, !"__SCK__tp_func_xprtrdma_mr_reminv", i1 false, i1 false}
!136 = !{ptr @__tracepoint_xprtrdma_mr_map, !137, !"__tracepoint_xprtrdma_mr_map", i1 false, i1 false}
!137 = !{!"../include/trace/events/rpcrdma.h", i32 1226, i32 1}
!138 = !{ptr @__tracepoint_ptr_xprtrdma_mr_map, !137, !"__tracepoint_ptr_xprtrdma_mr_map", i1 false, i1 false}
!139 = !{ptr @__SCK__tp_func_xprtrdma_mr_map, !137, !"__SCK__tp_func_xprtrdma_mr_map", i1 false, i1 false}
!140 = !{ptr @__tracepoint_xprtrdma_mr_unmap, !141, !"__tracepoint_xprtrdma_mr_unmap", i1 false, i1 false}
!141 = !{!"../include/trace/events/rpcrdma.h", i32 1228, i32 1}
!142 = !{ptr @__tracepoint_ptr_xprtrdma_mr_unmap, !141, !"__tracepoint_ptr_xprtrdma_mr_unmap", i1 false, i1 false}
!143 = !{ptr @__SCK__tp_func_xprtrdma_mr_unmap, !141, !"__SCK__tp_func_xprtrdma_mr_unmap", i1 false, i1 false}
!144 = !{ptr @__tracepoint_xprtrdma_dma_maperr, !145, !"__tracepoint_xprtrdma_dma_maperr", i1 false, i1 false}
!145 = !{!"../include/trace/events/rpcrdma.h", i32 1230, i32 1}
!146 = !{ptr @__tracepoint_ptr_xprtrdma_dma_maperr, !145, !"__tracepoint_ptr_xprtrdma_dma_maperr", i1 false, i1 false}
!147 = !{ptr @__SCK__tp_func_xprtrdma_dma_maperr, !145, !"__SCK__tp_func_xprtrdma_dma_maperr", i1 false, i1 false}
!148 = !{ptr @__tracepoint_xprtrdma_reply, !149, !"__tracepoint_xprtrdma_reply", i1 false, i1 false}
!149 = !{!"../include/trace/events/rpcrdma.h", i32 1252, i32 1}
!150 = !{ptr @__tracepoint_ptr_xprtrdma_reply, !149, !"__tracepoint_ptr_xprtrdma_reply", i1 false, i1 false}
!151 = !{ptr @__SCK__tp_func_xprtrdma_reply, !149, !"__SCK__tp_func_xprtrdma_reply", i1 false, i1 false}
!152 = !{ptr @__tracepoint_xprtrdma_reply_vers_err, !153, !"__tracepoint_xprtrdma_reply_vers_err", i1 false, i1 false}
!153 = !{!"../include/trace/events/rpcrdma.h", i32 1281, i32 1}
!154 = !{ptr @__tracepoint_ptr_xprtrdma_reply_vers_err, !153, !"__tracepoint_ptr_xprtrdma_reply_vers_err", i1 false, i1 false}
!155 = !{ptr @__SCK__tp_func_xprtrdma_reply_vers_err, !153, !"__SCK__tp_func_xprtrdma_reply_vers_err", i1 false, i1 false}
!156 = !{ptr @__tracepoint_xprtrdma_reply_rqst_err, !157, !"__tracepoint_xprtrdma_reply_rqst_err", i1 false, i1 false}
!157 = !{!"../include/trace/events/rpcrdma.h", i32 1282, i32 1}
!158 = !{ptr @__tracepoint_ptr_xprtrdma_reply_rqst_err, !157, !"__tracepoint_ptr_xprtrdma_reply_rqst_err", i1 false, i1 false}
!159 = !{ptr @__SCK__tp_func_xprtrdma_reply_rqst_err, !157, !"__SCK__tp_func_xprtrdma_reply_rqst_err", i1 false, i1 false}
!160 = !{ptr @__tracepoint_xprtrdma_reply_short_err, !161, !"__tracepoint_xprtrdma_reply_short_err", i1 false, i1 false}
!161 = !{!"../include/trace/events/rpcrdma.h", i32 1283, i32 1}
!162 = !{ptr @__tracepoint_ptr_xprtrdma_reply_short_err, !161, !"__tracepoint_ptr_xprtrdma_reply_short_err", i1 false, i1 false}
!163 = !{ptr @__SCK__tp_func_xprtrdma_reply_short_err, !161, !"__SCK__tp_func_xprtrdma_reply_short_err", i1 false, i1 false}
!164 = !{ptr @__tracepoint_xprtrdma_reply_hdr_err, !165, !"__tracepoint_xprtrdma_reply_hdr_err", i1 false, i1 false}
!165 = !{!"../include/trace/events/rpcrdma.h", i32 1284, i32 1}
!166 = !{ptr @__tracepoint_ptr_xprtrdma_reply_hdr_err, !165, !"__tracepoint_ptr_xprtrdma_reply_hdr_err", i1 false, i1 false}
!167 = !{ptr @__SCK__tp_func_xprtrdma_reply_hdr_err, !165, !"__SCK__tp_func_xprtrdma_reply_hdr_err", i1 false, i1 false}
!168 = !{ptr @__tracepoint_xprtrdma_err_vers, !169, !"__tracepoint_xprtrdma_err_vers", i1 false, i1 false}
!169 = !{!"../include/trace/events/rpcrdma.h", i32 1286, i32 1}
!170 = !{ptr @__tracepoint_ptr_xprtrdma_err_vers, !169, !"__tracepoint_ptr_xprtrdma_err_vers", i1 false, i1 false}
!171 = !{ptr @__SCK__tp_func_xprtrdma_err_vers, !169, !"__SCK__tp_func_xprtrdma_err_vers", i1 false, i1 false}
!172 = !{ptr @__tracepoint_xprtrdma_err_chunk, !173, !"__tracepoint_xprtrdma_err_chunk", i1 false, i1 false}
!173 = !{!"../include/trace/events/rpcrdma.h", i32 1317, i32 1}
!174 = !{ptr @__tracepoint_ptr_xprtrdma_err_chunk, !173, !"__tracepoint_ptr_xprtrdma_err_chunk", i1 false, i1 false}
!175 = !{ptr @__SCK__tp_func_xprtrdma_err_chunk, !173, !"__SCK__tp_func_xprtrdma_err_chunk", i1 false, i1 false}
!176 = !{ptr @__tracepoint_xprtrdma_err_unrecognized, !177, !"__tracepoint_xprtrdma_err_unrecognized", i1 false, i1 false}
!177 = !{!"../include/trace/events/rpcrdma.h", i32 1341, i32 1}
!178 = !{ptr @__tracepoint_ptr_xprtrdma_err_unrecognized, !177, !"__tracepoint_ptr_xprtrdma_err_unrecognized", i1 false, i1 false}
!179 = !{ptr @__SCK__tp_func_xprtrdma_err_unrecognized, !177, !"__SCK__tp_func_xprtrdma_err_unrecognized", i1 false, i1 false}
!180 = !{ptr @__tracepoint_xprtrdma_fixup, !181, !"__tracepoint_xprtrdma_fixup", i1 false, i1 false}
!181 = !{!"../include/trace/events/rpcrdma.h", i32 1368, i32 1}
!182 = !{ptr @__tracepoint_ptr_xprtrdma_fixup, !181, !"__tracepoint_ptr_xprtrdma_fixup", i1 false, i1 false}
!183 = !{ptr @__SCK__tp_func_xprtrdma_fixup, !181, !"__SCK__tp_func_xprtrdma_fixup", i1 false, i1 false}
!184 = !{ptr @__tracepoint_xprtrdma_decode_seg, !185, !"__tracepoint_xprtrdma_decode_seg", i1 false, i1 false}
!185 = !{!"../include/trace/events/rpcrdma.h", i32 1400, i32 1}
!186 = !{ptr @__tracepoint_ptr_xprtrdma_decode_seg, !185, !"__tracepoint_ptr_xprtrdma_decode_seg", i1 false, i1 false}
!187 = !{ptr @__SCK__tp_func_xprtrdma_decode_seg, !185, !"__SCK__tp_func_xprtrdma_decode_seg", i1 false, i1 false}
!188 = !{ptr @__tracepoint_xprtrdma_mrs_zap, !189, !"__tracepoint_xprtrdma_mrs_zap", i1 false, i1 false}
!189 = !{!"../include/trace/events/rpcrdma.h", i32 1427, i32 1}
!190 = !{ptr @__tracepoint_ptr_xprtrdma_mrs_zap, !189, !"__tracepoint_ptr_xprtrdma_mrs_zap", i1 false, i1 false}
!191 = !{ptr @__SCK__tp_func_xprtrdma_mrs_zap, !189, !"__SCK__tp_func_xprtrdma_mrs_zap", i1 false, i1 false}
!192 = !{ptr @__tracepoint_xprtrdma_cb_setup, !193, !"__tracepoint_xprtrdma_cb_setup", i1 false, i1 false}
!193 = !{!"../include/trace/events/rpcrdma.h", i32 1453, i32 1}
!194 = !{ptr @__tracepoint_ptr_xprtrdma_cb_setup, !193, !"__tracepoint_ptr_xprtrdma_cb_setup", i1 false, i1 false}
!195 = !{ptr @__SCK__tp_func_xprtrdma_cb_setup, !193, !"__SCK__tp_func_xprtrdma_cb_setup", i1 false, i1 false}
!196 = !{ptr @__tracepoint_xprtrdma_cb_call, !197, !"__tracepoint_xprtrdma_cb_call", i1 false, i1 false}
!197 = !{!"../include/trace/events/rpcrdma.h", i32 1478, i32 1}
!198 = !{ptr @__tracepoint_ptr_xprtrdma_cb_call, !197, !"__tracepoint_ptr_xprtrdma_cb_call", i1 false, i1 false}
!199 = !{ptr @__SCK__tp_func_xprtrdma_cb_call, !197, !"__SCK__tp_func_xprtrdma_cb_call", i1 false, i1 false}
!200 = !{ptr @__tracepoint_xprtrdma_cb_reply, !201, !"__tracepoint_xprtrdma_cb_reply", i1 false, i1 false}
!201 = !{!"../include/trace/events/rpcrdma.h", i32 1479, i32 1}
!202 = !{ptr @__tracepoint_ptr_xprtrdma_cb_reply, !201, !"__tracepoint_ptr_xprtrdma_cb_reply", i1 false, i1 false}
!203 = !{ptr @__SCK__tp_func_xprtrdma_cb_reply, !201, !"__SCK__tp_func_xprtrdma_cb_reply", i1 false, i1 false}
!204 = !{ptr @__tracepoint_svcrdma_pd_err, !205, !"__tracepoint_svcrdma_pd_err", i1 false, i1 false}
!205 = !{!"../include/trace/events/rpcrdma.h", i32 1516, i32 1}
!206 = !{ptr @__tracepoint_ptr_svcrdma_pd_err, !205, !"__tracepoint_ptr_svcrdma_pd_err", i1 false, i1 false}
!207 = !{ptr @__SCK__tp_func_svcrdma_pd_err, !205, !"__SCK__tp_func_svcrdma_pd_err", i1 false, i1 false}
!208 = !{ptr @__tracepoint_svcrdma_qp_err, !209, !"__tracepoint_svcrdma_qp_err", i1 false, i1 false}
!209 = !{!"../include/trace/events/rpcrdma.h", i32 1517, i32 1}
!210 = !{ptr @__tracepoint_ptr_svcrdma_qp_err, !209, !"__tracepoint_ptr_svcrdma_qp_err", i1 false, i1 false}
!211 = !{ptr @__SCK__tp_func_svcrdma_qp_err, !209, !"__SCK__tp_func_svcrdma_qp_err", i1 false, i1 false}
!212 = !{ptr @__tracepoint_svcrdma_fabric_err, !213, !"__tracepoint_svcrdma_fabric_err", i1 false, i1 false}
!213 = !{!"../include/trace/events/rpcrdma.h", i32 1518, i32 1}
!214 = !{ptr @__tracepoint_ptr_svcrdma_fabric_err, !213, !"__tracepoint_ptr_svcrdma_fabric_err", i1 false, i1 false}
!215 = !{ptr @__SCK__tp_func_svcrdma_fabric_err, !213, !"__SCK__tp_func_svcrdma_fabric_err", i1 false, i1 false}
!216 = !{ptr @__tracepoint_svcrdma_initdepth_err, !217, !"__tracepoint_svcrdma_initdepth_err", i1 false, i1 false}
!217 = !{!"../include/trace/events/rpcrdma.h", i32 1519, i32 1}
!218 = !{ptr @__tracepoint_ptr_svcrdma_initdepth_err, !217, !"__tracepoint_ptr_svcrdma_initdepth_err", i1 false, i1 false}
!219 = !{ptr @__SCK__tp_func_svcrdma_initdepth_err, !217, !"__SCK__tp_func_svcrdma_initdepth_err", i1 false, i1 false}
!220 = !{ptr @__tracepoint_svcrdma_accept_err, !221, !"__tracepoint_svcrdma_accept_err", i1 false, i1 false}
!221 = !{!"../include/trace/events/rpcrdma.h", i32 1520, i32 1}
!222 = !{ptr @__tracepoint_ptr_svcrdma_accept_err, !221, !"__tracepoint_ptr_svcrdma_accept_err", i1 false, i1 false}
!223 = !{ptr @__SCK__tp_func_svcrdma_accept_err, !221, !"__SCK__tp_func_svcrdma_accept_err", i1 false, i1 false}
!224 = !{ptr @__tracepoint_svcrdma_decode_rqst, !225, !"__tracepoint_svcrdma_decode_rqst", i1 false, i1 false}
!225 = !{!"../include/trace/events/rpcrdma.h", i32 1536, i32 1}
!226 = !{ptr @__tracepoint_ptr_svcrdma_decode_rqst, !225, !"__tracepoint_ptr_svcrdma_decode_rqst", i1 false, i1 false}
!227 = !{ptr @__SCK__tp_func_svcrdma_decode_rqst, !225, !"__SCK__tp_func_svcrdma_decode_rqst", i1 false, i1 false}
!228 = !{ptr @__tracepoint_svcrdma_decode_short_err, !229, !"__tracepoint_svcrdma_decode_short_err", i1 false, i1 false}
!229 = !{!"../include/trace/events/rpcrdma.h", i32 1571, i32 1}
!230 = !{ptr @__tracepoint_ptr_svcrdma_decode_short_err, !229, !"__tracepoint_ptr_svcrdma_decode_short_err", i1 false, i1 false}
!231 = !{ptr @__SCK__tp_func_svcrdma_decode_short_err, !229, !"__SCK__tp_func_svcrdma_decode_short_err", i1 false, i1 false}
!232 = !{ptr @__tracepoint_svcrdma_decode_badvers_err, !233, !"__tracepoint_svcrdma_decode_badvers_err", i1 false, i1 false}
!233 = !{!"../include/trace/events/rpcrdma.h", i32 1636, i32 1}
!234 = !{ptr @__tracepoint_ptr_svcrdma_decode_badvers_err, !233, !"__tracepoint_ptr_svcrdma_decode_badvers_err", i1 false, i1 false}
!235 = !{ptr @__SCK__tp_func_svcrdma_decode_badvers_err, !233, !"__SCK__tp_func_svcrdma_decode_badvers_err", i1 false, i1 false}
!236 = !{ptr @__tracepoint_svcrdma_decode_drop_err, !237, !"__tracepoint_svcrdma_decode_drop_err", i1 false, i1 false}
!237 = !{!"../include/trace/events/rpcrdma.h", i32 1637, i32 1}
!238 = !{ptr @__tracepoint_ptr_svcrdma_decode_drop_err, !237, !"__tracepoint_ptr_svcrdma_decode_drop_err", i1 false, i1 false}
!239 = !{ptr @__SCK__tp_func_svcrdma_decode_drop_err, !237, !"__SCK__tp_func_svcrdma_decode_drop_err", i1 false, i1 false}
!240 = !{ptr @__tracepoint_svcrdma_decode_badproc_err, !241, !"__tracepoint_svcrdma_decode_badproc_err", i1 false, i1 false}
!241 = !{!"../include/trace/events/rpcrdma.h", i32 1638, i32 1}
!242 = !{ptr @__tracepoint_ptr_svcrdma_decode_badproc_err, !241, !"__tracepoint_ptr_svcrdma_decode_badproc_err", i1 false, i1 false}
!243 = !{ptr @__SCK__tp_func_svcrdma_decode_badproc_err, !241, !"__SCK__tp_func_svcrdma_decode_badproc_err", i1 false, i1 false}
!244 = !{ptr @__tracepoint_svcrdma_decode_parse_err, !245, !"__tracepoint_svcrdma_decode_parse_err", i1 false, i1 false}
!245 = !{!"../include/trace/events/rpcrdma.h", i32 1639, i32 1}
!246 = !{ptr @__tracepoint_ptr_svcrdma_decode_parse_err, !245, !"__tracepoint_ptr_svcrdma_decode_parse_err", i1 false, i1 false}
!247 = !{ptr @__SCK__tp_func_svcrdma_decode_parse_err, !245, !"__SCK__tp_func_svcrdma_decode_parse_err", i1 false, i1 false}
!248 = !{ptr @__tracepoint_svcrdma_encode_wseg, !249, !"__tracepoint_svcrdma_encode_wseg", i1 false, i1 false}
!249 = !{!"../include/trace/events/rpcrdma.h", i32 1641, i32 1}
!250 = !{ptr @__tracepoint_ptr_svcrdma_encode_wseg, !249, !"__tracepoint_ptr_svcrdma_encode_wseg", i1 false, i1 false}
!251 = !{ptr @__SCK__tp_func_svcrdma_encode_wseg, !249, !"__SCK__tp_func_svcrdma_encode_wseg", i1 false, i1 false}
!252 = !{ptr @__tracepoint_svcrdma_decode_rseg, !253, !"__tracepoint_svcrdma_decode_rseg", i1 false, i1 false}
!253 = !{!"../include/trace/events/rpcrdma.h", i32 1677, i32 1}
!254 = !{ptr @__tracepoint_ptr_svcrdma_decode_rseg, !253, !"__tracepoint_ptr_svcrdma_decode_rseg", i1 false, i1 false}
!255 = !{ptr @__SCK__tp_func_svcrdma_decode_rseg, !253, !"__SCK__tp_func_svcrdma_decode_rseg", i1 false, i1 false}
!256 = !{ptr @__tracepoint_svcrdma_decode_wseg, !257, !"__tracepoint_svcrdma_decode_wseg", i1 false, i1 false}
!257 = !{!"../include/trace/events/rpcrdma.h", i32 1713, i32 1}
!258 = !{ptr @__tracepoint_ptr_svcrdma_decode_wseg, !257, !"__tracepoint_ptr_svcrdma_decode_wseg", i1 false, i1 false}
!259 = !{ptr @__SCK__tp_func_svcrdma_decode_wseg, !257, !"__SCK__tp_func_svcrdma_decode_wseg", i1 false, i1 false}
!260 = !{ptr @__tracepoint_svcrdma_err_vers, !261, !"__tracepoint_svcrdma_err_vers", i1 false, i1 false}
!261 = !{!"../include/trace/events/rpcrdma.h", i32 1777, i32 1}
!262 = !{ptr @__tracepoint_ptr_svcrdma_err_vers, !261, !"__tracepoint_ptr_svcrdma_err_vers", i1 false, i1 false}
!263 = !{ptr @__SCK__tp_func_svcrdma_err_vers, !261, !"__SCK__tp_func_svcrdma_err_vers", i1 false, i1 false}
!264 = !{ptr @__tracepoint_svcrdma_err_chunk, !265, !"__tracepoint_svcrdma_err_chunk", i1 false, i1 false}
!265 = !{!"../include/trace/events/rpcrdma.h", i32 1778, i32 1}
!266 = !{ptr @__tracepoint_ptr_svcrdma_err_chunk, !265, !"__tracepoint_ptr_svcrdma_err_chunk", i1 false, i1 false}
!267 = !{ptr @__SCK__tp_func_svcrdma_err_chunk, !265, !"__SCK__tp_func_svcrdma_err_chunk", i1 false, i1 false}
!268 = !{ptr @__tracepoint_svcrdma_dma_map_page, !269, !"__tracepoint_svcrdma_dma_map_page", i1 false, i1 false}
!269 = !{!"../include/trace/events/rpcrdma.h", i32 1822, i32 1}
!270 = !{ptr @__tracepoint_ptr_svcrdma_dma_map_page, !269, !"__tracepoint_ptr_svcrdma_dma_map_page", i1 false, i1 false}
!271 = !{ptr @__SCK__tp_func_svcrdma_dma_map_page, !269, !"__SCK__tp_func_svcrdma_dma_map_page", i1 false, i1 false}
!272 = !{ptr @__tracepoint_svcrdma_dma_map_err, !273, !"__tracepoint_svcrdma_dma_map_err", i1 false, i1 false}
!273 = !{!"../include/trace/events/rpcrdma.h", i32 1823, i32 1}
!274 = !{ptr @__tracepoint_ptr_svcrdma_dma_map_err, !273, !"__tracepoint_ptr_svcrdma_dma_map_err", i1 false, i1 false}
!275 = !{ptr @__SCK__tp_func_svcrdma_dma_map_err, !273, !"__SCK__tp_func_svcrdma_dma_map_err", i1 false, i1 false}
!276 = !{ptr @__tracepoint_svcrdma_dma_unmap_page, !277, !"__tracepoint_svcrdma_dma_unmap_page", i1 false, i1 false}
!277 = !{!"../include/trace/events/rpcrdma.h", i32 1824, i32 1}
!278 = !{ptr @__tracepoint_ptr_svcrdma_dma_unmap_page, !277, !"__tracepoint_ptr_svcrdma_dma_unmap_page", i1 false, i1 false}
!279 = !{ptr @__SCK__tp_func_svcrdma_dma_unmap_page, !277, !"__SCK__tp_func_svcrdma_dma_unmap_page", i1 false, i1 false}
!280 = !{ptr @__tracepoint_svcrdma_dma_map_rw_err, !281, !"__tracepoint_svcrdma_dma_map_rw_err", i1 false, i1 false}
!281 = !{!"../include/trace/events/rpcrdma.h", i32 1826, i32 1}
!282 = !{ptr @__tracepoint_ptr_svcrdma_dma_map_rw_err, !281, !"__tracepoint_ptr_svcrdma_dma_map_rw_err", i1 false, i1 false}
!283 = !{ptr @__SCK__tp_func_svcrdma_dma_map_rw_err, !281, !"__SCK__tp_func_svcrdma_dma_map_rw_err", i1 false, i1 false}
!284 = !{ptr @__tracepoint_svcrdma_no_rwctx_err, !285, !"__tracepoint_svcrdma_no_rwctx_err", i1 false, i1 false}
!285 = !{!"../include/trace/events/rpcrdma.h", i32 1855, i32 1}
!286 = !{ptr @__tracepoint_ptr_svcrdma_no_rwctx_err, !285, !"__tracepoint_ptr_svcrdma_no_rwctx_err", i1 false, i1 false}
!287 = !{ptr @__SCK__tp_func_svcrdma_no_rwctx_err, !285, !"__SCK__tp_func_svcrdma_no_rwctx_err", i1 false, i1 false}
!288 = !{ptr @__tracepoint_svcrdma_page_overrun_err, !289, !"__tracepoint_svcrdma_page_overrun_err", i1 false, i1 false}
!289 = !{!"../include/trace/events/rpcrdma.h", i32 1880, i32 1}
!290 = !{ptr @__tracepoint_ptr_svcrdma_page_overrun_err, !289, !"__tracepoint_ptr_svcrdma_page_overrun_err", i1 false, i1 false}
!291 = !{ptr @__SCK__tp_func_svcrdma_page_overrun_err, !289, !"__SCK__tp_func_svcrdma_page_overrun_err", i1 false, i1 false}
!292 = !{ptr @__tracepoint_svcrdma_small_wrch_err, !293, !"__tracepoint_svcrdma_small_wrch_err", i1 false, i1 false}
!293 = !{!"../include/trace/events/rpcrdma.h", i32 1908, i32 1}
!294 = !{ptr @__tracepoint_ptr_svcrdma_small_wrch_err, !293, !"__tracepoint_ptr_svcrdma_small_wrch_err", i1 false, i1 false}
!295 = !{ptr @__SCK__tp_func_svcrdma_small_wrch_err, !293, !"__SCK__tp_func_svcrdma_small_wrch_err", i1 false, i1 false}
!296 = !{ptr @__tracepoint_svcrdma_send_pullup, !297, !"__tracepoint_svcrdma_send_pullup", i1 false, i1 false}
!297 = !{!"../include/trace/events/rpcrdma.h", i32 1940, i32 1}
!298 = !{ptr @__tracepoint_ptr_svcrdma_send_pullup, !297, !"__tracepoint_ptr_svcrdma_send_pullup", i1 false, i1 false}
!299 = !{ptr @__SCK__tp_func_svcrdma_send_pullup, !297, !"__SCK__tp_func_svcrdma_send_pullup", i1 false, i1 false}
!300 = !{ptr @__tracepoint_svcrdma_send_err, !301, !"__tracepoint_svcrdma_send_err", i1 false, i1 false}
!301 = !{!"../include/trace/events/rpcrdma.h", i32 1968, i32 1}
!302 = !{ptr @__tracepoint_ptr_svcrdma_send_err, !301, !"__tracepoint_ptr_svcrdma_send_err", i1 false, i1 false}
!303 = !{ptr @__SCK__tp_func_svcrdma_send_err, !301, !"__SCK__tp_func_svcrdma_send_err", i1 false, i1 false}
!304 = !{ptr @__tracepoint_svcrdma_post_send, !305, !"__tracepoint_svcrdma_post_send", i1 false, i1 false}
!305 = !{!"../include/trace/events/rpcrdma.h", i32 1993, i32 1}
!306 = !{ptr @__tracepoint_ptr_svcrdma_post_send, !305, !"__tracepoint_ptr_svcrdma_post_send", i1 false, i1 false}
!307 = !{ptr @__SCK__tp_func_svcrdma_post_send, !305, !"__SCK__tp_func_svcrdma_post_send", i1 false, i1 false}
!308 = !{ptr @__tracepoint_svcrdma_wc_send, !309, !"__tracepoint_svcrdma_wc_send", i1 false, i1 false}
!309 = !{!"../include/trace/events/rpcrdma.h", i32 2023, i32 1}
!310 = !{ptr @__tracepoint_ptr_svcrdma_wc_send, !309, !"__tracepoint_ptr_svcrdma_wc_send", i1 false, i1 false}
!311 = !{ptr @__SCK__tp_func_svcrdma_wc_send, !309, !"__SCK__tp_func_svcrdma_wc_send", i1 false, i1 false}
!312 = !{ptr @__tracepoint_svcrdma_wc_send_flush, !313, !"__tracepoint_svcrdma_wc_send_flush", i1 false, i1 false}
!313 = !{!"../include/trace/events/rpcrdma.h", i32 2024, i32 1}
!314 = !{ptr @__tracepoint_ptr_svcrdma_wc_send_flush, !313, !"__tracepoint_ptr_svcrdma_wc_send_flush", i1 false, i1 false}
!315 = !{ptr @__SCK__tp_func_svcrdma_wc_send_flush, !313, !"__SCK__tp_func_svcrdma_wc_send_flush", i1 false, i1 false}
!316 = !{ptr @__tracepoint_svcrdma_wc_send_err, !317, !"__tracepoint_svcrdma_wc_send_err", i1 false, i1 false}
!317 = !{!"../include/trace/events/rpcrdma.h", i32 2025, i32 1}
!318 = !{ptr @__tracepoint_ptr_svcrdma_wc_send_err, !317, !"__tracepoint_ptr_svcrdma_wc_send_err", i1 false, i1 false}
!319 = !{ptr @__SCK__tp_func_svcrdma_wc_send_err, !317, !"__SCK__tp_func_svcrdma_wc_send_err", i1 false, i1 false}
!320 = !{ptr @__tracepoint_svcrdma_post_recv, !321, !"__tracepoint_svcrdma_post_recv", i1 false, i1 false}
!321 = !{!"../include/trace/events/rpcrdma.h", i32 2027, i32 1}
!322 = !{ptr @__tracepoint_ptr_svcrdma_post_recv, !321, !"__tracepoint_ptr_svcrdma_post_recv", i1 false, i1 false}
!323 = !{ptr @__SCK__tp_func_svcrdma_post_recv, !321, !"__SCK__tp_func_svcrdma_post_recv", i1 false, i1 false}
!324 = !{ptr @__tracepoint_svcrdma_wc_recv, !325, !"__tracepoint_svcrdma_wc_recv", i1 false, i1 false}
!325 = !{!"../include/trace/events/rpcrdma.h", i32 2049, i32 1}
!326 = !{ptr @__tracepoint_ptr_svcrdma_wc_recv, !325, !"__tracepoint_ptr_svcrdma_wc_recv", i1 false, i1 false}
!327 = !{ptr @__SCK__tp_func_svcrdma_wc_recv, !325, !"__SCK__tp_func_svcrdma_wc_recv", i1 false, i1 false}
!328 = !{ptr @__tracepoint_svcrdma_wc_recv_flush, !329, !"__tracepoint_svcrdma_wc_recv_flush", i1 false, i1 false}
!329 = !{!"../include/trace/events/rpcrdma.h", i32 2050, i32 1}
!330 = !{ptr @__tracepoint_ptr_svcrdma_wc_recv_flush, !329, !"__tracepoint_ptr_svcrdma_wc_recv_flush", i1 false, i1 false}
!331 = !{ptr @__SCK__tp_func_svcrdma_wc_recv_flush, !329, !"__SCK__tp_func_svcrdma_wc_recv_flush", i1 false, i1 false}
!332 = !{ptr @__tracepoint_svcrdma_wc_recv_err, !333, !"__tracepoint_svcrdma_wc_recv_err", i1 false, i1 false}
!333 = !{!"../include/trace/events/rpcrdma.h", i32 2051, i32 1}
!334 = !{ptr @__tracepoint_ptr_svcrdma_wc_recv_err, !333, !"__tracepoint_ptr_svcrdma_wc_recv_err", i1 false, i1 false}
!335 = !{ptr @__SCK__tp_func_svcrdma_wc_recv_err, !333, !"__SCK__tp_func_svcrdma_wc_recv_err", i1 false, i1 false}
!336 = !{ptr @__tracepoint_svcrdma_rq_post_err, !337, !"__tracepoint_svcrdma_rq_post_err", i1 false, i1 false}
!337 = !{!"../include/trace/events/rpcrdma.h", i32 2053, i32 1}
!338 = !{ptr @__tracepoint_ptr_svcrdma_rq_post_err, !337, !"__tracepoint_ptr_svcrdma_rq_post_err", i1 false, i1 false}
!339 = !{ptr @__SCK__tp_func_svcrdma_rq_post_err, !337, !"__SCK__tp_func_svcrdma_rq_post_err", i1 false, i1 false}
!340 = !{ptr @__tracepoint_svcrdma_post_read_chunk, !341, !"__tracepoint_svcrdma_post_read_chunk", i1 false, i1 false}
!341 = !{!"../include/trace/events/rpcrdma.h", i32 2111, i32 1}
!342 = !{ptr @__tracepoint_ptr_svcrdma_post_read_chunk, !341, !"__tracepoint_ptr_svcrdma_post_read_chunk", i1 false, i1 false}
!343 = !{ptr @__SCK__tp_func_svcrdma_post_read_chunk, !341, !"__SCK__tp_func_svcrdma_post_read_chunk", i1 false, i1 false}
!344 = !{ptr @__tracepoint_svcrdma_post_write_chunk, !345, !"__tracepoint_svcrdma_post_write_chunk", i1 false, i1 false}
!345 = !{!"../include/trace/events/rpcrdma.h", i32 2112, i32 1}
!346 = !{ptr @__tracepoint_ptr_svcrdma_post_write_chunk, !345, !"__tracepoint_ptr_svcrdma_post_write_chunk", i1 false, i1 false}
!347 = !{ptr @__SCK__tp_func_svcrdma_post_write_chunk, !345, !"__SCK__tp_func_svcrdma_post_write_chunk", i1 false, i1 false}
!348 = !{ptr @__tracepoint_svcrdma_post_reply_chunk, !349, !"__tracepoint_svcrdma_post_reply_chunk", i1 false, i1 false}
!349 = !{!"../include/trace/events/rpcrdma.h", i32 2113, i32 1}
!350 = !{ptr @__tracepoint_ptr_svcrdma_post_reply_chunk, !349, !"__tracepoint_ptr_svcrdma_post_reply_chunk", i1 false, i1 false}
!351 = !{ptr @__SCK__tp_func_svcrdma_post_reply_chunk, !349, !"__SCK__tp_func_svcrdma_post_reply_chunk", i1 false, i1 false}
!352 = !{ptr @__tracepoint_svcrdma_wc_read, !353, !"__tracepoint_svcrdma_wc_read", i1 false, i1 false}
!353 = !{!"../include/trace/events/rpcrdma.h", i32 2115, i32 1}
!354 = !{ptr @__tracepoint_ptr_svcrdma_wc_read, !353, !"__tracepoint_ptr_svcrdma_wc_read", i1 false, i1 false}
!355 = !{ptr @__SCK__tp_func_svcrdma_wc_read, !353, !"__SCK__tp_func_svcrdma_wc_read", i1 false, i1 false}
!356 = !{ptr @__tracepoint_svcrdma_wc_read_flush, !357, !"__tracepoint_svcrdma_wc_read_flush", i1 false, i1 false}
!357 = !{!"../include/trace/events/rpcrdma.h", i32 2145, i32 1}
!358 = !{ptr @__tracepoint_ptr_svcrdma_wc_read_flush, !357, !"__tracepoint_ptr_svcrdma_wc_read_flush", i1 false, i1 false}
!359 = !{ptr @__SCK__tp_func_svcrdma_wc_read_flush, !357, !"__SCK__tp_func_svcrdma_wc_read_flush", i1 false, i1 false}
!360 = !{ptr @__tracepoint_svcrdma_wc_read_err, !361, !"__tracepoint_svcrdma_wc_read_err", i1 false, i1 false}
!361 = !{!"../include/trace/events/rpcrdma.h", i32 2146, i32 1}
!362 = !{ptr @__tracepoint_ptr_svcrdma_wc_read_err, !361, !"__tracepoint_ptr_svcrdma_wc_read_err", i1 false, i1 false}
!363 = !{ptr @__SCK__tp_func_svcrdma_wc_read_err, !361, !"__SCK__tp_func_svcrdma_wc_read_err", i1 false, i1 false}
!364 = !{ptr @__tracepoint_svcrdma_wc_write, !365, !"__tracepoint_svcrdma_wc_write", i1 false, i1 false}
!365 = !{!"../include/trace/events/rpcrdma.h", i32 2148, i32 1}
!366 = !{ptr @__tracepoint_ptr_svcrdma_wc_write, !365, !"__tracepoint_ptr_svcrdma_wc_write", i1 false, i1 false}
!367 = !{ptr @__SCK__tp_func_svcrdma_wc_write, !365, !"__SCK__tp_func_svcrdma_wc_write", i1 false, i1 false}
!368 = !{ptr @__tracepoint_svcrdma_wc_write_flush, !369, !"__tracepoint_svcrdma_wc_write_flush", i1 false, i1 false}
!369 = !{!"../include/trace/events/rpcrdma.h", i32 2149, i32 1}
!370 = !{ptr @__tracepoint_ptr_svcrdma_wc_write_flush, !369, !"__tracepoint_ptr_svcrdma_wc_write_flush", i1 false, i1 false}
!371 = !{ptr @__SCK__tp_func_svcrdma_wc_write_flush, !369, !"__SCK__tp_func_svcrdma_wc_write_flush", i1 false, i1 false}
!372 = !{ptr @__tracepoint_svcrdma_wc_write_err, !373, !"__tracepoint_svcrdma_wc_write_err", i1 false, i1 false}
!373 = !{!"../include/trace/events/rpcrdma.h", i32 2150, i32 1}
!374 = !{ptr @__tracepoint_ptr_svcrdma_wc_write_err, !373, !"__tracepoint_ptr_svcrdma_wc_write_err", i1 false, i1 false}
!375 = !{ptr @__SCK__tp_func_svcrdma_wc_write_err, !373, !"__SCK__tp_func_svcrdma_wc_write_err", i1 false, i1 false}
!376 = !{ptr @__tracepoint_svcrdma_qp_error, !377, !"__tracepoint_svcrdma_qp_error", i1 false, i1 false}
!377 = !{!"../include/trace/events/rpcrdma.h", i32 2152, i32 1}
!378 = !{ptr @__tracepoint_ptr_svcrdma_qp_error, !377, !"__tracepoint_ptr_svcrdma_qp_error", i1 false, i1 false}
!379 = !{ptr @__SCK__tp_func_svcrdma_qp_error, !377, !"__SCK__tp_func_svcrdma_qp_error", i1 false, i1 false}
!380 = !{ptr @__tracepoint_svcrdma_sq_full, !381, !"__tracepoint_svcrdma_sq_full", i1 false, i1 false}
!381 = !{!"../include/trace/events/rpcrdma.h", i32 2210, i32 1}
!382 = !{ptr @__tracepoint_ptr_svcrdma_sq_full, !381, !"__tracepoint_ptr_svcrdma_sq_full", i1 false, i1 false}
!383 = !{ptr @__SCK__tp_func_svcrdma_sq_full, !381, !"__SCK__tp_func_svcrdma_sq_full", i1 false, i1 false}
!384 = !{ptr @__tracepoint_svcrdma_sq_retry, !385, !"__tracepoint_svcrdma_sq_retry", i1 false, i1 false}
!385 = !{!"../include/trace/events/rpcrdma.h", i32 2211, i32 1}
!386 = !{ptr @__tracepoint_ptr_svcrdma_sq_retry, !385, !"__tracepoint_ptr_svcrdma_sq_retry", i1 false, i1 false}
!387 = !{ptr @__SCK__tp_func_svcrdma_sq_retry, !385, !"__SCK__tp_func_svcrdma_sq_retry", i1 false, i1 false}
!388 = !{ptr @__tracepoint_svcrdma_sq_post_err, !389, !"__tracepoint_svcrdma_sq_post_err", i1 false, i1 false}
!389 = !{!"../include/trace/events/rpcrdma.h", i32 2213, i32 1}
!390 = !{ptr @__tracepoint_ptr_svcrdma_sq_post_err, !389, !"__tracepoint_ptr_svcrdma_sq_post_err", i1 false, i1 false}
!391 = !{ptr @__SCK__tp_func_svcrdma_sq_post_err, !389, !"__SCK__tp_func_svcrdma_sq_post_err", i1 false, i1 false}
!392 = !{ptr @.str, !393, !"<string literal>", i1 false, i1 false}
!393 = !{!"../include/trace/events/rdma.h", i32 37, i32 1}
!394 = !{ptr @__TRACE_SYSTEM_IB_EVENT_CQ_ERR, !393, !"__TRACE_SYSTEM_IB_EVENT_CQ_ERR", i1 false, i1 false}
!395 = !{ptr @TRACE_SYSTEM_IB_EVENT_CQ_ERR, !393, !"TRACE_SYSTEM_IB_EVENT_CQ_ERR", i1 false, i1 false}
!396 = !{ptr @.str.1, !393, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @__TRACE_SYSTEM_IB_EVENT_QP_FATAL, !393, !"__TRACE_SYSTEM_IB_EVENT_QP_FATAL", i1 false, i1 false}
!398 = !{ptr @TRACE_SYSTEM_IB_EVENT_QP_FATAL, !393, !"TRACE_SYSTEM_IB_EVENT_QP_FATAL", i1 false, i1 false}
!399 = !{ptr @.str.2, !393, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @__TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR, !393, !"__TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR", i1 false, i1 false}
!401 = !{ptr @TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR, !393, !"TRACE_SYSTEM_IB_EVENT_QP_REQ_ERR", i1 false, i1 false}
!402 = !{ptr @.str.3, !393, !"<string literal>", i1 false, i1 false}
!403 = !{ptr @__TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR, !393, !"__TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR", i1 false, i1 false}
!404 = !{ptr @TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR, !393, !"TRACE_SYSTEM_IB_EVENT_QP_ACCESS_ERR", i1 false, i1 false}
!405 = !{ptr @.str.4, !393, !"<string literal>", i1 false, i1 false}
!406 = !{ptr @__TRACE_SYSTEM_IB_EVENT_COMM_EST, !393, !"__TRACE_SYSTEM_IB_EVENT_COMM_EST", i1 false, i1 false}
!407 = !{ptr @TRACE_SYSTEM_IB_EVENT_COMM_EST, !393, !"TRACE_SYSTEM_IB_EVENT_COMM_EST", i1 false, i1 false}
!408 = !{ptr @.str.5, !393, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @__TRACE_SYSTEM_IB_EVENT_SQ_DRAINED, !393, !"__TRACE_SYSTEM_IB_EVENT_SQ_DRAINED", i1 false, i1 false}
!410 = !{ptr @TRACE_SYSTEM_IB_EVENT_SQ_DRAINED, !393, !"TRACE_SYSTEM_IB_EVENT_SQ_DRAINED", i1 false, i1 false}
!411 = !{ptr @.str.6, !393, !"<string literal>", i1 false, i1 false}
!412 = !{ptr @__TRACE_SYSTEM_IB_EVENT_PATH_MIG, !393, !"__TRACE_SYSTEM_IB_EVENT_PATH_MIG", i1 false, i1 false}
!413 = !{ptr @TRACE_SYSTEM_IB_EVENT_PATH_MIG, !393, !"TRACE_SYSTEM_IB_EVENT_PATH_MIG", i1 false, i1 false}
!414 = !{ptr @.str.7, !393, !"<string literal>", i1 false, i1 false}
!415 = !{ptr @__TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR, !393, !"__TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR", i1 false, i1 false}
!416 = !{ptr @TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR, !393, !"TRACE_SYSTEM_IB_EVENT_PATH_MIG_ERR", i1 false, i1 false}
!417 = !{ptr @.str.8, !393, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @__TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL, !393, !"__TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL", i1 false, i1 false}
!419 = !{ptr @TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL, !393, !"TRACE_SYSTEM_IB_EVENT_DEVICE_FATAL", i1 false, i1 false}
!420 = !{ptr @.str.9, !393, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @__TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE, !393, !"__TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE", i1 false, i1 false}
!422 = !{ptr @TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE, !393, !"TRACE_SYSTEM_IB_EVENT_PORT_ACTIVE", i1 false, i1 false}
!423 = !{ptr @.str.10, !393, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @__TRACE_SYSTEM_IB_EVENT_PORT_ERR, !393, !"__TRACE_SYSTEM_IB_EVENT_PORT_ERR", i1 false, i1 false}
!425 = !{ptr @TRACE_SYSTEM_IB_EVENT_PORT_ERR, !393, !"TRACE_SYSTEM_IB_EVENT_PORT_ERR", i1 false, i1 false}
!426 = !{ptr @.str.11, !393, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @__TRACE_SYSTEM_IB_EVENT_LID_CHANGE, !393, !"__TRACE_SYSTEM_IB_EVENT_LID_CHANGE", i1 false, i1 false}
!428 = !{ptr @TRACE_SYSTEM_IB_EVENT_LID_CHANGE, !393, !"TRACE_SYSTEM_IB_EVENT_LID_CHANGE", i1 false, i1 false}
!429 = !{ptr @.str.12, !393, !"<string literal>", i1 false, i1 false}
!430 = !{ptr @__TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE, !393, !"__TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE", i1 false, i1 false}
!431 = !{ptr @TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE, !393, !"TRACE_SYSTEM_IB_EVENT_PKEY_CHANGE", i1 false, i1 false}
!432 = !{ptr @.str.13, !393, !"<string literal>", i1 false, i1 false}
!433 = !{ptr @__TRACE_SYSTEM_IB_EVENT_SM_CHANGE, !393, !"__TRACE_SYSTEM_IB_EVENT_SM_CHANGE", i1 false, i1 false}
!434 = !{ptr @TRACE_SYSTEM_IB_EVENT_SM_CHANGE, !393, !"TRACE_SYSTEM_IB_EVENT_SM_CHANGE", i1 false, i1 false}
!435 = !{ptr @.str.14, !393, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @__TRACE_SYSTEM_IB_EVENT_SRQ_ERR, !393, !"__TRACE_SYSTEM_IB_EVENT_SRQ_ERR", i1 false, i1 false}
!437 = !{ptr @TRACE_SYSTEM_IB_EVENT_SRQ_ERR, !393, !"TRACE_SYSTEM_IB_EVENT_SRQ_ERR", i1 false, i1 false}
!438 = !{ptr @.str.15, !393, !"<string literal>", i1 false, i1 false}
!439 = !{ptr @__TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED, !393, !"__TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED", i1 false, i1 false}
!440 = !{ptr @TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED, !393, !"TRACE_SYSTEM_IB_EVENT_SRQ_LIMIT_REACHED", i1 false, i1 false}
!441 = !{ptr @.str.16, !393, !"<string literal>", i1 false, i1 false}
!442 = !{ptr @__TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED, !393, !"__TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED", i1 false, i1 false}
!443 = !{ptr @TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED, !393, !"TRACE_SYSTEM_IB_EVENT_QP_LAST_WQE_REACHED", i1 false, i1 false}
!444 = !{ptr @.str.17, !393, !"<string literal>", i1 false, i1 false}
!445 = !{ptr @__TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER, !393, !"__TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER", i1 false, i1 false}
!446 = !{ptr @TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER, !393, !"TRACE_SYSTEM_IB_EVENT_CLIENT_REREGISTER", i1 false, i1 false}
!447 = !{ptr @.str.18, !393, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @__TRACE_SYSTEM_IB_EVENT_GID_CHANGE, !393, !"__TRACE_SYSTEM_IB_EVENT_GID_CHANGE", i1 false, i1 false}
!449 = !{ptr @TRACE_SYSTEM_IB_EVENT_GID_CHANGE, !393, !"TRACE_SYSTEM_IB_EVENT_GID_CHANGE", i1 false, i1 false}
!450 = !{ptr @.str.19, !393, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @__TRACE_SYSTEM_IB_EVENT_WQ_FATAL, !393, !"__TRACE_SYSTEM_IB_EVENT_WQ_FATAL", i1 false, i1 false}
!452 = !{ptr @TRACE_SYSTEM_IB_EVENT_WQ_FATAL, !393, !"TRACE_SYSTEM_IB_EVENT_WQ_FATAL", i1 false, i1 false}
!453 = !{ptr @.str.20, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../include/trace/events/rdma.h", i32 81, i32 1}
!455 = !{ptr @__TRACE_SYSTEM_IB_WC_SUCCESS, !454, !"__TRACE_SYSTEM_IB_WC_SUCCESS", i1 false, i1 false}
!456 = !{ptr @TRACE_SYSTEM_IB_WC_SUCCESS, !454, !"TRACE_SYSTEM_IB_WC_SUCCESS", i1 false, i1 false}
!457 = !{ptr @.str.21, !454, !"<string literal>", i1 false, i1 false}
!458 = !{ptr @__TRACE_SYSTEM_IB_WC_LOC_LEN_ERR, !454, !"__TRACE_SYSTEM_IB_WC_LOC_LEN_ERR", i1 false, i1 false}
!459 = !{ptr @TRACE_SYSTEM_IB_WC_LOC_LEN_ERR, !454, !"TRACE_SYSTEM_IB_WC_LOC_LEN_ERR", i1 false, i1 false}
!460 = !{ptr @.str.22, !454, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @__TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR, !454, !"__TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR", i1 false, i1 false}
!462 = !{ptr @TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR, !454, !"TRACE_SYSTEM_IB_WC_LOC_QP_OP_ERR", i1 false, i1 false}
!463 = !{ptr @.str.23, !454, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @__TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR, !454, !"__TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR", i1 false, i1 false}
!465 = !{ptr @TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR, !454, !"TRACE_SYSTEM_IB_WC_LOC_EEC_OP_ERR", i1 false, i1 false}
!466 = !{ptr @.str.24, !454, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @__TRACE_SYSTEM_IB_WC_LOC_PROT_ERR, !454, !"__TRACE_SYSTEM_IB_WC_LOC_PROT_ERR", i1 false, i1 false}
!468 = !{ptr @TRACE_SYSTEM_IB_WC_LOC_PROT_ERR, !454, !"TRACE_SYSTEM_IB_WC_LOC_PROT_ERR", i1 false, i1 false}
!469 = !{ptr @.str.25, !454, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @__TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR, !454, !"__TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR", i1 false, i1 false}
!471 = !{ptr @TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR, !454, !"TRACE_SYSTEM_IB_WC_WR_FLUSH_ERR", i1 false, i1 false}
!472 = !{ptr @.str.26, !454, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @__TRACE_SYSTEM_IB_WC_MW_BIND_ERR, !454, !"__TRACE_SYSTEM_IB_WC_MW_BIND_ERR", i1 false, i1 false}
!474 = !{ptr @TRACE_SYSTEM_IB_WC_MW_BIND_ERR, !454, !"TRACE_SYSTEM_IB_WC_MW_BIND_ERR", i1 false, i1 false}
!475 = !{ptr @.str.27, !454, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @__TRACE_SYSTEM_IB_WC_BAD_RESP_ERR, !454, !"__TRACE_SYSTEM_IB_WC_BAD_RESP_ERR", i1 false, i1 false}
!477 = !{ptr @TRACE_SYSTEM_IB_WC_BAD_RESP_ERR, !454, !"TRACE_SYSTEM_IB_WC_BAD_RESP_ERR", i1 false, i1 false}
!478 = !{ptr @.str.28, !454, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @__TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR, !454, !"__TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR", i1 false, i1 false}
!480 = !{ptr @TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR, !454, !"TRACE_SYSTEM_IB_WC_LOC_ACCESS_ERR", i1 false, i1 false}
!481 = !{ptr @.str.29, !454, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @__TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR, !454, !"__TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR", i1 false, i1 false}
!483 = !{ptr @TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR, !454, !"TRACE_SYSTEM_IB_WC_REM_INV_REQ_ERR", i1 false, i1 false}
!484 = !{ptr @.str.30, !454, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @__TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR, !454, !"__TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR", i1 false, i1 false}
!486 = !{ptr @TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR, !454, !"TRACE_SYSTEM_IB_WC_REM_ACCESS_ERR", i1 false, i1 false}
!487 = !{ptr @.str.31, !454, !"<string literal>", i1 false, i1 false}
!488 = !{ptr @__TRACE_SYSTEM_IB_WC_REM_OP_ERR, !454, !"__TRACE_SYSTEM_IB_WC_REM_OP_ERR", i1 false, i1 false}
!489 = !{ptr @TRACE_SYSTEM_IB_WC_REM_OP_ERR, !454, !"TRACE_SYSTEM_IB_WC_REM_OP_ERR", i1 false, i1 false}
!490 = !{ptr @.str.32, !454, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @__TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR, !454, !"__TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR", i1 false, i1 false}
!492 = !{ptr @TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR, !454, !"TRACE_SYSTEM_IB_WC_RETRY_EXC_ERR", i1 false, i1 false}
!493 = !{ptr @.str.33, !454, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @__TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR, !454, !"__TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR", i1 false, i1 false}
!495 = !{ptr @TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR, !454, !"TRACE_SYSTEM_IB_WC_RNR_RETRY_EXC_ERR", i1 false, i1 false}
!496 = !{ptr @.str.34, !454, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @__TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR, !454, !"__TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR", i1 false, i1 false}
!498 = !{ptr @TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR, !454, !"TRACE_SYSTEM_IB_WC_LOC_RDD_VIOL_ERR", i1 false, i1 false}
!499 = !{ptr @.str.35, !454, !"<string literal>", i1 false, i1 false}
!500 = !{ptr @__TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR, !454, !"__TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR", i1 false, i1 false}
!501 = !{ptr @TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR, !454, !"TRACE_SYSTEM_IB_WC_REM_INV_RD_REQ_ERR", i1 false, i1 false}
!502 = !{ptr @.str.36, !454, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @__TRACE_SYSTEM_IB_WC_REM_ABORT_ERR, !454, !"__TRACE_SYSTEM_IB_WC_REM_ABORT_ERR", i1 false, i1 false}
!504 = !{ptr @TRACE_SYSTEM_IB_WC_REM_ABORT_ERR, !454, !"TRACE_SYSTEM_IB_WC_REM_ABORT_ERR", i1 false, i1 false}
!505 = !{ptr @.str.37, !454, !"<string literal>", i1 false, i1 false}
!506 = !{ptr @__TRACE_SYSTEM_IB_WC_INV_EECN_ERR, !454, !"__TRACE_SYSTEM_IB_WC_INV_EECN_ERR", i1 false, i1 false}
!507 = !{ptr @TRACE_SYSTEM_IB_WC_INV_EECN_ERR, !454, !"TRACE_SYSTEM_IB_WC_INV_EECN_ERR", i1 false, i1 false}
!508 = !{ptr @.str.38, !454, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @__TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR, !454, !"__TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR", i1 false, i1 false}
!510 = !{ptr @TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR, !454, !"TRACE_SYSTEM_IB_WC_INV_EEC_STATE_ERR", i1 false, i1 false}
!511 = !{ptr @.str.39, !454, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @__TRACE_SYSTEM_IB_WC_FATAL_ERR, !454, !"__TRACE_SYSTEM_IB_WC_FATAL_ERR", i1 false, i1 false}
!513 = !{ptr @TRACE_SYSTEM_IB_WC_FATAL_ERR, !454, !"TRACE_SYSTEM_IB_WC_FATAL_ERR", i1 false, i1 false}
!514 = !{ptr @.str.40, !454, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @__TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR, !454, !"__TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR", i1 false, i1 false}
!516 = !{ptr @TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR, !454, !"TRACE_SYSTEM_IB_WC_RESP_TIMEOUT_ERR", i1 false, i1 false}
!517 = !{ptr @.str.41, !454, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @__TRACE_SYSTEM_IB_WC_GENERAL_ERR, !454, !"__TRACE_SYSTEM_IB_WC_GENERAL_ERR", i1 false, i1 false}
!519 = !{ptr @TRACE_SYSTEM_IB_WC_GENERAL_ERR, !454, !"TRACE_SYSTEM_IB_WC_GENERAL_ERR", i1 false, i1 false}
!520 = !{ptr @.str.42, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../include/trace/events/rdma.h", i32 121, i32 1}
!522 = !{ptr @__TRACE_SYSTEM_IB_CM_REQ_ERROR, !521, !"__TRACE_SYSTEM_IB_CM_REQ_ERROR", i1 false, i1 false}
!523 = !{ptr @TRACE_SYSTEM_IB_CM_REQ_ERROR, !521, !"TRACE_SYSTEM_IB_CM_REQ_ERROR", i1 false, i1 false}
!524 = !{ptr @.str.43, !521, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @__TRACE_SYSTEM_IB_CM_REQ_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_REQ_RECEIVED", i1 false, i1 false}
!526 = !{ptr @TRACE_SYSTEM_IB_CM_REQ_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_REQ_RECEIVED", i1 false, i1 false}
!527 = !{ptr @.str.44, !521, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @__TRACE_SYSTEM_IB_CM_REP_ERROR, !521, !"__TRACE_SYSTEM_IB_CM_REP_ERROR", i1 false, i1 false}
!529 = !{ptr @TRACE_SYSTEM_IB_CM_REP_ERROR, !521, !"TRACE_SYSTEM_IB_CM_REP_ERROR", i1 false, i1 false}
!530 = !{ptr @.str.45, !521, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @__TRACE_SYSTEM_IB_CM_REP_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_REP_RECEIVED", i1 false, i1 false}
!532 = !{ptr @TRACE_SYSTEM_IB_CM_REP_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_REP_RECEIVED", i1 false, i1 false}
!533 = !{ptr @.str.46, !521, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @__TRACE_SYSTEM_IB_CM_RTU_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_RTU_RECEIVED", i1 false, i1 false}
!535 = !{ptr @TRACE_SYSTEM_IB_CM_RTU_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_RTU_RECEIVED", i1 false, i1 false}
!536 = !{ptr @.str.47, !521, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @__TRACE_SYSTEM_IB_CM_USER_ESTABLISHED, !521, !"__TRACE_SYSTEM_IB_CM_USER_ESTABLISHED", i1 false, i1 false}
!538 = !{ptr @TRACE_SYSTEM_IB_CM_USER_ESTABLISHED, !521, !"TRACE_SYSTEM_IB_CM_USER_ESTABLISHED", i1 false, i1 false}
!539 = !{ptr @.str.48, !521, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @__TRACE_SYSTEM_IB_CM_DREQ_ERROR, !521, !"__TRACE_SYSTEM_IB_CM_DREQ_ERROR", i1 false, i1 false}
!541 = !{ptr @TRACE_SYSTEM_IB_CM_DREQ_ERROR, !521, !"TRACE_SYSTEM_IB_CM_DREQ_ERROR", i1 false, i1 false}
!542 = !{ptr @.str.49, !521, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @__TRACE_SYSTEM_IB_CM_DREQ_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_DREQ_RECEIVED", i1 false, i1 false}
!544 = !{ptr @TRACE_SYSTEM_IB_CM_DREQ_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_DREQ_RECEIVED", i1 false, i1 false}
!545 = !{ptr @.str.50, !521, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @__TRACE_SYSTEM_IB_CM_DREP_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_DREP_RECEIVED", i1 false, i1 false}
!547 = !{ptr @TRACE_SYSTEM_IB_CM_DREP_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_DREP_RECEIVED", i1 false, i1 false}
!548 = !{ptr @.str.51, !521, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @__TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT, !521, !"__TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT", i1 false, i1 false}
!550 = !{ptr @TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT, !521, !"TRACE_SYSTEM_IB_CM_TIMEWAIT_EXIT", i1 false, i1 false}
!551 = !{ptr @.str.52, !521, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @__TRACE_SYSTEM_IB_CM_MRA_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_MRA_RECEIVED", i1 false, i1 false}
!553 = !{ptr @TRACE_SYSTEM_IB_CM_MRA_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_MRA_RECEIVED", i1 false, i1 false}
!554 = !{ptr @.str.53, !521, !"<string literal>", i1 false, i1 false}
!555 = !{ptr @__TRACE_SYSTEM_IB_CM_REJ_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_REJ_RECEIVED", i1 false, i1 false}
!556 = !{ptr @TRACE_SYSTEM_IB_CM_REJ_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_REJ_RECEIVED", i1 false, i1 false}
!557 = !{ptr @.str.54, !521, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @__TRACE_SYSTEM_IB_CM_LAP_ERROR, !521, !"__TRACE_SYSTEM_IB_CM_LAP_ERROR", i1 false, i1 false}
!559 = !{ptr @TRACE_SYSTEM_IB_CM_LAP_ERROR, !521, !"TRACE_SYSTEM_IB_CM_LAP_ERROR", i1 false, i1 false}
!560 = !{ptr @.str.55, !521, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @__TRACE_SYSTEM_IB_CM_LAP_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_LAP_RECEIVED", i1 false, i1 false}
!562 = !{ptr @TRACE_SYSTEM_IB_CM_LAP_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_LAP_RECEIVED", i1 false, i1 false}
!563 = !{ptr @.str.56, !521, !"<string literal>", i1 false, i1 false}
!564 = !{ptr @__TRACE_SYSTEM_IB_CM_APR_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_APR_RECEIVED", i1 false, i1 false}
!565 = !{ptr @TRACE_SYSTEM_IB_CM_APR_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_APR_RECEIVED", i1 false, i1 false}
!566 = !{ptr @.str.57, !521, !"<string literal>", i1 false, i1 false}
!567 = !{ptr @__TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR, !521, !"__TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR", i1 false, i1 false}
!568 = !{ptr @TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR, !521, !"TRACE_SYSTEM_IB_CM_SIDR_REQ_ERROR", i1 false, i1 false}
!569 = !{ptr @.str.58, !521, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @__TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED", i1 false, i1 false}
!571 = !{ptr @TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_SIDR_REQ_RECEIVED", i1 false, i1 false}
!572 = !{ptr @.str.59, !521, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @__TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED, !521, !"__TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED", i1 false, i1 false}
!574 = !{ptr @TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED, !521, !"TRACE_SYSTEM_IB_CM_SIDR_REP_RECEIVED", i1 false, i1 false}
!575 = !{ptr @.str.60, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../include/trace/events/rdma.h", i32 159, i32 1}
!577 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED", i1 false, i1 false}
!578 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_RESOLVED", i1 false, i1 false}
!579 = !{ptr @.str.61, !576, !"<string literal>", i1 false, i1 false}
!580 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR", i1 false, i1 false}
!581 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_ERROR", i1 false, i1 false}
!582 = !{ptr @.str.62, !576, !"<string literal>", i1 false, i1 false}
!583 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED", i1 false, i1 false}
!584 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_RESOLVED", i1 false, i1 false}
!585 = !{ptr @.str.63, !576, !"<string literal>", i1 false, i1 false}
!586 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR", i1 false, i1 false}
!587 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_ROUTE_ERROR", i1 false, i1 false}
!588 = !{ptr @.str.64, !576, !"<string literal>", i1 false, i1 false}
!589 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST", i1 false, i1 false}
!590 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_REQUEST", i1 false, i1 false}
!591 = !{ptr @.str.65, !576, !"<string literal>", i1 false, i1 false}
!592 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE", i1 false, i1 false}
!593 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_RESPONSE", i1 false, i1 false}
!594 = !{ptr @.str.66, !576, !"<string literal>", i1 false, i1 false}
!595 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR", i1 false, i1 false}
!596 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_CONNECT_ERROR", i1 false, i1 false}
!597 = !{ptr @.str.67, !576, !"<string literal>", i1 false, i1 false}
!598 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE", i1 false, i1 false}
!599 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_UNREACHABLE", i1 false, i1 false}
!600 = !{ptr @.str.68, !576, !"<string literal>", i1 false, i1 false}
!601 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED", i1 false, i1 false}
!602 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_REJECTED", i1 false, i1 false}
!603 = !{ptr @.str.69, !576, !"<string literal>", i1 false, i1 false}
!604 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED", i1 false, i1 false}
!605 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_ESTABLISHED", i1 false, i1 false}
!606 = !{ptr @.str.70, !576, !"<string literal>", i1 false, i1 false}
!607 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED", i1 false, i1 false}
!608 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_DISCONNECTED", i1 false, i1 false}
!609 = !{ptr @.str.71, !576, !"<string literal>", i1 false, i1 false}
!610 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL", i1 false, i1 false}
!611 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_DEVICE_REMOVAL", i1 false, i1 false}
!612 = !{ptr @.str.72, !576, !"<string literal>", i1 false, i1 false}
!613 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN", i1 false, i1 false}
!614 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_JOIN", i1 false, i1 false}
!615 = !{ptr @.str.73, !576, !"<string literal>", i1 false, i1 false}
!616 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR", i1 false, i1 false}
!617 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_MULTICAST_ERROR", i1 false, i1 false}
!618 = !{ptr @.str.74, !576, !"<string literal>", i1 false, i1 false}
!619 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE", i1 false, i1 false}
!620 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_ADDR_CHANGE", i1 false, i1 false}
!621 = !{ptr @.str.75, !576, !"<string literal>", i1 false, i1 false}
!622 = !{ptr @__TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT, !576, !"__TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT", i1 false, i1 false}
!623 = !{ptr @TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT, !576, !"TRACE_SYSTEM_RDMA_CM_EVENT_TIMEWAIT_EXIT", i1 false, i1 false}
!624 = !{ptr @.str.76, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../include/trace/events/rpcrdma.h", i32 489, i32 1}
!626 = !{ptr @__TRACE_SYSTEM_DMA_BIDIRECTIONAL, !625, !"__TRACE_SYSTEM_DMA_BIDIRECTIONAL", i1 false, i1 false}
!627 = !{ptr @TRACE_SYSTEM_DMA_BIDIRECTIONAL, !625, !"TRACE_SYSTEM_DMA_BIDIRECTIONAL", i1 false, i1 false}
!628 = !{ptr @.str.77, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../include/trace/events/rpcrdma.h", i32 490, i32 1}
!630 = !{ptr @__TRACE_SYSTEM_DMA_TO_DEVICE, !629, !"__TRACE_SYSTEM_DMA_TO_DEVICE", i1 false, i1 false}
!631 = !{ptr @TRACE_SYSTEM_DMA_TO_DEVICE, !629, !"TRACE_SYSTEM_DMA_TO_DEVICE", i1 false, i1 false}
!632 = !{ptr @.str.78, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../include/trace/events/rpcrdma.h", i32 491, i32 1}
!634 = !{ptr @__TRACE_SYSTEM_DMA_FROM_DEVICE, !633, !"__TRACE_SYSTEM_DMA_FROM_DEVICE", i1 false, i1 false}
!635 = !{ptr @TRACE_SYSTEM_DMA_FROM_DEVICE, !633, !"TRACE_SYSTEM_DMA_FROM_DEVICE", i1 false, i1 false}
!636 = !{ptr @.str.79, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../include/trace/events/rpcrdma.h", i32 492, i32 1}
!638 = !{ptr @__TRACE_SYSTEM_DMA_NONE, !637, !"__TRACE_SYSTEM_DMA_NONE", i1 false, i1 false}
!639 = !{ptr @TRACE_SYSTEM_DMA_NONE, !637, !"TRACE_SYSTEM_DMA_NONE", i1 false, i1 false}
!640 = !{ptr @.str.80, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../include/trace/events/rpcrdma.h", i32 794, i32 1}
!642 = !{ptr @__TRACE_SYSTEM_rpcrdma_noch, !641, !"__TRACE_SYSTEM_rpcrdma_noch", i1 false, i1 false}
!643 = !{ptr @TRACE_SYSTEM_rpcrdma_noch, !641, !"TRACE_SYSTEM_rpcrdma_noch", i1 false, i1 false}
!644 = !{ptr @.str.81, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../include/trace/events/rpcrdma.h", i32 795, i32 1}
!646 = !{ptr @__TRACE_SYSTEM_rpcrdma_noch_pullup, !645, !"__TRACE_SYSTEM_rpcrdma_noch_pullup", i1 false, i1 false}
!647 = !{ptr @TRACE_SYSTEM_rpcrdma_noch_pullup, !645, !"TRACE_SYSTEM_rpcrdma_noch_pullup", i1 false, i1 false}
!648 = !{ptr @.str.82, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../include/trace/events/rpcrdma.h", i32 796, i32 1}
!650 = !{ptr @__TRACE_SYSTEM_rpcrdma_noch_mapped, !649, !"__TRACE_SYSTEM_rpcrdma_noch_mapped", i1 false, i1 false}
!651 = !{ptr @TRACE_SYSTEM_rpcrdma_noch_mapped, !649, !"TRACE_SYSTEM_rpcrdma_noch_mapped", i1 false, i1 false}
!652 = !{ptr @.str.83, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../include/trace/events/rpcrdma.h", i32 797, i32 1}
!654 = !{ptr @__TRACE_SYSTEM_rpcrdma_readch, !653, !"__TRACE_SYSTEM_rpcrdma_readch", i1 false, i1 false}
!655 = !{ptr @TRACE_SYSTEM_rpcrdma_readch, !653, !"TRACE_SYSTEM_rpcrdma_readch", i1 false, i1 false}
!656 = !{ptr @.str.84, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../include/trace/events/rpcrdma.h", i32 798, i32 1}
!658 = !{ptr @__TRACE_SYSTEM_rpcrdma_areadch, !657, !"__TRACE_SYSTEM_rpcrdma_areadch", i1 false, i1 false}
!659 = !{ptr @TRACE_SYSTEM_rpcrdma_areadch, !657, !"TRACE_SYSTEM_rpcrdma_areadch", i1 false, i1 false}
!660 = !{ptr @.str.85, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../include/trace/events/rpcrdma.h", i32 799, i32 1}
!662 = !{ptr @__TRACE_SYSTEM_rpcrdma_writech, !661, !"__TRACE_SYSTEM_rpcrdma_writech", i1 false, i1 false}
!663 = !{ptr @TRACE_SYSTEM_rpcrdma_writech, !661, !"TRACE_SYSTEM_rpcrdma_writech", i1 false, i1 false}
!664 = !{ptr @.str.86, !665, !"<string literal>", i1 false, i1 false}
!665 = !{!"../include/trace/events/rpcrdma.h", i32 800, i32 1}
!666 = !{ptr @__TRACE_SYSTEM_rpcrdma_replych, !665, !"__TRACE_SYSTEM_rpcrdma_replych", i1 false, i1 false}
!667 = !{ptr @TRACE_SYSTEM_rpcrdma_replych, !665, !"TRACE_SYSTEM_rpcrdma_replych", i1 false, i1 false}
!668 = !{ptr @.str.87, !669, !"<string literal>", i1 false, i1 false}
!669 = !{!"../include/trace/events/rpcrdma.h", i32 1522, i32 1}
!670 = !{ptr @__TRACE_SYSTEM_RDMA_MSG, !669, !"__TRACE_SYSTEM_RDMA_MSG", i1 false, i1 false}
!671 = !{ptr @TRACE_SYSTEM_RDMA_MSG, !669, !"TRACE_SYSTEM_RDMA_MSG", i1 false, i1 false}
!672 = !{ptr @.str.88, !673, !"<string literal>", i1 false, i1 false}
!673 = !{!"../include/trace/events/rpcrdma.h", i32 1523, i32 1}
!674 = !{ptr @__TRACE_SYSTEM_RDMA_NOMSG, !673, !"__TRACE_SYSTEM_RDMA_NOMSG", i1 false, i1 false}
!675 = !{ptr @TRACE_SYSTEM_RDMA_NOMSG, !673, !"TRACE_SYSTEM_RDMA_NOMSG", i1 false, i1 false}
!676 = !{ptr @.str.89, !677, !"<string literal>", i1 false, i1 false}
!677 = !{!"../include/trace/events/rpcrdma.h", i32 1524, i32 1}
!678 = !{ptr @__TRACE_SYSTEM_RDMA_MSGP, !677, !"__TRACE_SYSTEM_RDMA_MSGP", i1 false, i1 false}
!679 = !{ptr @TRACE_SYSTEM_RDMA_MSGP, !677, !"TRACE_SYSTEM_RDMA_MSGP", i1 false, i1 false}
!680 = !{ptr @.str.90, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../include/trace/events/rpcrdma.h", i32 1525, i32 1}
!682 = !{ptr @__TRACE_SYSTEM_RDMA_DONE, !681, !"__TRACE_SYSTEM_RDMA_DONE", i1 false, i1 false}
!683 = !{ptr @TRACE_SYSTEM_RDMA_DONE, !681, !"TRACE_SYSTEM_RDMA_DONE", i1 false, i1 false}
!684 = !{ptr @.str.91, !685, !"<string literal>", i1 false, i1 false}
!685 = !{!"../include/trace/events/rpcrdma.h", i32 1526, i32 1}
!686 = !{ptr @__TRACE_SYSTEM_RDMA_ERROR, !685, !"__TRACE_SYSTEM_RDMA_ERROR", i1 false, i1 false}
!687 = !{ptr @TRACE_SYSTEM_RDMA_ERROR, !685, !"TRACE_SYSTEM_RDMA_ERROR", i1 false, i1 false}
!688 = !{ptr @event_class_rpcrdma_completion_class, !689, !"event_class_rpcrdma_completion_class", i1 false, i1 false}
!689 = !{!"../include/trace/events/rpcrdma.h", i32 25, i32 1}
!690 = !{ptr @event_class_rpcrdma_send_completion_class, !691, !"event_class_rpcrdma_send_completion_class", i1 false, i1 false}
!691 = !{!"../include/trace/events/rpcrdma.h", i32 65, i32 1}
!692 = !{ptr @event_class_rpcrdma_send_flush_class, !693, !"event_class_rpcrdma_send_flush_class", i1 false, i1 false}
!693 = !{!"../include/trace/events/rpcrdma.h", i32 96, i32 1}
!694 = !{ptr @event_class_rpcrdma_mr_completion_class, !695, !"event_class_rpcrdma_mr_completion_class", i1 false, i1 false}
!695 = !{!"../include/trace/events/rpcrdma.h", i32 133, i32 1}
!696 = !{ptr @event_class_rpcrdma_receive_completion_class, !697, !"event_class_rpcrdma_receive_completion_class", i1 false, i1 false}
!697 = !{!"../include/trace/events/rpcrdma.h", i32 173, i32 1}
!698 = !{ptr @event_class_rpcrdma_receive_success_class, !699, !"event_class_rpcrdma_receive_success_class", i1 false, i1 false}
!699 = !{!"../include/trace/events/rpcrdma.h", i32 218, i32 1}
!700 = !{ptr @event_class_rpcrdma_receive_flush_class, !701, !"event_class_rpcrdma_receive_flush_class", i1 false, i1 false}
!701 = !{!"../include/trace/events/rpcrdma.h", i32 252, i32 1}
!702 = !{ptr @event_class_xprtrdma_reply_class, !703, !"event_class_xprtrdma_reply_class", i1 false, i1 false}
!703 = !{!"../include/trace/events/rpcrdma.h", i32 289, i32 1}
!704 = !{ptr @event_class_xprtrdma_rxprt, !705, !"event_class_xprtrdma_rxprt", i1 false, i1 false}
!705 = !{!"../include/trace/events/rpcrdma.h", i32 326, i32 1}
!706 = !{ptr @event_class_xprtrdma_connect_class, !707, !"event_class_xprtrdma_connect_class", i1 false, i1 false}
!707 = !{!"../include/trace/events/rpcrdma.h", i32 355, i32 1}
!708 = !{ptr @event_class_xprtrdma_rdch_event, !709, !"event_class_xprtrdma_rdch_event", i1 false, i1 false}
!709 = !{!"../include/trace/events/rpcrdma.h", i32 391, i32 1}
!710 = !{ptr @event_class_xprtrdma_wrch_event, !711, !"event_class_xprtrdma_wrch_event", i1 false, i1 false}
!711 = !{!"../include/trace/events/rpcrdma.h", i32 442, i32 1}
!712 = !{ptr @event_class_xprtrdma_mr_class, !713, !"event_class_xprtrdma_mr_class", i1 false, i1 false}
!713 = !{!"../include/trace/events/rpcrdma.h", i32 501, i32 1}
!714 = !{ptr @event_class_xprtrdma_anonymous_mr_class, !715, !"event_class_xprtrdma_anonymous_mr_class", i1 false, i1 false}
!715 = !{!"../include/trace/events/rpcrdma.h", i32 556, i32 1}
!716 = !{ptr @event_class_xprtrdma_callback_class, !717, !"event_class_xprtrdma_callback_class", i1 false, i1 false}
!717 = !{!"../include/trace/events/rpcrdma.h", i32 596, i32 1}
!718 = !{ptr @event_class_xprtrdma_inline_thresh, !1, !"event_class_xprtrdma_inline_thresh", i1 false, i1 false}
!719 = !{ptr @event_xprtrdma_inline_thresh, !1, !"event_xprtrdma_inline_thresh", i1 false, i1 false}
!720 = !{ptr @__event_xprtrdma_inline_thresh, !1, !"__event_xprtrdma_inline_thresh", i1 false, i1 false}
!721 = !{ptr @event_xprtrdma_connect, !5, !"event_xprtrdma_connect", i1 false, i1 false}
!722 = !{ptr @__event_xprtrdma_connect, !5, !"__event_xprtrdma_connect", i1 false, i1 false}
!723 = !{ptr @event_xprtrdma_disconnect, !9, !"event_xprtrdma_disconnect", i1 false, i1 false}
!724 = !{ptr @__event_xprtrdma_disconnect, !9, !"__event_xprtrdma_disconnect", i1 false, i1 false}
!725 = !{ptr @event_xprtrdma_op_inject_dsc, !13, !"event_xprtrdma_op_inject_dsc", i1 false, i1 false}
!726 = !{ptr @__event_xprtrdma_op_inject_dsc, !13, !"__event_xprtrdma_op_inject_dsc", i1 false, i1 false}
!727 = !{ptr @event_class_xprtrdma_op_connect, !17, !"event_class_xprtrdma_op_connect", i1 false, i1 false}
!728 = !{ptr @event_xprtrdma_op_connect, !17, !"event_xprtrdma_op_connect", i1 false, i1 false}
!729 = !{ptr @__event_xprtrdma_op_connect, !17, !"__event_xprtrdma_op_connect", i1 false, i1 false}
!730 = !{ptr @event_class_xprtrdma_op_set_cto, !21, !"event_class_xprtrdma_op_set_cto", i1 false, i1 false}
!731 = !{ptr @event_xprtrdma_op_set_cto, !21, !"event_xprtrdma_op_set_cto", i1 false, i1 false}
!732 = !{ptr @__event_xprtrdma_op_set_cto, !21, !"__event_xprtrdma_op_set_cto", i1 false, i1 false}
!733 = !{ptr @event_class_xprtrdma_createmrs, !25, !"event_class_xprtrdma_createmrs", i1 false, i1 false}
!734 = !{ptr @event_xprtrdma_createmrs, !25, !"event_xprtrdma_createmrs", i1 false, i1 false}
!735 = !{ptr @__event_xprtrdma_createmrs, !25, !"__event_xprtrdma_createmrs", i1 false, i1 false}
!736 = !{ptr @event_class_xprtrdma_nomrs_err, !29, !"event_class_xprtrdma_nomrs_err", i1 false, i1 false}
!737 = !{ptr @event_xprtrdma_nomrs_err, !29, !"event_xprtrdma_nomrs_err", i1 false, i1 false}
!738 = !{ptr @__event_xprtrdma_nomrs_err, !29, !"__event_xprtrdma_nomrs_err", i1 false, i1 false}
!739 = !{ptr @event_xprtrdma_chunk_read, !33, !"event_xprtrdma_chunk_read", i1 false, i1 false}
!740 = !{ptr @__event_xprtrdma_chunk_read, !33, !"__event_xprtrdma_chunk_read", i1 false, i1 false}
!741 = !{ptr @event_xprtrdma_chunk_write, !37, !"event_xprtrdma_chunk_write", i1 false, i1 false}
!742 = !{ptr @__event_xprtrdma_chunk_write, !37, !"__event_xprtrdma_chunk_write", i1 false, i1 false}
!743 = !{ptr @event_xprtrdma_chunk_reply, !41, !"event_xprtrdma_chunk_reply", i1 false, i1 false}
!744 = !{ptr @__event_xprtrdma_chunk_reply, !41, !"__event_xprtrdma_chunk_reply", i1 false, i1 false}
!745 = !{ptr @event_xprtrdma_chunk_wp, !45, !"event_xprtrdma_chunk_wp", i1 false, i1 false}
!746 = !{ptr @__event_xprtrdma_chunk_wp, !45, !"__event_xprtrdma_chunk_wp", i1 false, i1 false}
!747 = !{ptr @event_class_xprtrdma_marshal, !49, !"event_class_xprtrdma_marshal", i1 false, i1 false}
!748 = !{ptr @event_xprtrdma_marshal, !49, !"event_xprtrdma_marshal", i1 false, i1 false}
!749 = !{ptr @__event_xprtrdma_marshal, !49, !"__event_xprtrdma_marshal", i1 false, i1 false}
!750 = !{ptr @event_class_xprtrdma_marshal_failed, !53, !"event_class_xprtrdma_marshal_failed", i1 false, i1 false}
!751 = !{ptr @event_xprtrdma_marshal_failed, !53, !"event_xprtrdma_marshal_failed", i1 false, i1 false}
!752 = !{ptr @__event_xprtrdma_marshal_failed, !53, !"__event_xprtrdma_marshal_failed", i1 false, i1 false}
!753 = !{ptr @event_class_xprtrdma_prepsend_failed, !57, !"event_class_xprtrdma_prepsend_failed", i1 false, i1 false}
!754 = !{ptr @event_xprtrdma_prepsend_failed, !57, !"event_xprtrdma_prepsend_failed", i1 false, i1 false}
!755 = !{ptr @__event_xprtrdma_prepsend_failed, !57, !"__event_xprtrdma_prepsend_failed", i1 false, i1 false}
!756 = !{ptr @event_class_xprtrdma_post_send, !61, !"event_class_xprtrdma_post_send", i1 false, i1 false}
!757 = !{ptr @event_xprtrdma_post_send, !61, !"event_xprtrdma_post_send", i1 false, i1 false}
!758 = !{ptr @__event_xprtrdma_post_send, !61, !"__event_xprtrdma_post_send", i1 false, i1 false}
!759 = !{ptr @event_class_xprtrdma_post_send_err, !65, !"event_class_xprtrdma_post_send_err", i1 false, i1 false}
!760 = !{ptr @event_xprtrdma_post_send_err, !65, !"event_xprtrdma_post_send_err", i1 false, i1 false}
!761 = !{ptr @__event_xprtrdma_post_send_err, !65, !"__event_xprtrdma_post_send_err", i1 false, i1 false}
!762 = !{ptr @event_class_xprtrdma_post_recv, !69, !"event_class_xprtrdma_post_recv", i1 false, i1 false}
!763 = !{ptr @event_xprtrdma_post_recv, !69, !"event_xprtrdma_post_recv", i1 false, i1 false}
!764 = !{ptr @__event_xprtrdma_post_recv, !69, !"__event_xprtrdma_post_recv", i1 false, i1 false}
!765 = !{ptr @event_class_xprtrdma_post_recvs, !73, !"event_class_xprtrdma_post_recvs", i1 false, i1 false}
!766 = !{ptr @event_xprtrdma_post_recvs, !73, !"event_xprtrdma_post_recvs", i1 false, i1 false}
!767 = !{ptr @__event_xprtrdma_post_recvs, !73, !"__event_xprtrdma_post_recvs", i1 false, i1 false}
!768 = !{ptr @event_class_xprtrdma_post_recvs_err, !77, !"event_class_xprtrdma_post_recvs_err", i1 false, i1 false}
!769 = !{ptr @event_xprtrdma_post_recvs_err, !77, !"event_xprtrdma_post_recvs_err", i1 false, i1 false}
!770 = !{ptr @__event_xprtrdma_post_recvs_err, !77, !"__event_xprtrdma_post_recvs_err", i1 false, i1 false}
!771 = !{ptr @event_class_xprtrdma_post_linv_err, !81, !"event_class_xprtrdma_post_linv_err", i1 false, i1 false}
!772 = !{ptr @event_xprtrdma_post_linv_err, !81, !"event_xprtrdma_post_linv_err", i1 false, i1 false}
!773 = !{ptr @__event_xprtrdma_post_linv_err, !81, !"__event_xprtrdma_post_linv_err", i1 false, i1 false}
!774 = !{ptr @event_xprtrdma_wc_receive, !85, !"event_xprtrdma_wc_receive", i1 false, i1 false}
!775 = !{ptr @__event_xprtrdma_wc_receive, !85, !"__event_xprtrdma_wc_receive", i1 false, i1 false}
!776 = !{ptr @event_xprtrdma_wc_send, !89, !"event_xprtrdma_wc_send", i1 false, i1 false}
!777 = !{ptr @__event_xprtrdma_wc_send, !89, !"__event_xprtrdma_wc_send", i1 false, i1 false}
!778 = !{ptr @event_xprtrdma_wc_fastreg, !93, !"event_xprtrdma_wc_fastreg", i1 false, i1 false}
!779 = !{ptr @__event_xprtrdma_wc_fastreg, !93, !"__event_xprtrdma_wc_fastreg", i1 false, i1 false}
!780 = !{ptr @event_xprtrdma_wc_li, !97, !"event_xprtrdma_wc_li", i1 false, i1 false}
!781 = !{ptr @__event_xprtrdma_wc_li, !97, !"__event_xprtrdma_wc_li", i1 false, i1 false}
!782 = !{ptr @event_xprtrdma_wc_li_wake, !101, !"event_xprtrdma_wc_li_wake", i1 false, i1 false}
!783 = !{ptr @__event_xprtrdma_wc_li_wake, !101, !"__event_xprtrdma_wc_li_wake", i1 false, i1 false}
!784 = !{ptr @event_xprtrdma_wc_li_done, !105, !"event_xprtrdma_wc_li_done", i1 false, i1 false}
!785 = !{ptr @__event_xprtrdma_wc_li_done, !105, !"__event_xprtrdma_wc_li_done", i1 false, i1 false}
!786 = !{ptr @event_class_xprtrdma_frwr_alloc, !109, !"event_class_xprtrdma_frwr_alloc", i1 false, i1 false}
!787 = !{ptr @event_xprtrdma_frwr_alloc, !109, !"event_xprtrdma_frwr_alloc", i1 false, i1 false}
!788 = !{ptr @__event_xprtrdma_frwr_alloc, !109, !"__event_xprtrdma_frwr_alloc", i1 false, i1 false}
!789 = !{ptr @event_class_xprtrdma_frwr_dereg, !113, !"event_class_xprtrdma_frwr_dereg", i1 false, i1 false}
!790 = !{ptr @event_xprtrdma_frwr_dereg, !113, !"event_xprtrdma_frwr_dereg", i1 false, i1 false}
!791 = !{ptr @__event_xprtrdma_frwr_dereg, !113, !"__event_xprtrdma_frwr_dereg", i1 false, i1 false}
!792 = !{ptr @event_class_xprtrdma_frwr_sgerr, !117, !"event_class_xprtrdma_frwr_sgerr", i1 false, i1 false}
!793 = !{ptr @event_xprtrdma_frwr_sgerr, !117, !"event_xprtrdma_frwr_sgerr", i1 false, i1 false}
!794 = !{ptr @__event_xprtrdma_frwr_sgerr, !117, !"__event_xprtrdma_frwr_sgerr", i1 false, i1 false}
!795 = !{ptr @event_class_xprtrdma_frwr_maperr, !121, !"event_class_xprtrdma_frwr_maperr", i1 false, i1 false}
!796 = !{ptr @event_xprtrdma_frwr_maperr, !121, !"event_xprtrdma_frwr_maperr", i1 false, i1 false}
!797 = !{ptr @__event_xprtrdma_frwr_maperr, !121, !"__event_xprtrdma_frwr_maperr", i1 false, i1 false}
!798 = !{ptr @event_xprtrdma_mr_fastreg, !125, !"event_xprtrdma_mr_fastreg", i1 false, i1 false}
!799 = !{ptr @__event_xprtrdma_mr_fastreg, !125, !"__event_xprtrdma_mr_fastreg", i1 false, i1 false}
!800 = !{ptr @event_xprtrdma_mr_localinv, !129, !"event_xprtrdma_mr_localinv", i1 false, i1 false}
!801 = !{ptr @__event_xprtrdma_mr_localinv, !129, !"__event_xprtrdma_mr_localinv", i1 false, i1 false}
!802 = !{ptr @event_xprtrdma_mr_reminv, !133, !"event_xprtrdma_mr_reminv", i1 false, i1 false}
!803 = !{ptr @__event_xprtrdma_mr_reminv, !133, !"__event_xprtrdma_mr_reminv", i1 false, i1 false}
!804 = !{ptr @event_xprtrdma_mr_map, !137, !"event_xprtrdma_mr_map", i1 false, i1 false}
!805 = !{ptr @__event_xprtrdma_mr_map, !137, !"__event_xprtrdma_mr_map", i1 false, i1 false}
!806 = !{ptr @event_xprtrdma_mr_unmap, !141, !"event_xprtrdma_mr_unmap", i1 false, i1 false}
!807 = !{ptr @__event_xprtrdma_mr_unmap, !141, !"__event_xprtrdma_mr_unmap", i1 false, i1 false}
!808 = !{ptr @event_class_xprtrdma_dma_maperr, !145, !"event_class_xprtrdma_dma_maperr", i1 false, i1 false}
!809 = !{ptr @event_xprtrdma_dma_maperr, !145, !"event_xprtrdma_dma_maperr", i1 false, i1 false}
!810 = !{ptr @__event_xprtrdma_dma_maperr, !145, !"__event_xprtrdma_dma_maperr", i1 false, i1 false}
!811 = !{ptr @event_class_xprtrdma_reply, !149, !"event_class_xprtrdma_reply", i1 false, i1 false}
!812 = !{ptr @event_xprtrdma_reply, !149, !"event_xprtrdma_reply", i1 false, i1 false}
!813 = !{ptr @__event_xprtrdma_reply, !149, !"__event_xprtrdma_reply", i1 false, i1 false}
!814 = !{ptr @event_xprtrdma_reply_vers_err, !153, !"event_xprtrdma_reply_vers_err", i1 false, i1 false}
!815 = !{ptr @__event_xprtrdma_reply_vers_err, !153, !"__event_xprtrdma_reply_vers_err", i1 false, i1 false}
!816 = !{ptr @event_xprtrdma_reply_rqst_err, !157, !"event_xprtrdma_reply_rqst_err", i1 false, i1 false}
!817 = !{ptr @__event_xprtrdma_reply_rqst_err, !157, !"__event_xprtrdma_reply_rqst_err", i1 false, i1 false}
!818 = !{ptr @event_xprtrdma_reply_short_err, !161, !"event_xprtrdma_reply_short_err", i1 false, i1 false}
!819 = !{ptr @__event_xprtrdma_reply_short_err, !161, !"__event_xprtrdma_reply_short_err", i1 false, i1 false}
!820 = !{ptr @event_xprtrdma_reply_hdr_err, !165, !"event_xprtrdma_reply_hdr_err", i1 false, i1 false}
!821 = !{ptr @__event_xprtrdma_reply_hdr_err, !165, !"__event_xprtrdma_reply_hdr_err", i1 false, i1 false}
!822 = !{ptr @event_class_xprtrdma_err_vers, !169, !"event_class_xprtrdma_err_vers", i1 false, i1 false}
!823 = !{ptr @event_xprtrdma_err_vers, !169, !"event_xprtrdma_err_vers", i1 false, i1 false}
!824 = !{ptr @__event_xprtrdma_err_vers, !169, !"__event_xprtrdma_err_vers", i1 false, i1 false}
!825 = !{ptr @event_class_xprtrdma_err_chunk, !173, !"event_class_xprtrdma_err_chunk", i1 false, i1 false}
!826 = !{ptr @event_xprtrdma_err_chunk, !173, !"event_xprtrdma_err_chunk", i1 false, i1 false}
!827 = !{ptr @__event_xprtrdma_err_chunk, !173, !"__event_xprtrdma_err_chunk", i1 false, i1 false}
!828 = !{ptr @event_class_xprtrdma_err_unrecognized, !177, !"event_class_xprtrdma_err_unrecognized", i1 false, i1 false}
!829 = !{ptr @event_xprtrdma_err_unrecognized, !177, !"event_xprtrdma_err_unrecognized", i1 false, i1 false}
!830 = !{ptr @__event_xprtrdma_err_unrecognized, !177, !"__event_xprtrdma_err_unrecognized", i1 false, i1 false}
!831 = !{ptr @event_class_xprtrdma_fixup, !181, !"event_class_xprtrdma_fixup", i1 false, i1 false}
!832 = !{ptr @event_xprtrdma_fixup, !181, !"event_xprtrdma_fixup", i1 false, i1 false}
!833 = !{ptr @__event_xprtrdma_fixup, !181, !"__event_xprtrdma_fixup", i1 false, i1 false}
!834 = !{ptr @event_class_xprtrdma_decode_seg, !185, !"event_class_xprtrdma_decode_seg", i1 false, i1 false}
!835 = !{ptr @event_xprtrdma_decode_seg, !185, !"event_xprtrdma_decode_seg", i1 false, i1 false}
!836 = !{ptr @__event_xprtrdma_decode_seg, !185, !"__event_xprtrdma_decode_seg", i1 false, i1 false}
!837 = !{ptr @event_class_xprtrdma_mrs_zap, !189, !"event_class_xprtrdma_mrs_zap", i1 false, i1 false}
!838 = !{ptr @event_xprtrdma_mrs_zap, !189, !"event_xprtrdma_mrs_zap", i1 false, i1 false}
!839 = !{ptr @__event_xprtrdma_mrs_zap, !189, !"__event_xprtrdma_mrs_zap", i1 false, i1 false}
!840 = !{ptr @event_class_xprtrdma_cb_setup, !193, !"event_class_xprtrdma_cb_setup", i1 false, i1 false}
!841 = !{ptr @event_xprtrdma_cb_setup, !193, !"event_xprtrdma_cb_setup", i1 false, i1 false}
!842 = !{ptr @__event_xprtrdma_cb_setup, !193, !"__event_xprtrdma_cb_setup", i1 false, i1 false}
!843 = !{ptr @event_xprtrdma_cb_call, !197, !"event_xprtrdma_cb_call", i1 false, i1 false}
!844 = !{ptr @__event_xprtrdma_cb_call, !197, !"__event_xprtrdma_cb_call", i1 false, i1 false}
!845 = !{ptr @event_xprtrdma_cb_reply, !201, !"event_xprtrdma_cb_reply", i1 false, i1 false}
!846 = !{ptr @__event_xprtrdma_cb_reply, !201, !"__event_xprtrdma_cb_reply", i1 false, i1 false}
!847 = !{ptr @event_class_svcrdma_accept_class, !848, !"event_class_svcrdma_accept_class", i1 false, i1 false}
!848 = !{!"../include/trace/events/rpcrdma.h", i32 1485, i32 1}
!849 = !{ptr @event_svcrdma_pd_err, !205, !"event_svcrdma_pd_err", i1 false, i1 false}
!850 = !{ptr @__event_svcrdma_pd_err, !205, !"__event_svcrdma_pd_err", i1 false, i1 false}
!851 = !{ptr @event_svcrdma_qp_err, !209, !"event_svcrdma_qp_err", i1 false, i1 false}
!852 = !{ptr @__event_svcrdma_qp_err, !209, !"__event_svcrdma_qp_err", i1 false, i1 false}
!853 = !{ptr @event_svcrdma_fabric_err, !213, !"event_svcrdma_fabric_err", i1 false, i1 false}
!854 = !{ptr @__event_svcrdma_fabric_err, !213, !"__event_svcrdma_fabric_err", i1 false, i1 false}
!855 = !{ptr @event_svcrdma_initdepth_err, !217, !"event_svcrdma_initdepth_err", i1 false, i1 false}
!856 = !{ptr @__event_svcrdma_initdepth_err, !217, !"__event_svcrdma_initdepth_err", i1 false, i1 false}
!857 = !{ptr @event_svcrdma_accept_err, !221, !"event_svcrdma_accept_err", i1 false, i1 false}
!858 = !{ptr @__event_svcrdma_accept_err, !221, !"__event_svcrdma_accept_err", i1 false, i1 false}
!859 = !{ptr @event_class_svcrdma_decode_rqst, !225, !"event_class_svcrdma_decode_rqst", i1 false, i1 false}
!860 = !{ptr @event_svcrdma_decode_rqst, !225, !"event_svcrdma_decode_rqst", i1 false, i1 false}
!861 = !{ptr @__event_svcrdma_decode_rqst, !225, !"__event_svcrdma_decode_rqst", i1 false, i1 false}
!862 = !{ptr @event_class_svcrdma_decode_short_err, !229, !"event_class_svcrdma_decode_short_err", i1 false, i1 false}
!863 = !{ptr @event_svcrdma_decode_short_err, !229, !"event_svcrdma_decode_short_err", i1 false, i1 false}
!864 = !{ptr @__event_svcrdma_decode_short_err, !229, !"__event_svcrdma_decode_short_err", i1 false, i1 false}
!865 = !{ptr @event_class_svcrdma_badreq_event, !866, !"event_class_svcrdma_badreq_event", i1 false, i1 false}
!866 = !{!"../include/trace/events/rpcrdma.h", i32 1596, i32 1}
!867 = !{ptr @event_svcrdma_decode_badvers_err, !233, !"event_svcrdma_decode_badvers_err", i1 false, i1 false}
!868 = !{ptr @__event_svcrdma_decode_badvers_err, !233, !"__event_svcrdma_decode_badvers_err", i1 false, i1 false}
!869 = !{ptr @event_svcrdma_decode_drop_err, !237, !"event_svcrdma_decode_drop_err", i1 false, i1 false}
!870 = !{ptr @__event_svcrdma_decode_drop_err, !237, !"__event_svcrdma_decode_drop_err", i1 false, i1 false}
!871 = !{ptr @event_svcrdma_decode_badproc_err, !241, !"event_svcrdma_decode_badproc_err", i1 false, i1 false}
!872 = !{ptr @__event_svcrdma_decode_badproc_err, !241, !"__event_svcrdma_decode_badproc_err", i1 false, i1 false}
!873 = !{ptr @event_svcrdma_decode_parse_err, !245, !"event_svcrdma_decode_parse_err", i1 false, i1 false}
!874 = !{ptr @__event_svcrdma_decode_parse_err, !245, !"__event_svcrdma_decode_parse_err", i1 false, i1 false}
!875 = !{ptr @event_class_svcrdma_encode_wseg, !249, !"event_class_svcrdma_encode_wseg", i1 false, i1 false}
!876 = !{ptr @event_svcrdma_encode_wseg, !249, !"event_svcrdma_encode_wseg", i1 false, i1 false}
!877 = !{ptr @__event_svcrdma_encode_wseg, !249, !"__event_svcrdma_encode_wseg", i1 false, i1 false}
!878 = !{ptr @event_class_svcrdma_decode_rseg, !253, !"event_class_svcrdma_decode_rseg", i1 false, i1 false}
!879 = !{ptr @event_svcrdma_decode_rseg, !253, !"event_svcrdma_decode_rseg", i1 false, i1 false}
!880 = !{ptr @__event_svcrdma_decode_rseg, !253, !"__event_svcrdma_decode_rseg", i1 false, i1 false}
!881 = !{ptr @event_class_svcrdma_decode_wseg, !257, !"event_class_svcrdma_decode_wseg", i1 false, i1 false}
!882 = !{ptr @event_svcrdma_decode_wseg, !257, !"event_svcrdma_decode_wseg", i1 false, i1 false}
!883 = !{ptr @__event_svcrdma_decode_wseg, !257, !"__event_svcrdma_decode_wseg", i1 false, i1 false}
!884 = !{ptr @event_class_svcrdma_error_event, !885, !"event_class_svcrdma_error_event", i1 false, i1 false}
!885 = !{!"../include/trace/events/rpcrdma.h", i32 1750, i32 1}
!886 = !{ptr @event_svcrdma_err_vers, !261, !"event_svcrdma_err_vers", i1 false, i1 false}
!887 = !{ptr @__event_svcrdma_err_vers, !261, !"__event_svcrdma_err_vers", i1 false, i1 false}
!888 = !{ptr @event_svcrdma_err_chunk, !265, !"event_svcrdma_err_chunk", i1 false, i1 false}
!889 = !{ptr @__event_svcrdma_err_chunk, !265, !"__event_svcrdma_err_chunk", i1 false, i1 false}
!890 = !{ptr @event_class_svcrdma_dma_map_class, !891, !"event_class_svcrdma_dma_map_class", i1 false, i1 false}
!891 = !{!"../include/trace/events/rpcrdma.h", i32 1784, i32 1}
!892 = !{ptr @event_svcrdma_dma_map_page, !269, !"event_svcrdma_dma_map_page", i1 false, i1 false}
!893 = !{ptr @__event_svcrdma_dma_map_page, !269, !"__event_svcrdma_dma_map_page", i1 false, i1 false}
!894 = !{ptr @event_svcrdma_dma_map_err, !273, !"event_svcrdma_dma_map_err", i1 false, i1 false}
!895 = !{ptr @__event_svcrdma_dma_map_err, !273, !"__event_svcrdma_dma_map_err", i1 false, i1 false}
!896 = !{ptr @event_svcrdma_dma_unmap_page, !277, !"event_svcrdma_dma_unmap_page", i1 false, i1 false}
!897 = !{ptr @__event_svcrdma_dma_unmap_page, !277, !"__event_svcrdma_dma_unmap_page", i1 false, i1 false}
!898 = !{ptr @event_class_svcrdma_dma_map_rw_err, !281, !"event_class_svcrdma_dma_map_rw_err", i1 false, i1 false}
!899 = !{ptr @event_svcrdma_dma_map_rw_err, !281, !"event_svcrdma_dma_map_rw_err", i1 false, i1 false}
!900 = !{ptr @__event_svcrdma_dma_map_rw_err, !281, !"__event_svcrdma_dma_map_rw_err", i1 false, i1 false}
!901 = !{ptr @event_class_svcrdma_no_rwctx_err, !285, !"event_class_svcrdma_no_rwctx_err", i1 false, i1 false}
!902 = !{ptr @event_svcrdma_no_rwctx_err, !285, !"event_svcrdma_no_rwctx_err", i1 false, i1 false}
!903 = !{ptr @__event_svcrdma_no_rwctx_err, !285, !"__event_svcrdma_no_rwctx_err", i1 false, i1 false}
!904 = !{ptr @event_class_svcrdma_page_overrun_err, !289, !"event_class_svcrdma_page_overrun_err", i1 false, i1 false}
!905 = !{ptr @event_svcrdma_page_overrun_err, !289, !"event_svcrdma_page_overrun_err", i1 false, i1 false}
!906 = !{ptr @__event_svcrdma_page_overrun_err, !289, !"__event_svcrdma_page_overrun_err", i1 false, i1 false}
!907 = !{ptr @event_class_svcrdma_small_wrch_err, !293, !"event_class_svcrdma_small_wrch_err", i1 false, i1 false}
!908 = !{ptr @event_svcrdma_small_wrch_err, !293, !"event_svcrdma_small_wrch_err", i1 false, i1 false}
!909 = !{ptr @__event_svcrdma_small_wrch_err, !293, !"__event_svcrdma_small_wrch_err", i1 false, i1 false}
!910 = !{ptr @event_class_svcrdma_send_pullup, !297, !"event_class_svcrdma_send_pullup", i1 false, i1 false}
!911 = !{ptr @event_svcrdma_send_pullup, !297, !"event_svcrdma_send_pullup", i1 false, i1 false}
!912 = !{ptr @__event_svcrdma_send_pullup, !297, !"__event_svcrdma_send_pullup", i1 false, i1 false}
!913 = !{ptr @event_class_svcrdma_send_err, !301, !"event_class_svcrdma_send_err", i1 false, i1 false}
!914 = !{ptr @event_svcrdma_send_err, !301, !"event_svcrdma_send_err", i1 false, i1 false}
!915 = !{ptr @__event_svcrdma_send_err, !301, !"__event_svcrdma_send_err", i1 false, i1 false}
!916 = !{ptr @event_class_svcrdma_post_send, !305, !"event_class_svcrdma_post_send", i1 false, i1 false}
!917 = !{ptr @event_svcrdma_post_send, !305, !"event_svcrdma_post_send", i1 false, i1 false}
!918 = !{ptr @__event_svcrdma_post_send, !305, !"__event_svcrdma_post_send", i1 false, i1 false}
!919 = !{ptr @event_svcrdma_wc_send, !309, !"event_svcrdma_wc_send", i1 false, i1 false}
!920 = !{ptr @__event_svcrdma_wc_send, !309, !"__event_svcrdma_wc_send", i1 false, i1 false}
!921 = !{ptr @event_svcrdma_wc_send_flush, !313, !"event_svcrdma_wc_send_flush", i1 false, i1 false}
!922 = !{ptr @__event_svcrdma_wc_send_flush, !313, !"__event_svcrdma_wc_send_flush", i1 false, i1 false}
!923 = !{ptr @event_svcrdma_wc_send_err, !317, !"event_svcrdma_wc_send_err", i1 false, i1 false}
!924 = !{ptr @__event_svcrdma_wc_send_err, !317, !"__event_svcrdma_wc_send_err", i1 false, i1 false}
!925 = !{ptr @event_class_svcrdma_post_recv, !321, !"event_class_svcrdma_post_recv", i1 false, i1 false}
!926 = !{ptr @event_svcrdma_post_recv, !321, !"event_svcrdma_post_recv", i1 false, i1 false}
!927 = !{ptr @__event_svcrdma_post_recv, !321, !"__event_svcrdma_post_recv", i1 false, i1 false}
!928 = !{ptr @event_svcrdma_wc_recv, !325, !"event_svcrdma_wc_recv", i1 false, i1 false}
!929 = !{ptr @__event_svcrdma_wc_recv, !325, !"__event_svcrdma_wc_recv", i1 false, i1 false}
!930 = !{ptr @event_svcrdma_wc_recv_flush, !329, !"event_svcrdma_wc_recv_flush", i1 false, i1 false}
!931 = !{ptr @__event_svcrdma_wc_recv_flush, !329, !"__event_svcrdma_wc_recv_flush", i1 false, i1 false}
!932 = !{ptr @event_svcrdma_wc_recv_err, !333, !"event_svcrdma_wc_recv_err", i1 false, i1 false}
!933 = !{ptr @__event_svcrdma_wc_recv_err, !333, !"__event_svcrdma_wc_recv_err", i1 false, i1 false}
!934 = !{ptr @event_class_svcrdma_rq_post_err, !337, !"event_class_svcrdma_rq_post_err", i1 false, i1 false}
!935 = !{ptr @event_svcrdma_rq_post_err, !337, !"event_svcrdma_rq_post_err", i1 false, i1 false}
!936 = !{ptr @__event_svcrdma_rq_post_err, !337, !"__event_svcrdma_rq_post_err", i1 false, i1 false}
!937 = !{ptr @event_class_svcrdma_post_chunk_class, !938, !"event_class_svcrdma_post_chunk_class", i1 false, i1 false}
!938 = !{!"../include/trace/events/rpcrdma.h", i32 2076, i32 1}
!939 = !{ptr @event_svcrdma_post_read_chunk, !341, !"event_svcrdma_post_read_chunk", i1 false, i1 false}
!940 = !{ptr @__event_svcrdma_post_read_chunk, !341, !"__event_svcrdma_post_read_chunk", i1 false, i1 false}
!941 = !{ptr @event_svcrdma_post_write_chunk, !345, !"event_svcrdma_post_write_chunk", i1 false, i1 false}
!942 = !{ptr @__event_svcrdma_post_write_chunk, !345, !"__event_svcrdma_post_write_chunk", i1 false, i1 false}
!943 = !{ptr @event_svcrdma_post_reply_chunk, !349, !"event_svcrdma_post_reply_chunk", i1 false, i1 false}
!944 = !{ptr @__event_svcrdma_post_reply_chunk, !349, !"__event_svcrdma_post_reply_chunk", i1 false, i1 false}
!945 = !{ptr @event_class_svcrdma_wc_read, !353, !"event_class_svcrdma_wc_read", i1 false, i1 false}
!946 = !{ptr @event_svcrdma_wc_read, !353, !"event_svcrdma_wc_read", i1 false, i1 false}
!947 = !{ptr @__event_svcrdma_wc_read, !353, !"__event_svcrdma_wc_read", i1 false, i1 false}
!948 = !{ptr @event_svcrdma_wc_read_flush, !357, !"event_svcrdma_wc_read_flush", i1 false, i1 false}
!949 = !{ptr @__event_svcrdma_wc_read_flush, !357, !"__event_svcrdma_wc_read_flush", i1 false, i1 false}
!950 = !{ptr @event_svcrdma_wc_read_err, !361, !"event_svcrdma_wc_read_err", i1 false, i1 false}
!951 = !{ptr @__event_svcrdma_wc_read_err, !361, !"__event_svcrdma_wc_read_err", i1 false, i1 false}
!952 = !{ptr @event_svcrdma_wc_write, !365, !"event_svcrdma_wc_write", i1 false, i1 false}
!953 = !{ptr @__event_svcrdma_wc_write, !365, !"__event_svcrdma_wc_write", i1 false, i1 false}
!954 = !{ptr @event_svcrdma_wc_write_flush, !369, !"event_svcrdma_wc_write_flush", i1 false, i1 false}
!955 = !{ptr @__event_svcrdma_wc_write_flush, !369, !"__event_svcrdma_wc_write_flush", i1 false, i1 false}
!956 = !{ptr @event_svcrdma_wc_write_err, !373, !"event_svcrdma_wc_write_err", i1 false, i1 false}
!957 = !{ptr @__event_svcrdma_wc_write_err, !373, !"__event_svcrdma_wc_write_err", i1 false, i1 false}
!958 = !{ptr @event_class_svcrdma_qp_error, !377, !"event_class_svcrdma_qp_error", i1 false, i1 false}
!959 = !{ptr @event_svcrdma_qp_error, !377, !"event_svcrdma_qp_error", i1 false, i1 false}
!960 = !{ptr @__event_svcrdma_qp_error, !377, !"__event_svcrdma_qp_error", i1 false, i1 false}
!961 = !{ptr @event_class_svcrdma_sendqueue_event, !962, !"event_class_svcrdma_sendqueue_event", i1 false, i1 false}
!962 = !{!"../include/trace/events/rpcrdma.h", i32 2179, i32 1}
!963 = !{ptr @event_svcrdma_sq_full, !381, !"event_svcrdma_sq_full", i1 false, i1 false}
!964 = !{ptr @__event_svcrdma_sq_full, !381, !"__event_svcrdma_sq_full", i1 false, i1 false}
!965 = !{ptr @event_svcrdma_sq_retry, !385, !"event_svcrdma_sq_retry", i1 false, i1 false}
!966 = !{ptr @__event_svcrdma_sq_retry, !385, !"__event_svcrdma_sq_retry", i1 false, i1 false}
!967 = !{ptr @event_class_svcrdma_sq_post_err, !389, !"event_class_svcrdma_sq_post_err", i1 false, i1 false}
!968 = !{ptr @event_svcrdma_sq_post_err, !389, !"event_svcrdma_sq_post_err", i1 false, i1 false}
!969 = !{ptr @__event_svcrdma_sq_post_err, !389, !"__event_svcrdma_sq_post_err", i1 false, i1 false}
!970 = !{ptr @__bpf_trace_tp_map_xprtrdma_inline_thresh, !1, !"__bpf_trace_tp_map_xprtrdma_inline_thresh", i1 false, i1 false}
!971 = !{ptr @__bpf_trace_tp_map_xprtrdma_connect, !5, !"__bpf_trace_tp_map_xprtrdma_connect", i1 false, i1 false}
!972 = !{ptr @__bpf_trace_tp_map_xprtrdma_disconnect, !9, !"__bpf_trace_tp_map_xprtrdma_disconnect", i1 false, i1 false}
!973 = !{ptr @__bpf_trace_tp_map_xprtrdma_op_inject_dsc, !13, !"__bpf_trace_tp_map_xprtrdma_op_inject_dsc", i1 false, i1 false}
!974 = !{ptr @__bpf_trace_tp_map_xprtrdma_op_connect, !17, !"__bpf_trace_tp_map_xprtrdma_op_connect", i1 false, i1 false}
!975 = !{ptr @__bpf_trace_tp_map_xprtrdma_op_set_cto, !21, !"__bpf_trace_tp_map_xprtrdma_op_set_cto", i1 false, i1 false}
!976 = !{ptr @__bpf_trace_tp_map_xprtrdma_createmrs, !25, !"__bpf_trace_tp_map_xprtrdma_createmrs", i1 false, i1 false}
!977 = !{ptr @__bpf_trace_tp_map_xprtrdma_nomrs_err, !29, !"__bpf_trace_tp_map_xprtrdma_nomrs_err", i1 false, i1 false}
!978 = !{ptr @__bpf_trace_tp_map_xprtrdma_chunk_read, !33, !"__bpf_trace_tp_map_xprtrdma_chunk_read", i1 false, i1 false}
!979 = !{ptr @__bpf_trace_tp_map_xprtrdma_chunk_write, !37, !"__bpf_trace_tp_map_xprtrdma_chunk_write", i1 false, i1 false}
!980 = !{ptr @__bpf_trace_tp_map_xprtrdma_chunk_reply, !41, !"__bpf_trace_tp_map_xprtrdma_chunk_reply", i1 false, i1 false}
!981 = !{ptr @__bpf_trace_tp_map_xprtrdma_chunk_wp, !45, !"__bpf_trace_tp_map_xprtrdma_chunk_wp", i1 false, i1 false}
!982 = !{ptr @__bpf_trace_tp_map_xprtrdma_marshal, !49, !"__bpf_trace_tp_map_xprtrdma_marshal", i1 false, i1 false}
!983 = !{ptr @__bpf_trace_tp_map_xprtrdma_marshal_failed, !53, !"__bpf_trace_tp_map_xprtrdma_marshal_failed", i1 false, i1 false}
!984 = !{ptr @__bpf_trace_tp_map_xprtrdma_prepsend_failed, !57, !"__bpf_trace_tp_map_xprtrdma_prepsend_failed", i1 false, i1 false}
!985 = !{ptr @__bpf_trace_tp_map_xprtrdma_post_send, !61, !"__bpf_trace_tp_map_xprtrdma_post_send", i1 false, i1 false}
!986 = !{ptr @__bpf_trace_tp_map_xprtrdma_post_send_err, !65, !"__bpf_trace_tp_map_xprtrdma_post_send_err", i1 false, i1 false}
!987 = !{ptr @__bpf_trace_tp_map_xprtrdma_post_recv, !69, !"__bpf_trace_tp_map_xprtrdma_post_recv", i1 false, i1 false}
!988 = !{ptr @__bpf_trace_tp_map_xprtrdma_post_recvs, !73, !"__bpf_trace_tp_map_xprtrdma_post_recvs", i1 false, i1 false}
!989 = !{ptr @__bpf_trace_tp_map_xprtrdma_post_recvs_err, !77, !"__bpf_trace_tp_map_xprtrdma_post_recvs_err", i1 false, i1 false}
!990 = !{ptr @__bpf_trace_tp_map_xprtrdma_post_linv_err, !81, !"__bpf_trace_tp_map_xprtrdma_post_linv_err", i1 false, i1 false}
!991 = !{ptr @__bpf_trace_tp_map_xprtrdma_wc_receive, !85, !"__bpf_trace_tp_map_xprtrdma_wc_receive", i1 false, i1 false}
!992 = !{ptr @__bpf_trace_tp_map_xprtrdma_wc_send, !89, !"__bpf_trace_tp_map_xprtrdma_wc_send", i1 false, i1 false}
!993 = !{ptr @__bpf_trace_tp_map_xprtrdma_wc_fastreg, !93, !"__bpf_trace_tp_map_xprtrdma_wc_fastreg", i1 false, i1 false}
!994 = !{ptr @__bpf_trace_tp_map_xprtrdma_wc_li, !97, !"__bpf_trace_tp_map_xprtrdma_wc_li", i1 false, i1 false}
!995 = !{ptr @__bpf_trace_tp_map_xprtrdma_wc_li_wake, !101, !"__bpf_trace_tp_map_xprtrdma_wc_li_wake", i1 false, i1 false}
!996 = !{ptr @__bpf_trace_tp_map_xprtrdma_wc_li_done, !105, !"__bpf_trace_tp_map_xprtrdma_wc_li_done", i1 false, i1 false}
!997 = !{ptr @__bpf_trace_tp_map_xprtrdma_frwr_alloc, !109, !"__bpf_trace_tp_map_xprtrdma_frwr_alloc", i1 false, i1 false}
!998 = !{ptr @__bpf_trace_tp_map_xprtrdma_frwr_dereg, !113, !"__bpf_trace_tp_map_xprtrdma_frwr_dereg", i1 false, i1 false}
!999 = !{ptr @__bpf_trace_tp_map_xprtrdma_frwr_sgerr, !117, !"__bpf_trace_tp_map_xprtrdma_frwr_sgerr", i1 false, i1 false}
!1000 = !{ptr @__bpf_trace_tp_map_xprtrdma_frwr_maperr, !121, !"__bpf_trace_tp_map_xprtrdma_frwr_maperr", i1 false, i1 false}
!1001 = !{ptr @__bpf_trace_tp_map_xprtrdma_mr_fastreg, !125, !"__bpf_trace_tp_map_xprtrdma_mr_fastreg", i1 false, i1 false}
!1002 = !{ptr @__bpf_trace_tp_map_xprtrdma_mr_localinv, !129, !"__bpf_trace_tp_map_xprtrdma_mr_localinv", i1 false, i1 false}
!1003 = !{ptr @__bpf_trace_tp_map_xprtrdma_mr_reminv, !133, !"__bpf_trace_tp_map_xprtrdma_mr_reminv", i1 false, i1 false}
!1004 = !{ptr @__bpf_trace_tp_map_xprtrdma_mr_map, !137, !"__bpf_trace_tp_map_xprtrdma_mr_map", i1 false, i1 false}
!1005 = !{ptr @__bpf_trace_tp_map_xprtrdma_mr_unmap, !141, !"__bpf_trace_tp_map_xprtrdma_mr_unmap", i1 false, i1 false}
!1006 = !{ptr @__bpf_trace_tp_map_xprtrdma_dma_maperr, !145, !"__bpf_trace_tp_map_xprtrdma_dma_maperr", i1 false, i1 false}
!1007 = !{ptr @__bpf_trace_tp_map_xprtrdma_reply, !149, !"__bpf_trace_tp_map_xprtrdma_reply", i1 false, i1 false}
!1008 = !{ptr @__bpf_trace_tp_map_xprtrdma_reply_vers_err, !153, !"__bpf_trace_tp_map_xprtrdma_reply_vers_err", i1 false, i1 false}
!1009 = !{ptr @__bpf_trace_tp_map_xprtrdma_reply_rqst_err, !157, !"__bpf_trace_tp_map_xprtrdma_reply_rqst_err", i1 false, i1 false}
!1010 = !{ptr @__bpf_trace_tp_map_xprtrdma_reply_short_err, !161, !"__bpf_trace_tp_map_xprtrdma_reply_short_err", i1 false, i1 false}
!1011 = !{ptr @__bpf_trace_tp_map_xprtrdma_reply_hdr_err, !165, !"__bpf_trace_tp_map_xprtrdma_reply_hdr_err", i1 false, i1 false}
!1012 = !{ptr @__bpf_trace_tp_map_xprtrdma_err_vers, !169, !"__bpf_trace_tp_map_xprtrdma_err_vers", i1 false, i1 false}
!1013 = !{ptr @__bpf_trace_tp_map_xprtrdma_err_chunk, !173, !"__bpf_trace_tp_map_xprtrdma_err_chunk", i1 false, i1 false}
!1014 = !{ptr @__bpf_trace_tp_map_xprtrdma_err_unrecognized, !177, !"__bpf_trace_tp_map_xprtrdma_err_unrecognized", i1 false, i1 false}
!1015 = !{ptr @__bpf_trace_tp_map_xprtrdma_fixup, !181, !"__bpf_trace_tp_map_xprtrdma_fixup", i1 false, i1 false}
!1016 = !{ptr @__bpf_trace_tp_map_xprtrdma_decode_seg, !185, !"__bpf_trace_tp_map_xprtrdma_decode_seg", i1 false, i1 false}
!1017 = !{ptr @__bpf_trace_tp_map_xprtrdma_mrs_zap, !189, !"__bpf_trace_tp_map_xprtrdma_mrs_zap", i1 false, i1 false}
!1018 = !{ptr @__bpf_trace_tp_map_xprtrdma_cb_setup, !193, !"__bpf_trace_tp_map_xprtrdma_cb_setup", i1 false, i1 false}
!1019 = !{ptr @__bpf_trace_tp_map_xprtrdma_cb_call, !197, !"__bpf_trace_tp_map_xprtrdma_cb_call", i1 false, i1 false}
!1020 = !{ptr @__bpf_trace_tp_map_xprtrdma_cb_reply, !201, !"__bpf_trace_tp_map_xprtrdma_cb_reply", i1 false, i1 false}
!1021 = !{ptr @__bpf_trace_tp_map_svcrdma_pd_err, !205, !"__bpf_trace_tp_map_svcrdma_pd_err", i1 false, i1 false}
!1022 = !{ptr @__bpf_trace_tp_map_svcrdma_qp_err, !209, !"__bpf_trace_tp_map_svcrdma_qp_err", i1 false, i1 false}
!1023 = !{ptr @__bpf_trace_tp_map_svcrdma_fabric_err, !213, !"__bpf_trace_tp_map_svcrdma_fabric_err", i1 false, i1 false}
!1024 = !{ptr @__bpf_trace_tp_map_svcrdma_initdepth_err, !217, !"__bpf_trace_tp_map_svcrdma_initdepth_err", i1 false, i1 false}
!1025 = !{ptr @__bpf_trace_tp_map_svcrdma_accept_err, !221, !"__bpf_trace_tp_map_svcrdma_accept_err", i1 false, i1 false}
!1026 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_rqst, !225, !"__bpf_trace_tp_map_svcrdma_decode_rqst", i1 false, i1 false}
!1027 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_short_err, !229, !"__bpf_trace_tp_map_svcrdma_decode_short_err", i1 false, i1 false}
!1028 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_badvers_err, !233, !"__bpf_trace_tp_map_svcrdma_decode_badvers_err", i1 false, i1 false}
!1029 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_drop_err, !237, !"__bpf_trace_tp_map_svcrdma_decode_drop_err", i1 false, i1 false}
!1030 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_badproc_err, !241, !"__bpf_trace_tp_map_svcrdma_decode_badproc_err", i1 false, i1 false}
!1031 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_parse_err, !245, !"__bpf_trace_tp_map_svcrdma_decode_parse_err", i1 false, i1 false}
!1032 = !{ptr @__bpf_trace_tp_map_svcrdma_encode_wseg, !249, !"__bpf_trace_tp_map_svcrdma_encode_wseg", i1 false, i1 false}
!1033 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_rseg, !253, !"__bpf_trace_tp_map_svcrdma_decode_rseg", i1 false, i1 false}
!1034 = !{ptr @__bpf_trace_tp_map_svcrdma_decode_wseg, !257, !"__bpf_trace_tp_map_svcrdma_decode_wseg", i1 false, i1 false}
!1035 = !{ptr @__bpf_trace_tp_map_svcrdma_err_vers, !261, !"__bpf_trace_tp_map_svcrdma_err_vers", i1 false, i1 false}
!1036 = !{ptr @__bpf_trace_tp_map_svcrdma_err_chunk, !265, !"__bpf_trace_tp_map_svcrdma_err_chunk", i1 false, i1 false}
!1037 = !{ptr @__bpf_trace_tp_map_svcrdma_dma_map_page, !269, !"__bpf_trace_tp_map_svcrdma_dma_map_page", i1 false, i1 false}
!1038 = !{ptr @__bpf_trace_tp_map_svcrdma_dma_map_err, !273, !"__bpf_trace_tp_map_svcrdma_dma_map_err", i1 false, i1 false}
!1039 = !{ptr @__bpf_trace_tp_map_svcrdma_dma_unmap_page, !277, !"__bpf_trace_tp_map_svcrdma_dma_unmap_page", i1 false, i1 false}
!1040 = !{ptr @__bpf_trace_tp_map_svcrdma_dma_map_rw_err, !281, !"__bpf_trace_tp_map_svcrdma_dma_map_rw_err", i1 false, i1 false}
!1041 = !{ptr @__bpf_trace_tp_map_svcrdma_no_rwctx_err, !285, !"__bpf_trace_tp_map_svcrdma_no_rwctx_err", i1 false, i1 false}
!1042 = !{ptr @__bpf_trace_tp_map_svcrdma_page_overrun_err, !289, !"__bpf_trace_tp_map_svcrdma_page_overrun_err", i1 false, i1 false}
!1043 = !{ptr @__bpf_trace_tp_map_svcrdma_small_wrch_err, !293, !"__bpf_trace_tp_map_svcrdma_small_wrch_err", i1 false, i1 false}
!1044 = !{ptr @__bpf_trace_tp_map_svcrdma_send_pullup, !297, !"__bpf_trace_tp_map_svcrdma_send_pullup", i1 false, i1 false}
!1045 = !{ptr @__bpf_trace_tp_map_svcrdma_send_err, !301, !"__bpf_trace_tp_map_svcrdma_send_err", i1 false, i1 false}
!1046 = !{ptr @__bpf_trace_tp_map_svcrdma_post_send, !305, !"__bpf_trace_tp_map_svcrdma_post_send", i1 false, i1 false}
!1047 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_send, !309, !"__bpf_trace_tp_map_svcrdma_wc_send", i1 false, i1 false}
!1048 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_send_flush, !313, !"__bpf_trace_tp_map_svcrdma_wc_send_flush", i1 false, i1 false}
!1049 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_send_err, !317, !"__bpf_trace_tp_map_svcrdma_wc_send_err", i1 false, i1 false}
!1050 = !{ptr @__bpf_trace_tp_map_svcrdma_post_recv, !321, !"__bpf_trace_tp_map_svcrdma_post_recv", i1 false, i1 false}
!1051 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_recv, !325, !"__bpf_trace_tp_map_svcrdma_wc_recv", i1 false, i1 false}
!1052 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_recv_flush, !329, !"__bpf_trace_tp_map_svcrdma_wc_recv_flush", i1 false, i1 false}
!1053 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_recv_err, !333, !"__bpf_trace_tp_map_svcrdma_wc_recv_err", i1 false, i1 false}
!1054 = !{ptr @__bpf_trace_tp_map_svcrdma_rq_post_err, !337, !"__bpf_trace_tp_map_svcrdma_rq_post_err", i1 false, i1 false}
!1055 = !{ptr @__bpf_trace_tp_map_svcrdma_post_read_chunk, !341, !"__bpf_trace_tp_map_svcrdma_post_read_chunk", i1 false, i1 false}
!1056 = !{ptr @__bpf_trace_tp_map_svcrdma_post_write_chunk, !345, !"__bpf_trace_tp_map_svcrdma_post_write_chunk", i1 false, i1 false}
!1057 = !{ptr @__bpf_trace_tp_map_svcrdma_post_reply_chunk, !349, !"__bpf_trace_tp_map_svcrdma_post_reply_chunk", i1 false, i1 false}
!1058 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_read, !353, !"__bpf_trace_tp_map_svcrdma_wc_read", i1 false, i1 false}
!1059 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_read_flush, !357, !"__bpf_trace_tp_map_svcrdma_wc_read_flush", i1 false, i1 false}
!1060 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_read_err, !361, !"__bpf_trace_tp_map_svcrdma_wc_read_err", i1 false, i1 false}
!1061 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_write, !365, !"__bpf_trace_tp_map_svcrdma_wc_write", i1 false, i1 false}
!1062 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_write_flush, !369, !"__bpf_trace_tp_map_svcrdma_wc_write_flush", i1 false, i1 false}
!1063 = !{ptr @__bpf_trace_tp_map_svcrdma_wc_write_err, !373, !"__bpf_trace_tp_map_svcrdma_wc_write_err", i1 false, i1 false}
!1064 = !{ptr @__bpf_trace_tp_map_svcrdma_qp_error, !377, !"__bpf_trace_tp_map_svcrdma_qp_error", i1 false, i1 false}
!1065 = !{ptr @__bpf_trace_tp_map_svcrdma_sq_full, !381, !"__bpf_trace_tp_map_svcrdma_sq_full", i1 false, i1 false}
!1066 = !{ptr @__bpf_trace_tp_map_svcrdma_sq_retry, !385, !"__bpf_trace_tp_map_svcrdma_sq_retry", i1 false, i1 false}
!1067 = !{ptr @__bpf_trace_tp_map_svcrdma_sq_post_err, !389, !"__bpf_trace_tp_map_svcrdma_sq_post_err", i1 false, i1 false}
!1068 = !{ptr @__UNIQUE_ID_author1002, !1069, !"__UNIQUE_ID_author1002", i1 false, i1 false}
!1069 = !{!"../net/sunrpc/xprtrdma/module.c", i32 22, i32 1}
!1070 = !{ptr @__UNIQUE_ID_description1003, !1071, !"__UNIQUE_ID_description1003", i1 false, i1 false}
!1071 = !{!"../net/sunrpc/xprtrdma/module.c", i32 23, i32 1}
!1072 = !{ptr @__UNIQUE_ID_file1004, !1073, !"__UNIQUE_ID_file1004", i1 false, i1 false}
!1073 = !{!"../net/sunrpc/xprtrdma/module.c", i32 24, i32 1}
!1074 = !{ptr @__UNIQUE_ID_license1005, !1073, !"__UNIQUE_ID_license1005", i1 false, i1 false}
!1075 = !{ptr @__UNIQUE_ID_alias1006, !1076, !"__UNIQUE_ID_alias1006", i1 false, i1 false}
!1076 = !{!"../net/sunrpc/xprtrdma/module.c", i32 25, i32 1}
!1077 = !{ptr @__UNIQUE_ID_alias1007, !1078, !"__UNIQUE_ID_alias1007", i1 false, i1 false}
!1078 = !{!"../net/sunrpc/xprtrdma/module.c", i32 26, i32 1}
!1079 = !{ptr @__UNIQUE_ID_alias1008, !1080, !"__UNIQUE_ID_alias1008", i1 false, i1 false}
!1080 = !{!"../net/sunrpc/xprtrdma/module.c", i32 27, i32 1}
!1081 = !{ptr @__initcall__kmod_rpcrdma__1009_51_rpc_rdma_init6, !1082, !"__initcall__kmod_rpcrdma__1009_51_rpc_rdma_init6", i1 false, i1 false}
!1082 = !{!"../net/sunrpc/xprtrdma/module.c", i32 51, i32 1}
!1083 = !{ptr @__exitcall_rpc_rdma_cleanup, !1084, !"__exitcall_rpc_rdma_cleanup", i1 false, i1 false}
!1084 = !{!"../net/sunrpc/xprtrdma/module.c", i32 52, i32 1}
!1085 = !{ptr @__tpstrtab_xprtrdma_inline_thresh, !1, !"__tpstrtab_xprtrdma_inline_thresh", i1 false, i1 false}
!1086 = !{ptr @__tpstrtab_xprtrdma_connect, !5, !"__tpstrtab_xprtrdma_connect", i1 false, i1 false}
!1087 = !{ptr @__tpstrtab_xprtrdma_disconnect, !9, !"__tpstrtab_xprtrdma_disconnect", i1 false, i1 false}
!1088 = !{ptr @__tpstrtab_xprtrdma_op_inject_dsc, !13, !"__tpstrtab_xprtrdma_op_inject_dsc", i1 false, i1 false}
!1089 = !{ptr @__tpstrtab_xprtrdma_op_connect, !17, !"__tpstrtab_xprtrdma_op_connect", i1 false, i1 false}
!1090 = !{ptr @__tpstrtab_xprtrdma_op_set_cto, !21, !"__tpstrtab_xprtrdma_op_set_cto", i1 false, i1 false}
!1091 = !{ptr @__tpstrtab_xprtrdma_createmrs, !25, !"__tpstrtab_xprtrdma_createmrs", i1 false, i1 false}
!1092 = !{ptr @__tpstrtab_xprtrdma_nomrs_err, !29, !"__tpstrtab_xprtrdma_nomrs_err", i1 false, i1 false}
!1093 = !{ptr @__tpstrtab_xprtrdma_chunk_read, !33, !"__tpstrtab_xprtrdma_chunk_read", i1 false, i1 false}
!1094 = !{ptr @__tpstrtab_xprtrdma_chunk_write, !37, !"__tpstrtab_xprtrdma_chunk_write", i1 false, i1 false}
!1095 = !{ptr @__tpstrtab_xprtrdma_chunk_reply, !41, !"__tpstrtab_xprtrdma_chunk_reply", i1 false, i1 false}
!1096 = !{ptr @__tpstrtab_xprtrdma_chunk_wp, !45, !"__tpstrtab_xprtrdma_chunk_wp", i1 false, i1 false}
!1097 = !{ptr @__tpstrtab_xprtrdma_marshal, !49, !"__tpstrtab_xprtrdma_marshal", i1 false, i1 false}
!1098 = !{ptr @__tpstrtab_xprtrdma_marshal_failed, !53, !"__tpstrtab_xprtrdma_marshal_failed", i1 false, i1 false}
!1099 = !{ptr @__tpstrtab_xprtrdma_prepsend_failed, !57, !"__tpstrtab_xprtrdma_prepsend_failed", i1 false, i1 false}
!1100 = !{ptr @__tpstrtab_xprtrdma_post_send, !61, !"__tpstrtab_xprtrdma_post_send", i1 false, i1 false}
!1101 = !{ptr @__tpstrtab_xprtrdma_post_send_err, !65, !"__tpstrtab_xprtrdma_post_send_err", i1 false, i1 false}
!1102 = !{ptr @__tpstrtab_xprtrdma_post_recv, !69, !"__tpstrtab_xprtrdma_post_recv", i1 false, i1 false}
!1103 = !{ptr @__tpstrtab_xprtrdma_post_recvs, !73, !"__tpstrtab_xprtrdma_post_recvs", i1 false, i1 false}
!1104 = !{ptr @__tpstrtab_xprtrdma_post_recvs_err, !77, !"__tpstrtab_xprtrdma_post_recvs_err", i1 false, i1 false}
!1105 = !{ptr @__tpstrtab_xprtrdma_post_linv_err, !81, !"__tpstrtab_xprtrdma_post_linv_err", i1 false, i1 false}
!1106 = !{ptr @__tpstrtab_xprtrdma_wc_receive, !85, !"__tpstrtab_xprtrdma_wc_receive", i1 false, i1 false}
!1107 = !{ptr @__tpstrtab_xprtrdma_wc_send, !89, !"__tpstrtab_xprtrdma_wc_send", i1 false, i1 false}
!1108 = !{ptr @__tpstrtab_xprtrdma_wc_fastreg, !93, !"__tpstrtab_xprtrdma_wc_fastreg", i1 false, i1 false}
!1109 = !{ptr @__tpstrtab_xprtrdma_wc_li, !97, !"__tpstrtab_xprtrdma_wc_li", i1 false, i1 false}
!1110 = !{ptr @__tpstrtab_xprtrdma_wc_li_wake, !101, !"__tpstrtab_xprtrdma_wc_li_wake", i1 false, i1 false}
!1111 = !{ptr @__tpstrtab_xprtrdma_wc_li_done, !105, !"__tpstrtab_xprtrdma_wc_li_done", i1 false, i1 false}
!1112 = !{ptr @__tpstrtab_xprtrdma_frwr_alloc, !109, !"__tpstrtab_xprtrdma_frwr_alloc", i1 false, i1 false}
!1113 = !{ptr @__tpstrtab_xprtrdma_frwr_dereg, !113, !"__tpstrtab_xprtrdma_frwr_dereg", i1 false, i1 false}
!1114 = !{ptr @__tpstrtab_xprtrdma_frwr_sgerr, !117, !"__tpstrtab_xprtrdma_frwr_sgerr", i1 false, i1 false}
!1115 = !{ptr @__tpstrtab_xprtrdma_frwr_maperr, !121, !"__tpstrtab_xprtrdma_frwr_maperr", i1 false, i1 false}
!1116 = !{ptr @__tpstrtab_xprtrdma_mr_fastreg, !125, !"__tpstrtab_xprtrdma_mr_fastreg", i1 false, i1 false}
!1117 = !{ptr @__tpstrtab_xprtrdma_mr_localinv, !129, !"__tpstrtab_xprtrdma_mr_localinv", i1 false, i1 false}
!1118 = !{ptr @__tpstrtab_xprtrdma_mr_reminv, !133, !"__tpstrtab_xprtrdma_mr_reminv", i1 false, i1 false}
!1119 = !{ptr @__tpstrtab_xprtrdma_mr_map, !137, !"__tpstrtab_xprtrdma_mr_map", i1 false, i1 false}
!1120 = !{ptr @__tpstrtab_xprtrdma_mr_unmap, !141, !"__tpstrtab_xprtrdma_mr_unmap", i1 false, i1 false}
!1121 = !{ptr @__tpstrtab_xprtrdma_dma_maperr, !145, !"__tpstrtab_xprtrdma_dma_maperr", i1 false, i1 false}
!1122 = !{ptr @__tpstrtab_xprtrdma_reply, !149, !"__tpstrtab_xprtrdma_reply", i1 false, i1 false}
!1123 = !{ptr @__tpstrtab_xprtrdma_reply_vers_err, !153, !"__tpstrtab_xprtrdma_reply_vers_err", i1 false, i1 false}
!1124 = !{ptr @__tpstrtab_xprtrdma_reply_rqst_err, !157, !"__tpstrtab_xprtrdma_reply_rqst_err", i1 false, i1 false}
!1125 = !{ptr @__tpstrtab_xprtrdma_reply_short_err, !161, !"__tpstrtab_xprtrdma_reply_short_err", i1 false, i1 false}
!1126 = !{ptr @__tpstrtab_xprtrdma_reply_hdr_err, !165, !"__tpstrtab_xprtrdma_reply_hdr_err", i1 false, i1 false}
!1127 = !{ptr @__tpstrtab_xprtrdma_err_vers, !169, !"__tpstrtab_xprtrdma_err_vers", i1 false, i1 false}
!1128 = !{ptr @__tpstrtab_xprtrdma_err_chunk, !173, !"__tpstrtab_xprtrdma_err_chunk", i1 false, i1 false}
!1129 = !{ptr @__tpstrtab_xprtrdma_err_unrecognized, !177, !"__tpstrtab_xprtrdma_err_unrecognized", i1 false, i1 false}
!1130 = !{ptr @__tpstrtab_xprtrdma_fixup, !181, !"__tpstrtab_xprtrdma_fixup", i1 false, i1 false}
!1131 = !{ptr @__tpstrtab_xprtrdma_decode_seg, !185, !"__tpstrtab_xprtrdma_decode_seg", i1 false, i1 false}
!1132 = !{ptr @__tpstrtab_xprtrdma_mrs_zap, !189, !"__tpstrtab_xprtrdma_mrs_zap", i1 false, i1 false}
!1133 = !{ptr @__tpstrtab_xprtrdma_cb_setup, !193, !"__tpstrtab_xprtrdma_cb_setup", i1 false, i1 false}
!1134 = !{ptr @__tpstrtab_xprtrdma_cb_call, !197, !"__tpstrtab_xprtrdma_cb_call", i1 false, i1 false}
!1135 = !{ptr @__tpstrtab_xprtrdma_cb_reply, !201, !"__tpstrtab_xprtrdma_cb_reply", i1 false, i1 false}
!1136 = !{ptr @__tpstrtab_svcrdma_pd_err, !205, !"__tpstrtab_svcrdma_pd_err", i1 false, i1 false}
!1137 = !{ptr @__tpstrtab_svcrdma_qp_err, !209, !"__tpstrtab_svcrdma_qp_err", i1 false, i1 false}
!1138 = !{ptr @__tpstrtab_svcrdma_fabric_err, !213, !"__tpstrtab_svcrdma_fabric_err", i1 false, i1 false}
!1139 = !{ptr @__tpstrtab_svcrdma_initdepth_err, !217, !"__tpstrtab_svcrdma_initdepth_err", i1 false, i1 false}
!1140 = !{ptr @__tpstrtab_svcrdma_accept_err, !221, !"__tpstrtab_svcrdma_accept_err", i1 false, i1 false}
!1141 = !{ptr @__tpstrtab_svcrdma_decode_rqst, !225, !"__tpstrtab_svcrdma_decode_rqst", i1 false, i1 false}
!1142 = !{ptr @__tpstrtab_svcrdma_decode_short_err, !229, !"__tpstrtab_svcrdma_decode_short_err", i1 false, i1 false}
!1143 = !{ptr @__tpstrtab_svcrdma_decode_badvers_err, !233, !"__tpstrtab_svcrdma_decode_badvers_err", i1 false, i1 false}
!1144 = !{ptr @__tpstrtab_svcrdma_decode_drop_err, !237, !"__tpstrtab_svcrdma_decode_drop_err", i1 false, i1 false}
!1145 = !{ptr @__tpstrtab_svcrdma_decode_badproc_err, !241, !"__tpstrtab_svcrdma_decode_badproc_err", i1 false, i1 false}
!1146 = !{ptr @__tpstrtab_svcrdma_decode_parse_err, !245, !"__tpstrtab_svcrdma_decode_parse_err", i1 false, i1 false}
!1147 = !{ptr @__tpstrtab_svcrdma_encode_wseg, !249, !"__tpstrtab_svcrdma_encode_wseg", i1 false, i1 false}
!1148 = !{ptr @__tpstrtab_svcrdma_decode_rseg, !253, !"__tpstrtab_svcrdma_decode_rseg", i1 false, i1 false}
!1149 = !{ptr @__tpstrtab_svcrdma_decode_wseg, !257, !"__tpstrtab_svcrdma_decode_wseg", i1 false, i1 false}
!1150 = !{ptr @__tpstrtab_svcrdma_err_vers, !261, !"__tpstrtab_svcrdma_err_vers", i1 false, i1 false}
!1151 = !{ptr @__tpstrtab_svcrdma_err_chunk, !265, !"__tpstrtab_svcrdma_err_chunk", i1 false, i1 false}
!1152 = !{ptr @__tpstrtab_svcrdma_dma_map_page, !269, !"__tpstrtab_svcrdma_dma_map_page", i1 false, i1 false}
!1153 = !{ptr @__tpstrtab_svcrdma_dma_map_err, !273, !"__tpstrtab_svcrdma_dma_map_err", i1 false, i1 false}
!1154 = !{ptr @__tpstrtab_svcrdma_dma_unmap_page, !277, !"__tpstrtab_svcrdma_dma_unmap_page", i1 false, i1 false}
!1155 = !{ptr @__tpstrtab_svcrdma_dma_map_rw_err, !281, !"__tpstrtab_svcrdma_dma_map_rw_err", i1 false, i1 false}
!1156 = !{ptr @__tpstrtab_svcrdma_no_rwctx_err, !285, !"__tpstrtab_svcrdma_no_rwctx_err", i1 false, i1 false}
!1157 = !{ptr @__tpstrtab_svcrdma_page_overrun_err, !289, !"__tpstrtab_svcrdma_page_overrun_err", i1 false, i1 false}
!1158 = !{ptr @__tpstrtab_svcrdma_small_wrch_err, !293, !"__tpstrtab_svcrdma_small_wrch_err", i1 false, i1 false}
!1159 = !{ptr @__tpstrtab_svcrdma_send_pullup, !297, !"__tpstrtab_svcrdma_send_pullup", i1 false, i1 false}
!1160 = !{ptr @__tpstrtab_svcrdma_send_err, !301, !"__tpstrtab_svcrdma_send_err", i1 false, i1 false}
!1161 = !{ptr @__tpstrtab_svcrdma_post_send, !305, !"__tpstrtab_svcrdma_post_send", i1 false, i1 false}
!1162 = !{ptr @__tpstrtab_svcrdma_wc_send, !309, !"__tpstrtab_svcrdma_wc_send", i1 false, i1 false}
!1163 = !{ptr @__tpstrtab_svcrdma_wc_send_flush, !313, !"__tpstrtab_svcrdma_wc_send_flush", i1 false, i1 false}
!1164 = !{ptr @__tpstrtab_svcrdma_wc_send_err, !317, !"__tpstrtab_svcrdma_wc_send_err", i1 false, i1 false}
!1165 = !{ptr @__tpstrtab_svcrdma_post_recv, !321, !"__tpstrtab_svcrdma_post_recv", i1 false, i1 false}
!1166 = !{ptr @__tpstrtab_svcrdma_wc_recv, !325, !"__tpstrtab_svcrdma_wc_recv", i1 false, i1 false}
!1167 = !{ptr @__tpstrtab_svcrdma_wc_recv_flush, !329, !"__tpstrtab_svcrdma_wc_recv_flush", i1 false, i1 false}
!1168 = !{ptr @__tpstrtab_svcrdma_wc_recv_err, !333, !"__tpstrtab_svcrdma_wc_recv_err", i1 false, i1 false}
!1169 = !{ptr @__tpstrtab_svcrdma_rq_post_err, !337, !"__tpstrtab_svcrdma_rq_post_err", i1 false, i1 false}
!1170 = !{ptr @__tpstrtab_svcrdma_post_read_chunk, !341, !"__tpstrtab_svcrdma_post_read_chunk", i1 false, i1 false}
!1171 = !{ptr @__tpstrtab_svcrdma_post_write_chunk, !345, !"__tpstrtab_svcrdma_post_write_chunk", i1 false, i1 false}
!1172 = !{ptr @__tpstrtab_svcrdma_post_reply_chunk, !349, !"__tpstrtab_svcrdma_post_reply_chunk", i1 false, i1 false}
!1173 = !{ptr @__tpstrtab_svcrdma_wc_read, !353, !"__tpstrtab_svcrdma_wc_read", i1 false, i1 false}
!1174 = !{ptr @__tpstrtab_svcrdma_wc_read_flush, !357, !"__tpstrtab_svcrdma_wc_read_flush", i1 false, i1 false}
!1175 = !{ptr @__tpstrtab_svcrdma_wc_read_err, !361, !"__tpstrtab_svcrdma_wc_read_err", i1 false, i1 false}
!1176 = !{ptr @__tpstrtab_svcrdma_wc_write, !365, !"__tpstrtab_svcrdma_wc_write", i1 false, i1 false}
!1177 = !{ptr @__tpstrtab_svcrdma_wc_write_flush, !369, !"__tpstrtab_svcrdma_wc_write_flush", i1 false, i1 false}
!1178 = !{ptr @__tpstrtab_svcrdma_wc_write_err, !373, !"__tpstrtab_svcrdma_wc_write_err", i1 false, i1 false}
!1179 = !{ptr @__tpstrtab_svcrdma_qp_error, !377, !"__tpstrtab_svcrdma_qp_error", i1 false, i1 false}
!1180 = !{ptr @__tpstrtab_svcrdma_sq_full, !381, !"__tpstrtab_svcrdma_sq_full", i1 false, i1 false}
!1181 = !{ptr @__tpstrtab_svcrdma_sq_retry, !385, !"__tpstrtab_svcrdma_sq_retry", i1 false, i1 false}
!1182 = !{ptr @__tpstrtab_svcrdma_sq_post_err, !389, !"__tpstrtab_svcrdma_sq_post_err", i1 false, i1 false}
!1183 = !{ptr @str__rpcrdma__trace_system_name, !1184, !"str__rpcrdma__trace_system_name", i1 false, i1 false}
!1184 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!1185 = !{ptr @.str.92, !689, !"<string literal>", i1 false, i1 false}
!1186 = !{ptr @.str.93, !689, !"<string literal>", i1 false, i1 false}
!1187 = !{ptr @.str.94, !689, !"<string literal>", i1 false, i1 false}
!1188 = !{ptr @.str.95, !689, !"<string literal>", i1 false, i1 false}
!1189 = !{ptr @.str.96, !689, !"<string literal>", i1 false, i1 false}
!1190 = !{ptr @.str.97, !689, !"<string literal>", i1 false, i1 false}
!1191 = !{ptr @.str.98, !689, !"<string literal>", i1 false, i1 false}
!1192 = !{ptr @.str.99, !689, !"<string literal>", i1 false, i1 false}
!1193 = !{ptr @trace_event_fields_rpcrdma_completion_class, !689, !"trace_event_fields_rpcrdma_completion_class", i1 false, i1 false}
!1194 = !{ptr @trace_event_fields_rpcrdma_send_completion_class, !691, !"trace_event_fields_rpcrdma_send_completion_class", i1 false, i1 false}
!1195 = !{ptr @trace_event_fields_rpcrdma_send_flush_class, !693, !"trace_event_fields_rpcrdma_send_flush_class", i1 false, i1 false}
!1196 = !{ptr @trace_event_fields_rpcrdma_mr_completion_class, !695, !"trace_event_fields_rpcrdma_mr_completion_class", i1 false, i1 false}
!1197 = !{ptr @.str.100, !697, !"<string literal>", i1 false, i1 false}
!1198 = !{ptr @trace_event_fields_rpcrdma_receive_completion_class, !697, !"trace_event_fields_rpcrdma_receive_completion_class", i1 false, i1 false}
!1199 = !{ptr @trace_event_fields_rpcrdma_receive_success_class, !699, !"trace_event_fields_rpcrdma_receive_success_class", i1 false, i1 false}
!1200 = !{ptr @trace_event_fields_rpcrdma_receive_flush_class, !701, !"trace_event_fields_rpcrdma_receive_flush_class", i1 false, i1 false}
!1201 = !{ptr @.str.101, !703, !"<string literal>", i1 false, i1 false}
!1202 = !{ptr @.str.102, !703, !"<string literal>", i1 false, i1 false}
!1203 = !{ptr @.str.103, !703, !"<string literal>", i1 false, i1 false}
!1204 = !{ptr @.str.104, !703, !"<string literal>", i1 false, i1 false}
!1205 = !{ptr @.str.105, !703, !"<string literal>", i1 false, i1 false}
!1206 = !{ptr @.str.106, !703, !"<string literal>", i1 false, i1 false}
!1207 = !{ptr @.str.107, !703, !"<string literal>", i1 false, i1 false}
!1208 = !{ptr @trace_event_fields_xprtrdma_reply_class, !703, !"trace_event_fields_xprtrdma_reply_class", i1 false, i1 false}
!1209 = !{ptr @trace_event_fields_xprtrdma_rxprt, !705, !"trace_event_fields_xprtrdma_rxprt", i1 false, i1 false}
!1210 = !{ptr @.str.108, !707, !"<string literal>", i1 false, i1 false}
!1211 = !{ptr @.str.109, !707, !"<string literal>", i1 false, i1 false}
!1212 = !{ptr @trace_event_fields_xprtrdma_connect_class, !707, !"trace_event_fields_xprtrdma_connect_class", i1 false, i1 false}
!1213 = !{ptr @.str.110, !709, !"<string literal>", i1 false, i1 false}
!1214 = !{ptr @.str.111, !709, !"<string literal>", i1 false, i1 false}
!1215 = !{ptr @.str.112, !709, !"<string literal>", i1 false, i1 false}
!1216 = !{ptr @.str.113, !709, !"<string literal>", i1 false, i1 false}
!1217 = !{ptr @.str.114, !709, !"<string literal>", i1 false, i1 false}
!1218 = !{ptr @.str.115, !709, !"<string literal>", i1 false, i1 false}
!1219 = !{ptr @.str.116, !709, !"<string literal>", i1 false, i1 false}
!1220 = !{ptr @.str.117, !709, !"<string literal>", i1 false, i1 false}
!1221 = !{ptr @.str.118, !709, !"<string literal>", i1 false, i1 false}
!1222 = !{ptr @trace_event_fields_xprtrdma_rdch_event, !709, !"trace_event_fields_xprtrdma_rdch_event", i1 false, i1 false}
!1223 = !{ptr @trace_event_fields_xprtrdma_wrch_event, !711, !"trace_event_fields_xprtrdma_wrch_event", i1 false, i1 false}
!1224 = !{ptr @.str.119, !713, !"<string literal>", i1 false, i1 false}
!1225 = !{ptr @.str.120, !713, !"<string literal>", i1 false, i1 false}
!1226 = !{ptr @trace_event_fields_xprtrdma_mr_class, !713, !"trace_event_fields_xprtrdma_mr_class", i1 false, i1 false}
!1227 = !{ptr @trace_event_fields_xprtrdma_anonymous_mr_class, !715, !"trace_event_fields_xprtrdma_anonymous_mr_class", i1 false, i1 false}
!1228 = !{ptr @trace_event_fields_xprtrdma_callback_class, !717, !"trace_event_fields_xprtrdma_callback_class", i1 false, i1 false}
!1229 = !{ptr @.str.121, !1, !"<string literal>", i1 false, i1 false}
!1230 = !{ptr @.str.122, !1, !"<string literal>", i1 false, i1 false}
!1231 = !{ptr @.str.123, !1, !"<string literal>", i1 false, i1 false}
!1232 = !{ptr @.str.124, !1, !"<string literal>", i1 false, i1 false}
!1233 = !{ptr @.str.125, !1, !"<string literal>", i1 false, i1 false}
!1234 = !{ptr @.str.126, !1, !"<string literal>", i1 false, i1 false}
!1235 = !{ptr @.str.127, !1, !"<string literal>", i1 false, i1 false}
!1236 = !{ptr @trace_event_fields_xprtrdma_inline_thresh, !1, !"trace_event_fields_xprtrdma_inline_thresh", i1 false, i1 false}
!1237 = !{ptr @trace_event_type_funcs_xprtrdma_inline_thresh, !1, !"trace_event_type_funcs_xprtrdma_inline_thresh", i1 false, i1 false}
!1238 = !{ptr @.str.128, !1, !"<string literal>", i1 false, i1 false}
!1239 = !{ptr @print_fmt_xprtrdma_inline_thresh, !1, !"print_fmt_xprtrdma_inline_thresh", i1 false, i1 false}
!1240 = !{ptr @trace_event_type_funcs_xprtrdma_connect_class, !707, !"trace_event_type_funcs_xprtrdma_connect_class", i1 false, i1 false}
!1241 = !{ptr @.str.129, !707, !"<string literal>", i1 false, i1 false}
!1242 = !{ptr @print_fmt_xprtrdma_connect_class, !707, !"print_fmt_xprtrdma_connect_class", i1 false, i1 false}
!1243 = !{ptr @trace_event_type_funcs_xprtrdma_rxprt, !705, !"trace_event_type_funcs_xprtrdma_rxprt", i1 false, i1 false}
!1244 = !{ptr @.str.130, !705, !"<string literal>", i1 false, i1 false}
!1245 = !{ptr @print_fmt_xprtrdma_rxprt, !705, !"print_fmt_xprtrdma_rxprt", i1 false, i1 false}
!1246 = !{ptr @.str.131, !17, !"<string literal>", i1 false, i1 false}
!1247 = !{ptr @trace_event_fields_xprtrdma_op_connect, !17, !"trace_event_fields_xprtrdma_op_connect", i1 false, i1 false}
!1248 = !{ptr @trace_event_type_funcs_xprtrdma_op_connect, !17, !"trace_event_type_funcs_xprtrdma_op_connect", i1 false, i1 false}
!1249 = !{ptr @.str.132, !17, !"<string literal>", i1 false, i1 false}
!1250 = !{ptr @print_fmt_xprtrdma_op_connect, !17, !"print_fmt_xprtrdma_op_connect", i1 false, i1 false}
!1251 = !{ptr @.str.133, !21, !"<string literal>", i1 false, i1 false}
!1252 = !{ptr @.str.134, !21, !"<string literal>", i1 false, i1 false}
!1253 = !{ptr @trace_event_fields_xprtrdma_op_set_cto, !21, !"trace_event_fields_xprtrdma_op_set_cto", i1 false, i1 false}
!1254 = !{ptr @trace_event_type_funcs_xprtrdma_op_set_cto, !21, !"trace_event_type_funcs_xprtrdma_op_set_cto", i1 false, i1 false}
!1255 = !{ptr @.str.135, !21, !"<string literal>", i1 false, i1 false}
!1256 = !{ptr @print_fmt_xprtrdma_op_set_cto, !21, !"print_fmt_xprtrdma_op_set_cto", i1 false, i1 false}
!1257 = !{ptr @.str.136, !25, !"<string literal>", i1 false, i1 false}
!1258 = !{ptr @trace_event_fields_xprtrdma_createmrs, !25, !"trace_event_fields_xprtrdma_createmrs", i1 false, i1 false}
!1259 = !{ptr @trace_event_type_funcs_xprtrdma_createmrs, !25, !"trace_event_type_funcs_xprtrdma_createmrs", i1 false, i1 false}
!1260 = !{ptr @.str.137, !25, !"<string literal>", i1 false, i1 false}
!1261 = !{ptr @print_fmt_xprtrdma_createmrs, !25, !"print_fmt_xprtrdma_createmrs", i1 false, i1 false}
!1262 = !{ptr @trace_event_fields_xprtrdma_nomrs_err, !29, !"trace_event_fields_xprtrdma_nomrs_err", i1 false, i1 false}
!1263 = !{ptr @trace_event_type_funcs_xprtrdma_nomrs_err, !29, !"trace_event_type_funcs_xprtrdma_nomrs_err", i1 false, i1 false}
!1264 = !{ptr @.str.138, !29, !"<string literal>", i1 false, i1 false}
!1265 = !{ptr @print_fmt_xprtrdma_nomrs_err, !29, !"print_fmt_xprtrdma_nomrs_err", i1 false, i1 false}
!1266 = !{ptr @trace_event_type_funcs_xprtrdma_rdch_event, !709, !"trace_event_type_funcs_xprtrdma_rdch_event", i1 false, i1 false}
!1267 = !{ptr @.str.139, !709, !"<string literal>", i1 false, i1 false}
!1268 = !{ptr @.str.140, !709, !"<string literal>", i1 false, i1 false}
!1269 = !{ptr @.str.141, !709, !"<string literal>", i1 false, i1 false}
!1270 = !{ptr @print_fmt_xprtrdma_rdch_event, !709, !"print_fmt_xprtrdma_rdch_event", i1 false, i1 false}
!1271 = !{ptr @trace_event_type_funcs_xprtrdma_wrch_event, !711, !"trace_event_type_funcs_xprtrdma_wrch_event", i1 false, i1 false}
!1272 = !{ptr @.str.142, !711, !"<string literal>", i1 false, i1 false}
!1273 = !{ptr @print_fmt_xprtrdma_wrch_event, !711, !"print_fmt_xprtrdma_wrch_event", i1 false, i1 false}
!1274 = !{ptr @.str.143, !49, !"<string literal>", i1 false, i1 false}
!1275 = !{ptr @.str.144, !49, !"<string literal>", i1 false, i1 false}
!1276 = !{ptr @.str.145, !49, !"<string literal>", i1 false, i1 false}
!1277 = !{ptr @.str.146, !49, !"<string literal>", i1 false, i1 false}
!1278 = !{ptr @.str.147, !49, !"<string literal>", i1 false, i1 false}
!1279 = !{ptr @.str.148, !49, !"<string literal>", i1 false, i1 false}
!1280 = !{ptr @trace_event_fields_xprtrdma_marshal, !49, !"trace_event_fields_xprtrdma_marshal", i1 false, i1 false}
!1281 = !{ptr @trace_event_type_funcs_xprtrdma_marshal, !49, !"trace_event_type_funcs_xprtrdma_marshal", i1 false, i1 false}
!1282 = !{ptr @.str.149, !49, !"<string literal>", i1 false, i1 false}
!1283 = !{ptr @.str.150, !49, !"<string literal>", i1 false, i1 false}
!1284 = !{ptr @.str.151, !49, !"<string literal>", i1 false, i1 false}
!1285 = !{ptr @.str.152, !49, !"<string literal>", i1 false, i1 false}
!1286 = !{ptr @.str.153, !49, !"<string literal>", i1 false, i1 false}
!1287 = !{ptr @.str.154, !49, !"<string literal>", i1 false, i1 false}
!1288 = !{ptr @.str.155, !49, !"<string literal>", i1 false, i1 false}
!1289 = !{ptr @.str.156, !49, !"<string literal>", i1 false, i1 false}
!1290 = !{ptr @trace_raw_output_xprtrdma_marshal.symbols, !49, !"symbols", i1 false, i1 false}
!1291 = !{ptr @trace_raw_output_xprtrdma_marshal.symbols.157, !49, !"symbols", i1 false, i1 false}
!1292 = !{ptr @print_fmt_xprtrdma_marshal, !49, !"print_fmt_xprtrdma_marshal", i1 false, i1 false}
!1293 = !{ptr @.str.158, !53, !"<string literal>", i1 false, i1 false}
!1294 = !{ptr @trace_event_fields_xprtrdma_marshal_failed, !53, !"trace_event_fields_xprtrdma_marshal_failed", i1 false, i1 false}
!1295 = !{ptr @trace_event_type_funcs_xprtrdma_marshal_failed, !53, !"trace_event_type_funcs_xprtrdma_marshal_failed", i1 false, i1 false}
!1296 = !{ptr @.str.159, !53, !"<string literal>", i1 false, i1 false}
!1297 = !{ptr @print_fmt_xprtrdma_marshal_failed, !53, !"print_fmt_xprtrdma_marshal_failed", i1 false, i1 false}
!1298 = !{ptr @trace_event_fields_xprtrdma_prepsend_failed, !57, !"trace_event_fields_xprtrdma_prepsend_failed", i1 false, i1 false}
!1299 = !{ptr @trace_event_type_funcs_xprtrdma_prepsend_failed, !57, !"trace_event_type_funcs_xprtrdma_prepsend_failed", i1 false, i1 false}
!1300 = !{ptr @print_fmt_xprtrdma_prepsend_failed, !57, !"print_fmt_xprtrdma_prepsend_failed", i1 false, i1 false}
!1301 = !{ptr @.str.160, !61, !"<string literal>", i1 false, i1 false}
!1302 = !{ptr @.str.161, !61, !"<string literal>", i1 false, i1 false}
!1303 = !{ptr @trace_event_fields_xprtrdma_post_send, !61, !"trace_event_fields_xprtrdma_post_send", i1 false, i1 false}
!1304 = !{ptr @trace_event_type_funcs_xprtrdma_post_send, !61, !"trace_event_type_funcs_xprtrdma_post_send", i1 false, i1 false}
!1305 = !{ptr @.str.162, !61, !"<string literal>", i1 false, i1 false}
!1306 = !{ptr @.str.163, !61, !"<string literal>", i1 false, i1 false}
!1307 = !{ptr @.str.164, !61, !"<string literal>", i1 false, i1 false}
!1308 = !{ptr @print_fmt_xprtrdma_post_send, !61, !"print_fmt_xprtrdma_post_send", i1 false, i1 false}
!1309 = !{ptr @trace_event_fields_xprtrdma_post_send_err, !65, !"trace_event_fields_xprtrdma_post_send_err", i1 false, i1 false}
!1310 = !{ptr @trace_event_type_funcs_xprtrdma_post_send_err, !65, !"trace_event_type_funcs_xprtrdma_post_send_err", i1 false, i1 false}
!1311 = !{ptr @.str.165, !65, !"<string literal>", i1 false, i1 false}
!1312 = !{ptr @print_fmt_xprtrdma_post_send_err, !65, !"print_fmt_xprtrdma_post_send_err", i1 false, i1 false}
!1313 = !{ptr @trace_event_fields_xprtrdma_post_recv, !69, !"trace_event_fields_xprtrdma_post_recv", i1 false, i1 false}
!1314 = !{ptr @trace_event_type_funcs_xprtrdma_post_recv, !69, !"trace_event_type_funcs_xprtrdma_post_recv", i1 false, i1 false}
!1315 = !{ptr @.str.166, !69, !"<string literal>", i1 false, i1 false}
!1316 = !{ptr @print_fmt_xprtrdma_post_recv, !69, !"print_fmt_xprtrdma_post_recv", i1 false, i1 false}
!1317 = !{ptr @.str.167, !73, !"<string literal>", i1 false, i1 false}
!1318 = !{ptr @trace_event_fields_xprtrdma_post_recvs, !73, !"trace_event_fields_xprtrdma_post_recvs", i1 false, i1 false}
!1319 = !{ptr @trace_event_type_funcs_xprtrdma_post_recvs, !73, !"trace_event_type_funcs_xprtrdma_post_recvs", i1 false, i1 false}
!1320 = !{ptr @.str.168, !73, !"<string literal>", i1 false, i1 false}
!1321 = !{ptr @print_fmt_xprtrdma_post_recvs, !73, !"print_fmt_xprtrdma_post_recvs", i1 false, i1 false}
!1322 = !{ptr @trace_event_fields_xprtrdma_post_recvs_err, !77, !"trace_event_fields_xprtrdma_post_recvs_err", i1 false, i1 false}
!1323 = !{ptr @trace_event_type_funcs_xprtrdma_post_recvs_err, !77, !"trace_event_type_funcs_xprtrdma_post_recvs_err", i1 false, i1 false}
!1324 = !{ptr @.str.169, !77, !"<string literal>", i1 false, i1 false}
!1325 = !{ptr @print_fmt_xprtrdma_post_recvs_err, !77, !"print_fmt_xprtrdma_post_recvs_err", i1 false, i1 false}
!1326 = !{ptr @trace_event_fields_xprtrdma_post_linv_err, !81, !"trace_event_fields_xprtrdma_post_linv_err", i1 false, i1 false}
!1327 = !{ptr @trace_event_type_funcs_xprtrdma_post_linv_err, !81, !"trace_event_type_funcs_xprtrdma_post_linv_err", i1 false, i1 false}
!1328 = !{ptr @.str.170, !81, !"<string literal>", i1 false, i1 false}
!1329 = !{ptr @print_fmt_xprtrdma_post_linv_err, !81, !"print_fmt_xprtrdma_post_linv_err", i1 false, i1 false}
!1330 = !{ptr @trace_event_type_funcs_rpcrdma_receive_completion_class, !697, !"trace_event_type_funcs_rpcrdma_receive_completion_class", i1 false, i1 false}
!1331 = !{ptr @.str.171, !697, !"<string literal>", i1 false, i1 false}
!1332 = !{ptr @.str.172, !697, !"<string literal>", i1 false, i1 false}
!1333 = !{ptr @.str.173, !697, !"<string literal>", i1 false, i1 false}
!1334 = !{ptr @.str.174, !697, !"<string literal>", i1 false, i1 false}
!1335 = !{ptr @.str.175, !697, !"<string literal>", i1 false, i1 false}
!1336 = !{ptr @.str.176, !697, !"<string literal>", i1 false, i1 false}
!1337 = !{ptr @.str.177, !697, !"<string literal>", i1 false, i1 false}
!1338 = !{ptr @.str.178, !697, !"<string literal>", i1 false, i1 false}
!1339 = !{ptr @.str.179, !697, !"<string literal>", i1 false, i1 false}
!1340 = !{ptr @.str.180, !697, !"<string literal>", i1 false, i1 false}
!1341 = !{ptr @.str.181, !697, !"<string literal>", i1 false, i1 false}
!1342 = !{ptr @.str.182, !697, !"<string literal>", i1 false, i1 false}
!1343 = !{ptr @.str.183, !697, !"<string literal>", i1 false, i1 false}
!1344 = !{ptr @.str.184, !697, !"<string literal>", i1 false, i1 false}
!1345 = !{ptr @.str.185, !697, !"<string literal>", i1 false, i1 false}
!1346 = !{ptr @.str.186, !697, !"<string literal>", i1 false, i1 false}
!1347 = !{ptr @.str.187, !697, !"<string literal>", i1 false, i1 false}
!1348 = !{ptr @.str.188, !697, !"<string literal>", i1 false, i1 false}
!1349 = !{ptr @.str.189, !697, !"<string literal>", i1 false, i1 false}
!1350 = !{ptr @.str.190, !697, !"<string literal>", i1 false, i1 false}
!1351 = !{ptr @.str.191, !697, !"<string literal>", i1 false, i1 false}
!1352 = !{ptr @.str.192, !697, !"<string literal>", i1 false, i1 false}
!1353 = !{ptr @.str.193, !697, !"<string literal>", i1 false, i1 false}
!1354 = !{ptr @trace_raw_output_rpcrdma_receive_completion_class.symbols, !697, !"symbols", i1 false, i1 false}
!1355 = !{ptr @print_fmt_rpcrdma_receive_completion_class, !697, !"print_fmt_rpcrdma_receive_completion_class", i1 false, i1 false}
!1356 = !{ptr @trace_event_type_funcs_rpcrdma_completion_class, !689, !"trace_event_type_funcs_rpcrdma_completion_class", i1 false, i1 false}
!1357 = !{ptr @.str.194, !689, !"<string literal>", i1 false, i1 false}
!1358 = !{ptr @trace_raw_output_rpcrdma_completion_class.symbols, !689, !"symbols", i1 false, i1 false}
!1359 = !{ptr @print_fmt_rpcrdma_completion_class, !689, !"print_fmt_rpcrdma_completion_class", i1 false, i1 false}
!1360 = !{ptr @trace_event_type_funcs_rpcrdma_mr_completion_class, !695, !"trace_event_type_funcs_rpcrdma_mr_completion_class", i1 false, i1 false}
!1361 = !{ptr @.str.195, !695, !"<string literal>", i1 false, i1 false}
!1362 = !{ptr @trace_raw_output_rpcrdma_mr_completion_class.symbols, !695, !"symbols", i1 false, i1 false}
!1363 = !{ptr @print_fmt_rpcrdma_mr_completion_class, !695, !"print_fmt_rpcrdma_mr_completion_class", i1 false, i1 false}
!1364 = !{ptr @trace_event_fields_xprtrdma_frwr_alloc, !109, !"trace_event_fields_xprtrdma_frwr_alloc", i1 false, i1 false}
!1365 = !{ptr @trace_event_type_funcs_xprtrdma_frwr_alloc, !109, !"trace_event_type_funcs_xprtrdma_frwr_alloc", i1 false, i1 false}
!1366 = !{ptr @.str.196, !109, !"<string literal>", i1 false, i1 false}
!1367 = !{ptr @print_fmt_xprtrdma_frwr_alloc, !109, !"print_fmt_xprtrdma_frwr_alloc", i1 false, i1 false}
!1368 = !{ptr @trace_event_fields_xprtrdma_frwr_dereg, !113, !"trace_event_fields_xprtrdma_frwr_dereg", i1 false, i1 false}
!1369 = !{ptr @trace_event_type_funcs_xprtrdma_frwr_dereg, !113, !"trace_event_type_funcs_xprtrdma_frwr_dereg", i1 false, i1 false}
!1370 = !{ptr @.str.197, !113, !"<string literal>", i1 false, i1 false}
!1371 = !{ptr @.str.198, !113, !"<string literal>", i1 false, i1 false}
!1372 = !{ptr @.str.199, !113, !"<string literal>", i1 false, i1 false}
!1373 = !{ptr @.str.200, !113, !"<string literal>", i1 false, i1 false}
!1374 = !{ptr @.str.201, !113, !"<string literal>", i1 false, i1 false}
!1375 = !{ptr @trace_raw_output_xprtrdma_frwr_dereg.symbols, !113, !"symbols", i1 false, i1 false}
!1376 = !{ptr @print_fmt_xprtrdma_frwr_dereg, !113, !"print_fmt_xprtrdma_frwr_dereg", i1 false, i1 false}
!1377 = !{ptr @trace_event_fields_xprtrdma_frwr_sgerr, !117, !"trace_event_fields_xprtrdma_frwr_sgerr", i1 false, i1 false}
!1378 = !{ptr @trace_event_type_funcs_xprtrdma_frwr_sgerr, !117, !"trace_event_type_funcs_xprtrdma_frwr_sgerr", i1 false, i1 false}
!1379 = !{ptr @.str.202, !117, !"<string literal>", i1 false, i1 false}
!1380 = !{ptr @trace_raw_output_xprtrdma_frwr_sgerr.symbols, !117, !"symbols", i1 false, i1 false}
!1381 = !{ptr @print_fmt_xprtrdma_frwr_sgerr, !117, !"print_fmt_xprtrdma_frwr_sgerr", i1 false, i1 false}
!1382 = !{ptr @.str.203, !121, !"<string literal>", i1 false, i1 false}
!1383 = !{ptr @trace_event_fields_xprtrdma_frwr_maperr, !121, !"trace_event_fields_xprtrdma_frwr_maperr", i1 false, i1 false}
!1384 = !{ptr @trace_event_type_funcs_xprtrdma_frwr_maperr, !121, !"trace_event_type_funcs_xprtrdma_frwr_maperr", i1 false, i1 false}
!1385 = !{ptr @.str.204, !121, !"<string literal>", i1 false, i1 false}
!1386 = !{ptr @trace_raw_output_xprtrdma_frwr_maperr.symbols, !121, !"symbols", i1 false, i1 false}
!1387 = !{ptr @print_fmt_xprtrdma_frwr_maperr, !121, !"print_fmt_xprtrdma_frwr_maperr", i1 false, i1 false}
!1388 = !{ptr @trace_event_type_funcs_xprtrdma_mr_class, !713, !"trace_event_type_funcs_xprtrdma_mr_class", i1 false, i1 false}
!1389 = !{ptr @.str.205, !713, !"<string literal>", i1 false, i1 false}
!1390 = !{ptr @trace_raw_output_xprtrdma_mr_class.symbols, !713, !"symbols", i1 false, i1 false}
!1391 = !{ptr @print_fmt_xprtrdma_mr_class, !713, !"print_fmt_xprtrdma_mr_class", i1 false, i1 false}
!1392 = !{ptr @trace_event_type_funcs_xprtrdma_anonymous_mr_class, !715, !"trace_event_type_funcs_xprtrdma_anonymous_mr_class", i1 false, i1 false}
!1393 = !{ptr @.str.206, !715, !"<string literal>", i1 false, i1 false}
!1394 = !{ptr @trace_raw_output_xprtrdma_anonymous_mr_class.symbols, !715, !"symbols", i1 false, i1 false}
!1395 = !{ptr @print_fmt_xprtrdma_anonymous_mr_class, !715, !"print_fmt_xprtrdma_anonymous_mr_class", i1 false, i1 false}
!1396 = !{ptr @trace_event_fields_xprtrdma_dma_maperr, !145, !"trace_event_fields_xprtrdma_dma_maperr", i1 false, i1 false}
!1397 = !{ptr @trace_event_type_funcs_xprtrdma_dma_maperr, !145, !"trace_event_type_funcs_xprtrdma_dma_maperr", i1 false, i1 false}
!1398 = !{ptr @.str.207, !145, !"<string literal>", i1 false, i1 false}
!1399 = !{ptr @print_fmt_xprtrdma_dma_maperr, !145, !"print_fmt_xprtrdma_dma_maperr", i1 false, i1 false}
!1400 = !{ptr @.str.208, !149, !"<string literal>", i1 false, i1 false}
!1401 = !{ptr @trace_event_fields_xprtrdma_reply, !149, !"trace_event_fields_xprtrdma_reply", i1 false, i1 false}
!1402 = !{ptr @trace_event_type_funcs_xprtrdma_reply, !149, !"trace_event_type_funcs_xprtrdma_reply", i1 false, i1 false}
!1403 = !{ptr @.str.209, !149, !"<string literal>", i1 false, i1 false}
!1404 = !{ptr @print_fmt_xprtrdma_reply, !149, !"print_fmt_xprtrdma_reply", i1 false, i1 false}
!1405 = !{ptr @trace_event_type_funcs_xprtrdma_reply_class, !703, !"trace_event_type_funcs_xprtrdma_reply_class", i1 false, i1 false}
!1406 = !{ptr @.str.210, !703, !"<string literal>", i1 false, i1 false}
!1407 = !{ptr @print_fmt_xprtrdma_reply_class, !703, !"print_fmt_xprtrdma_reply_class", i1 false, i1 false}
!1408 = !{ptr @.str.211, !169, !"<string literal>", i1 false, i1 false}
!1409 = !{ptr @.str.212, !169, !"<string literal>", i1 false, i1 false}
!1410 = !{ptr @trace_event_fields_xprtrdma_err_vers, !169, !"trace_event_fields_xprtrdma_err_vers", i1 false, i1 false}
!1411 = !{ptr @trace_event_type_funcs_xprtrdma_err_vers, !169, !"trace_event_type_funcs_xprtrdma_err_vers", i1 false, i1 false}
!1412 = !{ptr @.str.213, !169, !"<string literal>", i1 false, i1 false}
!1413 = !{ptr @print_fmt_xprtrdma_err_vers, !169, !"print_fmt_xprtrdma_err_vers", i1 false, i1 false}
!1414 = !{ptr @trace_event_fields_xprtrdma_err_chunk, !173, !"trace_event_fields_xprtrdma_err_chunk", i1 false, i1 false}
!1415 = !{ptr @trace_event_type_funcs_xprtrdma_err_chunk, !173, !"trace_event_type_funcs_xprtrdma_err_chunk", i1 false, i1 false}
!1416 = !{ptr @.str.214, !173, !"<string literal>", i1 false, i1 false}
!1417 = !{ptr @print_fmt_xprtrdma_err_chunk, !173, !"print_fmt_xprtrdma_err_chunk", i1 false, i1 false}
!1418 = !{ptr @.str.215, !177, !"<string literal>", i1 false, i1 false}
!1419 = !{ptr @trace_event_fields_xprtrdma_err_unrecognized, !177, !"trace_event_fields_xprtrdma_err_unrecognized", i1 false, i1 false}
!1420 = !{ptr @trace_event_type_funcs_xprtrdma_err_unrecognized, !177, !"trace_event_type_funcs_xprtrdma_err_unrecognized", i1 false, i1 false}
!1421 = !{ptr @.str.216, !177, !"<string literal>", i1 false, i1 false}
!1422 = !{ptr @print_fmt_xprtrdma_err_unrecognized, !177, !"print_fmt_xprtrdma_err_unrecognized", i1 false, i1 false}
!1423 = !{ptr @.str.217, !181, !"<string literal>", i1 false, i1 false}
!1424 = !{ptr @.str.218, !181, !"<string literal>", i1 false, i1 false}
!1425 = !{ptr @trace_event_fields_xprtrdma_fixup, !181, !"trace_event_fields_xprtrdma_fixup", i1 false, i1 false}
!1426 = !{ptr @trace_event_type_funcs_xprtrdma_fixup, !181, !"trace_event_type_funcs_xprtrdma_fixup", i1 false, i1 false}
!1427 = !{ptr @.str.219, !181, !"<string literal>", i1 false, i1 false}
!1428 = !{ptr @print_fmt_xprtrdma_fixup, !181, !"print_fmt_xprtrdma_fixup", i1 false, i1 false}
!1429 = !{ptr @trace_event_fields_xprtrdma_decode_seg, !185, !"trace_event_fields_xprtrdma_decode_seg", i1 false, i1 false}
!1430 = !{ptr @trace_event_type_funcs_xprtrdma_decode_seg, !185, !"trace_event_type_funcs_xprtrdma_decode_seg", i1 false, i1 false}
!1431 = !{ptr @.str.220, !185, !"<string literal>", i1 false, i1 false}
!1432 = !{ptr @print_fmt_xprtrdma_decode_seg, !185, !"print_fmt_xprtrdma_decode_seg", i1 false, i1 false}
!1433 = !{ptr @trace_event_fields_xprtrdma_mrs_zap, !189, !"trace_event_fields_xprtrdma_mrs_zap", i1 false, i1 false}
!1434 = !{ptr @trace_event_type_funcs_xprtrdma_mrs_zap, !189, !"trace_event_type_funcs_xprtrdma_mrs_zap", i1 false, i1 false}
!1435 = !{ptr @.str.221, !189, !"<string literal>", i1 false, i1 false}
!1436 = !{ptr @print_fmt_xprtrdma_mrs_zap, !189, !"print_fmt_xprtrdma_mrs_zap", i1 false, i1 false}
!1437 = !{ptr @.str.222, !193, !"<string literal>", i1 false, i1 false}
!1438 = !{ptr @trace_event_fields_xprtrdma_cb_setup, !193, !"trace_event_fields_xprtrdma_cb_setup", i1 false, i1 false}
!1439 = !{ptr @trace_event_type_funcs_xprtrdma_cb_setup, !193, !"trace_event_type_funcs_xprtrdma_cb_setup", i1 false, i1 false}
!1440 = !{ptr @.str.223, !193, !"<string literal>", i1 false, i1 false}
!1441 = !{ptr @print_fmt_xprtrdma_cb_setup, !193, !"print_fmt_xprtrdma_cb_setup", i1 false, i1 false}
!1442 = !{ptr @trace_event_type_funcs_xprtrdma_callback_class, !717, !"trace_event_type_funcs_xprtrdma_callback_class", i1 false, i1 false}
!1443 = !{ptr @.str.224, !717, !"<string literal>", i1 false, i1 false}
!1444 = !{ptr @print_fmt_xprtrdma_callback_class, !717, !"print_fmt_xprtrdma_callback_class", i1 false, i1 false}
!1445 = !{ptr @.str.225, !848, !"<string literal>", i1 false, i1 false}
!1446 = !{ptr @trace_event_fields_svcrdma_accept_class, !848, !"trace_event_fields_svcrdma_accept_class", i1 false, i1 false}
!1447 = !{ptr @trace_event_type_funcs_svcrdma_accept_class, !848, !"trace_event_type_funcs_svcrdma_accept_class", i1 false, i1 false}
!1448 = !{ptr @.str.226, !848, !"<string literal>", i1 false, i1 false}
!1449 = !{ptr @print_fmt_svcrdma_accept_class, !848, !"print_fmt_svcrdma_accept_class", i1 false, i1 false}
!1450 = !{ptr @.str.227, !225, !"<string literal>", i1 false, i1 false}
!1451 = !{ptr @trace_event_fields_svcrdma_decode_rqst, !225, !"trace_event_fields_svcrdma_decode_rqst", i1 false, i1 false}
!1452 = !{ptr @trace_event_type_funcs_svcrdma_decode_rqst, !225, !"trace_event_type_funcs_svcrdma_decode_rqst", i1 false, i1 false}
!1453 = !{ptr @.str.228, !225, !"<string literal>", i1 false, i1 false}
!1454 = !{ptr @trace_raw_output_svcrdma_decode_rqst.symbols, !225, !"symbols", i1 false, i1 false}
!1455 = !{ptr @print_fmt_svcrdma_decode_rqst, !225, !"print_fmt_svcrdma_decode_rqst", i1 false, i1 false}
!1456 = !{ptr @trace_event_fields_svcrdma_decode_short_err, !229, !"trace_event_fields_svcrdma_decode_short_err", i1 false, i1 false}
!1457 = !{ptr @trace_event_type_funcs_svcrdma_decode_short_err, !229, !"trace_event_type_funcs_svcrdma_decode_short_err", i1 false, i1 false}
!1458 = !{ptr @.str.229, !229, !"<string literal>", i1 false, i1 false}
!1459 = !{ptr @print_fmt_svcrdma_decode_short_err, !229, !"print_fmt_svcrdma_decode_short_err", i1 false, i1 false}
!1460 = !{ptr @trace_event_fields_svcrdma_badreq_event, !866, !"trace_event_fields_svcrdma_badreq_event", i1 false, i1 false}
!1461 = !{ptr @trace_event_type_funcs_svcrdma_badreq_event, !866, !"trace_event_type_funcs_svcrdma_badreq_event", i1 false, i1 false}
!1462 = !{ptr @.str.230, !866, !"<string literal>", i1 false, i1 false}
!1463 = !{ptr @print_fmt_svcrdma_badreq_event, !866, !"print_fmt_svcrdma_badreq_event", i1 false, i1 false}
!1464 = !{ptr @.str.231, !249, !"<string literal>", i1 false, i1 false}
!1465 = !{ptr @trace_event_fields_svcrdma_encode_wseg, !249, !"trace_event_fields_svcrdma_encode_wseg", i1 false, i1 false}
!1466 = !{ptr @trace_event_type_funcs_svcrdma_encode_wseg, !249, !"trace_event_type_funcs_svcrdma_encode_wseg", i1 false, i1 false}
!1467 = !{ptr @.str.232, !249, !"<string literal>", i1 false, i1 false}
!1468 = !{ptr @print_fmt_svcrdma_encode_wseg, !249, !"print_fmt_svcrdma_encode_wseg", i1 false, i1 false}
!1469 = !{ptr @.str.233, !253, !"<string literal>", i1 false, i1 false}
!1470 = !{ptr @trace_event_fields_svcrdma_decode_rseg, !253, !"trace_event_fields_svcrdma_decode_rseg", i1 false, i1 false}
!1471 = !{ptr @trace_event_type_funcs_svcrdma_decode_rseg, !253, !"trace_event_type_funcs_svcrdma_decode_rseg", i1 false, i1 false}
!1472 = !{ptr @.str.234, !253, !"<string literal>", i1 false, i1 false}
!1473 = !{ptr @print_fmt_svcrdma_decode_rseg, !253, !"print_fmt_svcrdma_decode_rseg", i1 false, i1 false}
!1474 = !{ptr @trace_event_fields_svcrdma_decode_wseg, !257, !"trace_event_fields_svcrdma_decode_wseg", i1 false, i1 false}
!1475 = !{ptr @trace_event_type_funcs_svcrdma_decode_wseg, !257, !"trace_event_type_funcs_svcrdma_decode_wseg", i1 false, i1 false}
!1476 = !{ptr @print_fmt_svcrdma_decode_wseg, !257, !"print_fmt_svcrdma_decode_wseg", i1 false, i1 false}
!1477 = !{ptr @trace_event_fields_svcrdma_error_event, !885, !"trace_event_fields_svcrdma_error_event", i1 false, i1 false}
!1478 = !{ptr @trace_event_type_funcs_svcrdma_error_event, !885, !"trace_event_type_funcs_svcrdma_error_event", i1 false, i1 false}
!1479 = !{ptr @.str.235, !885, !"<string literal>", i1 false, i1 false}
!1480 = !{ptr @print_fmt_svcrdma_error_event, !885, !"print_fmt_svcrdma_error_event", i1 false, i1 false}
!1481 = !{ptr @.str.236, !891, !"<string literal>", i1 false, i1 false}
!1482 = !{ptr @.str.237, !891, !"<string literal>", i1 false, i1 false}
!1483 = !{ptr @trace_event_fields_svcrdma_dma_map_class, !891, !"trace_event_fields_svcrdma_dma_map_class", i1 false, i1 false}
!1484 = !{ptr @trace_event_type_funcs_svcrdma_dma_map_class, !891, !"trace_event_type_funcs_svcrdma_dma_map_class", i1 false, i1 false}
!1485 = !{ptr @.str.238, !891, !"<string literal>", i1 false, i1 false}
!1486 = !{ptr @print_fmt_svcrdma_dma_map_class, !891, !"print_fmt_svcrdma_dma_map_class", i1 false, i1 false}
!1487 = !{ptr @trace_event_fields_svcrdma_dma_map_rw_err, !281, !"trace_event_fields_svcrdma_dma_map_rw_err", i1 false, i1 false}
!1488 = !{ptr @trace_event_type_funcs_svcrdma_dma_map_rw_err, !281, !"trace_event_type_funcs_svcrdma_dma_map_rw_err", i1 false, i1 false}
!1489 = !{ptr @.str.239, !281, !"<string literal>", i1 false, i1 false}
!1490 = !{ptr @print_fmt_svcrdma_dma_map_rw_err, !281, !"print_fmt_svcrdma_dma_map_rw_err", i1 false, i1 false}
!1491 = !{ptr @.str.240, !285, !"<string literal>", i1 false, i1 false}
!1492 = !{ptr @trace_event_fields_svcrdma_no_rwctx_err, !285, !"trace_event_fields_svcrdma_no_rwctx_err", i1 false, i1 false}
!1493 = !{ptr @trace_event_type_funcs_svcrdma_no_rwctx_err, !285, !"trace_event_type_funcs_svcrdma_no_rwctx_err", i1 false, i1 false}
!1494 = !{ptr @.str.241, !285, !"<string literal>", i1 false, i1 false}
!1495 = !{ptr @print_fmt_svcrdma_no_rwctx_err, !285, !"print_fmt_svcrdma_no_rwctx_err", i1 false, i1 false}
!1496 = !{ptr @.str.242, !289, !"<string literal>", i1 false, i1 false}
!1497 = !{ptr @trace_event_fields_svcrdma_page_overrun_err, !289, !"trace_event_fields_svcrdma_page_overrun_err", i1 false, i1 false}
!1498 = !{ptr @trace_event_type_funcs_svcrdma_page_overrun_err, !289, !"trace_event_type_funcs_svcrdma_page_overrun_err", i1 false, i1 false}
!1499 = !{ptr @.str.243, !289, !"<string literal>", i1 false, i1 false}
!1500 = !{ptr @print_fmt_svcrdma_page_overrun_err, !289, !"print_fmt_svcrdma_page_overrun_err", i1 false, i1 false}
!1501 = !{ptr @.str.244, !293, !"<string literal>", i1 false, i1 false}
!1502 = !{ptr @.str.245, !293, !"<string literal>", i1 false, i1 false}
!1503 = !{ptr @.str.246, !293, !"<string literal>", i1 false, i1 false}
!1504 = !{ptr @trace_event_fields_svcrdma_small_wrch_err, !293, !"trace_event_fields_svcrdma_small_wrch_err", i1 false, i1 false}
!1505 = !{ptr @trace_event_type_funcs_svcrdma_small_wrch_err, !293, !"trace_event_type_funcs_svcrdma_small_wrch_err", i1 false, i1 false}
!1506 = !{ptr @.str.247, !293, !"<string literal>", i1 false, i1 false}
!1507 = !{ptr @print_fmt_svcrdma_small_wrch_err, !293, !"print_fmt_svcrdma_small_wrch_err", i1 false, i1 false}
!1508 = !{ptr @.str.248, !297, !"<string literal>", i1 false, i1 false}
!1509 = !{ptr @trace_event_fields_svcrdma_send_pullup, !297, !"trace_event_fields_svcrdma_send_pullup", i1 false, i1 false}
!1510 = !{ptr @trace_event_type_funcs_svcrdma_send_pullup, !297, !"trace_event_type_funcs_svcrdma_send_pullup", i1 false, i1 false}
!1511 = !{ptr @.str.249, !297, !"<string literal>", i1 false, i1 false}
!1512 = !{ptr @print_fmt_svcrdma_send_pullup, !297, !"print_fmt_svcrdma_send_pullup", i1 false, i1 false}
!1513 = !{ptr @trace_event_fields_svcrdma_send_err, !301, !"trace_event_fields_svcrdma_send_err", i1 false, i1 false}
!1514 = !{ptr @trace_event_type_funcs_svcrdma_send_err, !301, !"trace_event_type_funcs_svcrdma_send_err", i1 false, i1 false}
!1515 = !{ptr @.str.250, !301, !"<string literal>", i1 false, i1 false}
!1516 = !{ptr @print_fmt_svcrdma_send_err, !301, !"print_fmt_svcrdma_send_err", i1 false, i1 false}
!1517 = !{ptr @.str.251, !305, !"<string literal>", i1 false, i1 false}
!1518 = !{ptr @trace_event_fields_svcrdma_post_send, !305, !"trace_event_fields_svcrdma_post_send", i1 false, i1 false}
!1519 = !{ptr @trace_event_type_funcs_svcrdma_post_send, !305, !"trace_event_type_funcs_svcrdma_post_send", i1 false, i1 false}
!1520 = !{ptr @.str.252, !305, !"<string literal>", i1 false, i1 false}
!1521 = !{ptr @print_fmt_svcrdma_post_send, !305, !"print_fmt_svcrdma_post_send", i1 false, i1 false}
!1522 = !{ptr @trace_event_type_funcs_rpcrdma_send_completion_class, !691, !"trace_event_type_funcs_rpcrdma_send_completion_class", i1 false, i1 false}
!1523 = !{ptr @.str.253, !691, !"<string literal>", i1 false, i1 false}
!1524 = !{ptr @print_fmt_rpcrdma_send_completion_class, !691, !"print_fmt_rpcrdma_send_completion_class", i1 false, i1 false}
!1525 = !{ptr @trace_event_type_funcs_rpcrdma_send_flush_class, !693, !"trace_event_type_funcs_rpcrdma_send_flush_class", i1 false, i1 false}
!1526 = !{ptr @trace_raw_output_rpcrdma_send_flush_class.symbols, !693, !"symbols", i1 false, i1 false}
!1527 = !{ptr @print_fmt_rpcrdma_send_flush_class, !693, !"print_fmt_rpcrdma_send_flush_class", i1 false, i1 false}
!1528 = !{ptr @trace_event_fields_svcrdma_post_recv, !321, !"trace_event_fields_svcrdma_post_recv", i1 false, i1 false}
!1529 = !{ptr @trace_event_type_funcs_svcrdma_post_recv, !321, !"trace_event_type_funcs_svcrdma_post_recv", i1 false, i1 false}
!1530 = !{ptr @print_fmt_svcrdma_post_recv, !321, !"print_fmt_svcrdma_post_recv", i1 false, i1 false}
!1531 = !{ptr @trace_event_type_funcs_rpcrdma_receive_success_class, !699, !"trace_event_type_funcs_rpcrdma_receive_success_class", i1 false, i1 false}
!1532 = !{ptr @.str.254, !699, !"<string literal>", i1 false, i1 false}
!1533 = !{ptr @print_fmt_rpcrdma_receive_success_class, !699, !"print_fmt_rpcrdma_receive_success_class", i1 false, i1 false}
!1534 = !{ptr @trace_event_type_funcs_rpcrdma_receive_flush_class, !701, !"trace_event_type_funcs_rpcrdma_receive_flush_class", i1 false, i1 false}
!1535 = !{ptr @trace_raw_output_rpcrdma_receive_flush_class.symbols, !701, !"symbols", i1 false, i1 false}
!1536 = !{ptr @print_fmt_rpcrdma_receive_flush_class, !701, !"print_fmt_rpcrdma_receive_flush_class", i1 false, i1 false}
!1537 = !{ptr @trace_event_fields_svcrdma_rq_post_err, !337, !"trace_event_fields_svcrdma_rq_post_err", i1 false, i1 false}
!1538 = !{ptr @trace_event_type_funcs_svcrdma_rq_post_err, !337, !"trace_event_type_funcs_svcrdma_rq_post_err", i1 false, i1 false}
!1539 = !{ptr @.str.255, !337, !"<string literal>", i1 false, i1 false}
!1540 = !{ptr @print_fmt_svcrdma_rq_post_err, !337, !"print_fmt_svcrdma_rq_post_err", i1 false, i1 false}
!1541 = !{ptr @.str.256, !938, !"<string literal>", i1 false, i1 false}
!1542 = !{ptr @trace_event_fields_svcrdma_post_chunk_class, !938, !"trace_event_fields_svcrdma_post_chunk_class", i1 false, i1 false}
!1543 = !{ptr @trace_event_type_funcs_svcrdma_post_chunk_class, !938, !"trace_event_type_funcs_svcrdma_post_chunk_class", i1 false, i1 false}
!1544 = !{ptr @.str.257, !938, !"<string literal>", i1 false, i1 false}
!1545 = !{ptr @print_fmt_svcrdma_post_chunk_class, !938, !"print_fmt_svcrdma_post_chunk_class", i1 false, i1 false}
!1546 = !{ptr @.str.258, !353, !"<string literal>", i1 false, i1 false}
!1547 = !{ptr @.str.259, !353, !"<string literal>", i1 false, i1 false}
!1548 = !{ptr @.str.260, !353, !"<string literal>", i1 false, i1 false}
!1549 = !{ptr @trace_event_fields_svcrdma_wc_read, !353, !"trace_event_fields_svcrdma_wc_read", i1 false, i1 false}
!1550 = !{ptr @trace_event_type_funcs_svcrdma_wc_read, !353, !"trace_event_type_funcs_svcrdma_wc_read", i1 false, i1 false}
!1551 = !{ptr @.str.261, !353, !"<string literal>", i1 false, i1 false}
!1552 = !{ptr @print_fmt_svcrdma_wc_read, !353, !"print_fmt_svcrdma_wc_read", i1 false, i1 false}
!1553 = !{ptr @.str.262, !377, !"<string literal>", i1 false, i1 false}
!1554 = !{ptr @.str.263, !377, !"<string literal>", i1 false, i1 false}
!1555 = !{ptr @.str.264, !377, !"<string literal>", i1 false, i1 false}
!1556 = !{ptr @trace_event_fields_svcrdma_qp_error, !377, !"trace_event_fields_svcrdma_qp_error", i1 false, i1 false}
!1557 = !{ptr @trace_event_type_funcs_svcrdma_qp_error, !377, !"trace_event_type_funcs_svcrdma_qp_error", i1 false, i1 false}
!1558 = !{ptr @.str.265, !377, !"<string literal>", i1 false, i1 false}
!1559 = !{ptr @.str.266, !377, !"<string literal>", i1 false, i1 false}
!1560 = !{ptr @.str.267, !377, !"<string literal>", i1 false, i1 false}
!1561 = !{ptr @.str.268, !377, !"<string literal>", i1 false, i1 false}
!1562 = !{ptr @.str.269, !377, !"<string literal>", i1 false, i1 false}
!1563 = !{ptr @.str.270, !377, !"<string literal>", i1 false, i1 false}
!1564 = !{ptr @.str.271, !377, !"<string literal>", i1 false, i1 false}
!1565 = !{ptr @.str.272, !377, !"<string literal>", i1 false, i1 false}
!1566 = !{ptr @.str.273, !377, !"<string literal>", i1 false, i1 false}
!1567 = !{ptr @.str.274, !377, !"<string literal>", i1 false, i1 false}
!1568 = !{ptr @.str.275, !377, !"<string literal>", i1 false, i1 false}
!1569 = !{ptr @.str.276, !377, !"<string literal>", i1 false, i1 false}
!1570 = !{ptr @.str.277, !377, !"<string literal>", i1 false, i1 false}
!1571 = !{ptr @.str.278, !377, !"<string literal>", i1 false, i1 false}
!1572 = !{ptr @.str.279, !377, !"<string literal>", i1 false, i1 false}
!1573 = !{ptr @.str.280, !377, !"<string literal>", i1 false, i1 false}
!1574 = !{ptr @.str.281, !377, !"<string literal>", i1 false, i1 false}
!1575 = !{ptr @.str.282, !377, !"<string literal>", i1 false, i1 false}
!1576 = !{ptr @.str.283, !377, !"<string literal>", i1 false, i1 false}
!1577 = !{ptr @.str.284, !377, !"<string literal>", i1 false, i1 false}
!1578 = !{ptr @.str.285, !377, !"<string literal>", i1 false, i1 false}
!1579 = !{ptr @trace_raw_output_svcrdma_qp_error.symbols, !377, !"symbols", i1 false, i1 false}
!1580 = !{ptr @print_fmt_svcrdma_qp_error, !377, !"print_fmt_svcrdma_qp_error", i1 false, i1 false}
!1581 = !{ptr @.str.286, !962, !"<string literal>", i1 false, i1 false}
!1582 = !{ptr @.str.287, !962, !"<string literal>", i1 false, i1 false}
!1583 = !{ptr @trace_event_fields_svcrdma_sendqueue_event, !962, !"trace_event_fields_svcrdma_sendqueue_event", i1 false, i1 false}
!1584 = !{ptr @trace_event_type_funcs_svcrdma_sendqueue_event, !962, !"trace_event_type_funcs_svcrdma_sendqueue_event", i1 false, i1 false}
!1585 = !{ptr @.str.288, !962, !"<string literal>", i1 false, i1 false}
!1586 = !{ptr @print_fmt_svcrdma_sendqueue_event, !962, !"print_fmt_svcrdma_sendqueue_event", i1 false, i1 false}
!1587 = !{ptr @trace_event_fields_svcrdma_sq_post_err, !389, !"trace_event_fields_svcrdma_sq_post_err", i1 false, i1 false}
!1588 = !{ptr @trace_event_type_funcs_svcrdma_sq_post_err, !389, !"trace_event_type_funcs_svcrdma_sq_post_err", i1 false, i1 false}
!1589 = !{ptr @.str.289, !389, !"<string literal>", i1 false, i1 false}
!1590 = !{ptr @print_fmt_svcrdma_sq_post_err, !389, !"print_fmt_svcrdma_sq_post_err", i1 false, i1 false}
!1591 = !{!"sp"}
!1592 = !{i32 1, !"wchar_size", i32 2}
!1593 = !{i32 1, !"min_enum_size", i32 4}
!1594 = !{i32 8, !"branch-target-enforcement", i32 0}
!1595 = !{i32 8, !"sign-return-address", i32 0}
!1596 = !{i32 8, !"sign-return-address-all", i32 0}
!1597 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1598 = !{i32 7, !"uwtable", i32 1}
!1599 = !{i32 7, !"frame-pointer", i32 2}
!1600 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1601 = !{!"branch_weights", i32 2000, i32 1}
!1602 = !{!"branch_weights", i32 1, i32 2000}
!1603 = !{!"auto-init"}
!1604 = !{i64 699912, i64 699939, i64 699961, i64 699989}
!1605 = !{i64 700320, i64 700347, i64 700380, i64 700401, i64 700428, i64 700454}
