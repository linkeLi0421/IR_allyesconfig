; ModuleID = '/llk/IR_all_yes/security/apparmor/policy_unpack.c_pt.bc'
source_filename = "../security/apparmor/policy_unpack.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%union.anon.165 = type { ptr }
%struct.lsm_blob_sizes = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kunit_suite = type { [256 x i8], ptr, ptr, ptr, [256 x i8], ptr, ptr }
%struct.kunit_case = type { ptr, ptr, ptr, i32, ptr }
%struct.timespec64 = type { i64, i32 }
%struct.aa_loaddata = type { %struct.kref, %struct.list_head, %struct.work_struct, [6 x ptr], ptr, ptr, i32, i32, i32, i32, ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.list_head = type { ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.aa_ns = type { %struct.aa_policy, ptr, %struct.mutex, %struct.aa_ns_acct, ptr, %struct.list_head, %struct.atomic_t, i32, i32, i32, %struct.wait_queue_head, %struct.aa_labelset, %struct.list_head, [13 x ptr] }
%struct.aa_policy = type { ptr, ptr, %struct.list_head, %struct.list_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.aa_ns_acct = type { i32, i32, i32, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.aa_labelset = type { %struct.rwlock_t, %struct.rb_root }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.rb_root = type { ptr }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.129, %struct.list_head, %struct.list_head, %union.anon.130 }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.2, ptr }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.127 }
%union.anon.127 = type { %struct.anon.128 }
%struct.anon.128 = type { %struct.spinlock, i32 }
%union.anon.129 = type { %struct.list_head }
%union.anon.130 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.123, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.124, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.125, ptr, %struct.address_space, %struct.list_head, %union.anon.126, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.123 = type { i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%union.anon.124 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.125 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.126 = type { ptr }
%struct.aa_profile = type { %struct.aa_policy, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i32, %struct.aa_policydb, %struct.aa_file_rules, %struct.aa_caps, i32, ptr, %struct.aa_rlimit, i32, ptr, ptr, ptr, ptr, [9 x ptr], ptr, %struct.aa_label }
%struct.aa_policydb = type { ptr, [17 x i32] }
%struct.aa_file_rules = type { i32, ptr, %struct.aa_domain }
%struct.aa_domain = type { i32, ptr }
%struct.aa_caps = type { %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.aa_rlimit = type { i32, [16 x %struct.rlimit] }
%struct.rlimit = type { i32, i32 }
%struct.aa_label = type { %struct.kref, %struct.rb_node, %struct.callback_head, ptr, ptr, i32, i32, i32, [0 x ptr] }
%struct.rb_node = type { i32, ptr, ptr }
%struct.aa_load_ent = type { %struct.list_head, ptr, ptr, ptr, ptr }
%struct.z_stream_s = type { ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, ptr, ptr, ptr }
%struct.aa_ext = type { ptr, ptr, ptr, i32 }
%struct.aa_data = type { ptr, i32, ptr, %struct.rhash_head }
%struct.rhash_head = type { ptr }
%struct.rhashtable = type { ptr, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.aa_dfa = type { %struct.kref, i16, i32, [8 x ptr] }
%struct.table_header = type { i16, i16, i32, i32, [0 x i8] }
%struct.kunit_ptr_not_err_assert = type { %struct.kunit_assert, ptr, ptr }
%struct.kunit_assert = type { ptr, i32, i32, ptr, %struct.va_format, ptr }
%struct.va_format = type { ptr, ptr }
%struct.apparmor_audit_data = type { i32, i32, ptr, ptr, ptr, ptr, i32, i32, %union.anon.151 }
%union.anon.151 = type { %struct.anon.152 }
%struct.anon.152 = type { ptr, %union.anon.153 }
%union.anon.153 = type { %struct.anon.157 }
%struct.anon.157 = type { i32, i32, ptr, ptr, i32 }
%struct.common_audit_data = type { i8, %union.anon.160, %union.anon.165 }
%union.anon.160 = type { %struct.path }
%struct.path = type { ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.111, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.43 }
%struct.llist_node = type { ptr }
%union.anon.43 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.45 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.111 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.30 }
%union.anon.30 = type { %struct.callback_head }
%struct.aa_secmark = type { i8, i8, i32, ptr }
%struct.rhashtable_compare_arg = type { ptr, ptr }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, ptr, %struct.lockdep_map, [68 x i8], [0 x ptr] }
%struct.policy_unpack_fixture = type { ptr, i32 }
%struct.kunit_unary_assert = type { %struct.kunit_assert, ptr, i8 }
%struct.kunit_binary_assert = type { %struct.kunit_assert, ptr, ptr, i64, ptr, i64 }
%struct.kunit_binary_ptr_assert = type { %struct.kunit_assert, ptr, ptr, ptr, ptr, ptr }
%struct.kunit_binary_str_assert = type { %struct.kunit_assert, ptr, ptr, ptr, ptr, ptr }

@.str = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"security/apparmor/policy_unpack.c\00", [62 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"AppArmor WARN %s: ((!data)): \00", [34 x i8] zeroinitializer }, align 32
@__func__.__aa_loaddata_update = private unnamed_addr constant [21 x i8] c"__aa_loaddata_update\00", align 1
@.str.2 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"AppArmor WARN %s: ((!data->ns)): \00", [62 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"AppArmor WARN %s: ((!data->dents[AAFS_LOADDATA_REVISION])): \00", [35 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"AppArmor WARN %s: ((!mutex_is_locked(&data->ns->lock))): \00", [38 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"AppArmor WARN %s: ((data->revision > revision)): \00", [46 x i8] zeroinitializer }, align 32
@aa_g_hash_policy = external dso_local local_unnamed_addr global i8, align 1
@aa_loaddata_kref.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.6 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"(work_completion)(&d->work)\00", [36 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"security/apparmor/policy_unpack_test.c\00", [57 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"buf\00", [28 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"e\00", [30 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TEST_STRING\00", [20 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"testing\00", [24 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"U32_TEST\00", [23 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"U64_TEST\00", [23 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"BLOB_TEST\00", [22 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\DE\AD\00\BE\EF\00", [26 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ARRAY_TEST\00", [21 x i8] zeroinitializer }, align 32
@__UNIQUE_ID_array558 = internal global [2 x ptr] [ptr @apparmor_policy_unpack_test_module, ptr null], align 4
@__UNIQUE_ID_suites559 = internal global ptr @__UNIQUE_ID_array558, section ".kunit_test_suites", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.17 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"invalid profile format\00", [41 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"unsupported interface version\00", [34 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"namespace\00", [22 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"invalid namespace name\00", [41 x i8] zeroinitializer }, align 32
@__const.audit_iface.sa = private unnamed_addr constant { i8, [3 x i8], { ptr, [4 x i8] }, %union.anon.165 } { i8 7, [3 x i8] zeroinitializer, { ptr, [4 x i8] } { ptr null, [4 x i8] c"\FF\FF\FF\FF" }, %union.anon.165 zeroinitializer }, align 4
@.str.23 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"security/apparmor/include/cred.h\00", [63 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"AppArmor WARN %s: ((!label)): \00", [33 x i8] zeroinitializer }, align 32
@__func__.aa_cred_raw_label = private unnamed_addr constant [18 x i8] c"aa_cred_raw_label\00", align 1
@apparmor_blob_sizes = external dso_local local_unnamed_addr global %struct.lsm_blob_sizes, align 4
@.str.25 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"AppArmor WARN %s: ((!blob)): \00", [34 x i8] zeroinitializer }, align 32
@__func__.cred_label = private unnamed_addr constant [11 x i8] c"cred_label\00", align 1
@.str.26 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" ns=\00", [27 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c" name=\00", [25 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c" offset=%ld\00", [20 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"failed to unpack profile\00", [39 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"profile\00", [24 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"out of memory\00", [18 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rename\00", [25 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"attach\00", [25 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"bad xmatch\00", [21 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"missing xmatch len\00", [45 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"disconnected\00", [19 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"profile missing flags\00", [42 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"failed to unpack profile flags\00", [33 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"path_flags\00", [21 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"failed to unpack profile capabilities\00", [58 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"failed to unpack upper profile capabilities\00", [52 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"caps64\00", [25 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"failed to unpack extended profile capabilities\00", [49 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"capsx\00", [26 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"failed to unpack profile xattrs\00", [32 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"failed to unpack profile rlimits\00", [63 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"failed to unpack profile secmark rules\00", [57 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"policydb\00", [23 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"failed to unpack policydb\00", [38 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"start\00", [26 x i8] zeroinitializer }, align 32
@nulldfa = external dso_local local_unnamed_addr global ptr, align 4
@.str.52 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"failed to unpack profile file rules\00", [60 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"dfa_start\00", [22 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"failed to unpack profile transition table\00", [54 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"data\00", [27 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"failed to init key, value hash table\00", [59 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"failed to unpack end of key, value data table\00", [50 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"failed to unpack end of profile\00", [32 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"aadfa\00", [26 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"xattrs\00", [25 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"rlimits\00", [24 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"secmark\00", [24 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"xtable\00", [25 x i8] zeroinitializer }, align 32
@_ctype = external dso_local local_unnamed_addr constant [0 x i8], align 1
@__rhashtable_insert_fast.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.65 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/linux/rhashtable.h\00", [37 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"suspicious rcu_dereference_protected() usage\00", [51 x i8] zeroinitializer }, align 32
@__rhashtable_insert_fast.__warned.69 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.70 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.72 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@rht_ptr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.73 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Invalid named transition\00", [39 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"AppArmor WARN %s: ((data->compressed_size > 0)): \00", [46 x i8] zeroinitializer }, align 32
@__func__.compress_loaddata = private unnamed_addr constant [18 x i8] c"compress_loaddata\00", align 1
@aa_g_rawdata_compression_level = external dso_local local_unnamed_addr global i32, align 4
@apparmor_policy_unpack_test_module = internal global { %struct.kunit_suite, [140 x i8] } { %struct.kunit_suite { [256 x i8] c"apparmor_policy_unpackptr @policy_unpack_test_init, ptr null, ptr @apparmor_policy_unpack_test_cases, [256 x i8] zeroinitializer, ptr null, ptr null }, [140 x i8] zeroinitializer }, align 32
@apparmor_policy_unpack_test_cases = internal global { [31 x %struct.kunit_case], [148 x i8] } { [31 x %struct.kunit_case] [%struct.kunit_case { ptr @policy_unpack_test_inbounds_when_inbounds, ptr @.str.76, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_inbounds_when_out_of_bounds, ptr @.str.77, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_array_with_null_name, ptr @.str.78, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_array_with_name, ptr @.str.79, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_array_out_of_bounds, ptr @.str.80, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_blob_with_null_name, ptr @.str.81, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_blob_with_name, ptr @.str.82, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_blob_out_of_bounds, ptr @.str.83, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_nameX_with_null_name, ptr @.str.84, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_nameX_with_wrong_code, ptr @.str.85, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_nameX_with_name, ptr @.str.86, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_nameX_with_wrong_name, ptr @.str.87, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_str_with_null_name, ptr @.str.88, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_str_with_name, ptr @.str.89, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_str_out_of_bounds, ptr @.str.90, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_strdup_with_null_name, ptr @.str.91, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_strdup_with_name, ptr @.str.92, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_strdup_out_of_bounds, ptr @.str.93, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u16_chunk_basic, ptr @.str.94, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u16_chunk_out_of_bounds_1, ptr @.str.95, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u16_chunk_out_of_bounds_2, ptr @.str.96, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u32_with_null_name, ptr @.str.97, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u32_with_name, ptr @.str.98, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u32_out_of_bounds, ptr @.str.99, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u64_with_null_name, ptr @.str.100, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u64_with_name, ptr @.str.101, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_u64_out_of_bounds, ptr @.str.102, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_X_code_match, ptr @.str.103, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_X_code_mismatch, ptr @.str.104, ptr null, i32 0, ptr null }, %struct.kunit_case { ptr @policy_unpack_test_unpack_X_out_of_bounds, ptr @.str.105, ptr null, i32 0, ptr null }, %struct.kunit_case zeroinitializer], [148 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"puf\00", [28 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"policy_unpack_test_inbounds_when_inbounds\00", [54 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"policy_unpack_test_inbounds_when_out_of_bounds\00", [49 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"policy_unpack_test_unpack_array_with_null_name\00", [49 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"policy_unpack_test_unpack_array_with_name\00", [54 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"policy_unpack_test_unpack_array_out_of_bounds\00", [50 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"policy_unpack_test_unpack_blob_with_null_name\00", [50 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"policy_unpack_test_unpack_blob_with_name\00", [55 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"policy_unpack_test_unpack_blob_out_of_bounds\00", [51 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"policy_unpack_test_unpack_nameX_with_null_name\00", [49 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"policy_unpack_test_unpack_nameX_with_wrong_code\00", [48 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"policy_unpack_test_unpack_nameX_with_name\00", [54 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"policy_unpack_test_unpack_nameX_with_wrong_name\00", [48 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"policy_unpack_test_unpack_str_with_null_name\00", [51 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"policy_unpack_test_unpack_str_with_name\00", [56 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"policy_unpack_test_unpack_str_out_of_bounds\00", [52 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"policy_unpack_test_unpack_strdup_with_null_name\00", [48 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"policy_unpack_test_unpack_strdup_with_name\00", [53 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"policy_unpack_test_unpack_strdup_out_of_bounds\00", [49 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"policy_unpack_test_unpack_u16_chunk_basic\00", [54 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"policy_unpack_test_unpack_u16_chunk_out_of_bounds_1\00", [44 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"policy_unpack_test_unpack_u16_chunk_out_of_bounds_2\00", [44 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"policy_unpack_test_unpack_u32_with_null_name\00", [51 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"policy_unpack_test_unpack_u32_with_name\00", [56 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"policy_unpack_test_unpack_u32_out_of_bounds\00", [52 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"policy_unpack_test_unpack_u64_with_null_name\00", [51 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"policy_unpack_test_unpack_u64_with_name\00", [56 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"policy_unpack_test_unpack_u64_out_of_bounds\00", [52 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"policy_unpack_test_unpack_X_code_match\00", [57 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"policy_unpack_test_unpack_X_code_mismatch\00", [54 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"policy_unpack_test_unpack_X_out_of_bounds\00", [54 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"inbounds(puf->e, 0)\00", [44 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"inbounds(puf->e, puf->e_size / 2)\00", [62 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"inbounds(puf->e, puf->e_size)\00", [34 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"inbounds(puf->e, puf->e_size + 1)\00", [62 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"==\00", [29 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"array_size\00", [21 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"(u16)16\00", [24 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"puf->e->pos\00", [20 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [487 x i8], [121 x i8] } { [487 x i8] c"puf->e->start + (((((((((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + sizeof(u32) + 1) + 3 + strlen(\22U64_TEST\22) + 1) + sizeof(u64) + 1) + 3 + strlen(\22BLOB_TEST\22) + 1) + 5 + ((sizeof(\22\\xde\\xad\\x00\\xbe\\xef\22) / sizeof((\22\\xde\\xad\\x00\\xbe\\xef\22)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((\22\\xde\\xad\\x00\\xbe\\xef\22)), typeof(&(\22\\xde\\xad\\x00\\xbe\\xef\22)[0])))); })))))) + 3 + strlen(\22ARRAY_TEST\22) + 1) + sizeof(u16) + 1\00", [121 x i8] zeroinitializer }, align 32
@__const.policy_unpack_test_unpack_array_out_of_bounds.name = private unnamed_addr constant [11 x i8] c"ARRAY_TEST\00", align 1
@.str.115 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(u16)0\00", [25 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [436 x i8], [108 x i8] } { [436 x i8] c"puf->e->start + ((((((((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + sizeof(u32) + 1) + 3 + strlen(\22U64_TEST\22) + 1) + sizeof(u64) + 1) + 3 + strlen(\22BLOB_TEST\22) + 1) + 5 + ((sizeof(\22\\xde\\xad\\x00\\xbe\\xef\22) / sizeof((\22\\xde\\xad\\x00\\xbe\\xef\22)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((\22\\xde\\xad\\x00\\xbe\\xef\22)), typeof(&(\22\\xde\\xad\\x00\\xbe\\xef\22)[0])))); }))))))\00", [108 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"size\00", [27 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [216 x i8], [40 x i8] } { [216 x i8] c"((sizeof(\22\\xde\\xad\\x00\\xbe\\xef\22) / sizeof((\22\\xde\\xad\\x00\\xbe\\xef\22)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((\22\\xde\\xad\\x00\\xbe\\xef\22)), typeof(&(\22\\xde\\xad\\x00\\xbe\\xef\22)[0])))); })))))\00", [40 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [259 x i8], [93 x i8] } { [259 x i8] c"memcmp(blob, \22\\xde\\xad\\x00\\xbe\\xef\22, ((sizeof(\22\\xde\\xad\\x00\\xbe\\xef\22) / sizeof((\22\\xde\\xad\\x00\\xbe\\xef\22)[0]) + ((int)(sizeof(struct { int:(-!!(__builtin_types_compatible_p(typeof((\22\\xde\\xad\\x00\\xbe\\xef\22)), typeof(&(\22\\xde\\xad\\x00\\xbe\\xef\22)[0])))); })))))) == 0\00", [93 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"0\00", [30 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"success\00", [24 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [113 x i8], [47 x i8] } { [113 x i8] c"puf->e->start + (((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + 1\00", [47 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"puf->e->start + (((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1)\00", [51 x i8] zeroinitializer }, align 32
@policy_unpack_test_unpack_nameX_with_wrong_name.name = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"12345678\00", [23 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"puf->e->start + ((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1)\00", [50 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"strlen(\22testing\22) + 1\00", [42 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"string\00", [25 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"\22testing\22\00", [22 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [97 x i8], [63 x i8] } { [97 x i8] c"((uintptr_t)puf->e->start <= (uintptr_t)string) && ((uintptr_t)string <= (uintptr_t)puf->e->end)\00", [63 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"(char *)((void *)0)\00", [44 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"(void *)chunk\00", [18 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [119 x i8], [41 x i8] } { [119 x i8] c"puf->e->start + ((((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + 3) + 2\00", [41 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"(size_t)((u16)(((u32)0x01020304) >> 16))\00", [55 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"(void *)(chunk + ((u16)(((u32)0x01020304) >> 16)))\00", [45 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"(size_t)0\00", [22 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"chunk\00", [26 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"puf->e->end - 1\00", [16 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [115 x i8], [45 x i8] } { [115 x i8] c"puf->e->start + ((((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + 3)\00", [45 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"((u32)0x01020304)\00", [46 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [127 x i8], [33 x i8] } { [127 x i8] c"puf->e->start + (((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + sizeof(u32) + 1\00", [33 x i8] zeroinitializer }, align 32
@__const.policy_unpack_test_unpack_u32_out_of_bounds.name = private unnamed_addr constant [9 x i8] c"U32_TEST\00", align 1
@.str.140 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"((u64)0x0102030405060708)\00", [38 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [178 x i8], [46 x i8] } { [178 x i8] c"puf->e->start + (((((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + sizeof(u32) + 1) + 3 + strlen(\22U64_TEST\22) + 1) + sizeof(u64) + 1\00", [46 x i8] zeroinitializer }, align 32
@__const.policy_unpack_test_unpack_u64_out_of_bounds.name = private unnamed_addr constant [9 x i8] c"U64_TEST\00", align 1
@.str.142 = internal constant { [129 x i8], [63 x i8] } { [129 x i8] c"puf->e->start + ((((3 + strlen(\22TEST_STRING\22) + 1) + 3 + strlen(\22testing\22) + 1) + 3 + strlen(\22U32_TEST\22) + 1) + sizeof(u32) + 1)\00", [63 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"puf->e->pos == puf->e->start + 1\00", [63 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"puf->e->pos == puf->e->start\00", [35 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 3]
@__sancov_gen_cov_switch_values.145 = internal global [14 x i64] [i64 12, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12]
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 126, i32 2 }
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 127, i32 2 }
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 128, i32 2 }
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 129, i32 2 }
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 130, i32 2 }
@___asan_gen_.164 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 177, i32 3 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 58, i32 2 }
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 61, i32 2 }
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 69, i32 18 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 74, i32 18 }
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 79, i32 18 }
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 86, i32 18 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 93, i32 18 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 97, i32 3 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 102, i32 18 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 953, i32 34 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 955, i32 34 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 966, i32 33 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 972, i32 27 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 974, i32 34 }
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.222, i32 51, i32 2 }
@___asan_gen_.222 = private unnamed_addr constant [36 x i8] c"../security/apparmor/include/cred.h\00", align 1
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.222, i32 26, i32 2 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 83, i32 24 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 87, i32 24 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 91, i32 24 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 678, i32 21 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 690, i32 34 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 701, i32 11 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 712, i32 41 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 715, i32 41 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 722, i32 10 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 728, i32 11 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 735, i32 47 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 738, i32 34 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 739, i32 10 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 742, i32 9 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 768, i32 42 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 775, i32 9 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 785, i32 9 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 786, i32 33 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 800, i32 9 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 801, i32 33 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 812, i32 10 }
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 817, i32 10 }
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 822, i32 10 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 826, i32 33 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 828, i32 10 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 838, i32 49 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 858, i32 10 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 861, i32 44 }
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 872, i32 10 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 876, i32 33 }
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 890, i32 11 }
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 915, i32 11 }
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 921, i32 10 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 931, i32 10 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 448, i32 31 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 550, i32 33 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 624, i32 33 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 580, i32 33 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 482, i32 33 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.348, i32 715, i32 8 }
@___asan_gen_.348 = private unnamed_addr constant [30 x i8] c"../include/linux/rhashtable.h\00", align 1
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.348, i32 755, i32 10 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.357, i32 695, i32 2 }
@___asan_gen_.357 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.357, i32 723, i32 2 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 1025, i32 36 }
@___asan_gen_.363 = private constant [37 x i8] c"../security/apparmor/policy_unpack.c\00", align 1
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.363, i32 1131, i32 2 }
@___asan_gen_.365 = private unnamed_addr constant [35 x i8] c"apparmor_policy_unpack_test_module\00", align 1
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 601, i32 27 }
@___asan_gen_.368 = private unnamed_addr constant [34 x i8] c"apparmor_policy_unpack_test_cases\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 567, i32 26 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 115, i32 2 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 568, i32 2 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 569, i32 2 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 570, i32 2 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 571, i32 2 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 572, i32 2 }
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 573, i32 2 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 574, i32 2 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 575, i32 2 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 576, i32 2 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 577, i32 2 }
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 578, i32 2 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 579, i32 2 }
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 580, i32 2 }
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 581, i32 2 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 582, i32 2 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 583, i32 2 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 584, i32 2 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 585, i32 2 }
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 586, i32 2 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 587, i32 2 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 588, i32 2 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 589, i32 2 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 590, i32 2 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 591, i32 2 }
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 592, i32 2 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 593, i32 2 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 594, i32 2 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 595, i32 2 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 596, i32 2 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 597, i32 2 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 128, i32 2 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 129, i32 2 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 130, i32 2 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 137, i32 2 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 149, i32 2 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 150, i32 2 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 180, i32 2 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 181, i32 2 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 194, i32 2 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 195, i32 2 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 227, i32 2 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 329, i32 2 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 330, i32 2 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 344, i32 2 }
@___asan_gen_.518 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 366, i32 20 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 374, i32 2 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 240, i32 2 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 241, i32 2 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 282, i32 2 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 316, i32 2 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 394, i32 2 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 396, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 397, i32 2 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 411, i32 2 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 412, i32 2 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 413, i32 2 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 435, i32 2 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 449, i32 2 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 450, i32 2 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 499, i32 2 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 500, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 534, i32 2 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 544, i32 2 }
@___asan_gen_.581 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.582 = private unnamed_addr constant [42 x i8] c"../security/apparmor/policy_unpack_test.c\00", align 1
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.582, i32 553, i32 2 }
@llvm.compiler.used = appending global [147 x ptr] [ptr @__UNIQUE_ID_suites559, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @aa_loaddata_kref.__key, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.68, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @apparmor_policy_unpack_test_module, ptr @apparmor_policy_unpack_test_cases, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @policy_unpack_test_unpack_nameX_with_wrong_name.name, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144], section "llvm.metadata"
@0 = internal global [146 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @aa_loaddata_kref.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @apparmor_policy_unpack_test_module to i32), i32 532, i32 672, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @apparmor_policy_unpack_test_cases to i32), i32 620, i32 768, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 487, i32 608, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 436, i32 544, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 259, i32 352, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 113, i32 160, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @policy_unpack_test_unpack_nameX_with_wrong_name.name to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 97, i32 160, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 119, i32 160, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 115, i32 160, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 127, i32 160, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 178, i32 224, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 129, i32 192, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__aa_loaddata_update(ptr noundef %data, i32 noundef %revision) local_unnamed_addr #0 align 64 {
entry:
  %tmp170 = alloca %struct.timespec64, align 8
  %tmp178 = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %do.end, label %entry.if.end_crit_edge, !prof !309

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 126, i32 noundef 9, ptr noundef nonnull @.str.1, ptr noundef nonnull @__func__.__aa_loaddata_update) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %ns = getelementptr inbounds %struct.aa_loaddata, ptr %data, i32 0, i32 4
  %0 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ns, align 4
  %tobool26.not = icmp eq ptr %1, null
  br i1 %tobool26.not, label %do.end44, label %if.end.if.end50_crit_edge, !prof !309

if.end.if.end50_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end50

do.end44:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 127, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.__aa_loaddata_update) #16
  br label %if.end50

if.end50:                                         ; preds = %do.end44, %if.end.if.end50_crit_edge
  %arrayidx = getelementptr %struct.aa_loaddata, ptr %data, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %tobool62.not = icmp eq ptr %3, null
  br i1 %tobool62.not, label %do.end80, label %if.end50.if.end86_crit_edge, !prof !309

if.end50.if.end86_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

do.end80:                                         ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 128, i32 noundef 9, ptr noundef nonnull @.str.3, ptr noundef nonnull @__func__.__aa_loaddata_update) #16
  br label %if.end86

if.end86:                                         ; preds = %do.end80, %if.end50.if.end86_crit_edge
  %4 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ns, align 4
  %lock = getelementptr inbounds %struct.aa_ns, ptr %5, i32 0, i32 2
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef %lock) #16
  br i1 %call, label %if.end86.if.end122_crit_edge, label %do.end116, !prof !310

if.end86.if.end122_crit_edge:                     ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end122

do.end116:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 129, i32 noundef 9, ptr noundef nonnull @.str.4, ptr noundef nonnull @__func__.__aa_loaddata_update) #16
  br label %if.end122

if.end122:                                        ; preds = %do.end116, %if.end86.if.end122_crit_edge
  %revision134 = getelementptr inbounds %struct.aa_loaddata, ptr %data, i32 0, i32 8
  %6 = ptrtoint ptr %revision134 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %revision134, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %revision)
  %cmp = icmp sgt i32 %7, %revision
  br i1 %cmp, label %do.end150, label %if.end122.if.end156_crit_edge, !prof !309

if.end122.if.end156_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end156

do.end150:                                        ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 130, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @__func__.__aa_loaddata_update) #16
  br label %if.end156

if.end156:                                        ; preds = %do.end150, %if.end122.if.end156_crit_edge
  %8 = ptrtoint ptr %revision134 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %revision, ptr %revision134, align 4
  %arrayidx168 = getelementptr %struct.aa_loaddata, ptr %data, i32 0, i32 3, i32 5
  %9 = ptrtoint ptr %arrayidx168 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx168, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %d_inode.i, align 8
  %i_mtime = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tmp170) #16
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %tmp170, ptr noundef %12) #16
  %13 = call ptr @memcpy(ptr %i_mtime, ptr %tmp170, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tmp170) #16
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx, align 4
  %d_inode.i198 = getelementptr inbounds %struct.dentry, ptr %15, i32 0, i32 5
  %16 = ptrtoint ptr %d_inode.i198 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %d_inode.i198, align 8
  %i_mtime177 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tmp178) #16
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %tmp178, ptr noundef %17) #16
  %18 = call ptr @memcpy(ptr %i_mtime177, ptr %tmp178, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tmp178) #16
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @current_time(ptr sret(%struct.timespec64) align 8, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @aa_rawdata_eq(ptr nocapture noundef readonly %l, ptr nocapture noundef readonly %r) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.aa_loaddata, ptr %l, i32 0, i32 6
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 4
  %size1 = getelementptr inbounds %struct.aa_loaddata, ptr %r, i32 0, i32 6
  %2 = ptrtoint ptr %size1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp eq i32 %1, %3
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %compressed_size = getelementptr inbounds %struct.aa_loaddata, ptr %l, i32 0, i32 7
  %4 = ptrtoint ptr %compressed_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %compressed_size, align 4
  %compressed_size2 = getelementptr inbounds %struct.aa_loaddata, ptr %r, i32 0, i32 7
  %6 = ptrtoint ptr %compressed_size2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %compressed_size2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp3.not = icmp eq i32 %5, %7
  br i1 %cmp3.not, label %if.end5, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end5:                                          ; preds = %if.end
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @aa_g_hash_policy to i32))
  %8 = load i8, ptr @aa_g_hash_policy, align 1, !range !311
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not = icmp eq i8 %8, 0
  br i1 %tobool.not, label %if.end5.if.end10_crit_edge, label %land.lhs.true

if.end5.if.end10_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10

land.lhs.true:                                    ; preds = %if.end5
  %hash = getelementptr inbounds %struct.aa_loaddata, ptr %l, i32 0, i32 10
  %9 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hash, align 4
  %hash6 = getelementptr inbounds %struct.aa_loaddata, ptr %r, i32 0, i32 10
  %11 = ptrtoint ptr %hash6 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hash6, align 4
  %call = tail call i32 @aa_hash_size() #16
  %bcmp25 = tail call i32 @bcmp(ptr %10, ptr %12, i32 %call) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp25)
  %cmp8.not = icmp eq i32 %bcmp25, 0
  br i1 %cmp8.not, label %if.end10thread-pre-split, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10thread-pre-split:                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %compressed_size2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pr = load i32, ptr %compressed_size2, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end10thread-pre-split, %if.end5.if.end10_crit_edge
  %14 = phi i32 [ %.pr, %if.end10thread-pre-split ], [ %5, %if.end5.if.end10_crit_edge ]
  %data = getelementptr inbounds %struct.aa_loaddata, ptr %l, i32 0, i32 11
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %data, align 4
  %data11 = getelementptr inbounds %struct.aa_loaddata, ptr %r, i32 0, i32 11
  %17 = ptrtoint ptr %data11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool13.not = icmp eq i32 %14, 0
  br i1 %tobool13.not, label %cond.false, label %if.end10.cond.end_crit_edge

if.end10.cond.end_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %size1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %size1, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end10.cond.end_crit_edge
  %cond = phi i32 [ %20, %cond.false ], [ %14, %if.end10.cond.end_crit_edge ]
  %bcmp = tail call i32 @bcmp(ptr %16, ptr %18, i32 %cond) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp16 = icmp eq i32 %bcmp, 0
  br label %return

return:                                           ; preds = %cond.end, %land.lhs.true.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ %cmp16, %cond.end ], [ false, %entry.return_crit_edge ], [ false, %if.end.return_crit_edge ], [ false, %land.lhs.true.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @aa_hash_size() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @aa_loaddata_kref(ptr noundef %kref) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %kref, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %work = getelementptr inbounds %struct.aa_loaddata, ptr %kref, i32 0, i32 2
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %0 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -64, ptr %work, align 4
  %lockdep_map = getelementptr inbounds %struct.aa_loaddata, ptr %kref, i32 0, i32 2, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.6, ptr noundef nonnull @aa_loaddata_kref.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry4 = getelementptr inbounds %struct.aa_loaddata, ptr %kref, i32 0, i32 2, i32 1
  %1 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i = getelementptr inbounds %struct.aa_loaddata, ptr %kref, i32 0, i32 2, i32 1, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %entry4, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.aa_loaddata, ptr %kref, i32 0, i32 2, i32 2
  %3 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @do_loaddata_free, ptr %func, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %4 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %4, ptr noundef %work) #16
  br label %if.end

if.end:                                           ; preds = %do.body, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_loaddata_free(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -12
  %ns1 = getelementptr i8, ptr %work, i32 68
  %0 = ptrtoint ptr %ns1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ns1, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.then.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i:                                        ; preds = %entry
  %unconfined.i = getelementptr inbounds %struct.aa_ns, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %unconfined.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %unconfined.i, align 4
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i, label %if.then.i.if.then.i15_crit_edge, label %if.then.i.i

if.then.i.if.then.i15_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i15

if.then.i.i:                                      ; preds = %if.then.i
  %label.i.i = getelementptr inbounds %struct.aa_profile, ptr %3, i32 0, i32 25
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %label.i.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %label.i.i, i32 1, i32 3, i32 1) #16
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %label.i.i, ptr %label.i.i, i32 1, ptr elementtype(i32) %label.i.i) #16, !srcloc !312
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i.i, label %if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i, !prof !309

if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.then.i.i
  %add.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i, 1
  %5 = or i32 %add.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %.not.i.i.i.i.i.i = icmp sgt i32 %5, -1
  br i1 %.not.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.if.then.i15_crit_edge, label %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, !prof !310

if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i.if.then.i15_crit_edge:        ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i15

if.end15.sink.split.i.i.i.i.i.i:                  ; preds = %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, %if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i = phi i32 [ 2, %if.then.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %label.i.i, i32 noundef %.sink.i.i.i.i.i.i) #16
  br label %if.then.i15

if.then.i15:                                      ; preds = %if.end15.sink.split.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.if.then.i15_crit_edge, %if.then.i.if.then.i15_crit_edge
  %lock = getelementptr inbounds %struct.aa_ns, ptr %1, i32 0, i32 2
  %level = getelementptr inbounds %struct.aa_ns, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %level, align 4
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef %7) #16
  tail call void @__aa_fs_remove_rawdata(ptr noundef %add.ptr) #16
  tail call void @mutex_unlock(ptr noundef %lock) #16
  %8 = ptrtoint ptr %unconfined.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %unconfined.i, align 4
  %tobool.not.i.i14 = icmp eq ptr %9, null
  br i1 %tobool.not.i.i14, label %if.then.i15.if.end_crit_edge, label %if.then.i.i18

if.then.i15.if.end_crit_edge:                     ; preds = %if.then.i15
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i18:                                    ; preds = %if.then.i15
  %label.i.i16 = getelementptr inbounds %struct.aa_profile, ptr %9, i32 0, i32 25
  %call.i.i.i.i.i.i.i.i17 = tail call zeroext i1 @__kasan_check_write(ptr noundef %label.i.i16, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !313
  tail call void @llvm.prefetch.p0(ptr %label.i.i16, i32 1, i32 3, i32 1) #16
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %label.i.i16, ptr %label.i.i16, i32 1, ptr elementtype(i32) %label.i.i16) #16, !srcloc !314
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i, label %if.end5.i.i.i.i.i.i

if.end5.i.i.i.i.i.i:                              ; preds = %if.then.i.i18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i19 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i19, label %if.end5.i.i.i.i.i.i.if.end_crit_edge, label %if.then10.i.i.i.i.i.i, !prof !310

if.end5.i.i.i.i.i.i.if.end_crit_edge:             ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then10.i.i.i.i.i.i:                            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %label.i.i16, i32 noundef 3) #16
  br label %if.end

if.then.i.i.i:                                    ; preds = %if.then.i.i18
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !315
  tail call void @aa_label_kref(ptr noundef %label.i.i16) #16
  br label %if.end

if.end:                                           ; preds = %if.then.i.i.i, %if.then10.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.if.end_crit_edge, %if.then.i15.if.end_crit_edge, %entry.if.end_crit_edge
  %hash = getelementptr i8, ptr %work, i32 92
  %11 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hash, align 4
  tail call void @kfree_sensitive(ptr noundef %12) #16
  %name = getelementptr i8, ptr %work, i32 72
  %13 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %name, align 4
  tail call void @kfree_sensitive(ptr noundef %14) #16
  %data = getelementptr i8, ptr %work, i32 96
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %data, align 4
  tail call void @kvfree(ptr noundef %16) #16
  tail call void @kfree_sensitive(ptr noundef %add.ptr) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @aa_loaddata_alloc(i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 112) #20
  %cmp = icmp eq ptr %call7.i.i, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %size, i32 noundef 3520, i32 noundef -1) #21
  %data = getelementptr inbounds %struct.aa_loaddata, ptr %call7.i.i, i32 0, i32 11
  %1 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call.i.i, ptr %data, align 4
  %tobool.not = icmp eq ptr %call.i.i, null
  br i1 %tobool.not, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call7.i.i, i32 noundef 4) #16
  %2 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 1, ptr %call7.i.i, align 8
  %list = getelementptr inbounds %struct.aa_loaddata, ptr %call7.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %list, ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.aa_loaddata, ptr %call7.i.i, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %list, ptr %prev.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %if.end6 ], [ inttoptr (i32 -12 to ptr), %if.then4 ], [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @aa_load_ent_free(ptr noundef %ent) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %ent, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %rename = getelementptr inbounds %struct.aa_load_ent, ptr %ent, i32 0, i32 3
  %0 = ptrtoint ptr %rename to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rename, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.then.aa_put_profile.exit_crit_edge, label %if.then.i

if.then.aa_put_profile.exit_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_put_profile.exit

if.then.i:                                        ; preds = %if.then
  %label.i = getelementptr inbounds %struct.aa_profile, ptr %1, i32 0, i32 25
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %label.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !313
  tail call void @llvm.prefetch.p0(ptr %label.i, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %label.i, ptr %label.i, i32 1, ptr elementtype(i32) %label.i) #16, !srcloc !314
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.aa_put_profile.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !310

if.end5.i.i.i.i.i.aa_put_profile.exit_crit_edge:  ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_put_profile.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %label.i, i32 noundef 3) #16
  br label %aa_put_profile.exit

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !315
  tail call void @aa_label_kref(ptr noundef %label.i) #16
  br label %aa_put_profile.exit

aa_put_profile.exit:                              ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.aa_put_profile.exit_crit_edge, %if.then.aa_put_profile.exit_crit_edge
  %old = getelementptr inbounds %struct.aa_load_ent, ptr %ent, i32 0, i32 2
  %3 = ptrtoint ptr %old to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %old, align 4
  %tobool.not.i6 = icmp eq ptr %4, null
  br i1 %tobool.not.i6, label %aa_put_profile.exit.aa_put_profile.exit16_crit_edge, label %if.then.i11

aa_put_profile.exit.aa_put_profile.exit16_crit_edge: ; preds = %aa_put_profile.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_put_profile.exit16

if.then.i11:                                      ; preds = %aa_put_profile.exit
  %label.i7 = getelementptr inbounds %struct.aa_profile, ptr %4, i32 0, i32 25
  %call.i.i.i.i.i.i.i8 = tail call zeroext i1 @__kasan_check_write(ptr noundef %label.i7, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !313
  tail call void @llvm.prefetch.p0(ptr %label.i7, i32 1, i32 3, i32 1) #16
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %label.i7, ptr %label.i7, i32 1, ptr elementtype(i32) %label.i7) #16, !srcloc !314
  %asmresult.i.i.i.i.i.i.i.i9 = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i9)
  %cmp.i.i.i.i.i10 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i9, 1
  br i1 %cmp.i.i.i.i.i10, label %if.then.i.i15, label %if.end5.i.i.i.i.i13

if.end5.i.i.i.i.i13:                              ; preds = %if.then.i11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i9)
  %.not.i.i.i.i.i12 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i9, 0
  br i1 %.not.i.i.i.i.i12, label %if.end5.i.i.i.i.i13.aa_put_profile.exit16_crit_edge, label %if.then10.i.i.i.i.i14, !prof !310

if.end5.i.i.i.i.i13.aa_put_profile.exit16_crit_edge: ; preds = %if.end5.i.i.i.i.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_put_profile.exit16

if.then10.i.i.i.i.i14:                            ; preds = %if.end5.i.i.i.i.i13
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %label.i7, i32 noundef 3) #16
  br label %aa_put_profile.exit16

if.then.i.i15:                                    ; preds = %if.then.i11
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !315
  tail call void @aa_label_kref(ptr noundef %label.i7) #16
  br label %aa_put_profile.exit16

aa_put_profile.exit16:                            ; preds = %if.then.i.i15, %if.then10.i.i.i.i.i14, %if.end5.i.i.i.i.i13.aa_put_profile.exit16_crit_edge, %aa_put_profile.exit.aa_put_profile.exit16_crit_edge
  %new = getelementptr inbounds %struct.aa_load_ent, ptr %ent, i32 0, i32 1
  %6 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %new, align 4
  %tobool.not.i17 = icmp eq ptr %7, null
  br i1 %tobool.not.i17, label %aa_put_profile.exit16.aa_put_profile.exit27_crit_edge, label %if.then.i22

aa_put_profile.exit16.aa_put_profile.exit27_crit_edge: ; preds = %aa_put_profile.exit16
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_put_profile.exit27

if.then.i22:                                      ; preds = %aa_put_profile.exit16
  %label.i18 = getelementptr inbounds %struct.aa_profile, ptr %7, i32 0, i32 25
  %call.i.i.i.i.i.i.i19 = tail call zeroext i1 @__kasan_check_write(ptr noundef %label.i18, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !313
  tail call void @llvm.prefetch.p0(ptr %label.i18, i32 1, i32 3, i32 1) #16
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %label.i18, ptr %label.i18, i32 1, ptr elementtype(i32) %label.i18) #16, !srcloc !314
  %asmresult.i.i.i.i.i.i.i.i20 = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i20)
  %cmp.i.i.i.i.i21 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i20, 1
  br i1 %cmp.i.i.i.i.i21, label %if.then.i.i26, label %if.end5.i.i.i.i.i24

if.end5.i.i.i.i.i24:                              ; preds = %if.then.i22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i20)
  %.not.i.i.i.i.i23 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i20, 0
  br i1 %.not.i.i.i.i.i23, label %if.end5.i.i.i.i.i24.aa_put_profile.exit27_crit_edge, label %if.then10.i.i.i.i.i25, !prof !310

if.end5.i.i.i.i.i24.aa_put_profile.exit27_crit_edge: ; preds = %if.end5.i.i.i.i.i24
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_put_profile.exit27

if.then10.i.i.i.i.i25:                            ; preds = %if.end5.i.i.i.i.i24
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %label.i18, i32 noundef 3) #16
  br label %aa_put_profile.exit27

if.then.i.i26:                                    ; preds = %if.then.i22
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !315
  tail call void @aa_label_kref(ptr noundef %label.i18) #16
  br label %aa_put_profile.exit27

aa_put_profile.exit27:                            ; preds = %if.then.i.i26, %if.then10.i.i.i.i.i25, %if.end5.i.i.i.i.i24.aa_put_profile.exit27_crit_edge, %aa_put_profile.exit16.aa_put_profile.exit27_crit_edge
  %ns_name = getelementptr inbounds %struct.aa_load_ent, ptr %ent, i32 0, i32 4
  %9 = ptrtoint ptr %ns_name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ns_name, align 4
  tail call void @kfree(ptr noundef %10) #16
  tail call void @kfree_sensitive(ptr noundef nonnull %ent) #16
  br label %if.end

if.end:                                           ; preds = %aa_put_profile.exit27, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_sensitive(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @aa_load_ent_alloc() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 24) #20
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %1 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %call7.i.i, ptr %call7.i.i, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call7.i.i, ptr %prev.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret ptr %call7.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @aa_unpack(ptr nocapture noundef %udata, ptr noundef %lh, ptr nocapture noundef %ns) local_unnamed_addr #0 align 64 {
entry:
  %strm.i.i = alloca %struct.z_stream_s, align 4
  %tmpns.i = alloca ptr, align 4
  %ns_len.i = alloca i32, align 4
  %params.i = alloca %struct.rhashtable_params, align 4
  %key.i = alloca ptr, align 4
  %tmpcap.i = alloca %struct.kernel_cap_struct, align 4
  %tmp.i = alloca i32, align 4
  %e = alloca %struct.aa_ext, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %e) #16
  %0 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %2 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 3
  %data = getelementptr inbounds %struct.aa_loaddata, ptr %udata, i32 0, i32 11
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  %5 = ptrtoint ptr %e to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %e, align 4
  %size = getelementptr inbounds %struct.aa_loaddata, ptr %udata, i32 0, i32 6
  %6 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %size, align 4
  %add.ptr = getelementptr i8, ptr %4, i32 %7
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %add.ptr, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %4, ptr %1, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %2, align 4
  %11 = ptrtoint ptr %ns to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %ns, align 4
  %cmp253 = icmp ult ptr %4, %add.ptr
  br i1 %cmp253, label %if.end.i.i.i.i.lr.ph, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

if.end.i.i.i.i.lr.ph:                             ; preds = %entry
  %12 = getelementptr inbounds [2 x i32], ptr %tmpcap.i, i32 0, i32 1
  %key_len.i = getelementptr inbounds %struct.rhashtable_params, ptr %params.i, i32 0, i32 1
  %key_offset.i = getelementptr inbounds %struct.rhashtable_params, ptr %params.i, i32 0, i32 2
  %head_offset.i = getelementptr inbounds %struct.rhashtable_params, ptr %params.i, i32 0, i32 3
  %hashfn.i = getelementptr inbounds %struct.rhashtable_params, ptr %params.i, i32 0, i32 7
  %obj_cmpfn.i = getelementptr inbounds %struct.rhashtable_params, ptr %params.i, i32 0, i32 9
  %prev.i = getelementptr inbounds %struct.list_head, ptr %lh, i32 0, i32 1
  br label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %cleanup.if.end.i.i.i.i_crit_edge, %if.end.i.i.i.i.lr.ph
  %13 = phi ptr [ %add.ptr, %if.end.i.i.i.i.lr.ph ], [ %341, %cleanup.if.end.i.i.i.i_crit_edge ]
  %14 = phi ptr [ %4, %if.end.i.i.i.i.lr.ph ], [ %339, %cleanup.if.end.i.i.i.i_crit_edge ]
  %15 = ptrtoint ptr %e to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %e, align 4
  %cmp8.not = icmp eq ptr %14, %16
  %17 = ptrtoint ptr %ns to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %ns, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %14, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %19)
  %cmp.not.i.i.i.i = icmp eq i8 %19, 4
  br i1 %cmp.not.i.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i.i.unpack_u32.exit.i_crit_edge

if.end.i.i.i.i.unpack_u32.exit.i_crit_edge:       ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

if.then.i.i.i:                                    ; preds = %if.end.i.i.i.i
  %incdec.ptr.i.i.i.i = getelementptr i8, ptr %14, i32 1
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %incdec.ptr.i.i.i.i, ptr %1, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i = ptrtoint ptr %13 to i32
  %sub.ptr.rhs.cast.i.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i.i to i32
  %sub.ptr.sub.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.end.i29.i.i.i, label %if.then.i.i.i.unpack_u32.exit.i_crit_edge

if.then.i.i.i.unpack_u32.exit.i_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

if.end.i29.i.i.i:                                 ; preds = %if.then.i.i.i
  %21 = ptrtoint ptr %incdec.ptr.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %21, i32 2)
  %22 = load i16, ptr %incdec.ptr.i.i.i.i, align 1
  %23 = call i16 @llvm.bswap.i16(i16 %22) #16
  %conv.i28.i.i.i = zext i16 %23 to i32
  %add.ptr.i.i.i.i = getelementptr i8, ptr %14, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i.i = ptrtoint ptr %add.ptr.i.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i.i, i32 %conv.i28.i.i.i)
  %cmp.i26.not.i.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i.i, %conv.i28.i.i.i
  br i1 %cmp.i26.not.i.i.i.i, label %if.end.i29.i.i.i.unpack_u32.exit.i_crit_edge, label %unpack_u16_chunk.exit.i.i.i

if.end.i29.i.i.i.unpack_u32.exit.i_crit_edge:     ; preds = %if.end.i29.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

unpack_u16_chunk.exit.i.i.i:                      ; preds = %if.end.i29.i.i.i
  %add.ptr9.i.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i.i, i32 %conv.i28.i.i.i
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %add.ptr9.i.i.i.i, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool3.not.i.i.i = icmp eq i16 %22, 0
  br i1 %tobool3.not.i.i.i, label %unpack_u16_chunk.exit.i.i.i.unpack_u32.exit.i_crit_edge, label %lor.lhs.false.i.i.i

unpack_u16_chunk.exit.i.i.i.unpack_u32.exit.i_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

lor.lhs.false.i.i.i:                              ; preds = %unpack_u16_chunk.exit.i.i.i
  %sub.i.i.i = add nsw i32 %conv.i28.i.i.i, -1
  %arrayidx.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i.i, i32 %sub.i.i.i
  %25 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %cmp.not.i.i.i = icmp eq i8 %26, 0
  br i1 %cmp.not.i.i.i, label %lor.lhs.false5.i.i.i, label %lor.lhs.false.i.i.i.unpack_u32.exit.i_crit_edge

lor.lhs.false.i.i.i.unpack_u32.exit.i_crit_edge:  ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

lor.lhs.false5.i.i.i:                             ; preds = %lor.lhs.false.i.i.i
  %call6.i.i.i = call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.17, ptr noundef %add.ptr.i.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i)
  %tobool7.not.i.i.i = icmp ne i32 %call6.i.i.i, 0
  %cmp.i.not.i33.i.i.i = icmp eq ptr %13, %add.ptr9.i.i.i.i
  %or.cond62.i = select i1 %tobool7.not.i.i.i, i1 true, i1 %cmp.i.not.i33.i.i.i
  br i1 %or.cond62.i, label %lor.lhs.false5.i.i.i.unpack_u32.exit.i_crit_edge, label %unpack_nameX.exit.i.i

lor.lhs.false5.i.i.i.unpack_u32.exit.i_crit_edge: ; preds = %lor.lhs.false5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

unpack_nameX.exit.i.i:                            ; preds = %lor.lhs.false5.i.i.i
  %27 = ptrtoint ptr %add.ptr9.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %add.ptr9.i.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %28)
  %cmp.not.i35.i.i.i = icmp eq i8 %28, 2
  %incdec.ptr.i37.i.i.i = getelementptr i8, ptr %add.ptr9.i.i.i.i, i32 1
  %spec.select.i.i.i = select i1 %cmp.not.i35.i.i.i, ptr %incdec.ptr.i37.i.i.i, ptr %14
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %spec.select.i.i.i, ptr %1, align 4
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %spec.select.i.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 3
  %or.cond.i.i = select i1 %cmp.not.i35.i.i.i, i1 %cmp.i.i.i, i1 false
  br i1 %or.cond.i.i, label %if.end.i.i, label %unpack_nameX.exit.i.i.unpack_u32.exit.i_crit_edge

unpack_nameX.exit.i.i.unpack_u32.exit.i_crit_edge: ; preds = %unpack_nameX.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.i

if.end.i.i:                                       ; preds = %unpack_nameX.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %spec.select.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %30, i32 4)
  %31 = load i32, ptr %spec.select.i.i.i, align 1
  %32 = call i32 @llvm.bswap.i32(i32 %31) #16
  %33 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %2, align 4
  %add.ptr.i.i = getelementptr i8, ptr %spec.select.i.i.i, i32 4
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %add.ptr.i.i, ptr %1, align 4
  br label %if.end3.i

unpack_u32.exit.i:                                ; preds = %unpack_nameX.exit.i.i.unpack_u32.exit.i_crit_edge, %lor.lhs.false5.i.i.i.unpack_u32.exit.i_crit_edge, %lor.lhs.false.i.i.i.unpack_u32.exit.i_crit_edge, %unpack_u16_chunk.exit.i.i.i.unpack_u32.exit.i_crit_edge, %if.end.i29.i.i.i.unpack_u32.exit.i_crit_edge, %if.then.i.i.i.unpack_u32.exit.i_crit_edge, %if.end.i.i.i.i.unpack_u32.exit.i_crit_edge
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %14, ptr %1, align 4
  br i1 %cmp8.not, label %if.then1.i, label %unpack_u32.exit.i.if.end3.i_crit_edge

unpack_u32.exit.i.if.end3.i_crit_edge:            ; preds = %unpack_u32.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i

if.then1.i:                                       ; preds = %unpack_u32.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @audit_iface(ptr noundef null, ptr noundef null, ptr noundef nonnull @.str.18, ptr noundef nonnull %e, i32 noundef -93) #16
  br label %fail

if.end3.i:                                        ; preds = %unpack_u32.exit.i.if.end3.i_crit_edge, %if.end.i.i
  %36 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %2, align 4
  %and.i = and i32 %37, 1023
  %38 = add nsw i32 %and.i, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -3, i32 %38)
  %39 = icmp ult i32 %38, -3
  br i1 %39, label %if.then8.i, label %if.end10.i

if.then8.i:                                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @audit_iface(ptr noundef null, ptr noundef null, ptr noundef nonnull @.str.19, ptr noundef nonnull %e, i32 noundef -93) #16
  br label %fail

if.end10.i:                                       ; preds = %if.end3.i
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %1, align 4
  %cmp.i.not.i.i.i171 = icmp eq ptr %13, %41
  br i1 %cmp.i.not.i.i.i171, label %if.end10.i.unpack_str.exit.thread_crit_edge, label %if.end.i.i.i173

if.end10.i.unpack_str.exit.thread_crit_edge:      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.end.i.i.i173:                                  ; preds = %if.end10.i
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %41, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %43)
  %cmp.not.i.i.i172 = icmp eq i8 %43, 4
  br i1 %cmp.not.i.i.i172, label %if.then.i.i179, label %if.end.i.i.i173.unpack_str.exit.thread_crit_edge

if.end.i.i.i173.unpack_str.exit.thread_crit_edge: ; preds = %if.end.i.i.i173
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.then.i.i179:                                   ; preds = %if.end.i.i.i173
  %incdec.ptr.i.i.i174 = getelementptr i8, ptr %41, i32 1
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %incdec.ptr.i.i.i174, ptr %1, align 4
  %sub.ptr.lhs.cast.i.i.i.i175 = ptrtoint ptr %13 to i32
  %sub.ptr.rhs.cast.i.i.i.i176 = ptrtoint ptr %incdec.ptr.i.i.i174 to i32
  %sub.ptr.sub.i.i.i.i177 = sub i32 %sub.ptr.lhs.cast.i.i.i.i175, %sub.ptr.rhs.cast.i.i.i.i176
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i177)
  %cmp.i.i.i.i178 = icmp ugt i32 %sub.ptr.sub.i.i.i.i177, 1
  br i1 %cmp.i.i.i.i178, label %if.end.i29.i.i185, label %if.then.i.i179.unpack_str.exit.thread_crit_edge

if.then.i.i179.unpack_str.exit.thread_crit_edge:  ; preds = %if.then.i.i179
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.end.i29.i.i185:                                ; preds = %if.then.i.i179
  %45 = ptrtoint ptr %incdec.ptr.i.i.i174 to i32
  call void @__asan_loadN_noabort(i32 %45, i32 2)
  %46 = load i16, ptr %incdec.ptr.i.i.i174, align 1
  %47 = call i16 @llvm.bswap.i16(i16 %46) #16
  %conv.i28.i.i180 = zext i16 %47 to i32
  %add.ptr.i.i.i181 = getelementptr i8, ptr %41, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i182 = ptrtoint ptr %add.ptr.i.i.i181 to i32
  %sub.ptr.sub.i25.i.i.i183 = sub i32 %sub.ptr.lhs.cast.i.i.i.i175, %sub.ptr.rhs.cast.i24.i.i.i182
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i183, i32 %conv.i28.i.i180)
  %cmp.i26.not.i.i.i184 = icmp ult i32 %sub.ptr.sub.i25.i.i.i183, %conv.i28.i.i180
  br i1 %cmp.i26.not.i.i.i184, label %if.end.i29.i.i185.unpack_str.exit.thread_crit_edge, label %unpack_u16_chunk.exit.i.i187

if.end.i29.i.i185.unpack_str.exit.thread_crit_edge: ; preds = %if.end.i29.i.i185
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_u16_chunk.exit.i.i187:                     ; preds = %if.end.i29.i.i185
  %add.ptr9.i.i.i186 = getelementptr i8, ptr %add.ptr.i.i.i181, i32 %conv.i28.i.i180
  %48 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %add.ptr9.i.i.i186, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %46)
  %tobool3.not.i.i188 = icmp eq i16 %46, 0
  br i1 %tobool3.not.i.i188, label %unpack_u16_chunk.exit.i.i187.unpack_str.exit.thread_crit_edge, label %lor.lhs.false.i.i192

unpack_u16_chunk.exit.i.i187.unpack_str.exit.thread_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i187
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

lor.lhs.false.i.i192:                             ; preds = %unpack_u16_chunk.exit.i.i187
  %sub.i.i189 = add nsw i32 %conv.i28.i.i180, -1
  %arrayidx.i.i190 = getelementptr i8, ptr %add.ptr.i.i.i181, i32 %sub.i.i189
  %49 = ptrtoint ptr %arrayidx.i.i190 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx.i.i190, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %cmp.not.i.i191 = icmp eq i8 %50, 0
  br i1 %cmp.not.i.i191, label %lor.lhs.false5.i.i195, label %lor.lhs.false.i.i192.unpack_str.exit.thread_crit_edge

lor.lhs.false.i.i192.unpack_str.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i192
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

lor.lhs.false5.i.i195:                            ; preds = %lor.lhs.false.i.i192
  %call6.i.i193 = call i32 @strcmp(ptr noundef nonnull dereferenceable(10) @.str.20, ptr noundef %add.ptr.i.i.i181) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i193)
  %tobool7.not.i.i194 = icmp ne i32 %call6.i.i193, 0
  %cmp.i.not.i33.i.i196 = icmp eq ptr %13, %add.ptr9.i.i.i186
  %or.cond = select i1 %tobool7.not.i.i194, i1 true, i1 %cmp.i.not.i33.i.i196
  br i1 %or.cond, label %lor.lhs.false5.i.i195.unpack_str.exit.thread_crit_edge, label %unpack_nameX.exit.i201

lor.lhs.false5.i.i195.unpack_str.exit.thread_crit_edge: ; preds = %lor.lhs.false5.i.i195
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_nameX.exit.i201:                           ; preds = %lor.lhs.false5.i.i195
  %51 = ptrtoint ptr %add.ptr9.i.i.i186 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %add.ptr9.i.i.i186, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %52)
  %cmp.not.i35.i.i198 = icmp eq i8 %52, 5
  %incdec.ptr.i37.i.i199 = getelementptr i8, ptr %add.ptr9.i.i.i186, i32 1
  %spec.select.i.i200 = select i1 %cmp.not.i35.i.i198, ptr %incdec.ptr.i37.i.i199, ptr %41
  %53 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %spec.select.i.i200, ptr %1, align 4
  %sub.ptr.rhs.cast.i.i.i203 = ptrtoint ptr %spec.select.i.i200 to i32
  %sub.ptr.sub.i.i.i204 = sub i32 %sub.ptr.lhs.cast.i.i.i.i175, %sub.ptr.rhs.cast.i.i.i203
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i204)
  %cmp.i.i.i205 = icmp ugt i32 %sub.ptr.sub.i.i.i204, 1
  %or.cond245 = select i1 %cmp.not.i35.i.i198, i1 %cmp.i.i.i205, i1 false
  br i1 %or.cond245, label %if.end.i.i209, label %unpack_nameX.exit.i201.unpack_str.exit.thread_crit_edge

unpack_nameX.exit.i201.unpack_str.exit.thread_crit_edge: ; preds = %unpack_nameX.exit.i201
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.end.i.i209:                                    ; preds = %unpack_nameX.exit.i201
  %54 = ptrtoint ptr %spec.select.i.i200 to i32
  call void @__asan_loadN_noabort(i32 %54, i32 2)
  %55 = load i16, ptr %spec.select.i.i200, align 1
  %56 = call i16 @llvm.bswap.i16(i16 %55) #16
  %conv.i.i207 = zext i16 %56 to i32
  %add.ptr.i.i208 = getelementptr i8, ptr %spec.select.i.i200, i32 2
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i208 to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i175, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i.i207)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i.i207
  br i1 %cmp.i26.not.i.i, label %if.end.i.i209.unpack_str.exit.thread_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i.i209.unpack_str.exit.thread_crit_edge:   ; preds = %if.end.i.i209
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i.i209
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i208, i32 %conv.i.i207
  %57 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %add.ptr9.i.i, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %55)
  %tobool.not.i210 = icmp eq i16 %55, 0
  br i1 %tobool.not.i210, label %unpack_u16_chunk.exit.i.unpack_str.exit.thread_crit_edge, label %if.then3.i

unpack_u16_chunk.exit.i.unpack_str.exit.thread_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.then3.i:                                       ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i.i207, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i208, i32 %sub.i
  %58 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %cmp.not.i211 = icmp eq i8 %59, 0
  br i1 %cmp.not.i211, label %if.then13.i, label %if.then3.i.unpack_str.exit.thread_crit_edge

if.then3.i.unpack_str.exit.thread_crit_edge:      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_str.exit.thread:                           ; preds = %if.then3.i.unpack_str.exit.thread_crit_edge, %unpack_u16_chunk.exit.i.unpack_str.exit.thread_crit_edge, %if.end.i.i209.unpack_str.exit.thread_crit_edge, %unpack_nameX.exit.i201.unpack_str.exit.thread_crit_edge, %lor.lhs.false5.i.i195.unpack_str.exit.thread_crit_edge, %lor.lhs.false.i.i192.unpack_str.exit.thread_crit_edge, %unpack_u16_chunk.exit.i.i187.unpack_str.exit.thread_crit_edge, %if.end.i29.i.i185.unpack_str.exit.thread_crit_edge, %if.then.i.i179.unpack_str.exit.thread_crit_edge, %if.end.i.i.i173.unpack_str.exit.thread_crit_edge, %if.end10.i.unpack_str.exit.thread_crit_edge
  %60 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %41, ptr %1, align 4
  br label %if.end

if.then13.i:                                      ; preds = %if.then3.i
  %61 = ptrtoint ptr %add.ptr.i.i208 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %add.ptr.i.i208, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %cmp14.i = icmp eq i8 %62, 0
  br i1 %cmp14.i, label %if.then16.i, label %if.then25.i

if.then16.i:                                      ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @audit_iface(ptr noundef null, ptr noundef null, ptr noundef nonnull @.str.21, ptr noundef nonnull %e, i32 noundef -93) #16
  br label %fail

if.then25.i:                                      ; preds = %if.then13.i
  %call26.i = call noalias ptr @kstrdup(ptr noundef %add.ptr.i.i208, i32 noundef 3264) #16
  %63 = ptrtoint ptr %ns to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call26.i, ptr %ns, align 4
  %tobool27.not.i = icmp eq ptr %call26.i, null
  br i1 %tobool27.not.i, label %if.then25.i.fail_crit_edge, label %if.then25.i.if.end_crit_edge

if.then25.i.if.end_crit_edge:                     ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then25.i.fail_crit_edge:                       ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end:                                           ; preds = %if.then25.i.if.end_crit_edge, %unpack_str.exit.thread
  %64 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmpns.i) #16
  %66 = ptrtoint ptr %tmpns.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %tmpns.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ns_len.i) #16
  %67 = ptrtoint ptr %ns_len.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 -1, ptr %ns_len.i, align 4, !annotation !316
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %params.i) #16
  %68 = call ptr @memset(ptr %params.i, i32 0, i32 28)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %key.i) #16
  %69 = ptrtoint ptr %key.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %key.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmpcap.i) #16
  %70 = ptrtoint ptr %tmpcap.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 -1, ptr %tmpcap.i, align 4, !annotation !316
  %71 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 -1, ptr %12, align 4, !annotation !316
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #16
  %72 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 -1, ptr %tmp.i, align 4, !annotation !316
  %73 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %0, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %74, %65
  br i1 %cmp.i.not.i.i.i, label %if.end.if.then322.sink.split.i_crit_edge, label %if.end.i.i.i

if.end.if.then322.sink.split.i_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

if.end.i.i.i:                                     ; preds = %if.end
  %75 = ptrtoint ptr %65 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %65, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %76)
  %cmp.not.i.i.i106 = icmp eq i8 %76, 4
  br i1 %cmp.not.i.i.i106, label %if.then.i.i, label %if.end.i.i.i.if.then322.sink.split.i_crit_edge

if.end.i.i.i.if.then322.sink.split.i_crit_edge:   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %65, i32 1
  %77 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %incdec.ptr.i.i.i, ptr %1, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %74 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.if.then322.sink.split.i_crit_edge

if.then.i.i.if.then322.sink.split.i_crit_edge:    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %78 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %78, i32 2)
  %79 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %80 = call i16 @llvm.bswap.i16(i16 %79) #16
  %conv.i28.i.i = zext i16 %80 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %65, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.if.then322.sink.split.i_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.if.then322.sink.split.i_crit_edge: ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %81 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %add.ptr9.i.i.i, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %79)
  %tobool3.not.i.i = icmp eq i16 %79, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.if.then322.sink.split.i_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.if.then322.sink.split.i_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %82 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %83)
  %cmp.not.i.i = icmp eq i8 %83, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.if.then322.sink.split.i_crit_edge

lor.lhs.false.i.i.if.then322.sink.split.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.30, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %74, %add.ptr9.i.i.i
  %or.cond635.i = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond635.i, label %lor.lhs.false5.i.i.if.then322.sink.split.i_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.if.then322.sink.split.i_crit_edge: ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %84 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %85)
  %cmp.not.i35.i.i = icmp eq i8 %85, 7
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %65
  %86 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %spec.select.i.i, ptr %1, align 4
  br i1 %cmp.not.i35.i.i, label %if.end.i, label %unpack_nameX.exit.i.if.then322.i_crit_edge

unpack_nameX.exit.i.if.then322.i_crit_edge:       ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.i

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  %cmp.i.not.i.i.i.i107 = icmp eq ptr %74, %spec.select.i.i
  br i1 %cmp.i.not.i.i.i.i107, label %if.end.i.if.end13.i.i.i_crit_edge, label %if.end.i.i.i.i109

if.end.i.if.end13.i.i.i_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i.i

if.end.i.i.i.i109:                                ; preds = %if.end.i
  %87 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %spec.select.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %88)
  %cmp.not.i.i.i.i108 = icmp eq i8 %88, 4
  br i1 %cmp.not.i.i.i.i108, label %if.then.i.i.i114, label %if.end.i.i.i.i109.if.end13.i.i.i_crit_edge

if.end.i.i.i.i109.if.end13.i.i.i_crit_edge:       ; preds = %if.end.i.i.i.i109
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i.i

if.then.i.i.i114:                                 ; preds = %if.end.i.i.i.i109
  %incdec.ptr.i.i.i.i110 = getelementptr i8, ptr %spec.select.i.i, i32 1
  %89 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %incdec.ptr.i.i.i.i110, ptr %1, align 4
  %sub.ptr.rhs.cast.i.i.i.i.i111 = ptrtoint ptr %incdec.ptr.i.i.i.i110 to i32
  %sub.ptr.sub.i.i.i.i.i112 = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i111
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i.i112)
  %cmp.i.i.i.i.i113 = icmp ugt i32 %sub.ptr.sub.i.i.i.i.i112, 1
  br i1 %cmp.i.i.i.i.i113, label %if.end.i29.i.i.i121, label %if.then.i.i.i114.unpack_u16_chunk.exit.i.i.i122_crit_edge

if.then.i.i.i114.unpack_u16_chunk.exit.i.i.i122_crit_edge: ; preds = %if.then.i.i.i114
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i.i122

if.end.i29.i.i.i121:                              ; preds = %if.then.i.i.i114
  call void @__sanitizer_cov_trace_pc() #18
  %90 = ptrtoint ptr %incdec.ptr.i.i.i.i110 to i32
  call void @__asan_loadN_noabort(i32 %90, i32 2)
  %91 = load i16, ptr %incdec.ptr.i.i.i.i110, align 1
  %92 = call i16 @llvm.bswap.i16(i16 %91) #16
  %conv.i28.i.i.i115 = zext i16 %92 to i32
  %add.ptr.i.i.i.i116 = getelementptr i8, ptr %spec.select.i.i, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i.i117 = ptrtoint ptr %add.ptr.i.i.i.i116 to i32
  %sub.ptr.sub.i25.i.i.i.i118 = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i.i117
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i.i118, i32 %conv.i28.i.i.i115)
  %cmp.i26.not.i.i.i.i119 = icmp ult i32 %sub.ptr.sub.i25.i.i.i.i118, %conv.i28.i.i.i115
  %add.ptr9.i.i.i.i120 = getelementptr i8, ptr %add.ptr.i.i.i.i116, i32 %conv.i28.i.i.i115
  %spec.select.i = select i1 %cmp.i26.not.i.i.i.i119, ptr %incdec.ptr.i.i.i.i110, ptr %add.ptr9.i.i.i.i120
  br label %unpack_u16_chunk.exit.i.i.i122

unpack_u16_chunk.exit.i.i.i122:                   ; preds = %if.end.i29.i.i.i121, %if.then.i.i.i114.unpack_u16_chunk.exit.i.i.i122_crit_edge
  %storemerge.i.i.i.i = phi ptr [ %incdec.ptr.i.i.i.i110, %if.then.i.i.i114.unpack_u16_chunk.exit.i.i.i122_crit_edge ], [ %spec.select.i, %if.end.i29.i.i.i121 ]
  %93 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %storemerge.i.i.i.i, ptr %1, align 4
  br label %if.end13.i.i.i

if.end13.i.i.i:                                   ; preds = %unpack_u16_chunk.exit.i.i.i122, %if.end.i.i.i.i109.if.end13.i.i.i_crit_edge, %if.end.i.if.end13.i.i.i_crit_edge
  %94 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %1, align 4
  %cmp.i.not.i33.i.i.i123 = icmp eq ptr %74, %95
  br i1 %cmp.i.not.i33.i.i.i123, label %if.end13.i.i.i.if.then322.sink.split.i_crit_edge, label %unpack_nameX.exit.i.i127

if.end13.i.i.i.if.then322.sink.split.i_crit_edge: ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

unpack_nameX.exit.i.i127:                         ; preds = %if.end13.i.i.i
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load1_noabort(i32 %96)
  %97 = load i8, ptr %95, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %97)
  %cmp.not.i35.i.i.i124 = icmp eq i8 %97, 5
  %incdec.ptr.i37.i.i.i125 = getelementptr i8, ptr %95, i32 1
  %spec.select.i.i.i126 = select i1 %cmp.not.i35.i.i.i124, ptr %incdec.ptr.i37.i.i.i125, ptr %spec.select.i.i
  %98 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr %spec.select.i.i.i126, ptr %1, align 4
  %sub.ptr.rhs.cast.i.i.i480.i = ptrtoint ptr %spec.select.i.i.i126 to i32
  %sub.ptr.sub.i.i.i481.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i480.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i481.i)
  %cmp.i.i.i482.i = icmp ugt i32 %sub.ptr.sub.i.i.i481.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i.i124, i1 %cmp.i.i.i482.i, i1 false
  br i1 %or.cond.i, label %if.end.i.i488.i, label %unpack_nameX.exit.i.i127.if.then322.sink.split.i_crit_edge

unpack_nameX.exit.i.i127.if.then322.sink.split.i_crit_edge: ; preds = %unpack_nameX.exit.i.i127
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

if.end.i.i488.i:                                  ; preds = %unpack_nameX.exit.i.i127
  %99 = ptrtoint ptr %spec.select.i.i.i126 to i32
  call void @__asan_loadN_noabort(i32 %99, i32 2)
  %100 = load i16, ptr %spec.select.i.i.i126, align 1
  %101 = call i16 @llvm.bswap.i16(i16 %100) #16
  %conv.i.i.i = zext i16 %101 to i32
  %add.ptr.i.i484.i = getelementptr i8, ptr %spec.select.i.i.i126, i32 2
  %sub.ptr.rhs.cast.i24.i.i485.i = ptrtoint ptr %add.ptr.i.i484.i to i32
  %sub.ptr.sub.i25.i.i486.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i485.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i486.i, i32 %conv.i.i.i)
  %cmp.i26.not.i.i487.i = icmp ult i32 %sub.ptr.sub.i25.i.i486.i, %conv.i.i.i
  br i1 %cmp.i26.not.i.i487.i, label %if.end.i.i488.i.if.then322.sink.split.i_crit_edge, label %unpack_u16_chunk.exit.i490.i

if.end.i.i488.i.if.then322.sink.split.i_crit_edge: ; preds = %if.end.i.i488.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

unpack_u16_chunk.exit.i490.i:                     ; preds = %if.end.i.i488.i
  %add.ptr9.i.i489.i = getelementptr i8, ptr %add.ptr.i.i484.i, i32 %conv.i.i.i
  %102 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %add.ptr9.i.i489.i, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %100)
  %tobool.not.i.i = icmp eq i16 %100, 0
  br i1 %tobool.not.i.i, label %unpack_u16_chunk.exit.i490.i.if.then322.sink.split.i_crit_edge, label %if.then3.i.i

unpack_u16_chunk.exit.i490.i.if.then322.sink.split.i_crit_edge: ; preds = %unpack_u16_chunk.exit.i490.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

if.then3.i.i:                                     ; preds = %unpack_u16_chunk.exit.i490.i
  %sub.i491.i = add nsw i32 %conv.i.i.i, -1
  %arrayidx.i492.i = getelementptr i8, ptr %add.ptr.i.i484.i, i32 %sub.i491.i
  %103 = ptrtoint ptr %arrayidx.i492.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %arrayidx.i492.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %104)
  %cmp.not.i493.i = icmp eq i8 %104, 0
  br i1 %cmp.not.i493.i, label %if.end3.i128, label %if.then3.i.i.if.then322.sink.split.i_crit_edge

if.then3.i.i.if.then322.sink.split.i_crit_edge:   ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.sink.split.i

if.end3.i128:                                     ; preds = %if.then3.i.i
  %105 = ptrtoint ptr %add.ptr.i.i484.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %add.ptr.i.i484.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %106)
  %cmp.i = icmp eq i8 %106, 0
  br i1 %cmp.i, label %if.end3.i128.if.else320.i_crit_edge, label %if.end6.i

if.end3.i128.if.else320.i_crit_edge:              ; preds = %if.end3.i128
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else320.i

if.end6.i:                                        ; preds = %if.end3.i128
  %call7.i = call i32 @strlen(ptr noundef %add.ptr.i.i484.i) #22
  %call8.i = call ptr @aa_splitn_fqname(ptr noundef %add.ptr.i.i484.i, i32 noundef %call7.i, ptr noundef nonnull %tmpns.i, ptr noundef nonnull %ns_len.i) #16
  %107 = ptrtoint ptr %tmpns.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %tmpns.i, align 4
  %tobool9.not.i = icmp eq ptr %108, null
  br i1 %tobool9.not.i, label %if.end6.i.if.end15.i_crit_edge, label %if.then10.i

if.end6.i.if.end15.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i

if.then10.i:                                      ; preds = %if.end6.i
  %109 = ptrtoint ptr %ns_len.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %ns_len.i, align 4
  %call11.i129 = call ptr @kstrndup(ptr noundef nonnull %108, i32 noundef %110, i32 noundef 3264) #16
  %tobool12.not.i130 = icmp eq ptr %call11.i129, null
  br i1 %tobool12.not.i130, label %if.then10.i.if.else320.i_crit_edge, label %if.then10.i.if.end15.i_crit_edge

if.then10.i.if.end15.i_crit_edge:                 ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i

if.then10.i.if.else320.i_crit_edge:               ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else320.i

if.end15.i:                                       ; preds = %if.then10.i.if.end15.i_crit_edge, %if.end6.i.if.end15.i_crit_edge
  %ns_name.0 = phi ptr [ null, %if.end6.i.if.end15.i_crit_edge ], [ %call11.i129, %if.then10.i.if.end15.i_crit_edge ]
  %name.1.i = phi ptr [ %add.ptr.i.i484.i, %if.end6.i.if.end15.i_crit_edge ], [ %call8.i, %if.then10.i.if.end15.i_crit_edge ]
  %call16.i = call ptr @aa_alloc_profile(ptr noundef %name.1.i, ptr noundef null, i32 noundef 3264) #16
  %tobool17.not.i = icmp eq ptr %call16.i, null
  br i1 %tobool17.not.i, label %unpack_profile.exit.thread, label %if.end20.i

unpack_profile.exit.thread:                       ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmpcap.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %key.i) #16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %params.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ns_len.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmpns.i) #16
  br label %if.then12

if.end20.i:                                       ; preds = %if.end15.i
  %rename.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 3
  %call21.i = call fastcc i32 @unpack_str(ptr noundef nonnull %e, ptr noundef %rename.i, ptr noundef nonnull @.str.32) #16
  %attach.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 4
  %call22.i = call fastcc i32 @unpack_str(ptr noundef nonnull %e, ptr noundef %attach.i, ptr noundef nonnull @.str.33) #16
  %call23.i = call fastcc ptr @unpack_dfa(ptr noundef nonnull %e) #16
  %xmatch.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 5
  %111 = ptrtoint ptr %xmatch.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store ptr %call23.i, ptr %xmatch.i, align 4
  %cmp.i.i = icmp ugt ptr %call23.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then26.i, label %if.end30.i

if.then26.i:                                      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  %112 = ptrtoint ptr %call23.i to i32
  %113 = ptrtoint ptr %xmatch.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr null, ptr %xmatch.i, align 4
  br label %if.end324.i

if.end30.i:                                       ; preds = %if.end20.i
  %tobool32.not.i = icmp eq ptr %call23.i, null
  br i1 %tobool32.not.i, label %if.end30.i.if.end37.i_crit_edge, label %if.then33.i

if.end30.i.if.end37.i_crit_edge:                  ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37.i

if.then33.i:                                      ; preds = %if.end30.i
  %114 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %1, align 4
  %116 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %0, align 4
  %cmp.i.not.i.i.i497.i = icmp eq ptr %117, %115
  br i1 %cmp.i.not.i.i.i497.i, label %if.then33.i.if.end13.i.i520.i_crit_edge, label %if.end.i.i.i499.i

if.then33.i.if.end13.i.i520.i_crit_edge:          ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i520.i

if.end.i.i.i499.i:                                ; preds = %if.then33.i
  %118 = ptrtoint ptr %115 to i32
  call void @__asan_load1_noabort(i32 %118)
  %119 = load i8, ptr %115, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %119)
  %cmp.not.i.i.i498.i = icmp eq i8 %119, 4
  br i1 %cmp.not.i.i.i498.i, label %if.then.i.i505.i, label %if.end.i.i.i499.i.if.end13.i.i520.i_crit_edge

if.end.i.i.i499.i.if.end13.i.i520.i_crit_edge:    ; preds = %if.end.i.i.i499.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i520.i

if.then.i.i505.i:                                 ; preds = %if.end.i.i.i499.i
  %incdec.ptr.i.i.i500.i = getelementptr i8, ptr %115, i32 1
  %120 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %incdec.ptr.i.i.i500.i, ptr %1, align 4
  %sub.ptr.lhs.cast.i.i.i.i501.i = ptrtoint ptr %117 to i32
  %sub.ptr.rhs.cast.i.i.i.i502.i = ptrtoint ptr %incdec.ptr.i.i.i500.i to i32
  %sub.ptr.sub.i.i.i.i503.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i501.i, %sub.ptr.rhs.cast.i.i.i.i502.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i503.i)
  %cmp.i.i.i.i504.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i503.i, 1
  br i1 %cmp.i.i.i.i504.i, label %if.end.i29.i.i511.i, label %if.then.i.i505.i.unpack_u16_chunk.exit.i.i517.i_crit_edge

if.then.i.i505.i.unpack_u16_chunk.exit.i.i517.i_crit_edge: ; preds = %if.then.i.i505.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i517.i

if.end.i29.i.i511.i:                              ; preds = %if.then.i.i505.i
  call void @__sanitizer_cov_trace_pc() #18
  %121 = ptrtoint ptr %incdec.ptr.i.i.i500.i to i32
  call void @__asan_loadN_noabort(i32 %121, i32 2)
  %122 = load i16, ptr %incdec.ptr.i.i.i500.i, align 1
  %123 = call i16 @llvm.bswap.i16(i16 %122) #16
  %conv.i28.i.i506.i = zext i16 %123 to i32
  %add.ptr.i.i.i507.i = getelementptr i8, ptr %115, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i508.i = ptrtoint ptr %add.ptr.i.i.i507.i to i32
  %sub.ptr.sub.i25.i.i.i509.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i501.i, %sub.ptr.rhs.cast.i24.i.i.i508.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i509.i, i32 %conv.i28.i.i506.i)
  %cmp.i26.not.i.i.i510.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i509.i, %conv.i28.i.i506.i
  %add.ptr9.i.i.i512.i = getelementptr i8, ptr %add.ptr.i.i.i507.i, i32 %conv.i28.i.i506.i
  %spec.select636.i = select i1 %cmp.i26.not.i.i.i510.i, ptr %incdec.ptr.i.i.i500.i, ptr %add.ptr9.i.i.i512.i
  br label %unpack_u16_chunk.exit.i.i517.i

unpack_u16_chunk.exit.i.i517.i:                   ; preds = %if.end.i29.i.i511.i, %if.then.i.i505.i.unpack_u16_chunk.exit.i.i517.i_crit_edge
  %storemerge.i.i.i515.i = phi ptr [ %incdec.ptr.i.i.i500.i, %if.then.i.i505.i.unpack_u16_chunk.exit.i.i517.i_crit_edge ], [ %spec.select636.i, %if.end.i29.i.i511.i ]
  %124 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr %storemerge.i.i.i515.i, ptr %1, align 4
  br label %if.end13.i.i520.i

if.end13.i.i520.i:                                ; preds = %unpack_u16_chunk.exit.i.i517.i, %if.end.i.i.i499.i.if.end13.i.i520.i_crit_edge, %if.then33.i.if.end13.i.i520.i_crit_edge
  %125 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %1, align 4
  %cmp.i.not.i33.i.i519.i = icmp eq ptr %117, %126
  br i1 %cmp.i.not.i33.i.i519.i, label %if.end13.i.i520.i.unpack_u32.exit.thread.i_crit_edge, label %unpack_nameX.exit.i524.i

if.end13.i.i520.i.unpack_u32.exit.thread.i_crit_edge: ; preds = %if.end13.i.i520.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.thread.i

unpack_nameX.exit.i524.i:                         ; preds = %if.end13.i.i520.i
  %127 = ptrtoint ptr %126 to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %126, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %128)
  %cmp.not.i35.i.i521.i = icmp eq i8 %128, 2
  %incdec.ptr.i37.i.i522.i = getelementptr i8, ptr %126, i32 1
  %spec.select.i.i523.i = select i1 %cmp.not.i35.i.i521.i, ptr %incdec.ptr.i37.i.i522.i, ptr %115
  %129 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %129)
  store ptr %spec.select.i.i523.i, ptr %1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %117 to i32
  %sub.ptr.rhs.cast.i.i.i131 = ptrtoint ptr %spec.select.i.i523.i to i32
  %sub.ptr.sub.i.i.i132 = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i131
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i.i132)
  %cmp.i.i.i133 = icmp ugt i32 %sub.ptr.sub.i.i.i132, 3
  %or.cond.i.i134 = select i1 %cmp.not.i35.i.i521.i, i1 %cmp.i.i.i133, i1 false
  br i1 %or.cond.i.i134, label %if.end36.i, label %unpack_nameX.exit.i524.i.unpack_u32.exit.thread.i_crit_edge

unpack_nameX.exit.i524.i.unpack_u32.exit.thread.i_crit_edge: ; preds = %unpack_nameX.exit.i524.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit.thread.i

unpack_u32.exit.thread.i:                         ; preds = %unpack_nameX.exit.i524.i.unpack_u32.exit.thread.i_crit_edge, %if.end13.i.i520.i.unpack_u32.exit.thread.i_crit_edge
  %130 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %130)
  store ptr %115, ptr %1, align 4
  br label %if.end324.i

if.end36.i:                                       ; preds = %unpack_nameX.exit.i524.i
  call void @__sanitizer_cov_trace_pc() #18
  %131 = ptrtoint ptr %spec.select.i.i523.i to i32
  call void @__asan_loadN_noabort(i32 %131, i32 4)
  %132 = load i32, ptr %spec.select.i.i523.i, align 1
  %133 = call i32 @llvm.bswap.i32(i32 %132) #16
  %134 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %133, ptr %tmp.i, align 4
  %add.ptr.i.i135 = getelementptr i8, ptr %spec.select.i.i523.i, i32 4
  %135 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %135)
  store ptr %add.ptr.i.i135, ptr %1, align 4
  %xmatch_len.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 6
  %136 = ptrtoint ptr %xmatch_len.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 %133, ptr %xmatch_len.i, align 4
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.end36.i, %if.end30.i.if.end37.i_crit_edge
  %disconnected.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 10
  %call38.i = call fastcc i32 @unpack_str(ptr noundef nonnull %e, ptr noundef %disconnected.i, ptr noundef nonnull @.str.36) #16
  %137 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %1, align 4
  %139 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %0, align 4
  %cmp.i.not.i.i530.i = icmp eq ptr %140, %138
  br i1 %cmp.i.not.i.i530.i, label %if.end37.i.unpack_nameX.exit569.thread.i_crit_edge, label %if.end.i.i532.i

if.end37.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

if.end.i.i532.i:                                  ; preds = %if.end37.i
  %141 = ptrtoint ptr %138 to i32
  call void @__asan_load1_noabort(i32 %141)
  %142 = load i8, ptr %138, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %142)
  %cmp.not.i.i531.i = icmp eq i8 %142, 4
  br i1 %cmp.not.i.i531.i, label %if.then.i538.i, label %if.end.i.i532.i.unpack_nameX.exit569.thread.i_crit_edge

if.end.i.i532.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %if.end.i.i532.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

if.then.i538.i:                                   ; preds = %if.end.i.i532.i
  %incdec.ptr.i.i533.i = getelementptr i8, ptr %138, i32 1
  %143 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr %incdec.ptr.i.i533.i, ptr %1, align 4
  %sub.ptr.lhs.cast.i.i.i534.i = ptrtoint ptr %140 to i32
  %sub.ptr.rhs.cast.i.i.i535.i = ptrtoint ptr %incdec.ptr.i.i533.i to i32
  %sub.ptr.sub.i.i.i536.i = sub i32 %sub.ptr.lhs.cast.i.i.i534.i, %sub.ptr.rhs.cast.i.i.i535.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i536.i)
  %cmp.i.i.i537.i = icmp ugt i32 %sub.ptr.sub.i.i.i536.i, 1
  br i1 %cmp.i.i.i537.i, label %if.end.i29.i544.i, label %if.then.i538.i.unpack_nameX.exit569.thread.i_crit_edge

if.then.i538.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %if.then.i538.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

if.end.i29.i544.i:                                ; preds = %if.then.i538.i
  %144 = ptrtoint ptr %incdec.ptr.i.i533.i to i32
  call void @__asan_loadN_noabort(i32 %144, i32 2)
  %145 = load i16, ptr %incdec.ptr.i.i533.i, align 1
  %146 = call i16 @llvm.bswap.i16(i16 %145) #16
  %conv.i28.i539.i = zext i16 %146 to i32
  %add.ptr.i.i540.i = getelementptr i8, ptr %138, i32 3
  %sub.ptr.rhs.cast.i24.i.i541.i = ptrtoint ptr %add.ptr.i.i540.i to i32
  %sub.ptr.sub.i25.i.i542.i = sub i32 %sub.ptr.lhs.cast.i.i.i534.i, %sub.ptr.rhs.cast.i24.i.i541.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i542.i, i32 %conv.i28.i539.i)
  %cmp.i26.not.i.i543.i = icmp ult i32 %sub.ptr.sub.i25.i.i542.i, %conv.i28.i539.i
  br i1 %cmp.i26.not.i.i543.i, label %if.end.i29.i544.i.unpack_nameX.exit569.thread.i_crit_edge, label %unpack_u16_chunk.exit.i550.i

if.end.i29.i544.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %if.end.i29.i544.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

unpack_u16_chunk.exit.i550.i:                     ; preds = %if.end.i29.i544.i
  %add.ptr9.i.i545.i = getelementptr i8, ptr %add.ptr.i.i540.i, i32 %conv.i28.i539.i
  %147 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %147)
  store ptr %add.ptr9.i.i545.i, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %145)
  %tobool3.not.i551.i = icmp eq i16 %145, 0
  br i1 %tobool3.not.i551.i, label %unpack_u16_chunk.exit.i550.i.unpack_nameX.exit569.thread.i_crit_edge, label %lor.lhs.false.i555.i

unpack_u16_chunk.exit.i550.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %unpack_u16_chunk.exit.i550.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

lor.lhs.false.i555.i:                             ; preds = %unpack_u16_chunk.exit.i550.i
  %sub.i552.i = add nsw i32 %conv.i28.i539.i, -1
  %arrayidx.i553.i = getelementptr i8, ptr %add.ptr.i.i540.i, i32 %sub.i552.i
  %148 = ptrtoint ptr %arrayidx.i553.i to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %arrayidx.i553.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %149)
  %cmp.not.i554.i = icmp eq i8 %149, 0
  br i1 %cmp.not.i554.i, label %lor.lhs.false5.i558.i, label %lor.lhs.false.i555.i.unpack_nameX.exit569.thread.i_crit_edge

lor.lhs.false.i555.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %lor.lhs.false.i555.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

lor.lhs.false5.i558.i:                            ; preds = %lor.lhs.false.i555.i
  %call6.i556.i = call i32 @strcmp(ptr noundef nonnull dereferenceable(6) @.str.37, ptr noundef %add.ptr.i.i540.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i556.i)
  %tobool7.not.i557.i = icmp ne i32 %call6.i556.i, 0
  %cmp.i.not.i33.i560.i = icmp eq ptr %140, %add.ptr9.i.i545.i
  %or.cond637.i = select i1 %tobool7.not.i557.i, i1 true, i1 %cmp.i.not.i33.i560.i
  br i1 %or.cond637.i, label %lor.lhs.false5.i558.i.unpack_nameX.exit569.thread.i_crit_edge, label %unpack_nameX.exit569.i

lor.lhs.false5.i558.i.unpack_nameX.exit569.thread.i_crit_edge: ; preds = %lor.lhs.false5.i558.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit569.thread.i

unpack_nameX.exit569.thread.i:                    ; preds = %lor.lhs.false5.i558.i.unpack_nameX.exit569.thread.i_crit_edge, %lor.lhs.false.i555.i.unpack_nameX.exit569.thread.i_crit_edge, %unpack_u16_chunk.exit.i550.i.unpack_nameX.exit569.thread.i_crit_edge, %if.end.i29.i544.i.unpack_nameX.exit569.thread.i_crit_edge, %if.then.i538.i.unpack_nameX.exit569.thread.i_crit_edge, %if.end.i.i532.i.unpack_nameX.exit569.thread.i_crit_edge, %if.end37.i.unpack_nameX.exit569.thread.i_crit_edge
  %150 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr %138, ptr %1, align 4
  br label %if.end324.i

unpack_nameX.exit569.i:                           ; preds = %lor.lhs.false5.i558.i
  %151 = ptrtoint ptr %add.ptr9.i.i545.i to i32
  call void @__asan_load1_noabort(i32 %151)
  %152 = load i8, ptr %add.ptr9.i.i545.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %152)
  %cmp.not.i35.i563.i = icmp eq i8 %152, 7
  %incdec.ptr.i37.i564.i = getelementptr i8, ptr %add.ptr9.i.i545.i, i32 1
  %spec.select.i565.i = select i1 %cmp.not.i35.i563.i, ptr %incdec.ptr.i37.i564.i, ptr %138
  %153 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %153)
  store ptr %spec.select.i565.i, ptr %1, align 4
  br i1 %cmp.not.i35.i563.i, label %if.end41.i, label %unpack_nameX.exit569.i.if.end324.i_crit_edge

unpack_nameX.exit569.i.if.end324.i_crit_edge:     ; preds = %unpack_nameX.exit569.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end41.i:                                       ; preds = %unpack_nameX.exit569.i
  %call42.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef nonnull %tmp.i, ptr noundef null) #16
  br i1 %call42.i, label %if.end44.i, label %if.end41.i.if.end324.i_crit_edge

if.end41.i.if.end324.i_crit_edge:                 ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end44.i:                                       ; preds = %if.end41.i
  %154 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %tmp.i, align 4
  %and.i136 = and i32 %155, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i136)
  %tobool45.not.i = icmp eq i32 %and.i136, 0
  br i1 %tobool45.not.i, label %if.end44.i.if.end47.i_crit_edge, label %if.then46.i

if.end44.i.if.end47.i_crit_edge:                  ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47.i

if.then46.i:                                      ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #18
  %flags.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 25, i32 5
  %156 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %157, 1
  store i32 %or.i, ptr %flags.i, align 4
  br label %if.end47.i

if.end47.i:                                       ; preds = %if.then46.i, %if.end44.i.if.end47.i_crit_edge
  %call48.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef nonnull %tmp.i, ptr noundef null) #16
  br i1 %call48.i, label %if.end50.i, label %if.end47.i.if.end324.i_crit_edge

if.end47.i.if.end324.i_crit_edge:                 ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end50.i:                                       ; preds = %if.end47.i
  %158 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %tmp.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %159)
  %cmp51.i = icmp eq i32 %159, 1
  br i1 %cmp51.i, label %if.end50.i.if.end74.i_crit_edge, label %lor.lhs.false.i

if.end50.i.if.end74.i_crit_edge:                  ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end74.i

lor.lhs.false.i:                                  ; preds = %if.end50.i
  %160 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %2, align 4
  %and53.i = and i32 %161, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i)
  %tobool54.not.i = icmp eq i32 %and53.i, 0
  br i1 %tobool54.not.i, label %if.else.i, label %lor.lhs.false.i.if.end74.i_crit_edge

lor.lhs.false.i.if.end74.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end74.i

if.else.i:                                        ; preds = %lor.lhs.false.i
  %162 = zext i32 %159 to i64
  call void @__sanitizer_cov_trace_switch(i64 %162, ptr @__sancov_gen_cov_switch_values)
  switch i32 %159, label %if.else.i.if.end324.i_crit_edge [
    i32 0, label %if.else.i.if.end74.i_crit_edge
    i32 2, label %if.else.i.if.end74.i_crit_edge297
    i32 3, label %if.else.i.if.end74.i_crit_edge298
  ]

if.else.i.if.end74.i_crit_edge298:                ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end74.i

if.else.i.if.end74.i_crit_edge297:                ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end74.i

if.else.i.if.end74.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end74.i

if.else.i.if.end324.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end74.i:                                       ; preds = %if.else.i.if.end74.i_crit_edge, %if.else.i.if.end74.i_crit_edge297, %if.else.i.if.end74.i_crit_edge298, %lor.lhs.false.i.if.end74.i_crit_edge, %if.end50.i.if.end74.i_crit_edge
  %.sink.i = phi i32 [ 1, %lor.lhs.false.i.if.end74.i_crit_edge ], [ 1, %if.end50.i.if.end74.i_crit_edge ], [ %159, %if.else.i.if.end74.i_crit_edge ], [ %159, %if.else.i.if.end74.i_crit_edge297 ], [ %159, %if.else.i.if.end74.i_crit_edge298 ]
  %mode59.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 8
  %163 = ptrtoint ptr %mode59.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %.sink.i, ptr %mode59.i, align 4
  %call75.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef nonnull %tmp.i, ptr noundef null) #16
  br i1 %call75.i, label %if.end77.i, label %if.end74.i.if.end324.i_crit_edge

if.end74.i.if.end324.i_crit_edge:                 ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end77.i:                                       ; preds = %if.end74.i
  %164 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %tmp.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %165)
  %tobool78.not.i = icmp eq i32 %165, 0
  br i1 %tobool78.not.i, label %if.end77.i.if.end80.i_crit_edge, label %if.then79.i

if.end77.i.if.end80.i_crit_edge:                  ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end80.i

if.then79.i:                                      ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #18
  %audit.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 7
  %166 = ptrtoint ptr %audit.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 4, ptr %audit.i, align 4
  br label %if.end80.i

if.end80.i:                                       ; preds = %if.then79.i, %if.end77.i.if.end80.i_crit_edge
  %call81.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 8, ptr noundef null) #16
  br i1 %call81.i, label %if.end83.i, label %if.end80.i.if.end324.i_crit_edge

if.end80.i.if.end324.i_crit_edge:                 ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end83.i:                                       ; preds = %if.end80.i
  %path_flags.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 9
  %call84.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %path_flags.i, ptr noundef nonnull @.str.40) #16
  br i1 %call84.i, label %if.then85.i, label %if.end83.i.if.end93.i_crit_edge

if.end83.i.if.end93.i_crit_edge:                  ; preds = %if.end83.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93.i

if.then85.i:                                      ; preds = %if.end83.i
  call void @__sanitizer_cov_trace_pc() #18
  %flags87.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 25, i32 5
  %167 = ptrtoint ptr %flags87.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %flags87.i, align 4
  %and88.i = and i32 %168, 65536
  %169 = ptrtoint ptr %path_flags.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %path_flags.i, align 4
  %or90.i = or i32 %170, %and88.i
  br label %if.end93.i

if.end93.i:                                       ; preds = %if.then85.i, %if.end83.i.if.end93.i_crit_edge
  %storemerge.i = phi i32 [ %or90.i, %if.then85.i ], [ 65536, %if.end83.i.if.end93.i_crit_edge ]
  %171 = ptrtoint ptr %path_flags.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %storemerge.i, ptr %path_flags.i, align 4
  %caps.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 14
  %call94.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %caps.i, ptr noundef null) #16
  br i1 %call94.i, label %if.end96.i, label %if.end93.i.if.end324.i_crit_edge

if.end93.i.if.end324.i_crit_edge:                 ; preds = %if.end93.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end96.i:                                       ; preds = %if.end93.i
  %audit98.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 1
  %call101.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %audit98.i, ptr noundef null) #16
  br i1 %call101.i, label %if.end103.i, label %if.end96.i.if.end324.i_crit_edge

if.end96.i.if.end324.i_crit_edge:                 ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end103.i:                                      ; preds = %if.end96.i
  %quiet.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 3
  %call107.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %quiet.i, ptr noundef null) #16
  br i1 %call107.i, label %if.end109.i, label %if.end103.i.if.end324.i_crit_edge

if.end103.i.if.end324.i_crit_edge:                ; preds = %if.end103.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end109.i:                                      ; preds = %if.end103.i
  %call112.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef nonnull %tmpcap.i, ptr noundef null) #16
  br i1 %call112.i, label %if.end114.i, label %if.end109.i.if.end324.i_crit_edge

if.end109.i.if.end324.i_crit_edge:                ; preds = %if.end109.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end114.i:                                      ; preds = %if.end109.i
  %call115.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 7, ptr noundef nonnull @.str.43) #16
  br i1 %call115.i, label %if.then116.i, label %if.end114.i.if.end146.i_crit_edge

if.end114.i.if.end146.i_crit_edge:                ; preds = %if.end114.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end146.i

if.then116.i:                                     ; preds = %if.end114.i
  %arrayidx120.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 0, i32 0, i32 1
  %call121.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %arrayidx120.i, ptr noundef null) #16
  br i1 %call121.i, label %if.end123.i, label %if.then116.i.if.end324.i_crit_edge

if.then116.i.if.end324.i_crit_edge:               ; preds = %if.then116.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end123.i:                                      ; preds = %if.then116.i
  %arrayidx127.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 1, i32 0, i32 1
  %call128.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %arrayidx127.i, ptr noundef null) #16
  br i1 %call128.i, label %if.end130.i, label %if.end123.i.if.end324.i_crit_edge

if.end123.i.if.end324.i_crit_edge:                ; preds = %if.end123.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end130.i:                                      ; preds = %if.end123.i
  %arrayidx134.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 3, i32 0, i32 1
  %call135.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %arrayidx134.i, ptr noundef null) #16
  br i1 %call135.i, label %if.end137.i, label %if.end130.i.if.end324.i_crit_edge

if.end130.i.if.end324.i_crit_edge:                ; preds = %if.end130.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end137.i:                                      ; preds = %if.end130.i
  %call140.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %12, ptr noundef null) #16
  br i1 %call140.i, label %if.end142.i, label %if.end137.i.if.end324.i_crit_edge

if.end137.i.if.end324.i_crit_edge:                ; preds = %if.end137.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end142.i:                                      ; preds = %if.end137.i
  %call143.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 8, ptr noundef null) #16
  br i1 %call143.i, label %if.end142.i.if.end146.i_crit_edge, label %if.end142.i.if.end324.i_crit_edge

if.end142.i.if.end324.i_crit_edge:                ; preds = %if.end142.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end142.i.if.end146.i_crit_edge:                ; preds = %if.end142.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end146.i

if.end146.i:                                      ; preds = %if.end142.i.if.end146.i_crit_edge, %if.end114.i.if.end146.i_crit_edge
  %call147.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 7, ptr noundef nonnull @.str.45) #16
  br i1 %call147.i, label %if.then148.i, label %if.end146.i.if.end165.i_crit_edge

if.end146.i.if.end165.i_crit_edge:                ; preds = %if.end146.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end165.i

if.then148.i:                                     ; preds = %if.end146.i
  %extended.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 5
  %call152.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %extended.i, ptr noundef null) #16
  br i1 %call152.i, label %if.end154.i, label %if.then148.i.if.end324.i_crit_edge

if.then148.i.if.end324.i_crit_edge:               ; preds = %if.then148.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end154.i:                                      ; preds = %if.then148.i
  %arrayidx158.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 14, i32 5, i32 0, i32 1
  %call159.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %arrayidx158.i, ptr noundef null) #16
  br i1 %call159.i, label %if.end161.i, label %if.end154.i.if.end324.i_crit_edge

if.end154.i.if.end324.i_crit_edge:                ; preds = %if.end154.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end161.i:                                      ; preds = %if.end154.i
  %call162.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 8, ptr noundef null) #16
  br i1 %call162.i, label %if.end161.i.if.end165.i_crit_edge, label %if.end161.i.if.end324.i_crit_edge

if.end161.i.if.end324.i_crit_edge:                ; preds = %if.end161.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end161.i.if.end165.i_crit_edge:                ; preds = %if.end161.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end165.i

if.end165.i:                                      ; preds = %if.end161.i.if.end165.i_crit_edge, %if.end146.i.if.end165.i_crit_edge
  %call166.i = call fastcc zeroext i1 @unpack_xattrs(ptr noundef nonnull %e, ptr noundef nonnull %call16.i) #16
  br i1 %call166.i, label %if.end168.i, label %if.end165.i.if.end324.i_crit_edge

if.end165.i.if.end324.i_crit_edge:                ; preds = %if.end165.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end168.i:                                      ; preds = %if.end165.i
  %call169.i = call fastcc zeroext i1 @unpack_rlimits(ptr noundef nonnull %e, ptr noundef nonnull %call16.i) #16
  br i1 %call169.i, label %if.end171.i, label %if.end168.i.if.end324.i_crit_edge

if.end168.i.if.end324.i_crit_edge:                ; preds = %if.end168.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end171.i:                                      ; preds = %if.end168.i
  %call172.i = call fastcc zeroext i1 @unpack_secmark(ptr noundef nonnull %e, ptr noundef nonnull %call16.i) #16
  br i1 %call172.i, label %if.end174.i, label %if.end171.i.if.end324.i_crit_edge

if.end171.i.if.end324.i_crit_edge:                ; preds = %if.end171.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end174.i:                                      ; preds = %if.end171.i
  %call175.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 7, ptr noundef nonnull @.str.49) #16
  br i1 %call175.i, label %if.then176.i, label %if.else217.i

if.then176.i:                                     ; preds = %if.end174.i
  %call177.i = call fastcc ptr @unpack_dfa(ptr noundef nonnull %e) #16
  %policy.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 12
  %172 = ptrtoint ptr %policy.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store ptr %call177.i, ptr %policy.i, align 4
  %cmp.i570.i = icmp ugt ptr %call177.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i570.i, label %if.then181.i, label %if.else187.i

if.then181.i:                                     ; preds = %if.then176.i
  call void @__sanitizer_cov_trace_pc() #18
  %173 = ptrtoint ptr %call177.i to i32
  %174 = ptrtoint ptr %policy.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store ptr null, ptr %policy.i, align 4
  br label %if.end324.i

if.else187.i:                                     ; preds = %if.then176.i
  %tobool190.not.i = icmp eq ptr %call177.i, null
  br i1 %tobool190.not.i, label %if.else187.i.if.end324.i_crit_edge, label %if.end193.i

if.else187.i.if.end324.i_crit_edge:               ; preds = %if.else187.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end193.i:                                      ; preds = %if.else187.i
  %start.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1
  %call196.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %start.i, ptr noundef nonnull @.str.51) #16
  br i1 %call196.i, label %if.end193.i.if.end201.i_crit_edge, label %if.then197.i

if.end193.i.if.end201.i_crit_edge:                ; preds = %if.end193.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end201.i

if.then197.i:                                     ; preds = %if.end193.i
  call void @__sanitizer_cov_trace_pc() #18
  %175 = ptrtoint ptr %start.i to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 1, ptr %start.i, align 4
  br label %if.end201.i

if.end201.i:                                      ; preds = %if.then197.i, %if.end193.i.if.end201.i_crit_edge
  %176 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %policy.i, align 4
  %178 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %start.i, align 4
  %call210.i = call i32 @aa_dfa_next(ptr noundef %177, i32 noundef %179, i8 noundef zeroext 2) #16
  %arrayidx213.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 2
  %180 = ptrtoint ptr %arrayidx213.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 %call210.i, ptr %arrayidx213.i, align 4
  %181 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %policy.i, align 4
  %183 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %start.i, align 4
  %call210.1.i = call i32 @aa_dfa_next(ptr noundef %182, i32 noundef %184, i8 noundef zeroext 3) #16
  %arrayidx213.1.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 3
  %185 = ptrtoint ptr %arrayidx213.1.i to i32
  call void @__asan_store4_noabort(i32 %185)
  store i32 %call210.1.i, ptr %arrayidx213.1.i, align 4
  %186 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %policy.i, align 4
  %188 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %start.i, align 4
  %call210.2.i = call i32 @aa_dfa_next(ptr noundef %187, i32 noundef %189, i8 noundef zeroext 4) #16
  %arrayidx213.2.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 4
  %190 = ptrtoint ptr %arrayidx213.2.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %call210.2.i, ptr %arrayidx213.2.i, align 4
  %191 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %policy.i, align 4
  %193 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %start.i, align 4
  %call210.3.i = call i32 @aa_dfa_next(ptr noundef %192, i32 noundef %194, i8 noundef zeroext 5) #16
  %arrayidx213.3.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 5
  %195 = ptrtoint ptr %arrayidx213.3.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %call210.3.i, ptr %arrayidx213.3.i, align 4
  %196 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %policy.i, align 4
  %198 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %start.i, align 4
  %call210.4.i = call i32 @aa_dfa_next(ptr noundef %197, i32 noundef %199, i8 noundef zeroext 6) #16
  %arrayidx213.4.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 6
  %200 = ptrtoint ptr %arrayidx213.4.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %call210.4.i, ptr %arrayidx213.4.i, align 4
  %201 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %policy.i, align 4
  %203 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %start.i, align 4
  %call210.5.i = call i32 @aa_dfa_next(ptr noundef %202, i32 noundef %204, i8 noundef zeroext 7) #16
  %arrayidx213.5.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 7
  %205 = ptrtoint ptr %arrayidx213.5.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %call210.5.i, ptr %arrayidx213.5.i, align 4
  %206 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %policy.i, align 4
  %208 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %start.i, align 4
  %call210.6.i = call i32 @aa_dfa_next(ptr noundef %207, i32 noundef %209, i8 noundef zeroext 8) #16
  %arrayidx213.6.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 8
  %210 = ptrtoint ptr %arrayidx213.6.i to i32
  call void @__asan_store4_noabort(i32 %210)
  store i32 %call210.6.i, ptr %arrayidx213.6.i, align 4
  %211 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %policy.i, align 4
  %213 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %start.i, align 4
  %call210.7.i = call i32 @aa_dfa_next(ptr noundef %212, i32 noundef %214, i8 noundef zeroext 9) #16
  %arrayidx213.7.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 9
  %215 = ptrtoint ptr %arrayidx213.7.i to i32
  call void @__asan_store4_noabort(i32 %215)
  store i32 %call210.7.i, ptr %arrayidx213.7.i, align 4
  %216 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %policy.i, align 4
  %218 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %start.i, align 4
  %call210.8.i = call i32 @aa_dfa_next(ptr noundef %217, i32 noundef %219, i8 noundef zeroext 10) #16
  %arrayidx213.8.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 10
  %220 = ptrtoint ptr %arrayidx213.8.i to i32
  call void @__asan_store4_noabort(i32 %220)
  store i32 %call210.8.i, ptr %arrayidx213.8.i, align 4
  %221 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %policy.i, align 4
  %223 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %start.i, align 4
  %call210.9.i = call i32 @aa_dfa_next(ptr noundef %222, i32 noundef %224, i8 noundef zeroext 11) #16
  %arrayidx213.9.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 11
  %225 = ptrtoint ptr %arrayidx213.9.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store i32 %call210.9.i, ptr %arrayidx213.9.i, align 4
  %226 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %policy.i, align 4
  %228 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %start.i, align 4
  %call210.10.i = call i32 @aa_dfa_next(ptr noundef %227, i32 noundef %229, i8 noundef zeroext 12) #16
  %arrayidx213.10.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 12
  %230 = ptrtoint ptr %arrayidx213.10.i to i32
  call void @__asan_store4_noabort(i32 %230)
  store i32 %call210.10.i, ptr %arrayidx213.10.i, align 4
  %231 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %policy.i, align 4
  %233 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %start.i, align 4
  %call210.11.i = call i32 @aa_dfa_next(ptr noundef %232, i32 noundef %234, i8 noundef zeroext 13) #16
  %arrayidx213.11.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 13
  %235 = ptrtoint ptr %arrayidx213.11.i to i32
  call void @__asan_store4_noabort(i32 %235)
  store i32 %call210.11.i, ptr %arrayidx213.11.i, align 4
  %236 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %policy.i, align 4
  %238 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %start.i, align 4
  %call210.12.i = call i32 @aa_dfa_next(ptr noundef %237, i32 noundef %239, i8 noundef zeroext 14) #16
  %arrayidx213.12.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 14
  %240 = ptrtoint ptr %arrayidx213.12.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 %call210.12.i, ptr %arrayidx213.12.i, align 4
  %241 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %policy.i, align 4
  %243 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %start.i, align 4
  %call210.13.i = call i32 @aa_dfa_next(ptr noundef %242, i32 noundef %244, i8 noundef zeroext 15) #16
  %arrayidx213.13.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 15
  %245 = ptrtoint ptr %arrayidx213.13.i to i32
  call void @__asan_store4_noabort(i32 %245)
  store i32 %call210.13.i, ptr %arrayidx213.13.i, align 4
  %246 = ptrtoint ptr %policy.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %policy.i, align 4
  %248 = ptrtoint ptr %start.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %start.i, align 4
  %call210.14.i = call i32 @aa_dfa_next(ptr noundef %247, i32 noundef %249, i8 noundef zeroext 16) #16
  %arrayidx213.14.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 16
  %250 = ptrtoint ptr %arrayidx213.14.i to i32
  call void @__asan_store4_noabort(i32 %250)
  store i32 %call210.14.i, ptr %arrayidx213.14.i, align 4
  %call214.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 8, ptr noundef null) #16
  br i1 %call214.i, label %if.end201.i.if.end221.i_crit_edge, label %if.end201.i.if.end324.i_crit_edge

if.end201.i.if.end324.i_crit_edge:                ; preds = %if.end201.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end201.i.if.end221.i_crit_edge:                ; preds = %if.end201.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end221.i

if.else217.i:                                     ; preds = %if.end174.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nulldfa to i32))
  %251 = load ptr, ptr @nulldfa, align 4
  %call218.i = call fastcc ptr @aa_get_dfa(ptr noundef %251) #16
  %policy219.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 12
  %252 = ptrtoint ptr %policy219.i to i32
  call void @__asan_store4_noabort(i32 %252)
  store ptr %251, ptr %policy219.i, align 4
  br label %if.end221.i

if.end221.i:                                      ; preds = %if.else217.i, %if.end201.i.if.end221.i_crit_edge
  %call222.i = call fastcc ptr @unpack_dfa(ptr noundef nonnull %e) #16
  %file.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 13
  %dfa223.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 13, i32 1
  %253 = ptrtoint ptr %dfa223.i to i32
  call void @__asan_store4_noabort(i32 %253)
  store ptr %call222.i, ptr %dfa223.i, align 4
  %cmp.i571.i = icmp ugt ptr %call222.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i571.i, label %if.then227.i, label %if.else233.i

if.then227.i:                                     ; preds = %if.end221.i
  call void @__sanitizer_cov_trace_pc() #18
  %254 = ptrtoint ptr %call222.i to i32
  %255 = ptrtoint ptr %dfa223.i to i32
  call void @__asan_store4_noabort(i32 %255)
  store ptr null, ptr %dfa223.i, align 4
  br label %if.end324.i

if.else233.i:                                     ; preds = %if.end221.i
  %tobool236.not.i = icmp eq ptr %call222.i, null
  br i1 %tobool236.not.i, label %if.else245.i, label %if.then237.i

if.then237.i:                                     ; preds = %if.else233.i
  %call240.i = call fastcc zeroext i1 @unpack_u32(ptr noundef nonnull %e, ptr noundef %file.i, ptr noundef nonnull @.str.53) #16
  br i1 %call240.i, label %if.then237.i.if.end270.i_crit_edge, label %if.then241.i

if.then237.i.if.end270.i_crit_edge:               ; preds = %if.then237.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end270.i

if.then241.i:                                     ; preds = %if.then237.i
  call void @__sanitizer_cov_trace_pc() #18
  %256 = ptrtoint ptr %file.i to i32
  call void @__asan_store4_noabort(i32 %256)
  store i32 1, ptr %file.i, align 4
  br label %if.end270.i

if.else245.i:                                     ; preds = %if.else233.i
  %policy246.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 12
  %257 = ptrtoint ptr %policy246.i to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load ptr, ptr %policy246.i, align 4
  %tobool248.not.i = icmp eq ptr %258, null
  br i1 %tobool248.not.i, label %if.else245.i.if.else264.i_crit_edge, label %land.lhs.true.i138

if.else245.i.if.else264.i_crit_edge:              ; preds = %if.else245.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else264.i

land.lhs.true.i138:                               ; preds = %if.else245.i
  %arrayidx251.i = getelementptr %struct.aa_profile, ptr %call16.i, i32 0, i32 12, i32 1, i32 2
  %259 = ptrtoint ptr %arrayidx251.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %arrayidx251.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %260)
  %tobool252.not.i = icmp eq i32 %260, 0
  br i1 %tobool252.not.i, label %land.lhs.true.i138.if.else264.i_crit_edge, label %if.then253.i

land.lhs.true.i138.if.else264.i_crit_edge:        ; preds = %land.lhs.true.i138
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else264.i

if.then253.i:                                     ; preds = %land.lhs.true.i138
  call void @__sanitizer_cov_trace_pc() #18
  %call256.i = call fastcc ptr @aa_get_dfa(ptr noundef nonnull %258) #16
  %261 = ptrtoint ptr %dfa223.i to i32
  call void @__asan_store4_noabort(i32 %261)
  store ptr %258, ptr %dfa223.i, align 4
  %262 = ptrtoint ptr %arrayidx251.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %arrayidx251.i, align 4
  %264 = ptrtoint ptr %file.i to i32
  call void @__asan_store4_noabort(i32 %264)
  store i32 %263, ptr %file.i, align 4
  br label %if.end270.i

if.else264.i:                                     ; preds = %land.lhs.true.i138.if.else264.i_crit_edge, %if.else245.i.if.else264.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nulldfa to i32))
  %265 = load ptr, ptr @nulldfa, align 4
  %call265.i = call fastcc ptr @aa_get_dfa(ptr noundef %265) #16
  %266 = ptrtoint ptr %dfa223.i to i32
  call void @__asan_store4_noabort(i32 %266)
  store ptr %265, ptr %dfa223.i, align 4
  br label %if.end270.i

if.end270.i:                                      ; preds = %if.else264.i, %if.then253.i, %if.then241.i, %if.then237.i.if.end270.i_crit_edge
  %call271.i = call fastcc zeroext i1 @unpack_trans_table(ptr noundef nonnull %e, ptr noundef nonnull %call16.i) #16
  br i1 %call271.i, label %if.end273.i, label %if.end270.i.if.end324.i_crit_edge

if.end270.i.if.end324.i_crit_edge:                ; preds = %if.end270.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end273.i:                                      ; preds = %if.end270.i
  %call274.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 7, ptr noundef nonnull @.str.55) #16
  br i1 %call274.i, label %if.then275.i, label %if.end273.i.if.end314.i_crit_edge

if.end273.i.if.end314.i_crit_edge:                ; preds = %if.end273.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end314.i

if.then275.i:                                     ; preds = %if.end273.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %267 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %267, i32 noundef 3520, i32 noundef 228) #20
  %data277.i = getelementptr inbounds %struct.aa_profile, ptr %call16.i, i32 0, i32 24
  %268 = ptrtoint ptr %data277.i to i32
  call void @__asan_store4_noabort(i32 %268)
  store ptr %call7.i.i.i, ptr %data277.i, align 4
  %tobool279.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool279.not.i, label %if.then275.i.if.end324.i_crit_edge, label %if.end281.i

if.then275.i.if.end324.i_crit_edge:               ; preds = %if.then275.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end281.i:                                      ; preds = %if.then275.i
  %269 = ptrtoint ptr %params.i to i32
  call void @__asan_store2_noabort(i32 %269)
  store i16 3, ptr %params.i, align 4
  %270 = ptrtoint ptr %key_len.i to i32
  call void @__asan_store2_noabort(i32 %270)
  store i16 4, ptr %key_len.i, align 2
  %271 = ptrtoint ptr %key_offset.i to i32
  call void @__asan_store2_noabort(i32 %271)
  store i16 0, ptr %key_offset.i, align 4
  %272 = ptrtoint ptr %head_offset.i to i32
  call void @__asan_store2_noabort(i32 %272)
  store i16 12, ptr %head_offset.i, align 2
  %273 = ptrtoint ptr %hashfn.i to i32
  call void @__asan_store4_noabort(i32 %273)
  store ptr @strhash, ptr %hashfn.i, align 4
  %274 = ptrtoint ptr %obj_cmpfn.i to i32
  call void @__asan_store4_noabort(i32 %274)
  store ptr @datacmp, ptr %obj_cmpfn.i, align 4
  %call283.i = call i32 @rhashtable_init(ptr noundef nonnull %call7.i.i.i, ptr noundef nonnull %params.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call283.i)
  %tobool284.not.i = icmp eq i32 %call283.i, 0
  br i1 %tobool284.not.i, label %while.cond.preheader.i, label %if.end281.i.if.end324.i_crit_edge

if.end281.i.if.end324.i_crit_edge:                ; preds = %if.end281.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

while.cond.preheader.i:                           ; preds = %if.end281.i
  %call287640.i = call fastcc i32 @unpack_strdup(ptr noundef nonnull %e, ptr noundef nonnull %key.i, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call287640.i)
  %tobool288.not641.i = icmp eq i32 %call287640.i, 0
  br i1 %tobool288.not641.i, label %while.cond.preheader.i.while.end.i_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.while.end.i_crit_edge:     ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end.i

while.body.i:                                     ; preds = %if.end307.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %275 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i578.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %275, i32 noundef 3520, i32 noundef 16) #20
  %tobool290.not.i = icmp eq ptr %call7.i.i578.i, null
  %276 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %key.i, align 4
  br i1 %tobool290.not.i, label %if.then291.i, label %if.end292.i

if.then291.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @kfree_sensitive(ptr noundef %277) #16
  br label %if.end324.i

if.end292.i:                                      ; preds = %while.body.i
  %278 = ptrtoint ptr %call7.i.i578.i to i32
  call void @__asan_store4_noabort(i32 %278)
  store ptr %277, ptr %call7.i.i578.i, align 8
  %data294.i = getelementptr inbounds %struct.aa_data, ptr %call7.i.i578.i, i32 0, i32 2
  %call295.i = call fastcc i32 @unpack_blob(ptr noundef nonnull %e, ptr noundef %data294.i, ptr noundef null) #16
  %size.i = getelementptr inbounds %struct.aa_data, ptr %call7.i.i578.i, i32 0, i32 1
  %279 = ptrtoint ptr %size.i to i32
  call void @__asan_store4_noabort(i32 %279)
  store i32 %call295.i, ptr %size.i, align 4
  %280 = ptrtoint ptr %data294.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %data294.i, align 8
  %call.i.i.i = call noalias ptr @kvmalloc_node(i32 noundef %call295.i, i32 noundef 3264, i32 noundef -1) #21
  %tobool.not.i579.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i579.i, label %kvmemdup.exit.i, label %kvmemdup.exit.thread.i

kvmemdup.exit.thread.i:                           ; preds = %if.end292.i
  call void @__sanitizer_cov_trace_pc() #18
  %282 = call ptr @memcpy(ptr %call.i.i.i, ptr %281, i32 %call295.i)
  %283 = ptrtoint ptr %data294.i to i32
  call void @__asan_store4_noabort(i32 %283)
  store ptr %call.i.i.i, ptr %data294.i, align 8
  br label %if.end307.i

kvmemdup.exit.i:                                  ; preds = %if.end292.i
  %284 = ptrtoint ptr %data294.i to i32
  call void @__asan_store4_noabort(i32 %284)
  store ptr null, ptr %data294.i, align 8
  %285 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %286)
  %tobool301.not.not.i = icmp eq i32 %286, 0
  br i1 %tobool301.not.not.i, label %kvmemdup.exit.i.if.end307.i_crit_edge, label %if.then305.i

kvmemdup.exit.i.if.end307.i_crit_edge:            ; preds = %kvmemdup.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end307.i

if.then305.i:                                     ; preds = %kvmemdup.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %287 = ptrtoint ptr %call7.i.i578.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %call7.i.i578.i, align 8
  call void @kfree_sensitive(ptr noundef %288) #16
  call void @kfree_sensitive(ptr noundef nonnull %call7.i.i578.i) #16
  br label %if.end324.i

if.end307.i:                                      ; preds = %kvmemdup.exit.i.if.end307.i_crit_edge, %kvmemdup.exit.thread.i
  %289 = ptrtoint ptr %data277.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %data277.i, align 4
  %head.i = getelementptr inbounds %struct.aa_data, ptr %call7.i.i578.i, i32 0, i32 3
  %p.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3
  %291 = ptrtoint ptr %p.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %.unpack.i = load i32, ptr %p.i, align 4
  %292 = insertvalue [7 x i32] undef, i32 %.unpack.i, 0
  %.elt466.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3, i32 2
  %293 = ptrtoint ptr %.elt466.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %.unpack467.i = load i32, ptr %.elt466.i, align 4
  %294 = insertvalue [7 x i32] %292, i32 %.unpack467.i, 1
  %.elt468.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3, i32 4
  %295 = ptrtoint ptr %.elt468.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %.unpack469.i = load i32, ptr %.elt468.i, align 4
  %296 = insertvalue [7 x i32] %294, i32 %.unpack469.i, 2
  %.elt470.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3, i32 5
  %297 = ptrtoint ptr %.elt470.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %.unpack471.i = load i32, ptr %.elt470.i, align 4
  %298 = insertvalue [7 x i32] %296, i32 %.unpack471.i, 3
  %.elt472.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3, i32 7
  %299 = ptrtoint ptr %.elt472.i to i32
  call void @__asan_load4_noabort(i32 %299)
  %.unpack473.i = load i32, ptr %.elt472.i, align 4
  %300 = insertvalue [7 x i32] %298, i32 %.unpack473.i, 4
  %.elt474.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3, i32 8
  %301 = ptrtoint ptr %.elt474.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %.unpack475.i = load i32, ptr %.elt474.i, align 4
  %302 = insertvalue [7 x i32] %300, i32 %.unpack475.i, 5
  %.elt476.i = getelementptr inbounds %struct.rhashtable, ptr %290, i32 0, i32 3, i32 9
  %303 = ptrtoint ptr %.elt476.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %.unpack477.i = load i32, ptr %.elt476.i, align 4
  %304 = insertvalue [7 x i32] %302, i32 %.unpack477.i, 6
  call fastcc void @rhashtable_insert_fast(ptr noundef %290, ptr noundef %head.i, [7 x i32] %304) #16
  %call287.i = call fastcc i32 @unpack_strdup(ptr noundef nonnull %e, ptr noundef nonnull %key.i, ptr noundef null) #16
  %tobool288.not.i = icmp eq i32 %call287.i, 0
  br i1 %tobool288.not.i, label %if.end307.i.while.end.i_crit_edge, label %if.end307.i.while.body.i_crit_edge

if.end307.i.while.body.i_crit_edge:               ; preds = %if.end307.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

if.end307.i.while.end.i_crit_edge:                ; preds = %if.end307.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end.i

while.end.i:                                      ; preds = %if.end307.i.while.end.i_crit_edge, %while.cond.preheader.i.while.end.i_crit_edge
  %call311.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 8, ptr noundef null) #16
  br i1 %call311.i, label %while.end.i.if.end314.i_crit_edge, label %while.end.i.if.end324.i_crit_edge

while.end.i.if.end324.i_crit_edge:                ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

while.end.i.if.end314.i_crit_edge:                ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end314.i

if.end314.i:                                      ; preds = %while.end.i.if.end314.i_crit_edge, %if.end273.i.if.end314.i_crit_edge
  %call315.i = call fastcc zeroext i1 @unpack_nameX(ptr noundef nonnull %e, i32 noundef 8, ptr noundef null) #16
  br i1 %call315.i, label %if.end314.i.unpack_profile.exit_crit_edge, label %if.end314.i.if.end324.i_crit_edge

if.end314.i.if.end324.i_crit_edge:                ; preds = %if.end314.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.end314.i.unpack_profile.exit_crit_edge:        ; preds = %if.end314.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_profile.exit

if.else320.i:                                     ; preds = %if.then10.i.if.else320.i_crit_edge, %if.end3.i128.if.else320.i_crit_edge
  %info.0625.i = phi ptr [ @.str.29, %if.end3.i128.if.else320.i_crit_edge ], [ @.str.31, %if.then10.i.if.else320.i_crit_edge ]
  %tobool321.not.i = icmp eq ptr %add.ptr.i.i484.i, null
  br i1 %tobool321.not.i, label %if.else320.i.if.then322.i_crit_edge, label %if.else320.i.if.end324.i_crit_edge

if.else320.i.if.end324.i_crit_edge:               ; preds = %if.else320.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end324.i

if.else320.i.if.then322.i_crit_edge:              ; preds = %if.else320.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then322.i

if.then322.sink.split.i:                          ; preds = %if.then3.i.i.if.then322.sink.split.i_crit_edge, %unpack_u16_chunk.exit.i490.i.if.then322.sink.split.i_crit_edge, %if.end.i.i488.i.if.then322.sink.split.i_crit_edge, %unpack_nameX.exit.i.i127.if.then322.sink.split.i_crit_edge, %if.end13.i.i.i.if.then322.sink.split.i_crit_edge, %lor.lhs.false5.i.i.if.then322.sink.split.i_crit_edge, %lor.lhs.false.i.i.if.then322.sink.split.i_crit_edge, %unpack_u16_chunk.exit.i.i.if.then322.sink.split.i_crit_edge, %if.end.i29.i.i.if.then322.sink.split.i_crit_edge, %if.then.i.i.if.then322.sink.split.i_crit_edge, %if.end.i.i.i.if.then322.sink.split.i_crit_edge, %if.end.if.then322.sink.split.i_crit_edge
  %.sink646.i = phi ptr [ %65, %if.then.i.i.if.then322.sink.split.i_crit_edge ], [ %65, %if.end.i29.i.i.if.then322.sink.split.i_crit_edge ], [ %65, %unpack_u16_chunk.exit.i.i.if.then322.sink.split.i_crit_edge ], [ %65, %lor.lhs.false.i.i.if.then322.sink.split.i_crit_edge ], [ %65, %lor.lhs.false5.i.i.if.then322.sink.split.i_crit_edge ], [ %65, %if.end.i.i.i.if.then322.sink.split.i_crit_edge ], [ %65, %if.end.if.then322.sink.split.i_crit_edge ], [ %incdec.ptr.i37.i.i, %if.end13.i.i.i.if.then322.sink.split.i_crit_edge ], [ %incdec.ptr.i37.i.i, %unpack_nameX.exit.i.i127.if.then322.sink.split.i_crit_edge ], [ %incdec.ptr.i37.i.i, %if.end.i.i488.i.if.then322.sink.split.i_crit_edge ], [ %incdec.ptr.i37.i.i, %unpack_u16_chunk.exit.i490.i.if.then322.sink.split.i_crit_edge ], [ %incdec.ptr.i37.i.i, %if.then3.i.i.if.then322.sink.split.i_crit_edge ]
  %305 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %305)
  store ptr %.sink646.i, ptr %1, align 4
  br label %if.then322.i

if.then322.i:                                     ; preds = %if.then322.sink.split.i, %if.else320.i.if.then322.i_crit_edge, %unpack_nameX.exit.i.if.then322.i_crit_edge
  %info.0625633.i = phi ptr [ %info.0625.i, %if.else320.i.if.then322.i_crit_edge ], [ @.str.29, %unpack_nameX.exit.i.if.then322.i_crit_edge ], [ @.str.29, %if.then322.sink.split.i ]
  br label %if.end324.i

if.end324.i:                                      ; preds = %if.then322.i, %if.else320.i.if.end324.i_crit_edge, %if.end314.i.if.end324.i_crit_edge, %while.end.i.if.end324.i_crit_edge, %if.then305.i, %if.then291.i, %if.end281.i.if.end324.i_crit_edge, %if.then275.i.if.end324.i_crit_edge, %if.end270.i.if.end324.i_crit_edge, %if.then227.i, %if.end201.i.if.end324.i_crit_edge, %if.else187.i.if.end324.i_crit_edge, %if.then181.i, %if.end171.i.if.end324.i_crit_edge, %if.end168.i.if.end324.i_crit_edge, %if.end165.i.if.end324.i_crit_edge, %if.end161.i.if.end324.i_crit_edge, %if.end154.i.if.end324.i_crit_edge, %if.then148.i.if.end324.i_crit_edge, %if.end142.i.if.end324.i_crit_edge, %if.end137.i.if.end324.i_crit_edge, %if.end130.i.if.end324.i_crit_edge, %if.end123.i.if.end324.i_crit_edge, %if.then116.i.if.end324.i_crit_edge, %if.end109.i.if.end324.i_crit_edge, %if.end103.i.if.end324.i_crit_edge, %if.end96.i.if.end324.i_crit_edge, %if.end93.i.if.end324.i_crit_edge, %if.end80.i.if.end324.i_crit_edge, %if.end74.i.if.end324.i_crit_edge, %if.else.i.if.end324.i_crit_edge, %if.end47.i.if.end324.i_crit_edge, %if.end41.i.if.end324.i_crit_edge, %unpack_nameX.exit569.i.if.end324.i_crit_edge, %unpack_nameX.exit569.thread.i, %unpack_u32.exit.thread.i, %if.then26.i
  %ns_name.3 = phi ptr [ null, %if.then322.i ], [ null, %if.else320.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.then26.i ], [ %ns_name.0, %unpack_nameX.exit569.thread.i ], [ %ns_name.0, %if.then181.i ], [ %ns_name.0, %if.else187.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.then227.i ], [ %ns_name.0, %if.then275.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end314.i.if.end324.i_crit_edge ], [ %ns_name.0, %while.end.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.then291.i ], [ %ns_name.0, %if.then305.i ], [ %ns_name.0, %if.end281.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end270.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end201.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end171.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end168.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end165.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end161.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end154.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.then148.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end142.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end137.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end130.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end123.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.then116.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end109.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end103.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end96.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end93.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end80.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end74.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.else.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end47.i.if.end324.i_crit_edge ], [ %ns_name.0, %if.end41.i.if.end324.i_crit_edge ], [ %ns_name.0, %unpack_nameX.exit569.i.if.end324.i_crit_edge ], [ %ns_name.0, %unpack_u32.exit.thread.i ]
  %error.0613.i = phi i32 [ -71, %if.then322.i ], [ -71, %if.else320.i.if.end324.i_crit_edge ], [ %112, %if.then26.i ], [ -71, %unpack_nameX.exit569.thread.i ], [ %173, %if.then181.i ], [ -71, %if.else187.i.if.end324.i_crit_edge ], [ %254, %if.then227.i ], [ -71, %if.then275.i.if.end324.i_crit_edge ], [ -71, %if.end314.i.if.end324.i_crit_edge ], [ -71, %while.end.i.if.end324.i_crit_edge ], [ -71, %if.then291.i ], [ -71, %if.then305.i ], [ -71, %if.end281.i.if.end324.i_crit_edge ], [ -71, %if.end270.i.if.end324.i_crit_edge ], [ -71, %if.end201.i.if.end324.i_crit_edge ], [ -71, %if.end171.i.if.end324.i_crit_edge ], [ -71, %if.end168.i.if.end324.i_crit_edge ], [ -71, %if.end165.i.if.end324.i_crit_edge ], [ -71, %if.end161.i.if.end324.i_crit_edge ], [ -71, %if.end154.i.if.end324.i_crit_edge ], [ -71, %if.then148.i.if.end324.i_crit_edge ], [ -71, %if.end142.i.if.end324.i_crit_edge ], [ -71, %if.end137.i.if.end324.i_crit_edge ], [ -71, %if.end130.i.if.end324.i_crit_edge ], [ -71, %if.end123.i.if.end324.i_crit_edge ], [ -71, %if.then116.i.if.end324.i_crit_edge ], [ -71, %if.end109.i.if.end324.i_crit_edge ], [ -71, %if.end103.i.if.end324.i_crit_edge ], [ -71, %if.end96.i.if.end324.i_crit_edge ], [ -71, %if.end93.i.if.end324.i_crit_edge ], [ -71, %if.end80.i.if.end324.i_crit_edge ], [ -71, %if.end74.i.if.end324.i_crit_edge ], [ -71, %if.else.i.if.end324.i_crit_edge ], [ -71, %if.end47.i.if.end324.i_crit_edge ], [ -71, %if.end41.i.if.end324.i_crit_edge ], [ -71, %unpack_nameX.exit569.i.if.end324.i_crit_edge ], [ -71, %unpack_u32.exit.thread.i ]
  %info.0611.i = phi ptr [ %info.0625633.i, %if.then322.i ], [ %info.0625.i, %if.else320.i.if.end324.i_crit_edge ], [ @.str.34, %if.then26.i ], [ @.str.38, %unpack_nameX.exit569.thread.i ], [ @.str.50, %if.then181.i ], [ @.str.50, %if.else187.i.if.end324.i_crit_edge ], [ @.str.52, %if.then227.i ], [ @.str.31, %if.then275.i.if.end324.i_crit_edge ], [ @.str.58, %if.end314.i.if.end324.i_crit_edge ], [ @.str.57, %while.end.i.if.end324.i_crit_edge ], [ @.str.31, %if.then291.i ], [ @.str.31, %if.then305.i ], [ @.str.56, %if.end281.i.if.end324.i_crit_edge ], [ @.str.54, %if.end270.i.if.end324.i_crit_edge ], [ @.str.50, %if.end201.i.if.end324.i_crit_edge ], [ @.str.48, %if.end171.i.if.end324.i_crit_edge ], [ @.str.47, %if.end168.i.if.end324.i_crit_edge ], [ @.str.46, %if.end165.i.if.end324.i_crit_edge ], [ @.str.44, %if.end161.i.if.end324.i_crit_edge ], [ @.str.44, %if.end154.i.if.end324.i_crit_edge ], [ @.str.44, %if.then148.i.if.end324.i_crit_edge ], [ @.str.42, %if.end142.i.if.end324.i_crit_edge ], [ @.str.42, %if.end137.i.if.end324.i_crit_edge ], [ @.str.42, %if.end130.i.if.end324.i_crit_edge ], [ @.str.42, %if.end123.i.if.end324.i_crit_edge ], [ @.str.42, %if.then116.i.if.end324.i_crit_edge ], [ @.str.41, %if.end109.i.if.end324.i_crit_edge ], [ @.str.41, %if.end103.i.if.end324.i_crit_edge ], [ @.str.41, %if.end96.i.if.end324.i_crit_edge ], [ @.str.41, %if.end93.i.if.end324.i_crit_edge ], [ @.str.39, %if.end80.i.if.end324.i_crit_edge ], [ @.str.39, %if.end74.i.if.end324.i_crit_edge ], [ @.str.39, %if.else.i.if.end324.i_crit_edge ], [ @.str.39, %if.end47.i.if.end324.i_crit_edge ], [ @.str.39, %if.end41.i.if.end324.i_crit_edge ], [ @.str.38, %unpack_nameX.exit569.i.if.end324.i_crit_edge ], [ @.str.35, %unpack_u32.exit.thread.i ]
  %profile.0609.i = phi ptr [ null, %if.then322.i ], [ null, %if.else320.i.if.end324.i_crit_edge ], [ %call16.i, %if.then26.i ], [ %call16.i, %unpack_nameX.exit569.thread.i ], [ %call16.i, %if.then181.i ], [ %call16.i, %if.else187.i.if.end324.i_crit_edge ], [ %call16.i, %if.then227.i ], [ %call16.i, %if.then275.i.if.end324.i_crit_edge ], [ %call16.i, %if.end314.i.if.end324.i_crit_edge ], [ %call16.i, %while.end.i.if.end324.i_crit_edge ], [ %call16.i, %if.then291.i ], [ %call16.i, %if.then305.i ], [ %call16.i, %if.end281.i.if.end324.i_crit_edge ], [ %call16.i, %if.end270.i.if.end324.i_crit_edge ], [ %call16.i, %if.end201.i.if.end324.i_crit_edge ], [ %call16.i, %if.end171.i.if.end324.i_crit_edge ], [ %call16.i, %if.end168.i.if.end324.i_crit_edge ], [ %call16.i, %if.end165.i.if.end324.i_crit_edge ], [ %call16.i, %if.end161.i.if.end324.i_crit_edge ], [ %call16.i, %if.end154.i.if.end324.i_crit_edge ], [ %call16.i, %if.then148.i.if.end324.i_crit_edge ], [ %call16.i, %if.end142.i.if.end324.i_crit_edge ], [ %call16.i, %if.end137.i.if.end324.i_crit_edge ], [ %call16.i, %if.end130.i.if.end324.i_crit_edge ], [ %call16.i, %if.end123.i.if.end324.i_crit_edge ], [ %call16.i, %if.then116.i.if.end324.i_crit_edge ], [ %call16.i, %if.end109.i.if.end324.i_crit_edge ], [ %call16.i, %if.end103.i.if.end324.i_crit_edge ], [ %call16.i, %if.end96.i.if.end324.i_crit_edge ], [ %call16.i, %if.end93.i.if.end324.i_crit_edge ], [ %call16.i, %if.end80.i.if.end324.i_crit_edge ], [ %call16.i, %if.end74.i.if.end324.i_crit_edge ], [ %call16.i, %if.else.i.if.end324.i_crit_edge ], [ %call16.i, %if.end47.i.if.end324.i_crit_edge ], [ %call16.i, %if.end41.i.if.end324.i_crit_edge ], [ %call16.i, %unpack_nameX.exit569.i.if.end324.i_crit_edge ], [ %call16.i, %unpack_u32.exit.thread.i ]
  %name.3.i = phi ptr [ @.str.59, %if.then322.i ], [ %add.ptr.i.i484.i, %if.else320.i.if.end324.i_crit_edge ], [ null, %if.then26.i ], [ null, %unpack_nameX.exit569.thread.i ], [ null, %if.then181.i ], [ null, %if.else187.i.if.end324.i_crit_edge ], [ null, %if.then227.i ], [ null, %if.then275.i.if.end324.i_crit_edge ], [ null, %if.end314.i.if.end324.i_crit_edge ], [ null, %while.end.i.if.end324.i_crit_edge ], [ null, %if.then291.i ], [ null, %if.then305.i ], [ null, %if.end281.i.if.end324.i_crit_edge ], [ null, %if.end270.i.if.end324.i_crit_edge ], [ null, %if.end201.i.if.end324.i_crit_edge ], [ null, %if.end171.i.if.end324.i_crit_edge ], [ null, %if.end168.i.if.end324.i_crit_edge ], [ null, %if.end165.i.if.end324.i_crit_edge ], [ null, %if.end161.i.if.end324.i_crit_edge ], [ null, %if.end154.i.if.end324.i_crit_edge ], [ null, %if.then148.i.if.end324.i_crit_edge ], [ null, %if.end142.i.if.end324.i_crit_edge ], [ null, %if.end137.i.if.end324.i_crit_edge ], [ null, %if.end130.i.if.end324.i_crit_edge ], [ null, %if.end123.i.if.end324.i_crit_edge ], [ null, %if.then116.i.if.end324.i_crit_edge ], [ null, %if.end109.i.if.end324.i_crit_edge ], [ null, %if.end103.i.if.end324.i_crit_edge ], [ null, %if.end96.i.if.end324.i_crit_edge ], [ null, %if.end93.i.if.end324.i_crit_edge ], [ null, %if.end80.i.if.end324.i_crit_edge ], [ null, %if.end74.i.if.end324.i_crit_edge ], [ null, %if.else.i.if.end324.i_crit_edge ], [ null, %if.end47.i.if.end324.i_crit_edge ], [ null, %if.end41.i.if.end324.i_crit_edge ], [ null, %unpack_nameX.exit569.i.if.end324.i_crit_edge ], [ null, %unpack_u32.exit.thread.i ]
  call fastcc void @audit_iface(ptr noundef %profile.0609.i, ptr noundef %name.3.i, ptr noundef nonnull %info.0611.i, ptr noundef nonnull %e, i32 noundef %error.0613.i) #16
  call void @aa_free_profile(ptr noundef %profile.0609.i) #16
  %306 = inttoptr i32 %error.0613.i to ptr
  br label %unpack_profile.exit

unpack_profile.exit:                              ; preds = %if.end324.i, %if.end314.i.unpack_profile.exit_crit_edge
  %ns_name.4 = phi ptr [ %ns_name.3, %if.end324.i ], [ %ns_name.0, %if.end314.i.unpack_profile.exit_crit_edge ]
  %retval.0.i139 = phi ptr [ %306, %if.end324.i ], [ %call16.i, %if.end314.i.unpack_profile.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmpcap.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %key.i) #16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %params.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ns_len.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmpns.i) #16
  %cmp.i140 = icmp ugt ptr %retval.0.i139, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i140, label %unpack_profile.exit.if.then12_crit_edge, label %if.end14

unpack_profile.exit.if.then12_crit_edge:          ; preds = %unpack_profile.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then12

if.then12:                                        ; preds = %unpack_profile.exit.if.then12_crit_edge, %unpack_profile.exit.thread
  %retval.0.i139227 = phi ptr [ inttoptr (i32 -12 to ptr), %unpack_profile.exit.thread ], [ %retval.0.i139, %unpack_profile.exit.if.then12_crit_edge ]
  %307 = ptrtoint ptr %retval.0.i139227 to i32
  br label %fail

if.end14:                                         ; preds = %unpack_profile.exit
  %dfa.i = getelementptr inbounds %struct.aa_profile, ptr %retval.0.i139, i32 0, i32 13, i32 1
  %308 = ptrtoint ptr %dfa.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %dfa.i, align 4
  %tobool.not.i141 = icmp eq ptr %309, null
  br i1 %tobool.not.i141, label %if.end14.if.end18_crit_edge, label %land.lhs.true.i142

if.end14.if.end18_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

land.lhs.true.i142:                               ; preds = %if.end14
  %trans.i = getelementptr inbounds %struct.aa_profile, ptr %retval.0.i139, i32 0, i32 13, i32 2
  %310 = ptrtoint ptr %trans.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %trans.i, align 4
  %tables.i.i = getelementptr inbounds %struct.aa_dfa, ptr %309, i32 0, i32 3
  %312 = ptrtoint ptr %tables.i.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %tables.i.i, align 4
  %td_lolen.i.i = getelementptr inbounds %struct.table_header, ptr %313, i32 0, i32 3
  %314 = ptrtoint ptr %td_lolen.i.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %td_lolen.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %315)
  %cmp42.not.i.i = icmp eq i32 %315, 0
  br i1 %cmp42.not.i.i, label %land.lhs.true.i142.if.end18_crit_edge, label %for.body.lr.ph.i.i

land.lhs.true.i142.if.end18_crit_edge:            ; preds = %land.lhs.true.i142
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

for.body.lr.ph.i.i:                               ; preds = %land.lhs.true.i142
  %td_data.i.i = getelementptr inbounds %struct.table_header, ptr %313, i32 0, i32 4
  br label %for.body.i.i

for.cond.i.i:                                     ; preds = %dfa_map_xindex.exit36.i.i.for.cond.i.i_crit_edge, %if.end.i.i146.for.cond.i.i_crit_edge
  %inc.i.i = add nuw i32 %i.043.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i, i32 %315)
  %cmp.i.i143 = icmp ult i32 %inc.i.i, %315
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %315
  br i1 %exitcond.not.i.i, label %for.cond.i.i.verify_dfa_xindex.exit.i_crit_edge, label %for.cond.i.i.for.body.i.i_crit_edge

for.cond.i.i.for.body.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.cond.i.i.verify_dfa_xindex.exit.i_crit_edge:  ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %verify_dfa_xindex.exit.i

for.body.i.i:                                     ; preds = %for.cond.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %cmp44.i.i = phi i1 [ true, %for.body.lr.ph.i.i ], [ %cmp.i.i143, %for.cond.i.i.for.body.i.i_crit_edge ]
  %i.043.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.cond.i.i.for.body.i.i_crit_edge ]
  %arrayidx3.i.i = getelementptr i32, ptr %td_data.i.i, i32 %i.043.i.i
  %316 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %arrayidx3.i.i, align 4
  %318 = and i32 %317, 12288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %318)
  %switch61.i.i = icmp eq i32 %318, 0
  br i1 %switch61.i.i, label %for.body.i.i.if.end.i.i146_crit_edge, label %dfa_map_xindex.exit.i.i

for.body.i.i.if.end.i.i146_crit_edge:             ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i146

dfa_map_xindex.exit.i.i:                          ; preds = %for.body.i.i
  %conv.i.i = lshr i32 %317, 10
  %319 = and i32 %conv.i.i, 15
  %sub.i.i.i144 = add nuw nsw i32 %319, 65532
  %conv4.i.i = and i32 %sub.i.i.i144, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv4.i.i)
  %cmp.i.i.i145 = icmp ne i32 %conv4.i.i, 0
  %and1.i.i.i = and i32 %sub.i.i.i144, 1023
  call void @__sanitizer_cov_trace_cmp4(i32 %and1.i.i.i, i32 %311)
  %cmp2.not.i.i.i = icmp slt i32 %and1.i.i.i, %311
  %or.cond.i.i.i = or i1 %cmp.i.i.i145, %cmp2.not.i.i.i
  br i1 %or.cond.i.i.i, label %dfa_map_xindex.exit.i.i.if.end.i.i146_crit_edge, label %dfa_map_xindex.exit.i.i.verify_dfa_xindex.exit.i_crit_edge

dfa_map_xindex.exit.i.i.verify_dfa_xindex.exit.i_crit_edge: ; preds = %dfa_map_xindex.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %verify_dfa_xindex.exit.i

dfa_map_xindex.exit.i.i.if.end.i.i146_crit_edge:  ; preds = %dfa_map_xindex.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i146

if.end.i.i146:                                    ; preds = %dfa_map_xindex.exit.i.i.if.end.i.i146_crit_edge, %for.body.i.i.if.end.i.i146_crit_edge
  %320 = and i32 %317, 201326592
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %320)
  %switch.i.i = icmp eq i32 %320, 0
  br i1 %switch.i.i, label %if.end.i.i146.for.cond.i.i_crit_edge, label %dfa_map_xindex.exit36.i.i

if.end.i.i146.for.cond.i.i_crit_edge:             ; preds = %if.end.i.i146
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

dfa_map_xindex.exit36.i.i:                        ; preds = %if.end.i.i146
  %sum.shift.i.i = lshr i32 %317, 24
  %321 = and i32 %sum.shift.i.i, 15
  %sub.i32.i.i = add nuw nsw i32 %321, 65532
  %or51.i33.i.i = and i32 %sub.i32.i.i, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or51.i33.i.i)
  %cmp.i38.i.i = icmp ne i32 %or51.i33.i.i, 0
  %and1.i39.i.i = and i32 %sub.i32.i.i, 1023
  call void @__sanitizer_cov_trace_cmp4(i32 %and1.i39.i.i, i32 %311)
  %cmp2.not.i40.i.i = icmp slt i32 %and1.i39.i.i, %311
  %or.cond.i41.i.i = or i1 %cmp.i38.i.i, %cmp2.not.i40.i.i
  br i1 %or.cond.i41.i.i, label %dfa_map_xindex.exit36.i.i.for.cond.i.i_crit_edge, label %dfa_map_xindex.exit36.i.i.verify_dfa_xindex.exit.i_crit_edge

dfa_map_xindex.exit36.i.i.verify_dfa_xindex.exit.i_crit_edge: ; preds = %dfa_map_xindex.exit36.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %verify_dfa_xindex.exit.i

dfa_map_xindex.exit36.i.i.for.cond.i.i_crit_edge: ; preds = %dfa_map_xindex.exit36.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

verify_dfa_xindex.exit.i:                         ; preds = %dfa_map_xindex.exit36.i.i.verify_dfa_xindex.exit.i_crit_edge, %dfa_map_xindex.exit.i.i.verify_dfa_xindex.exit.i_crit_edge, %for.cond.i.i.verify_dfa_xindex.exit.i_crit_edge
  %cmp.lcssa.i.i = phi i1 [ %cmp.i.i143, %for.cond.i.i.verify_dfa_xindex.exit.i_crit_edge ], [ %cmp44.i.i, %dfa_map_xindex.exit36.i.i.verify_dfa_xindex.exit.i_crit_edge ], [ %cmp44.i.i, %dfa_map_xindex.exit.i.i.verify_dfa_xindex.exit.i_crit_edge ]
  br i1 %cmp.lcssa.i.i, label %verify_profile.exit, label %verify_dfa_xindex.exit.i.if.end18_crit_edge

verify_dfa_xindex.exit.i.if.end18_crit_edge:      ; preds = %verify_dfa_xindex.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

verify_profile.exit:                              ; preds = %verify_dfa_xindex.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @audit_iface(ptr noundef %retval.0.i139, ptr noundef null, ptr noundef nonnull @.str.73, ptr noundef null, i32 noundef -71) #16
  br label %fail_profile

if.end18:                                         ; preds = %verify_dfa_xindex.exit.i.if.end18_crit_edge, %land.lhs.true.i142.if.end18_crit_edge, %if.end14.if.end18_crit_edge
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @aa_g_hash_policy to i32))
  %322 = load i8, ptr @aa_g_hash_policy, align 1, !range !311
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %322)
  %tobool19.not = icmp eq i8 %322, 0
  br i1 %tobool19.not, label %if.end18.if.end27_crit_edge, label %if.end24

if.end18.if.end27_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.end24:                                         ; preds = %if.end18
  %323 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %2, align 4
  %325 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %1, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %326 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %65 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call23 = call i32 @aa_calc_profile_hash(ptr noundef %retval.0.i139, i32 noundef %324, ptr noundef %65, i32 noundef %sub.ptr.sub) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool25.not = icmp eq i32 %call23, 0
  br i1 %tobool25.not, label %if.end24.if.end27_crit_edge, label %if.end24.fail_profile_crit_edge

if.end24.fail_profile_crit_edge:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail_profile

if.end24.if.end27_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.end27:                                         ; preds = %if.end24.if.end27_crit_edge, %if.end18.if.end27_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %327 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i148 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %327, i32 noundef 3520, i32 noundef 24) #20
  %tobool.not.i149 = icmp eq ptr %call7.i.i.i148, null
  br i1 %tobool.not.i149, label %if.end27.fail_profile_crit_edge, label %if.end31

if.end27.fail_profile_crit_edge:                  ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail_profile

if.end31:                                         ; preds = %if.end27
  %328 = ptrtoint ptr %call7.i.i.i148 to i32
  call void @__asan_store4_noabort(i32 %328)
  store volatile ptr %call7.i.i.i148, ptr %call7.i.i.i148, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i.i148, i32 0, i32 1
  %329 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %329)
  store ptr %call7.i.i.i148, ptr %prev.i.i, align 4
  %new = getelementptr inbounds %struct.aa_load_ent, ptr %call7.i.i.i148, i32 0, i32 1
  %330 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %330)
  store ptr %retval.0.i139, ptr %new, align 8
  %ns_name32 = getelementptr inbounds %struct.aa_load_ent, ptr %call7.i.i.i148, i32 0, i32 4
  %331 = ptrtoint ptr %ns_name32 to i32
  call void @__asan_store4_noabort(i32 %331)
  store ptr %ns_name.4, ptr %ns_name32, align 4
  %332 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %prev.i, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i.i148, ptr noundef %333, ptr noundef %lh) #16
  br i1 %call.i.i, label %if.end.i.i152, label %if.end31.cleanup_crit_edge

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i152:                                    ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  %334 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %334)
  store ptr %call7.i.i.i148, ptr %prev.i, align 4
  %335 = ptrtoint ptr %call7.i.i.i148 to i32
  call void @__asan_store4_noabort(i32 %335)
  store ptr %lh, ptr %call7.i.i.i148, align 8
  %336 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %336)
  store ptr %333, ptr %prev.i.i, align 4
  %337 = ptrtoint ptr %333 to i32
  call void @__asan_store4_noabort(i32 %337)
  store volatile ptr %call7.i.i.i148, ptr %333, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i152, %if.end31.cleanup_crit_edge
  %338 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %1, align 4
  %340 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load ptr, ptr %0, align 4
  %cmp = icmp ult ptr %339, %341
  br i1 %cmp, label %cleanup.if.end.i.i.i.i_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

cleanup.if.end.i.i.i.i_crit_edge:                 ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i.i

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %entry.while.end_crit_edge
  %342 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %2, align 4
  %and = and i32 %343, 1023
  %abi = getelementptr inbounds %struct.aa_loaddata, ptr %udata, i32 0, i32 9
  %344 = ptrtoint ptr %abi to i32
  call void @__asan_store4_noabort(i32 %344)
  store i32 %and, ptr %abi, align 4
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @aa_g_hash_policy to i32))
  %345 = load i8, ptr @aa_g_hash_policy, align 1, !range !311
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %345)
  %tobool35.not = icmp eq i8 %345, 0
  br i1 %tobool35.not, label %while.end.if.end47_crit_edge, label %if.then36

while.end.if.end47_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

if.then36:                                        ; preds = %while.end
  %346 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %data, align 4
  %348 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %size, align 4
  %call39 = call ptr @aa_calc_hash(ptr noundef %347, i32 noundef %349) #16
  %hash = getelementptr inbounds %struct.aa_loaddata, ptr %udata, i32 0, i32 10
  %350 = ptrtoint ptr %hash to i32
  call void @__asan_store4_noabort(i32 %350)
  store ptr %call39, ptr %hash, align 4
  %cmp.i153 = icmp ugt ptr %call39, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i153, label %if.then42, label %if.then36.if.end47_crit_edge

if.then36.if.end47_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

if.then42:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #18
  %351 = ptrtoint ptr %call39 to i32
  %352 = ptrtoint ptr %hash to i32
  call void @__asan_store4_noabort(i32 %352)
  store ptr null, ptr %hash, align 4
  br label %fail

if.end47:                                         ; preds = %if.then36.if.end47_crit_edge, %while.end.if.end47_crit_edge
  %compressed_size.i = getelementptr inbounds %struct.aa_loaddata, ptr %udata, i32 0, i32 7
  %353 = ptrtoint ptr %compressed_size.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load i32, ptr %compressed_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %354)
  %cmp.not.i = icmp eq i32 %354, 0
  br i1 %cmp.not.i, label %if.end47.if.end.i154_crit_edge, label %do.end.i, !prof !310

if.end47.if.end.i154_crit_edge:                   ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i154

do.end.i:                                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1131, i32 noundef 9, ptr noundef nonnull @.str.74, ptr noundef nonnull @__func__.compress_loaddata) #16
  br label %if.end.i154

if.end.i154:                                      ; preds = %do.end.i, %if.end47.if.end.i154_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @aa_g_rawdata_compression_level to i32))
  %355 = load i32, ptr @aa_g_rawdata_compression_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %355)
  %cmp22.not.i = icmp eq i32 %355, 0
  br i1 %cmp22.not.i, label %if.else.i161, label %if.then23.i

if.then23.i:                                      ; preds = %if.end.i154
  %356 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load ptr, ptr %data, align 4
  %358 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %size, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %strm.i.i) #16
  %add.i.i.i = add i32 %359, 7
  %shr.i.i.i = lshr i32 %add.i.i.i, 3
  %add2.i.i.i = add i32 %359, 63
  %shr3.i.i.i = lshr i32 %add2.i.i.i, 6
  %add1.i.i.i = add i32 %359, 11
  %add4.i.i.i = add i32 %add1.i.i.i, %shr.i.i.i
  %add5.i.i.i = add i32 %add4.i.i.i, %shr3.i.i.i
  %360 = call ptr @memset(ptr %strm.i.i, i32 0, i32 48)
  call void @__sanitizer_cov_trace_cmp4(i32 %add5.i.i.i, i32 %359)
  %cmp.i.i156 = icmp ult i32 %add5.i.i.i, %359
  br i1 %cmp.i.i156, label %if.then23.i.deflate_compress.exit.thread.i_crit_edge, label %if.end.i.i158

if.then23.i.deflate_compress.exit.thread.i_crit_edge: ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %deflate_compress.exit.thread.i

if.end.i.i158:                                    ; preds = %if.then23.i
  %call1.i.i = call i32 @zlib_deflate_workspacesize(i32 noundef 15, i32 noundef 8) #16
  %call.i.i.i.i = call noalias ptr @kvmalloc_node(i32 noundef %call1.i.i, i32 noundef 3520, i32 noundef -1) #21
  %workspace.i.i = getelementptr inbounds %struct.z_stream_s, ptr %strm.i.i, i32 0, i32 8
  %361 = ptrtoint ptr %workspace.i.i to i32
  call void @__asan_store4_noabort(i32 %361)
  store ptr %call.i.i.i.i, ptr %workspace.i.i, align 4
  %tobool.not.i.i157 = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.not.i.i157, label %if.end.i.i158.deflate_compress.exit.thread.i_crit_edge, label %if.end5.i.i

if.end.i.i158.deflate_compress.exit.thread.i_crit_edge: ; preds = %if.end.i.i158
  call void @__sanitizer_cov_trace_pc() #18
  br label %deflate_compress.exit.thread.i

if.end5.i.i:                                      ; preds = %if.end.i.i158
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @aa_g_rawdata_compression_level to i32))
  %362 = load i32, ptr @aa_g_rawdata_compression_level, align 4
  %call6.i.i159 = call i32 @zlib_deflateInit2(ptr noundef nonnull %strm.i.i, i32 noundef %362, i32 noundef 8, i32 noundef 15, i32 noundef 8, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i159)
  %cmp7.not.i.i = icmp eq i32 %call6.i.i159, 0
  br i1 %cmp7.not.i.i, label %if.end9.i.i, label %deflate_compress.exit.thread47.i

deflate_compress.exit.thread47.i:                 ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %363 = ptrtoint ptr %workspace.i.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load ptr, ptr %workspace.i.i, align 4
  call void @kvfree(ptr noundef %364) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %strm.i.i) #16
  br label %fail

if.end9.i.i:                                      ; preds = %if.end5.i.i
  %call.i.i53.i.i = call noalias ptr @kvmalloc_node(i32 noundef %add5.i.i.i, i32 noundef 3520, i32 noundef -1) #21
  %tobool11.not.i.i = icmp eq ptr %call.i.i53.i.i, null
  br i1 %tobool11.not.i.i, label %if.end9.i.i.deflate_compress.exit.i_crit_edge, label %if.end13.i.i

if.end9.i.i.deflate_compress.exit.i_crit_edge:    ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %deflate_compress.exit.i

if.end13.i.i:                                     ; preds = %if.end9.i.i
  %365 = ptrtoint ptr %strm.i.i to i32
  call void @__asan_store4_noabort(i32 %365)
  store ptr %357, ptr %strm.i.i, align 4
  %avail_in.i.i = getelementptr inbounds %struct.z_stream_s, ptr %strm.i.i, i32 0, i32 1
  %366 = ptrtoint ptr %avail_in.i.i to i32
  call void @__asan_store4_noabort(i32 %366)
  store i32 %359, ptr %avail_in.i.i, align 4
  %next_out.i.i = getelementptr inbounds %struct.z_stream_s, ptr %strm.i.i, i32 0, i32 3
  %367 = ptrtoint ptr %next_out.i.i to i32
  call void @__asan_store4_noabort(i32 %367)
  store ptr %call.i.i53.i.i, ptr %next_out.i.i, align 4
  %avail_out.i.i = getelementptr inbounds %struct.z_stream_s, ptr %strm.i.i, i32 0, i32 4
  %368 = ptrtoint ptr %avail_out.i.i to i32
  call void @__asan_store4_noabort(i32 %368)
  store i32 %add5.i.i.i, ptr %avail_out.i.i, align 4
  %call14.i.i = call i32 @zlib_deflate(ptr noundef nonnull %strm.i.i, i32 noundef 5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call14.i.i)
  %cmp15.not.i.i = icmp eq i32 %call14.i.i, 1
  br i1 %cmp15.not.i.i, label %if.end17.i.i, label %if.end13.i.i.fail_deflate.i.i_crit_edge

if.end13.i.i.fail_deflate.i.i_crit_edge:          ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail_deflate.i.i

if.end17.i.i:                                     ; preds = %if.end13.i.i
  %call18.i.i = call zeroext i1 @is_vmalloc_addr(ptr noundef nonnull %call.i.i53.i.i) #16
  %total_out.i.i = getelementptr inbounds %struct.z_stream_s, ptr %strm.i.i, i32 0, i32 5
  %369 = ptrtoint ptr %total_out.i.i to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %total_out.i.i, align 4
  br i1 %call18.i.i, label %if.then19.i.i, label %if.end27.i.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  %call.i.i54.i.i = call noalias ptr @kvmalloc_node(i32 noundef %370, i32 noundef 3520, i32 noundef -1) #21
  %tobool21.not.i.i = icmp eq ptr %call.i.i54.i.i, null
  br i1 %tobool21.not.i.i, label %if.then19.i.i.fail_deflate.i.i_crit_edge, label %if.end27.thread57.i.i

if.then19.i.i.fail_deflate.i.i_crit_edge:         ; preds = %if.then19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail_deflate.i.i

if.end27.thread57.i.i:                            ; preds = %if.then19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %371 = ptrtoint ptr %total_out.i.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load i32, ptr %total_out.i.i, align 4
  %373 = call ptr @memcpy(ptr %call.i.i54.i.i, ptr %call.i.i53.i.i, i32 %372)
  call void @kvfree(ptr noundef nonnull %call.i.i53.i.i) #16
  br label %if.end30.i.i

if.end27.i.i:                                     ; preds = %if.end17.i.i
  %call26.i.i = call noalias ptr @krealloc(ptr noundef nonnull %call.i.i53.i.i, i32 noundef %370, i32 noundef 3264) #23
  %tobool28.not.i.i = icmp eq ptr %call26.i.i, null
  br i1 %tobool28.not.i.i, label %if.end27.i.i.fail_deflate.i.i_crit_edge, label %if.end27.i.i.if.end30.i.i_crit_edge

if.end27.i.i.if.end30.i.i_crit_edge:              ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end30.i.i

if.end27.i.i.fail_deflate.i.i_crit_edge:          ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail_deflate.i.i

if.end30.i.i:                                     ; preds = %if.end27.i.i.if.end30.i.i_crit_edge, %if.end27.thread57.i.i
  %dstbuf.060.i.i = phi ptr [ %call.i.i54.i.i, %if.end27.thread57.i.i ], [ %call26.i.i, %if.end27.i.i.if.end30.i.i_crit_edge ]
  %374 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %374)
  store ptr %dstbuf.060.i.i, ptr %data, align 4
  %375 = ptrtoint ptr %total_out.i.i to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load i32, ptr %total_out.i.i, align 4
  %377 = ptrtoint ptr %compressed_size.i to i32
  call void @__asan_store4_noabort(i32 %377)
  store i32 %376, ptr %compressed_size.i, align 4
  br label %deflate_compress.exit.i

fail_deflate.i.i:                                 ; preds = %if.end27.i.i.fail_deflate.i.i_crit_edge, %if.then19.i.i.fail_deflate.i.i_crit_edge, %if.end13.i.i.fail_deflate.i.i_crit_edge
  %error.2.i.i = phi i32 [ -22, %if.end13.i.i.fail_deflate.i.i_crit_edge ], [ -12, %if.end27.i.i.fail_deflate.i.i_crit_edge ], [ -12, %if.then19.i.i.fail_deflate.i.i_crit_edge ]
  call void @kvfree(ptr noundef nonnull %call.i.i53.i.i) #16
  br label %deflate_compress.exit.i

deflate_compress.exit.thread.i:                   ; preds = %if.end.i.i158.deflate_compress.exit.thread.i_crit_edge, %if.then23.i.deflate_compress.exit.thread.i_crit_edge
  %retval.0.i.ph.i = phi i32 [ -12, %if.end.i.i158.deflate_compress.exit.thread.i_crit_edge ], [ -27, %if.then23.i.deflate_compress.exit.thread.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %strm.i.i) #16
  br label %fail

deflate_compress.exit.i:                          ; preds = %fail_deflate.i.i, %if.end30.i.i, %if.end9.i.i.deflate_compress.exit.i_crit_edge
  %error.0.i.i = phi i32 [ %error.2.i.i, %fail_deflate.i.i ], [ 0, %if.end30.i.i ], [ -12, %if.end9.i.i.deflate_compress.exit.i_crit_edge ]
  %call32.i.i = call i32 @zlib_deflateEnd(ptr noundef nonnull %strm.i.i) #16
  %378 = ptrtoint ptr %workspace.i.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load ptr, ptr %workspace.i.i, align 4
  call void @kvfree(ptr noundef %379) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %strm.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.0.i.i)
  %tobool27.not.i160 = icmp eq i32 %error.0.i.i, 0
  br i1 %tobool27.not.i160, label %cleanup.i, label %deflate_compress.exit.i.fail_crit_edge

deflate_compress.exit.i.fail_crit_edge:           ; preds = %deflate_compress.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

cleanup.i:                                        ; preds = %deflate_compress.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @kvfree(ptr noundef %357) #16
  br label %cleanup68

if.else.i161:                                     ; preds = %if.end.i154
  call void @__sanitizer_cov_trace_pc() #18
  %380 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %size, align 4
  %382 = ptrtoint ptr %compressed_size.i to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %381, ptr %compressed_size.i, align 4
  br label %cleanup68

fail_profile:                                     ; preds = %if.end27.fail_profile_crit_edge, %if.end24.fail_profile_crit_edge, %verify_profile.exit
  %error.1.ph = phi i32 [ -71, %verify_profile.exit ], [ %call23, %if.end24.fail_profile_crit_edge ], [ -12, %if.end27.fail_profile_crit_edge ]
  %tobool.not.i162 = icmp eq ptr %retval.0.i139, null
  br i1 %tobool.not.i162, label %fail_profile.fail_crit_edge, label %if.then.i164

fail_profile.fail_crit_edge:                      ; preds = %fail_profile
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.then.i164:                                     ; preds = %fail_profile
  %label.i = getelementptr inbounds %struct.aa_profile, ptr %retval.0.i139, i32 0, i32 25
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %label.i, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !313
  call void @llvm.prefetch.p0(ptr %label.i, i32 1, i32 3, i32 1) #16
  %383 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %label.i, ptr %label.i, i32 1, ptr elementtype(i32) %label.i) #16, !srcloc !314
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %383, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i163 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i163, label %if.then.i.i165, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i164
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.fail_crit_edge, label %if.then10.i.i.i.i.i, !prof !310

if.end5.i.i.i.i.i.fail_crit_edge:                 ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @refcount_warn_saturate(ptr noundef %label.i, i32 noundef 3) #16
  br label %fail

if.then.i.i165:                                   ; preds = %if.then.i164
  call void @__sanitizer_cov_trace_pc() #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !315
  call void @aa_label_kref(ptr noundef %label.i) #16
  br label %fail

fail:                                             ; preds = %if.then.i.i165, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.fail_crit_edge, %fail_profile.fail_crit_edge, %deflate_compress.exit.i.fail_crit_edge, %deflate_compress.exit.thread.i, %deflate_compress.exit.thread47.i, %if.then42, %if.then12, %if.then25.i.fail_crit_edge, %if.then16.i, %if.then8.i, %if.then1.i
  %error.2 = phi i32 [ %351, %if.then42 ], [ %error.1.ph, %fail_profile.fail_crit_edge ], [ %error.1.ph, %if.end5.i.i.i.i.i.fail_crit_edge ], [ %error.1.ph, %if.then10.i.i.i.i.i ], [ %error.1.ph, %if.then.i.i165 ], [ %307, %if.then12 ], [ -93, %if.then1.i ], [ -93, %if.then16.i ], [ -93, %if.then8.i ], [ %retval.0.i.ph.i, %deflate_compress.exit.thread.i ], [ %error.0.i.i, %deflate_compress.exit.i.fail_crit_edge ], [ -12, %deflate_compress.exit.thread47.i ], [ -12, %if.then25.i.fail_crit_edge ]
  %384 = ptrtoint ptr %lh to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %lh, align 4
  %cmp60.not254 = icmp eq ptr %385, %lh
  br i1 %cmp60.not254, label %fail.cleanup68_crit_edge, label %fail.for.body_crit_edge

fail.for.body_crit_edge:                          ; preds = %fail
  br label %for.body

fail.cleanup68_crit_edge:                         ; preds = %fail
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup68

for.body:                                         ; preds = %list_del_init.exit.for.body_crit_edge, %fail.for.body_crit_edge
  %ent.0255 = phi ptr [ %tmp.0, %list_del_init.exit.for.body_crit_edge ], [ %385, %fail.for.body_crit_edge ]
  %386 = ptrtoint ptr %ent.0255 to i32
  call void @__asan_load4_noabort(i32 %386)
  %tmp.0 = load ptr, ptr %ent.0255, align 4
  %call.i.i167 = call zeroext i1 @__list_del_entry_valid(ptr noundef %ent.0255) #16
  br i1 %call.i.i167, label %if.end.i.i169, label %for.body.list_del_init.exit_crit_edge

for.body.list_del_init.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit

if.end.i.i169:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i168 = getelementptr inbounds %struct.list_head, ptr %ent.0255, i32 0, i32 1
  %387 = ptrtoint ptr %prev.i.i168 to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %prev.i.i168, align 4
  %389 = ptrtoint ptr %ent.0255 to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load ptr, ptr %ent.0255, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %390, i32 0, i32 1
  %391 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %391)
  store ptr %388, ptr %prev1.i.i.i, align 4
  %392 = ptrtoint ptr %388 to i32
  call void @__asan_store4_noabort(i32 %392)
  store volatile ptr %390, ptr %388, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i169, %for.body.list_del_init.exit_crit_edge
  %393 = ptrtoint ptr %ent.0255 to i32
  call void @__asan_store4_noabort(i32 %393)
  store volatile ptr %ent.0255, ptr %ent.0255, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %ent.0255, i32 0, i32 1
  %394 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %394)
  store ptr %ent.0255, ptr %prev.i3.i, align 4
  call void @aa_load_ent_free(ptr noundef %ent.0255)
  %cmp60.not = icmp eq ptr %tmp.0, %lh
  br i1 %cmp60.not, label %list_del_init.exit.cleanup68_crit_edge, label %list_del_init.exit.for.body_crit_edge

list_del_init.exit.for.body_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

list_del_init.exit.cleanup68_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup68

cleanup68:                                        ; preds = %list_del_init.exit.cleanup68_crit_edge, %fail.cleanup68_crit_edge, %if.else.i161, %cleanup.i
  %retval.0 = phi i32 [ 0, %cleanup.i ], [ 0, %if.else.i161 ], [ %error.2, %fail.cleanup68_crit_edge ], [ %error.2, %list_del_init.exit.cleanup68_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %e) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @aa_calc_profile_hash(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @aa_calc_hash(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @build_aa_ext_struct(ptr nocapture readnone %puf, ptr noundef %test, i32 noundef %buf_size) local_unnamed_addr #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_ptr_not_err_assert, align 4
  %__assertion11 = alloca %struct.kunit_ptr_not_err_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call ptr @kunit_kmalloc_array(ptr noundef %test, i32 noundef 1, i32 noundef %buf_size, i32 noundef 1052096) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %0 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %1 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %2 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 58, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %3 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %4 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %5 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %6 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @kunit_ptr_not_err_assert_format, ptr %format, align 4
  %text = getelementptr inbounds %struct.kunit_ptr_not_err_assert, ptr %__assertion, i32 0, i32 1
  %7 = ptrtoint ptr %text to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @.str.8, ptr %text, align 4
  %value = getelementptr inbounds %struct.kunit_ptr_not_err_assert, ptr %__assertion, i32 0, i32 2
  %8 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call.i.i, ptr %value, align 4
  %tobool.not.i = icmp ne ptr %call.i.i, null
  %cmp.i = icmp ule ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  %lnot = and i1 %tobool.not.i, %cmp.i
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %lnot, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %call.i = call ptr @kunit_kmalloc_array(ptr noundef %test, i32 noundef 1, i32 noundef 16, i32 noundef 1051840) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion11) #16
  %9 = ptrtoint ptr %__assertion11 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %test, ptr %__assertion11, align 4
  %type14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 1
  %10 = ptrtoint ptr %type14 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %type14, align 4
  %line15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 2
  %11 = ptrtoint ptr %line15 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 61, ptr %line15, align 4
  %file16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 3
  %12 = ptrtoint ptr %file16 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @.str.7, ptr %file16, align 4
  %message17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 4
  %13 = ptrtoint ptr %message17 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %message17, align 4
  %va19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 4, i32 1
  %14 = ptrtoint ptr %va19 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %va19, align 4
  %format20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 5
  %15 = ptrtoint ptr %format20 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @kunit_ptr_not_err_assert_format, ptr %format20, align 4
  %text21 = getelementptr inbounds %struct.kunit_ptr_not_err_assert, ptr %__assertion11, i32 0, i32 1
  %16 = ptrtoint ptr %text21 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @.str.9, ptr %text21, align 4
  %value22 = getelementptr inbounds %struct.kunit_ptr_not_err_assert, ptr %__assertion11, i32 0, i32 2
  %17 = ptrtoint ptr %value22 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call.i, ptr %value22, align 4
  %tobool.not.i134 = icmp ne ptr %call.i, null
  %cmp.i135 = icmp ule ptr %call.i, inttoptr (i32 -4096 to ptr)
  %lnot25 = and i1 %tobool.not.i134, %cmp.i135
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion11, i1 noundef zeroext %lnot25, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion11) #16
  %18 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call.i.i, ptr %call.i, align 4
  %add.ptr = getelementptr i8, ptr %call.i.i, i32 %buf_size
  %end = getelementptr inbounds %struct.aa_ext, ptr %call.i, i32 0, i32 1
  %19 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %add.ptr, ptr %end, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %call.i, i32 0, i32 2
  %20 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call.i.i, ptr %pos, align 4
  %21 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 4, ptr %call.i.i, align 1
  %add.ptr32 = getelementptr i8, ptr %call.i.i, i32 1
  %22 = ptrtoint ptr %add.ptr32 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 12, ptr %add.ptr32, align 1
  %add.ptr33 = getelementptr i8, ptr %call.i.i, i32 3
  %23 = call ptr @memcpy(ptr %add.ptr33, ptr @.str.10, i32 12)
  %24 = load ptr, ptr %call.i, align 4
  %add.ptr36 = getelementptr i8, ptr %24, i32 15
  %25 = ptrtoint ptr %add.ptr36 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 5, ptr %add.ptr36, align 1
  %add.ptr37 = getelementptr i8, ptr %24, i32 16
  %26 = ptrtoint ptr %add.ptr37 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 8, ptr %add.ptr37, align 1
  %add.ptr38 = getelementptr i8, ptr %24, i32 18
  %27 = ptrtoint ptr %add.ptr38 to i32
  call void @__asan_storeN_noabort(i32 %27, i32 8)
  store i64 8387236824869660416, ptr %add.ptr38, align 1
  %28 = load ptr, ptr %call.i, align 4
  %add.ptr41 = getelementptr i8, ptr %28, i32 26
  %29 = ptrtoint ptr %add.ptr41 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 4, ptr %add.ptr41, align 1
  %add.ptr42 = getelementptr i8, ptr %28, i32 27
  %30 = ptrtoint ptr %add.ptr42 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 9, ptr %add.ptr42, align 1
  %add.ptr43 = getelementptr i8, ptr %28, i32 29
  %31 = call ptr @memcpy(ptr %add.ptr43, ptr @.str.12, i32 9)
  %add.ptr47 = getelementptr i8, ptr %28, i32 38
  %32 = ptrtoint ptr %add.ptr47 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 2, ptr %add.ptr47, align 1
  %add.ptr50 = getelementptr i8, ptr %28, i32 39
  %33 = ptrtoint ptr %add.ptr50 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 16909060, ptr %add.ptr50, align 4
  %34 = load ptr, ptr %call.i, align 4
  %add.ptr52 = getelementptr i8, ptr %34, i32 43
  %35 = ptrtoint ptr %add.ptr52 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 4, ptr %add.ptr52, align 1
  %add.ptr53 = getelementptr i8, ptr %34, i32 44
  %36 = ptrtoint ptr %add.ptr53 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 9, ptr %add.ptr53, align 1
  %add.ptr54 = getelementptr i8, ptr %34, i32 46
  %37 = call ptr @memcpy(ptr %add.ptr54, ptr @.str.13, i32 9)
  %add.ptr58 = getelementptr i8, ptr %34, i32 55
  %38 = ptrtoint ptr %add.ptr58 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 3, ptr %add.ptr58, align 1
  %add.ptr61 = getelementptr i8, ptr %34, i32 56
  %39 = ptrtoint ptr %add.ptr61 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 72623859790382856, ptr %add.ptr61, align 8
  %40 = load ptr, ptr %call.i, align 4
  %add.ptr63 = getelementptr i8, ptr %40, i32 64
  %41 = ptrtoint ptr %add.ptr63 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 4, ptr %add.ptr63, align 1
  %add.ptr64 = getelementptr i8, ptr %40, i32 65
  %42 = ptrtoint ptr %add.ptr64 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 10, ptr %add.ptr64, align 1
  %add.ptr65 = getelementptr i8, ptr %40, i32 67
  %43 = call ptr @memcpy(ptr %add.ptr65, ptr @.str.14, i32 10)
  %add.ptr69 = getelementptr i8, ptr %40, i32 77
  %44 = ptrtoint ptr %add.ptr69 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 6, ptr %add.ptr69, align 1
  %add.ptr72 = getelementptr i8, ptr %40, i32 78
  %45 = ptrtoint ptr %add.ptr72 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 6, ptr %add.ptr72, align 1
  %add.ptr75 = getelementptr i8, ptr %40, i32 82
  %46 = call ptr @memcpy(ptr %add.ptr75, ptr @.str.15, i32 6)
  %47 = load ptr, ptr %call.i, align 4
  %add.ptr77 = getelementptr i8, ptr %47, i32 88
  %48 = ptrtoint ptr %add.ptr77 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 4, ptr %add.ptr77, align 1
  %add.ptr78 = getelementptr i8, ptr %47, i32 89
  %49 = ptrtoint ptr %add.ptr78 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 11, ptr %add.ptr78, align 1
  %add.ptr79 = getelementptr i8, ptr %47, i32 91
  %50 = call ptr @memcpy(ptr %add.ptr79, ptr @.str.16, i32 11)
  %add.ptr83 = getelementptr i8, ptr %47, i32 102
  %51 = ptrtoint ptr %add.ptr83 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 11, ptr %add.ptr83, align 1
  %add.ptr86 = getelementptr i8, ptr %47, i32 103
  %52 = ptrtoint ptr %add.ptr86 to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 16, ptr %add.ptr86, align 2
  ret ptr %call.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunit_ptr_not_err_assert_format(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunit_do_assertion(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__aa_fs_remove_rawdata(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @aa_label_kref(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @unpack_u32(ptr nocapture noundef %e, ptr noundef writeonly %data, ptr noundef readonly %name) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i, label %entry.if.else.i_crit_edge, label %if.end.i.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.end.i.i:                                       ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.if.else.i_crit_edge

if.end.i.i.if.else.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_u16_chunk.exit.i_crit_edge

if.then.i.unpack_u16_chunk.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end.i29.i:                                     ; preds = %if.then.i
  %7 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge, label %if.end6.i.i

if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge:   ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end6.i.i:                                      ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  br label %unpack_u16_chunk.exit.i

unpack_u16_chunk.exit.i:                          ; preds = %if.end6.i.i, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge, %if.then.i.unpack_u16_chunk.exit.i_crit_edge
  %tag.0.i = phi ptr [ null, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %add.ptr.i.i, %if.end6.i.i ], [ null, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %storemerge.i.i = phi ptr [ %incdec.ptr.i.i, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %add.ptr9.i.i, %if.end6.i.i ], [ %incdec.ptr.i.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %retval.0.i30.i = phi i32 [ 0, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %conv.i28.i, %if.end6.i.i ], [ 0, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %10 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %storemerge.i.i, ptr %pos1, align 4
  %tobool.not.i = icmp eq ptr %name, null
  br i1 %tobool.not.i, label %unpack_u16_chunk.exit.i.if.end13.i_crit_edge, label %land.lhs.true.i

unpack_u16_chunk.exit.i.if.end13.i_crit_edge:     ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

land.lhs.true.i:                                  ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i30.i)
  %tobool3.not.i = icmp eq i32 %retval.0.i30.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %lor.lhs.false.i

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %sub.i = add nsw i32 %retval.0.i30.i, -1
  %arrayidx.i = getelementptr i8, ptr %tag.0.i, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull %name, ptr noundef %tag.0.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %lor.lhs.false5.i.if.end13.i_crit_edge, label %lor.lhs.false5.i.cleanup_crit_edge

lor.lhs.false5.i.cleanup_crit_edge:               ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false5.i.if.end13.i_crit_edge:            ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.else.i:                                        ; preds = %if.end.i.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %tobool10.not.i = icmp eq ptr %name, null
  br i1 %tobool10.not.i, label %if.else.i.if.end13.i_crit_edge, label %if.else.i.cleanup_crit_edge

if.else.i.cleanup_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else.i.if.end13.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.else.i.if.end13.i_crit_edge, %lor.lhs.false5.i.if.end13.i_crit_edge, %unpack_u16_chunk.exit.i.if.end13.i_crit_edge
  %13 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i = icmp eq ptr %3, %14
  br i1 %cmp.i.not.i33.i, label %if.end13.i.cleanup_crit_edge, label %unpack_nameX.exit

if.end13.i.cleanup_crit_edge:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

unpack_nameX.exit:                                ; preds = %if.end13.i
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %14, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %16)
  %cmp.not.i35.i = icmp eq i8 %16, 2
  %incdec.ptr.i37.i = getelementptr i8, ptr %14, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %1
  %17 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %spec.select.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %spec.select.i to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i)
  %cmp.i = icmp ugt i32 %sub.ptr.sub.i, 3
  %or.cond = select i1 %cmp.not.i35.i, i1 %cmp.i, i1 false
  br i1 %or.cond, label %if.end, label %unpack_nameX.exit.cleanup_crit_edge

unpack_nameX.exit.cleanup_crit_edge:              ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %unpack_nameX.exit
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %if.end.if.end6_crit_edge, label %if.then4

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 4)
  %19 = load i32, ptr %spec.select.i, align 1
  %20 = tail call i32 @llvm.bswap.i32(i32 %19)
  %21 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %data, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  %22 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pos1, align 4
  %add.ptr = getelementptr i8, ptr %23, i32 4
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %unpack_nameX.exit.cleanup_crit_edge, %if.end13.i.cleanup_crit_edge, %if.else.i.cleanup_crit_edge, %lor.lhs.false5.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge
  %storemerge = phi ptr [ %add.ptr, %if.end6 ], [ %1, %unpack_nameX.exit.cleanup_crit_edge ], [ %1, %if.end13.i.cleanup_crit_edge ], [ %1, %land.lhs.true.i.cleanup_crit_edge ], [ %1, %lor.lhs.false.i.cleanup_crit_edge ], [ %1, %lor.lhs.false5.i.cleanup_crit_edge ], [ %1, %if.else.i.cleanup_crit_edge ]
  %retval.0 = phi i1 [ true, %if.end6 ], [ false, %unpack_nameX.exit.cleanup_crit_edge ], [ false, %if.end13.i.cleanup_crit_edge ], [ false, %land.lhs.true.i.cleanup_crit_edge ], [ false, %lor.lhs.false.i.cleanup_crit_edge ], [ false, %lor.lhs.false5.i.cleanup_crit_edge ], [ false, %if.else.i.cleanup_crit_edge ]
  %24 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %storemerge, ptr %pos1, align 4
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @audit_iface(ptr noundef readonly %new, ptr noundef %name, ptr noundef %info, ptr noundef readonly %e, i32 noundef %error) unnamed_addr #0 align 64 {
entry:
  %sa_aad = alloca %struct.apparmor_audit_data, align 4
  %sa = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @apparmor_blob_sizes to i32))
  %8 = load i32, ptr @apparmor_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %7, i32 %8
  %tobool.not.i.i.i = icmp eq ptr %add.ptr.i.i.i, null
  br i1 %tobool.not.i.i.i, label %do.end.i.i.i, label %entry.cred_label.exit.i.i_crit_edge, !prof !309

entry.cred_label.exit.i.i_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cred_label.exit.i.i

do.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 26, i32 noundef 9, ptr noundef nonnull @.str.25, ptr noundef nonnull @__func__.cred_label) #16
  br label %cred_label.exit.i.i

cred_label.exit.i.i:                              ; preds = %do.end.i.i.i, %entry.cred_label.exit.i.i_crit_edge
  %9 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %add.ptr.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %do.end.i.i, label %cred_label.exit.i.i.aa_current_raw_label.exit_crit_edge, !prof !309

cred_label.exit.i.i.aa_current_raw_label.exit_crit_edge: ; preds = %cred_label.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_current_raw_label.exit

do.end.i.i:                                       ; preds = %cred_label.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 51, i32 noundef 9, ptr noundef nonnull @.str.24, ptr noundef nonnull @__func__.aa_cred_raw_label) #16
  br label %aa_current_raw_label.exit

aa_current_raw_label.exit:                        ; preds = %do.end.i.i, %cred_label.exit.i.i.aa_current_raw_label.exit_crit_edge
  %11 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i1 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i1 to ptr
  %task.i2 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i2, align 8
  %cred.i3 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i3, align 16
  %security.i.i.i4 = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i4, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @apparmor_blob_sizes to i32))
  %19 = load i32, ptr @apparmor_blob_sizes, align 4
  %add.ptr.i.i.i5 = getelementptr i8, ptr %18, i32 %19
  %tobool.not.i.i.i6 = icmp eq ptr %add.ptr.i.i.i5, null
  br i1 %tobool.not.i.i.i6, label %do.end.i.i.i7, label %aa_current_raw_label.exit.cred_label.exit.i.i9_crit_edge, !prof !309

aa_current_raw_label.exit.cred_label.exit.i.i9_crit_edge: ; preds = %aa_current_raw_label.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cred_label.exit.i.i9

do.end.i.i.i7:                                    ; preds = %aa_current_raw_label.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 26, i32 noundef 9, ptr noundef nonnull @.str.25, ptr noundef nonnull @__func__.cred_label) #16
  br label %cred_label.exit.i.i9

cred_label.exit.i.i9:                             ; preds = %do.end.i.i.i7, %aa_current_raw_label.exit.cred_label.exit.i.i9_crit_edge
  %20 = ptrtoint ptr %add.ptr.i.i.i5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %add.ptr.i.i.i5, align 4
  %tobool.not.i.i8 = icmp eq ptr %21, null
  br i1 %tobool.not.i.i8, label %do.end.i.i10, label %cred_label.exit.i.i9.aa_current_raw_label.exit11_crit_edge, !prof !309

cred_label.exit.i.i9.aa_current_raw_label.exit11_crit_edge: ; preds = %cred_label.exit.i.i9
  call void @__sanitizer_cov_trace_pc() #18
  br label %aa_current_raw_label.exit11

do.end.i.i10:                                     ; preds = %cred_label.exit.i.i9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 51, i32 noundef 9, ptr noundef nonnull @.str.24, ptr noundef nonnull @__func__.aa_cred_raw_label) #16
  br label %aa_current_raw_label.exit11

aa_current_raw_label.exit11:                      ; preds = %do.end.i.i10, %cred_label.exit.i.i9.aa_current_raw_label.exit11_crit_edge
  %size = getelementptr inbounds %struct.aa_label, ptr %21, i32 0, i32 7
  %22 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %size, align 4
  %sub = add i32 %23, -1
  %arrayidx = getelementptr %struct.aa_label, ptr %10, i32 0, i32 8, i32 %sub
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx, align 4
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %sa_aad) #16
  %26 = getelementptr inbounds i8, ptr %sa_aad, i32 4
  %27 = call ptr @memset(ptr %26, i32 0, i32 52)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %sa) #16
  %28 = call ptr @memcpy(ptr %sa, ptr @__const.audit_iface.sa, i32 12)
  %29 = getelementptr inbounds %struct.common_audit_data, ptr %sa, i32 0, i32 2
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %sa_aad, ptr %29, align 4
  %tobool.not = icmp eq ptr %e, null
  br i1 %tobool.not, label %aa_current_raw_label.exit11.if.end_crit_edge, label %if.then

aa_current_raw_label.exit11.if.end_crit_edge:     ; preds = %aa_current_raw_label.exit11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %aa_current_raw_label.exit11
  call void @__sanitizer_cov_trace_pc() #18
  %pos = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %31 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pos, align 4
  %33 = ptrtoint ptr %e to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %e, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %32 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %34 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %pos2 = getelementptr inbounds %struct.apparmor_audit_data, ptr %sa_aad, i32 0, i32 8, i32 0, i32 1, i32 0, i32 1
  %35 = ptrtoint ptr %pos2 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %sub.ptr.sub, ptr %pos2, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %aa_current_raw_label.exit11.if.end_crit_edge
  %ns = getelementptr inbounds %struct.apparmor_audit_data, ptr %sa_aad, i32 0, i32 8, i32 0, i32 1
  %36 = ptrtoint ptr %ns to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %ns, align 4
  %tobool3.not = icmp eq ptr %new, null
  br i1 %tobool3.not, label %if.end.if.end7_crit_edge, label %if.then4

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %hname = getelementptr inbounds %struct.aa_policy, ptr %new, i32 0, i32 1
  %37 = ptrtoint ptr %hname to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hname, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %.sink = phi ptr [ %38, %if.then4 ], [ %name, %if.end.if.end7_crit_edge ]
  %39 = getelementptr inbounds %struct.apparmor_audit_data, ptr %sa_aad, i32 0, i32 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %.sink, ptr %39, align 4
  %info8 = getelementptr inbounds %struct.apparmor_audit_data, ptr %sa_aad, i32 0, i32 5
  %41 = ptrtoint ptr %info8 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %info, ptr %info8, align 4
  %42 = ptrtoint ptr %sa_aad to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %error, ptr %sa_aad, align 4
  %call10 = call i32 @aa_audit(i32 noundef 4, ptr noundef %25, ptr noundef nonnull %sa, ptr noundef nonnull @audit_cb) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %sa) #16
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %sa_aad) #16
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @unpack_str(ptr nocapture noundef %e, ptr nocapture noundef writeonly %string, ptr noundef readonly %name) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %2 = ptrtoint ptr %string to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %string, align 4
  %3 = load ptr, ptr %pos1, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %4 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %5, %3
  br i1 %cmp.i.not.i.i, label %entry.if.else.i_crit_edge, label %if.end.i.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.end.i.i:                                       ; preds = %entry
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %7)
  %cmp.not.i.i = icmp eq i8 %7, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.if.else.i_crit_edge

if.end.i.i.if.else.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %3, i32 1
  %8 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %incdec.ptr.i.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %5 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_u16_chunk.exit.i_crit_edge

if.then.i.unpack_u16_chunk.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end.i29.i:                                     ; preds = %if.then.i
  %9 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 2)
  %10 = load i16, ptr %incdec.ptr.i.i, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10) #16
  %conv.i28.i = zext i16 %11 to i32
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge, label %if.end6.i.i

if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge:   ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end6.i.i:                                      ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  br label %unpack_u16_chunk.exit.i

unpack_u16_chunk.exit.i:                          ; preds = %if.end6.i.i, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge, %if.then.i.unpack_u16_chunk.exit.i_crit_edge
  %tag.0.i = phi ptr [ null, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %add.ptr.i.i, %if.end6.i.i ], [ null, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %storemerge.i.i = phi ptr [ %incdec.ptr.i.i, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %add.ptr9.i.i, %if.end6.i.i ], [ %incdec.ptr.i.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %retval.0.i30.i = phi i32 [ 0, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %conv.i28.i, %if.end6.i.i ], [ 0, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %12 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %storemerge.i.i, ptr %pos1, align 4
  %tobool.not.i = icmp eq ptr %name, null
  br i1 %tobool.not.i, label %unpack_u16_chunk.exit.i.if.end13.i_crit_edge, label %land.lhs.true.i

unpack_u16_chunk.exit.i.if.end13.i_crit_edge:     ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

land.lhs.true.i:                                  ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i30.i)
  %tobool3.not.i = icmp eq i32 %retval.0.i30.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.fail_crit_edge, label %lor.lhs.false.i

land.lhs.true.i.fail_crit_edge:                   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %sub.i = add nsw i32 %retval.0.i30.i, -1
  %arrayidx.i = getelementptr i8, ptr %tag.0.i, i32 %sub.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp.not.i = icmp eq i8 %14, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.fail_crit_edge

lor.lhs.false.i.fail_crit_edge:                   ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull %name, ptr noundef %tag.0.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %lor.lhs.false5.i.if.end13.i_crit_edge, label %lor.lhs.false5.i.fail_crit_edge

lor.lhs.false5.i.fail_crit_edge:                  ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

lor.lhs.false5.i.if.end13.i_crit_edge:            ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.else.i:                                        ; preds = %if.end.i.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %tobool10.not.i = icmp eq ptr %name, null
  br i1 %tobool10.not.i, label %if.else.i.if.end13.i_crit_edge, label %if.else.i.fail_crit_edge

if.else.i.fail_crit_edge:                         ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.else.i.if.end13.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.else.i.if.end13.i_crit_edge, %lor.lhs.false5.i.if.end13.i_crit_edge, %unpack_u16_chunk.exit.i.if.end13.i_crit_edge
  %15 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i = icmp eq ptr %5, %16
  br i1 %cmp.i.not.i33.i, label %if.end13.i.fail_crit_edge, label %unpack_nameX.exit

if.end13.i.fail_crit_edge:                        ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

unpack_nameX.exit:                                ; preds = %if.end13.i
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %16, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %18)
  %cmp.not.i35.i = icmp eq i8 %18, 5
  %incdec.ptr.i37.i = getelementptr i8, ptr %16, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %3
  %19 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %spec.select.i, ptr %pos1, align 4
  br i1 %cmp.not.i35.i, label %if.then, label %unpack_nameX.exit.fail_crit_edge

unpack_nameX.exit.fail_crit_edge:                 ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.then:                                          ; preds = %unpack_nameX.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %5 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  br i1 %cmp.i.i, label %if.end.i, label %if.then.fail_crit_edge

if.then.fail_crit_edge:                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end.i:                                         ; preds = %if.then
  %20 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_loadN_noabort(i32 %20, i32 2)
  %21 = load i16, ptr %spec.select.i, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %21) #16
  %conv.i = zext i16 %22 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i, i32 2
  %sub.ptr.rhs.cast.i24.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i25.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i24.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i, i32 %conv.i)
  %cmp.i26.not.i = icmp ult i32 %sub.ptr.sub.i25.i, %conv.i
  br i1 %cmp.i26.not.i, label %if.end.i.fail_crit_edge, label %unpack_u16_chunk.exit

if.end.i.fail_crit_edge:                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

unpack_u16_chunk.exit:                            ; preds = %if.end.i
  %add.ptr9.i = getelementptr i8, ptr %add.ptr.i, i32 %conv.i
  %23 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr9.i, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool.not = icmp eq i16 %21, 0
  br i1 %tobool.not, label %unpack_u16_chunk.exit.fail_crit_edge, label %if.then3

unpack_u16_chunk.exit.fail_crit_edge:             ; preds = %unpack_u16_chunk.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.then3:                                         ; preds = %unpack_u16_chunk.exit
  %sub = add nsw i32 %conv.i, -1
  %arrayidx = getelementptr i8, ptr %add.ptr.i, i32 %sub
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %cmp.not = icmp eq i8 %25, 0
  br i1 %cmp.not, label %if.end, label %if.then3.fail_crit_edge

if.then3.fail_crit_edge:                          ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end:                                           ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %string to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr.i, ptr %string, align 4
  br label %cleanup

fail:                                             ; preds = %if.then3.fail_crit_edge, %unpack_u16_chunk.exit.fail_crit_edge, %if.end.i.fail_crit_edge, %if.then.fail_crit_edge, %unpack_nameX.exit.fail_crit_edge, %if.end13.i.fail_crit_edge, %if.else.i.fail_crit_edge, %lor.lhs.false5.i.fail_crit_edge, %lor.lhs.false.i.fail_crit_edge, %land.lhs.true.i.fail_crit_edge
  %27 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %1, ptr %pos1, align 4
  br label %cleanup

cleanup:                                          ; preds = %fail, %if.end
  %retval.0 = phi i32 [ 0, %fail ], [ %conv.i, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @unpack_nameX(ptr nocapture noundef %e, i32 noundef %code, ptr noundef readonly %name) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i, label %entry.if.else_crit_edge, label %if.end.i

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.end.i:                                         ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i, label %if.then, label %if.end.i.if.else_crit_edge

if.end.i.if.else_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.then:                                          ; preds = %if.end.i
  %incdec.ptr.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %incdec.ptr.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  br i1 %cmp.i.i, label %if.end.i29, label %if.then.unpack_u16_chunk.exit_crit_edge

if.then.unpack_u16_chunk.exit_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end.i29:                                       ; preds = %if.then
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28 = zext i16 %9 to i32
  %add.ptr.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i25.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i24.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i, i32 %conv.i28)
  %cmp.i26.not.i = icmp ult i32 %sub.ptr.sub.i25.i, %conv.i28
  br i1 %cmp.i26.not.i, label %if.end.i29.unpack_u16_chunk.exit_crit_edge, label %if.end6.i

if.end.i29.unpack_u16_chunk.exit_crit_edge:       ; preds = %if.end.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end6.i:                                        ; preds = %if.end.i29
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i = getelementptr i8, ptr %add.ptr.i, i32 %conv.i28
  br label %unpack_u16_chunk.exit

unpack_u16_chunk.exit:                            ; preds = %if.end6.i, %if.end.i29.unpack_u16_chunk.exit_crit_edge, %if.then.unpack_u16_chunk.exit_crit_edge
  %tag.0 = phi ptr [ null, %if.end.i29.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr.i, %if.end6.i ], [ null, %if.then.unpack_u16_chunk.exit_crit_edge ]
  %storemerge.i = phi ptr [ %incdec.ptr.i, %if.end.i29.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr9.i, %if.end6.i ], [ %incdec.ptr.i, %if.then.unpack_u16_chunk.exit_crit_edge ]
  %retval.0.i30 = phi i32 [ 0, %if.end.i29.unpack_u16_chunk.exit_crit_edge ], [ %conv.i28, %if.end6.i ], [ 0, %if.then.unpack_u16_chunk.exit_crit_edge ]
  %10 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %storemerge.i, ptr %pos1, align 4
  %tobool.not = icmp eq ptr %name, null
  br i1 %tobool.not, label %unpack_u16_chunk.exit.if.end13_crit_edge, label %land.lhs.true

unpack_u16_chunk.exit.if.end13_crit_edge:         ; preds = %unpack_u16_chunk.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

land.lhs.true:                                    ; preds = %unpack_u16_chunk.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i30)
  %tobool3.not = icmp eq i32 %retval.0.i30, 0
  br i1 %tobool3.not, label %land.lhs.true.cleanup18_crit_edge, label %lor.lhs.false

land.lhs.true.cleanup18_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup18

lor.lhs.false:                                    ; preds = %land.lhs.true
  %sub = add nsw i32 %retval.0.i30, -1
  %arrayidx = getelementptr i8, ptr %tag.0, i32 %sub
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not = icmp eq i8 %12, 0
  br i1 %cmp.not, label %lor.lhs.false5, label %lor.lhs.false.cleanup18_crit_edge

lor.lhs.false.cleanup18_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup18

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call6 = tail call i32 @strcmp(ptr noundef nonnull %name, ptr noundef %tag.0) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %lor.lhs.false5.if.end13_crit_edge, label %lor.lhs.false5.cleanup18_crit_edge

lor.lhs.false5.cleanup18_crit_edge:               ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup18

lor.lhs.false5.if.end13_crit_edge:                ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.else:                                          ; preds = %if.end.i.if.else_crit_edge, %entry.if.else_crit_edge
  %tobool10.not = icmp eq ptr %name, null
  br i1 %tobool10.not, label %if.else.if.end13_crit_edge, label %if.else.cleanup18_crit_edge

if.else.cleanup18_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup18

if.else.if.end13_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.end13:                                         ; preds = %if.else.if.end13_crit_edge, %lor.lhs.false5.if.end13_crit_edge, %unpack_u16_chunk.exit.if.end13_crit_edge
  %13 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33 = icmp eq ptr %3, %14
  br i1 %cmp.i.not.i33, label %if.end13.cleanup18_crit_edge, label %if.end.i36

if.end13.cleanup18_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup18

if.end.i36:                                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %14, align 1
  %conv.i34 = zext i8 %16 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i34, i32 %code)
  %cmp.not.i35 = icmp eq i32 %conv.i34, %code
  %incdec.ptr.i37 = getelementptr i8, ptr %14, i32 1
  %spec.select = select i1 %cmp.not.i35, ptr %incdec.ptr.i37, ptr %1
  br label %cleanup18

cleanup18:                                        ; preds = %if.end.i36, %if.end13.cleanup18_crit_edge, %if.else.cleanup18_crit_edge, %lor.lhs.false5.cleanup18_crit_edge, %lor.lhs.false.cleanup18_crit_edge, %land.lhs.true.cleanup18_crit_edge
  %storemerge = phi ptr [ %1, %if.end13.cleanup18_crit_edge ], [ %1, %land.lhs.true.cleanup18_crit_edge ], [ %1, %lor.lhs.false.cleanup18_crit_edge ], [ %1, %lor.lhs.false5.cleanup18_crit_edge ], [ %1, %if.else.cleanup18_crit_edge ], [ %spec.select, %if.end.i36 ]
  %retval.0 = phi i1 [ false, %if.end13.cleanup18_crit_edge ], [ false, %land.lhs.true.cleanup18_crit_edge ], [ false, %lor.lhs.false.cleanup18_crit_edge ], [ false, %lor.lhs.false5.cleanup18_crit_edge ], [ false, %if.else.cleanup18_crit_edge ], [ %cmp.not.i35, %if.end.i36 ]
  %17 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge, ptr %pos1, align 4
  ret i1 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @aa_audit(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @audit_cb(ptr noundef %ab, ptr nocapture noundef readonly %va) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.common_audit_data, ptr %va, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %ns = getelementptr inbounds %struct.apparmor_audit_data, ptr %2, i32 0, i32 8, i32 0, i32 1
  %3 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ns, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @audit_log_format(ptr noundef %ab, ptr noundef nonnull @.str.26) #16
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %0, align 4
  %ns1 = getelementptr inbounds %struct.apparmor_audit_data, ptr %6, i32 0, i32 8, i32 0, i32 1
  %7 = ptrtoint ptr %ns1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ns1, align 4
  tail call void @audit_log_untrustedstring(ptr noundef %ab, ptr noundef %8) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %0, align 4
  %name = getelementptr inbounds %struct.apparmor_audit_data, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %name, align 4
  %tobool2.not = icmp eq ptr %12, null
  br i1 %tobool2.not, label %if.end.if.end5_crit_edge, label %if.then3

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @audit_log_format(ptr noundef %ab, ptr noundef nonnull @.str.27) #16
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %0, align 4
  %name4 = getelementptr inbounds %struct.apparmor_audit_data, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %name4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %name4, align 4
  tail call void @audit_log_untrustedstring(ptr noundef %ab, ptr noundef %16) #16
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end.if.end5_crit_edge
  %17 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %0, align 4
  %pos = getelementptr inbounds %struct.apparmor_audit_data, ptr %18, i32 0, i32 8, i32 0, i32 1, i32 0, i32 1
  %19 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pos, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool6.not = icmp eq i32 %20, 0
  br i1 %tobool6.not, label %if.end5.if.end9_crit_edge, label %if.then7

if.end5.if.end9_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @audit_log_format(ptr noundef %ab, ptr noundef nonnull @.str.28, i32 noundef %20) #16
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end5.if.end9_crit_edge
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_format(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_untrustedstring(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @aa_splitn_fqname(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrndup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @aa_alloc_profile(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @unpack_dfa(ptr nocapture noundef %e) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_blob.exit.thread_crit_edge, label %if.end.i.i.i

entry.unpack_blob.exit.thread_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

if.end.i.i.i:                                     ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_blob.exit.thread_crit_edge

if.end.i.i.i.unpack_blob.exit.thread_crit_edge:   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_blob.exit.thread_crit_edge

if.then.i.i.unpack_blob.exit.thread_crit_edge:    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %7 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i.i = zext i16 %9 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_blob.exit.thread_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_blob.exit.thread_crit_edge: ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %10 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool3.not.i.i = icmp eq i16 %8, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_blob.exit.thread_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_blob.exit.thread_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_blob.exit.thread_crit_edge

lor.lhs.false.i.i.unpack_blob.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(6) @.str.60, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %3, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_blob.exit.thread_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_blob.exit.thread_crit_edge: ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %13 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %14)
  %cmp.not.i35.i.i = icmp eq i8 %14, 6
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %1
  %15 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond33 = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond33, label %if.end.i, label %unpack_nameX.exit.i.unpack_blob.exit.thread_crit_edge

unpack_nameX.exit.i.unpack_blob.exit.thread_crit_edge: ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  %16 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 4)
  %17 = load i32, ptr %spec.select.i.i, align 1
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  %sub.ptr.rhs.cast.i28.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i29.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i28.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i29.i, i32 %18)
  %cmp.i30.not.i = icmp ult i32 %sub.ptr.sub.i29.i, %18
  br i1 %cmp.i30.not.i, label %if.end.i.unpack_blob.exit.thread_crit_edge, label %unpack_blob.exit

if.end.i.unpack_blob.exit.thread_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit.thread

unpack_blob.exit.thread:                          ; preds = %if.end.i.unpack_blob.exit.thread_crit_edge, %unpack_nameX.exit.i.unpack_blob.exit.thread_crit_edge, %lor.lhs.false5.i.i.unpack_blob.exit.thread_crit_edge, %lor.lhs.false.i.i.unpack_blob.exit.thread_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_blob.exit.thread_crit_edge, %if.end.i29.i.i.unpack_blob.exit.thread_crit_edge, %if.then.i.i.unpack_blob.exit.thread_crit_edge, %if.end.i.i.i.unpack_blob.exit.thread_crit_edge, %entry.unpack_blob.exit.thread_crit_edge
  %19 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %1, ptr %pos1.i, align 4
  br label %cleanup14

unpack_blob.exit:                                 ; preds = %if.end.i
  %add.ptr10.i = getelementptr i8, ptr %add.ptr.i, i32 %18
  %20 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %add.ptr10.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not = icmp eq i32 %17, 0
  br i1 %tobool.not, label %unpack_blob.exit.cleanup14_crit_edge, label %if.then

unpack_blob.exit.cleanup14_crit_edge:             ; preds = %unpack_blob.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

if.then:                                          ; preds = %unpack_blob.exit
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %e to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %e, align 4
  %sub.ptr.rhs.cast = ptrtoint ptr %22 to i32
  %sub.ptr.lhs.cast2 = ptrtoint ptr %add.ptr10.i to i32
  %sub.ptr.sub4 = sub i32 %sub.ptr.lhs.cast2, %sub.ptr.rhs.cast
  %and = and i32 %sub.ptr.sub4, 7
  %23 = add i32 %and, %sub.ptr.rhs.cast
  %sub = sub i32 %sub.ptr.rhs.cast.i28.i, %23
  %add = add i32 %sub, 7
  %and5 = and i32 %add, -8
  %sub6 = sub i32 %and5, %sub
  %add.ptr = getelementptr i8, ptr %add.ptr.i, i32 %sub6
  %sub7 = sub i32 %18, %sub6
  %call8 = tail call ptr @aa_dfa_unpack(ptr noundef %add.ptr, i32 noundef %sub7, i32 noundef 4356) #16
  br label %cleanup14

cleanup14:                                        ; preds = %if.then, %unpack_blob.exit.cleanup14_crit_edge, %unpack_blob.exit.thread
  %retval.1 = phi ptr [ %call8, %if.then ], [ null, %unpack_blob.exit.cleanup14_crit_edge ], [ null, %unpack_blob.exit.thread ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @unpack_xattrs(ptr nocapture noundef %e, ptr nocapture noundef %profile) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i, label %entry.cleanup20.sink.split_crit_edge, label %if.end.i.i

entry.cleanup20.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

if.end.i.i:                                       ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.cleanup20.sink.split_crit_edge

if.end.i.i.cleanup20.sink.split_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.cleanup20.sink.split_crit_edge

if.then.i.cleanup20.sink.split_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

if.end.i29.i:                                     ; preds = %if.then.i
  %7 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.cleanup20.sink.split_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i29.i.cleanup20.sink.split_crit_edge:      ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %10 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %add.ptr9.i.i, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool3.not.i = icmp eq i16 %8, 0
  br i1 %tobool3.not.i, label %unpack_u16_chunk.exit.i.cleanup20.sink.split_crit_edge, label %lor.lhs.false.i

unpack_u16_chunk.exit.i.cleanup20.sink.split_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

lor.lhs.false.i:                                  ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i28.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.cleanup20.sink.split_crit_edge

lor.lhs.false.i.cleanup20.sink.split_crit_edge:   ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(7) @.str.61, ptr noundef %add.ptr.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp ne i32 %call6.i, 0
  %cmp.i.not.i33.i = icmp eq ptr %3, %add.ptr9.i.i
  %or.cond = select i1 %tobool7.not.i, i1 true, i1 %cmp.i.not.i33.i
  br i1 %or.cond, label %lor.lhs.false5.i.cleanup20.sink.split_crit_edge, label %unpack_nameX.exit

lor.lhs.false5.i.cleanup20.sink.split_crit_edge:  ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

unpack_nameX.exit:                                ; preds = %lor.lhs.false5.i
  %13 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %add.ptr9.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %14)
  %cmp.not.i35.i = icmp eq i8 %14, 7
  %incdec.ptr.i37.i = getelementptr i8, ptr %add.ptr9.i.i, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %1
  %15 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %spec.select.i, ptr %pos1, align 4
  br i1 %cmp.not.i35.i, label %if.then, label %unpack_nameX.exit.cleanup20_crit_edge

unpack_nameX.exit.cleanup20_crit_edge:            ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20

if.then:                                          ; preds = %unpack_nameX.exit
  %cmp.i.not.i.i.i = icmp eq ptr %3, %spec.select.i
  br i1 %cmp.i.not.i.i.i, label %if.then.if.end13.i.i_crit_edge, label %if.end.i.i.i

if.then.if.end13.i.i_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %if.then
  %16 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %spec.select.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %17)
  %cmp.not.i.i.i = icmp eq i8 %17, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 1
  %18 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %incdec.ptr.i.i.i, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 2)
  %20 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #16
  %conv.i28.i.i = zext i16 %21 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %22 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i.i.i, ptr %pos1, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %if.then.if.end13.i.i_crit_edge
  %23 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %3, %24
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_array.exit_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_array.exit_crit_edge:         ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %26)
  %cmp.not.i35.i.i = icmp eq i8 %26, 11
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %24, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %spec.select.i
  %27 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %spec.select.i.i, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %cleanup.thread.i, label %unpack_nameX.exit.i.unpack_array.exit_crit_edge

unpack_nameX.exit.i.unpack_array.exit_crit_edge:  ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

cleanup.thread.i:                                 ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 2)
  %29 = load i16, ptr %spec.select.i.i, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #16
  %conv.i = zext i16 %30 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  br label %unpack_array.exit

unpack_array.exit:                                ; preds = %cleanup.thread.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge, %if.end13.i.i.unpack_array.exit_crit_edge
  %storemerge.i36 = phi ptr [ %add.ptr.i, %cleanup.thread.i ], [ %incdec.ptr.i37.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ %incdec.ptr.i37.i, %if.end13.i.i.unpack_array.exit_crit_edge ]
  %retval.1.i = phi i32 [ %conv.i, %cleanup.thread.i ], [ 0, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ 0, %if.end13.i.i.unpack_array.exit_crit_edge ]
  %31 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %storemerge.i36, ptr %pos1, align 4
  %xattr_count = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 15
  %32 = ptrtoint ptr %xattr_count to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %retval.1.i, ptr %xattr_count, align 4
  %33 = shl nuw nsw i32 %retval.1.i, 2
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %33, i32 noundef 3520) #21
  %xattrs = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 16
  %34 = ptrtoint ptr %xattrs to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %call8.i.i, ptr %xattrs, align 4
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %unpack_array.exit.cleanup20.sink.split_crit_edge, label %for.cond.preheader

unpack_array.exit.cleanup20.sink.split_crit_edge: ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

for.cond.preheader:                               ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %cmp185.not = icmp eq i32 %retval.1.i, 0
  br i1 %cmp185.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.cond:                                         ; preds = %unpack_str.exit
  %inc = add nuw nsw i32 %i.0186, 1
  %exitcond.not = icmp eq i32 %inc, %retval.1.i
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0186 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %35 = ptrtoint ptr %xattrs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %xattrs, align 4
  %arrayidx = getelementptr ptr, ptr %36, i32 %i.0186
  %37 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pos1, align 4
  %39 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i114 = icmp eq ptr %40, %38
  br i1 %cmp.i.not.i.i.i114, label %for.body.if.end13.i.i137_crit_edge, label %if.end.i.i.i116

for.body.if.end13.i.i137_crit_edge:               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i137

if.end.i.i.i116:                                  ; preds = %for.body
  %41 = ptrtoint ptr %38 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %38, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %42)
  %cmp.not.i.i.i115 = icmp eq i8 %42, 4
  br i1 %cmp.not.i.i.i115, label %if.then.i.i122, label %if.end.i.i.i116.if.end13.i.i137_crit_edge

if.end.i.i.i116.if.end13.i.i137_crit_edge:        ; preds = %if.end.i.i.i116
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i137

if.then.i.i122:                                   ; preds = %if.end.i.i.i116
  %incdec.ptr.i.i.i117 = getelementptr i8, ptr %38, i32 1
  %43 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %incdec.ptr.i.i.i117, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i.i118 = ptrtoint ptr %40 to i32
  %sub.ptr.rhs.cast.i.i.i.i119 = ptrtoint ptr %incdec.ptr.i.i.i117 to i32
  %sub.ptr.sub.i.i.i.i120 = sub i32 %sub.ptr.lhs.cast.i.i.i.i118, %sub.ptr.rhs.cast.i.i.i.i119
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i120)
  %cmp.i.i.i.i121 = icmp ugt i32 %sub.ptr.sub.i.i.i.i120, 1
  br i1 %cmp.i.i.i.i121, label %if.end.i29.i.i128, label %if.then.i.i122.unpack_u16_chunk.exit.i.i134_crit_edge

if.then.i.i122.unpack_u16_chunk.exit.i.i134_crit_edge: ; preds = %if.then.i.i122
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i134

if.end.i29.i.i128:                                ; preds = %if.then.i.i122
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %incdec.ptr.i.i.i117 to i32
  call void @__asan_loadN_noabort(i32 %44, i32 2)
  %45 = load i16, ptr %incdec.ptr.i.i.i117, align 1
  %46 = tail call i16 @llvm.bswap.i16(i16 %45) #16
  %conv.i28.i.i123 = zext i16 %46 to i32
  %add.ptr.i.i.i124 = getelementptr i8, ptr %38, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i125 = ptrtoint ptr %add.ptr.i.i.i124 to i32
  %sub.ptr.sub.i25.i.i.i126 = sub i32 %sub.ptr.lhs.cast.i.i.i.i118, %sub.ptr.rhs.cast.i24.i.i.i125
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i126, i32 %conv.i28.i.i123)
  %cmp.i26.not.i.i.i127 = icmp ult i32 %sub.ptr.sub.i25.i.i.i126, %conv.i28.i.i123
  %add.ptr9.i.i.i129 = getelementptr i8, ptr %add.ptr.i.i.i124, i32 %conv.i28.i.i123
  %spec.select180 = select i1 %cmp.i26.not.i.i.i127, ptr %incdec.ptr.i.i.i117, ptr %add.ptr9.i.i.i129
  br label %unpack_u16_chunk.exit.i.i134

unpack_u16_chunk.exit.i.i134:                     ; preds = %if.end.i29.i.i128, %if.then.i.i122.unpack_u16_chunk.exit.i.i134_crit_edge
  %storemerge.i.i.i132 = phi ptr [ %incdec.ptr.i.i.i117, %if.then.i.i122.unpack_u16_chunk.exit.i.i134_crit_edge ], [ %spec.select180, %if.end.i29.i.i128 ]
  %47 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %storemerge.i.i.i132, ptr %pos1, align 4
  br label %if.end13.i.i137

if.end13.i.i137:                                  ; preds = %unpack_u16_chunk.exit.i.i134, %if.end.i.i.i116.if.end13.i.i137_crit_edge, %for.body.if.end13.i.i137_crit_edge
  %48 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i136 = icmp eq ptr %40, %49
  br i1 %cmp.i.not.i33.i.i136, label %if.end13.i.i137.unpack_str.exit.thread_crit_edge, label %unpack_nameX.exit.i141

if.end13.i.i137.unpack_str.exit.thread_crit_edge: ; preds = %if.end13.i.i137
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_nameX.exit.i141:                           ; preds = %if.end13.i.i137
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %49, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %51)
  %cmp.not.i35.i.i138 = icmp eq i8 %51, 5
  %incdec.ptr.i37.i.i139 = getelementptr i8, ptr %49, i32 1
  %spec.select.i.i140 = select i1 %cmp.not.i35.i.i138, ptr %incdec.ptr.i37.i.i139, ptr %38
  %52 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %spec.select.i.i140, ptr %pos1, align 4
  br i1 %cmp.not.i35.i.i138, label %if.then.i146, label %unpack_nameX.exit.i141.unpack_str.exit.thread_crit_edge

unpack_nameX.exit.i141.unpack_str.exit.thread_crit_edge: ; preds = %unpack_nameX.exit.i141
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.then.i146:                                     ; preds = %unpack_nameX.exit.i141
  %sub.ptr.lhs.cast.i.i.i142 = ptrtoint ptr %40 to i32
  %sub.ptr.rhs.cast.i.i.i143 = ptrtoint ptr %spec.select.i.i140 to i32
  %sub.ptr.sub.i.i.i144 = sub i32 %sub.ptr.lhs.cast.i.i.i142, %sub.ptr.rhs.cast.i.i.i143
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i144)
  %cmp.i.i.i145 = icmp ugt i32 %sub.ptr.sub.i.i.i144, 1
  br i1 %cmp.i.i.i145, label %if.end.i.i151, label %if.then.i146.unpack_str.exit.thread_crit_edge

if.then.i146.unpack_str.exit.thread_crit_edge:    ; preds = %if.then.i146
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.end.i.i151:                                    ; preds = %if.then.i146
  %53 = ptrtoint ptr %spec.select.i.i140 to i32
  call void @__asan_loadN_noabort(i32 %53, i32 2)
  %54 = load i16, ptr %spec.select.i.i140, align 1
  %55 = tail call i16 @llvm.bswap.i16(i16 %54) #16
  %conv.i.i = zext i16 %55 to i32
  %add.ptr.i.i147 = getelementptr i8, ptr %spec.select.i.i140, i32 2
  %sub.ptr.rhs.cast.i24.i.i148 = ptrtoint ptr %add.ptr.i.i147 to i32
  %sub.ptr.sub.i25.i.i149 = sub i32 %sub.ptr.lhs.cast.i.i.i142, %sub.ptr.rhs.cast.i24.i.i148
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i149, i32 %conv.i.i)
  %cmp.i26.not.i.i150 = icmp ult i32 %sub.ptr.sub.i25.i.i149, %conv.i.i
  br i1 %cmp.i26.not.i.i150, label %if.end.i.i151.unpack_str.exit.thread_crit_edge, label %unpack_u16_chunk.exit.i154

if.end.i.i151.unpack_str.exit.thread_crit_edge:   ; preds = %if.end.i.i151
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_u16_chunk.exit.i154:                       ; preds = %if.end.i.i151
  %add.ptr9.i.i152 = getelementptr i8, ptr %add.ptr.i.i147, i32 %conv.i.i
  %56 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %add.ptr9.i.i152, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %54)
  %tobool.not.i153 = icmp eq i16 %54, 0
  br i1 %tobool.not.i153, label %unpack_u16_chunk.exit.i154.unpack_str.exit.thread_crit_edge, label %if.then3.i

unpack_u16_chunk.exit.i154.unpack_str.exit.thread_crit_edge: ; preds = %unpack_u16_chunk.exit.i154
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.then3.i:                                       ; preds = %unpack_u16_chunk.exit.i154
  %sub.i155 = add nsw i32 %conv.i.i, -1
  %arrayidx.i156 = getelementptr i8, ptr %add.ptr.i.i147, i32 %sub.i155
  %57 = ptrtoint ptr %arrayidx.i156 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx.i156, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %cmp.not.i157 = icmp eq i8 %58, 0
  br i1 %cmp.not.i157, label %unpack_str.exit, label %if.then3.i.unpack_str.exit.thread_crit_edge

if.then3.i.unpack_str.exit.thread_crit_edge:      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_str.exit.thread:                           ; preds = %if.then3.i.unpack_str.exit.thread_crit_edge, %unpack_u16_chunk.exit.i154.unpack_str.exit.thread_crit_edge, %if.end.i.i151.unpack_str.exit.thread_crit_edge, %if.then.i146.unpack_str.exit.thread_crit_edge, %unpack_nameX.exit.i141.unpack_str.exit.thread_crit_edge, %if.end13.i.i137.unpack_str.exit.thread_crit_edge
  %59 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %arrayidx, align 4
  br label %cleanup20.sink.split

unpack_str.exit:                                  ; preds = %if.then3.i
  %60 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr null, ptr %arrayidx, align 4
  %call2.i = tail call ptr @kmemdup(ptr noundef %add.ptr.i.i147, i32 noundef %conv.i.i, i32 noundef 3264) #16
  %61 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %call2.i, ptr %arrayidx, align 4
  %tobool3.not.i42 = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i42, label %unpack_str.exit.cleanup20.sink.split_crit_edge, label %for.cond

unpack_str.exit.cleanup20.sink.split_crit_edge:   ; preds = %unpack_str.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %62 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %pos1, align 4
  %64 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i46 = icmp eq ptr %65, %63
  br i1 %cmp.i.not.i.i46, label %for.end.if.end13.i69_crit_edge, label %if.end.i.i48

for.end.if.end13.i69_crit_edge:                   ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i69

if.end.i.i48:                                     ; preds = %for.end
  %66 = ptrtoint ptr %63 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %63, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %67)
  %cmp.not.i.i47 = icmp eq i8 %67, 4
  br i1 %cmp.not.i.i47, label %if.then.i54, label %if.end.i.i48.if.end13.i69_crit_edge

if.end.i.i48.if.end13.i69_crit_edge:              ; preds = %if.end.i.i48
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i69

if.then.i54:                                      ; preds = %if.end.i.i48
  %incdec.ptr.i.i49 = getelementptr i8, ptr %63, i32 1
  %68 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %incdec.ptr.i.i49, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i50 = ptrtoint ptr %65 to i32
  %sub.ptr.rhs.cast.i.i.i51 = ptrtoint ptr %incdec.ptr.i.i49 to i32
  %sub.ptr.sub.i.i.i52 = sub i32 %sub.ptr.lhs.cast.i.i.i50, %sub.ptr.rhs.cast.i.i.i51
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i52)
  %cmp.i.i.i53 = icmp ugt i32 %sub.ptr.sub.i.i.i52, 1
  br i1 %cmp.i.i.i53, label %if.end.i29.i60, label %if.then.i54.unpack_u16_chunk.exit.i66_crit_edge

if.then.i54.unpack_u16_chunk.exit.i66_crit_edge:  ; preds = %if.then.i54
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i66

if.end.i29.i60:                                   ; preds = %if.then.i54
  call void @__sanitizer_cov_trace_pc() #18
  %69 = ptrtoint ptr %incdec.ptr.i.i49 to i32
  call void @__asan_loadN_noabort(i32 %69, i32 2)
  %70 = load i16, ptr %incdec.ptr.i.i49, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #16
  %conv.i28.i55 = zext i16 %71 to i32
  %add.ptr.i.i56 = getelementptr i8, ptr %63, i32 3
  %sub.ptr.rhs.cast.i24.i.i57 = ptrtoint ptr %add.ptr.i.i56 to i32
  %sub.ptr.sub.i25.i.i58 = sub i32 %sub.ptr.lhs.cast.i.i.i50, %sub.ptr.rhs.cast.i24.i.i57
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i58, i32 %conv.i28.i55)
  %cmp.i26.not.i.i59 = icmp ult i32 %sub.ptr.sub.i25.i.i58, %conv.i28.i55
  %add.ptr9.i.i61 = getelementptr i8, ptr %add.ptr.i.i56, i32 %conv.i28.i55
  %spec.select181 = select i1 %cmp.i26.not.i.i59, ptr %incdec.ptr.i.i49, ptr %add.ptr9.i.i61
  br label %unpack_u16_chunk.exit.i66

unpack_u16_chunk.exit.i66:                        ; preds = %if.end.i29.i60, %if.then.i54.unpack_u16_chunk.exit.i66_crit_edge
  %storemerge.i.i64 = phi ptr [ %incdec.ptr.i.i49, %if.then.i54.unpack_u16_chunk.exit.i66_crit_edge ], [ %spec.select181, %if.end.i29.i60 ]
  %72 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %storemerge.i.i64, ptr %pos1, align 4
  br label %if.end13.i69

if.end13.i69:                                     ; preds = %unpack_u16_chunk.exit.i66, %if.end.i.i48.if.end13.i69_crit_edge, %for.end.if.end13.i69_crit_edge
  %73 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i68 = icmp eq ptr %65, %74
  br i1 %cmp.i.not.i33.i68, label %if.end13.i69.cleanup20.sink.split_crit_edge, label %unpack_nameX.exit77

if.end13.i69.cleanup20.sink.split_crit_edge:      ; preds = %if.end13.i69
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

unpack_nameX.exit77:                              ; preds = %if.end13.i69
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %74, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %76)
  %cmp.not.i35.i71 = icmp eq i8 %76, 12
  %incdec.ptr.i37.i72 = getelementptr i8, ptr %74, i32 1
  %spec.select.i73 = select i1 %cmp.not.i35.i71, ptr %incdec.ptr.i37.i72, ptr %63
  %77 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %spec.select.i73, ptr %pos1, align 4
  br i1 %cmp.not.i35.i71, label %if.end13, label %unpack_nameX.exit77.cleanup20.sink.split_crit_edge

unpack_nameX.exit77.cleanup20.sink.split_crit_edge: ; preds = %unpack_nameX.exit77
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

if.end13:                                         ; preds = %unpack_nameX.exit77
  %cmp.i.not.i.i80 = icmp eq ptr %65, %spec.select.i73
  br i1 %cmp.i.not.i.i80, label %if.end13.if.end13.i103_crit_edge, label %if.end.i.i82

if.end13.if.end13.i103_crit_edge:                 ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i103

if.end.i.i82:                                     ; preds = %if.end13
  %78 = ptrtoint ptr %spec.select.i73 to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %spec.select.i73, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %79)
  %cmp.not.i.i81 = icmp eq i8 %79, 4
  br i1 %cmp.not.i.i81, label %if.then.i88, label %if.end.i.i82.if.end13.i103_crit_edge

if.end.i.i82.if.end13.i103_crit_edge:             ; preds = %if.end.i.i82
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i103

if.then.i88:                                      ; preds = %if.end.i.i82
  %incdec.ptr.i.i83 = getelementptr i8, ptr %spec.select.i73, i32 1
  %80 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %incdec.ptr.i.i83, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i84 = ptrtoint ptr %65 to i32
  %sub.ptr.rhs.cast.i.i.i85 = ptrtoint ptr %incdec.ptr.i.i83 to i32
  %sub.ptr.sub.i.i.i86 = sub i32 %sub.ptr.lhs.cast.i.i.i84, %sub.ptr.rhs.cast.i.i.i85
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i86)
  %cmp.i.i.i87 = icmp ugt i32 %sub.ptr.sub.i.i.i86, 1
  br i1 %cmp.i.i.i87, label %if.end.i29.i94, label %if.then.i88.unpack_u16_chunk.exit.i100_crit_edge

if.then.i88.unpack_u16_chunk.exit.i100_crit_edge: ; preds = %if.then.i88
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i100

if.end.i29.i94:                                   ; preds = %if.then.i88
  call void @__sanitizer_cov_trace_pc() #18
  %81 = ptrtoint ptr %incdec.ptr.i.i83 to i32
  call void @__asan_loadN_noabort(i32 %81, i32 2)
  %82 = load i16, ptr %incdec.ptr.i.i83, align 1
  %83 = tail call i16 @llvm.bswap.i16(i16 %82) #16
  %conv.i28.i89 = zext i16 %83 to i32
  %add.ptr.i.i90 = getelementptr i8, ptr %spec.select.i73, i32 3
  %sub.ptr.rhs.cast.i24.i.i91 = ptrtoint ptr %add.ptr.i.i90 to i32
  %sub.ptr.sub.i25.i.i92 = sub i32 %sub.ptr.lhs.cast.i.i.i84, %sub.ptr.rhs.cast.i24.i.i91
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i92, i32 %conv.i28.i89)
  %cmp.i26.not.i.i93 = icmp ult i32 %sub.ptr.sub.i25.i.i92, %conv.i28.i89
  %add.ptr9.i.i95 = getelementptr i8, ptr %add.ptr.i.i90, i32 %conv.i28.i89
  %spec.select182 = select i1 %cmp.i26.not.i.i93, ptr %incdec.ptr.i.i83, ptr %add.ptr9.i.i95
  br label %unpack_u16_chunk.exit.i100

unpack_u16_chunk.exit.i100:                       ; preds = %if.end.i29.i94, %if.then.i88.unpack_u16_chunk.exit.i100_crit_edge
  %storemerge.i.i98 = phi ptr [ %incdec.ptr.i.i83, %if.then.i88.unpack_u16_chunk.exit.i100_crit_edge ], [ %spec.select182, %if.end.i29.i94 ]
  %84 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %storemerge.i.i98, ptr %pos1, align 4
  br label %if.end13.i103

if.end13.i103:                                    ; preds = %unpack_u16_chunk.exit.i100, %if.end.i.i82.if.end13.i103_crit_edge, %if.end13.if.end13.i103_crit_edge
  %85 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i102 = icmp eq ptr %65, %86
  br i1 %cmp.i.not.i33.i102, label %if.end13.i103.cleanup20.sink.split_crit_edge, label %unpack_nameX.exit111

if.end13.i103.cleanup20.sink.split_crit_edge:     ; preds = %if.end13.i103
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

unpack_nameX.exit111:                             ; preds = %if.end13.i103
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %86, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %88)
  %cmp.not.i35.i105 = icmp eq i8 %88, 8
  %incdec.ptr.i37.i106 = getelementptr i8, ptr %86, i32 1
  %spec.select.i107 = select i1 %cmp.not.i35.i105, ptr %incdec.ptr.i37.i106, ptr %spec.select.i73
  %89 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %spec.select.i107, ptr %pos1, align 4
  br i1 %cmp.not.i35.i105, label %unpack_nameX.exit111.cleanup20_crit_edge, label %unpack_nameX.exit111.cleanup20.sink.split_crit_edge

unpack_nameX.exit111.cleanup20.sink.split_crit_edge: ; preds = %unpack_nameX.exit111
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20.sink.split

unpack_nameX.exit111.cleanup20_crit_edge:         ; preds = %unpack_nameX.exit111
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup20

cleanup20.sink.split:                             ; preds = %unpack_nameX.exit111.cleanup20.sink.split_crit_edge, %if.end13.i103.cleanup20.sink.split_crit_edge, %unpack_nameX.exit77.cleanup20.sink.split_crit_edge, %if.end13.i69.cleanup20.sink.split_crit_edge, %unpack_str.exit.cleanup20.sink.split_crit_edge, %unpack_str.exit.thread, %unpack_array.exit.cleanup20.sink.split_crit_edge, %lor.lhs.false5.i.cleanup20.sink.split_crit_edge, %lor.lhs.false.i.cleanup20.sink.split_crit_edge, %unpack_u16_chunk.exit.i.cleanup20.sink.split_crit_edge, %if.end.i29.i.cleanup20.sink.split_crit_edge, %if.then.i.cleanup20.sink.split_crit_edge, %if.end.i.i.cleanup20.sink.split_crit_edge, %entry.cleanup20.sink.split_crit_edge
  %retval.0.ph = phi i1 [ true, %if.then.i.cleanup20.sink.split_crit_edge ], [ true, %if.end.i29.i.cleanup20.sink.split_crit_edge ], [ true, %unpack_u16_chunk.exit.i.cleanup20.sink.split_crit_edge ], [ true, %lor.lhs.false.i.cleanup20.sink.split_crit_edge ], [ true, %lor.lhs.false5.i.cleanup20.sink.split_crit_edge ], [ true, %if.end.i.i.cleanup20.sink.split_crit_edge ], [ true, %entry.cleanup20.sink.split_crit_edge ], [ false, %if.end13.i103.cleanup20.sink.split_crit_edge ], [ false, %if.end13.i69.cleanup20.sink.split_crit_edge ], [ false, %unpack_str.exit.thread ], [ false, %unpack_array.exit.cleanup20.sink.split_crit_edge ], [ false, %unpack_nameX.exit77.cleanup20.sink.split_crit_edge ], [ false, %unpack_nameX.exit111.cleanup20.sink.split_crit_edge ], [ false, %unpack_str.exit.cleanup20.sink.split_crit_edge ]
  %90 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %1, ptr %pos1, align 4
  br label %cleanup20

cleanup20:                                        ; preds = %cleanup20.sink.split, %unpack_nameX.exit111.cleanup20_crit_edge, %unpack_nameX.exit.cleanup20_crit_edge
  %retval.0 = phi i1 [ true, %unpack_nameX.exit.cleanup20_crit_edge ], [ true, %unpack_nameX.exit111.cleanup20_crit_edge ], [ %retval.0.ph, %cleanup20.sink.split ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @unpack_rlimits(ptr nocapture noundef %e, ptr nocapture noundef writeonly %profile) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i, label %entry.cleanup27.sink.split_crit_edge, label %if.end.i.i

entry.cleanup27.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

if.end.i.i:                                       ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.cleanup27.sink.split_crit_edge

if.end.i.i.cleanup27.sink.split_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.cleanup27.sink.split_crit_edge

if.then.i.cleanup27.sink.split_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

if.end.i29.i:                                     ; preds = %if.then.i
  %7 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.cleanup27.sink.split_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i29.i.cleanup27.sink.split_crit_edge:      ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %10 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %add.ptr9.i.i, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool3.not.i = icmp eq i16 %8, 0
  br i1 %tobool3.not.i, label %unpack_u16_chunk.exit.i.cleanup27.sink.split_crit_edge, label %lor.lhs.false.i

unpack_u16_chunk.exit.i.cleanup27.sink.split_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

lor.lhs.false.i:                                  ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i28.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.cleanup27.sink.split_crit_edge

lor.lhs.false.i.cleanup27.sink.split_crit_edge:   ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.62, ptr noundef %add.ptr.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp ne i32 %call6.i, 0
  %cmp.i.not.i33.i = icmp eq ptr %3, %add.ptr9.i.i
  %or.cond = select i1 %tobool7.not.i, i1 true, i1 %cmp.i.not.i33.i
  br i1 %or.cond, label %lor.lhs.false5.i.cleanup27.sink.split_crit_edge, label %unpack_nameX.exit

lor.lhs.false5.i.cleanup27.sink.split_crit_edge:  ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_nameX.exit:                                ; preds = %lor.lhs.false5.i
  %13 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %add.ptr9.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %14)
  %cmp.not.i35.i = icmp eq i8 %14, 7
  %incdec.ptr.i37.i = getelementptr i8, ptr %add.ptr9.i.i, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %1
  %15 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %spec.select.i, ptr %pos1, align 4
  br i1 %cmp.not.i35.i, label %if.then, label %unpack_nameX.exit.cleanup27_crit_edge

unpack_nameX.exit.cleanup27_crit_edge:            ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27

if.then:                                          ; preds = %unpack_nameX.exit
  %cmp.i.not.i.i.i = icmp eq ptr %3, %spec.select.i
  br i1 %cmp.i.not.i.i.i, label %if.then.if.end13.i.i_crit_edge, label %if.end.i.i.i

if.then.if.end13.i.i_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %if.then
  %16 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %spec.select.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %17)
  %cmp.not.i.i.i = icmp eq i8 %17, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 1
  %18 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %incdec.ptr.i.i.i, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 2)
  %20 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #16
  %conv.i28.i.i = zext i16 %21 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %22 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i.i.i, ptr %pos1, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %if.then.if.end13.i.i_crit_edge
  %23 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %3, %24
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.cleanup27.sink.split_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.cleanup27.sink.split_crit_edge:      ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %26)
  %cmp.not.i35.i.i = icmp eq i8 %26, 2
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %24, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %spec.select.i
  %27 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %spec.select.i.i, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %if.end, label %unpack_nameX.exit.i.cleanup27.sink.split_crit_edge

unpack_nameX.exit.i.cleanup27.sink.split_crit_edge: ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

if.end:                                           ; preds = %unpack_nameX.exit.i
  %28 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 4)
  %29 = load i32, ptr %spec.select.i.i, align 1
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  %31 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %add.ptr.i, ptr %pos1, align 4
  %rlimits = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 17
  %32 = ptrtoint ptr %rlimits to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %30, ptr %rlimits, align 4
  %33 = load ptr, ptr %pos1, align 4
  %34 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i45 = icmp eq ptr %35, %33
  br i1 %cmp.i.not.i.i.i45, label %if.end.if.end13.i.i68_crit_edge, label %if.end.i.i.i47

if.end.if.end13.i.i68_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i68

if.end.i.i.i47:                                   ; preds = %if.end
  %36 = ptrtoint ptr %33 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %33, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %37)
  %cmp.not.i.i.i46 = icmp eq i8 %37, 4
  br i1 %cmp.not.i.i.i46, label %if.then.i.i53, label %if.end.i.i.i47.if.end13.i.i68_crit_edge

if.end.i.i.i47.if.end13.i.i68_crit_edge:          ; preds = %if.end.i.i.i47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i68

if.then.i.i53:                                    ; preds = %if.end.i.i.i47
  %incdec.ptr.i.i.i48 = getelementptr i8, ptr %33, i32 1
  %38 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %incdec.ptr.i.i.i48, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i.i49 = ptrtoint ptr %35 to i32
  %sub.ptr.rhs.cast.i.i.i.i50 = ptrtoint ptr %incdec.ptr.i.i.i48 to i32
  %sub.ptr.sub.i.i.i.i51 = sub i32 %sub.ptr.lhs.cast.i.i.i.i49, %sub.ptr.rhs.cast.i.i.i.i50
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i51)
  %cmp.i.i.i.i52 = icmp ugt i32 %sub.ptr.sub.i.i.i.i51, 1
  br i1 %cmp.i.i.i.i52, label %if.end.i29.i.i59, label %if.then.i.i53.unpack_u16_chunk.exit.i.i65_crit_edge

if.then.i.i53.unpack_u16_chunk.exit.i.i65_crit_edge: ; preds = %if.then.i.i53
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i65

if.end.i29.i.i59:                                 ; preds = %if.then.i.i53
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %incdec.ptr.i.i.i48 to i32
  call void @__asan_loadN_noabort(i32 %39, i32 2)
  %40 = load i16, ptr %incdec.ptr.i.i.i48, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #16
  %conv.i28.i.i54 = zext i16 %41 to i32
  %add.ptr.i.i.i55 = getelementptr i8, ptr %33, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i56 = ptrtoint ptr %add.ptr.i.i.i55 to i32
  %sub.ptr.sub.i25.i.i.i57 = sub i32 %sub.ptr.lhs.cast.i.i.i.i49, %sub.ptr.rhs.cast.i24.i.i.i56
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i57, i32 %conv.i28.i.i54)
  %cmp.i26.not.i.i.i58 = icmp ult i32 %sub.ptr.sub.i25.i.i.i57, %conv.i28.i.i54
  %add.ptr9.i.i.i60 = getelementptr i8, ptr %add.ptr.i.i.i55, i32 %conv.i28.i.i54
  %spec.select208 = select i1 %cmp.i26.not.i.i.i58, ptr %incdec.ptr.i.i.i48, ptr %add.ptr9.i.i.i60
  br label %unpack_u16_chunk.exit.i.i65

unpack_u16_chunk.exit.i.i65:                      ; preds = %if.end.i29.i.i59, %if.then.i.i53.unpack_u16_chunk.exit.i.i65_crit_edge
  %storemerge.i.i.i63 = phi ptr [ %incdec.ptr.i.i.i48, %if.then.i.i53.unpack_u16_chunk.exit.i.i65_crit_edge ], [ %spec.select208, %if.end.i29.i.i59 ]
  %42 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %storemerge.i.i.i63, ptr %pos1, align 4
  br label %if.end13.i.i68

if.end13.i.i68:                                   ; preds = %unpack_u16_chunk.exit.i.i65, %if.end.i.i.i47.if.end13.i.i68_crit_edge, %if.end.if.end13.i.i68_crit_edge
  %43 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i67 = icmp eq ptr %35, %44
  br i1 %cmp.i.not.i33.i.i67, label %if.end13.i.i68.for.cond.preheader.thread_crit_edge, label %unpack_nameX.exit.i77

if.end13.i.i68.for.cond.preheader.thread_crit_edge: ; preds = %if.end13.i.i68
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.preheader.thread

unpack_nameX.exit.i77:                            ; preds = %if.end13.i.i68
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %44, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %46)
  %cmp.not.i35.i.i69 = icmp eq i8 %46, 11
  %incdec.ptr.i37.i.i70 = getelementptr i8, ptr %44, i32 1
  %spec.select.i.i71 = select i1 %cmp.not.i35.i.i69, ptr %incdec.ptr.i37.i.i70, ptr %33
  %47 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %spec.select.i.i71, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i72 = ptrtoint ptr %35 to i32
  %sub.ptr.rhs.cast.i.i73 = ptrtoint ptr %spec.select.i.i71 to i32
  %sub.ptr.sub.i.i74 = sub i32 %sub.ptr.lhs.cast.i.i72, %sub.ptr.rhs.cast.i.i73
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i74)
  %cmp.i.i75 = icmp ugt i32 %sub.ptr.sub.i.i74, 1
  %or.cond.i76 = select i1 %cmp.not.i35.i.i69, i1 %cmp.i.i75, i1 false
  br i1 %or.cond.i76, label %unpack_array.exit, label %unpack_nameX.exit.i77.for.cond.preheader.thread_crit_edge

unpack_nameX.exit.i77.for.cond.preheader.thread_crit_edge: ; preds = %unpack_nameX.exit.i77
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.preheader.thread

for.cond.preheader.thread:                        ; preds = %unpack_nameX.exit.i77.for.cond.preheader.thread_crit_edge, %if.end13.i.i68.for.cond.preheader.thread_crit_edge
  %48 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %33, ptr %pos1, align 4
  br label %for.end

unpack_array.exit:                                ; preds = %unpack_nameX.exit.i77
  %49 = ptrtoint ptr %spec.select.i.i71 to i32
  call void @__asan_loadN_noabort(i32 %49, i32 2)
  %50 = load i16, ptr %spec.select.i.i71, align 1
  %51 = tail call i16 @llvm.bswap.i16(i16 %50) #16
  %conv.i = zext i16 %51 to i32
  %add.ptr.i78 = getelementptr i8, ptr %spec.select.i.i71, i32 2
  %52 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %add.ptr.i78, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 16, i16 %51)
  %cmp = icmp ugt i16 %51, 16
  br i1 %cmp, label %unpack_array.exit.cleanup27.sink.split_crit_edge, label %for.cond.preheader

unpack_array.exit.cleanup27.sink.split_crit_edge: ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

for.cond.preheader:                               ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %50)
  %cmp7212.not = icmp eq i16 %50, 0
  br i1 %cmp7212.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0213 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call8 = tail call i32 @aa_map_resource(i32 noundef %i.0213) #16
  %53 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %pos1, align 4
  %55 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i82 = icmp eq ptr %56, %54
  br i1 %cmp.i.not.i.i.i82, label %for.body.if.end13.i.i105_crit_edge, label %if.end.i.i.i84

for.body.if.end13.i.i105_crit_edge:               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i105

if.end.i.i.i84:                                   ; preds = %for.body
  %57 = ptrtoint ptr %54 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %54, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %58)
  %cmp.not.i.i.i83 = icmp eq i8 %58, 4
  br i1 %cmp.not.i.i.i83, label %if.then.i.i90, label %if.end.i.i.i84.if.end13.i.i105_crit_edge

if.end.i.i.i84.if.end13.i.i105_crit_edge:         ; preds = %if.end.i.i.i84
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i105

if.then.i.i90:                                    ; preds = %if.end.i.i.i84
  %incdec.ptr.i.i.i85 = getelementptr i8, ptr %54, i32 1
  %59 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %incdec.ptr.i.i.i85, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i.i86 = ptrtoint ptr %56 to i32
  %sub.ptr.rhs.cast.i.i.i.i87 = ptrtoint ptr %incdec.ptr.i.i.i85 to i32
  %sub.ptr.sub.i.i.i.i88 = sub i32 %sub.ptr.lhs.cast.i.i.i.i86, %sub.ptr.rhs.cast.i.i.i.i87
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i88)
  %cmp.i.i.i.i89 = icmp ugt i32 %sub.ptr.sub.i.i.i.i88, 1
  br i1 %cmp.i.i.i.i89, label %if.end.i29.i.i96, label %if.then.i.i90.unpack_u16_chunk.exit.i.i102_crit_edge

if.then.i.i90.unpack_u16_chunk.exit.i.i102_crit_edge: ; preds = %if.then.i.i90
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i102

if.end.i29.i.i96:                                 ; preds = %if.then.i.i90
  call void @__sanitizer_cov_trace_pc() #18
  %60 = ptrtoint ptr %incdec.ptr.i.i.i85 to i32
  call void @__asan_loadN_noabort(i32 %60, i32 2)
  %61 = load i16, ptr %incdec.ptr.i.i.i85, align 1
  %62 = tail call i16 @llvm.bswap.i16(i16 %61) #16
  %conv.i28.i.i91 = zext i16 %62 to i32
  %add.ptr.i.i.i92 = getelementptr i8, ptr %54, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i93 = ptrtoint ptr %add.ptr.i.i.i92 to i32
  %sub.ptr.sub.i25.i.i.i94 = sub i32 %sub.ptr.lhs.cast.i.i.i.i86, %sub.ptr.rhs.cast.i24.i.i.i93
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i94, i32 %conv.i28.i.i91)
  %cmp.i26.not.i.i.i95 = icmp ult i32 %sub.ptr.sub.i25.i.i.i94, %conv.i28.i.i91
  %add.ptr9.i.i.i97 = getelementptr i8, ptr %add.ptr.i.i.i92, i32 %conv.i28.i.i91
  %spec.select209 = select i1 %cmp.i26.not.i.i.i95, ptr %incdec.ptr.i.i.i85, ptr %add.ptr9.i.i.i97
  br label %unpack_u16_chunk.exit.i.i102

unpack_u16_chunk.exit.i.i102:                     ; preds = %if.end.i29.i.i96, %if.then.i.i90.unpack_u16_chunk.exit.i.i102_crit_edge
  %storemerge.i.i.i100 = phi ptr [ %incdec.ptr.i.i.i85, %if.then.i.i90.unpack_u16_chunk.exit.i.i102_crit_edge ], [ %spec.select209, %if.end.i29.i.i96 ]
  %63 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %storemerge.i.i.i100, ptr %pos1, align 4
  br label %if.end13.i.i105

if.end13.i.i105:                                  ; preds = %unpack_u16_chunk.exit.i.i102, %if.end.i.i.i84.if.end13.i.i105_crit_edge, %for.body.if.end13.i.i105_crit_edge
  %64 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i104 = icmp eq ptr %56, %65
  br i1 %cmp.i.not.i33.i.i104, label %if.end13.i.i105.cleanup27.sink.split_crit_edge, label %unpack_nameX.exit.i114

if.end13.i.i105.cleanup27.sink.split_crit_edge:   ; preds = %if.end13.i.i105
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_nameX.exit.i114:                           ; preds = %if.end13.i.i105
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %65, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %67)
  %cmp.not.i35.i.i106 = icmp eq i8 %67, 3
  %incdec.ptr.i37.i.i107 = getelementptr i8, ptr %65, i32 1
  %spec.select.i.i108 = select i1 %cmp.not.i35.i.i106, ptr %incdec.ptr.i37.i.i107, ptr %54
  %68 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %spec.select.i.i108, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i109 = ptrtoint ptr %56 to i32
  %sub.ptr.rhs.cast.i.i110 = ptrtoint ptr %spec.select.i.i108 to i32
  %sub.ptr.sub.i.i111 = sub i32 %sub.ptr.lhs.cast.i.i109, %sub.ptr.rhs.cast.i.i110
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %sub.ptr.sub.i.i111)
  %cmp.i.i112 = icmp ugt i32 %sub.ptr.sub.i.i111, 7
  %or.cond.i113 = select i1 %cmp.not.i35.i.i106, i1 %cmp.i.i112, i1 false
  br i1 %or.cond.i113, label %for.inc, label %unpack_nameX.exit.i114.cleanup27.sink.split_crit_edge

unpack_nameX.exit.i114.cleanup27.sink.split_crit_edge: ; preds = %unpack_nameX.exit.i114
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

for.inc:                                          ; preds = %unpack_nameX.exit.i114
  %69 = ptrtoint ptr %spec.select.i.i108 to i32
  call void @__asan_loadN_noabort(i32 %69, i32 8)
  %70 = load i64, ptr %spec.select.i.i108, align 1
  %71 = tail call i64 @llvm.bswap.i64(i64 %70) #16
  %add.ptr.i116 = getelementptr i8, ptr %spec.select.i.i108, i32 8
  %72 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %add.ptr.i116, ptr %pos1, align 4
  %conv = trunc i64 %71 to i32
  %rlim_max = getelementptr %struct.aa_profile, ptr %profile, i32 0, i32 17, i32 1, i32 %call8, i32 1
  %73 = ptrtoint ptr %rlim_max to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %conv, ptr %rlim_max, align 4
  %inc = add nuw nsw i32 %i.0213, 1
  %exitcond.not = icmp eq i32 %inc, %conv.i
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge, %for.cond.preheader.thread
  %74 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pos1, align 4
  %76 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i121 = icmp eq ptr %77, %75
  br i1 %cmp.i.not.i.i121, label %for.end.if.end13.i144_crit_edge, label %if.end.i.i123

for.end.if.end13.i144_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i144

if.end.i.i123:                                    ; preds = %for.end
  %78 = ptrtoint ptr %75 to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %75, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %79)
  %cmp.not.i.i122 = icmp eq i8 %79, 4
  br i1 %cmp.not.i.i122, label %if.then.i129, label %if.end.i.i123.if.end13.i144_crit_edge

if.end.i.i123.if.end13.i144_crit_edge:            ; preds = %if.end.i.i123
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i144

if.then.i129:                                     ; preds = %if.end.i.i123
  %incdec.ptr.i.i124 = getelementptr i8, ptr %75, i32 1
  %80 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %incdec.ptr.i.i124, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i125 = ptrtoint ptr %77 to i32
  %sub.ptr.rhs.cast.i.i.i126 = ptrtoint ptr %incdec.ptr.i.i124 to i32
  %sub.ptr.sub.i.i.i127 = sub i32 %sub.ptr.lhs.cast.i.i.i125, %sub.ptr.rhs.cast.i.i.i126
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i127)
  %cmp.i.i.i128 = icmp ugt i32 %sub.ptr.sub.i.i.i127, 1
  br i1 %cmp.i.i.i128, label %if.end.i29.i135, label %if.then.i129.unpack_u16_chunk.exit.i141_crit_edge

if.then.i129.unpack_u16_chunk.exit.i141_crit_edge: ; preds = %if.then.i129
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i141

if.end.i29.i135:                                  ; preds = %if.then.i129
  call void @__sanitizer_cov_trace_pc() #18
  %81 = ptrtoint ptr %incdec.ptr.i.i124 to i32
  call void @__asan_loadN_noabort(i32 %81, i32 2)
  %82 = load i16, ptr %incdec.ptr.i.i124, align 1
  %83 = tail call i16 @llvm.bswap.i16(i16 %82) #16
  %conv.i28.i130 = zext i16 %83 to i32
  %add.ptr.i.i131 = getelementptr i8, ptr %75, i32 3
  %sub.ptr.rhs.cast.i24.i.i132 = ptrtoint ptr %add.ptr.i.i131 to i32
  %sub.ptr.sub.i25.i.i133 = sub i32 %sub.ptr.lhs.cast.i.i.i125, %sub.ptr.rhs.cast.i24.i.i132
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i133, i32 %conv.i28.i130)
  %cmp.i26.not.i.i134 = icmp ult i32 %sub.ptr.sub.i25.i.i133, %conv.i28.i130
  %add.ptr9.i.i136 = getelementptr i8, ptr %add.ptr.i.i131, i32 %conv.i28.i130
  %spec.select210 = select i1 %cmp.i26.not.i.i134, ptr %incdec.ptr.i.i124, ptr %add.ptr9.i.i136
  br label %unpack_u16_chunk.exit.i141

unpack_u16_chunk.exit.i141:                       ; preds = %if.end.i29.i135, %if.then.i129.unpack_u16_chunk.exit.i141_crit_edge
  %storemerge.i.i139 = phi ptr [ %incdec.ptr.i.i124, %if.then.i129.unpack_u16_chunk.exit.i141_crit_edge ], [ %spec.select210, %if.end.i29.i135 ]
  %84 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %storemerge.i.i139, ptr %pos1, align 4
  br label %if.end13.i144

if.end13.i144:                                    ; preds = %unpack_u16_chunk.exit.i141, %if.end.i.i123.if.end13.i144_crit_edge, %for.end.if.end13.i144_crit_edge
  %85 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i143 = icmp eq ptr %77, %86
  br i1 %cmp.i.not.i33.i143, label %if.end13.i144.cleanup27.sink.split_crit_edge, label %unpack_nameX.exit152

if.end13.i144.cleanup27.sink.split_crit_edge:     ; preds = %if.end13.i144
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_nameX.exit152:                             ; preds = %if.end13.i144
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %86, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %88)
  %cmp.not.i35.i146 = icmp eq i8 %88, 12
  %incdec.ptr.i37.i147 = getelementptr i8, ptr %86, i32 1
  %spec.select.i148 = select i1 %cmp.not.i35.i146, ptr %incdec.ptr.i37.i147, ptr %75
  %89 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %spec.select.i148, ptr %pos1, align 4
  br i1 %cmp.not.i35.i146, label %if.end16, label %unpack_nameX.exit152.cleanup27.sink.split_crit_edge

unpack_nameX.exit152.cleanup27.sink.split_crit_edge: ; preds = %unpack_nameX.exit152
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

if.end16:                                         ; preds = %unpack_nameX.exit152
  %cmp.i.not.i.i155 = icmp eq ptr %77, %spec.select.i148
  br i1 %cmp.i.not.i.i155, label %if.end16.if.end13.i178_crit_edge, label %if.end.i.i157

if.end16.if.end13.i178_crit_edge:                 ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i178

if.end.i.i157:                                    ; preds = %if.end16
  %90 = ptrtoint ptr %spec.select.i148 to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %spec.select.i148, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %91)
  %cmp.not.i.i156 = icmp eq i8 %91, 4
  br i1 %cmp.not.i.i156, label %if.then.i163, label %if.end.i.i157.if.end13.i178_crit_edge

if.end.i.i157.if.end13.i178_crit_edge:            ; preds = %if.end.i.i157
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i178

if.then.i163:                                     ; preds = %if.end.i.i157
  %incdec.ptr.i.i158 = getelementptr i8, ptr %spec.select.i148, i32 1
  %92 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %incdec.ptr.i.i158, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i159 = ptrtoint ptr %77 to i32
  %sub.ptr.rhs.cast.i.i.i160 = ptrtoint ptr %incdec.ptr.i.i158 to i32
  %sub.ptr.sub.i.i.i161 = sub i32 %sub.ptr.lhs.cast.i.i.i159, %sub.ptr.rhs.cast.i.i.i160
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i161)
  %cmp.i.i.i162 = icmp ugt i32 %sub.ptr.sub.i.i.i161, 1
  br i1 %cmp.i.i.i162, label %if.end.i29.i169, label %if.then.i163.unpack_u16_chunk.exit.i175_crit_edge

if.then.i163.unpack_u16_chunk.exit.i175_crit_edge: ; preds = %if.then.i163
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i175

if.end.i29.i169:                                  ; preds = %if.then.i163
  call void @__sanitizer_cov_trace_pc() #18
  %93 = ptrtoint ptr %incdec.ptr.i.i158 to i32
  call void @__asan_loadN_noabort(i32 %93, i32 2)
  %94 = load i16, ptr %incdec.ptr.i.i158, align 1
  %95 = tail call i16 @llvm.bswap.i16(i16 %94) #16
  %conv.i28.i164 = zext i16 %95 to i32
  %add.ptr.i.i165 = getelementptr i8, ptr %spec.select.i148, i32 3
  %sub.ptr.rhs.cast.i24.i.i166 = ptrtoint ptr %add.ptr.i.i165 to i32
  %sub.ptr.sub.i25.i.i167 = sub i32 %sub.ptr.lhs.cast.i.i.i159, %sub.ptr.rhs.cast.i24.i.i166
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i167, i32 %conv.i28.i164)
  %cmp.i26.not.i.i168 = icmp ult i32 %sub.ptr.sub.i25.i.i167, %conv.i28.i164
  %add.ptr9.i.i170 = getelementptr i8, ptr %add.ptr.i.i165, i32 %conv.i28.i164
  %spec.select211 = select i1 %cmp.i26.not.i.i168, ptr %incdec.ptr.i.i158, ptr %add.ptr9.i.i170
  br label %unpack_u16_chunk.exit.i175

unpack_u16_chunk.exit.i175:                       ; preds = %if.end.i29.i169, %if.then.i163.unpack_u16_chunk.exit.i175_crit_edge
  %storemerge.i.i173 = phi ptr [ %incdec.ptr.i.i158, %if.then.i163.unpack_u16_chunk.exit.i175_crit_edge ], [ %spec.select211, %if.end.i29.i169 ]
  %96 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %storemerge.i.i173, ptr %pos1, align 4
  br label %if.end13.i178

if.end13.i178:                                    ; preds = %unpack_u16_chunk.exit.i175, %if.end.i.i157.if.end13.i178_crit_edge, %if.end16.if.end13.i178_crit_edge
  %97 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i177 = icmp eq ptr %77, %98
  br i1 %cmp.i.not.i33.i177, label %if.end13.i178.cleanup27.sink.split_crit_edge, label %unpack_nameX.exit186

if.end13.i178.cleanup27.sink.split_crit_edge:     ; preds = %if.end13.i178
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_nameX.exit186:                             ; preds = %if.end13.i178
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %98, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %100)
  %cmp.not.i35.i180 = icmp eq i8 %100, 8
  %incdec.ptr.i37.i181 = getelementptr i8, ptr %98, i32 1
  %spec.select.i182 = select i1 %cmp.not.i35.i180, ptr %incdec.ptr.i37.i181, ptr %spec.select.i148
  %101 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %spec.select.i182, ptr %pos1, align 4
  br i1 %cmp.not.i35.i180, label %unpack_nameX.exit186.cleanup27_crit_edge, label %unpack_nameX.exit186.cleanup27.sink.split_crit_edge

unpack_nameX.exit186.cleanup27.sink.split_crit_edge: ; preds = %unpack_nameX.exit186
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27.sink.split

unpack_nameX.exit186.cleanup27_crit_edge:         ; preds = %unpack_nameX.exit186
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup27

cleanup27.sink.split:                             ; preds = %unpack_nameX.exit186.cleanup27.sink.split_crit_edge, %if.end13.i178.cleanup27.sink.split_crit_edge, %unpack_nameX.exit152.cleanup27.sink.split_crit_edge, %if.end13.i144.cleanup27.sink.split_crit_edge, %unpack_nameX.exit.i114.cleanup27.sink.split_crit_edge, %if.end13.i.i105.cleanup27.sink.split_crit_edge, %unpack_array.exit.cleanup27.sink.split_crit_edge, %unpack_nameX.exit.i.cleanup27.sink.split_crit_edge, %if.end13.i.i.cleanup27.sink.split_crit_edge, %lor.lhs.false5.i.cleanup27.sink.split_crit_edge, %lor.lhs.false.i.cleanup27.sink.split_crit_edge, %unpack_u16_chunk.exit.i.cleanup27.sink.split_crit_edge, %if.end.i29.i.cleanup27.sink.split_crit_edge, %if.then.i.cleanup27.sink.split_crit_edge, %if.end.i.i.cleanup27.sink.split_crit_edge, %entry.cleanup27.sink.split_crit_edge
  %retval.0.ph = phi i1 [ true, %if.then.i.cleanup27.sink.split_crit_edge ], [ true, %if.end.i29.i.cleanup27.sink.split_crit_edge ], [ true, %unpack_u16_chunk.exit.i.cleanup27.sink.split_crit_edge ], [ true, %lor.lhs.false.i.cleanup27.sink.split_crit_edge ], [ true, %lor.lhs.false5.i.cleanup27.sink.split_crit_edge ], [ true, %if.end.i.i.cleanup27.sink.split_crit_edge ], [ true, %entry.cleanup27.sink.split_crit_edge ], [ false, %if.end13.i178.cleanup27.sink.split_crit_edge ], [ false, %if.end13.i144.cleanup27.sink.split_crit_edge ], [ false, %if.end13.i.i.cleanup27.sink.split_crit_edge ], [ false, %unpack_nameX.exit.i.cleanup27.sink.split_crit_edge ], [ false, %unpack_array.exit.cleanup27.sink.split_crit_edge ], [ false, %unpack_nameX.exit152.cleanup27.sink.split_crit_edge ], [ false, %unpack_nameX.exit186.cleanup27.sink.split_crit_edge ], [ false, %if.end13.i.i105.cleanup27.sink.split_crit_edge ], [ false, %unpack_nameX.exit.i114.cleanup27.sink.split_crit_edge ]
  %102 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %1, ptr %pos1, align 4
  br label %cleanup27

cleanup27:                                        ; preds = %cleanup27.sink.split, %unpack_nameX.exit186.cleanup27_crit_edge, %unpack_nameX.exit.cleanup27_crit_edge
  %retval.0 = phi i1 [ true, %unpack_nameX.exit.cleanup27_crit_edge ], [ true, %unpack_nameX.exit186.cleanup27_crit_edge ], [ %retval.0.ph, %cleanup27.sink.split ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @unpack_secmark(ptr nocapture noundef %e, ptr nocapture noundef %profile) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i, label %entry.cleanup.sink.split_crit_edge, label %if.end.i.i

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end.i.i:                                       ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.cleanup.sink.split_crit_edge

if.end.i.i.cleanup.sink.split_crit_edge:          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.cleanup.sink.split_crit_edge

if.then.i.cleanup.sink.split_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end.i29.i:                                     ; preds = %if.then.i
  %7 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.cleanup.sink.split_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i29.i.cleanup.sink.split_crit_edge:        ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %10 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %add.ptr9.i.i, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool3.not.i = icmp eq i16 %8, 0
  br i1 %tobool3.not.i, label %unpack_u16_chunk.exit.i.cleanup.sink.split_crit_edge, label %lor.lhs.false.i

unpack_u16_chunk.exit.i.cleanup.sink.split_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

lor.lhs.false.i:                                  ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i28.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.cleanup.sink.split_crit_edge

lor.lhs.false.i.cleanup.sink.split_crit_edge:     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.63, ptr noundef %add.ptr.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp ne i32 %call6.i, 0
  %cmp.i.not.i33.i = icmp eq ptr %3, %add.ptr9.i.i
  %or.cond = select i1 %tobool7.not.i, i1 true, i1 %cmp.i.not.i33.i
  br i1 %or.cond, label %lor.lhs.false5.i.cleanup.sink.split_crit_edge, label %unpack_nameX.exit

lor.lhs.false5.i.cleanup.sink.split_crit_edge:    ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

unpack_nameX.exit:                                ; preds = %lor.lhs.false5.i
  %13 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %add.ptr9.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %14)
  %cmp.not.i35.i = icmp eq i8 %14, 7
  %incdec.ptr.i37.i = getelementptr i8, ptr %add.ptr9.i.i, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %1
  %15 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %spec.select.i, ptr %pos1, align 4
  br i1 %cmp.not.i35.i, label %if.then, label %unpack_nameX.exit.cleanup_crit_edge

unpack_nameX.exit.cleanup_crit_edge:              ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %unpack_nameX.exit
  %cmp.i.not.i.i.i = icmp eq ptr %3, %spec.select.i
  br i1 %cmp.i.not.i.i.i, label %if.then.if.end13.i.i_crit_edge, label %if.end.i.i.i

if.then.if.end13.i.i_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %if.then
  %16 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %spec.select.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %17)
  %cmp.not.i.i.i = icmp eq i8 %17, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 1
  %18 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %incdec.ptr.i.i.i, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 2)
  %20 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #16
  %conv.i28.i.i = zext i16 %21 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %22 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i.i.i, ptr %pos1, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %if.then.if.end13.i.i_crit_edge
  %23 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %3, %24
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_array.exit_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_array.exit_crit_edge:         ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %26)
  %cmp.not.i35.i.i = icmp eq i8 %26, 11
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %24, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %spec.select.i
  %27 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %spec.select.i.i, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %cleanup.thread.i, label %unpack_nameX.exit.i.unpack_array.exit_crit_edge

unpack_nameX.exit.i.unpack_array.exit_crit_edge:  ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

cleanup.thread.i:                                 ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 2)
  %29 = load i16, ptr %spec.select.i.i, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #16
  %conv.i = zext i16 %30 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  br label %unpack_array.exit

unpack_array.exit:                                ; preds = %cleanup.thread.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge, %if.end13.i.i.unpack_array.exit_crit_edge
  %storemerge.i76 = phi ptr [ %add.ptr.i, %cleanup.thread.i ], [ %incdec.ptr.i37.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ %incdec.ptr.i37.i, %if.end13.i.i.unpack_array.exit_crit_edge ]
  %retval.1.i = phi i32 [ %conv.i, %cleanup.thread.i ], [ 0, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ 0, %if.end13.i.i.unpack_array.exit_crit_edge ]
  %31 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %storemerge.i76, ptr %pos1, align 4
  %32 = mul nuw nsw i32 %retval.1.i, 12
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %32, i32 noundef 3520) #21
  %secmark = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 19
  %33 = ptrtoint ptr %secmark to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call8.i.i, ptr %secmark, align 4
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %unpack_array.exit.cleanup.sink.split_crit_edge, label %if.end

unpack_array.exit.cleanup.sink.split_crit_edge:   ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end:                                           ; preds = %unpack_array.exit
  %secmark_count = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 18
  %34 = ptrtoint ptr %secmark_count to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %retval.1.i, ptr %secmark_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %cmp312.not = icmp eq i32 %retval.1.i, 0
  br i1 %cmp312.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.cond:                                         ; preds = %unpack_str.exit
  %inc = add nuw nsw i32 %i.0313, 1
  %exitcond.not = icmp eq i32 %inc, %retval.1.i
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.0313 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %35 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %secmark, align 4
  %arrayidx = getelementptr %struct.aa_secmark, ptr %36, i32 %i.0313
  %37 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pos1, align 4
  %39 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i83 = icmp eq ptr %40, %38
  br i1 %cmp.i.not.i.i.i83, label %for.body.if.end13.i.i103_crit_edge, label %if.end.i.i.i85

for.body.if.end13.i.i103_crit_edge:               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i103

if.end.i.i.i85:                                   ; preds = %for.body
  %41 = ptrtoint ptr %38 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %38, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %42)
  %cmp.not.i.i.i84 = icmp eq i8 %42, 4
  br i1 %cmp.not.i.i.i84, label %if.then.i.i91, label %if.end.i.i.i85.if.end13.i.i103_crit_edge

if.end.i.i.i85.if.end13.i.i103_crit_edge:         ; preds = %if.end.i.i.i85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i103

if.then.i.i91:                                    ; preds = %if.end.i.i.i85
  %incdec.ptr.i.i.i86 = getelementptr i8, ptr %38, i32 1
  %43 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %incdec.ptr.i.i.i86, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i.i87 = ptrtoint ptr %40 to i32
  %sub.ptr.rhs.cast.i.i.i.i88 = ptrtoint ptr %incdec.ptr.i.i.i86 to i32
  %sub.ptr.sub.i.i.i.i89 = sub i32 %sub.ptr.lhs.cast.i.i.i.i87, %sub.ptr.rhs.cast.i.i.i.i88
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i89)
  %cmp.i.i.i.i90 = icmp ugt i32 %sub.ptr.sub.i.i.i.i89, 1
  br i1 %cmp.i.i.i.i90, label %if.end.i29.i.i99, label %if.then.i.i91.unpack_u16_chunk.exit.i.i101_crit_edge

if.then.i.i91.unpack_u16_chunk.exit.i.i101_crit_edge: ; preds = %if.then.i.i91
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i101

if.end.i29.i.i99:                                 ; preds = %if.then.i.i91
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %incdec.ptr.i.i.i86 to i32
  call void @__asan_loadN_noabort(i32 %44, i32 2)
  %45 = load i16, ptr %incdec.ptr.i.i.i86, align 1
  %46 = tail call i16 @llvm.bswap.i16(i16 %45) #16
  %conv.i28.i.i92 = zext i16 %46 to i32
  %add.ptr.i.i.i93 = getelementptr i8, ptr %38, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i94 = ptrtoint ptr %add.ptr.i.i.i93 to i32
  %sub.ptr.sub.i25.i.i.i95 = sub i32 %sub.ptr.lhs.cast.i.i.i.i87, %sub.ptr.rhs.cast.i24.i.i.i94
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i95, i32 %conv.i28.i.i92)
  %cmp.i26.not.i.i.i96 = icmp ult i32 %sub.ptr.sub.i25.i.i.i95, %conv.i28.i.i92
  %add.ptr9.i.i.i97 = getelementptr i8, ptr %add.ptr.i.i.i93, i32 %conv.i28.i.i92
  %spec.select.i98 = select i1 %cmp.i26.not.i.i.i96, ptr %incdec.ptr.i.i.i86, ptr %add.ptr9.i.i.i97
  br label %unpack_u16_chunk.exit.i.i101

unpack_u16_chunk.exit.i.i101:                     ; preds = %if.end.i29.i.i99, %if.then.i.i91.unpack_u16_chunk.exit.i.i101_crit_edge
  %storemerge.i.i.i100 = phi ptr [ %incdec.ptr.i.i.i86, %if.then.i.i91.unpack_u16_chunk.exit.i.i101_crit_edge ], [ %spec.select.i98, %if.end.i29.i.i99 ]
  %47 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %storemerge.i.i.i100, ptr %pos1, align 4
  br label %if.end13.i.i103

if.end13.i.i103:                                  ; preds = %unpack_u16_chunk.exit.i.i101, %if.end.i.i.i85.if.end13.i.i103_crit_edge, %for.body.if.end13.i.i103_crit_edge
  %48 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i102 = icmp eq ptr %40, %49
  br i1 %cmp.i.not.i33.i.i102, label %if.end13.i.i103.unpack_u8.exit.thread_crit_edge, label %unpack_nameX.exit.i109

if.end13.i.i103.unpack_u8.exit.thread_crit_edge:  ; preds = %if.end13.i.i103
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u8.exit.thread

unpack_nameX.exit.i109:                           ; preds = %if.end13.i.i103
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %49, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %cmp.not.i35.i.i104 = icmp eq i8 %51, 0
  %incdec.ptr.i37.i.i105 = getelementptr i8, ptr %49, i32 1
  %spec.select.i.i106 = select i1 %cmp.not.i35.i.i104, ptr %incdec.ptr.i37.i.i105, ptr %38
  %52 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %spec.select.i.i106, ptr %pos1, align 4
  %cmp.i.i107 = icmp ne ptr %40, %spec.select.i.i106
  %or.cond.i108 = select i1 %cmp.not.i35.i.i104, i1 %cmp.i.i107, i1 false
  br i1 %or.cond.i108, label %if.end.i, label %unpack_nameX.exit.i109.unpack_u8.exit.thread_crit_edge

unpack_nameX.exit.i109.unpack_u8.exit.thread_crit_edge: ; preds = %unpack_nameX.exit.i109
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u8.exit.thread

if.end.i:                                         ; preds = %unpack_nameX.exit.i109
  %tobool.not.i = icmp eq ptr %arrayidx, null
  br i1 %tobool.not.i, label %if.end.i.if.end9_crit_edge, label %if.then4.i

if.end.i.if.end9_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %53 = ptrtoint ptr %spec.select.i.i106 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %spec.select.i.i106, align 1
  %55 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %54, ptr %arrayidx, align 1
  br label %if.end9

unpack_u8.exit.thread:                            ; preds = %unpack_nameX.exit.i109.unpack_u8.exit.thread_crit_edge, %if.end13.i.i103.unpack_u8.exit.thread_crit_edge
  %56 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %38, ptr %pos1, align 4
  br label %fail

if.end9:                                          ; preds = %if.then4.i, %if.end.i.if.end9_crit_edge
  %57 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %pos1, align 4
  %add.ptr.i110 = getelementptr i8, ptr %58, i32 1
  store ptr %add.ptr.i110, ptr %pos1, align 4
  %59 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %secmark, align 4
  %deny = getelementptr %struct.aa_secmark, ptr %60, i32 %i.0313, i32 1
  %61 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i115 = icmp eq ptr %62, %add.ptr.i110
  br i1 %cmp.i.not.i.i.i115, label %if.end9.if.end13.i.i135_crit_edge, label %if.end.i.i.i117

if.end9.if.end13.i.i135_crit_edge:                ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i135

if.end.i.i.i117:                                  ; preds = %if.end9
  %63 = ptrtoint ptr %add.ptr.i110 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %add.ptr.i110, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %64)
  %cmp.not.i.i.i116 = icmp eq i8 %64, 4
  br i1 %cmp.not.i.i.i116, label %if.then.i.i123, label %if.end.i.i.i117.if.end13.i.i135_crit_edge

if.end.i.i.i117.if.end13.i.i135_crit_edge:        ; preds = %if.end.i.i.i117
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i135

if.then.i.i123:                                   ; preds = %if.end.i.i.i117
  %incdec.ptr.i.i.i118 = getelementptr i8, ptr %58, i32 2
  %65 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %incdec.ptr.i.i.i118, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i.i119 = ptrtoint ptr %62 to i32
  %sub.ptr.rhs.cast.i.i.i.i120 = ptrtoint ptr %incdec.ptr.i.i.i118 to i32
  %sub.ptr.sub.i.i.i.i121 = sub i32 %sub.ptr.lhs.cast.i.i.i.i119, %sub.ptr.rhs.cast.i.i.i.i120
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i121)
  %cmp.i.i.i.i122 = icmp ugt i32 %sub.ptr.sub.i.i.i.i121, 1
  br i1 %cmp.i.i.i.i122, label %if.end.i29.i.i131, label %if.then.i.i123.unpack_u16_chunk.exit.i.i133_crit_edge

if.then.i.i123.unpack_u16_chunk.exit.i.i133_crit_edge: ; preds = %if.then.i.i123
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i133

if.end.i29.i.i131:                                ; preds = %if.then.i.i123
  call void @__sanitizer_cov_trace_pc() #18
  %66 = ptrtoint ptr %incdec.ptr.i.i.i118 to i32
  call void @__asan_loadN_noabort(i32 %66, i32 2)
  %67 = load i16, ptr %incdec.ptr.i.i.i118, align 1
  %68 = tail call i16 @llvm.bswap.i16(i16 %67) #16
  %conv.i28.i.i124 = zext i16 %68 to i32
  %add.ptr.i.i.i125 = getelementptr i8, ptr %58, i32 4
  %sub.ptr.rhs.cast.i24.i.i.i126 = ptrtoint ptr %add.ptr.i.i.i125 to i32
  %sub.ptr.sub.i25.i.i.i127 = sub i32 %sub.ptr.lhs.cast.i.i.i.i119, %sub.ptr.rhs.cast.i24.i.i.i126
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i127, i32 %conv.i28.i.i124)
  %cmp.i26.not.i.i.i128 = icmp ult i32 %sub.ptr.sub.i25.i.i.i127, %conv.i28.i.i124
  %add.ptr9.i.i.i129 = getelementptr i8, ptr %add.ptr.i.i.i125, i32 %conv.i28.i.i124
  %spec.select.i130 = select i1 %cmp.i26.not.i.i.i128, ptr %incdec.ptr.i.i.i118, ptr %add.ptr9.i.i.i129
  br label %unpack_u16_chunk.exit.i.i133

unpack_u16_chunk.exit.i.i133:                     ; preds = %if.end.i29.i.i131, %if.then.i.i123.unpack_u16_chunk.exit.i.i133_crit_edge
  %storemerge.i.i.i132 = phi ptr [ %incdec.ptr.i.i.i118, %if.then.i.i123.unpack_u16_chunk.exit.i.i133_crit_edge ], [ %spec.select.i130, %if.end.i29.i.i131 ]
  %69 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %storemerge.i.i.i132, ptr %pos1, align 4
  br label %if.end13.i.i135

if.end13.i.i135:                                  ; preds = %unpack_u16_chunk.exit.i.i133, %if.end.i.i.i117.if.end13.i.i135_crit_edge, %if.end9.if.end13.i.i135_crit_edge
  %70 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i134 = icmp eq ptr %62, %71
  br i1 %cmp.i.not.i33.i.i134, label %if.end13.i.i135.unpack_u8.exit149.thread_crit_edge, label %unpack_nameX.exit.i141

if.end13.i.i135.unpack_u8.exit149.thread_crit_edge: ; preds = %if.end13.i.i135
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u8.exit149.thread

unpack_nameX.exit.i141:                           ; preds = %if.end13.i.i135
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %71, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %73)
  %cmp.not.i35.i.i136 = icmp eq i8 %73, 0
  %incdec.ptr.i37.i.i137 = getelementptr i8, ptr %71, i32 1
  %spec.select.i.i138 = select i1 %cmp.not.i35.i.i136, ptr %incdec.ptr.i37.i.i137, ptr %add.ptr.i110
  %74 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %spec.select.i.i138, ptr %pos1, align 4
  %cmp.i.i139 = icmp ne ptr %62, %spec.select.i.i138
  %or.cond.i140 = select i1 %cmp.not.i35.i.i136, i1 %cmp.i.i139, i1 false
  br i1 %or.cond.i140, label %if.end.i143, label %unpack_nameX.exit.i141.unpack_u8.exit149.thread_crit_edge

unpack_nameX.exit.i141.unpack_u8.exit149.thread_crit_edge: ; preds = %unpack_nameX.exit.i141
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u8.exit149.thread

if.end.i143:                                      ; preds = %unpack_nameX.exit.i141
  %tobool.not.i142 = icmp eq ptr %deny, null
  br i1 %tobool.not.i142, label %if.end.i143.if.end14_crit_edge, label %if.then4.i144

if.end.i143.if.end14_crit_edge:                   ; preds = %if.end.i143
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then4.i144:                                    ; preds = %if.end.i143
  call void @__sanitizer_cov_trace_pc() #18
  %75 = ptrtoint ptr %spec.select.i.i138 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %spec.select.i.i138, align 1
  %77 = ptrtoint ptr %deny to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 %76, ptr %deny, align 1
  br label %if.end14

unpack_u8.exit149.thread:                         ; preds = %unpack_nameX.exit.i141.unpack_u8.exit149.thread_crit_edge, %if.end13.i.i135.unpack_u8.exit149.thread_crit_edge
  %78 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %add.ptr.i110, ptr %pos1, align 4
  br label %fail

if.end14:                                         ; preds = %if.then4.i144, %if.end.i143.if.end14_crit_edge
  %79 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %pos1, align 4
  %add.ptr.i145 = getelementptr i8, ptr %80, i32 1
  store ptr %add.ptr.i145, ptr %pos1, align 4
  %81 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %secmark, align 4
  %label = getelementptr %struct.aa_secmark, ptr %82, i32 %i.0313, i32 3
  %83 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i226 = icmp eq ptr %84, %add.ptr.i145
  br i1 %cmp.i.not.i.i.i226, label %if.end14.if.end13.i.i249_crit_edge, label %if.end.i.i.i228

if.end14.if.end13.i.i249_crit_edge:               ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i249

if.end.i.i.i228:                                  ; preds = %if.end14
  %85 = ptrtoint ptr %add.ptr.i145 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %add.ptr.i145, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %86)
  %cmp.not.i.i.i227 = icmp eq i8 %86, 4
  br i1 %cmp.not.i.i.i227, label %if.then.i.i234, label %if.end.i.i.i228.if.end13.i.i249_crit_edge

if.end.i.i.i228.if.end13.i.i249_crit_edge:        ; preds = %if.end.i.i.i228
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i249

if.then.i.i234:                                   ; preds = %if.end.i.i.i228
  %incdec.ptr.i.i.i229 = getelementptr i8, ptr %80, i32 2
  %87 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %incdec.ptr.i.i.i229, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i.i230 = ptrtoint ptr %84 to i32
  %sub.ptr.rhs.cast.i.i.i.i231 = ptrtoint ptr %incdec.ptr.i.i.i229 to i32
  %sub.ptr.sub.i.i.i.i232 = sub i32 %sub.ptr.lhs.cast.i.i.i.i230, %sub.ptr.rhs.cast.i.i.i.i231
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i232)
  %cmp.i.i.i.i233 = icmp ugt i32 %sub.ptr.sub.i.i.i.i232, 1
  br i1 %cmp.i.i.i.i233, label %if.end.i29.i.i240, label %if.then.i.i234.unpack_u16_chunk.exit.i.i246_crit_edge

if.then.i.i234.unpack_u16_chunk.exit.i.i246_crit_edge: ; preds = %if.then.i.i234
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i246

if.end.i29.i.i240:                                ; preds = %if.then.i.i234
  call void @__sanitizer_cov_trace_pc() #18
  %88 = ptrtoint ptr %incdec.ptr.i.i.i229 to i32
  call void @__asan_loadN_noabort(i32 %88, i32 2)
  %89 = load i16, ptr %incdec.ptr.i.i.i229, align 1
  %90 = tail call i16 @llvm.bswap.i16(i16 %89) #16
  %conv.i28.i.i235 = zext i16 %90 to i32
  %add.ptr.i.i.i236 = getelementptr i8, ptr %80, i32 4
  %sub.ptr.rhs.cast.i24.i.i.i237 = ptrtoint ptr %add.ptr.i.i.i236 to i32
  %sub.ptr.sub.i25.i.i.i238 = sub i32 %sub.ptr.lhs.cast.i.i.i.i230, %sub.ptr.rhs.cast.i24.i.i.i237
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i238, i32 %conv.i28.i.i235)
  %cmp.i26.not.i.i.i239 = icmp ult i32 %sub.ptr.sub.i25.i.i.i238, %conv.i28.i.i235
  %add.ptr9.i.i.i241 = getelementptr i8, ptr %add.ptr.i.i.i236, i32 %conv.i28.i.i235
  %spec.select302 = select i1 %cmp.i26.not.i.i.i239, ptr %incdec.ptr.i.i.i229, ptr %add.ptr9.i.i.i241
  br label %unpack_u16_chunk.exit.i.i246

unpack_u16_chunk.exit.i.i246:                     ; preds = %if.end.i29.i.i240, %if.then.i.i234.unpack_u16_chunk.exit.i.i246_crit_edge
  %storemerge.i.i.i244 = phi ptr [ %incdec.ptr.i.i.i229, %if.then.i.i234.unpack_u16_chunk.exit.i.i246_crit_edge ], [ %spec.select302, %if.end.i29.i.i240 ]
  %91 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %storemerge.i.i.i244, ptr %pos1, align 4
  br label %if.end13.i.i249

if.end13.i.i249:                                  ; preds = %unpack_u16_chunk.exit.i.i246, %if.end.i.i.i228.if.end13.i.i249_crit_edge, %if.end14.if.end13.i.i249_crit_edge
  %92 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i.i248 = icmp eq ptr %84, %93
  br i1 %cmp.i.not.i33.i.i248, label %if.end13.i.i249.unpack_str.exit.thread_crit_edge, label %unpack_nameX.exit.i253

if.end13.i.i249.unpack_str.exit.thread_crit_edge: ; preds = %if.end13.i.i249
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_nameX.exit.i253:                           ; preds = %if.end13.i.i249
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %93, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %95)
  %cmp.not.i35.i.i250 = icmp eq i8 %95, 5
  %incdec.ptr.i37.i.i251 = getelementptr i8, ptr %93, i32 1
  %spec.select.i.i252 = select i1 %cmp.not.i35.i.i250, ptr %incdec.ptr.i37.i.i251, ptr %add.ptr.i145
  %96 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %spec.select.i.i252, ptr %pos1, align 4
  br i1 %cmp.not.i35.i.i250, label %if.then.i258, label %unpack_nameX.exit.i253.unpack_str.exit.thread_crit_edge

unpack_nameX.exit.i253.unpack_str.exit.thread_crit_edge: ; preds = %unpack_nameX.exit.i253
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.then.i258:                                     ; preds = %unpack_nameX.exit.i253
  %sub.ptr.lhs.cast.i.i.i254 = ptrtoint ptr %84 to i32
  %sub.ptr.rhs.cast.i.i.i255 = ptrtoint ptr %spec.select.i.i252 to i32
  %sub.ptr.sub.i.i.i256 = sub i32 %sub.ptr.lhs.cast.i.i.i254, %sub.ptr.rhs.cast.i.i.i255
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i256)
  %cmp.i.i.i257 = icmp ugt i32 %sub.ptr.sub.i.i.i256, 1
  br i1 %cmp.i.i.i257, label %if.end.i.i263, label %if.then.i258.unpack_str.exit.thread_crit_edge

if.then.i258.unpack_str.exit.thread_crit_edge:    ; preds = %if.then.i258
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.end.i.i263:                                    ; preds = %if.then.i258
  %97 = ptrtoint ptr %spec.select.i.i252 to i32
  call void @__asan_loadN_noabort(i32 %97, i32 2)
  %98 = load i16, ptr %spec.select.i.i252, align 1
  %99 = tail call i16 @llvm.bswap.i16(i16 %98) #16
  %conv.i.i = zext i16 %99 to i32
  %add.ptr.i.i259 = getelementptr i8, ptr %spec.select.i.i252, i32 2
  %sub.ptr.rhs.cast.i24.i.i260 = ptrtoint ptr %add.ptr.i.i259 to i32
  %sub.ptr.sub.i25.i.i261 = sub i32 %sub.ptr.lhs.cast.i.i.i254, %sub.ptr.rhs.cast.i24.i.i260
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i261, i32 %conv.i.i)
  %cmp.i26.not.i.i262 = icmp ult i32 %sub.ptr.sub.i25.i.i261, %conv.i.i
  br i1 %cmp.i26.not.i.i262, label %if.end.i.i263.unpack_str.exit.thread_crit_edge, label %unpack_u16_chunk.exit.i266

if.end.i.i263.unpack_str.exit.thread_crit_edge:   ; preds = %if.end.i.i263
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_u16_chunk.exit.i266:                       ; preds = %if.end.i.i263
  %add.ptr9.i.i264 = getelementptr i8, ptr %add.ptr.i.i259, i32 %conv.i.i
  %100 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %add.ptr9.i.i264, ptr %pos1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %98)
  %tobool.not.i265 = icmp eq i16 %98, 0
  br i1 %tobool.not.i265, label %unpack_u16_chunk.exit.i266.unpack_str.exit.thread_crit_edge, label %if.then3.i

unpack_u16_chunk.exit.i266.unpack_str.exit.thread_crit_edge: ; preds = %unpack_u16_chunk.exit.i266
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

if.then3.i:                                       ; preds = %unpack_u16_chunk.exit.i266
  %sub.i267 = add nsw i32 %conv.i.i, -1
  %arrayidx.i268 = getelementptr i8, ptr %add.ptr.i.i259, i32 %sub.i267
  %101 = ptrtoint ptr %arrayidx.i268 to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %arrayidx.i268, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %102)
  %cmp.not.i269 = icmp eq i8 %102, 0
  br i1 %cmp.not.i269, label %unpack_str.exit, label %if.then3.i.unpack_str.exit.thread_crit_edge

if.then3.i.unpack_str.exit.thread_crit_edge:      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit.thread

unpack_str.exit.thread:                           ; preds = %if.then3.i.unpack_str.exit.thread_crit_edge, %unpack_u16_chunk.exit.i266.unpack_str.exit.thread_crit_edge, %if.end.i.i263.unpack_str.exit.thread_crit_edge, %if.then.i258.unpack_str.exit.thread_crit_edge, %unpack_nameX.exit.i253.unpack_str.exit.thread_crit_edge, %if.end13.i.i249.unpack_str.exit.thread_crit_edge
  %103 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr %add.ptr.i145, ptr %pos1, align 4
  %104 = ptrtoint ptr %label to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr null, ptr %label, align 4
  br label %fail

unpack_str.exit:                                  ; preds = %if.then3.i
  %105 = ptrtoint ptr %label to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr null, ptr %label, align 4
  %call2.i = tail call ptr @kmemdup(ptr noundef %add.ptr.i.i259, i32 noundef %conv.i.i, i32 noundef 3264) #16
  %106 = ptrtoint ptr %label to i32
  call void @__asan_store4_noabort(i32 %106)
  store ptr %call2.i, ptr %label, align 4
  %tobool3.not.i152 = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i152, label %if.then4.i154, label %for.cond

if.then4.i154:                                    ; preds = %unpack_str.exit
  call void @__sanitizer_cov_trace_pc() #18
  %107 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %add.ptr.i145, ptr %pos1, align 4
  br label %fail

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end.for.end_crit_edge
  %cmp312.not339 = phi i1 [ true, %if.end.for.end_crit_edge ], [ %cmp312.not, %for.cond.for.end_crit_edge ]
  %108 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %pos1, align 4
  %110 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i158 = icmp eq ptr %111, %109
  br i1 %cmp.i.not.i.i158, label %for.end.if.end13.i181_crit_edge, label %if.end.i.i160

for.end.if.end13.i181_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i181

if.end.i.i160:                                    ; preds = %for.end
  %112 = ptrtoint ptr %109 to i32
  call void @__asan_load1_noabort(i32 %112)
  %113 = load i8, ptr %109, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %113)
  %cmp.not.i.i159 = icmp eq i8 %113, 4
  br i1 %cmp.not.i.i159, label %if.then.i166, label %if.end.i.i160.if.end13.i181_crit_edge

if.end.i.i160.if.end13.i181_crit_edge:            ; preds = %if.end.i.i160
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i181

if.then.i166:                                     ; preds = %if.end.i.i160
  %incdec.ptr.i.i161 = getelementptr i8, ptr %109, i32 1
  %114 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %incdec.ptr.i.i161, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i162 = ptrtoint ptr %111 to i32
  %sub.ptr.rhs.cast.i.i.i163 = ptrtoint ptr %incdec.ptr.i.i161 to i32
  %sub.ptr.sub.i.i.i164 = sub i32 %sub.ptr.lhs.cast.i.i.i162, %sub.ptr.rhs.cast.i.i.i163
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i164)
  %cmp.i.i.i165 = icmp ugt i32 %sub.ptr.sub.i.i.i164, 1
  br i1 %cmp.i.i.i165, label %if.end.i29.i172, label %if.then.i166.unpack_u16_chunk.exit.i178_crit_edge

if.then.i166.unpack_u16_chunk.exit.i178_crit_edge: ; preds = %if.then.i166
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i178

if.end.i29.i172:                                  ; preds = %if.then.i166
  call void @__sanitizer_cov_trace_pc() #18
  %115 = ptrtoint ptr %incdec.ptr.i.i161 to i32
  call void @__asan_loadN_noabort(i32 %115, i32 2)
  %116 = load i16, ptr %incdec.ptr.i.i161, align 1
  %117 = tail call i16 @llvm.bswap.i16(i16 %116) #16
  %conv.i28.i167 = zext i16 %117 to i32
  %add.ptr.i.i168 = getelementptr i8, ptr %109, i32 3
  %sub.ptr.rhs.cast.i24.i.i169 = ptrtoint ptr %add.ptr.i.i168 to i32
  %sub.ptr.sub.i25.i.i170 = sub i32 %sub.ptr.lhs.cast.i.i.i162, %sub.ptr.rhs.cast.i24.i.i169
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i170, i32 %conv.i28.i167)
  %cmp.i26.not.i.i171 = icmp ult i32 %sub.ptr.sub.i25.i.i170, %conv.i28.i167
  %add.ptr9.i.i173 = getelementptr i8, ptr %add.ptr.i.i168, i32 %conv.i28.i167
  %spec.select303 = select i1 %cmp.i26.not.i.i171, ptr %incdec.ptr.i.i161, ptr %add.ptr9.i.i173
  br label %unpack_u16_chunk.exit.i178

unpack_u16_chunk.exit.i178:                       ; preds = %if.end.i29.i172, %if.then.i166.unpack_u16_chunk.exit.i178_crit_edge
  %storemerge.i.i176 = phi ptr [ %incdec.ptr.i.i161, %if.then.i166.unpack_u16_chunk.exit.i178_crit_edge ], [ %spec.select303, %if.end.i29.i172 ]
  %118 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %storemerge.i.i176, ptr %pos1, align 4
  br label %if.end13.i181

if.end13.i181:                                    ; preds = %unpack_u16_chunk.exit.i178, %if.end.i.i160.if.end13.i181_crit_edge, %for.end.if.end13.i181_crit_edge
  %119 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i180 = icmp eq ptr %111, %120
  br i1 %cmp.i.not.i33.i180, label %unpack_nameX.exit189.thread, label %unpack_nameX.exit189

unpack_nameX.exit189.thread:                      ; preds = %if.end13.i181
  call void @__sanitizer_cov_trace_pc() #18
  %121 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr %109, ptr %pos1, align 4
  br label %fail

unpack_nameX.exit189:                             ; preds = %if.end13.i181
  %122 = ptrtoint ptr %120 to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %120, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %123)
  %cmp.not.i35.i183 = icmp eq i8 %123, 12
  %incdec.ptr.i37.i184 = getelementptr i8, ptr %120, i32 1
  %spec.select.i185 = select i1 %cmp.not.i35.i183, ptr %incdec.ptr.i37.i184, ptr %109
  %124 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr %spec.select.i185, ptr %pos1, align 4
  br i1 %cmp.not.i35.i183, label %if.end23, label %unpack_nameX.exit189.fail_crit_edge

unpack_nameX.exit189.fail_crit_edge:              ; preds = %unpack_nameX.exit189
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end23:                                         ; preds = %unpack_nameX.exit189
  %cmp.i.not.i.i192 = icmp eq ptr %111, %spec.select.i185
  br i1 %cmp.i.not.i.i192, label %if.end23.if.end13.i215_crit_edge, label %if.end.i.i194

if.end23.if.end13.i215_crit_edge:                 ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i215

if.end.i.i194:                                    ; preds = %if.end23
  %125 = ptrtoint ptr %spec.select.i185 to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %spec.select.i185, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %126)
  %cmp.not.i.i193 = icmp eq i8 %126, 4
  br i1 %cmp.not.i.i193, label %if.then.i200, label %if.end.i.i194.if.end13.i215_crit_edge

if.end.i.i194.if.end13.i215_crit_edge:            ; preds = %if.end.i.i194
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i215

if.then.i200:                                     ; preds = %if.end.i.i194
  %incdec.ptr.i.i195 = getelementptr i8, ptr %spec.select.i185, i32 1
  %127 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %incdec.ptr.i.i195, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i196 = ptrtoint ptr %111 to i32
  %sub.ptr.rhs.cast.i.i.i197 = ptrtoint ptr %incdec.ptr.i.i195 to i32
  %sub.ptr.sub.i.i.i198 = sub i32 %sub.ptr.lhs.cast.i.i.i196, %sub.ptr.rhs.cast.i.i.i197
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i198)
  %cmp.i.i.i199 = icmp ugt i32 %sub.ptr.sub.i.i.i198, 1
  br i1 %cmp.i.i.i199, label %if.end.i29.i206, label %if.then.i200.unpack_u16_chunk.exit.i212_crit_edge

if.then.i200.unpack_u16_chunk.exit.i212_crit_edge: ; preds = %if.then.i200
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i212

if.end.i29.i206:                                  ; preds = %if.then.i200
  call void @__sanitizer_cov_trace_pc() #18
  %128 = ptrtoint ptr %incdec.ptr.i.i195 to i32
  call void @__asan_loadN_noabort(i32 %128, i32 2)
  %129 = load i16, ptr %incdec.ptr.i.i195, align 1
  %130 = tail call i16 @llvm.bswap.i16(i16 %129) #16
  %conv.i28.i201 = zext i16 %130 to i32
  %add.ptr.i.i202 = getelementptr i8, ptr %spec.select.i185, i32 3
  %sub.ptr.rhs.cast.i24.i.i203 = ptrtoint ptr %add.ptr.i.i202 to i32
  %sub.ptr.sub.i25.i.i204 = sub i32 %sub.ptr.lhs.cast.i.i.i196, %sub.ptr.rhs.cast.i24.i.i203
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i204, i32 %conv.i28.i201)
  %cmp.i26.not.i.i205 = icmp ult i32 %sub.ptr.sub.i25.i.i204, %conv.i28.i201
  %add.ptr9.i.i207 = getelementptr i8, ptr %add.ptr.i.i202, i32 %conv.i28.i201
  %spec.select304 = select i1 %cmp.i26.not.i.i205, ptr %incdec.ptr.i.i195, ptr %add.ptr9.i.i207
  br label %unpack_u16_chunk.exit.i212

unpack_u16_chunk.exit.i212:                       ; preds = %if.end.i29.i206, %if.then.i200.unpack_u16_chunk.exit.i212_crit_edge
  %storemerge.i.i210 = phi ptr [ %incdec.ptr.i.i195, %if.then.i200.unpack_u16_chunk.exit.i212_crit_edge ], [ %spec.select304, %if.end.i29.i206 ]
  %131 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %131)
  store ptr %storemerge.i.i210, ptr %pos1, align 4
  br label %if.end13.i215

if.end13.i215:                                    ; preds = %unpack_u16_chunk.exit.i212, %if.end.i.i194.if.end13.i215_crit_edge, %if.end23.if.end13.i215_crit_edge
  %132 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i214 = icmp eq ptr %111, %133
  br i1 %cmp.i.not.i33.i214, label %unpack_nameX.exit223.thread, label %unpack_nameX.exit223

unpack_nameX.exit223.thread:                      ; preds = %if.end13.i215
  call void @__sanitizer_cov_trace_pc() #18
  %134 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %134)
  store ptr %spec.select.i185, ptr %pos1, align 4
  br label %fail

unpack_nameX.exit223:                             ; preds = %if.end13.i215
  %135 = ptrtoint ptr %133 to i32
  call void @__asan_load1_noabort(i32 %135)
  %136 = load i8, ptr %133, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %136)
  %cmp.not.i35.i217 = icmp eq i8 %136, 8
  %incdec.ptr.i37.i218 = getelementptr i8, ptr %133, i32 1
  %spec.select.i219 = select i1 %cmp.not.i35.i217, ptr %incdec.ptr.i37.i218, ptr %spec.select.i185
  %137 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %137)
  store ptr %spec.select.i219, ptr %pos1, align 4
  br i1 %cmp.not.i35.i217, label %unpack_nameX.exit223.cleanup_crit_edge, label %unpack_nameX.exit223.fail_crit_edge

unpack_nameX.exit223.fail_crit_edge:              ; preds = %unpack_nameX.exit223
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

unpack_nameX.exit223.cleanup_crit_edge:           ; preds = %unpack_nameX.exit223
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

fail:                                             ; preds = %unpack_nameX.exit223.fail_crit_edge, %unpack_nameX.exit223.thread, %unpack_nameX.exit189.fail_crit_edge, %unpack_nameX.exit189.thread, %if.then4.i154, %unpack_str.exit.thread, %unpack_u8.exit149.thread, %unpack_u8.exit.thread
  %cmp312.not338 = phi i1 [ %cmp312.not, %unpack_str.exit.thread ], [ %cmp312.not, %if.then4.i154 ], [ %cmp312.not339, %unpack_nameX.exit223.thread ], [ %cmp312.not339, %unpack_nameX.exit189.thread ], [ %cmp312.not, %unpack_u8.exit149.thread ], [ %cmp312.not, %unpack_u8.exit.thread ], [ %cmp312.not339, %unpack_nameX.exit223.fail_crit_edge ], [ %cmp312.not339, %unpack_nameX.exit189.fail_crit_edge ]
  %138 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %138)
  %.pr = load ptr, ptr %secmark, align 4
  %tobool29.not = icmp eq ptr %.pr, null
  br i1 %tobool29.not, label %fail.cleanup.sink.split_crit_edge, label %for.cond31.preheader

fail.cleanup.sink.split_crit_edge:                ; preds = %fail
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

for.cond31.preheader:                             ; preds = %fail
  br i1 %cmp312.not338, label %for.cond31.preheader.for.end39_crit_edge, label %for.cond31.preheader.for.body33_crit_edge

for.cond31.preheader.for.body33_crit_edge:        ; preds = %for.cond31.preheader
  br label %for.body33

for.cond31.preheader.for.end39_crit_edge:         ; preds = %for.cond31.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end39

for.body33:                                       ; preds = %for.body33.for.body33_crit_edge, %for.cond31.preheader.for.body33_crit_edge
  %i.1315 = phi i32 [ %inc38, %for.body33.for.body33_crit_edge ], [ 0, %for.cond31.preheader.for.body33_crit_edge ]
  %139 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %secmark, align 4
  %label36 = getelementptr %struct.aa_secmark, ptr %140, i32 %i.1315, i32 3
  %141 = ptrtoint ptr %label36 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %label36, align 4
  tail call void @kfree(ptr noundef %142) #16
  %inc38 = add nuw nsw i32 %i.1315, 1
  %exitcond327.not = icmp eq i32 %inc38, %retval.1.i
  br i1 %exitcond327.not, label %for.body33.for.end39_crit_edge, label %for.body33.for.body33_crit_edge

for.body33.for.body33_crit_edge:                  ; preds = %for.body33
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body33

for.body33.for.end39_crit_edge:                   ; preds = %for.body33
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end39

for.end39:                                        ; preds = %for.body33.for.end39_crit_edge, %for.cond31.preheader.for.end39_crit_edge
  %143 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %secmark, align 4
  tail call void @kfree(ptr noundef %144) #16
  %145 = ptrtoint ptr %secmark_count to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 0, ptr %secmark_count, align 4
  %146 = ptrtoint ptr %secmark to i32
  call void @__asan_store4_noabort(i32 %146)
  store ptr null, ptr %secmark, align 4
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.end39, %fail.cleanup.sink.split_crit_edge, %unpack_array.exit.cleanup.sink.split_crit_edge, %lor.lhs.false5.i.cleanup.sink.split_crit_edge, %lor.lhs.false.i.cleanup.sink.split_crit_edge, %unpack_u16_chunk.exit.i.cleanup.sink.split_crit_edge, %if.end.i29.i.cleanup.sink.split_crit_edge, %if.then.i.cleanup.sink.split_crit_edge, %if.end.i.i.cleanup.sink.split_crit_edge, %entry.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i1 [ true, %if.then.i.cleanup.sink.split_crit_edge ], [ true, %if.end.i29.i.cleanup.sink.split_crit_edge ], [ true, %unpack_u16_chunk.exit.i.cleanup.sink.split_crit_edge ], [ true, %lor.lhs.false.i.cleanup.sink.split_crit_edge ], [ true, %lor.lhs.false5.i.cleanup.sink.split_crit_edge ], [ true, %if.end.i.i.cleanup.sink.split_crit_edge ], [ true, %entry.cleanup.sink.split_crit_edge ], [ false, %unpack_array.exit.cleanup.sink.split_crit_edge ], [ false, %for.end39 ], [ false, %fail.cleanup.sink.split_crit_edge ]
  %147 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %147)
  store ptr %1, ptr %pos1, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %unpack_nameX.exit223.cleanup_crit_edge, %unpack_nameX.exit.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %unpack_nameX.exit223.cleanup_crit_edge ], [ true, %unpack_nameX.exit.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @aa_dfa_next(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @aa_get_dfa(ptr noundef returned %dfa) unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %tobool.not = icmp eq ptr %dfa, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %dfa, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %dfa, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %dfa, ptr nonnull %dfa, i32 1, ptr nonnull elementtype(i32) %dfa) #16, !srcloc !312
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !309

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !310

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end_crit_edge:                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %dfa, i32 noundef %.sink.i.i.i.i) #16
  br label %if.end

if.end:                                           ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret ptr %dfa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @unpack_trans_table(ptr nocapture noundef %e, ptr noundef %profile) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i, label %entry.cleanup79.sink.split_crit_edge, label %if.end.i.i

entry.cleanup79.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

if.end.i.i:                                       ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.cleanup79.sink.split_crit_edge

if.end.i.i.cleanup79.sink.split_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i, ptr %pos, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.cleanup79.sink.split_crit_edge

if.then.i.cleanup79.sink.split_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

if.end.i29.i:                                     ; preds = %if.then.i
  %7 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.cleanup79.sink.split_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i29.i.cleanup79.sink.split_crit_edge:      ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %10 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %add.ptr9.i.i, ptr %pos, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool3.not.i = icmp eq i16 %8, 0
  br i1 %tobool3.not.i, label %unpack_u16_chunk.exit.i.cleanup79.sink.split_crit_edge, label %lor.lhs.false.i

unpack_u16_chunk.exit.i.cleanup79.sink.split_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

lor.lhs.false.i:                                  ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i28.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.cleanup79.sink.split_crit_edge

lor.lhs.false.i.cleanup79.sink.split_crit_edge:   ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(7) @.str.64, ptr noundef %add.ptr.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp ne i32 %call6.i, 0
  %cmp.i.not.i33.i = icmp eq ptr %3, %add.ptr9.i.i
  %or.cond = select i1 %tobool7.not.i, i1 true, i1 %cmp.i.not.i33.i
  br i1 %or.cond, label %lor.lhs.false5.i.cleanup79.sink.split_crit_edge, label %unpack_nameX.exit

lor.lhs.false5.i.cleanup79.sink.split_crit_edge:  ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79.sink.split

unpack_nameX.exit:                                ; preds = %lor.lhs.false5.i
  %13 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %add.ptr9.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %14)
  %cmp.not.i35.i = icmp eq i8 %14, 7
  %incdec.ptr.i37.i = getelementptr i8, ptr %add.ptr9.i.i, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %1
  %15 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %spec.select.i, ptr %pos, align 4
  br i1 %cmp.not.i35.i, label %if.then, label %unpack_nameX.exit.cleanup79_crit_edge

unpack_nameX.exit.cleanup79_crit_edge:            ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79

if.then:                                          ; preds = %unpack_nameX.exit
  %cmp.i.not.i.i.i = icmp eq ptr %3, %spec.select.i
  br i1 %cmp.i.not.i.i.i, label %if.then.if.end13.i.i_crit_edge, label %if.end.i.i.i

if.then.if.end13.i.i_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %if.then
  %16 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %spec.select.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %17)
  %cmp.not.i.i.i = icmp eq i8 %17, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 1
  %18 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %incdec.ptr.i.i.i, ptr %pos, align 4
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 2)
  %20 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #16
  %conv.i28.i.i = zext i16 %21 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %spec.select.i, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select265 = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select265, %if.end.i29.i.i ]
  %22 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i.i.i, ptr %pos, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %if.then.if.end13.i.i_crit_edge
  %23 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pos, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %3, %24
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_array.exit.thread_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_array.exit.thread_crit_edge:  ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit.thread

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %26)
  %cmp.not.i35.i.i = icmp eq i8 %26, 11
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %24, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %spec.select.i
  %27 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %spec.select.i.i, ptr %pos, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %unpack_array.exit, label %unpack_nameX.exit.i.unpack_array.exit.thread_crit_edge

unpack_nameX.exit.i.unpack_array.exit.thread_crit_edge: ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit.thread

unpack_array.exit.thread:                         ; preds = %unpack_nameX.exit.i.unpack_array.exit.thread_crit_edge, %if.end13.i.i.unpack_array.exit.thread_crit_edge
  %28 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %spec.select.i, ptr %pos, align 4
  br label %if.end7.i.i

unpack_array.exit:                                ; preds = %unpack_nameX.exit.i
  %29 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 2)
  %30 = load i16, ptr %spec.select.i.i, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #16
  %conv.i = zext i16 %31 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  %32 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %add.ptr.i, ptr %pos, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 12, i16 %31)
  %cmp = icmp ugt i16 %31, 12
  br i1 %cmp, label %unpack_array.exit.fail_crit_edge, label %unpack_array.exit.if.end7.i.i_crit_edge

unpack_array.exit.if.end7.i.i_crit_edge:          ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i.i

unpack_array.exit.fail_crit_edge:                 ; preds = %unpack_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end7.i.i:                                      ; preds = %unpack_array.exit.if.end7.i.i_crit_edge, %unpack_array.exit.thread
  %retval.1.i242 = phi i32 [ 0, %unpack_array.exit.thread ], [ %conv.i, %unpack_array.exit.if.end7.i.i_crit_edge ]
  %33 = shl nuw nsw i32 %retval.1.i242, 2
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %33, i32 noundef 3520) #21
  %table = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 13, i32 2, i32 1
  %34 = ptrtoint ptr %table to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %call8.i.i, ptr %table, align 4
  %tobool.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not, label %if.end7.i.i.fail_crit_edge, label %if.end8

if.end7.i.i.fail_crit_edge:                       ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end8:                                          ; preds = %if.end7.i.i
  %trans = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 13, i32 2
  %35 = ptrtoint ptr %trans to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %retval.1.i242, ptr %trans, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i242)
  %cmp12276.not = icmp eq i32 %retval.1.i242, 0
  br i1 %cmp12276.not, label %if.end8.for.end64_crit_edge, label %if.end8.for.body_crit_edge

if.end8.for.body_crit_edge:                       ; preds = %if.end8
  br label %for.body

if.end8.for.end64_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end64

for.body:                                         ; preds = %for.inc62.for.body_crit_edge, %if.end8.for.body_crit_edge
  %i.0277 = phi i32 [ %inc63, %for.inc62.for.body_crit_edge ], [ 0, %if.end8.for.body_crit_edge ]
  %36 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pos, align 4
  %38 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i.i184 = icmp eq ptr %39, %37
  br i1 %cmp.i.not.i.i.i184, label %for.body.if.end13.i.i207_crit_edge, label %if.end.i.i.i186

for.body.if.end13.i.i207_crit_edge:               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i207

if.end.i.i.i186:                                  ; preds = %for.body
  %40 = ptrtoint ptr %37 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %37, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %41)
  %cmp.not.i.i.i185 = icmp eq i8 %41, 4
  br i1 %cmp.not.i.i.i185, label %if.then.i.i192, label %if.end.i.i.i186.if.end13.i.i207_crit_edge

if.end.i.i.i186.if.end13.i.i207_crit_edge:        ; preds = %if.end.i.i.i186
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i207

if.then.i.i192:                                   ; preds = %if.end.i.i.i186
  %incdec.ptr.i.i.i187 = getelementptr i8, ptr %37, i32 1
  %42 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %incdec.ptr.i.i.i187, ptr %pos, align 4
  %sub.ptr.lhs.cast.i.i.i.i188 = ptrtoint ptr %39 to i32
  %sub.ptr.rhs.cast.i.i.i.i189 = ptrtoint ptr %incdec.ptr.i.i.i187 to i32
  %sub.ptr.sub.i.i.i.i190 = sub i32 %sub.ptr.lhs.cast.i.i.i.i188, %sub.ptr.rhs.cast.i.i.i.i189
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i190)
  %cmp.i.i.i.i191 = icmp ugt i32 %sub.ptr.sub.i.i.i.i190, 1
  br i1 %cmp.i.i.i.i191, label %if.end.i29.i.i198, label %if.then.i.i192.unpack_u16_chunk.exit.i.i204_crit_edge

if.then.i.i192.unpack_u16_chunk.exit.i.i204_crit_edge: ; preds = %if.then.i.i192
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i204

if.end.i29.i.i198:                                ; preds = %if.then.i.i192
  call void @__sanitizer_cov_trace_pc() #18
  %43 = ptrtoint ptr %incdec.ptr.i.i.i187 to i32
  call void @__asan_loadN_noabort(i32 %43, i32 2)
  %44 = load i16, ptr %incdec.ptr.i.i.i187, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #16
  %conv.i28.i.i193 = zext i16 %45 to i32
  %add.ptr.i.i.i194 = getelementptr i8, ptr %37, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i195 = ptrtoint ptr %add.ptr.i.i.i194 to i32
  %sub.ptr.sub.i25.i.i.i196 = sub i32 %sub.ptr.lhs.cast.i.i.i.i188, %sub.ptr.rhs.cast.i24.i.i.i195
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i196, i32 %conv.i28.i.i193)
  %cmp.i26.not.i.i.i197 = icmp ult i32 %sub.ptr.sub.i25.i.i.i196, %conv.i28.i.i193
  %add.ptr9.i.i.i199 = getelementptr i8, ptr %add.ptr.i.i.i194, i32 %conv.i28.i.i193
  %spec.select266 = select i1 %cmp.i26.not.i.i.i197, ptr %incdec.ptr.i.i.i187, ptr %add.ptr9.i.i.i199
  br label %unpack_u16_chunk.exit.i.i204

unpack_u16_chunk.exit.i.i204:                     ; preds = %if.end.i29.i.i198, %if.then.i.i192.unpack_u16_chunk.exit.i.i204_crit_edge
  %storemerge.i.i.i202 = phi ptr [ %incdec.ptr.i.i.i187, %if.then.i.i192.unpack_u16_chunk.exit.i.i204_crit_edge ], [ %spec.select266, %if.end.i29.i.i198 ]
  %46 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %storemerge.i.i.i202, ptr %pos, align 4
  br label %if.end13.i.i207

if.end13.i.i207:                                  ; preds = %unpack_u16_chunk.exit.i.i204, %if.end.i.i.i186.if.end13.i.i207_crit_edge, %for.body.if.end13.i.i207_crit_edge
  %47 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pos, align 4
  %cmp.i.not.i33.i.i206 = icmp eq ptr %39, %48
  br i1 %cmp.i.not.i33.i.i206, label %if.end13.i.i207.fail.sink.split_crit_edge, label %unpack_nameX.exit.i211

if.end13.i.i207.fail.sink.split_crit_edge:        ; preds = %if.end13.i.i207
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

unpack_nameX.exit.i211:                           ; preds = %if.end13.i.i207
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %48, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %50)
  %cmp.not.i35.i.i208 = icmp eq i8 %50, 5
  %incdec.ptr.i37.i.i209 = getelementptr i8, ptr %48, i32 1
  %spec.select.i.i210 = select i1 %cmp.not.i35.i.i208, ptr %incdec.ptr.i37.i.i209, ptr %37
  %51 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %spec.select.i.i210, ptr %pos, align 4
  br i1 %cmp.not.i35.i.i208, label %if.then.i216, label %unpack_nameX.exit.i211.fail.sink.split_crit_edge

unpack_nameX.exit.i211.fail.sink.split_crit_edge: ; preds = %unpack_nameX.exit.i211
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

if.then.i216:                                     ; preds = %unpack_nameX.exit.i211
  %sub.ptr.lhs.cast.i.i.i212 = ptrtoint ptr %39 to i32
  %sub.ptr.rhs.cast.i.i.i213 = ptrtoint ptr %spec.select.i.i210 to i32
  %sub.ptr.sub.i.i.i214 = sub i32 %sub.ptr.lhs.cast.i.i.i212, %sub.ptr.rhs.cast.i.i.i213
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i214)
  %cmp.i.i.i215 = icmp ugt i32 %sub.ptr.sub.i.i.i214, 1
  br i1 %cmp.i.i.i215, label %if.end.i.i221, label %if.then.i216.fail.sink.split_crit_edge

if.then.i216.fail.sink.split_crit_edge:           ; preds = %if.then.i216
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

if.end.i.i221:                                    ; preds = %if.then.i216
  %52 = ptrtoint ptr %spec.select.i.i210 to i32
  call void @__asan_loadN_noabort(i32 %52, i32 2)
  %53 = load i16, ptr %spec.select.i.i210, align 1
  %54 = tail call i16 @llvm.bswap.i16(i16 %53) #16
  %conv.i.i = zext i16 %54 to i32
  %add.ptr.i.i217 = getelementptr i8, ptr %spec.select.i.i210, i32 2
  %sub.ptr.rhs.cast.i24.i.i218 = ptrtoint ptr %add.ptr.i.i217 to i32
  %sub.ptr.sub.i25.i.i219 = sub i32 %sub.ptr.lhs.cast.i.i.i212, %sub.ptr.rhs.cast.i24.i.i218
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i219, i32 %conv.i.i)
  %cmp.i26.not.i.i220 = icmp ult i32 %sub.ptr.sub.i25.i.i219, %conv.i.i
  br i1 %cmp.i26.not.i.i220, label %if.end.i.i221.fail.sink.split_crit_edge, label %unpack_u16_chunk.exit.i224

if.end.i.i221.fail.sink.split_crit_edge:          ; preds = %if.end.i.i221
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

unpack_u16_chunk.exit.i224:                       ; preds = %if.end.i.i221
  %add.ptr9.i.i222 = getelementptr i8, ptr %add.ptr.i.i217, i32 %conv.i.i
  %55 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %add.ptr9.i.i222, ptr %pos, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %53)
  %tobool.not.i223 = icmp eq i16 %53, 0
  br i1 %tobool.not.i223, label %unpack_u16_chunk.exit.i224.fail.sink.split_crit_edge, label %if.then3.i

unpack_u16_chunk.exit.i224.fail.sink.split_crit_edge: ; preds = %unpack_u16_chunk.exit.i224
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

if.then3.i:                                       ; preds = %unpack_u16_chunk.exit.i224
  %sub.i225 = add nsw i32 %conv.i.i, -1
  %arrayidx.i226 = getelementptr i8, ptr %add.ptr.i.i217, i32 %sub.i225
  %56 = ptrtoint ptr %arrayidx.i226 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx.i226, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %cmp.not.i227 = icmp eq i8 %57, 0
  br i1 %cmp.not.i227, label %if.end.i, label %if.then3.i.fail.sink.split_crit_edge

if.then3.i.fail.sink.split_crit_edge:             ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

if.end.i:                                         ; preds = %if.then3.i
  %call2.i = tail call ptr @kmemdup(ptr noundef %add.ptr.i.i217, i32 noundef %conv.i.i, i32 noundef 3264) #16
  %tobool3.not.i112 = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i112, label %if.end.i.fail.sink.split_crit_edge, label %if.end17

if.end.i.fail.sink.split_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

if.end17:                                         ; preds = %if.end.i
  %58 = ptrtoint ptr %table to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %table, align 4
  %arrayidx = getelementptr ptr, ptr %59, i32 %i.0277
  %60 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %call2.i, ptr %arrayidx, align 4
  %61 = ptrtoint ptr %call2.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %call2.i, align 1
  %conv = zext i8 %62 to i32
  %arrayidx21 = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %conv
  %63 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %arrayidx21, align 1
  %65 = and i8 %64, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %cmp23.not = icmp eq i8 %65, 0
  br i1 %cmp23.not, label %for.cond27.preheader, label %if.end17.fail_crit_edge

if.end17.fail_crit_edge:                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

for.cond27.preheader:                             ; preds = %if.end17
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %54)
  %cmp28271 = icmp ugt i16 %54, 1
  br i1 %cmp28271, label %for.cond27.preheader.for.body30_crit_edge, label %for.end.thread

for.cond27.preheader.for.body30_crit_edge:        ; preds = %for.cond27.preheader
  br label %for.body30

for.body30:                                       ; preds = %for.body30.for.body30_crit_edge, %for.cond27.preheader.for.body30_crit_edge
  %pos13.0274 = phi i32 [ %spec.select103, %for.body30.for.body30_crit_edge ], [ -1, %for.cond27.preheader.for.body30_crit_edge ]
  %j.0273 = phi i32 [ %inc35, %for.body30.for.body30_crit_edge ], [ 0, %for.cond27.preheader.for.body30_crit_edge ]
  %c.0272 = phi i32 [ %spec.select, %for.body30.for.body30_crit_edge ], [ 0, %for.cond27.preheader.for.body30_crit_edge ]
  %arrayidx31 = getelementptr i8, ptr %call2.i, i32 %j.0273
  %66 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %arrayidx31, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool32.not = icmp eq i8 %67, 0
  %inc = zext i1 %tobool32.not to i32
  %spec.select = add i32 %c.0272, %inc
  %spec.select103 = select i1 %tobool32.not, i32 %j.0273, i32 %pos13.0274
  %inc35 = add nuw nsw i32 %j.0273, 1
  %exitcond.not = icmp eq i32 %inc35, %sub.i225
  br i1 %exitcond.not, label %for.end, label %for.body30.for.body30_crit_edge

for.body30.for.body30_crit_edge:                  ; preds = %for.body30
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body30

for.end:                                          ; preds = %for.body30
  call void @__sanitizer_cov_trace_const_cmp1(i8 58, i8 %62)
  %cmp37 = icmp eq i8 %62, 58
  br i1 %cmp37, label %if.then39, label %if.else53

for.end.thread:                                   ; preds = %for.cond27.preheader
  call void @__sanitizer_cov_trace_const_cmp1(i8 58, i8 %62)
  %cmp37287 = icmp eq i8 %62, 58
  br i1 %cmp37287, label %if.then39.thread, label %for.end.thread.for.inc62_crit_edge

for.end.thread.for.inc62_crit_edge:               ; preds = %for.end.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc62

if.then39:                                        ; preds = %for.end
  %arrayidx40 = getelementptr i8, ptr %call2.i, i32 1
  %68 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %arrayidx40, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool41.not = icmp eq i8 %69, 0
  br i1 %tobool41.not, label %if.then39.fail_crit_edge, label %if.end43

if.then39.fail_crit_edge:                         ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.then39.thread:                                 ; preds = %for.end.thread
  %arrayidx40295 = getelementptr i8, ptr %call2.i, i32 1
  %70 = ptrtoint ptr %arrayidx40295 to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %arrayidx40295, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %71)
  %tobool41.not296 = icmp eq i8 %71, 0
  br i1 %tobool41.not296, label %if.then39.thread.fail_crit_edge, label %if.then39.thread.for.inc62_crit_edge

if.then39.thread.for.inc62_crit_edge:             ; preds = %if.then39.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc62

if.then39.thread.fail_crit_edge:                  ; preds = %if.then39.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end43:                                         ; preds = %if.then39
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %spec.select)
  %cmp44 = icmp eq i32 %spec.select, 1
  br i1 %cmp44, label %if.then46, label %if.else

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx47 = getelementptr i8, ptr %call2.i, i32 %spec.select103
  %72 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_store1_noabort(i32 %72)
  store i8 58, ptr %arrayidx47, align 1
  br label %for.inc62

if.else:                                          ; preds = %if.end43
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %spec.select)
  %cmp48 = icmp sgt i32 %spec.select, 1
  br i1 %cmp48, label %if.else.fail_crit_edge, label %if.else.for.inc62_crit_edge

if.else.for.inc62_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc62

if.else.fail_crit_edge:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.else53:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %tobool54.not = icmp eq i32 %spec.select, 0
  br i1 %tobool54.not, label %if.else53.for.inc62_crit_edge, label %if.else53.fail_crit_edge

if.else53.fail_crit_edge:                         ; preds = %if.else53
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.else53.for.inc62_crit_edge:                    ; preds = %if.else53
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc62

for.inc62:                                        ; preds = %if.else53.for.inc62_crit_edge, %if.else.for.inc62_crit_edge, %if.then46, %if.then39.thread.for.inc62_crit_edge, %for.end.thread.for.inc62_crit_edge
  %inc63 = add nuw nsw i32 %i.0277, 1
  %exitcond281.not = icmp eq i32 %inc63, %retval.1.i242
  br i1 %exitcond281.not, label %for.inc62.for.end64_crit_edge, label %for.inc62.for.body_crit_edge

for.inc62.for.body_crit_edge:                     ; preds = %for.inc62
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc62.for.end64_crit_edge:                    ; preds = %for.inc62
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end64

for.end64:                                        ; preds = %for.inc62.for.end64_crit_edge, %if.end8.for.end64_crit_edge
  %73 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pos, align 4
  %75 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i116 = icmp eq ptr %76, %74
  br i1 %cmp.i.not.i.i116, label %for.end64.if.end13.i139_crit_edge, label %if.end.i.i118

for.end64.if.end13.i139_crit_edge:                ; preds = %for.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i139

if.end.i.i118:                                    ; preds = %for.end64
  %77 = ptrtoint ptr %74 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %74, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %78)
  %cmp.not.i.i117 = icmp eq i8 %78, 4
  br i1 %cmp.not.i.i117, label %if.then.i124, label %if.end.i.i118.if.end13.i139_crit_edge

if.end.i.i118.if.end13.i139_crit_edge:            ; preds = %if.end.i.i118
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i139

if.then.i124:                                     ; preds = %if.end.i.i118
  %incdec.ptr.i.i119 = getelementptr i8, ptr %74, i32 1
  %79 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %incdec.ptr.i.i119, ptr %pos, align 4
  %sub.ptr.lhs.cast.i.i.i120 = ptrtoint ptr %76 to i32
  %sub.ptr.rhs.cast.i.i.i121 = ptrtoint ptr %incdec.ptr.i.i119 to i32
  %sub.ptr.sub.i.i.i122 = sub i32 %sub.ptr.lhs.cast.i.i.i120, %sub.ptr.rhs.cast.i.i.i121
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i122)
  %cmp.i.i.i123 = icmp ugt i32 %sub.ptr.sub.i.i.i122, 1
  br i1 %cmp.i.i.i123, label %if.end.i29.i130, label %if.then.i124.unpack_u16_chunk.exit.i136_crit_edge

if.then.i124.unpack_u16_chunk.exit.i136_crit_edge: ; preds = %if.then.i124
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i136

if.end.i29.i130:                                  ; preds = %if.then.i124
  call void @__sanitizer_cov_trace_pc() #18
  %80 = ptrtoint ptr %incdec.ptr.i.i119 to i32
  call void @__asan_loadN_noabort(i32 %80, i32 2)
  %81 = load i16, ptr %incdec.ptr.i.i119, align 1
  %82 = tail call i16 @llvm.bswap.i16(i16 %81) #16
  %conv.i28.i125 = zext i16 %82 to i32
  %add.ptr.i.i126 = getelementptr i8, ptr %74, i32 3
  %sub.ptr.rhs.cast.i24.i.i127 = ptrtoint ptr %add.ptr.i.i126 to i32
  %sub.ptr.sub.i25.i.i128 = sub i32 %sub.ptr.lhs.cast.i.i.i120, %sub.ptr.rhs.cast.i24.i.i127
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i128, i32 %conv.i28.i125)
  %cmp.i26.not.i.i129 = icmp ult i32 %sub.ptr.sub.i25.i.i128, %conv.i28.i125
  %add.ptr9.i.i131 = getelementptr i8, ptr %add.ptr.i.i126, i32 %conv.i28.i125
  %spec.select267 = select i1 %cmp.i26.not.i.i129, ptr %incdec.ptr.i.i119, ptr %add.ptr9.i.i131
  br label %unpack_u16_chunk.exit.i136

unpack_u16_chunk.exit.i136:                       ; preds = %if.end.i29.i130, %if.then.i124.unpack_u16_chunk.exit.i136_crit_edge
  %storemerge.i.i134 = phi ptr [ %incdec.ptr.i.i119, %if.then.i124.unpack_u16_chunk.exit.i136_crit_edge ], [ %spec.select267, %if.end.i29.i130 ]
  %83 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %storemerge.i.i134, ptr %pos, align 4
  br label %if.end13.i139

if.end13.i139:                                    ; preds = %unpack_u16_chunk.exit.i136, %if.end.i.i118.if.end13.i139_crit_edge, %for.end64.if.end13.i139_crit_edge
  %84 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %pos, align 4
  %cmp.i.not.i33.i138 = icmp eq ptr %76, %85
  br i1 %cmp.i.not.i33.i138, label %if.end13.i139.fail.sink.split_crit_edge, label %unpack_nameX.exit147

if.end13.i139.fail.sink.split_crit_edge:          ; preds = %if.end13.i139
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

unpack_nameX.exit147:                             ; preds = %if.end13.i139
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %85, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %87)
  %cmp.not.i35.i141 = icmp eq i8 %87, 12
  %incdec.ptr.i37.i142 = getelementptr i8, ptr %85, i32 1
  %spec.select.i143 = select i1 %cmp.not.i35.i141, ptr %incdec.ptr.i37.i142, ptr %74
  %88 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %spec.select.i143, ptr %pos, align 4
  br i1 %cmp.not.i35.i141, label %if.end67, label %unpack_nameX.exit147.fail_crit_edge

unpack_nameX.exit147.fail_crit_edge:              ; preds = %unpack_nameX.exit147
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end67:                                         ; preds = %unpack_nameX.exit147
  %cmp.i.not.i.i150 = icmp eq ptr %76, %spec.select.i143
  br i1 %cmp.i.not.i.i150, label %if.end67.if.end13.i173_crit_edge, label %if.end.i.i152

if.end67.if.end13.i173_crit_edge:                 ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i173

if.end.i.i152:                                    ; preds = %if.end67
  %89 = ptrtoint ptr %spec.select.i143 to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %spec.select.i143, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %90)
  %cmp.not.i.i151 = icmp eq i8 %90, 4
  br i1 %cmp.not.i.i151, label %if.then.i158, label %if.end.i.i152.if.end13.i173_crit_edge

if.end.i.i152.if.end13.i173_crit_edge:            ; preds = %if.end.i.i152
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i173

if.then.i158:                                     ; preds = %if.end.i.i152
  %incdec.ptr.i.i153 = getelementptr i8, ptr %spec.select.i143, i32 1
  %91 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %incdec.ptr.i.i153, ptr %pos, align 4
  %sub.ptr.lhs.cast.i.i.i154 = ptrtoint ptr %76 to i32
  %sub.ptr.rhs.cast.i.i.i155 = ptrtoint ptr %incdec.ptr.i.i153 to i32
  %sub.ptr.sub.i.i.i156 = sub i32 %sub.ptr.lhs.cast.i.i.i154, %sub.ptr.rhs.cast.i.i.i155
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i156)
  %cmp.i.i.i157 = icmp ugt i32 %sub.ptr.sub.i.i.i156, 1
  br i1 %cmp.i.i.i157, label %if.end.i29.i164, label %if.then.i158.unpack_u16_chunk.exit.i170_crit_edge

if.then.i158.unpack_u16_chunk.exit.i170_crit_edge: ; preds = %if.then.i158
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i170

if.end.i29.i164:                                  ; preds = %if.then.i158
  call void @__sanitizer_cov_trace_pc() #18
  %92 = ptrtoint ptr %incdec.ptr.i.i153 to i32
  call void @__asan_loadN_noabort(i32 %92, i32 2)
  %93 = load i16, ptr %incdec.ptr.i.i153, align 1
  %94 = tail call i16 @llvm.bswap.i16(i16 %93) #16
  %conv.i28.i159 = zext i16 %94 to i32
  %add.ptr.i.i160 = getelementptr i8, ptr %spec.select.i143, i32 3
  %sub.ptr.rhs.cast.i24.i.i161 = ptrtoint ptr %add.ptr.i.i160 to i32
  %sub.ptr.sub.i25.i.i162 = sub i32 %sub.ptr.lhs.cast.i.i.i154, %sub.ptr.rhs.cast.i24.i.i161
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i162, i32 %conv.i28.i159)
  %cmp.i26.not.i.i163 = icmp ult i32 %sub.ptr.sub.i25.i.i162, %conv.i28.i159
  %add.ptr9.i.i165 = getelementptr i8, ptr %add.ptr.i.i160, i32 %conv.i28.i159
  %spec.select268 = select i1 %cmp.i26.not.i.i163, ptr %incdec.ptr.i.i153, ptr %add.ptr9.i.i165
  br label %unpack_u16_chunk.exit.i170

unpack_u16_chunk.exit.i170:                       ; preds = %if.end.i29.i164, %if.then.i158.unpack_u16_chunk.exit.i170_crit_edge
  %storemerge.i.i168 = phi ptr [ %incdec.ptr.i.i153, %if.then.i158.unpack_u16_chunk.exit.i170_crit_edge ], [ %spec.select268, %if.end.i29.i164 ]
  %95 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %storemerge.i.i168, ptr %pos, align 4
  br label %if.end13.i173

if.end13.i173:                                    ; preds = %unpack_u16_chunk.exit.i170, %if.end.i.i152.if.end13.i173_crit_edge, %if.end67.if.end13.i173_crit_edge
  %96 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pos, align 4
  %cmp.i.not.i33.i172 = icmp eq ptr %76, %97
  br i1 %cmp.i.not.i33.i172, label %if.end13.i173.fail.sink.split_crit_edge, label %unpack_nameX.exit181

if.end13.i173.fail.sink.split_crit_edge:          ; preds = %if.end13.i173
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.sink.split

unpack_nameX.exit181:                             ; preds = %if.end13.i173
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %97, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %99)
  %cmp.not.i35.i175 = icmp eq i8 %99, 8
  %incdec.ptr.i37.i176 = getelementptr i8, ptr %97, i32 1
  %spec.select.i177 = select i1 %cmp.not.i35.i175, ptr %incdec.ptr.i37.i176, ptr %spec.select.i143
  %100 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %spec.select.i177, ptr %pos, align 4
  br i1 %cmp.not.i35.i175, label %unpack_nameX.exit181.cleanup79_crit_edge, label %unpack_nameX.exit181.fail_crit_edge

unpack_nameX.exit181.fail_crit_edge:              ; preds = %unpack_nameX.exit181
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

unpack_nameX.exit181.cleanup79_crit_edge:         ; preds = %unpack_nameX.exit181
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup79

fail.sink.split:                                  ; preds = %if.end13.i173.fail.sink.split_crit_edge, %if.end13.i139.fail.sink.split_crit_edge, %if.end.i.fail.sink.split_crit_edge, %if.then3.i.fail.sink.split_crit_edge, %unpack_u16_chunk.exit.i224.fail.sink.split_crit_edge, %if.end.i.i221.fail.sink.split_crit_edge, %if.then.i216.fail.sink.split_crit_edge, %unpack_nameX.exit.i211.fail.sink.split_crit_edge, %if.end13.i.i207.fail.sink.split_crit_edge
  %.lcssa.sink = phi ptr [ %74, %if.end13.i139.fail.sink.split_crit_edge ], [ %spec.select.i143, %if.end13.i173.fail.sink.split_crit_edge ], [ %37, %if.end13.i.i207.fail.sink.split_crit_edge ], [ %37, %unpack_nameX.exit.i211.fail.sink.split_crit_edge ], [ %37, %if.then.i216.fail.sink.split_crit_edge ], [ %37, %if.end.i.i221.fail.sink.split_crit_edge ], [ %37, %unpack_u16_chunk.exit.i224.fail.sink.split_crit_edge ], [ %37, %if.then3.i.fail.sink.split_crit_edge ], [ %37, %if.end.i.fail.sink.split_crit_edge ]
  %101 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %.lcssa.sink, ptr %pos, align 4
  br label %fail

fail:                                             ; preds = %fail.sink.split, %unpack_nameX.exit181.fail_crit_edge, %unpack_nameX.exit147.fail_crit_edge, %if.else53.fail_crit_edge, %if.else.fail_crit_edge, %if.then39.thread.fail_crit_edge, %if.then39.fail_crit_edge, %if.end17.fail_crit_edge, %if.end7.i.i.fail_crit_edge, %unpack_array.exit.fail_crit_edge
  %trans77 = getelementptr inbounds %struct.aa_profile, ptr %profile, i32 0, i32 13, i32 2
  tail call void @aa_free_domain_entries(ptr noundef %trans77) #16
  br label %cleanup79.sink.split

cleanup79.sink.split:                             ; preds = %fail, %lor.lhs.false5.i.cleanup79.sink.split_crit_edge, %lor.lhs.false.i.cleanup79.sink.split_crit_edge, %unpack_u16_chunk.exit.i.cleanup79.sink.split_crit_edge, %if.end.i29.i.cleanup79.sink.split_crit_edge, %if.then.i.cleanup79.sink.split_crit_edge, %if.end.i.i.cleanup79.sink.split_crit_edge, %entry.cleanup79.sink.split_crit_edge
  %retval.0.ph = phi i1 [ false, %fail ], [ true, %if.then.i.cleanup79.sink.split_crit_edge ], [ true, %if.end.i29.i.cleanup79.sink.split_crit_edge ], [ true, %unpack_u16_chunk.exit.i.cleanup79.sink.split_crit_edge ], [ true, %lor.lhs.false.i.cleanup79.sink.split_crit_edge ], [ true, %lor.lhs.false5.i.cleanup79.sink.split_crit_edge ], [ true, %if.end.i.i.cleanup79.sink.split_crit_edge ], [ true, %entry.cleanup79.sink.split_crit_edge ]
  %102 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %1, ptr %pos, align 4
  br label %cleanup79

cleanup79:                                        ; preds = %cleanup79.sink.split, %unpack_nameX.exit181.cleanup79_crit_edge, %unpack_nameX.exit.cleanup79_crit_edge
  %retval.0 = phi i1 [ true, %unpack_nameX.exit.cleanup79_crit_edge ], [ true, %unpack_nameX.exit181.cleanup79_crit_edge ], [ %retval.0.ph, %cleanup79.sink.split ]
  ret i1 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @strhash(ptr nocapture noundef readonly %data, i32 noundef %len, i32 noundef %seed) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %call = tail call i32 @strlen(ptr noundef %1) #19
  %call1 = tail call fastcc i32 @jhash(ptr noundef %1, i32 noundef %call, i32 noundef %seed)
  ret i32 %call1
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @datacmp(ptr nocapture noundef readonly %arg, ptr nocapture noundef readonly %obj) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %key1 = getelementptr inbounds %struct.rhashtable_compare_arg, ptr %arg, i32 0, i32 1
  %0 = ptrtoint ptr %key1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %key1, align 4
  %2 = ptrtoint ptr %obj to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %obj, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %call = tail call i32 @strcmp(ptr noundef %3, ptr noundef %5) #19
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rhashtable_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @unpack_strdup(ptr nocapture noundef %e, ptr nocapture noundef writeonly %string, ptr noundef %name) unnamed_addr #0 align 64 {
entry:
  %tmp = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #16
  %0 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %tmp, align 4, !annotation !316
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %1 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pos1, align 4
  %call = call fastcc i32 @unpack_str(ptr noundef %e, ptr noundef nonnull %tmp, ptr noundef %name)
  %3 = ptrtoint ptr %string to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %string, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tmp, align 4
  %call2 = tail call ptr @kmemdup(ptr noundef %5, i32 noundef %call, i32 noundef 3264) #16
  %6 = ptrtoint ptr %string to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call2, ptr %string, align 4
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.then4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %2, ptr %pos1, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then4 ], [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #16
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @unpack_blob(ptr nocapture noundef %e, ptr nocapture noundef writeonly %blob, ptr noundef readonly %name) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pos1 = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 2
  %0 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pos1, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %e, i32 0, i32 1
  %2 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %3, %1
  br i1 %cmp.i.not.i.i, label %entry.if.else.i_crit_edge, label %if.end.i.i

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.end.i.i:                                       ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.if.else.i_crit_edge

if.end.i.i.if.else.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %1, i32 1
  %6 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %incdec.ptr.i.i, ptr %pos1, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_u16_chunk.exit.i_crit_edge

if.then.i.unpack_u16_chunk.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end.i29.i:                                     ; preds = %if.then.i
  %7 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %incdec.ptr.i.i, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #16
  %conv.i28.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge, label %if.end6.i.i

if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge:   ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end6.i.i:                                      ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  br label %unpack_u16_chunk.exit.i

unpack_u16_chunk.exit.i:                          ; preds = %if.end6.i.i, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge, %if.then.i.unpack_u16_chunk.exit.i_crit_edge
  %tag.0.i = phi ptr [ null, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %add.ptr.i.i, %if.end6.i.i ], [ null, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %storemerge.i.i = phi ptr [ %incdec.ptr.i.i, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %add.ptr9.i.i, %if.end6.i.i ], [ %incdec.ptr.i.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %retval.0.i30.i = phi i32 [ 0, %if.end.i29.i.unpack_u16_chunk.exit.i_crit_edge ], [ %conv.i28.i, %if.end6.i.i ], [ 0, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ]
  %10 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %storemerge.i.i, ptr %pos1, align 4
  %tobool.not.i = icmp eq ptr %name, null
  br i1 %tobool.not.i, label %unpack_u16_chunk.exit.i.if.end13.i_crit_edge, label %land.lhs.true.i

unpack_u16_chunk.exit.i.if.end13.i_crit_edge:     ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

land.lhs.true.i:                                  ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i30.i)
  %tobool3.not.i = icmp eq i32 %retval.0.i30.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.cleanup14_crit_edge, label %lor.lhs.false.i

land.lhs.true.i.cleanup14_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %sub.i = add nsw i32 %retval.0.i30.i, -1
  %arrayidx.i = getelementptr i8, ptr %tag.0.i, i32 %sub.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.cleanup14_crit_edge

lor.lhs.false.i.cleanup14_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull %name, ptr noundef %tag.0.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %lor.lhs.false5.i.if.end13.i_crit_edge, label %lor.lhs.false5.i.cleanup14_crit_edge

lor.lhs.false5.i.cleanup14_crit_edge:             ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

lor.lhs.false5.i.if.end13.i_crit_edge:            ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.else.i:                                        ; preds = %if.end.i.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %tobool10.not.i = icmp eq ptr %name, null
  br i1 %tobool10.not.i, label %if.else.i.if.end13.i_crit_edge, label %if.else.i.cleanup14_crit_edge

if.else.i.cleanup14_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

if.else.i.if.end13.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.else.i.if.end13.i_crit_edge, %lor.lhs.false5.i.if.end13.i_crit_edge, %unpack_u16_chunk.exit.i.if.end13.i_crit_edge
  %13 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pos1, align 4
  %cmp.i.not.i33.i = icmp eq ptr %3, %14
  br i1 %cmp.i.not.i33.i, label %if.end13.i.cleanup14_crit_edge, label %unpack_nameX.exit

if.end13.i.cleanup14_crit_edge:                   ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

unpack_nameX.exit:                                ; preds = %if.end13.i
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %14, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %16)
  %cmp.not.i35.i = icmp eq i8 %16, 6
  %incdec.ptr.i37.i = getelementptr i8, ptr %14, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %1
  %17 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %spec.select.i, ptr %pos1, align 4
  br i1 %cmp.not.i35.i, label %if.then, label %unpack_nameX.exit.cleanup14_crit_edge

unpack_nameX.exit.cleanup14_crit_edge:            ; preds = %unpack_nameX.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

if.then:                                          ; preds = %unpack_nameX.exit
  %sub.ptr.lhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %spec.select.i to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i)
  %cmp.i = icmp ugt i32 %sub.ptr.sub.i, 3
  br i1 %cmp.i, label %if.end, label %if.then.cleanup14_crit_edge

if.then.cleanup14_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

if.end:                                           ; preds = %if.then
  %18 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 4)
  %19 = load i32, ptr %spec.select.i, align 1
  %20 = tail call i32 @llvm.bswap.i32(i32 %19)
  %add.ptr = getelementptr i8, ptr %spec.select.i, i32 4
  %21 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %add.ptr, ptr %pos1, align 4
  %sub.ptr.rhs.cast.i28 = ptrtoint ptr %add.ptr to i32
  %sub.ptr.sub.i29 = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i28
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i29, i32 %20)
  %cmp.i30.not = icmp ult i32 %sub.ptr.sub.i29, %20
  br i1 %cmp.i30.not, label %if.end.cleanup14_crit_edge, label %cleanup

if.end.cleanup14_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

cleanup:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %blob to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %add.ptr, ptr %blob, align 4
  %23 = ptrtoint ptr %pos1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pos1, align 4
  %add.ptr10 = getelementptr i8, ptr %24, i32 %20
  br label %cleanup14

cleanup14:                                        ; preds = %cleanup, %if.end.cleanup14_crit_edge, %if.then.cleanup14_crit_edge, %unpack_nameX.exit.cleanup14_crit_edge, %if.end13.i.cleanup14_crit_edge, %if.else.i.cleanup14_crit_edge, %lor.lhs.false5.i.cleanup14_crit_edge, %lor.lhs.false.i.cleanup14_crit_edge, %land.lhs.true.i.cleanup14_crit_edge
  %storemerge = phi ptr [ %add.ptr10, %cleanup ], [ %1, %if.end.cleanup14_crit_edge ], [ %1, %if.then.cleanup14_crit_edge ], [ %1, %unpack_nameX.exit.cleanup14_crit_edge ], [ %1, %if.end13.i.cleanup14_crit_edge ], [ %1, %land.lhs.true.i.cleanup14_crit_edge ], [ %1, %lor.lhs.false.i.cleanup14_crit_edge ], [ %1, %lor.lhs.false5.i.cleanup14_crit_edge ], [ %1, %if.else.i.cleanup14_crit_edge ]
  %retval.1 = phi i32 [ %20, %cleanup ], [ 0, %if.end.cleanup14_crit_edge ], [ 0, %if.then.cleanup14_crit_edge ], [ 0, %unpack_nameX.exit.cleanup14_crit_edge ], [ 0, %if.end13.i.cleanup14_crit_edge ], [ 0, %land.lhs.true.i.cleanup14_crit_edge ], [ 0, %lor.lhs.false.i.cleanup14_crit_edge ], [ 0, %lor.lhs.false5.i.cleanup14_crit_edge ], [ 0, %if.else.i.cleanup14_crit_edge ]
  %25 = ptrtoint ptr %pos1 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %storemerge, ptr %pos1, align 4
  ret i32 %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rhashtable_insert_fast(ptr noundef %ht, ptr noundef %obj, [7 x i32] %params.coerce) unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 696, ptr noundef nonnull @.str.71) #16
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %4 = ptrtoint ptr %ht to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %ht, align 4
  %call.i = tail call i32 @lockdep_rht_mutex_is_held(ptr noundef %ht) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %rcu_read_lock.exit.i.do.end12.i_crit_edge

rcu_read_lock.exit.i.do.end12.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end12.i

lor.lhs.false.i:                                  ; preds = %rcu_read_lock.exit.i
  %call5.i = tail call i32 @rcu_read_lock_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.do.end12.i_crit_edge

lor.lhs.false.i.do.end12.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end12.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call7.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i.do.end12.i_crit_edge, label %land.lhs.true9.i

land.lhs.true.i.do.end12.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end12.i

land.lhs.true9.i:                                 ; preds = %land.lhs.true.i
  %.b2.i = load i1, ptr @__rhashtable_insert_fast.__warned, align 1
  br i1 %.b2.i, label %land.lhs.true9.i.do.end12.i_crit_edge, label %if.then.i

land.lhs.true9.i.do.end12.i_crit_edge:            ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end12.i

if.then.i:                                        ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @__rhashtable_insert_fast.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.65, i32 noundef 715, ptr noundef nonnull @.str.66) #16
  br label %do.end12.i

do.end12.i:                                       ; preds = %if.then.i, %land.lhs.true9.i.do.end12.i_crit_edge, %land.lhs.true.i.do.end12.i_crit_edge, %lor.lhs.false.i.do.end12.i_crit_edge, %rcu_read_lock.exit.i.do.end12.i_crit_edge
  %params.coerce.fca.5.extract.i.i = extractvalue [7 x i32] %params.coerce, 5
  %6 = inttoptr i32 %params.coerce.fca.5.extract.i.i to ptr
  %head_offset.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 3
  %7 = ptrtoint ptr %head_offset.i.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %head_offset.i.i.i, align 2
  %conv.i.i.i = zext i16 %8 to i32
  %idx.neg.i.i.i = sub nsw i32 0, %conv.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %obj, i32 %idx.neg.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %params.coerce.fca.5.extract.i.i)
  %tobool.not.i3.i = icmp eq i32 %params.coerce.fca.5.extract.i.i, 0
  br i1 %tobool.not.i3.i, label %if.then.i.i.i.i, label %cond.true.i.i, !prof !309

cond.true.i.i:                                    ; preds = %do.end12.i
  %params.coerce.fca.0.extract.i.i = extractvalue [7 x i32] %params.coerce, 0
  %conv.i.i = and i32 %params.coerce.fca.0.extract.i.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i.i)
  %tobool4.not.i.i = icmp eq i32 %conv.i.i, 0
  br i1 %tobool4.not.i.i, label %cond.false.i.i, label %cond.true.i.i.cond.end.i.i_crit_edge

cond.true.i.i.cond.end.i.i_crit_edge:             ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %key_len6.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 1
  %9 = ptrtoint ptr %key_len6.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %key_len6.i.i, align 2
  %conv7.i.i = zext i16 %10 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i.cond.end.i.i_crit_edge
  %cond.i.i = phi i32 [ %conv7.i.i, %cond.false.i.i ], [ %conv.i.i, %cond.true.i.i.cond.end.i.i_crit_edge ]
  %hash_rnd.i.i = getelementptr inbounds %struct.bucket_table, ptr %5, i32 0, i32 2
  %11 = ptrtoint ptr %hash_rnd.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %hash_rnd.i.i, align 8
  %call8.i.i = tail call i32 %6(ptr noundef %add.ptr.i.i.i, i32 noundef %cond.i.i, i32 noundef %12) #16
  br label %rht_head_hashfn.exit.i

if.then.i.i.i.i:                                  ; preds = %do.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  %hash_rnd.i.i.i = getelementptr inbounds %struct.bucket_table, ptr %5, i32 0, i32 2
  %13 = ptrtoint ptr %hash_rnd.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %hash_rnd.i.i.i, align 8
  %params.coerce.fca.1.extract.i.i = extractvalue [7 x i32] %params.coerce, 1
  %params.sroa.3.4.extract.shift.i.i = lshr i32 %params.coerce.fca.1.extract.i.i, 16
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %params.sroa.3.4.extract.shift.i.i
  %hashfn.i.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 7
  %15 = ptrtoint ptr %hashfn.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %hashfn.i.i.i.i, align 4
  %key_len1.i.i.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 1
  %17 = ptrtoint ptr %key_len1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %key_len1.i.i.i.i, align 4
  %call.i.i.i.i = tail call i32 %16(ptr noundef %add.ptr.i.i, i32 noundef %18, i32 noundef %14) #16
  br label %rht_head_hashfn.exit.i

rht_head_hashfn.exit.i:                           ; preds = %if.then.i.i.i.i, %cond.end.i.i
  %hash.2.i.i.sink.i.i = phi i32 [ %call8.i.i, %cond.end.i.i ], [ %call.i.i.i.i, %if.then.i.i.i.i ]
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %5, align 128
  %sub.i.i.i.i = add i32 %20, -1
  %and.i3.i.i.i = and i32 %sub.i.i.i.i, %hash.2.i.i.sink.i.i
  %nest.i.i = getelementptr inbounds %struct.bucket_table, ptr %5, i32 0, i32 1
  %21 = ptrtoint ptr %nest.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %nest.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i4.i = icmp eq i32 %22, 0
  br i1 %tobool.not.i4.i, label %cond.false.i7.i, label %cond.true.i6.i, !prof !310

cond.true.i6.i:                                   ; preds = %rht_head_hashfn.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i5.i = tail call ptr @rht_bucket_nested_insert(ptr noundef %ht, ptr noundef %5, i32 noundef %and.i3.i.i.i) #16
  br label %rht_bucket_insert.exit.i

cond.false.i7.i:                                  ; preds = %rht_head_hashfn.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.i.i = getelementptr %struct.bucket_table, ptr %5, i32 0, i32 8, i32 %and.i3.i.i.i
  br label %rht_bucket_insert.exit.i

rht_bucket_insert.exit.i:                         ; preds = %cond.false.i7.i, %cond.true.i6.i
  %cond.i8.i = phi ptr [ %call.i5.i, %cond.true.i6.i ], [ %arrayidx.i.i, %cond.false.i7.i ]
  %tobool17.not.i = icmp eq ptr %cond.i8.i, null
  br i1 %tobool17.not.i, label %rht_bucket_insert.exit.i.out.i_crit_edge, label %if.end19.i

rht_bucket_insert.exit.i.out.i_crit_edge:         ; preds = %rht_bucket_insert.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.end19.i:                                       ; preds = %rht_bucket_insert.exit.i
  tail call fastcc void @rht_lock(ptr noundef %5, ptr noundef nonnull %cond.i8.i) #16
  %future_tbl.i = getelementptr inbounds %struct.bucket_table, ptr %5, i32 0, i32 5
  %23 = ptrtoint ptr %future_tbl.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %future_tbl.i, align 4
  %tobool25.not.i = icmp eq ptr %24, null
  br i1 %tobool25.not.i, label %if.end30.i, label %if.end19.i.slow_path.i_crit_edge, !prof !310

if.end19.i.slow_path.i_crit_edge:                 ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %slow_path.i

slow_path.i:                                      ; preds = %rht_grow_above_100.exit.i.slow_path.i_crit_edge, %for.end.i.slow_path.i_crit_edge, %if.end19.i.slow_path.i_crit_edge
  tail call fastcc void @rht_unlock(ptr noundef %5, ptr noundef nonnull %cond.i8.i) #16
  %call.i10.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i10.i, label %slow_path.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i13.i

slow_path.i.rcu_read_unlock.exit.i_crit_edge:     ; preds = %slow_path.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit.i

land.lhs.true.i13.i:                              ; preds = %slow_path.i
  %call1.i11.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call1.i11.i, 0
  br i1 %tobool.not.i12.i, label %land.lhs.true.i13.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i15.i

land.lhs.true.i13.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i15.i:                             ; preds = %land.lhs.true.i13.i
  %.b4.i14.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14.i, label %land.lhs.true2.i15.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i16.i

land.lhs.true2.i15.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit.i

if.then.i16.i:                                    ; preds = %land.lhs.true2.i15.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 724, ptr noundef nonnull @.str.72) #16
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i16.i, %land.lhs.true2.i15.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i13.i.rcu_read_unlock.exit.i_crit_edge, %slow_path.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !318
  %25 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i.i.i17.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i.i.i17.i to ptr
  %preempt_count.i.i.i.i18.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %preempt_count.i.i.i.i18.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %preempt_count.i.i.i.i18.i, align 4
  %sub.i.i.i19.i = add i32 %28, -1
  store volatile i32 %sub.i.i.i19.i, ptr %preempt_count.i.i.i.i18.i, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  %call29.i = tail call ptr @rhashtable_insert_slow(ptr noundef %ht, ptr noundef null, ptr noundef %obj) #16
  br label %cleanup

if.end30.i:                                       ; preds = %if.end19.i
  %call.i20.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %5, i32 noundef %and.i3.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i20.i)
  %tobool.not.i21.i = icmp eq i32 %call.i20.i, 0
  br i1 %tobool.not.i21.i, label %land.lhs.true.i23.i, label %if.end30.i.rht_ptr.exit.i_crit_edge

if.end30.i.rht_ptr.exit.i_crit_edge:              ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rht_ptr.exit.i

land.lhs.true.i23.i:                              ; preds = %if.end30.i
  %call1.i22.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i22.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i22.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i23.i.rht_ptr.exit.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i23.i.rht_ptr.exit.i_crit_edge:     ; preds = %land.lhs.true.i23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rht_ptr.exit.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i23.i
  %.b7.i.i = load i1, ptr @rht_ptr.__warned, align 1
  br i1 %.b7.i.i, label %land.lhs.true3.i.i.rht_ptr.exit.i_crit_edge, label %if.then.i24.i

land.lhs.true3.i.i.rht_ptr.exit.i_crit_edge:      ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rht_ptr.exit.i

if.then.i24.i:                                    ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rht_ptr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.65, i32 noundef 377, ptr noundef nonnull @.str.68) #16
  br label %rht_ptr.exit.i

rht_ptr.exit.i:                                   ; preds = %if.then.i24.i, %land.lhs.true3.i.i.rht_ptr.exit.i_crit_edge, %land.lhs.true.i23.i.rht_ptr.exit.i_crit_edge, %if.end30.i.rht_ptr.exit.i_crit_edge
  %29 = ptrtoint ptr %cond.i8.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cond.i8.i, align 4
  %31 = ptrtoint ptr %30 to i32
  %and.i.i.i = and i32 %31, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  %32 = ptrtoint ptr %cond.i8.i to i32
  %or.i.i.i = or i32 %32, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 %or.i.i.i, i32 %and.i.i.i
  %and.i63.i = and i32 %cond.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i63.i)
  %tobool.i.not64.i = icmp eq i32 %and.i63.i, 0
  br i1 %tobool.i.not64.i, label %for.body.preheader.i, label %rht_ptr.exit.i.if.end152.i_crit_edge

rht_ptr.exit.i.if.end152.i_crit_edge:             ; preds = %rht_ptr.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end152.i

for.body.preheader.i:                             ; preds = %rht_ptr.exit.i
  %33 = inttoptr i32 %cond.i.i.i to ptr
  br label %for.body.i

for.body.i:                                       ; preds = %do.end147.i.for.body.i_crit_edge, %for.body.preheader.i
  %head.066.i = phi ptr [ %35, %do.end147.i.for.body.i_crit_edge ], [ %33, %for.body.preheader.i ]
  %elasticity.065.i = phi i32 [ %dec.i, %do.end147.i.for.body.i_crit_edge ], [ 16, %for.body.preheader.i ]
  %dec.i = add i32 %elasticity.065.i, -1
  %call137.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %5, i32 noundef %and.i3.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call137.i)
  %tobool138.not.i = icmp eq i32 %call137.i, 0
  br i1 %tobool138.not.i, label %land.lhs.true139.i, label %for.body.i.do.end147.i_crit_edge

for.body.i.do.end147.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end147.i

land.lhs.true139.i:                               ; preds = %for.body.i
  %call140.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call140.i)
  %tobool141.not.i = icmp eq i32 %call140.i, 0
  br i1 %tobool141.not.i, label %land.lhs.true139.i.do.end147.i_crit_edge, label %land.lhs.true142.i

land.lhs.true139.i.do.end147.i_crit_edge:         ; preds = %land.lhs.true139.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end147.i

land.lhs.true142.i:                               ; preds = %land.lhs.true139.i
  %.b2811.i = load i1, ptr @__rhashtable_insert_fast.__warned.69, align 1
  br i1 %.b2811.i, label %land.lhs.true142.i.do.end147.i_crit_edge, label %if.then144.i

land.lhs.true142.i.do.end147.i_crit_edge:         ; preds = %land.lhs.true142.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end147.i

if.then144.i:                                     ; preds = %land.lhs.true142.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @__rhashtable_insert_fast.__warned.69, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.65, i32 noundef 732, ptr noundef nonnull @.str.68) #16
  br label %do.end147.i

do.end147.i:                                      ; preds = %if.then144.i, %land.lhs.true142.i.do.end147.i_crit_edge, %land.lhs.true139.i.do.end147.i_crit_edge, %for.body.i.do.end147.i_crit_edge
  %34 = ptrtoint ptr %head.066.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %head.066.i, align 4
  %36 = ptrtoint ptr %35 to i32
  %and.i.i = and i32 %36, 1
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %do.end147.i.for.body.i_crit_edge, label %for.end.i

do.end147.i.for.body.i_crit_edge:                 ; preds = %do.end147.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.i:                                        ; preds = %do.end147.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %phi.cmp.i = icmp slt i32 %dec.i, 1
  br i1 %phi.cmp.i, label %for.end.i.slow_path.i_crit_edge, label %for.end.i.if.end152.i_crit_edge

for.end.i.if.end152.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end152.i

for.end.i.slow_path.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %slow_path.i

if.end152.i:                                      ; preds = %for.end.i.if.end152.i_crit_edge, %rht_ptr.exit.i.if.end152.i_crit_edge
  %nelems.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 8
  %call.i.i.i25.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i.i, i32 noundef 4) #16
  %37 = ptrtoint ptr %nelems.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %nelems.i.i, align 4
  %max_elems.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 2
  %39 = ptrtoint ptr %max_elems.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %max_elems.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %40)
  %cmp.i.not.i = icmp ult i32 %38, %40
  br i1 %cmp.i.not.i, label %if.end162.i, label %out_unlock.i, !prof !310

if.end162.i:                                      ; preds = %if.end152.i
  %call.i.i.i27.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i.i, i32 noundef 4) #16
  %41 = ptrtoint ptr %nelems.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %nelems.i.i, align 4
  %43 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %5, align 128
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %44)
  %cmp.i28.i = icmp ugt i32 %42, %44
  br i1 %cmp.i28.i, label %rht_grow_above_100.exit.i, label %if.end162.i.if.end171.i_crit_edge

if.end162.i.if.end171.i_crit_edge:                ; preds = %if.end162.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end171.i

rht_grow_above_100.exit.i:                        ; preds = %if.end162.i
  %max_size.i.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 4
  %45 = ptrtoint ptr %max_size.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %max_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i29.i = icmp eq i32 %46, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %46)
  %cmp4.i.i = icmp ult i32 %44, %46
  %spec.select.i.i = select i1 %tobool.not.i29.i, i1 true, i1 %cmp4.i.i
  br i1 %spec.select.i.i, label %rht_grow_above_100.exit.i.slow_path.i_crit_edge, label %rht_grow_above_100.exit.i.if.end171.i_crit_edge, !prof !309

rht_grow_above_100.exit.i.if.end171.i_crit_edge:  ; preds = %rht_grow_above_100.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end171.i

rht_grow_above_100.exit.i.slow_path.i_crit_edge:  ; preds = %rht_grow_above_100.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %slow_path.i

if.end171.i:                                      ; preds = %rht_grow_above_100.exit.i.if.end171.i_crit_edge, %if.end162.i.if.end171.i_crit_edge
  %call.i30.i = tail call i32 @lockdep_rht_bucket_is_held(ptr noundef %5, i32 noundef %and.i3.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i30.i)
  %tobool.not.i31.i = icmp eq i32 %call.i30.i, 0
  br i1 %tobool.not.i31.i, label %land.lhs.true.i34.i, label %if.end171.i.rht_ptr.exit42.i_crit_edge

if.end171.i.rht_ptr.exit42.i_crit_edge:           ; preds = %if.end171.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rht_ptr.exit42.i

land.lhs.true.i34.i:                              ; preds = %if.end171.i
  %call1.i32.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i32.i)
  %tobool2.not.i33.i = icmp eq i32 %call1.i32.i, 0
  br i1 %tobool2.not.i33.i, label %land.lhs.true.i34.i.rht_ptr.exit42.i_crit_edge, label %land.lhs.true3.i36.i

land.lhs.true.i34.i.rht_ptr.exit42.i_crit_edge:   ; preds = %land.lhs.true.i34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rht_ptr.exit42.i

land.lhs.true3.i36.i:                             ; preds = %land.lhs.true.i34.i
  %.b7.i35.i = load i1, ptr @rht_ptr.__warned, align 1
  br i1 %.b7.i35.i, label %land.lhs.true3.i36.i.rht_ptr.exit42.i_crit_edge, label %if.then.i37.i

land.lhs.true3.i36.i.rht_ptr.exit42.i_crit_edge:  ; preds = %land.lhs.true3.i36.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rht_ptr.exit42.i

if.then.i37.i:                                    ; preds = %land.lhs.true3.i36.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rht_ptr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.65, i32 noundef 377, ptr noundef nonnull @.str.68) #16
  br label %rht_ptr.exit42.i

rht_ptr.exit42.i:                                 ; preds = %if.then.i37.i, %land.lhs.true3.i36.i.rht_ptr.exit42.i_crit_edge, %land.lhs.true.i34.i.rht_ptr.exit42.i_crit_edge, %if.end171.i.rht_ptr.exit42.i_crit_edge
  %47 = ptrtoint ptr %cond.i8.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %cond.i8.i, align 4
  %49 = ptrtoint ptr %48 to i32
  %and.i.i38.i = and i32 %49, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i38.i)
  %tobool.not.i.i39.i = icmp eq i32 %and.i.i38.i, 0
  %cond.i.i41.i = select i1 %tobool.not.i.i39.i, i32 %or.i.i.i, i32 %and.i.i38.i
  %50 = inttoptr i32 %cond.i.i41.i to ptr
  %51 = ptrtoint ptr %obj to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %50, ptr %obj, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nelems.i.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %nelems.i.i, i32 1, i32 3, i32 1) #16
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nelems.i.i, ptr %nelems.i.i, i32 1, ptr elementtype(i32) %nelems.i.i) #16, !srcloc !319
  tail call fastcc void @rht_assign_unlock(ptr noundef %5, ptr noundef nonnull %cond.i8.i, ptr noundef %obj) #16
  %call.i.i.i44.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nelems.i.i, i32 noundef 4) #16
  %53 = ptrtoint ptr %nelems.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %nelems.i.i, align 4
  %55 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %5, align 128
  %div8.i.i = lshr i32 %56, 2
  %mul.i.i = mul nuw i32 %div8.i.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %mul.i.i)
  %cmp.i45.i = icmp ugt i32 %54, %mul.i.i
  br i1 %cmp.i45.i, label %rht_grow_above_75.exit.i, label %rht_ptr.exit42.i.out.i_crit_edge

rht_ptr.exit42.i.out.i_crit_edge:                 ; preds = %rht_ptr.exit42.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

rht_grow_above_75.exit.i:                         ; preds = %rht_ptr.exit42.i
  %max_size.i46.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 3, i32 4
  %57 = ptrtoint ptr %max_size.i46.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %max_size.i46.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.not.i47.i = icmp eq i32 %58, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %58)
  %cmp4.i48.i = icmp ult i32 %56, %58
  %spec.select.i49.i = select i1 %tobool.not.i47.i, i1 true, i1 %cmp4.i48.i
  br i1 %spec.select.i49.i, label %if.then207.i, label %rht_grow_above_75.exit.i.out.i_crit_edge

rht_grow_above_75.exit.i.out.i_crit_edge:         ; preds = %rht_grow_above_75.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.then207.i:                                     ; preds = %rht_grow_above_75.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %run_work.i = getelementptr inbounds %struct.rhashtable, ptr %ht, i32 0, i32 5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %59 = load ptr, ptr @system_wq, align 4
  %call.i.i51.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %59, ptr noundef %run_work.i) #16
  br label %out.i

out.i:                                            ; preds = %out_unlock.i, %if.then207.i, %rht_grow_above_75.exit.i.out.i_crit_edge, %rht_ptr.exit42.i.out.i_crit_edge, %rht_bucket_insert.exit.i.out.i_crit_edge
  %call.i52.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i52.i, label %out.i.rcu_read_unlock.exit62.i_crit_edge, label %land.lhs.true.i55.i

out.i.rcu_read_unlock.exit62.i_crit_edge:         ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit62.i

land.lhs.true.i55.i:                              ; preds = %out.i
  %call1.i53.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i53.i)
  %tobool.not.i54.i = icmp eq i32 %call1.i53.i, 0
  br i1 %tobool.not.i54.i, label %land.lhs.true.i55.i.rcu_read_unlock.exit62.i_crit_edge, label %land.lhs.true2.i57.i

land.lhs.true.i55.i.rcu_read_unlock.exit62.i_crit_edge: ; preds = %land.lhs.true.i55.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit62.i

land.lhs.true2.i57.i:                             ; preds = %land.lhs.true.i55.i
  %.b4.i56.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i56.i, label %land.lhs.true2.i57.i.rcu_read_unlock.exit62.i_crit_edge, label %if.then.i58.i

land.lhs.true2.i57.i.rcu_read_unlock.exit62.i_crit_edge: ; preds = %land.lhs.true2.i57.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit62.i

if.then.i58.i:                                    ; preds = %land.lhs.true2.i57.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 724, ptr noundef nonnull @.str.72) #16
  br label %rcu_read_unlock.exit62.i

rcu_read_unlock.exit62.i:                         ; preds = %if.then.i58.i, %land.lhs.true2.i57.i.rcu_read_unlock.exit62.i_crit_edge, %land.lhs.true.i55.i.rcu_read_unlock.exit62.i_crit_edge, %out.i.rcu_read_unlock.exit62.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !318
  %60 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i.i.i59.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i.i.i59.i to ptr
  %preempt_count.i.i.i.i60.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i.i.i60.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i.i.i60.i, align 4
  %sub.i.i.i61.i = add i32 %63, -1
  store volatile i32 %sub.i.i.i61.i, ptr %preempt_count.i.i.i.i60.i, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  br label %cleanup

out_unlock.i:                                     ; preds = %if.end152.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @rht_unlock(ptr noundef %5, ptr noundef nonnull %cond.i8.i) #16
  br label %out.i

cleanup:                                          ; preds = %rcu_read_unlock.exit62.i, %rcu_read_unlock.exit.i
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @aa_free_profile(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @aa_dfa_unpack(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @aa_map_resource(i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @aa_free_domain_entries(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @jhash(ptr nocapture noundef readonly %key, i32 noundef %length, i32 noundef %initval) unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %add = add i32 %length, -559038737
  %add1 = add i32 %add, %initval
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %length)
  %cmp213 = icmp ugt i32 %length, 12
  br i1 %cmp213, label %entry.while.body_crit_edge, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %k.0218 = phi ptr [ %add.ptr31, %while.body.while.body_crit_edge ], [ %key, %entry.while.body_crit_edge ]
  %c.0217 = phi i32 [ %xor28, %while.body.while.body_crit_edge ], [ %add1, %entry.while.body_crit_edge ]
  %b.0216 = phi i32 [ %add29, %while.body.while.body_crit_edge ], [ %add1, %entry.while.body_crit_edge ]
  %a.0215 = phi i32 [ %add25, %while.body.while.body_crit_edge ], [ %add1, %entry.while.body_crit_edge ]
  %length.addr.0214 = phi i32 [ %sub30, %while.body.while.body_crit_edge ], [ %length, %entry.while.body_crit_edge ]
  %0 = ptrtoint ptr %k.0218 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %1 = load i32, ptr %k.0218, align 1
  %add2 = add i32 %1, %a.0215
  %add.ptr = getelementptr i8, ptr %k.0218, i32 4
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %3 = load i32, ptr %add.ptr, align 1
  %add4 = add i32 %3, %b.0216
  %add.ptr5 = getelementptr i8, ptr %k.0218, i32 8
  %4 = ptrtoint ptr %add.ptr5 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %5 = load i32, ptr %add.ptr5, align 1
  %add7 = add i32 %5, %c.0217
  %sub = sub i32 %add2, %add7
  %or.i = tail call i32 @llvm.fshl.i32(i32 %add7, i32 %add7, i32 4) #16
  %xor = xor i32 %sub, %or.i
  %add9 = add i32 %add7, %add4
  %sub10 = sub i32 %add4, %xor
  %or.i201 = tail call i32 @llvm.fshl.i32(i32 %xor, i32 %xor, i32 6) #16
  %xor12 = xor i32 %sub10, %or.i201
  %add13 = add i32 %xor, %add9
  %sub14 = sub i32 %add9, %xor12
  %or.i202 = tail call i32 @llvm.fshl.i32(i32 %xor12, i32 %xor12, i32 8) #16
  %xor16 = xor i32 %sub14, %or.i202
  %add17 = add i32 %xor12, %add13
  %sub18 = sub i32 %add13, %xor16
  %or.i203 = tail call i32 @llvm.fshl.i32(i32 %xor16, i32 %xor16, i32 16) #16
  %xor20 = xor i32 %sub18, %or.i203
  %add21 = add i32 %xor16, %add17
  %sub22 = sub i32 %add17, %xor20
  %or.i204 = tail call i32 @llvm.fshl.i32(i32 %xor20, i32 %xor20, i32 19) #16
  %xor24 = xor i32 %sub22, %or.i204
  %add25 = add i32 %xor20, %add21
  %sub26 = sub i32 %add21, %xor24
  %or.i205 = tail call i32 @llvm.fshl.i32(i32 %xor24, i32 %xor24, i32 4) #16
  %xor28 = xor i32 %sub26, %or.i205
  %add29 = add i32 %xor24, %add25
  %sub30 = add i32 %length.addr.0214, -12
  %add.ptr31 = getelementptr i8, ptr %k.0218, i32 12
  %cmp = icmp ugt i32 %sub30, 12
  br i1 %cmp, label %while.body.while.body_crit_edge, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %length.addr.0.lcssa = phi i32 [ %length, %entry.while.end_crit_edge ], [ %sub30, %while.body.while.end_crit_edge ]
  %a.0.lcssa = phi i32 [ %add1, %entry.while.end_crit_edge ], [ %add25, %while.body.while.end_crit_edge ]
  %b.0.lcssa = phi i32 [ %add1, %entry.while.end_crit_edge ], [ %add29, %while.body.while.end_crit_edge ]
  %c.0.lcssa = phi i32 [ %add1, %entry.while.end_crit_edge ], [ %xor28, %while.body.while.end_crit_edge ]
  %k.0.lcssa = phi ptr [ %key, %entry.while.end_crit_edge ], [ %add.ptr31, %while.body.while.end_crit_edge ]
  %6 = zext i32 %length.addr.0.lcssa to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.145)
  switch i32 %length.addr.0.lcssa, label %while.end.sw.epilog_crit_edge [
    i32 12, label %sw.bb
    i32 11, label %while.end.sw.bb33_crit_edge
    i32 10, label %while.end.sw.bb38_crit_edge
    i32 9, label %while.end.sw.bb43_crit_edge
    i32 8, label %while.end.sw.bb47_crit_edge
    i32 7, label %while.end.sw.bb52_crit_edge
    i32 6, label %while.end.sw.bb57_crit_edge
    i32 5, label %while.end.sw.bb62_crit_edge
    i32 4, label %while.end.sw.bb66_crit_edge
    i32 3, label %while.end.sw.bb71_crit_edge
    i32 2, label %while.end.sw.bb76_crit_edge
    i32 1, label %while.end.sw.bb81_crit_edge
  ]

while.end.sw.bb81_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb81

while.end.sw.bb76_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb76

while.end.sw.bb71_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb71

while.end.sw.bb66_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb66

while.end.sw.bb62_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb62

while.end.sw.bb57_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb57

while.end.sw.bb52_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb52

while.end.sw.bb47_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb47

while.end.sw.bb43_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb43

while.end.sw.bb38_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb38

while.end.sw.bb33_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb33

while.end.sw.epilog_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx = getelementptr i8, ptr %k.0.lcssa, i32 11
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %8 to i32
  %shl = shl nuw i32 %conv, 24
  %add32 = add i32 %shl, %c.0.lcssa
  br label %sw.bb33

sw.bb33:                                          ; preds = %sw.bb, %while.end.sw.bb33_crit_edge
  %c.1 = phi i32 [ %c.0.lcssa, %while.end.sw.bb33_crit_edge ], [ %add32, %sw.bb ]
  %arrayidx34 = getelementptr i8, ptr %k.0.lcssa, i32 10
  %9 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx34, align 1
  %conv35 = zext i8 %10 to i32
  %shl36 = shl nuw nsw i32 %conv35, 16
  %add37 = add i32 %shl36, %c.1
  br label %sw.bb38

sw.bb38:                                          ; preds = %sw.bb33, %while.end.sw.bb38_crit_edge
  %c.2 = phi i32 [ %c.0.lcssa, %while.end.sw.bb38_crit_edge ], [ %add37, %sw.bb33 ]
  %arrayidx39 = getelementptr i8, ptr %k.0.lcssa, i32 9
  %11 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx39, align 1
  %conv40 = zext i8 %12 to i32
  %shl41 = shl nuw nsw i32 %conv40, 8
  %add42 = add i32 %shl41, %c.2
  br label %sw.bb43

sw.bb43:                                          ; preds = %sw.bb38, %while.end.sw.bb43_crit_edge
  %c.3 = phi i32 [ %c.0.lcssa, %while.end.sw.bb43_crit_edge ], [ %add42, %sw.bb38 ]
  %arrayidx44 = getelementptr i8, ptr %k.0.lcssa, i32 8
  %13 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx44, align 1
  %conv45 = zext i8 %14 to i32
  %add46 = add i32 %c.3, %conv45
  br label %sw.bb47

sw.bb47:                                          ; preds = %sw.bb43, %while.end.sw.bb47_crit_edge
  %c.4 = phi i32 [ %c.0.lcssa, %while.end.sw.bb47_crit_edge ], [ %add46, %sw.bb43 ]
  %arrayidx48 = getelementptr i8, ptr %k.0.lcssa, i32 7
  %15 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx48, align 1
  %conv49 = zext i8 %16 to i32
  %shl50 = shl nuw i32 %conv49, 24
  %add51 = add i32 %shl50, %b.0.lcssa
  br label %sw.bb52

sw.bb52:                                          ; preds = %sw.bb47, %while.end.sw.bb52_crit_edge
  %b.1 = phi i32 [ %b.0.lcssa, %while.end.sw.bb52_crit_edge ], [ %add51, %sw.bb47 ]
  %c.5 = phi i32 [ %c.0.lcssa, %while.end.sw.bb52_crit_edge ], [ %c.4, %sw.bb47 ]
  %arrayidx53 = getelementptr i8, ptr %k.0.lcssa, i32 6
  %17 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx53, align 1
  %conv54 = zext i8 %18 to i32
  %shl55 = shl nuw nsw i32 %conv54, 16
  %add56 = add i32 %shl55, %b.1
  br label %sw.bb57

sw.bb57:                                          ; preds = %sw.bb52, %while.end.sw.bb57_crit_edge
  %b.2 = phi i32 [ %b.0.lcssa, %while.end.sw.bb57_crit_edge ], [ %add56, %sw.bb52 ]
  %c.6 = phi i32 [ %c.0.lcssa, %while.end.sw.bb57_crit_edge ], [ %c.5, %sw.bb52 ]
  %arrayidx58 = getelementptr i8, ptr %k.0.lcssa, i32 5
  %19 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx58, align 1
  %conv59 = zext i8 %20 to i32
  %shl60 = shl nuw nsw i32 %conv59, 8
  %add61 = add i32 %shl60, %b.2
  br label %sw.bb62

sw.bb62:                                          ; preds = %sw.bb57, %while.end.sw.bb62_crit_edge
  %b.3 = phi i32 [ %b.0.lcssa, %while.end.sw.bb62_crit_edge ], [ %add61, %sw.bb57 ]
  %c.7 = phi i32 [ %c.0.lcssa, %while.end.sw.bb62_crit_edge ], [ %c.6, %sw.bb57 ]
  %arrayidx63 = getelementptr i8, ptr %k.0.lcssa, i32 4
  %21 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx63, align 1
  %conv64 = zext i8 %22 to i32
  %add65 = add i32 %b.3, %conv64
  br label %sw.bb66

sw.bb66:                                          ; preds = %sw.bb62, %while.end.sw.bb66_crit_edge
  %b.4 = phi i32 [ %b.0.lcssa, %while.end.sw.bb66_crit_edge ], [ %add65, %sw.bb62 ]
  %c.8 = phi i32 [ %c.0.lcssa, %while.end.sw.bb66_crit_edge ], [ %c.7, %sw.bb62 ]
  %arrayidx67 = getelementptr i8, ptr %k.0.lcssa, i32 3
  %23 = ptrtoint ptr %arrayidx67 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx67, align 1
  %conv68 = zext i8 %24 to i32
  %shl69 = shl nuw i32 %conv68, 24
  %add70 = add i32 %shl69, %a.0.lcssa
  br label %sw.bb71

sw.bb71:                                          ; preds = %sw.bb66, %while.end.sw.bb71_crit_edge
  %a.1 = phi i32 [ %a.0.lcssa, %while.end.sw.bb71_crit_edge ], [ %add70, %sw.bb66 ]
  %b.5 = phi i32 [ %b.0.lcssa, %while.end.sw.bb71_crit_edge ], [ %b.4, %sw.bb66 ]
  %c.9 = phi i32 [ %c.0.lcssa, %while.end.sw.bb71_crit_edge ], [ %c.8, %sw.bb66 ]
  %arrayidx72 = getelementptr i8, ptr %k.0.lcssa, i32 2
  %25 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx72, align 1
  %conv73 = zext i8 %26 to i32
  %shl74 = shl nuw nsw i32 %conv73, 16
  %add75 = add i32 %shl74, %a.1
  br label %sw.bb76

sw.bb76:                                          ; preds = %sw.bb71, %while.end.sw.bb76_crit_edge
  %a.2 = phi i32 [ %a.0.lcssa, %while.end.sw.bb76_crit_edge ], [ %add75, %sw.bb71 ]
  %b.6 = phi i32 [ %b.0.lcssa, %while.end.sw.bb76_crit_edge ], [ %b.5, %sw.bb71 ]
  %c.10 = phi i32 [ %c.0.lcssa, %while.end.sw.bb76_crit_edge ], [ %c.9, %sw.bb71 ]
  %arrayidx77 = getelementptr i8, ptr %k.0.lcssa, i32 1
  %27 = ptrtoint ptr %arrayidx77 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx77, align 1
  %conv78 = zext i8 %28 to i32
  %shl79 = shl nuw nsw i32 %conv78, 8
  %add80 = add i32 %shl79, %a.2
  br label %sw.bb81

sw.bb81:                                          ; preds = %sw.bb76, %while.end.sw.bb81_crit_edge
  %a.3 = phi i32 [ %a.0.lcssa, %while.end.sw.bb81_crit_edge ], [ %add80, %sw.bb76 ]
  %b.7 = phi i32 [ %b.0.lcssa, %while.end.sw.bb81_crit_edge ], [ %b.6, %sw.bb76 ]
  %c.11 = phi i32 [ %c.0.lcssa, %while.end.sw.bb81_crit_edge ], [ %c.10, %sw.bb76 ]
  %29 = ptrtoint ptr %k.0.lcssa to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %k.0.lcssa, align 1
  %conv83 = zext i8 %30 to i32
  %add84 = add i32 %a.3, %conv83
  %xor85 = xor i32 %c.11, %b.7
  %or.i206 = tail call i32 @llvm.fshl.i32(i32 %b.7, i32 %b.7, i32 14) #16
  %sub87 = sub i32 %xor85, %or.i206
  %xor88 = xor i32 %add84, %sub87
  %or.i207 = tail call i32 @llvm.fshl.i32(i32 %sub87, i32 %sub87, i32 11) #16
  %sub90 = sub i32 %xor88, %or.i207
  %xor91 = xor i32 %sub90, %b.7
  %or.i208 = tail call i32 @llvm.fshl.i32(i32 %sub90, i32 %sub90, i32 25) #16
  %sub93 = sub i32 %xor91, %or.i208
  %xor94 = xor i32 %sub93, %sub87
  %or.i209 = tail call i32 @llvm.fshl.i32(i32 %sub93, i32 %sub93, i32 16) #16
  %sub96 = sub i32 %xor94, %or.i209
  %xor97 = xor i32 %sub96, %sub90
  %or.i210 = tail call i32 @llvm.fshl.i32(i32 %sub96, i32 %sub96, i32 4) #16
  %sub99 = sub i32 %xor97, %or.i210
  %xor100 = xor i32 %sub99, %sub93
  %or.i211 = tail call i32 @llvm.fshl.i32(i32 %sub99, i32 %sub99, i32 14) #16
  %sub102 = sub i32 %xor100, %or.i211
  %xor103 = xor i32 %sub102, %sub96
  %or.i212 = tail call i32 @llvm.fshl.i32(i32 %sub102, i32 %sub102, i32 24) #16
  %sub105 = sub i32 %xor103, %or.i212
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb81, %while.end.sw.epilog_crit_edge
  %c.12 = phi i32 [ %c.0.lcssa, %while.end.sw.epilog_crit_edge ], [ %sub105, %sw.bb81 ]
  ret i32 %c.12
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lockdep_rht_mutex_is_held(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rht_lock(ptr noundef %tbl, ptr noundef %bkt) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @local_bh_disable()
  %0 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !320
  br label %while.cond.i

while.cond.i:                                     ; preds = %do.body14.i, %entry
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bkt, i32 noundef 4) #16
  %4 = ptrtoint ptr %bkt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %bkt, align 4
  %and.i.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %test_and_set_bit_lock.exit.i, label %while.cond.i.do.body2.i_crit_edge, !prof !321

while.cond.i.do.body2.i_crit_edge:                ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2.i

test_and_set_bit_lock.exit.i:                     ; preds = %while.cond.i
  tail call void @llvm.prefetch.p0(ptr %bkt, i32 1, i32 3, i32 1) #16
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bkt, ptr %bkt, i32 1, ptr elementtype(i32) %bkt) #16, !srcloc !322
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !323
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.not.i, label %__here, label %test_and_set_bit_lock.exit.i.do.body2.i_crit_edge, !prof !310

test_and_set_bit_lock.exit.i.do.body2.i_crit_edge: ; preds = %test_and_set_bit_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2.i

do.body2.i:                                       ; preds = %test_and_set_bit_lock.exit.i.do.body2.i_crit_edge, %while.cond.i.do.body2.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !324
  %7 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i1.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i1.i to ptr
  %preempt_count.i.i2.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i2.i, align 4
  %sub.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i2.i, align 4
  br label %do.body4.i

do.body4.i:                                       ; preds = %do.body4.i.do.body4.i_crit_edge, %do.body2.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !325
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #16, !srcloc !326
  %11 = ptrtoint ptr %bkt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %bkt, align 4
  %and1.i.i = and i32 %12, 1
  %tobool12.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool12.not.i, label %do.body14.i, label %do.body4.i.do.body4.i_crit_edge

do.body4.i.do.body4.i_crit_edge:                  ; preds = %do.body4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body4.i

do.body14.i:                                      ; preds = %do.body4.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i3.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i3.i to ptr
  %preempt_count.i.i4.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i4.i, align 4
  %add.i5.i = add i32 %16, 1
  store volatile i32 %add.i5.i, ptr %preempt_count.i.i4.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !327
  br label %while.cond.i

__here:                                           ; preds = %test_and_set_bit_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %dep_map = getelementptr inbounds %struct.bucket_table, ptr %tbl, i32 0, i32 6
  tail call void @lock_acquire(ptr noundef %dep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rht_lock, %__here) to i32)) #16
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rht_unlock(ptr noundef %tbl, ptr noundef %bkt) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  %dep_map = getelementptr inbounds %struct.bucket_table, ptr %tbl, i32 0, i32 6
  tail call void @lock_release(ptr noundef %dep_map, i32 noundef ptrtoint (ptr blockaddress(@rht_unlock, %__here) to i32)) #16
  %0 = ptrtoint ptr %bkt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bkt, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %do.body4.i, label %bit_spin_unlock.exit, !prof !309

do.body4.i:                                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #16, !srcloc !328
  unreachable

bit_spin_unlock.exit:                             ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bkt, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !329
  tail call void @llvm.prefetch.p0(ptr %bkt, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bkt, ptr %bkt, i32 1, ptr elementtype(i32) %bkt) #16, !srcloc !330
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !331
  %3 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %6, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rhashtable_insert_slow(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lockdep_rht_bucket_is_held(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rht_assign_unlock(ptr noundef %tbl, ptr noundef %bkt, ptr noundef %obj) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %obj to i32
  %and.i = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  %spec.select = select i1 %tobool.i.not, ptr %obj, ptr null
  %dep_map = getelementptr inbounds %struct.bucket_table, ptr %tbl, i32 0, i32 6
  tail call void @lock_release(ptr noundef %dep_map, i32 noundef ptrtoint (ptr blockaddress(@rht_assign_unlock, %__here) to i32)) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !332
  %1 = ptrtoint ptr %bkt to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %spec.select, ptr %bkt, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !333
  %2 = tail call i32 @llvm.read_register.i32(metadata !299) #16
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %sub.i = add i32 %5, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i, align 4
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rht_bucket_nested_insert(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @zlib_deflate_workspacesize(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @zlib_deflateInit2(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @zlib_deflate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(1)
declare dso_local noalias ptr @krealloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @zlib_deflateEnd(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kunit_kmalloc_array(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @policy_unpack_test_init(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_ptr_not_err_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @kunit_kmalloc_array(ptr noundef %test, i32 noundef 1, i32 noundef 8, i32 noundef 1051840) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %0 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %1 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %2 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 115, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %3 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %4 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %5 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %6 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @kunit_ptr_not_err_assert_format, ptr %format, align 4
  %text = getelementptr inbounds %struct.kunit_ptr_not_err_assert, ptr %__assertion, i32 0, i32 1
  %7 = ptrtoint ptr %text to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @.str.75, ptr %text, align 4
  %value = getelementptr inbounds %struct.kunit_ptr_not_err_assert, ptr %__assertion, i32 0, i32 2
  %8 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call.i, ptr %value, align 4
  %tobool.not.i = icmp ne ptr %call.i, null
  %cmp.i = icmp ule ptr %call.i, inttoptr (i32 -4096 to ptr)
  %lnot = and i1 %tobool.not.i, %cmp.i
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %lnot, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %e_size7 = getelementptr inbounds %struct.policy_unpack_fixture, ptr %call.i, i32 0, i32 1
  %9 = ptrtoint ptr %e_size7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 105, ptr %e_size7, align 4
  %call8 = call ptr @build_aa_ext_struct(ptr undef, ptr noundef %test, i32 noundef 105)
  %10 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call8, ptr %call.i, align 4
  %11 = ptrtoint ptr %test to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call.i, ptr %test, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_inbounds_when_inbounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion5 = alloca %struct.kunit_unary_assert, align 4
  %__assertion28 = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %2 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %2, align 4, !annotation !316
  %4 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %5 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %6 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 128, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %7 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %8 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %9 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %10 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %11 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @.str.106, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %12 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext true, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion5) #16
  %13 = getelementptr inbounds i8, ptr %__assertion5, i32 32
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %13, align 4, !annotation !316
  %15 = ptrtoint ptr %__assertion5 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %test, ptr %__assertion5, align 4
  %type8 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 1
  %16 = ptrtoint ptr %type8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %type8, align 4
  %line9 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 2
  %17 = ptrtoint ptr %line9 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 129, ptr %line9, align 4
  %file10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 3
  %18 = ptrtoint ptr %file10 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @.str.7, ptr %file10, align 4
  %message11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 4
  %19 = ptrtoint ptr %message11 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %message11, align 4
  %va13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 4, i32 1
  %20 = ptrtoint ptr %va13 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %va13, align 4
  %format14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 5
  %21 = ptrtoint ptr %format14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @kunit_unary_assert_format, ptr %format14, align 4
  %condition15 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion5, i32 0, i32 1
  %22 = ptrtoint ptr %condition15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @.str.107, ptr %condition15, align 4
  %expected_true16 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion5, i32 0, i32 2
  %23 = ptrtoint ptr %expected_true16 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 1, ptr %expected_true16, align 4
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %1, align 4
  %e_size = getelementptr inbounds %struct.policy_unpack_fixture, ptr %1, i32 0, i32 1
  %26 = ptrtoint ptr %e_size to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %e_size, align 4
  %div61 = lshr i32 %27, 1
  %end.i62 = getelementptr inbounds %struct.aa_ext, ptr %25, i32 0, i32 1
  %28 = ptrtoint ptr %end.i62 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %end.i62, align 4
  %pos.i63 = getelementptr inbounds %struct.aa_ext, ptr %25, i32 0, i32 2
  %30 = ptrtoint ptr %pos.i63 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pos.i63, align 4
  %sub.ptr.lhs.cast.i64 = ptrtoint ptr %29 to i32
  %sub.ptr.rhs.cast.i65 = ptrtoint ptr %31 to i32
  %sub.ptr.sub.i66 = sub i32 %sub.ptr.lhs.cast.i64, %sub.ptr.rhs.cast.i65
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i66, i32 %div61)
  %cmp.i = icmp uge i32 %sub.ptr.sub.i66, %div61
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion5, i1 noundef zeroext %cmp.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion5) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion28) #16
  %32 = getelementptr inbounds i8, ptr %__assertion28, i32 32
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 -1, ptr %32, align 4, !annotation !316
  %34 = ptrtoint ptr %__assertion28 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %test, ptr %__assertion28, align 4
  %type31 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion28, i32 0, i32 1
  %35 = ptrtoint ptr %type31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 1, ptr %type31, align 4
  %line32 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion28, i32 0, i32 2
  %36 = ptrtoint ptr %line32 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 130, ptr %line32, align 4
  %file33 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion28, i32 0, i32 3
  %37 = ptrtoint ptr %file33 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @.str.7, ptr %file33, align 4
  %message34 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion28, i32 0, i32 4
  %38 = ptrtoint ptr %message34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %message34, align 4
  %va36 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion28, i32 0, i32 4, i32 1
  %39 = ptrtoint ptr %va36 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %va36, align 4
  %format37 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion28, i32 0, i32 5
  %40 = ptrtoint ptr %format37 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @kunit_unary_assert_format, ptr %format37, align 4
  %condition38 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion28, i32 0, i32 1
  %41 = ptrtoint ptr %condition38 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @.str.108, ptr %condition38, align 4
  %expected_true39 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion28, i32 0, i32 2
  %42 = ptrtoint ptr %expected_true39 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 1, ptr %expected_true39, align 4
  %43 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %1, align 4
  %45 = ptrtoint ptr %e_size to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %e_size, align 4
  %end.i67 = getelementptr inbounds %struct.aa_ext, ptr %44, i32 0, i32 1
  %47 = ptrtoint ptr %end.i67 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %end.i67, align 4
  %pos.i68 = getelementptr inbounds %struct.aa_ext, ptr %44, i32 0, i32 2
  %49 = ptrtoint ptr %pos.i68 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pos.i68, align 4
  %sub.ptr.lhs.cast.i69 = ptrtoint ptr %48 to i32
  %sub.ptr.rhs.cast.i70 = ptrtoint ptr %50 to i32
  %sub.ptr.sub.i71 = sub i32 %sub.ptr.lhs.cast.i69, %sub.ptr.rhs.cast.i70
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i71, i32 %46)
  %cmp.i72 = icmp uge i32 %sub.ptr.sub.i71, %46
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion28, i1 noundef zeroext %cmp.i72, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion28) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_inbounds_when_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %2 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %2, align 4, !annotation !316
  %4 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %5 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %6 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 137, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %7 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %8 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %9 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %10 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %11 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @.str.109, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %12 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %expected_true, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %1, align 4
  %e_size = getelementptr inbounds %struct.policy_unpack_fixture, ptr %1, i32 0, i32 1
  %15 = ptrtoint ptr %e_size to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %e_size, align 4
  %add = add i32 %16, 1
  %end.i = getelementptr inbounds %struct.aa_ext, ptr %14, i32 0, i32 1
  %17 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %end.i, align 4
  %pos.i = getelementptr inbounds %struct.aa_ext, ptr %14, i32 0, i32 2
  %19 = ptrtoint ptr %pos.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pos.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %18 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %20 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i, i32 %add)
  %cmp.i.not = icmp ult i32 %sub.ptr.sub.i, %add
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp.i.not, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_array_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion22 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 102
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.if.end13.i.i_crit_edge, label %if.end.i.i.i

entry.if.end13.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i.i, ptr %pos1.i, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %entry.if.end13.i.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_array.exit_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_array.exit_crit_edge:         ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 11
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %cleanup.thread.i, label %unpack_nameX.exit.i.unpack_array.exit_crit_edge

unpack_nameX.exit.i.unpack_array.exit_crit_edge:  ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

cleanup.thread.i:                                 ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 2)
  %24 = load i16, ptr %spec.select.i.i, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #16
  %conv.i = zext i16 %25 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  br label %unpack_array.exit

unpack_array.exit:                                ; preds = %cleanup.thread.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge, %if.end13.i.i.unpack_array.exit_crit_edge
  %storemerge.i = phi ptr [ %add.ptr.i, %cleanup.thread.i ], [ %8, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ %8, %if.end13.i.i.unpack_array.exit_crit_edge ]
  %retval.1.i = phi i32 [ %conv.i, %cleanup.thread.i ], [ 0, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ 0, %if.end13.i.i.unpack_array.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = call ptr @memset(ptr %27, i32 255, i32 24)
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 149, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @.str.111, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv4 = zext i32 %retval.1.i to i64
  %38 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv4, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %39 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.112, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %40 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 16, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %retval.1.i)
  %cmp = icmp eq i32 %retval.1.i, 16
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %1, align 4
  %pos15 = getelementptr inbounds %struct.aa_ext, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %pos15 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pos15, align 4
  %45 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %42, align 4
  %add.ptr20 = getelementptr i8, ptr %46, i32 105
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion22) #16
  %47 = ptrtoint ptr %__assertion22 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %test, ptr %__assertion22, align 4
  %type25 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 1
  %48 = ptrtoint ptr %type25 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 1, ptr %type25, align 4
  %line26 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 2
  %49 = ptrtoint ptr %line26 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 151, ptr %line26, align 4
  %file27 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 3
  %50 = ptrtoint ptr %file27 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.7, ptr %file27, align 4
  %message28 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 4
  %51 = ptrtoint ptr %message28 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr null, ptr %message28, align 4
  %va30 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 4, i32 1
  %52 = ptrtoint ptr %va30 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %va30, align 4
  %format31 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 5
  %53 = ptrtoint ptr %format31 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr @kunit_binary_ptr_assert_format, ptr %format31, align 4
  %operation32 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 1
  %54 = ptrtoint ptr %operation32 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.110, ptr %operation32, align 4
  %left_text33 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 2
  %55 = ptrtoint ptr %left_text33 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @.str.113, ptr %left_text33, align 4
  %left_value34 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 3
  %56 = ptrtoint ptr %left_value34 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %44, ptr %left_value34, align 4
  %right_text35 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 4
  %57 = ptrtoint ptr %right_text35 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @.str.114, ptr %right_text35, align 4
  %right_value36 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 5
  %58 = ptrtoint ptr %right_value36 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %add.ptr20, ptr %right_value36, align 4
  %cmp38 = icmp eq ptr %44, %add.ptr20
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion22, i1 noundef zeroext %cmp38, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion22) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_array_with_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion22 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 88
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_array.exit_crit_edge, label %if.end.i.i.i

entry.unpack_array.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_array.exit_crit_edge

if.end.i.i.i.unpack_array.exit_crit_edge:         ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_array.exit_crit_edge

if.then.i.i.unpack_array.exit_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_array.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_array.exit_crit_edge:       ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.not.i.i = icmp eq i8 %19, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_array.exit_crit_edge

lor.lhs.false.i.i.unpack_array.exit_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(11) @__const.policy_unpack_test_unpack_array_out_of_bounds.name, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_array.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_array.exit_crit_edge:   ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %20 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 11
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %cleanup.thread.i, label %unpack_nameX.exit.i.unpack_array.exit_crit_edge

unpack_nameX.exit.i.unpack_array.exit_crit_edge:  ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

cleanup.thread.i:                                 ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 2)
  %24 = load i16, ptr %spec.select.i.i, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #16
  %conv.i = zext i16 %25 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  br label %unpack_array.exit

unpack_array.exit:                                ; preds = %cleanup.thread.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge, %lor.lhs.false5.i.i.unpack_array.exit_crit_edge, %lor.lhs.false.i.i.unpack_array.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge, %if.end.i29.i.i.unpack_array.exit_crit_edge, %if.then.i.i.unpack_array.exit_crit_edge, %if.end.i.i.i.unpack_array.exit_crit_edge, %entry.unpack_array.exit_crit_edge
  %storemerge.i = phi ptr [ %add.ptr.i, %cleanup.thread.i ], [ %8, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ %8, %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge ], [ %8, %lor.lhs.false.i.i.unpack_array.exit_crit_edge ], [ %8, %lor.lhs.false5.i.i.unpack_array.exit_crit_edge ], [ %8, %if.end.i.i.i.unpack_array.exit_crit_edge ], [ %8, %entry.unpack_array.exit_crit_edge ], [ %8, %if.end.i29.i.i.unpack_array.exit_crit_edge ], [ %8, %if.then.i.i.unpack_array.exit_crit_edge ]
  %retval.1.i = phi i32 [ %conv.i, %cleanup.thread.i ], [ 0, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ 0, %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge ], [ 0, %lor.lhs.false.i.i.unpack_array.exit_crit_edge ], [ 0, %lor.lhs.false5.i.i.unpack_array.exit_crit_edge ], [ 0, %if.end.i.i.i.unpack_array.exit_crit_edge ], [ 0, %entry.unpack_array.exit_crit_edge ], [ 0, %if.end.i29.i.i.unpack_array.exit_crit_edge ], [ 0, %if.then.i.i.unpack_array.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = call ptr @memset(ptr %27, i32 255, i32 24)
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 164, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @.str.111, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv4 = zext i32 %retval.1.i to i64
  %38 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv4, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %39 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.112, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %40 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 16, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %retval.1.i)
  %cmp = icmp eq i32 %retval.1.i, 16
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %1, align 4
  %pos15 = getelementptr inbounds %struct.aa_ext, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %pos15 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pos15, align 4
  %45 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %42, align 4
  %add.ptr20 = getelementptr i8, ptr %46, i32 105
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion22) #16
  %47 = ptrtoint ptr %__assertion22 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %test, ptr %__assertion22, align 4
  %type25 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 1
  %48 = ptrtoint ptr %type25 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 1, ptr %type25, align 4
  %line26 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 2
  %49 = ptrtoint ptr %line26 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 166, ptr %line26, align 4
  %file27 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 3
  %50 = ptrtoint ptr %file27 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.7, ptr %file27, align 4
  %message28 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 4
  %51 = ptrtoint ptr %message28 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr null, ptr %message28, align 4
  %va30 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 4, i32 1
  %52 = ptrtoint ptr %va30 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %va30, align 4
  %format31 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion22, i32 0, i32 5
  %53 = ptrtoint ptr %format31 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr @kunit_binary_ptr_assert_format, ptr %format31, align 4
  %operation32 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 1
  %54 = ptrtoint ptr %operation32 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.110, ptr %operation32, align 4
  %left_text33 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 2
  %55 = ptrtoint ptr %left_text33 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @.str.113, ptr %left_text33, align 4
  %left_value34 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 3
  %56 = ptrtoint ptr %left_value34 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %44, ptr %left_value34, align 4
  %right_text35 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 4
  %57 = ptrtoint ptr %right_text35 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @.str.114, ptr %right_text35, align 4
  %right_value36 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion22, i32 0, i32 5
  %58 = ptrtoint ptr %right_value36 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %add.ptr20, ptr %right_value36, align 4
  %cmp38 = icmp eq ptr %44, %add.ptr20
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion22, i1 noundef zeroext %cmp38, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion22) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_array_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion25 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 88
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %add.ptr3 = getelementptr i8, ptr %8, i32 104
  %end = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %add.ptr3, ptr %end, align 4
  %10 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %14, %12
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_array.exit_crit_edge, label %if.end.i.i.i

entry.unpack_array.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

if.end.i.i.i:                                     ; preds = %entry
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %12, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %16)
  %cmp.not.i.i.i = icmp eq i8 %16, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_array.exit_crit_edge

if.end.i.i.i.unpack_array.exit_crit_edge:         ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %12, i32 1
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %14 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_array.exit_crit_edge

if.then.i.i.unpack_array.exit_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %18 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 2)
  %19 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #16
  %conv.i28.i.i = zext i16 %20 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %12, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_array.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_array.exit_crit_edge:       ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %21 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool3.not.i.i = icmp eq i16 %19, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %cmp.not.i.i = icmp eq i8 %23, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_array.exit_crit_edge

lor.lhs.false.i.i.unpack_array.exit_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(11) @__const.policy_unpack_test_unpack_array_out_of_bounds.name, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %14, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_array.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_array.exit_crit_edge:   ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %24 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 11, i8 %25)
  %cmp.not.i35.i.i = icmp eq i8 %25, 11
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %12
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %cleanup.thread.i, label %unpack_nameX.exit.i.unpack_array.exit_crit_edge

unpack_nameX.exit.i.unpack_array.exit_crit_edge:  ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_array.exit

cleanup.thread.i:                                 ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %27, i32 2)
  %28 = load i16, ptr %spec.select.i.i, align 1
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #16
  %conv.i = zext i16 %29 to i32
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  br label %unpack_array.exit

unpack_array.exit:                                ; preds = %cleanup.thread.i, %unpack_nameX.exit.i.unpack_array.exit_crit_edge, %lor.lhs.false5.i.i.unpack_array.exit_crit_edge, %lor.lhs.false.i.i.unpack_array.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge, %if.end.i29.i.i.unpack_array.exit_crit_edge, %if.then.i.i.unpack_array.exit_crit_edge, %if.end.i.i.i.unpack_array.exit_crit_edge, %entry.unpack_array.exit_crit_edge
  %storemerge.i = phi ptr [ %add.ptr.i, %cleanup.thread.i ], [ %12, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ %12, %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge ], [ %12, %lor.lhs.false.i.i.unpack_array.exit_crit_edge ], [ %12, %lor.lhs.false5.i.i.unpack_array.exit_crit_edge ], [ %12, %if.end.i.i.i.unpack_array.exit_crit_edge ], [ %12, %entry.unpack_array.exit_crit_edge ], [ %12, %if.end.i29.i.i.unpack_array.exit_crit_edge ], [ %12, %if.then.i.i.unpack_array.exit_crit_edge ]
  %retval.1.i = phi i32 [ %conv.i, %cleanup.thread.i ], [ 0, %unpack_nameX.exit.i.unpack_array.exit_crit_edge ], [ 0, %unpack_u16_chunk.exit.i.i.unpack_array.exit_crit_edge ], [ 0, %lor.lhs.false.i.i.unpack_array.exit_crit_edge ], [ 0, %lor.lhs.false5.i.i.unpack_array.exit_crit_edge ], [ 0, %if.end.i.i.i.unpack_array.exit_crit_edge ], [ 0, %entry.unpack_array.exit_crit_edge ], [ 0, %if.end.i29.i.i.unpack_array.exit_crit_edge ], [ 0, %if.then.i.i.unpack_array.exit_crit_edge ]
  %30 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %31 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %32 = call ptr @memset(ptr %31, i32 255, i32 24)
  %33 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %34 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %35 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 180, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %36 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %37 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %38 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %39 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %40 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %41 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @.str.111, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv8 = zext i32 %retval.1.i to i64
  %42 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %conv8, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %43 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.115, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %44 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 0, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %cmp = icmp eq i32 %retval.1.i, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %1, align 4
  %pos19 = getelementptr inbounds %struct.aa_ext, ptr %46, i32 0, i32 2
  %47 = ptrtoint ptr %pos19 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pos19, align 4
  %49 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %46, align 4
  %add.ptr23 = getelementptr i8, ptr %50, i32 88
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion25) #16
  %51 = ptrtoint ptr %__assertion25 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %test, ptr %__assertion25, align 4
  %type28 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion25, i32 0, i32 1
  %52 = ptrtoint ptr %type28 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 1, ptr %type28, align 4
  %line29 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion25, i32 0, i32 2
  %53 = ptrtoint ptr %line29 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 182, ptr %line29, align 4
  %file30 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion25, i32 0, i32 3
  %54 = ptrtoint ptr %file30 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.7, ptr %file30, align 4
  %message31 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion25, i32 0, i32 4
  %55 = ptrtoint ptr %message31 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %message31, align 4
  %va33 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion25, i32 0, i32 4, i32 1
  %56 = ptrtoint ptr %va33 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %va33, align 4
  %format34 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion25, i32 0, i32 5
  %57 = ptrtoint ptr %format34 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @kunit_binary_ptr_assert_format, ptr %format34, align 4
  %operation35 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion25, i32 0, i32 1
  %58 = ptrtoint ptr %operation35 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @.str.110, ptr %operation35, align 4
  %left_text36 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion25, i32 0, i32 2
  %59 = ptrtoint ptr %left_text36 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @.str.113, ptr %left_text36, align 4
  %left_value37 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion25, i32 0, i32 3
  %60 = ptrtoint ptr %left_value37 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %48, ptr %left_value37, align 4
  %right_text38 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion25, i32 0, i32 4
  %61 = ptrtoint ptr %right_text38 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.116, ptr %right_text38, align 4
  %right_value39 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion25, i32 0, i32 5
  %62 = ptrtoint ptr %right_value39 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %add.ptr23, ptr %right_value39, align 4
  %cmp41 = icmp eq ptr %48, %add.ptr23
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion25, i1 noundef zeroext %cmp41, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion25) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_blob_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion10 = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 77
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.if.end13.i.i_crit_edge, label %if.end.i.i.i

entry.if.end13.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i.i, ptr %pos1.i, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %entry.if.end13.i.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_blob.exit_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_blob.exit_crit_edge:          ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 6
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  br i1 %cmp.not.i35.i.i, label %if.then.i, label %unpack_nameX.exit.i.unpack_blob.exit_crit_edge

unpack_nameX.exit.i.unpack_blob.exit_crit_edge:   ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.then.i:                                        ; preds = %unpack_nameX.exit.i
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  br i1 %cmp.i.i, label %if.end.i, label %if.then.i.unpack_blob.exit_crit_edge

if.then.i.unpack_blob.exit_crit_edge:             ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i:                                         ; preds = %if.then.i
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %24 = load i32, ptr %spec.select.i.i, align 1
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  %sub.ptr.rhs.cast.i28.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i29.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i28.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i29.i, i32 %25)
  %cmp.i30.not.i = icmp ult i32 %sub.ptr.sub.i29.i, %25
  br i1 %cmp.i30.not.i, label %if.end.i.unpack_blob.exit_crit_edge, label %cleanup.i

if.end.i.unpack_blob.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

cleanup.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10.i = getelementptr i8, ptr %add.ptr.i, i32 %25
  br label %unpack_blob.exit

unpack_blob.exit:                                 ; preds = %cleanup.i, %if.end.i.unpack_blob.exit_crit_edge, %if.then.i.unpack_blob.exit_crit_edge, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge, %if.end13.i.i.unpack_blob.exit_crit_edge
  %blob.0 = phi ptr [ null, %if.end13.i.i.unpack_blob.exit_crit_edge ], [ null, %if.end.i.unpack_blob.exit_crit_edge ], [ %add.ptr.i, %cleanup.i ], [ null, %if.then.i.unpack_blob.exit_crit_edge ], [ null, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ]
  %storemerge.i = phi ptr [ %8, %if.end13.i.i.unpack_blob.exit_crit_edge ], [ %8, %if.end.i.unpack_blob.exit_crit_edge ], [ %add.ptr10.i, %cleanup.i ], [ %8, %if.then.i.unpack_blob.exit_crit_edge ], [ %8, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ]
  %retval.1.i = phi i32 [ 0, %if.end13.i.i.unpack_blob.exit_crit_edge ], [ 0, %if.end.i.unpack_blob.exit_crit_edge ], [ %25, %cleanup.i ], [ 0, %if.then.i.unpack_blob.exit_crit_edge ], [ 0, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = call ptr @memset(ptr %27, i32 255, i32 24)
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 194, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.1.i to i64
  %38 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %39 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.118, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %40 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 6, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %retval.1.i)
  %cmp = icmp eq i32 %retval.1.i, 6
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion10) #16
  %41 = getelementptr inbounds i8, ptr %__assertion10, i32 32
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 -1, ptr %41, align 4, !annotation !316
  %43 = ptrtoint ptr %__assertion10 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %test, ptr %__assertion10, align 4
  %type13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 1
  %44 = ptrtoint ptr %type13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 1, ptr %type13, align 4
  %line14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 2
  %45 = ptrtoint ptr %line14 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 196, ptr %line14, align 4
  %file15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 3
  %46 = ptrtoint ptr %file15 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @.str.7, ptr %file15, align 4
  %message16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 4
  %47 = ptrtoint ptr %message16 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %message16, align 4
  %va18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 4, i32 1
  %48 = ptrtoint ptr %va18 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %va18, align 4
  %format19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 5
  %49 = ptrtoint ptr %format19 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr @kunit_unary_assert_format, ptr %format19, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion10, i32 0, i32 1
  %50 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.119, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion10, i32 0, i32 2
  %51 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 1, ptr %expected_true, align 4
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(6) %blob.0, ptr noundef nonnull dereferenceable(6) @.str.15, i32 6) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp22 = icmp eq i32 %bcmp, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion10, i1 noundef zeroext %cmp22, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion10) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_blob_with_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion10 = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 64
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_blob.exit_crit_edge, label %if.end.i.i.i

entry.unpack_blob.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_blob.exit_crit_edge

if.end.i.i.i.unpack_blob.exit_crit_edge:          ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_blob.exit_crit_edge

if.then.i.i.unpack_blob.exit_crit_edge:           ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_blob.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_blob.exit_crit_edge:        ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.not.i.i = icmp eq i8 %19, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_blob.exit_crit_edge

lor.lhs.false.i.i.unpack_blob.exit_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(10) @.str.14, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_blob.exit_crit_edge:    ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %20 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 6
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond40 = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond40, label %if.end.i, label %unpack_nameX.exit.i.unpack_blob.exit_crit_edge

unpack_nameX.exit.i.unpack_blob.exit_crit_edge:   ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %24 = load i32, ptr %spec.select.i.i, align 1
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  %sub.ptr.rhs.cast.i28.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i29.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i28.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i29.i, i32 %25)
  %cmp.i30.not.i = icmp ult i32 %sub.ptr.sub.i29.i, %25
  br i1 %cmp.i30.not.i, label %if.end.i.unpack_blob.exit_crit_edge, label %cleanup.i

if.end.i.unpack_blob.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

cleanup.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10.i = getelementptr i8, ptr %add.ptr.i, i32 %25
  br label %unpack_blob.exit

unpack_blob.exit:                                 ; preds = %cleanup.i, %if.end.i.unpack_blob.exit_crit_edge, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge, %if.end.i29.i.i.unpack_blob.exit_crit_edge, %if.then.i.i.unpack_blob.exit_crit_edge, %if.end.i.i.i.unpack_blob.exit_crit_edge, %entry.unpack_blob.exit_crit_edge
  %blob.0 = phi ptr [ null, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge ], [ null, %if.end.i.unpack_blob.exit_crit_edge ], [ %add.ptr.i, %cleanup.i ], [ null, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ], [ null, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge ], [ null, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge ], [ null, %if.end.i.i.i.unpack_blob.exit_crit_edge ], [ null, %entry.unpack_blob.exit_crit_edge ], [ null, %if.end.i29.i.i.unpack_blob.exit_crit_edge ], [ null, %if.then.i.i.unpack_blob.exit_crit_edge ]
  %storemerge.i = phi ptr [ %8, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge ], [ %8, %if.end.i.unpack_blob.exit_crit_edge ], [ %add.ptr10.i, %cleanup.i ], [ %8, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ], [ %8, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge ], [ %8, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge ], [ %8, %if.end.i.i.i.unpack_blob.exit_crit_edge ], [ %8, %entry.unpack_blob.exit_crit_edge ], [ %8, %if.end.i29.i.i.unpack_blob.exit_crit_edge ], [ %8, %if.then.i.i.unpack_blob.exit_crit_edge ]
  %retval.1.i = phi i32 [ 0, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge ], [ 0, %if.end.i.unpack_blob.exit_crit_edge ], [ %25, %cleanup.i ], [ 0, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ], [ 0, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge ], [ 0, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge ], [ 0, %if.end.i.i.i.unpack_blob.exit_crit_edge ], [ 0, %entry.unpack_blob.exit_crit_edge ], [ 0, %if.end.i29.i.i.unpack_blob.exit_crit_edge ], [ 0, %if.then.i.i.unpack_blob.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = call ptr @memset(ptr %27, i32 255, i32 24)
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 208, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.1.i to i64
  %38 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %39 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.118, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %40 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 6, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %retval.1.i)
  %cmp = icmp eq i32 %retval.1.i, 6
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion10) #16
  %41 = getelementptr inbounds i8, ptr %__assertion10, i32 32
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 -1, ptr %41, align 4, !annotation !316
  %43 = ptrtoint ptr %__assertion10 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %test, ptr %__assertion10, align 4
  %type13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 1
  %44 = ptrtoint ptr %type13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 1, ptr %type13, align 4
  %line14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 2
  %45 = ptrtoint ptr %line14 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 210, ptr %line14, align 4
  %file15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 3
  %46 = ptrtoint ptr %file15 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @.str.7, ptr %file15, align 4
  %message16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 4
  %47 = ptrtoint ptr %message16 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %message16, align 4
  %va18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 4, i32 1
  %48 = ptrtoint ptr %va18 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %va18, align 4
  %format19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 5
  %49 = ptrtoint ptr %format19 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr @kunit_unary_assert_format, ptr %format19, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion10, i32 0, i32 1
  %50 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.119, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion10, i32 0, i32 2
  %51 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 1, ptr %expected_true, align 4
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(6) %blob.0, ptr noundef nonnull dereferenceable(6) @.str.15, i32 6) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp22 = icmp eq i32 %bcmp, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion10, i1 noundef zeroext %cmp22, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion10) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_blob_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion23 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 64
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos2 = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos2, align 4
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %6, align 4
  %add.ptr7 = getelementptr i8, ptr %10, i32 82
  %end = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %add.ptr7, ptr %end, align 4
  %12 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %12, i32 0, i32 1
  %15 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %16, %14
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_blob.exit_crit_edge, label %if.end.i.i.i

entry.unpack_blob.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i.i.i:                                     ; preds = %entry
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %14, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %18)
  %cmp.not.i.i.i = icmp eq i8 %18, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_blob.exit_crit_edge

if.end.i.i.i.unpack_blob.exit_crit_edge:          ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %14, i32 1
  %19 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %16 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_blob.exit_crit_edge

if.then.i.i.unpack_blob.exit_crit_edge:           ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %20 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %20, i32 2)
  %21 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %21) #16
  %conv.i28.i.i = zext i16 %22 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %14, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_blob.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_blob.exit_crit_edge:        ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %23 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool3.not.i.i = icmp eq i16 %21, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %24 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %cmp.not.i.i = icmp eq i8 %25, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_blob.exit_crit_edge

lor.lhs.false.i.i.unpack_blob.exit_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(10) @.str.14, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %16, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_blob.exit_crit_edge:    ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %26 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %27)
  %cmp.not.i35.i.i = icmp eq i8 %27, 6
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %14
  %28 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond62 = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond62, label %if.end.i, label %unpack_nameX.exit.i.unpack_blob.exit_crit_edge

unpack_nameX.exit.i.unpack_blob.exit_crit_edge:   ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_blob.exit

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 4)
  %30 = load i32, ptr %spec.select.i.i, align 1
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  %sub.ptr.rhs.cast.i28.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i29.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i28.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i29.i, i32 %31)
  %cmp.i30.not.i = icmp ult i32 %sub.ptr.sub.i29.i, %31
  %add.ptr10.i = getelementptr i8, ptr %add.ptr.i, i32 %31
  %spec.select = select i1 %cmp.i30.not.i, ptr %14, ptr %add.ptr10.i
  %spec.select63 = select i1 %cmp.i30.not.i, i32 0, i32 %31
  br label %unpack_blob.exit

unpack_blob.exit:                                 ; preds = %if.end.i, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge, %if.end.i29.i.i.unpack_blob.exit_crit_edge, %if.then.i.i.unpack_blob.exit_crit_edge, %if.end.i.i.i.unpack_blob.exit_crit_edge, %entry.unpack_blob.exit_crit_edge
  %storemerge.i = phi ptr [ %14, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ], [ %14, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge ], [ %14, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge ], [ %14, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge ], [ %14, %if.end.i.i.i.unpack_blob.exit_crit_edge ], [ %14, %entry.unpack_blob.exit_crit_edge ], [ %spec.select, %if.end.i ], [ %14, %if.end.i29.i.i.unpack_blob.exit_crit_edge ], [ %14, %if.then.i.i.unpack_blob.exit_crit_edge ]
  %retval.1.i = phi i32 [ 0, %unpack_nameX.exit.i.unpack_blob.exit_crit_edge ], [ 0, %unpack_u16_chunk.exit.i.i.unpack_blob.exit_crit_edge ], [ 0, %lor.lhs.false.i.i.unpack_blob.exit_crit_edge ], [ 0, %lor.lhs.false5.i.i.unpack_blob.exit_crit_edge ], [ 0, %if.end.i.i.i.unpack_blob.exit_crit_edge ], [ 0, %entry.unpack_blob.exit_crit_edge ], [ %spec.select63, %if.end.i ], [ 0, %if.end.i29.i.i.unpack_blob.exit_crit_edge ], [ 0, %if.then.i.i.unpack_blob.exit_crit_edge ]
  %32 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %33 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %34 = call ptr @memset(ptr %33, i32 255, i32 24)
  %35 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 227, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %38 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %39 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %40 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %41 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %42 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %43 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = sext i32 %retval.1.i to i64
  %44 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %45 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr @.str.120, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %46 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 0, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %cmp = icmp eq i32 %retval.1.i, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  %47 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %1, align 4
  %pos20 = getelementptr inbounds %struct.aa_ext, ptr %48, i32 0, i32 2
  %49 = ptrtoint ptr %pos20 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pos20, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion23) #16
  %51 = ptrtoint ptr %__assertion23 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %test, ptr %__assertion23, align 4
  %type26 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion23, i32 0, i32 1
  %52 = ptrtoint ptr %type26 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 1, ptr %type26, align 4
  %line27 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion23, i32 0, i32 2
  %53 = ptrtoint ptr %line27 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 228, ptr %line27, align 4
  %file28 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion23, i32 0, i32 3
  %54 = ptrtoint ptr %file28 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.7, ptr %file28, align 4
  %message29 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion23, i32 0, i32 4
  %55 = ptrtoint ptr %message29 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %message29, align 4
  %va31 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion23, i32 0, i32 4, i32 1
  %56 = ptrtoint ptr %va31 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %va31, align 4
  %format32 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion23, i32 0, i32 5
  %57 = ptrtoint ptr %format32 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @kunit_binary_ptr_assert_format, ptr %format32, align 4
  %operation33 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion23, i32 0, i32 1
  %58 = ptrtoint ptr %operation33 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @.str.110, ptr %operation33, align 4
  %left_text34 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion23, i32 0, i32 2
  %59 = ptrtoint ptr %left_text34 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @.str.113, ptr %left_text34, align 4
  %left_value35 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion23, i32 0, i32 3
  %60 = ptrtoint ptr %left_value35 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %50, ptr %left_value35, align 4
  %right_text36 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion23, i32 0, i32 4
  %61 = ptrtoint ptr %right_text36 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.51, ptr %right_text36, align 4
  %right_value37 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion23, i32 0, i32 5
  %62 = ptrtoint ptr %right_value37 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %8, ptr %right_value37, align 4
  %cmp39 = icmp eq ptr %50, %8
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion23, i1 noundef zeroext %cmp39, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion23) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_nameX_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion12 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 38
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i, label %entry.if.end13.i_crit_edge, label %if.end.i.i

entry.if.end13.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.end.i.i:                                       ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.if.end13.i_crit_edge

if.end.i.i.if.end13.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_u16_chunk.exit.i_crit_edge

if.then.i.unpack_u16_chunk.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end.i29.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i = zext i16 %16 to i32
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %spec.select = select i1 %cmp.i26.not.i.i, ptr %incdec.ptr.i.i, ptr %add.ptr9.i.i
  br label %unpack_u16_chunk.exit.i

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge
  %storemerge.i.i = phi ptr [ %incdec.ptr.i.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ], [ %spec.select, %if.end.i29.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i, ptr %pos1.i, align 4
  br label %if.end13.i

if.end13.i:                                       ; preds = %unpack_u16_chunk.exit.i, %if.end.i.i.if.end13.i_crit_edge, %entry.if.end13.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i, label %if.end13.i.unpack_nameX.exit_crit_edge, label %if.end.i36.i

if.end13.i.unpack_nameX.exit_crit_edge:           ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i36.i:                                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %21)
  %cmp.not.i35.i = icmp eq i8 %21, 2
  %incdec.ptr.i37.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %8
  br label %unpack_nameX.exit

unpack_nameX.exit:                                ; preds = %if.end.i36.i, %if.end13.i.unpack_nameX.exit_crit_edge
  %storemerge.i = phi ptr [ %8, %if.end13.i.unpack_nameX.exit_crit_edge ], [ %spec.select.i, %if.end.i36.i ]
  %retval.0.i = phi i1 [ false, %if.end13.i.unpack_nameX.exit_crit_edge ], [ %cmp.not.i35.i, %if.end.i36.i ]
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %23 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %23, align 4, !annotation !316
  %25 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %26 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %27 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 329, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %28 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %29 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %31 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %32 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %33 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %1, align 4
  %pos7 = getelementptr inbounds %struct.aa_ext, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %pos7 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pos7, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %35, align 4
  %add.ptr10 = getelementptr i8, ptr %39, i32 39
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion12) #16
  %40 = ptrtoint ptr %__assertion12 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion12, align 4
  %type15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 1
  %41 = ptrtoint ptr %type15 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type15, align 4
  %line16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 2
  %42 = ptrtoint ptr %line16 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 331, ptr %line16, align 4
  %file17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 3
  %43 = ptrtoint ptr %file17 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file17, align 4
  %message18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 4
  %44 = ptrtoint ptr %message18 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message18, align 4
  %va20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va20 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va20, align 4
  %format21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 5
  %46 = ptrtoint ptr %format21 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_ptr_assert_format, ptr %format21, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.113, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 3
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %37, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.122, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %add.ptr10, ptr %right_value, align 4
  %cmp23 = icmp eq ptr %37, %add.ptr10
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion12, i1 noundef zeroext %cmp23, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion12) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_nameX_with_wrong_code(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion11 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 38
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i, label %entry.if.end13.i_crit_edge, label %if.end.i.i

entry.if.end13.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.end.i.i:                                       ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.if.end13.i_crit_edge

if.end.i.i.if.end13.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_u16_chunk.exit.i_crit_edge

if.then.i.unpack_u16_chunk.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i

if.end.i29.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i = zext i16 %16 to i32
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %spec.select = select i1 %cmp.i26.not.i.i, ptr %incdec.ptr.i.i, ptr %add.ptr9.i.i
  br label %unpack_u16_chunk.exit.i

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge
  %storemerge.i.i = phi ptr [ %incdec.ptr.i.i, %if.then.i.unpack_u16_chunk.exit.i_crit_edge ], [ %spec.select, %if.end.i29.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i, ptr %pos1.i, align 4
  br label %if.end13.i

if.end13.i:                                       ; preds = %unpack_u16_chunk.exit.i, %if.end.i.i.if.end13.i_crit_edge, %entry.if.end13.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i, label %if.end13.i.unpack_nameX.exit_crit_edge, label %if.end.i36.i

if.end13.i.unpack_nameX.exit_crit_edge:           ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i36.i:                                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %21)
  %cmp.not.i35.i = icmp eq i8 %21, 6
  %incdec.ptr.i37.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %8
  %phi.bo = xor i1 %cmp.not.i35.i, true
  br label %unpack_nameX.exit

unpack_nameX.exit:                                ; preds = %if.end.i36.i, %if.end13.i.unpack_nameX.exit_crit_edge
  %storemerge.i = phi ptr [ %8, %if.end13.i.unpack_nameX.exit_crit_edge ], [ %spec.select.i, %if.end.i36.i ]
  %retval.0.i = phi i1 [ true, %if.end13.i.unpack_nameX.exit_crit_edge ], [ %phi.bo, %if.end.i36.i ]
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %23 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %23, align 4, !annotation !316
  %25 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %26 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %27 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 343, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %28 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %29 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %31 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %32 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %33 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %1, align 4
  %pos7 = getelementptr inbounds %struct.aa_ext, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %pos7 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pos7, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %35, align 4
  %add.ptr9 = getelementptr i8, ptr %39, i32 38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion11) #16
  %40 = ptrtoint ptr %__assertion11 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion11, align 4
  %type14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 1
  %41 = ptrtoint ptr %type14 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type14, align 4
  %line15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 2
  %42 = ptrtoint ptr %line15 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 345, ptr %line15, align 4
  %file16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 3
  %43 = ptrtoint ptr %file16 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file16, align 4
  %message17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 4
  %44 = ptrtoint ptr %message17 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message17, align 4
  %va19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va19 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va19, align 4
  %format20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 5
  %46 = ptrtoint ptr %format20 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_ptr_assert_format, ptr %format20, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.113, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 3
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %37, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.123, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %add.ptr9, ptr %right_value, align 4
  %cmp22 = icmp eq ptr %37, %add.ptr9
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion11, i1 noundef zeroext %cmp22, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion11) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_nameX_with_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion12 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 26
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i, label %entry.unpack_nameX.exit_crit_edge, label %if.end.i.i

entry.unpack_nameX.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i.i:                                       ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.unpack_nameX.exit_crit_edge

if.end.i.i.unpack_nameX.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_nameX.exit_crit_edge

if.then.i.unpack_nameX.exit_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i29.i:                                     ; preds = %if.then.i
  %14 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i = zext i16 %16 to i32
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.unpack_nameX.exit_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i29.i.unpack_nameX.exit_crit_edge:         ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr9.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i, label %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge, label %lor.lhs.false.i

unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

lor.lhs.false.i:                                  ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i28.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.not.i = icmp eq i8 %19, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.unpack_nameX.exit_crit_edge

lor.lhs.false.i.unpack_nameX.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(9) @__const.policy_unpack_test_unpack_u32_out_of_bounds.name, ptr noundef %add.ptr.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp ne i32 %call6.i, 0
  %cmp.i.not.i33.i = icmp eq ptr %10, %add.ptr9.i.i
  %or.cond = select i1 %tobool7.not.i, i1 true, i1 %cmp.i.not.i33.i
  br i1 %or.cond, label %lor.lhs.false5.i.unpack_nameX.exit_crit_edge, label %if.end.i36.i

lor.lhs.false5.i.unpack_nameX.exit_crit_edge:     ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i36.i:                                     ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr9.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %21)
  %cmp.not.i35.i = icmp eq i8 %21, 2
  %incdec.ptr.i37.i = getelementptr i8, ptr %add.ptr9.i.i, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %8
  br label %unpack_nameX.exit

unpack_nameX.exit:                                ; preds = %if.end.i36.i, %lor.lhs.false5.i.unpack_nameX.exit_crit_edge, %lor.lhs.false.i.unpack_nameX.exit_crit_edge, %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge, %if.end.i29.i.unpack_nameX.exit_crit_edge, %if.then.i.unpack_nameX.exit_crit_edge, %if.end.i.i.unpack_nameX.exit_crit_edge, %entry.unpack_nameX.exit_crit_edge
  %storemerge.i = phi ptr [ %8, %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge ], [ %8, %lor.lhs.false.i.unpack_nameX.exit_crit_edge ], [ %8, %lor.lhs.false5.i.unpack_nameX.exit_crit_edge ], [ %spec.select.i, %if.end.i36.i ], [ %8, %if.end.i.i.unpack_nameX.exit_crit_edge ], [ %8, %entry.unpack_nameX.exit_crit_edge ], [ %8, %if.end.i29.i.unpack_nameX.exit_crit_edge ], [ %8, %if.then.i.unpack_nameX.exit_crit_edge ]
  %retval.0.i = phi i1 [ false, %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge ], [ false, %lor.lhs.false.i.unpack_nameX.exit_crit_edge ], [ false, %lor.lhs.false5.i.unpack_nameX.exit_crit_edge ], [ %cmp.not.i35.i, %if.end.i36.i ], [ false, %if.end.i.i.unpack_nameX.exit_crit_edge ], [ false, %entry.unpack_nameX.exit_crit_edge ], [ false, %if.end.i29.i.unpack_nameX.exit_crit_edge ], [ false, %if.then.i.unpack_nameX.exit_crit_edge ]
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %23 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %23, align 4, !annotation !316
  %25 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %26 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %27 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 358, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %28 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %29 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %31 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %32 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %33 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %1, align 4
  %pos7 = getelementptr inbounds %struct.aa_ext, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %pos7 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pos7, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %35, align 4
  %add.ptr10 = getelementptr i8, ptr %39, i32 39
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion12) #16
  %40 = ptrtoint ptr %__assertion12 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion12, align 4
  %type15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 1
  %41 = ptrtoint ptr %type15 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type15, align 4
  %line16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 2
  %42 = ptrtoint ptr %line16 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 360, ptr %line16, align 4
  %file17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 3
  %43 = ptrtoint ptr %file17 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file17, align 4
  %message18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 4
  %44 = ptrtoint ptr %message18 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message18, align 4
  %va20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va20 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va20, align 4
  %format21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 5
  %46 = ptrtoint ptr %format21 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_ptr_assert_format, ptr %format21, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.113, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 3
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %37, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.122, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion12, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %add.ptr10, ptr %right_value, align 4
  %cmp23 = icmp eq ptr %37, %add.ptr10
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion12, i1 noundef zeroext %cmp23, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion12) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_nameX_with_wrong_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion11 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 26
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i, label %entry.unpack_nameX.exit_crit_edge, label %if.end.i.i

entry.unpack_nameX.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i.i:                                       ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i, label %if.then.i, label %if.end.i.i.unpack_nameX.exit_crit_edge

if.end.i.i.unpack_nameX.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.then.i:                                        ; preds = %if.end.i.i
  %incdec.ptr.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %incdec.ptr.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i29.i, label %if.then.i.unpack_nameX.exit_crit_edge

if.then.i.unpack_nameX.exit_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i29.i:                                     ; preds = %if.then.i
  %14 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i = zext i16 %16 to i32
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i28.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i28.i
  br i1 %cmp.i26.not.i.i, label %if.end.i29.i.unpack_nameX.exit_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i29.i.unpack_nameX.exit_crit_edge:         ; preds = %if.end.i29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i29.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i28.i
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr9.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i, label %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge, label %lor.lhs.false.i

unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

lor.lhs.false.i:                                  ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i28.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.not.i = icmp eq i8 %19, 0
  br i1 %cmp.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.unpack_nameX.exit_crit_edge

lor.lhs.false.i.unpack_nameX.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(9) @policy_unpack_test_unpack_nameX_with_wrong_name.name, ptr noundef %add.ptr.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp ne i32 %call6.i, 0
  %cmp.i.not.i33.i = icmp eq ptr %10, %add.ptr9.i.i
  %or.cond = select i1 %tobool7.not.i, i1 true, i1 %cmp.i.not.i33.i
  br i1 %or.cond, label %lor.lhs.false5.i.unpack_nameX.exit_crit_edge, label %if.end.i36.i

lor.lhs.false5.i.unpack_nameX.exit_crit_edge:     ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_nameX.exit

if.end.i36.i:                                     ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %add.ptr9.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr9.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %21)
  %cmp.not.i35.i = icmp eq i8 %21, 2
  %incdec.ptr.i37.i = getelementptr i8, ptr %add.ptr9.i.i, i32 1
  %spec.select.i = select i1 %cmp.not.i35.i, ptr %incdec.ptr.i37.i, ptr %8
  %phi.bo = xor i1 %cmp.not.i35.i, true
  br label %unpack_nameX.exit

unpack_nameX.exit:                                ; preds = %if.end.i36.i, %lor.lhs.false5.i.unpack_nameX.exit_crit_edge, %lor.lhs.false.i.unpack_nameX.exit_crit_edge, %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge, %if.end.i29.i.unpack_nameX.exit_crit_edge, %if.then.i.unpack_nameX.exit_crit_edge, %if.end.i.i.unpack_nameX.exit_crit_edge, %entry.unpack_nameX.exit_crit_edge
  %storemerge.i = phi ptr [ %8, %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge ], [ %8, %lor.lhs.false.i.unpack_nameX.exit_crit_edge ], [ %8, %lor.lhs.false5.i.unpack_nameX.exit_crit_edge ], [ %spec.select.i, %if.end.i36.i ], [ %8, %if.end.i.i.unpack_nameX.exit_crit_edge ], [ %8, %entry.unpack_nameX.exit_crit_edge ], [ %8, %if.end.i29.i.unpack_nameX.exit_crit_edge ], [ %8, %if.then.i.unpack_nameX.exit_crit_edge ]
  %retval.0.i = phi i1 [ true, %unpack_u16_chunk.exit.i.unpack_nameX.exit_crit_edge ], [ true, %lor.lhs.false.i.unpack_nameX.exit_crit_edge ], [ true, %lor.lhs.false5.i.unpack_nameX.exit_crit_edge ], [ %phi.bo, %if.end.i36.i ], [ true, %if.end.i.i.unpack_nameX.exit_crit_edge ], [ true, %entry.unpack_nameX.exit_crit_edge ], [ true, %if.end.i29.i.unpack_nameX.exit_crit_edge ], [ true, %if.then.i.unpack_nameX.exit_crit_edge ]
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %23 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %23, align 4, !annotation !316
  %25 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %26 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %27 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 373, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %28 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %29 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %31 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %32 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %33 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %1, align 4
  %pos7 = getelementptr inbounds %struct.aa_ext, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %pos7 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pos7, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %35, align 4
  %add.ptr9 = getelementptr i8, ptr %39, i32 26
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion11) #16
  %40 = ptrtoint ptr %__assertion11 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion11, align 4
  %type14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 1
  %41 = ptrtoint ptr %type14 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type14, align 4
  %line15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 2
  %42 = ptrtoint ptr %line15 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 375, ptr %line15, align 4
  %file16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 3
  %43 = ptrtoint ptr %file16 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file16, align 4
  %message17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 4
  %44 = ptrtoint ptr %message17 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message17, align 4
  %va19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va19 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va19, align 4
  %format20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion11, i32 0, i32 5
  %46 = ptrtoint ptr %format20 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_ptr_assert_format, ptr %format20, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.113, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 3
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %37, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.124, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion11, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %add.ptr9, ptr %right_value, align 4
  %cmp22 = icmp eq ptr %37, %add.ptr9
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion11, i1 noundef zeroext %cmp22, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion11) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_str_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion13 = alloca %struct.kunit_binary_str_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 15
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.if.end13.i.i_crit_edge, label %if.end.i.i.i

entry.if.end13.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i.i, ptr %pos1.i, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %entry.if.end13.i.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.fail.i_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.fail.i_crit_edge:                    ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.i

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 5
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  br i1 %cmp.not.i35.i.i, label %if.then.i, label %unpack_nameX.exit.i.fail.i_crit_edge

unpack_nameX.exit.i.fail.i_crit_edge:             ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.i

if.then.i:                                        ; preds = %unpack_nameX.exit.i
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i.i, label %if.then.i.fail.i_crit_edge

if.then.i.fail.i_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.i

if.end.i.i:                                       ; preds = %if.then.i
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 2)
  %24 = load i16, ptr %spec.select.i.i, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #16
  %conv.i.i = zext i16 %25 to i32
  %add.ptr.i.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i.i
  br i1 %cmp.i26.not.i.i, label %if.end.i.i.fail.i_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i.i.fail.i_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.i

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i.i
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr9.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool.not.i = icmp eq i16 %24, 0
  br i1 %tobool.not.i, label %unpack_u16_chunk.exit.i.fail.i_crit_edge, label %if.then3.i

unpack_u16_chunk.exit.i.fail.i_crit_edge:         ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.i

if.then3.i:                                       ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %cmp.not.i = icmp eq i8 %28, 0
  br i1 %cmp.not.i, label %if.then3.i.unpack_str.exit_crit_edge, label %if.then3.i.fail.i_crit_edge

if.then3.i.fail.i_crit_edge:                      ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail.i

if.then3.i.unpack_str.exit_crit_edge:             ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_str.exit

fail.i:                                           ; preds = %if.then3.i.fail.i_crit_edge, %unpack_u16_chunk.exit.i.fail.i_crit_edge, %if.end.i.i.fail.i_crit_edge, %if.then.i.fail.i_crit_edge, %unpack_nameX.exit.i.fail.i_crit_edge, %if.end13.i.i.fail.i_crit_edge
  %29 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %8, ptr %pos1.i, align 4
  br label %unpack_str.exit

unpack_str.exit:                                  ; preds = %fail.i, %if.then3.i.unpack_str.exit_crit_edge
  %string.0 = phi ptr [ null, %fail.i ], [ %add.ptr.i.i, %if.then3.i.unpack_str.exit_crit_edge ]
  %retval.0.i = phi i32 [ 0, %fail.i ], [ %conv.i.i, %if.then3.i.unpack_str.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %30 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %31 = call ptr @memset(ptr %30, i32 255, i32 24)
  %32 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %33 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %34 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 240, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %35 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %36 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %37 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %38 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %39 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %40 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.0.i to i64
  %41 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %42 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @.str.125, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %43 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 8, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 8
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion13) #16
  %44 = ptrtoint ptr %__assertion13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %test, ptr %__assertion13, align 4
  %type16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion13, i32 0, i32 1
  %45 = ptrtoint ptr %type16 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 1, ptr %type16, align 4
  %line17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion13, i32 0, i32 2
  %46 = ptrtoint ptr %line17 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 241, ptr %line17, align 4
  %file18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion13, i32 0, i32 3
  %47 = ptrtoint ptr %file18 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.7, ptr %file18, align 4
  %message19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion13, i32 0, i32 4
  %48 = ptrtoint ptr %message19 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %message19, align 4
  %va21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion13, i32 0, i32 4, i32 1
  %49 = ptrtoint ptr %va21 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %va21, align 4
  %format22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion13, i32 0, i32 5
  %50 = ptrtoint ptr %format22 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @kunit_binary_str_assert_format, ptr %format22, align 4
  %operation23 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion13, i32 0, i32 1
  %51 = ptrtoint ptr %operation23 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @.str.110, ptr %operation23, align 4
  %left_text24 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion13, i32 0, i32 2
  %52 = ptrtoint ptr %left_text24 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @.str.126, ptr %left_text24, align 4
  %left_value25 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion13, i32 0, i32 3
  %53 = ptrtoint ptr %left_value25 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %string.0, ptr %left_value25, align 4
  %right_text26 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion13, i32 0, i32 4
  %54 = ptrtoint ptr %right_text26 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.127, ptr %right_text26, align 4
  %right_value27 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion13, i32 0, i32 5
  %55 = ptrtoint ptr %right_value27 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @.str.11, ptr %right_value27, align 4
  %call29 = call i32 @strcmp(ptr noundef %string.0, ptr noundef nonnull dereferenceable(8) @.str.11) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %cmp30 = icmp eq i32 %call29, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion13, i1 noundef zeroext %cmp30, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion13) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_str_with_name(ptr noundef %test) #0 align 64 {
entry:
  %string = alloca ptr, align 4
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion12 = alloca %struct.kunit_binary_str_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %string) #16
  %2 = ptrtoint ptr %string to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %string, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 4
  %call = call fastcc i32 @unpack_str(ptr noundef %4, ptr noundef nonnull %string, ptr noundef nonnull @.str.10)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %5 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %6 = call ptr @memset(ptr %5, i32 255, i32 24)
  %7 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %8 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %9 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 252, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %10 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %11 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %12 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %13 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %14 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %15 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %call to i64
  %16 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %17 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @.str.125, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %18 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 8, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %call)
  %cmp = icmp eq i32 %call, 8
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  %19 = ptrtoint ptr %string to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %string, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion12) #16
  %21 = ptrtoint ptr %__assertion12 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %test, ptr %__assertion12, align 4
  %type15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 1
  %22 = ptrtoint ptr %type15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %type15, align 4
  %line16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 2
  %23 = ptrtoint ptr %line16 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 253, ptr %line16, align 4
  %file17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 3
  %24 = ptrtoint ptr %file17 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @.str.7, ptr %file17, align 4
  %message18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 4
  %25 = ptrtoint ptr %message18 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %message18, align 4
  %va20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 4, i32 1
  %26 = ptrtoint ptr %va20 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %va20, align 4
  %format21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion12, i32 0, i32 5
  %27 = ptrtoint ptr %format21 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @kunit_binary_str_assert_format, ptr %format21, align 4
  %operation22 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion12, i32 0, i32 1
  %28 = ptrtoint ptr %operation22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.110, ptr %operation22, align 4
  %left_text23 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion12, i32 0, i32 2
  %29 = ptrtoint ptr %left_text23 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @.str.126, ptr %left_text23, align 4
  %left_value24 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion12, i32 0, i32 3
  %30 = ptrtoint ptr %left_value24 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %20, ptr %left_value24, align 4
  %right_text25 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion12, i32 0, i32 4
  %31 = ptrtoint ptr %right_text25 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @.str.127, ptr %right_text25, align 4
  %right_value26 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion12, i32 0, i32 5
  %32 = ptrtoint ptr %right_value26 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.11, ptr %right_value26, align 4
  %call28 = call i32 @strcmp(ptr noundef %20, ptr noundef nonnull dereferenceable(8) @.str.11) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %cmp29 = icmp eq i32 %call28, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion12, i1 noundef zeroext %cmp29, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion12) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %string) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_str_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %string = alloca ptr, align 4
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion20 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %string) #16
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr4 = getelementptr i8, ptr %5, i32 21
  %end = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr4, ptr %end, align 4
  %7 = load ptr, ptr %1, align 4
  %call = call fastcc i32 @unpack_str(ptr noundef %7, ptr noundef nonnull %string, ptr noundef nonnull @.str.10)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %8 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %9 = call ptr @memset(ptr %8, i32 255, i32 24)
  %10 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %11 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %12 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 268, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %13 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %14 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %15 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %16 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %17 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %18 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = sext i32 %call to i64
  %19 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %20 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @.str.120, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %21 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 0, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %1, align 4
  %pos17 = getelementptr inbounds %struct.aa_ext, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %pos17 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pos17, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion20) #16
  %26 = ptrtoint ptr %__assertion20 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %test, ptr %__assertion20, align 4
  %type23 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion20, i32 0, i32 1
  %27 = ptrtoint ptr %type23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1, ptr %type23, align 4
  %line24 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion20, i32 0, i32 2
  %28 = ptrtoint ptr %line24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 269, ptr %line24, align 4
  %file25 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion20, i32 0, i32 3
  %29 = ptrtoint ptr %file25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @.str.7, ptr %file25, align 4
  %message26 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion20, i32 0, i32 4
  %30 = ptrtoint ptr %message26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %message26, align 4
  %va28 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion20, i32 0, i32 4, i32 1
  %31 = ptrtoint ptr %va28 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %va28, align 4
  %format29 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion20, i32 0, i32 5
  %32 = ptrtoint ptr %format29 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @kunit_binary_ptr_assert_format, ptr %format29, align 4
  %operation30 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion20, i32 0, i32 1
  %33 = ptrtoint ptr %operation30 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @.str.110, ptr %operation30, align 4
  %left_text31 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion20, i32 0, i32 2
  %34 = ptrtoint ptr %left_text31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @.str.113, ptr %left_text31, align 4
  %left_value32 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion20, i32 0, i32 3
  %35 = ptrtoint ptr %left_value32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %25, ptr %left_value32, align 4
  %right_text33 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion20, i32 0, i32 4
  %36 = ptrtoint ptr %right_text33 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.51, ptr %right_text33, align 4
  %right_value34 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion20, i32 0, i32 5
  %37 = ptrtoint ptr %right_value34 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %5, ptr %right_value34, align 4
  %cmp36 = icmp eq ptr %25, %5
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion20, i1 noundef zeroext %cmp36, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion20) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %string) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_strdup_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion10 = alloca %struct.kunit_unary_assert, align 4
  %__assertion36 = alloca %struct.kunit_binary_str_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 15
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.if.end13.i.i_crit_edge, label %if.end.i.i.i

entry.if.end13.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i.i, ptr %pos1.i, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %entry.if.end13.i.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_strdup.exit.sink.split_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 5
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  br i1 %cmp.not.i35.i.i, label %if.then.i, label %unpack_nameX.exit.i.unpack_strdup.exit.sink.split_crit_edge

unpack_nameX.exit.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

if.then.i:                                        ; preds = %unpack_nameX.exit.i
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i)
  %cmp.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end.i.i, label %if.then.i.unpack_strdup.exit.sink.split_crit_edge

if.then.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

if.end.i.i:                                       ; preds = %if.then.i
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 2)
  %24 = load i16, ptr %spec.select.i.i, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #16
  %conv.i.i = zext i16 %25 to i32
  %add.ptr.i.i = getelementptr i8, ptr %spec.select.i.i, i32 2
  %sub.ptr.rhs.cast.i24.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i25.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i24.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i, i32 %conv.i.i)
  %cmp.i26.not.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i, %conv.i.i
  br i1 %cmp.i26.not.i.i, label %if.end.i.i.unpack_strdup.exit.sink.split_crit_edge, label %unpack_u16_chunk.exit.i

if.end.i.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

unpack_u16_chunk.exit.i:                          ; preds = %if.end.i.i
  %add.ptr9.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %conv.i.i
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr9.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool.not.i73 = icmp eq i16 %24, 0
  br i1 %tobool.not.i73, label %unpack_u16_chunk.exit.i.unpack_strdup.exit.sink.split_crit_edge, label %if.then3.i

unpack_u16_chunk.exit.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %unpack_u16_chunk.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

if.then3.i:                                       ; preds = %unpack_u16_chunk.exit.i
  %sub.i = add nsw i32 %conv.i.i, -1
  %arrayidx.i = getelementptr i8, ptr %add.ptr.i.i, i32 %sub.i
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %cmp.not.i = icmp eq i8 %28, 0
  br i1 %cmp.not.i, label %if.end.i, label %if.then3.i.unpack_strdup.exit.sink.split_crit_edge

if.then3.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

if.end.i:                                         ; preds = %if.then3.i
  %call2.i = tail call ptr @kmemdup(ptr noundef %add.ptr.i.i, i32 noundef %conv.i.i, i32 noundef 3264) #16
  %tobool3.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i, label %if.end.i.unpack_strdup.exit.sink.split_crit_edge, label %if.end.i.unpack_strdup.exit_crit_edge

if.end.i.unpack_strdup.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit

if.end.i.unpack_strdup.exit.sink.split_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit.sink.split

unpack_strdup.exit.sink.split:                    ; preds = %if.end.i.unpack_strdup.exit.sink.split_crit_edge, %if.then3.i.unpack_strdup.exit.sink.split_crit_edge, %unpack_u16_chunk.exit.i.unpack_strdup.exit.sink.split_crit_edge, %if.end.i.i.unpack_strdup.exit.sink.split_crit_edge, %if.then.i.unpack_strdup.exit.sink.split_crit_edge, %unpack_nameX.exit.i.unpack_strdup.exit.sink.split_crit_edge, %if.end13.i.i.unpack_strdup.exit.sink.split_crit_edge
  %29 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %8, ptr %pos1.i, align 4
  br label %unpack_strdup.exit

unpack_strdup.exit:                               ; preds = %unpack_strdup.exit.sink.split, %if.end.i.unpack_strdup.exit_crit_edge
  %string.0 = phi ptr [ %call2.i, %if.end.i.unpack_strdup.exit_crit_edge ], [ null, %unpack_strdup.exit.sink.split ]
  %retval.0.i = phi i32 [ %conv.i.i, %if.end.i.unpack_strdup.exit_crit_edge ], [ 0, %unpack_strdup.exit.sink.split ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %30 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %31 = call ptr @memset(ptr %30, i32 255, i32 24)
  %32 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %33 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %34 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 281, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %35 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %36 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %37 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %38 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %39 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %40 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.0.i to i64
  %41 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %42 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @.str.125, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %43 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 8, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 8
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion10) #16
  %44 = getelementptr inbounds i8, ptr %__assertion10, i32 32
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 -1, ptr %44, align 4, !annotation !316
  %46 = ptrtoint ptr %__assertion10 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %test, ptr %__assertion10, align 4
  %type13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 1
  %47 = ptrtoint ptr %type13 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1, ptr %type13, align 4
  %line14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 2
  %48 = ptrtoint ptr %line14 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 284, ptr %line14, align 4
  %file15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 3
  %49 = ptrtoint ptr %file15 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr @.str.7, ptr %file15, align 4
  %message16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 4
  %50 = ptrtoint ptr %message16 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr null, ptr %message16, align 4
  %va18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 4, i32 1
  %51 = ptrtoint ptr %va18 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr null, ptr %va18, align 4
  %format19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion10, i32 0, i32 5
  %52 = ptrtoint ptr %format19 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @kunit_unary_assert_format, ptr %format19, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion10, i32 0, i32 1
  %53 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr @.str.128, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion10, i32 0, i32 2
  %54 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %expected_true, align 4
  %55 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %1, align 4
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %56, align 4
  %cmp22.not = icmp ugt ptr %58, %string.0
  br i1 %cmp22.not, label %unpack_strdup.exit.land.end_crit_edge, label %land.rhs

unpack_strdup.exit.land.end_crit_edge:            ; preds = %unpack_strdup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.end

land.rhs:                                         ; preds = %unpack_strdup.exit
  call void @__sanitizer_cov_trace_pc() #18
  %end = getelementptr inbounds %struct.aa_ext, ptr %56, i32 0, i32 1
  %59 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %end, align 4
  %cmp25 = icmp ugt ptr %string.0, %60
  br label %land.end

land.end:                                         ; preds = %land.rhs, %unpack_strdup.exit.land.end_crit_edge
  %61 = phi i1 [ true, %unpack_strdup.exit.land.end_crit_edge ], [ %cmp25, %land.rhs ]
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion10, i1 noundef zeroext %61, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion10) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion36) #16
  %62 = ptrtoint ptr %__assertion36 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %test, ptr %__assertion36, align 4
  %type39 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion36, i32 0, i32 1
  %63 = ptrtoint ptr %type39 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 1, ptr %type39, align 4
  %line40 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion36, i32 0, i32 2
  %64 = ptrtoint ptr %line40 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 285, ptr %line40, align 4
  %file41 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion36, i32 0, i32 3
  %65 = ptrtoint ptr %file41 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @.str.7, ptr %file41, align 4
  %message42 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion36, i32 0, i32 4
  %66 = ptrtoint ptr %message42 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %message42, align 4
  %va44 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion36, i32 0, i32 4, i32 1
  %67 = ptrtoint ptr %va44 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr null, ptr %va44, align 4
  %format45 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion36, i32 0, i32 5
  %68 = ptrtoint ptr %format45 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @kunit_binary_str_assert_format, ptr %format45, align 4
  %operation46 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion36, i32 0, i32 1
  %69 = ptrtoint ptr %operation46 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr @.str.110, ptr %operation46, align 4
  %left_text47 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion36, i32 0, i32 2
  %70 = ptrtoint ptr %left_text47 to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr @.str.126, ptr %left_text47, align 4
  %left_value48 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion36, i32 0, i32 3
  %71 = ptrtoint ptr %left_value48 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %string.0, ptr %left_value48, align 4
  %right_text49 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion36, i32 0, i32 4
  %72 = ptrtoint ptr %right_text49 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr @.str.127, ptr %right_text49, align 4
  %right_value50 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion36, i32 0, i32 5
  %73 = ptrtoint ptr %right_value50 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr @.str.11, ptr %right_value50, align 4
  %call52 = call i32 @strcmp(ptr noundef %string.0, ptr noundef nonnull dereferenceable(8) @.str.11) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %cmp53 = icmp eq i32 %call52, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion36, i1 noundef zeroext %cmp53, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion36) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_strdup_with_name(ptr noundef %test) #0 align 64 {
entry:
  %tmp.i = alloca ptr, align 4
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion9 = alloca %struct.kunit_unary_assert, align 4
  %__assertion35 = alloca %struct.kunit_binary_str_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #16
  %4 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %tmp.i, align 4, !annotation !316
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %5 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pos1.i, align 4
  %call.i = call fastcc i32 @unpack_str(ptr noundef %3, ptr noundef nonnull %tmp.i, ptr noundef nonnull @.str.10) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %entry.unpack_strdup.exit_crit_edge, label %if.end.i

entry.unpack_strdup.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit

if.end.i:                                         ; preds = %entry
  %7 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tmp.i, align 4
  %call2.i = tail call ptr @kmemdup(ptr noundef %8, i32 noundef %call.i, i32 noundef 3264) #16
  %tobool3.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i, label %if.then4.i, label %if.end.i.unpack_strdup.exit_crit_edge

if.end.i.unpack_strdup.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %pos1.i, align 4
  br label %unpack_strdup.exit

unpack_strdup.exit:                               ; preds = %if.then4.i, %if.end.i.unpack_strdup.exit_crit_edge, %entry.unpack_strdup.exit_crit_edge
  %string.0 = phi ptr [ null, %entry.unpack_strdup.exit_crit_edge ], [ null, %if.then4.i ], [ %call2.i, %if.end.i.unpack_strdup.exit_crit_edge ]
  %retval.0.i = phi i32 [ 0, %entry.unpack_strdup.exit_crit_edge ], [ 0, %if.then4.i ], [ %call.i, %if.end.i.unpack_strdup.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %10 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %11 = call ptr @memset(ptr %10, i32 255, i32 24)
  %12 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %13 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %14 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 296, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %15 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %16 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %17 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %18 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %19 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %20 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.0.i to i64
  %21 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %22 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @.str.125, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %23 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 8, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 8
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion9) #16
  %24 = getelementptr inbounds i8, ptr %__assertion9, i32 32
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -1, ptr %24, align 4, !annotation !316
  %26 = ptrtoint ptr %__assertion9 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %test, ptr %__assertion9, align 4
  %type12 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion9, i32 0, i32 1
  %27 = ptrtoint ptr %type12 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1, ptr %type12, align 4
  %line13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion9, i32 0, i32 2
  %28 = ptrtoint ptr %line13 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 299, ptr %line13, align 4
  %file14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion9, i32 0, i32 3
  %29 = ptrtoint ptr %file14 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @.str.7, ptr %file14, align 4
  %message15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion9, i32 0, i32 4
  %30 = ptrtoint ptr %message15 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %message15, align 4
  %va17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion9, i32 0, i32 4, i32 1
  %31 = ptrtoint ptr %va17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %va17, align 4
  %format18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion9, i32 0, i32 5
  %32 = ptrtoint ptr %format18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @kunit_unary_assert_format, ptr %format18, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion9, i32 0, i32 1
  %33 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @.str.128, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion9, i32 0, i32 2
  %34 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 0, ptr %expected_true, align 4
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 4
  %cmp21.not = icmp ugt ptr %38, %string.0
  br i1 %cmp21.not, label %unpack_strdup.exit.land.end_crit_edge, label %land.rhs

unpack_strdup.exit.land.end_crit_edge:            ; preds = %unpack_strdup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.end

land.rhs:                                         ; preds = %unpack_strdup.exit
  call void @__sanitizer_cov_trace_pc() #18
  %end = getelementptr inbounds %struct.aa_ext, ptr %36, i32 0, i32 1
  %39 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %end, align 4
  %cmp24 = icmp ugt ptr %string.0, %40
  br label %land.end

land.end:                                         ; preds = %land.rhs, %unpack_strdup.exit.land.end_crit_edge
  %41 = phi i1 [ true, %unpack_strdup.exit.land.end_crit_edge ], [ %cmp24, %land.rhs ]
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion9, i1 noundef zeroext %41, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion9) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion35) #16
  %42 = ptrtoint ptr %__assertion35 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %test, ptr %__assertion35, align 4
  %type38 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 1
  %43 = ptrtoint ptr %type38 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 1, ptr %type38, align 4
  %line39 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 2
  %44 = ptrtoint ptr %line39 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 300, ptr %line39, align 4
  %file40 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 3
  %45 = ptrtoint ptr %file40 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr @.str.7, ptr %file40, align 4
  %message41 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 4
  %46 = ptrtoint ptr %message41 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %message41, align 4
  %va43 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 4, i32 1
  %47 = ptrtoint ptr %va43 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %va43, align 4
  %format44 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 5
  %48 = ptrtoint ptr %format44 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @kunit_binary_str_assert_format, ptr %format44, align 4
  %operation45 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion35, i32 0, i32 1
  %49 = ptrtoint ptr %operation45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr @.str.110, ptr %operation45, align 4
  %left_text46 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion35, i32 0, i32 2
  %50 = ptrtoint ptr %left_text46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.126, ptr %left_text46, align 4
  %left_value47 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion35, i32 0, i32 3
  %51 = ptrtoint ptr %left_value47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %string.0, ptr %left_value47, align 4
  %right_text48 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion35, i32 0, i32 4
  %52 = ptrtoint ptr %right_text48 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @.str.127, ptr %right_text48, align 4
  %right_value49 = getelementptr inbounds %struct.kunit_binary_str_assert, ptr %__assertion35, i32 0, i32 5
  %53 = ptrtoint ptr %right_value49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr @.str.11, ptr %right_value49, align 4
  %call51 = call i32 @strcmp(ptr noundef %string.0, ptr noundef nonnull dereferenceable(8) @.str.11) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %cmp52 = icmp eq i32 %call51, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion35, i1 noundef zeroext %cmp52, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion35) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_strdup_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %tmp.i = alloca ptr, align 4
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion18 = alloca %struct.kunit_binary_ptr_assert, align 4
  %__assertion46 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr4 = getelementptr i8, ptr %5, i32 21
  %end = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr4, ptr %end, align 4
  %7 = load ptr, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #16
  %8 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 -1 to ptr), ptr %tmp.i, align 4, !annotation !316
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %7, i32 0, i32 2
  %9 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pos1.i, align 4
  %call.i = call fastcc i32 @unpack_str(ptr noundef %7, ptr noundef nonnull %tmp.i, ptr noundef nonnull @.str.10) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %entry.unpack_strdup.exit_crit_edge, label %if.end.i

entry.unpack_strdup.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit

if.end.i:                                         ; preds = %entry
  %11 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tmp.i, align 4
  %call2.i = tail call ptr @kmemdup(ptr noundef %12, i32 noundef %call.i, i32 noundef 3264) #16
  %tobool3.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool3.not.i, label %if.then4.i, label %if.end.i.unpack_strdup.exit_crit_edge

if.end.i.unpack_strdup.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_strdup.exit

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %pos1.i, align 4
  br label %unpack_strdup.exit

unpack_strdup.exit:                               ; preds = %if.then4.i, %if.end.i.unpack_strdup.exit_crit_edge, %entry.unpack_strdup.exit_crit_edge
  %string.0 = phi ptr [ null, %entry.unpack_strdup.exit_crit_edge ], [ null, %if.then4.i ], [ %call2.i, %if.end.i.unpack_strdup.exit_crit_edge ]
  %retval.0.i = phi i32 [ 0, %entry.unpack_strdup.exit_crit_edge ], [ 0, %if.then4.i ], [ %call.i, %if.end.i.unpack_strdup.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %14 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %15 = call ptr @memset(ptr %14, i32 255, i32 24)
  %16 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %17 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %18 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 315, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %19 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %20 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %21 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %22 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %23 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %24 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = sext i32 %retval.0.i to i64
  %25 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %26 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @.str.120, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %27 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 0, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion18) #16
  %28 = ptrtoint ptr %__assertion18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %test, ptr %__assertion18, align 4
  %type21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 1
  %29 = ptrtoint ptr %type21 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 1, ptr %type21, align 4
  %line22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 2
  %30 = ptrtoint ptr %line22 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 316, ptr %line22, align 4
  %file23 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 3
  %31 = ptrtoint ptr %file23 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @.str.7, ptr %file23, align 4
  %message24 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 4
  %32 = ptrtoint ptr %message24 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %message24, align 4
  %va26 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 4, i32 1
  %33 = ptrtoint ptr %va26 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %va26, align 4
  %format27 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 5
  %34 = ptrtoint ptr %format27 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @kunit_binary_ptr_assert_format, ptr %format27, align 4
  %operation28 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 1
  %35 = ptrtoint ptr %operation28 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @.str.110, ptr %operation28, align 4
  %left_text29 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 2
  %36 = ptrtoint ptr %left_text29 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.126, ptr %left_text29, align 4
  %left_value30 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 3
  %37 = ptrtoint ptr %left_value30 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %string.0, ptr %left_value30, align 4
  %right_text31 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 4
  %38 = ptrtoint ptr %right_text31 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @.str.129, ptr %right_text31, align 4
  %right_value32 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 5
  %39 = ptrtoint ptr %right_value32 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %right_value32, align 4
  %cmp34 = icmp eq ptr %string.0, null
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion18, i1 noundef zeroext %cmp34, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion18) #16
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %1, align 4
  %pos43 = getelementptr inbounds %struct.aa_ext, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %pos43 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pos43, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion46) #16
  %44 = ptrtoint ptr %__assertion46 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %test, ptr %__assertion46, align 4
  %type49 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 1
  %45 = ptrtoint ptr %type49 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 1, ptr %type49, align 4
  %line50 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 2
  %46 = ptrtoint ptr %line50 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 317, ptr %line50, align 4
  %file51 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 3
  %47 = ptrtoint ptr %file51 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.7, ptr %file51, align 4
  %message52 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 4
  %48 = ptrtoint ptr %message52 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %message52, align 4
  %va54 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 4, i32 1
  %49 = ptrtoint ptr %va54 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %va54, align 4
  %format55 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 5
  %50 = ptrtoint ptr %format55 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @kunit_binary_ptr_assert_format, ptr %format55, align 4
  %operation56 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 1
  %51 = ptrtoint ptr %operation56 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @.str.110, ptr %operation56, align 4
  %left_text57 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 2
  %52 = ptrtoint ptr %left_text57 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @.str.113, ptr %left_text57, align 4
  %left_value58 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 3
  %53 = ptrtoint ptr %left_value58 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %43, ptr %left_value58, align 4
  %right_text59 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 4
  %54 = ptrtoint ptr %right_text59 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.51, ptr %right_text59, align 4
  %right_value60 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 5
  %55 = ptrtoint ptr %right_value60 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %5, ptr %right_value60, align 4
  %cmp62 = icmp eq ptr %43, %5
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion46, i1 noundef zeroext %cmp62, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion46) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u16_chunk_basic(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_ptr_assert, align 4
  %__assertion16 = alloca %struct.kunit_binary_assert, align 8
  %__assertion46 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 41
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %end = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end, align 4
  %add.ptr2 = getelementptr i8, ptr %8, i32 258
  store ptr %add.ptr2, ptr %end, align 4
  %9 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pos1.i, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %9, i32 0, i32 1
  %12 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %end.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %13 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %11 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  br i1 %cmp.i.i, label %if.end.i, label %entry.unpack_u16_chunk.exit_crit_edge

entry.unpack_u16_chunk.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end.i:                                         ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %11, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i = zext i16 %16 to i32
  %add.ptr.i = getelementptr i8, ptr %11, i32 2
  %sub.ptr.rhs.cast.i24.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i25.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i24.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i, i32 %conv.i)
  %cmp.i26.not.i = icmp ult i32 %sub.ptr.sub.i25.i, %conv.i
  br i1 %cmp.i26.not.i, label %if.end.i.unpack_u16_chunk.exit_crit_edge, label %if.end6.i

if.end.i.unpack_u16_chunk.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end6.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i = getelementptr i8, ptr %add.ptr.i, i32 %conv.i
  br label %unpack_u16_chunk.exit

unpack_u16_chunk.exit:                            ; preds = %if.end6.i, %if.end.i.unpack_u16_chunk.exit_crit_edge, %entry.unpack_u16_chunk.exit_crit_edge
  %chunk.0 = phi ptr [ null, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr.i, %if.end6.i ], [ null, %entry.unpack_u16_chunk.exit_crit_edge ]
  %storemerge.i = phi ptr [ %11, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr9.i, %if.end6.i ], [ %11, %entry.unpack_u16_chunk.exit_crit_edge ]
  %retval.0.i = phi i32 [ 0, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %conv.i, %if.end6.i ], [ 0, %entry.unpack_u16_chunk.exit_crit_edge ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %add.ptr6 = getelementptr i8, ptr %21, i32 43
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion) #16
  %22 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %23 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %24 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 395, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %25 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %26 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %27 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %28 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @kunit_binary_ptr_assert_format, ptr %format, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion, i32 0, i32 1
  %29 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion, i32 0, i32 2
  %30 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @.str.130, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion, i32 0, i32 3
  %31 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %chunk.0, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion, i32 0, i32 4
  %32 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.131, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion, i32 0, i32 5
  %33 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %add.ptr6, ptr %right_value, align 4
  %cmp = icmp eq ptr %chunk.0, %add.ptr6
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion16) #16
  %34 = getelementptr inbounds i8, ptr %__assertion16, i32 32
  %35 = call ptr @memset(ptr %34, i32 255, i32 24)
  %36 = ptrtoint ptr %__assertion16 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %test, ptr %__assertion16, align 8
  %type19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 1
  %37 = ptrtoint ptr %type19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 1, ptr %type19, align 4
  %line20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 2
  %38 = ptrtoint ptr %line20 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 396, ptr %line20, align 8
  %file21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 3
  %39 = ptrtoint ptr %file21 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @.str.7, ptr %file21, align 4
  %message22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 4
  %40 = ptrtoint ptr %message22 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %message22, align 8
  %va24 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 4, i32 1
  %41 = ptrtoint ptr %va24 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %va24, align 4
  %format25 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 5
  %42 = ptrtoint ptr %format25 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @kunit_binary_assert_format, ptr %format25, align 8
  %operation26 = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion16, i32 0, i32 1
  %43 = ptrtoint ptr %operation26 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.110, ptr %operation26, align 4
  %left_text27 = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion16, i32 0, i32 2
  %44 = ptrtoint ptr %left_text27 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr @.str.117, ptr %left_text27, align 8
  %left_value28 = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion16, i32 0, i32 3
  %conv = zext i32 %retval.0.i to i64
  %45 = ptrtoint ptr %left_value28 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %conv, ptr %left_value28, align 8
  %right_text29 = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion16, i32 0, i32 4
  %46 = ptrtoint ptr %right_text29 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @.str.132, ptr %right_text29, align 8
  %right_value30 = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion16, i32 0, i32 5
  %47 = ptrtoint ptr %right_value30 to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 258, ptr %right_value30, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 258, i32 %retval.0.i)
  %cmp33 = icmp eq i32 %retval.0.i, 258
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion16, i1 noundef zeroext %cmp33, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion16) #16
  %48 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %1, align 4
  %pos42 = getelementptr inbounds %struct.aa_ext, ptr %49, i32 0, i32 2
  %50 = ptrtoint ptr %pos42 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pos42, align 4
  %add.ptr44 = getelementptr i8, ptr %chunk.0, i32 258
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion46) #16
  %52 = ptrtoint ptr %__assertion46 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %test, ptr %__assertion46, align 4
  %type49 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 1
  %53 = ptrtoint ptr %type49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 1, ptr %type49, align 4
  %line50 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 2
  %54 = ptrtoint ptr %line50 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 397, ptr %line50, align 4
  %file51 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 3
  %55 = ptrtoint ptr %file51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @.str.7, ptr %file51, align 4
  %message52 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 4
  %56 = ptrtoint ptr %message52 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %message52, align 4
  %va54 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 4, i32 1
  %57 = ptrtoint ptr %va54 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %va54, align 4
  %format55 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion46, i32 0, i32 5
  %58 = ptrtoint ptr %format55 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @kunit_binary_ptr_assert_format, ptr %format55, align 4
  %operation56 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 1
  %59 = ptrtoint ptr %operation56 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @.str.110, ptr %operation56, align 4
  %left_text57 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 2
  %60 = ptrtoint ptr %left_text57 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr @.str.113, ptr %left_text57, align 4
  %left_value58 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 3
  %61 = ptrtoint ptr %left_value58 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %51, ptr %left_value58, align 4
  %right_text59 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 4
  %62 = ptrtoint ptr %right_text59 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr @.str.133, ptr %right_text59, align 4
  %right_value60 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion46, i32 0, i32 5
  %63 = ptrtoint ptr %right_value60 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %add.ptr44, ptr %right_value60, align 4
  %cmp62 = icmp eq ptr %51, %add.ptr44
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion46, i1 noundef zeroext %cmp62, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion46) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u16_chunk_out_of_bounds_1(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion14 = alloca %struct.kunit_binary_ptr_assert, align 4
  %__assertion45 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %end = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 -1
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr, ptr %pos, align 4
  %7 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pos1.i, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %7, i32 0, i32 1
  %10 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %end.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %9 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  br i1 %cmp.i.i, label %if.end.i, label %entry.unpack_u16_chunk.exit_crit_edge

entry.unpack_u16_chunk.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end.i:                                         ; preds = %entry
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %9, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #16
  %conv.i = zext i16 %14 to i32
  %add.ptr.i = getelementptr i8, ptr %9, i32 2
  %sub.ptr.rhs.cast.i24.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i25.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i24.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i, i32 %conv.i)
  %cmp.i26.not.i = icmp ult i32 %sub.ptr.sub.i25.i, %conv.i
  br i1 %cmp.i26.not.i, label %if.end.i.unpack_u16_chunk.exit_crit_edge, label %if.end6.i

if.end.i.unpack_u16_chunk.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end6.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i = getelementptr i8, ptr %add.ptr.i, i32 %conv.i
  br label %unpack_u16_chunk.exit

unpack_u16_chunk.exit:                            ; preds = %if.end6.i, %if.end.i.unpack_u16_chunk.exit_crit_edge, %entry.unpack_u16_chunk.exit_crit_edge
  %chunk.0 = phi ptr [ null, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr.i, %if.end6.i ], [ null, %entry.unpack_u16_chunk.exit_crit_edge ]
  %storemerge.i = phi ptr [ %9, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr9.i, %if.end6.i ], [ %9, %entry.unpack_u16_chunk.exit_crit_edge ]
  %retval.0.i = phi i32 [ 0, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %conv.i, %if.end6.i ], [ 0, %entry.unpack_u16_chunk.exit_crit_edge ]
  %15 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %16 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %17 = call ptr @memset(ptr %16, i32 255, i32 24)
  %18 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %19 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %20 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 411, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %21 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %22 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %23 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %24 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %25 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %26 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.0.i to i64
  %27 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %28 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.134, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %29 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 0, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion14) #16
  %30 = ptrtoint ptr %__assertion14 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %test, ptr %__assertion14, align 4
  %type17 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion14, i32 0, i32 1
  %31 = ptrtoint ptr %type17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 1, ptr %type17, align 4
  %line18 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion14, i32 0, i32 2
  %32 = ptrtoint ptr %line18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 412, ptr %line18, align 4
  %file19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion14, i32 0, i32 3
  %33 = ptrtoint ptr %file19 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @.str.7, ptr %file19, align 4
  %message20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion14, i32 0, i32 4
  %34 = ptrtoint ptr %message20 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %message20, align 4
  %va22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion14, i32 0, i32 4, i32 1
  %35 = ptrtoint ptr %va22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %va22, align 4
  %format23 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion14, i32 0, i32 5
  %36 = ptrtoint ptr %format23 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @kunit_binary_ptr_assert_format, ptr %format23, align 4
  %operation24 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion14, i32 0, i32 1
  %37 = ptrtoint ptr %operation24 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @.str.110, ptr %operation24, align 4
  %left_text25 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion14, i32 0, i32 2
  %38 = ptrtoint ptr %left_text25 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @.str.135, ptr %left_text25, align 4
  %left_value26 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion14, i32 0, i32 3
  %39 = ptrtoint ptr %left_value26 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %chunk.0, ptr %left_value26, align 4
  %right_text27 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion14, i32 0, i32 4
  %40 = ptrtoint ptr %right_text27 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @.str.129, ptr %right_text27, align 4
  %right_value28 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion14, i32 0, i32 5
  %41 = ptrtoint ptr %right_value28 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %right_value28, align 4
  %cmp30 = icmp eq ptr %chunk.0, null
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion14, i1 noundef zeroext %cmp30, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion14) #16
  %42 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %1, align 4
  %pos39 = getelementptr inbounds %struct.aa_ext, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %pos39 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %pos39, align 4
  %end42 = getelementptr inbounds %struct.aa_ext, ptr %43, i32 0, i32 1
  %46 = ptrtoint ptr %end42 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %end42, align 4
  %add.ptr43 = getelementptr i8, ptr %47, i32 -1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion45) #16
  %48 = ptrtoint ptr %__assertion45 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %test, ptr %__assertion45, align 4
  %type48 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion45, i32 0, i32 1
  %49 = ptrtoint ptr %type48 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %type48, align 4
  %line49 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion45, i32 0, i32 2
  %50 = ptrtoint ptr %line49 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 413, ptr %line49, align 4
  %file50 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion45, i32 0, i32 3
  %51 = ptrtoint ptr %file50 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @.str.7, ptr %file50, align 4
  %message51 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion45, i32 0, i32 4
  %52 = ptrtoint ptr %message51 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %message51, align 4
  %va53 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion45, i32 0, i32 4, i32 1
  %53 = ptrtoint ptr %va53 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %va53, align 4
  %format54 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion45, i32 0, i32 5
  %54 = ptrtoint ptr %format54 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @kunit_binary_ptr_assert_format, ptr %format54, align 4
  %operation55 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion45, i32 0, i32 1
  %55 = ptrtoint ptr %operation55 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @.str.110, ptr %operation55, align 4
  %left_text56 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion45, i32 0, i32 2
  %56 = ptrtoint ptr %left_text56 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr @.str.113, ptr %left_text56, align 4
  %left_value57 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion45, i32 0, i32 3
  %57 = ptrtoint ptr %left_value57 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %45, ptr %left_value57, align 4
  %right_text58 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion45, i32 0, i32 4
  %58 = ptrtoint ptr %right_text58 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @.str.136, ptr %right_text58, align 4
  %right_value59 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion45, i32 0, i32 5
  %59 = ptrtoint ptr %right_value59 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %add.ptr43, ptr %right_value59, align 4
  %cmp61 = icmp eq ptr %45, %add.ptr43
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion45, i1 noundef zeroext %cmp61, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion45) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u16_chunk_out_of_bounds_2(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_binary_assert, align 8
  %__assertion18 = alloca %struct.kunit_binary_ptr_assert, align 4
  %__assertion48 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 41
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos2 = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos2, align 4
  %add.ptr4 = getelementptr i8, ptr %8, i32 257
  %end = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %add.ptr4, ptr %end, align 4
  %10 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pos1.i, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %14 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %12 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 1
  br i1 %cmp.i.i, label %if.end.i, label %entry.unpack_u16_chunk.exit_crit_edge

entry.unpack_u16_chunk.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end.i:                                         ; preds = %entry
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_loadN_noabort(i32 %15, i32 2)
  %16 = load i16, ptr %12, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #16
  %conv.i = zext i16 %17 to i32
  %add.ptr.i = getelementptr i8, ptr %12, i32 2
  %sub.ptr.rhs.cast.i24.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub.i25.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i24.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i, i32 %conv.i)
  %cmp.i26.not.i = icmp ult i32 %sub.ptr.sub.i25.i, %conv.i
  br i1 %cmp.i26.not.i, label %if.end.i.unpack_u16_chunk.exit_crit_edge, label %if.end6.i

if.end.i.unpack_u16_chunk.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit

if.end6.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr9.i = getelementptr i8, ptr %add.ptr.i, i32 %conv.i
  br label %unpack_u16_chunk.exit

unpack_u16_chunk.exit:                            ; preds = %if.end6.i, %if.end.i.unpack_u16_chunk.exit_crit_edge, %entry.unpack_u16_chunk.exit_crit_edge
  %chunk.0 = phi ptr [ null, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr.i, %if.end6.i ], [ null, %entry.unpack_u16_chunk.exit_crit_edge ]
  %storemerge.i = phi ptr [ %12, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %add.ptr9.i, %if.end6.i ], [ %12, %entry.unpack_u16_chunk.exit_crit_edge ]
  %retval.0.i = phi i32 [ 0, %if.end.i.unpack_u16_chunk.exit_crit_edge ], [ %conv.i, %if.end6.i ], [ 0, %entry.unpack_u16_chunk.exit_crit_edge ]
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion) #16
  %19 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %20 = call ptr @memset(ptr %19, i32 255, i32 24)
  %21 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %test, ptr %__assertion, align 8
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %22 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %23 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 433, ptr %line, align 8
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %24 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %25 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %message, align 8
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %26 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %27 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @kunit_binary_assert_format, ptr %format, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 1
  %28 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 2
  %29 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @.str.117, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 3
  %conv = zext i32 %retval.0.i to i64
  %30 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 4
  %31 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @.str.134, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion, i32 0, i32 5
  %32 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 0, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 0
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %cmp, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion18) #16
  %33 = ptrtoint ptr %__assertion18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %test, ptr %__assertion18, align 4
  %type21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 1
  %34 = ptrtoint ptr %type21 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %type21, align 4
  %line22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 2
  %35 = ptrtoint ptr %line22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 434, ptr %line22, align 4
  %file23 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 3
  %36 = ptrtoint ptr %file23 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.7, ptr %file23, align 4
  %message24 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 4
  %37 = ptrtoint ptr %message24 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %message24, align 4
  %va26 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 4, i32 1
  %38 = ptrtoint ptr %va26 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %va26, align 4
  %format27 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion18, i32 0, i32 5
  %39 = ptrtoint ptr %format27 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @kunit_binary_ptr_assert_format, ptr %format27, align 4
  %operation28 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 1
  %40 = ptrtoint ptr %operation28 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @.str.110, ptr %operation28, align 4
  %left_text29 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 2
  %41 = ptrtoint ptr %left_text29 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @.str.135, ptr %left_text29, align 4
  %left_value30 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 3
  %42 = ptrtoint ptr %left_value30 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %chunk.0, ptr %left_value30, align 4
  %right_text31 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 4
  %43 = ptrtoint ptr %right_text31 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.129, ptr %right_text31, align 4
  %right_value32 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion18, i32 0, i32 5
  %44 = ptrtoint ptr %right_value32 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %right_value32, align 4
  %cmp34 = icmp eq ptr %chunk.0, null
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion18, i1 noundef zeroext %cmp34, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion18) #16
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %1, align 4
  %pos43 = getelementptr inbounds %struct.aa_ext, ptr %46, i32 0, i32 2
  %47 = ptrtoint ptr %pos43 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pos43, align 4
  %49 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %46, align 4
  %add.ptr46 = getelementptr i8, ptr %50, i32 41
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion48) #16
  %51 = ptrtoint ptr %__assertion48 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %test, ptr %__assertion48, align 4
  %type51 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion48, i32 0, i32 1
  %52 = ptrtoint ptr %type51 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 1, ptr %type51, align 4
  %line52 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion48, i32 0, i32 2
  %53 = ptrtoint ptr %line52 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 435, ptr %line52, align 4
  %file53 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion48, i32 0, i32 3
  %54 = ptrtoint ptr %file53 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.7, ptr %file53, align 4
  %message54 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion48, i32 0, i32 4
  %55 = ptrtoint ptr %message54 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %message54, align 4
  %va56 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion48, i32 0, i32 4, i32 1
  %56 = ptrtoint ptr %va56 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %va56, align 4
  %format57 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion48, i32 0, i32 5
  %57 = ptrtoint ptr %format57 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @kunit_binary_ptr_assert_format, ptr %format57, align 4
  %operation58 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion48, i32 0, i32 1
  %58 = ptrtoint ptr %operation58 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @.str.110, ptr %operation58, align 4
  %left_text59 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion48, i32 0, i32 2
  %59 = ptrtoint ptr %left_text59 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @.str.113, ptr %left_text59, align 4
  %left_value60 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion48, i32 0, i32 3
  %60 = ptrtoint ptr %left_value60 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %48, ptr %left_value60, align 4
  %right_text61 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion48, i32 0, i32 4
  %61 = ptrtoint ptr %right_text61 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.137, ptr %right_text61, align 4
  %right_value62 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion48, i32 0, i32 5
  %62 = ptrtoint ptr %right_value62 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %add.ptr46, ptr %right_value62, align 4
  %cmp64 = icmp eq ptr %48, %add.ptr46
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion48, i1 noundef zeroext %cmp64, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion48) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u32_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion7 = alloca %struct.kunit_binary_assert, align 8
  %__assertion35 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 38
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.if.end13.i.i_crit_edge, label %if.end.i.i.i

entry.if.end13.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i.i, ptr %pos1.i, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %entry.if.end13.i.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_u32.exit_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_u32.exit_crit_edge:           ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 2
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %if.end.i, label %unpack_nameX.exit.i.unpack_u32.exit_crit_edge

unpack_nameX.exit.i.unpack_u32.exit_crit_edge:    ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %24 = load i32, ptr %spec.select.i.i, align 1
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  br label %unpack_u32.exit

unpack_u32.exit:                                  ; preds = %if.end.i, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge, %if.end13.i.i.unpack_u32.exit_crit_edge
  %data.0 = phi i32 [ -1, %if.end13.i.i.unpack_u32.exit_crit_edge ], [ %25, %if.end.i ], [ -1, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge ]
  %storemerge.i = phi ptr [ %8, %if.end13.i.i.unpack_u32.exit_crit_edge ], [ %add.ptr.i, %if.end.i ], [ %8, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge ]
  %retval.0.i = phi i1 [ false, %if.end13.i.i.unpack_u32.exit_crit_edge ], [ true, %if.end.i ], [ false, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %27, align 4, !annotation !316
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 448, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion7) #16
  %38 = getelementptr inbounds i8, ptr %__assertion7, i32 32
  %39 = call ptr @memset(ptr %38, i32 255, i32 24)
  %40 = ptrtoint ptr %__assertion7 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion7, align 8
  %type10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 1
  %41 = ptrtoint ptr %type10 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type10, align 4
  %line11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 2
  %42 = ptrtoint ptr %line11 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 449, ptr %line11, align 8
  %file12 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 3
  %43 = ptrtoint ptr %file12 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file12, align 4
  %message13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4
  %44 = ptrtoint ptr %message13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message13, align 8
  %va15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va15 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va15, align 4
  %format16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 5
  %46 = ptrtoint ptr %format16 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_assert_format, ptr %format16, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.55, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 3
  %conv = zext i32 %data.0 to i64
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.138, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 16909060, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16909060, i32 %data.0)
  %cmp19 = icmp eq i32 %data.0, 16909060
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion7, i1 noundef zeroext %cmp19, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion7) #16
  %52 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %1, align 4
  %pos28 = getelementptr inbounds %struct.aa_ext, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %pos28 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pos28, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %53, align 4
  %add.ptr33 = getelementptr i8, ptr %57, i32 43
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion35) #16
  %58 = ptrtoint ptr %__assertion35 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %test, ptr %__assertion35, align 4
  %type38 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 1
  %59 = ptrtoint ptr %type38 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 1, ptr %type38, align 4
  %line39 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 2
  %60 = ptrtoint ptr %line39 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 451, ptr %line39, align 4
  %file40 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 3
  %61 = ptrtoint ptr %file40 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.7, ptr %file40, align 4
  %message41 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 4
  %62 = ptrtoint ptr %message41 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr null, ptr %message41, align 4
  %va43 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 4, i32 1
  %63 = ptrtoint ptr %va43 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %va43, align 4
  %format44 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 5
  %64 = ptrtoint ptr %format44 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @kunit_binary_ptr_assert_format, ptr %format44, align 4
  %operation45 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 1
  %65 = ptrtoint ptr %operation45 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @.str.110, ptr %operation45, align 4
  %left_text46 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 2
  %66 = ptrtoint ptr %left_text46 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @.str.113, ptr %left_text46, align 4
  %left_value47 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 3
  %67 = ptrtoint ptr %left_value47 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %55, ptr %left_value47, align 4
  %right_text48 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 4
  %68 = ptrtoint ptr %right_text48 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @.str.139, ptr %right_text48, align 4
  %right_value49 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 5
  %69 = ptrtoint ptr %right_value49 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %add.ptr33, ptr %right_value49, align 4
  %cmp51 = icmp eq ptr %55, %add.ptr33
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion35, i1 noundef zeroext %cmp51, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion35) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u32_with_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion7 = alloca %struct.kunit_binary_assert, align 8
  %__assertion35 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 26
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_u32.exit_crit_edge, label %if.end.i.i.i

entry.unpack_u32.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_u32.exit_crit_edge

if.end.i.i.i.unpack_u32.exit_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u32.exit_crit_edge

if.then.i.i.unpack_u32.exit_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_u32.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_u32.exit_crit_edge:         ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.not.i.i = icmp eq i8 %19, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_u32.exit_crit_edge

lor.lhs.false.i.i.unpack_u32.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(9) @__const.policy_unpack_test_unpack_u32_out_of_bounds.name, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_u32.exit_crit_edge:     ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %20 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 2
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %if.end.i, label %unpack_nameX.exit.i.unpack_u32.exit_crit_edge

unpack_nameX.exit.i.unpack_u32.exit_crit_edge:    ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %24 = load i32, ptr %spec.select.i.i, align 1
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  br label %unpack_u32.exit

unpack_u32.exit:                                  ; preds = %if.end.i, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge, %if.end.i29.i.i.unpack_u32.exit_crit_edge, %if.then.i.i.unpack_u32.exit_crit_edge, %if.end.i.i.i.unpack_u32.exit_crit_edge, %entry.unpack_u32.exit_crit_edge
  %data.0 = phi i32 [ -1, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge ], [ %25, %if.end.i ], [ -1, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge ], [ -1, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge ], [ -1, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge ], [ -1, %if.end.i.i.i.unpack_u32.exit_crit_edge ], [ -1, %entry.unpack_u32.exit_crit_edge ], [ -1, %if.end.i29.i.i.unpack_u32.exit_crit_edge ], [ -1, %if.then.i.i.unpack_u32.exit_crit_edge ]
  %storemerge.i = phi ptr [ %8, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge ], [ %add.ptr.i, %if.end.i ], [ %8, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge ], [ %8, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge ], [ %8, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge ], [ %8, %if.end.i.i.i.unpack_u32.exit_crit_edge ], [ %8, %entry.unpack_u32.exit_crit_edge ], [ %8, %if.end.i29.i.i.unpack_u32.exit_crit_edge ], [ %8, %if.then.i.i.unpack_u32.exit_crit_edge ]
  %retval.0.i = phi i1 [ false, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge ], [ true, %if.end.i ], [ false, %unpack_nameX.exit.i.unpack_u32.exit_crit_edge ], [ false, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge ], [ false, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge ], [ false, %if.end.i.i.i.unpack_u32.exit_crit_edge ], [ false, %entry.unpack_u32.exit_crit_edge ], [ false, %if.end.i29.i.i.unpack_u32.exit_crit_edge ], [ false, %if.then.i.i.unpack_u32.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %27, align 4, !annotation !316
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 465, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion7) #16
  %38 = getelementptr inbounds i8, ptr %__assertion7, i32 32
  %39 = call ptr @memset(ptr %38, i32 255, i32 24)
  %40 = ptrtoint ptr %__assertion7 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion7, align 8
  %type10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 1
  %41 = ptrtoint ptr %type10 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type10, align 4
  %line11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 2
  %42 = ptrtoint ptr %line11 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 466, ptr %line11, align 8
  %file12 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 3
  %43 = ptrtoint ptr %file12 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file12, align 4
  %message13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4
  %44 = ptrtoint ptr %message13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message13, align 8
  %va15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va15 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va15, align 4
  %format16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 5
  %46 = ptrtoint ptr %format16 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_assert_format, ptr %format16, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.55, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 3
  %conv = zext i32 %data.0 to i64
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %conv, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.138, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 16909060, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16909060, i32 %data.0)
  %cmp19 = icmp eq i32 %data.0, 16909060
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion7, i1 noundef zeroext %cmp19, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion7) #16
  %52 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %1, align 4
  %pos28 = getelementptr inbounds %struct.aa_ext, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %pos28 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pos28, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %53, align 4
  %add.ptr33 = getelementptr i8, ptr %57, i32 43
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion35) #16
  %58 = ptrtoint ptr %__assertion35 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %test, ptr %__assertion35, align 4
  %type38 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 1
  %59 = ptrtoint ptr %type38 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 1, ptr %type38, align 4
  %line39 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 2
  %60 = ptrtoint ptr %line39 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 468, ptr %line39, align 4
  %file40 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 3
  %61 = ptrtoint ptr %file40 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.7, ptr %file40, align 4
  %message41 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 4
  %62 = ptrtoint ptr %message41 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr null, ptr %message41, align 4
  %va43 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 4, i32 1
  %63 = ptrtoint ptr %va43 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %va43, align 4
  %format44 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion35, i32 0, i32 5
  %64 = ptrtoint ptr %format44 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @kunit_binary_ptr_assert_format, ptr %format44, align 4
  %operation45 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 1
  %65 = ptrtoint ptr %operation45 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @.str.110, ptr %operation45, align 4
  %left_text46 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 2
  %66 = ptrtoint ptr %left_text46 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @.str.113, ptr %left_text46, align 4
  %left_value47 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 3
  %67 = ptrtoint ptr %left_value47 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %55, ptr %left_value47, align 4
  %right_text48 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 4
  %68 = ptrtoint ptr %right_text48 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @.str.139, ptr %right_text48, align 4
  %right_value49 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion35, i32 0, i32 5
  %69 = ptrtoint ptr %right_value49 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %add.ptr33, ptr %right_value49, align 4
  %cmp51 = icmp eq ptr %55, %add.ptr33
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion35, i1 noundef zeroext %cmp51, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion35) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u32_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion16 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 26
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %add.ptr3 = getelementptr i8, ptr %8, i32 42
  %end = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %add.ptr3, ptr %end, align 4
  %10 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %14, %12
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_u32.exit_crit_edge, label %if.end.i.i.i

entry.unpack_u32.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.end.i.i.i:                                     ; preds = %entry
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %12, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %16)
  %cmp.not.i.i.i = icmp eq i8 %16, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_u32.exit_crit_edge

if.end.i.i.i.unpack_u32.exit_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %12, i32 1
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %14 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u32.exit_crit_edge

if.then.i.i.unpack_u32.exit_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %18 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 2)
  %19 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #16
  %conv.i28.i.i = zext i16 %20 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %12, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_u32.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_u32.exit_crit_edge:         ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %21 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool3.not.i.i = icmp eq i16 %19, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %cmp.not.i.i = icmp eq i8 %23, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_u32.exit_crit_edge

lor.lhs.false.i.i.unpack_u32.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(9) @__const.policy_unpack_test_unpack_u32_out_of_bounds.name, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %14, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_u32.exit_crit_edge:     ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u32.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %25)
  %cmp.not.i35.i.i = icmp eq i8 %25, 2
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %12
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 3
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 4
  %spec.select = select i1 %or.cond.i, ptr %add.ptr.i, ptr %12
  %not.or.cond.i = xor i1 %or.cond.i, true
  br label %unpack_u32.exit

unpack_u32.exit:                                  ; preds = %unpack_nameX.exit.i, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge, %if.end.i29.i.i.unpack_u32.exit_crit_edge, %if.then.i.i.unpack_u32.exit_crit_edge, %if.end.i.i.i.unpack_u32.exit_crit_edge, %entry.unpack_u32.exit_crit_edge
  %storemerge.i = phi ptr [ %12, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge ], [ %12, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge ], [ %12, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge ], [ %12, %if.end.i.i.i.unpack_u32.exit_crit_edge ], [ %12, %entry.unpack_u32.exit_crit_edge ], [ %spec.select, %unpack_nameX.exit.i ], [ %12, %if.end.i29.i.i.unpack_u32.exit_crit_edge ], [ %12, %if.then.i.i.unpack_u32.exit_crit_edge ]
  %retval.0.i = phi i1 [ true, %unpack_u16_chunk.exit.i.i.unpack_u32.exit_crit_edge ], [ true, %lor.lhs.false.i.i.unpack_u32.exit_crit_edge ], [ true, %lor.lhs.false5.i.i.unpack_u32.exit_crit_edge ], [ true, %if.end.i.i.i.unpack_u32.exit_crit_edge ], [ true, %entry.unpack_u32.exit_crit_edge ], [ %not.or.cond.i, %unpack_nameX.exit.i ], [ true, %if.end.i29.i.i.unpack_u32.exit_crit_edge ], [ true, %if.then.i.i.unpack_u32.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %27, align 4, !annotation !316
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 483, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %1, align 4
  %pos11 = getelementptr inbounds %struct.aa_ext, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %pos11 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pos11, align 4
  %42 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %39, align 4
  %add.ptr14 = getelementptr i8, ptr %43, i32 26
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion16) #16
  %44 = ptrtoint ptr %__assertion16 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %test, ptr %__assertion16, align 4
  %type19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 1
  %45 = ptrtoint ptr %type19 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 1, ptr %type19, align 4
  %line20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 2
  %46 = ptrtoint ptr %line20 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 485, ptr %line20, align 4
  %file21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 3
  %47 = ptrtoint ptr %file21 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.7, ptr %file21, align 4
  %message22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 4
  %48 = ptrtoint ptr %message22 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %message22, align 4
  %va24 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 4, i32 1
  %49 = ptrtoint ptr %va24 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %va24, align 4
  %format25 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 5
  %50 = ptrtoint ptr %format25 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @kunit_binary_ptr_assert_format, ptr %format25, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 1
  %51 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 2
  %52 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @.str.113, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 3
  %53 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %41, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 4
  %54 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.124, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 5
  %55 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %add.ptr14, ptr %right_value, align 4
  %cmp27 = icmp eq ptr %41, %add.ptr14
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion16, i1 noundef zeroext %cmp27, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion16) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u64_with_null_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion7 = alloca %struct.kunit_binary_assert, align 8
  %__assertion33 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 55
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.if.end13.i.i_crit_edge, label %if.end.i.i.i

entry.if.end13.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.if.end13.i.i_crit_edge

if.end.i.i.i.if.end13.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge

if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %spec.select = select i1 %cmp.i26.not.i.i.i, ptr %incdec.ptr.i.i.i, ptr %add.ptr9.i.i.i
  br label %unpack_u16_chunk.exit.i.i

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge
  %storemerge.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.then.i.i.unpack_u16_chunk.exit.i.i_crit_edge ], [ %spec.select, %if.end.i29.i.i ]
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %storemerge.i.i.i, ptr %pos1.i, align 4
  br label %if.end13.i.i

if.end13.i.i:                                     ; preds = %unpack_u16_chunk.exit.i.i, %if.end.i.i.i.if.end13.i.i_crit_edge, %entry.if.end13.i.i_crit_edge
  %18 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pos1.i, align 4
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %19
  br i1 %cmp.i.not.i33.i.i, label %if.end13.i.i.unpack_u64.exit_crit_edge, label %unpack_nameX.exit.i

if.end13.i.i.unpack_u64.exit_crit_edge:           ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

unpack_nameX.exit.i:                              ; preds = %if.end13.i.i
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 3
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %19, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 7
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %if.end.i, label %unpack_nameX.exit.i.unpack_u64.exit_crit_edge

unpack_nameX.exit.i.unpack_u64.exit_crit_edge:    ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %spec.select.i.i, align 1
  %25 = tail call i64 @llvm.bswap.i64(i64 %24) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 8
  br label %unpack_u64.exit

unpack_u64.exit:                                  ; preds = %if.end.i, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge, %if.end13.i.i.unpack_u64.exit_crit_edge
  %data.0 = phi i64 [ -1, %if.end13.i.i.unpack_u64.exit_crit_edge ], [ %25, %if.end.i ], [ -1, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge ]
  %storemerge.i = phi ptr [ %8, %if.end13.i.i.unpack_u64.exit_crit_edge ], [ %add.ptr.i, %if.end.i ], [ %8, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge ]
  %retval.0.i = phi i1 [ false, %if.end13.i.i.unpack_u64.exit_crit_edge ], [ true, %if.end.i ], [ false, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %27, align 4, !annotation !316
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 498, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion7) #16
  %38 = getelementptr inbounds i8, ptr %__assertion7, i32 32
  %39 = call ptr @memset(ptr %38, i32 255, i32 24)
  %40 = ptrtoint ptr %__assertion7 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion7, align 8
  %type10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 1
  %41 = ptrtoint ptr %type10 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type10, align 4
  %line11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 2
  %42 = ptrtoint ptr %line11 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 499, ptr %line11, align 8
  %file12 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 3
  %43 = ptrtoint ptr %file12 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file12, align 4
  %message13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4
  %44 = ptrtoint ptr %message13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message13, align 8
  %va15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va15 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va15, align 4
  %format16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 5
  %46 = ptrtoint ptr %format16 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_assert_format, ptr %format16, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.55, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 3
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %data.0, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.140, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 72623859790382856, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 72623859790382856, i64 %data.0)
  %cmp18 = icmp eq i64 %data.0, 72623859790382856
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion7, i1 noundef zeroext %cmp18, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion7) #16
  %52 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %1, align 4
  %pos26 = getelementptr inbounds %struct.aa_ext, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %pos26 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pos26, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %53, align 4
  %add.ptr31 = getelementptr i8, ptr %57, i32 64
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion33) #16
  %58 = ptrtoint ptr %__assertion33 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %test, ptr %__assertion33, align 4
  %type36 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 1
  %59 = ptrtoint ptr %type36 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 1, ptr %type36, align 4
  %line37 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 2
  %60 = ptrtoint ptr %line37 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 501, ptr %line37, align 4
  %file38 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 3
  %61 = ptrtoint ptr %file38 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.7, ptr %file38, align 4
  %message39 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 4
  %62 = ptrtoint ptr %message39 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr null, ptr %message39, align 4
  %va41 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 4, i32 1
  %63 = ptrtoint ptr %va41 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %va41, align 4
  %format42 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 5
  %64 = ptrtoint ptr %format42 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @kunit_binary_ptr_assert_format, ptr %format42, align 4
  %operation43 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 1
  %65 = ptrtoint ptr %operation43 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @.str.110, ptr %operation43, align 4
  %left_text44 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 2
  %66 = ptrtoint ptr %left_text44 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @.str.113, ptr %left_text44, align 4
  %left_value45 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 3
  %67 = ptrtoint ptr %left_value45 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %55, ptr %left_value45, align 4
  %right_text46 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 4
  %68 = ptrtoint ptr %right_text46 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @.str.141, ptr %right_text46, align 4
  %right_value47 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 5
  %69 = ptrtoint ptr %right_value47 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %add.ptr31, ptr %right_value47, align 4
  %cmp49 = icmp eq ptr %55, %add.ptr31
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion33, i1 noundef zeroext %cmp49, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion33) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u64_with_name(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion7 = alloca %struct.kunit_binary_assert, align 8
  %__assertion33 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 43
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %10, %8
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_u64.exit_crit_edge, label %if.end.i.i.i

entry.unpack_u64.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.end.i.i.i:                                     ; preds = %entry
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %12)
  %cmp.not.i.i.i = icmp eq i8 %12, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_u64.exit_crit_edge

if.end.i.i.i.unpack_u64.exit_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %8, i32 1
  %13 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u64.exit_crit_edge

if.then.i.i.unpack_u64.exit_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %14 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #16
  %conv.i28.i.i = zext i16 %16 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_u64.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_u64.exit_crit_edge:         ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.not.i.i = icmp eq i8 %19, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_u64.exit_crit_edge

lor.lhs.false.i.i.unpack_u64.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(9) @__const.policy_unpack_test_unpack_u64_out_of_bounds.name, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %10, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_u64.exit_crit_edge:     ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  %20 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %21)
  %cmp.not.i35.i.i = icmp eq i8 %21, 3
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %8
  %22 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %spec.select.i.i, ptr %pos1.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 7
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %if.end.i, label %unpack_nameX.exit.i.unpack_u64.exit_crit_edge

unpack_nameX.exit.i.unpack_u64.exit_crit_edge:    ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.end.i:                                         ; preds = %unpack_nameX.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %spec.select.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %spec.select.i.i, align 1
  %25 = tail call i64 @llvm.bswap.i64(i64 %24) #16
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 8
  br label %unpack_u64.exit

unpack_u64.exit:                                  ; preds = %if.end.i, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge, %if.end.i29.i.i.unpack_u64.exit_crit_edge, %if.then.i.i.unpack_u64.exit_crit_edge, %if.end.i.i.i.unpack_u64.exit_crit_edge, %entry.unpack_u64.exit_crit_edge
  %data.0 = phi i64 [ -1, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge ], [ %25, %if.end.i ], [ -1, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge ], [ -1, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge ], [ -1, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge ], [ -1, %if.end.i.i.i.unpack_u64.exit_crit_edge ], [ -1, %entry.unpack_u64.exit_crit_edge ], [ -1, %if.end.i29.i.i.unpack_u64.exit_crit_edge ], [ -1, %if.then.i.i.unpack_u64.exit_crit_edge ]
  %storemerge.i = phi ptr [ %8, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge ], [ %add.ptr.i, %if.end.i ], [ %8, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge ], [ %8, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge ], [ %8, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge ], [ %8, %if.end.i.i.i.unpack_u64.exit_crit_edge ], [ %8, %entry.unpack_u64.exit_crit_edge ], [ %8, %if.end.i29.i.i.unpack_u64.exit_crit_edge ], [ %8, %if.then.i.i.unpack_u64.exit_crit_edge ]
  %retval.0.i = phi i1 [ false, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge ], [ true, %if.end.i ], [ false, %unpack_nameX.exit.i.unpack_u64.exit_crit_edge ], [ false, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge ], [ false, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge ], [ false, %if.end.i.i.i.unpack_u64.exit_crit_edge ], [ false, %entry.unpack_u64.exit_crit_edge ], [ false, %if.end.i29.i.i.unpack_u64.exit_crit_edge ], [ false, %if.then.i.i.unpack_u64.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %27, align 4, !annotation !316
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 515, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__assertion7) #16
  %38 = getelementptr inbounds i8, ptr %__assertion7, i32 32
  %39 = call ptr @memset(ptr %38, i32 255, i32 24)
  %40 = ptrtoint ptr %__assertion7 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %test, ptr %__assertion7, align 8
  %type10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 1
  %41 = ptrtoint ptr %type10 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %type10, align 4
  %line11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 2
  %42 = ptrtoint ptr %line11 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 516, ptr %line11, align 8
  %file12 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 3
  %43 = ptrtoint ptr %file12 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.7, ptr %file12, align 4
  %message13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4
  %44 = ptrtoint ptr %message13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %message13, align 8
  %va15 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 4, i32 1
  %45 = ptrtoint ptr %va15 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %va15, align 4
  %format16 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion7, i32 0, i32 5
  %46 = ptrtoint ptr %format16 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @kunit_binary_assert_format, ptr %format16, align 8
  %operation = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 1
  %47 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 2
  %48 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str.55, ptr %left_text, align 8
  %left_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 3
  %49 = ptrtoint ptr %left_value to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %data.0, ptr %left_value, align 8
  %right_text = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 4
  %50 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @.str.140, ptr %right_text, align 8
  %right_value = getelementptr inbounds %struct.kunit_binary_assert, ptr %__assertion7, i32 0, i32 5
  %51 = ptrtoint ptr %right_value to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 72623859790382856, ptr %right_value, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 72623859790382856, i64 %data.0)
  %cmp18 = icmp eq i64 %data.0, 72623859790382856
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion7, i1 noundef zeroext %cmp18, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__assertion7) #16
  %52 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %1, align 4
  %pos26 = getelementptr inbounds %struct.aa_ext, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %pos26 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pos26, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %53, align 4
  %add.ptr31 = getelementptr i8, ptr %57, i32 64
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion33) #16
  %58 = ptrtoint ptr %__assertion33 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %test, ptr %__assertion33, align 4
  %type36 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 1
  %59 = ptrtoint ptr %type36 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 1, ptr %type36, align 4
  %line37 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 2
  %60 = ptrtoint ptr %line37 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 518, ptr %line37, align 4
  %file38 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 3
  %61 = ptrtoint ptr %file38 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr @.str.7, ptr %file38, align 4
  %message39 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 4
  %62 = ptrtoint ptr %message39 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr null, ptr %message39, align 4
  %va41 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 4, i32 1
  %63 = ptrtoint ptr %va41 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %va41, align 4
  %format42 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion33, i32 0, i32 5
  %64 = ptrtoint ptr %format42 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @kunit_binary_ptr_assert_format, ptr %format42, align 4
  %operation43 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 1
  %65 = ptrtoint ptr %operation43 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @.str.110, ptr %operation43, align 4
  %left_text44 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 2
  %66 = ptrtoint ptr %left_text44 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @.str.113, ptr %left_text44, align 4
  %left_value45 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 3
  %67 = ptrtoint ptr %left_value45 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %55, ptr %left_value45, align 4
  %right_text46 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 4
  %68 = ptrtoint ptr %right_text46 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @.str.141, ptr %right_text46, align 4
  %right_value47 = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion33, i32 0, i32 5
  %69 = ptrtoint ptr %right_value47 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %add.ptr31, ptr %right_value47, align 4
  %cmp49 = icmp eq ptr %55, %add.ptr31
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion33, i1 noundef zeroext %cmp49, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion33) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_u64_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion16 = alloca %struct.kunit_binary_ptr_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pos, align 4
  %add.ptr = getelementptr i8, ptr %5, i32 43
  store ptr %add.ptr, ptr %pos, align 4
  %6 = load ptr, ptr %1, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %add.ptr3 = getelementptr i8, ptr %8, i32 63
  %end = getelementptr inbounds %struct.aa_ext, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %add.ptr3, ptr %end, align 4
  %10 = load ptr, ptr %1, align 4
  %pos1.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %pos1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pos1.i, align 4
  %end.i.i.i.i = getelementptr inbounds %struct.aa_ext, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %14, %12
  br i1 %cmp.i.not.i.i.i, label %entry.unpack_u64.exit_crit_edge, label %if.end.i.i.i

entry.unpack_u64.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.end.i.i.i:                                     ; preds = %entry
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %12, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %16)
  %cmp.not.i.i.i = icmp eq i8 %16, 4
  br i1 %cmp.not.i.i.i, label %if.then.i.i, label %if.end.i.i.i.unpack_u64.exit_crit_edge

if.end.i.i.i.unpack_u64.exit_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.then.i.i:                                      ; preds = %if.end.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %12, i32 1
  %17 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %incdec.ptr.i.i.i, ptr %pos1.i, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %14 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %incdec.ptr.i.i.i to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.ptr.sub.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.end.i29.i.i, label %if.then.i.i.unpack_u64.exit_crit_edge

if.then.i.i.unpack_u64.exit_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

if.end.i29.i.i:                                   ; preds = %if.then.i.i
  %18 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 2)
  %19 = load i16, ptr %incdec.ptr.i.i.i, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #16
  %conv.i28.i.i = zext i16 %20 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %12, i32 3
  %sub.ptr.rhs.cast.i24.i.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i25.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i24.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i25.i.i.i, i32 %conv.i28.i.i)
  %cmp.i26.not.i.i.i = icmp ult i32 %sub.ptr.sub.i25.i.i.i, %conv.i28.i.i
  br i1 %cmp.i26.not.i.i.i, label %if.end.i29.i.i.unpack_u64.exit_crit_edge, label %unpack_u16_chunk.exit.i.i

if.end.i29.i.i.unpack_u64.exit_crit_edge:         ; preds = %if.end.i29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

unpack_u16_chunk.exit.i.i:                        ; preds = %if.end.i29.i.i
  %add.ptr9.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %conv.i28.i.i
  %21 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %add.ptr9.i.i.i, ptr %pos1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool3.not.i.i = icmp eq i16 %19, 0
  br i1 %tobool3.not.i.i, label %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge, label %lor.lhs.false.i.i

unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge: ; preds = %unpack_u16_chunk.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

lor.lhs.false.i.i:                                ; preds = %unpack_u16_chunk.exit.i.i
  %sub.i.i = add nsw i32 %conv.i28.i.i, -1
  %arrayidx.i.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %sub.i.i
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %cmp.not.i.i = icmp eq i8 %23, 0
  br i1 %cmp.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.unpack_u64.exit_crit_edge

lor.lhs.false.i.i.unpack_u64.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(9) @__const.policy_unpack_test_unpack_u64_out_of_bounds.name, ptr noundef %add.ptr.i.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp ne i32 %call6.i.i, 0
  %cmp.i.not.i33.i.i = icmp eq ptr %14, %add.ptr9.i.i.i
  %or.cond = select i1 %tobool7.not.i.i, i1 true, i1 %cmp.i.not.i33.i.i
  br i1 %or.cond, label %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge, label %unpack_nameX.exit.i

lor.lhs.false5.i.i.unpack_u64.exit_crit_edge:     ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_u64.exit

unpack_nameX.exit.i:                              ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %add.ptr9.i.i.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %add.ptr9.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %25)
  %cmp.not.i35.i.i = icmp eq i8 %25, 3
  %incdec.ptr.i37.i.i = getelementptr i8, ptr %add.ptr9.i.i.i, i32 1
  %spec.select.i.i = select i1 %cmp.not.i35.i.i, ptr %incdec.ptr.i37.i.i, ptr %12
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %spec.select.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %sub.ptr.sub.i.i)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, 7
  %or.cond.i = select i1 %cmp.not.i35.i.i, i1 %cmp.i.i, i1 false
  %add.ptr.i = getelementptr i8, ptr %spec.select.i.i, i32 8
  %spec.select = select i1 %or.cond.i, ptr %add.ptr.i, ptr %12
  %not.or.cond.i = xor i1 %or.cond.i, true
  br label %unpack_u64.exit

unpack_u64.exit:                                  ; preds = %unpack_nameX.exit.i, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge, %if.end.i29.i.i.unpack_u64.exit_crit_edge, %if.then.i.i.unpack_u64.exit_crit_edge, %if.end.i.i.i.unpack_u64.exit_crit_edge, %entry.unpack_u64.exit_crit_edge
  %storemerge.i = phi ptr [ %12, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge ], [ %12, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge ], [ %12, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge ], [ %12, %if.end.i.i.i.unpack_u64.exit_crit_edge ], [ %12, %entry.unpack_u64.exit_crit_edge ], [ %spec.select, %unpack_nameX.exit.i ], [ %12, %if.end.i29.i.i.unpack_u64.exit_crit_edge ], [ %12, %if.then.i.i.unpack_u64.exit_crit_edge ]
  %retval.0.i = phi i1 [ true, %unpack_u16_chunk.exit.i.i.unpack_u64.exit_crit_edge ], [ true, %lor.lhs.false.i.i.unpack_u64.exit_crit_edge ], [ true, %lor.lhs.false5.i.i.unpack_u64.exit_crit_edge ], [ true, %if.end.i.i.i.unpack_u64.exit_crit_edge ], [ true, %entry.unpack_u64.exit_crit_edge ], [ %not.or.cond.i, %unpack_nameX.exit.i ], [ true, %if.end.i29.i.i.unpack_u64.exit_crit_edge ], [ true, %if.then.i.i.unpack_u64.exit_crit_edge ]
  %26 = ptrtoint ptr %pos1.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %storemerge.i, ptr %pos1.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %27 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %27, align 4, !annotation !316
  %29 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %30 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %31 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 533, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %32 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %33 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %34 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %35 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %36 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %37 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %1, align 4
  %pos11 = getelementptr inbounds %struct.aa_ext, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %pos11 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pos11, align 4
  %42 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %39, align 4
  %add.ptr14 = getelementptr i8, ptr %43, i32 43
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %__assertion16) #16
  %44 = ptrtoint ptr %__assertion16 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %test, ptr %__assertion16, align 4
  %type19 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 1
  %45 = ptrtoint ptr %type19 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 1, ptr %type19, align 4
  %line20 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 2
  %46 = ptrtoint ptr %line20 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 535, ptr %line20, align 4
  %file21 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 3
  %47 = ptrtoint ptr %file21 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.7, ptr %file21, align 4
  %message22 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 4
  %48 = ptrtoint ptr %message22 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %message22, align 4
  %va24 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 4, i32 1
  %49 = ptrtoint ptr %va24 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %va24, align 4
  %format25 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion16, i32 0, i32 5
  %50 = ptrtoint ptr %format25 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @kunit_binary_ptr_assert_format, ptr %format25, align 4
  %operation = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 1
  %51 = ptrtoint ptr %operation to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @.str.110, ptr %operation, align 4
  %left_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 2
  %52 = ptrtoint ptr %left_text to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @.str.113, ptr %left_text, align 4
  %left_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 3
  %53 = ptrtoint ptr %left_value to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %41, ptr %left_value, align 4
  %right_text = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 4
  %54 = ptrtoint ptr %right_text to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.142, ptr %right_text, align 4
  %right_value = getelementptr inbounds %struct.kunit_binary_ptr_assert, ptr %__assertion16, i32 0, i32 5
  %55 = ptrtoint ptr %right_value to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %add.ptr14, ptr %right_value, align 4
  %cmp27 = icmp eq ptr %41, %add.ptr14
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion16, i1 noundef zeroext %cmp27, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %__assertion16) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_X_code_match(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion5 = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i.i, align 4
  %pos.i.i = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %pos.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pos.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %5, %7
  br i1 %cmp.i.not.i, label %entry.unpack_X.exit_crit_edge, label %if.end.i

entry.unpack_X.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_X.exit

if.end.i:                                         ; preds = %entry
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %9)
  %cmp.not.i = icmp eq i8 %9, 4
  br i1 %cmp.not.i, label %if.end3.i, label %if.end.i.unpack_X.exit_crit_edge

if.end.i.unpack_X.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_X.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i8, ptr %7, i32 1
  %10 = ptrtoint ptr %pos.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %incdec.ptr.i, ptr %pos.i.i, align 4
  br label %unpack_X.exit

unpack_X.exit:                                    ; preds = %if.end3.i, %if.end.i.unpack_X.exit_crit_edge, %entry.unpack_X.exit_crit_edge
  %retval.0.i = phi i1 [ true, %if.end3.i ], [ false, %entry.unpack_X.exit_crit_edge ], [ false, %if.end.i.unpack_X.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %11 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %11, align 4, !annotation !316
  %13 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %15 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 543, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %16 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %17 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %18 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %19 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %20 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %21 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 1, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion5) #16
  %22 = getelementptr inbounds i8, ptr %__assertion5, i32 32
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %22, align 4, !annotation !316
  %24 = ptrtoint ptr %__assertion5 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %test, ptr %__assertion5, align 4
  %type8 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 1
  %25 = ptrtoint ptr %type8 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 1, ptr %type8, align 4
  %line9 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 2
  %26 = ptrtoint ptr %line9 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 544, ptr %line9, align 4
  %file10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 3
  %27 = ptrtoint ptr %file10 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @.str.7, ptr %file10, align 4
  %message11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 4
  %28 = ptrtoint ptr %message11 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %message11, align 4
  %va13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 4, i32 1
  %29 = ptrtoint ptr %va13 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %va13, align 4
  %format14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 5
  %30 = ptrtoint ptr %format14 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @kunit_unary_assert_format, ptr %format14, align 4
  %condition15 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion5, i32 0, i32 1
  %31 = ptrtoint ptr %condition15 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @.str.143, ptr %condition15, align 4
  %expected_true16 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion5, i32 0, i32 2
  %32 = ptrtoint ptr %expected_true16 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %expected_true16, align 4
  %33 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pos, align 4
  %37 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %34, align 4
  %add.ptr = getelementptr i8, ptr %38, i32 1
  %cmp20 = icmp eq ptr %36, %add.ptr
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion5, i1 noundef zeroext %cmp20, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion5) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_X_code_mismatch(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  %__assertion5 = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i.i, align 4
  %pos.i.i = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %pos.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pos.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %5, %7
  br i1 %cmp.i.not.i, label %entry.unpack_X.exit_crit_edge, label %if.end.i

entry.unpack_X.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_X.exit

if.end.i:                                         ; preds = %entry
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %9)
  %cmp.not.i = icmp eq i8 %9, 5
  br i1 %cmp.not.i, label %if.end3.i, label %if.end.i.unpack_X.exit_crit_edge

if.end.i.unpack_X.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_X.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i8, ptr %7, i32 1
  %10 = ptrtoint ptr %pos.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %incdec.ptr.i, ptr %pos.i.i, align 4
  br label %unpack_X.exit

unpack_X.exit:                                    ; preds = %if.end3.i, %if.end.i.unpack_X.exit_crit_edge, %entry.unpack_X.exit_crit_edge
  %retval.0.i = phi i1 [ false, %if.end3.i ], [ true, %entry.unpack_X.exit_crit_edge ], [ true, %if.end.i.unpack_X.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %11 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %11, align 4, !annotation !316
  %13 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %15 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 552, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %16 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %17 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %18 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %19 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %20 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %21 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion5) #16
  %22 = getelementptr inbounds i8, ptr %__assertion5, i32 32
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %22, align 4, !annotation !316
  %24 = ptrtoint ptr %__assertion5 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %test, ptr %__assertion5, align 4
  %type8 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 1
  %25 = ptrtoint ptr %type8 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 1, ptr %type8, align 4
  %line9 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 2
  %26 = ptrtoint ptr %line9 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 553, ptr %line9, align 4
  %file10 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 3
  %27 = ptrtoint ptr %file10 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @.str.7, ptr %file10, align 4
  %message11 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 4
  %28 = ptrtoint ptr %message11 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %message11, align 4
  %va13 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 4, i32 1
  %29 = ptrtoint ptr %va13 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %va13, align 4
  %format14 = getelementptr inbounds %struct.kunit_assert, ptr %__assertion5, i32 0, i32 5
  %30 = ptrtoint ptr %format14 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @kunit_unary_assert_format, ptr %format14, align 4
  %condition15 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion5, i32 0, i32 1
  %31 = ptrtoint ptr %condition15 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr @.str.144, ptr %condition15, align 4
  %expected_true16 = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion5, i32 0, i32 2
  %32 = ptrtoint ptr %expected_true16 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %expected_true16, align 4
  %33 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %1, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pos, align 4
  %37 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %34, align 4
  %cmp20 = icmp eq ptr %36, %38
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion5, i1 noundef zeroext %cmp20, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion5) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @policy_unpack_test_unpack_X_out_of_bounds(ptr noundef %test) #0 align 64 {
entry:
  %__assertion = alloca %struct.kunit_unary_assert, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %test to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %test, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %end = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end, align 4
  %pos = getelementptr inbounds %struct.aa_ext, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %pos to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %pos, align 4
  %7 = load ptr, ptr %1, align 4
  %end.i.i = getelementptr inbounds %struct.aa_ext, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i.i, align 4
  %pos.i.i = getelementptr inbounds %struct.aa_ext, ptr %7, i32 0, i32 2
  %10 = ptrtoint ptr %pos.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pos.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %9, %11
  br i1 %cmp.i.not.i, label %entry.unpack_X.exit_crit_edge, label %if.end.i

entry.unpack_X.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_X.exit

if.end.i:                                         ; preds = %entry
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %11, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %13)
  %cmp.not.i = icmp eq i8 %13, 4
  br i1 %cmp.not.i, label %if.end3.i, label %if.end.i.unpack_X.exit_crit_edge

if.end.i.unpack_X.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unpack_X.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i8, ptr %11, i32 1
  %14 = ptrtoint ptr %pos.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %incdec.ptr.i, ptr %pos.i.i, align 4
  br label %unpack_X.exit

unpack_X.exit:                                    ; preds = %if.end3.i, %if.end.i.unpack_X.exit_crit_edge, %entry.unpack_X.exit_crit_edge
  %retval.0.i = phi i1 [ false, %if.end3.i ], [ true, %entry.unpack_X.exit_crit_edge ], [ true, %if.end.i.unpack_X.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %__assertion) #16
  %15 = getelementptr inbounds i8, ptr %__assertion, i32 32
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %15, align 4, !annotation !316
  %17 = ptrtoint ptr %__assertion to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %test, ptr %__assertion, align 4
  %type = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 1
  %18 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %type, align 4
  %line = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 2
  %19 = ptrtoint ptr %line to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 564, ptr %line, align 4
  %file = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 3
  %20 = ptrtoint ptr %file to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @.str.7, ptr %file, align 4
  %message = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4
  %21 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %message, align 4
  %va = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 4, i32 1
  %22 = ptrtoint ptr %va to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %va, align 4
  %format = getelementptr inbounds %struct.kunit_assert, ptr %__assertion, i32 0, i32 5
  %23 = ptrtoint ptr %format to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @kunit_unary_assert_format, ptr %format, align 4
  %condition = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 1
  %24 = ptrtoint ptr %condition to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @.str.121, ptr %condition, align 4
  %expected_true = getelementptr inbounds %struct.kunit_unary_assert, ptr %__assertion, i32 0, i32 2
  %25 = ptrtoint ptr %expected_true to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %expected_true, align 4
  call void (ptr, ptr, i1, ptr, ...) @kunit_do_assertion(ptr noundef %test, ptr noundef nonnull %__assertion, i1 noundef zeroext %retval.0.i, ptr noundef null) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %__assertion) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunit_unary_assert_format(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunit_binary_assert_format(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunit_binary_ptr_assert_format(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunit_binary_str_assert_format(ptr noundef, ptr noundef) #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #8

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 146)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 146)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { nounwind readonly }
attributes #10 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { inlinehint nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { null_pointer_is_valid allocsize(1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { argmemonly nofree nounwind readonly willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { nobuiltin }
attributes #20 = { nounwind allocsize(2) }
attributes #21 = { nounwind allocsize(0) }
attributes #22 = { nobuiltin nounwind }
attributes #23 = { nounwind allocsize(1) }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !8, !10, !12, !14, !15, !17, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !53, !54, !56, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !83, !85, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !138, !139, !141, !142, !144, !146, !147, !148, !150, !151, !153, !155, !157, !158, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !236, !237, !239, !240, !242, !244, !246, !247, !249, !251, !253, !255, !257, !259, !261, !263, !265, !266, !268, !270, !272, !273, !275, !277, !279, !281, !283, !285, !287, !289, !291, !293, !295, !297}
!llvm.named.register.sp = !{!299}
!llvm.module.flags = !{!300, !301, !302, !303, !304, !305, !306, !307}
!llvm.ident = !{!308}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../security/apparmor/policy_unpack.c", i32 126, i32 2}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @__func__.__aa_loaddata_update, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @.str.2, !5, !"<string literal>", i1 false, i1 false}
!5 = !{!"../security/apparmor/policy_unpack.c", i32 127, i32 2}
!6 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../security/apparmor/policy_unpack.c", i32 128, i32 2}
!8 = !{ptr @.str.4, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../security/apparmor/policy_unpack.c", i32 129, i32 2}
!10 = !{ptr @.str.5, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../security/apparmor/policy_unpack.c", i32 130, i32 2}
!12 = !{ptr @aa_loaddata_kref.__key, !13, !"__key", i1 false, i1 false}
!13 = !{!"../security/apparmor/policy_unpack.c", i32 177, i32 3}
!14 = !{ptr @.str.6, !13, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @.str.7, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../security/apparmor/policy_unpack_test.c", i32 58, i32 2}
!17 = !{ptr @.str.8, !16, !"<string literal>", i1 false, i1 false}
!18 = !{ptr @.str.9, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../security/apparmor/policy_unpack_test.c", i32 61, i32 2}
!20 = !{ptr @.str.10, !21, !"<string literal>", i1 false, i1 false}
!21 = !{!"../security/apparmor/policy_unpack_test.c", i32 69, i32 18}
!22 = !{ptr @.str.11, !23, !"<string literal>", i1 false, i1 false}
!23 = !{!"../security/apparmor/policy_unpack_test.c", i32 74, i32 18}
!24 = !{ptr @.str.12, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../security/apparmor/policy_unpack_test.c", i32 79, i32 18}
!26 = !{ptr @.str.13, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../security/apparmor/policy_unpack_test.c", i32 86, i32 18}
!28 = !{ptr @.str.14, !29, !"<string literal>", i1 false, i1 false}
!29 = !{!"../security/apparmor/policy_unpack_test.c", i32 93, i32 18}
!30 = !{ptr @.str.15, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../security/apparmor/policy_unpack_test.c", i32 97, i32 3}
!32 = !{ptr @.str.16, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../security/apparmor/policy_unpack_test.c", i32 102, i32 18}
!34 = !{ptr @__UNIQUE_ID_suites559, !35, !"__UNIQUE_ID_suites559", i1 false, i1 false}
!35 = !{!"../security/apparmor/policy_unpack_test.c", i32 607, i32 1}
!36 = !{ptr @.str.17, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../security/apparmor/policy_unpack.c", i32 953, i32 34}
!38 = !{ptr @.str.18, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../security/apparmor/policy_unpack.c", i32 955, i32 34}
!40 = !{ptr @.str.19, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../security/apparmor/policy_unpack.c", i32 966, i32 33}
!42 = !{ptr @.str.20, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../security/apparmor/policy_unpack.c", i32 972, i32 27}
!44 = !{ptr @.str.21, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../security/apparmor/policy_unpack.c", i32 974, i32 34}
!46 = distinct !{null, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../security/apparmor/policy_unpack.c", i32 979, i32 34}
!48 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!49 = !{!"../security/apparmor/include/cred.h", i32 89, i32 27}
!50 = !{ptr @.str.23, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../security/apparmor/include/cred.h", i32 51, i32 2}
!52 = !{ptr @.str.24, !51, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @__func__.aa_cred_raw_label, !51, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @.str.25, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../security/apparmor/include/cred.h", i32 26, i32 2}
!56 = !{ptr @__func__.cred_label, !55, !"<string literal>", i1 false, i1 false}
!57 = !{ptr @.str.26, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../security/apparmor/policy_unpack.c", i32 83, i32 24}
!59 = !{ptr @.str.27, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../security/apparmor/policy_unpack.c", i32 87, i32 24}
!61 = !{ptr @.str.28, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../security/apparmor/policy_unpack.c", i32 91, i32 24}
!63 = !{ptr @.str.29, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../security/apparmor/policy_unpack.c", i32 678, i32 21}
!65 = !{ptr @.str.30, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../security/apparmor/policy_unpack.c", i32 690, i32 34}
!67 = !{ptr @.str.31, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../security/apparmor/policy_unpack.c", i32 701, i32 11}
!69 = !{ptr @.str.32, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../security/apparmor/policy_unpack.c", i32 712, i32 41}
!71 = !{ptr @.str.33, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../security/apparmor/policy_unpack.c", i32 715, i32 41}
!73 = !{ptr @.str.34, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../security/apparmor/policy_unpack.c", i32 722, i32 10}
!75 = !{ptr @.str.35, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../security/apparmor/policy_unpack.c", i32 728, i32 11}
!77 = !{ptr @.str.36, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../security/apparmor/policy_unpack.c", i32 735, i32 47}
!79 = !{ptr @.str.37, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../security/apparmor/policy_unpack.c", i32 738, i32 34}
!81 = !{ptr @.str.38, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../security/apparmor/policy_unpack.c", i32 739, i32 10}
!83 = !{ptr @.str.39, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../security/apparmor/policy_unpack.c", i32 742, i32 9}
!85 = !{ptr @.str.40, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../security/apparmor/policy_unpack.c", i32 768, i32 42}
!87 = !{ptr @.str.41, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../security/apparmor/policy_unpack.c", i32 775, i32 9}
!89 = !{ptr @.str.42, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../security/apparmor/policy_unpack.c", i32 785, i32 9}
!91 = !{ptr @.str.43, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../security/apparmor/policy_unpack.c", i32 786, i32 33}
!93 = !{ptr @.str.44, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../security/apparmor/policy_unpack.c", i32 800, i32 9}
!95 = !{ptr @.str.45, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../security/apparmor/policy_unpack.c", i32 801, i32 33}
!97 = !{ptr @.str.46, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../security/apparmor/policy_unpack.c", i32 812, i32 10}
!99 = !{ptr @.str.47, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../security/apparmor/policy_unpack.c", i32 817, i32 10}
!101 = !{ptr @.str.48, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../security/apparmor/policy_unpack.c", i32 822, i32 10}
!103 = !{ptr @.str.49, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../security/apparmor/policy_unpack.c", i32 826, i32 33}
!105 = !{ptr @.str.50, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../security/apparmor/policy_unpack.c", i32 828, i32 10}
!107 = !{ptr @.str.51, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../security/apparmor/policy_unpack.c", i32 838, i32 49}
!109 = !{ptr @.str.52, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../security/apparmor/policy_unpack.c", i32 858, i32 10}
!111 = !{ptr @.str.53, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../security/apparmor/policy_unpack.c", i32 861, i32 44}
!113 = !{ptr @.str.54, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../security/apparmor/policy_unpack.c", i32 872, i32 10}
!115 = !{ptr @.str.55, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../security/apparmor/policy_unpack.c", i32 876, i32 33}
!117 = !{ptr @.str.56, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../security/apparmor/policy_unpack.c", i32 890, i32 11}
!119 = !{ptr @.str.57, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../security/apparmor/policy_unpack.c", i32 915, i32 11}
!121 = !{ptr @.str.58, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../security/apparmor/policy_unpack.c", i32 921, i32 10}
!123 = !{ptr @.str.59, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../security/apparmor/policy_unpack.c", i32 931, i32 10}
!125 = !{ptr @.str.60, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../security/apparmor/policy_unpack.c", i32 448, i32 31}
!127 = !{ptr @.str.61, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../security/apparmor/policy_unpack.c", i32 550, i32 33}
!129 = !{ptr @.str.62, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../security/apparmor/policy_unpack.c", i32 624, i32 33}
!131 = !{ptr @.str.63, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../security/apparmor/policy_unpack.c", i32 580, i32 33}
!133 = !{ptr @.str.64, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../security/apparmor/policy_unpack.c", i32 482, i32 33}
!135 = distinct !{null, !136, !"__warned", i1 false, i1 false}
!136 = !{!"../include/linux/rhashtable.h", i32 715, i32 8}
!137 = !{ptr @.str.65, !136, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @.str.66, !136, !"<string literal>", i1 false, i1 false}
!139 = distinct !{null, !140, !"__warned", i1 false, i1 false}
!140 = !{!"../include/linux/rhashtable.h", i32 755, i32 10}
!141 = !{ptr @.str.68, !140, !"<string literal>", i1 false, i1 false}
!142 = distinct !{null, !143, !"__warned", i1 false, i1 false}
!143 = !{!"../include/linux/rhashtable.h", i32 732, i32 2}
!144 = distinct !{null, !145, !"__warned", i1 false, i1 false}
!145 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!146 = !{ptr @.str.70, !145, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @.str.71, !145, !"<string literal>", i1 false, i1 false}
!148 = distinct !{null, !149, !"__warned", i1 false, i1 false}
!149 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!150 = !{ptr @.str.72, !149, !"<string literal>", i1 false, i1 false}
!151 = distinct !{null, !152, !"__warned", i1 false, i1 false}
!152 = !{!"../include/linux/rhashtable.h", i32 377, i32 19}
!153 = !{ptr @.str.73, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../security/apparmor/policy_unpack.c", i32 1025, i32 36}
!155 = !{ptr @.str.74, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../security/apparmor/policy_unpack.c", i32 1131, i32 2}
!157 = !{ptr @__func__.compress_loaddata, !156, !"<string literal>", i1 false, i1 false}
!158 = !{ptr @__UNIQUE_ID_array558, !35, !"__UNIQUE_ID_array558", i1 false, i1 false}
!159 = !{ptr @apparmor_policy_unpack_test_module, !160, !"apparmor_policy_unpack_test_module", i1 false, i1 false}
!160 = !{!"../security/apparmor/policy_unpack_test.c", i32 601, i32 27}
!161 = !{ptr @.str.75, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../security/apparmor/policy_unpack_test.c", i32 115, i32 2}
!163 = !{ptr @.str.76, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../security/apparmor/policy_unpack_test.c", i32 568, i32 2}
!165 = !{ptr @.str.77, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../security/apparmor/policy_unpack_test.c", i32 569, i32 2}
!167 = !{ptr @.str.78, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../security/apparmor/policy_unpack_test.c", i32 570, i32 2}
!169 = !{ptr @.str.79, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../security/apparmor/policy_unpack_test.c", i32 571, i32 2}
!171 = !{ptr @.str.80, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../security/apparmor/policy_unpack_test.c", i32 572, i32 2}
!173 = !{ptr @.str.81, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../security/apparmor/policy_unpack_test.c", i32 573, i32 2}
!175 = !{ptr @.str.82, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../security/apparmor/policy_unpack_test.c", i32 574, i32 2}
!177 = !{ptr @.str.83, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../security/apparmor/policy_unpack_test.c", i32 575, i32 2}
!179 = !{ptr @.str.84, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../security/apparmor/policy_unpack_test.c", i32 576, i32 2}
!181 = !{ptr @.str.85, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../security/apparmor/policy_unpack_test.c", i32 577, i32 2}
!183 = !{ptr @.str.86, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../security/apparmor/policy_unpack_test.c", i32 578, i32 2}
!185 = !{ptr @.str.87, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../security/apparmor/policy_unpack_test.c", i32 579, i32 2}
!187 = !{ptr @.str.88, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../security/apparmor/policy_unpack_test.c", i32 580, i32 2}
!189 = !{ptr @.str.89, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../security/apparmor/policy_unpack_test.c", i32 581, i32 2}
!191 = !{ptr @.str.90, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../security/apparmor/policy_unpack_test.c", i32 582, i32 2}
!193 = !{ptr @.str.91, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../security/apparmor/policy_unpack_test.c", i32 583, i32 2}
!195 = !{ptr @.str.92, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../security/apparmor/policy_unpack_test.c", i32 584, i32 2}
!197 = !{ptr @.str.93, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../security/apparmor/policy_unpack_test.c", i32 585, i32 2}
!199 = !{ptr @.str.94, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../security/apparmor/policy_unpack_test.c", i32 586, i32 2}
!201 = !{ptr @.str.95, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../security/apparmor/policy_unpack_test.c", i32 587, i32 2}
!203 = !{ptr @.str.96, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../security/apparmor/policy_unpack_test.c", i32 588, i32 2}
!205 = !{ptr @.str.97, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../security/apparmor/policy_unpack_test.c", i32 589, i32 2}
!207 = !{ptr @.str.98, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../security/apparmor/policy_unpack_test.c", i32 590, i32 2}
!209 = !{ptr @.str.99, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../security/apparmor/policy_unpack_test.c", i32 591, i32 2}
!211 = !{ptr @.str.100, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../security/apparmor/policy_unpack_test.c", i32 592, i32 2}
!213 = !{ptr @.str.101, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../security/apparmor/policy_unpack_test.c", i32 593, i32 2}
!215 = !{ptr @.str.102, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../security/apparmor/policy_unpack_test.c", i32 594, i32 2}
!217 = !{ptr @.str.103, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../security/apparmor/policy_unpack_test.c", i32 595, i32 2}
!219 = !{ptr @.str.104, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../security/apparmor/policy_unpack_test.c", i32 596, i32 2}
!221 = !{ptr @.str.105, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../security/apparmor/policy_unpack_test.c", i32 597, i32 2}
!223 = !{ptr @apparmor_policy_unpack_test_cases, !224, !"apparmor_policy_unpack_test_cases", i1 false, i1 false}
!224 = !{!"../security/apparmor/policy_unpack_test.c", i32 567, i32 26}
!225 = !{ptr @.str.106, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../security/apparmor/policy_unpack_test.c", i32 128, i32 2}
!227 = !{ptr @.str.107, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../security/apparmor/policy_unpack_test.c", i32 129, i32 2}
!229 = !{ptr @.str.108, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../security/apparmor/policy_unpack_test.c", i32 130, i32 2}
!231 = !{ptr @.str.109, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../security/apparmor/policy_unpack_test.c", i32 137, i32 2}
!233 = !{ptr @.str.110, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../security/apparmor/policy_unpack_test.c", i32 149, i32 2}
!235 = !{ptr @.str.111, !234, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @.str.112, !234, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @.str.113, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../security/apparmor/policy_unpack_test.c", i32 150, i32 2}
!239 = !{ptr @.str.114, !238, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @.str.115, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../security/apparmor/policy_unpack_test.c", i32 180, i32 2}
!242 = !{ptr @.str.116, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../security/apparmor/policy_unpack_test.c", i32 181, i32 2}
!244 = !{ptr @.str.117, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../security/apparmor/policy_unpack_test.c", i32 194, i32 2}
!246 = !{ptr @.str.118, !245, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @.str.119, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../security/apparmor/policy_unpack_test.c", i32 195, i32 2}
!249 = !{ptr @.str.120, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../security/apparmor/policy_unpack_test.c", i32 227, i32 2}
!251 = !{ptr @.str.121, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../security/apparmor/policy_unpack_test.c", i32 329, i32 2}
!253 = !{ptr @.str.122, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../security/apparmor/policy_unpack_test.c", i32 330, i32 2}
!255 = !{ptr @.str.123, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../security/apparmor/policy_unpack_test.c", i32 344, i32 2}
!257 = !{ptr @policy_unpack_test_unpack_nameX_with_wrong_name.name, !258, !"name", i1 false, i1 false}
!258 = !{!"../security/apparmor/policy_unpack_test.c", i32 366, i32 20}
!259 = !{ptr @.str.124, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../security/apparmor/policy_unpack_test.c", i32 374, i32 2}
!261 = !{ptr @.str.125, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../security/apparmor/policy_unpack_test.c", i32 240, i32 2}
!263 = !{ptr @.str.126, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../security/apparmor/policy_unpack_test.c", i32 241, i32 2}
!265 = !{ptr @.str.127, !264, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @.str.128, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../security/apparmor/policy_unpack_test.c", i32 282, i32 2}
!268 = !{ptr @.str.129, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../security/apparmor/policy_unpack_test.c", i32 316, i32 2}
!270 = !{ptr @.str.130, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../security/apparmor/policy_unpack_test.c", i32 394, i32 2}
!272 = !{ptr @.str.131, !271, !"<string literal>", i1 false, i1 false}
!273 = !{ptr @.str.132, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../security/apparmor/policy_unpack_test.c", i32 396, i32 2}
!275 = !{ptr @.str.133, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../security/apparmor/policy_unpack_test.c", i32 397, i32 2}
!277 = !{ptr @.str.134, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../security/apparmor/policy_unpack_test.c", i32 411, i32 2}
!279 = !{ptr @.str.135, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../security/apparmor/policy_unpack_test.c", i32 412, i32 2}
!281 = !{ptr @.str.136, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../security/apparmor/policy_unpack_test.c", i32 413, i32 2}
!283 = !{ptr @.str.137, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../security/apparmor/policy_unpack_test.c", i32 435, i32 2}
!285 = !{ptr @.str.138, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../security/apparmor/policy_unpack_test.c", i32 449, i32 2}
!287 = !{ptr @.str.139, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../security/apparmor/policy_unpack_test.c", i32 450, i32 2}
!289 = !{ptr @.str.140, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../security/apparmor/policy_unpack_test.c", i32 499, i32 2}
!291 = !{ptr @.str.141, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../security/apparmor/policy_unpack_test.c", i32 500, i32 2}
!293 = !{ptr @.str.142, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../security/apparmor/policy_unpack_test.c", i32 534, i32 2}
!295 = !{ptr @.str.143, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../security/apparmor/policy_unpack_test.c", i32 544, i32 2}
!297 = !{ptr @.str.144, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../security/apparmor/policy_unpack_test.c", i32 553, i32 2}
!299 = !{!"sp"}
!300 = !{i32 1, !"wchar_size", i32 2}
!301 = !{i32 1, !"min_enum_size", i32 4}
!302 = !{i32 8, !"branch-target-enforcement", i32 0}
!303 = !{i32 8, !"sign-return-address", i32 0}
!304 = !{i32 8, !"sign-return-address-all", i32 0}
!305 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!306 = !{i32 7, !"uwtable", i32 1}
!307 = !{i32 7, !"frame-pointer", i32 2}
!308 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!309 = !{!"branch_weights", i32 1, i32 2000}
!310 = !{!"branch_weights", i32 2000, i32 1}
!311 = !{i8 0, i8 2}
!312 = !{i64 2148546717, i64 2148546749, i64 2148546778, i64 2148546812, i64 2148546843, i64 2148546866}
!313 = !{i64 2148634718}
!314 = !{i64 2148549182, i64 2148549214, i64 2148549243, i64 2148549277, i64 2148549308, i64 2148549331}
!315 = !{i64 2149654844}
!316 = !{!"auto-init"}
!317 = !{i64 2149346857}
!318 = !{i64 2149347123}
!319 = !{i64 2148545187, i64 2148545213, i64 2148545242, i64 2148545276, i64 2148545307, i64 2148545330}
!320 = !{i64 2152196400}
!321 = !{!"branch_weights", i32 2146410443, i32 1073205}
!322 = !{i64 2148554045, i64 2148554077, i64 2148554106, i64 2148554140, i64 2148554171, i64 2148554194}
!323 = !{i64 2148643126}
!324 = !{i64 2152196560}
!325 = !{i64 2152196837}
!326 = !{i64 2152196679}
!327 = !{i64 2152197042}
!328 = !{i64 2152198105, i64 2152198597, i64 2152198142, i64 2152198198, i64 2152198232, i64 2152198256, i64 2152198297, i64 2152198318, i64 2152198346, i64 2152198380}
!329 = !{i64 2148642013}
!330 = !{i64 2148552432, i64 2148552464, i64 2148552493, i64 2148552527, i64 2148552558, i64 2148552581}
!331 = !{i64 2152199500}
!332 = !{i64 2158290146}
!333 = !{i64 2158292445}
