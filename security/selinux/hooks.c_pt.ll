; ModuleID = '/llk/IR_all_yes/security/selinux/hooks.c_pt.bc'
source_filename = "../security/selinux/hooks.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.lsm_blob_sizes = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.atomic_t = type { i32 }
%struct.lsm_info = type { ptr, i32, i32, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.security_hook_list = type { %struct.hlist_node, ptr, %union.security_list_options, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.security_list_options = type { ptr }
%struct.selinux_state = type { i8, i8, i8, i8, [7 x i8], ptr, %struct.mutex, ptr, ptr, %struct.mutex }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.5 }
%union.anon.5 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.8 }
%union.anon.8 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.18, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.lock_class_key = type { %union.anon.3 }
%union.anon.3 = type { %struct.hlist_node }
%struct.fs_parameter_spec = type { ptr, ptr, i8, i16, ptr }
%struct.pernet_operations = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.nf_hook_ops = type { ptr, ptr, ptr, i8, i8, i32, i32 }
%struct.security_hook_heads = type { %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.security_class_mapping = type { ptr, [33 x ptr] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.173, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.37 }
%struct.llist_node = type { ptr }
%union.anon.37 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.39 }
%union.anon.39 = type { %struct.anon.40 }
%struct.anon.40 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.173 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.path = type { ptr, ptr }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.259 = type { ptr, i32, i32, i8 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.24 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.24 = type { %struct.callback_head }
%struct.task_security_struct = type { i32, i32, i32, i32, i32, i32 }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.superblock_security_struct = type { i32, i32, i32, i16, i16, %struct.mutex, %struct.list_head, %struct.spinlock }
%struct.file_system_type = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.197, %struct.list_head, %struct.list_head, %union.anon.198 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.6, ptr }
%union.anon.6 = type { i64 }
%struct.lockref = type { %union.anon.195 }
%union.anon.195 = type { %struct.anon.196 }
%struct.anon.196 = type { %struct.spinlock, i32 }
%union.anon.197 = type { %struct.list_head }
%union.anon.198 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.188, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.189, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.190, ptr, %struct.address_space, %struct.list_head, %union.anon.193, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.188 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.189 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.190 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%union.anon.193 = type { ptr }
%struct.selinux_mnt_opts = type { ptr, ptr, ptr, ptr }
%struct.inode_security_struct = type { ptr, %struct.list_head, i32, i32, i16, i8, %struct.spinlock }
%struct.common_audit_data = type { i8, %union.anon.251, %union.anon.256 }
%union.anon.251 = type { %struct.path }
%union.anon.256 = type { ptr }
%struct.lsm_network_audit = type { i32, ptr, i16, i16, i16, %union.anon.252 }
%union.anon.252 = type { %struct.anon.254 }
%struct.anon.254 = type { %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.76 }
%union.anon.76 = type { [4 x i32] }
%struct.sk_buff = type { %union.anon.54, %union.anon.57, %union.anon.58, [48 x i8], %union.anon.59, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.61, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { ptr, ptr, %union.anon.56 }
%union.anon.56 = type { ptr }
%union.anon.57 = type { ptr }
%union.anon.58 = type { i64 }
%union.anon.59 = type { %struct.anon.60 }
%struct.anon.60 = type { i32, ptr }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.63, i32, i32, i32, i16, i16, %union.anon.65, i32, %union.anon.66, %union.anon.67, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.63 = type { i32 }
%union.anon.65 = type { i32 }
%union.anon.66 = type { i32 }
%union.anon.67 = type { i16 }
%struct.sock_common = type { %union.anon.44, %union.anon.46, %union.anon.47, i16, i8, i8, i32, %union.anon.49, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.77, [0 x i32], %union.anon.78, i16, i16, %union.anon.79, %struct.refcount_struct, [0 x i32], %union.anon.80 }
%union.anon.44 = type { i64 }
%union.anon.46 = type { i32 }
%union.anon.47 = type { i32 }
%union.anon.49 = type { %struct.hlist_node }
%struct.possible_net_t = type { ptr }
%union.anon.77 = type { i32 }
%union.anon.78 = type { %struct.hlist_node }
%union.anon.79 = type { i32 }
%union.anon.80 = type { i32 }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.85, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.127, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.128, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.anon.85 = type { %struct.atomic_t, i32, ptr, ptr }
%union.anon.127 = type { ptr }
%union.anon.128 = type { ptr }
%struct.sk_buff_head = type { %union.anon.83, i32, %struct.spinlock }
%union.anon.83 = type { %struct.anon.84 }
%struct.anon.84 = type { ptr, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.nf_hook_state = type { i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.201, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.222, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.201 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%union.anon.222 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.sk_security_struct = type { i32, ptr, i32, i32, i16, i32 }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, ptr }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.udphdr = type { i16, i16, i16, i16 }
%struct.dccp_hdr = type { i16, i16, i8, i8, i16, i8, i8, i16 }
%struct.sctphdr = type { i16, i16, i32, i32 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.file = type { %union.anon.2, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.bpf_map = type { ptr, ptr, ptr, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, [16 x i8], i8, i8, [30 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, %struct.atomic64_t, [96 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.122 }
%union.anon.122 = type { %struct.anon.123 }
%struct.anon.123 = type { %struct.anon.124, [0 x %struct.sock_filter] }
%struct.anon.124 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, %struct.hlist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.bpf_ksym, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i64, i32, [2 x ptr], [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %union.anon.121 }
%struct.bpf_ksym = type { i32, i32, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%union.anon.121 = type { %struct.work_struct }
%struct.av_decision = type { i32, i32, i32, i32, i32 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.linux_binprm = type { ptr, i32, ptr, i32, i32, i8, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, %struct.rlimit, [256 x i8] }
%struct.rlimit = type { i32, i32 }
%struct.tty_struct = type { i32, %struct.kref, ptr, ptr, ptr, i32, %struct.ld_semaphore, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.ktermios, %struct.ktermios, [64 x i8], i32, i32, %struct.winsize, %struct.anon.141, %struct.anon.142, i32, i32, i32, ptr, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, ptr, ptr, %struct.spinlock, %struct.list_head, i32, ptr, i32, %struct.work_struct, ptr }
%struct.ld_semaphore = type { %struct.atomic_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head, %struct.lockdep_map }
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.anon.141 = type { %struct.spinlock, i8, i8, [0 x i32] }
%struct.anon.142 = type { %struct.spinlock, ptr, ptr, i8, i8, [0 x i32] }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.vfsmount = type { ptr, ptr, i32, ptr }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.lockdep_map, ptr, ptr, %struct.rb_node, ptr, i32, %union.anon.116, ptr, i64, i16, i16, ptr }
%union.anon.116 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { ptr, ptr, i64, ptr }
%struct.file_security_struct = type { i32, i32, i32, i32 }
%struct.lsm_ioctlop_audit = type { %struct.path, i16 }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.177, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.177 = type { %struct.anon.178 }
%struct.anon.178 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type { ptr }
%struct.anon.23 = type { ptr, %struct.rb_root, i64, ptr, i32, i32, i32, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i32, i32, i32, i32, %struct.atomic64_t, i32, i32, i32, i32, %struct.seqcount, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [42 x i32], %struct.mm_rss_stat, ptr, %struct.mm_context_t, i32, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.mm_rss_stat = type { [4 x %struct.atomic_t] }
%struct.mm_context_t = type { %struct.atomic64_t, i32, i32, i32, i32, i32 }
%struct.uprobes_state = type { ptr }
%struct.kern_ipc_perm = type { %struct.spinlock, i8, i32, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i16, i32, ptr, %struct.rhash_head, %struct.callback_head, %struct.refcount_struct, [28 x i8] }
%struct.rhash_head = type { ptr }
%struct.ipc_security_struct = type { i16, i32 }
%struct.msg_msg = type { %struct.list_head, i32, i32, ptr, ptr }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [104 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [60 x i8] }
%struct.socket_alloc = type { %struct.socket, %struct.inode, [112 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.139, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.anon.139 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.sctp_ep_common = type { i32, %struct.refcount_struct, i8, ptr, ptr, %struct.sctp_inq, %struct.sctp_bind_addr }
%struct.sctp_inq = type { %struct.list_head, ptr, %struct.work_struct }
%struct.sctp_bind_addr = type { i16, %struct.list_head }
%struct.sctp_association = type { %struct.sctp_ep_common, %struct.list_head, i32, ptr, %struct.sctp_cookie, %struct.anon.238, i32, i32, i64, i32, i32, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i8, i8, i32, i32, i32, i32, [12 x i32], [12 x %struct.timer_list], ptr, ptr, i32, i32, i32, i32, i32, i32, i8, i16, i32, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, %struct.sctp_stream, %struct.sctp_outq, %struct.sctp_ulpq, i32, i32, i32, ptr, %struct.list_head, %struct.list_head, i32, i32, ptr, ptr, %struct.list_head, ptr, ptr, i16, i16, i8, i8, i8, i32, i32, [2 x i32], ptr, %struct.sctp_priv_assoc_stats, i32, i16, [3 x i64], [3 x i64], i32, i32, %struct.callback_head }
%struct.sctp_cookie = type { i32, i32, i32, i32, i64, i16, i16, i32, %union.sctp_addr, i16, i8, i8, i32, [36 x i8], [10 x i8], [20 x i8], i32, [0 x %struct.sctp_init_chunk] }
%union.sctp_addr = type { %struct.sockaddr_in6 }
%struct.sctp_init_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_inithdr }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_inithdr = type { i32, i32, i16, i16, i32, [0 x i8] }
%struct.anon.238 = type { %struct.list_head, i32, i16, i16, ptr, %union.sctp_addr, ptr, ptr, ptr, ptr, %struct.sctp_tsnmap, i16, i16, i32, i32, %struct.sctp_inithdr_host, ptr, i32, i32, ptr, ptr, ptr }
%struct.sctp_tsnmap = type { ptr, i32, i32, i32, i16, i16, i16, [16 x i32] }
%struct.sctp_inithdr_host = type { i32, i32, i16, i16, i32 }
%struct.sctp_stream = type { %struct.anon.239, %struct.anon.244, i16, i16, ptr, %union.anon.246, ptr }
%struct.anon.239 = type { %struct.__genradix, [0 x %struct.sctp_stream_out] }
%struct.__genradix = type { ptr }
%struct.sctp_stream_out = type { %union.anon.240, i32, ptr, i8 }
%union.anon.240 = type { i32 }
%struct.anon.244 = type { %struct.__genradix, [0 x %struct.sctp_stream_in] }
%struct.sctp_stream_in = type { %union.anon.245, i32, i32, i32, i8, i8 }
%union.anon.245 = type { i32 }
%union.anon.246 = type { %struct.anon.248 }
%struct.anon.248 = type { %struct.list_head, ptr }
%struct.sctp_outq = type { ptr, %struct.list_head, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i32, i8, i8 }
%struct.sctp_ulpq = type { i8, ptr, %struct.sk_buff_head, %struct.sk_buff_head, %struct.sk_buff_head }
%struct.sctp_priv_assoc_stats = type { %struct.__kernel_sockaddr_storage, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.__kernel_sockaddr_storage = type { %union.anon.234 }
%union.anon.234 = type { ptr, [124 x i8] }
%struct.request_sock = type { %struct.sock_common, ptr, i16, i8, i8, i32, %struct.timer_list, ptr, ptr, ptr, i32, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%struct.lsm_ibpkey_audit = type { i64, i16 }
%struct.lsm_ibendport_audit = type { ptr, i8 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.10, ptr, %struct.rw_semaphore, ptr, ptr, %union.anon.11, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i32, %union.anon.12, %union.anon.16, ptr }
%union.anon.10 = type { %struct.rb_node }
%union.anon.11 = type { i64 }
%union.anon.12 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i32, %union.anon.13, ptr, ptr, ptr }
%union.anon.13 = type { i32 }
%union.anon.16 = type { %union.key_payload }
%union.key_payload = type { [4 x ptr] }
%struct.perf_event = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.rb_node, i64, %struct.list_head, %struct.hlist_node, %struct.list_head, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.local64_t, %struct.atomic64_t, i64, i64, i64, %struct.perf_event_attr, i16, i16, i16, %struct.hw_perf_event, ptr, %struct.atomic_t, %struct.atomic64_t, %struct.atomic64_t, %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.list_head, ptr, %struct.mutex, %struct.atomic_t, ptr, %struct.list_head, i32, i32, %struct.wait_queue_head, ptr, i32, i32, i32, i32, %struct.irq_work, %struct.atomic_t, %struct.perf_addr_filters_head, ptr, i32, ptr, ptr, %struct.callback_head, ptr, i64, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, %struct.ftrace_ops, ptr, ptr, %struct.list_head }
%struct.local64_t = type { %struct.atomic64_t }
%struct.perf_event_attr = type { i32, i32, i64, %union.anon.147, i64, i64, i64, %union.anon.148, i32, %union.anon.149, %union.anon.150, i64, i64, i32, i32, i64, i32, i16, i16, i32, i32, i64 }
%union.anon.147 = type { i64 }
%union.anon.148 = type { i32 }
%union.anon.149 = type { i64 }
%union.anon.150 = type { i64 }
%struct.hw_perf_event = type { %union.anon.151, ptr, ptr, i32, i32, %struct.local64_t, i64, %union.anon.158, i64, i64, i64, i64 }
%union.anon.151 = type { %struct.anon.152 }
%struct.anon.152 = type { i64, i64, i32, i32, i32, i32, i32, i32, %struct.hw_perf_event_extra, %struct.hw_perf_event_extra }
%struct.hw_perf_event_extra = type { i64, i32, i32, i32 }
%union.anon.158 = type { %struct.anon.159 }
%struct.anon.159 = type { i64, %struct.local64_t }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.perf_addr_filters_head = type { %struct.list_head, %struct.raw_spinlock, i32 }
%struct.ftrace_ops = type { ptr, ptr, i32, ptr, ptr, %struct.ftrace_ops_hash, ptr, %struct.ftrace_ops_hash, i32, i32, %struct.list_head }
%struct.ftrace_ops_hash = type { ptr, ptr, %struct.mutex }
%struct.fs_context = type { ptr, %struct.mutex, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.p_log, ptr, ptr, ptr, i32, i32, i32, i32, i24 }
%struct.p_log = type { ptr, ptr }
%struct.fs_parse_result = type { i8, %union.anon.199 }
%union.anon.199 = type { i64 }
%struct.fs_parameter = type { ptr, i8, %union.anon.1, i32, i32 }
%union.anon.1 = type { ptr }

@__setup_str_enforcing_setup = internal constant [11 x i8] c"enforcing=\00", section ".init.rodata", align 1
@__setup_enforcing_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_enforcing_setup, ptr @enforcing_setup, i32 0 }, section ".init.setup", align 4
@selinux_enabled_boot = dso_local global i32 1, section ".init.data", align 4
@__setup_str_selinux_enabled_setup = internal constant [9 x i8] c"selinux=\00", section ".init.rodata", align 1
@__setup_selinux_enabled_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_selinux_enabled_setup, ptr @selinux_enabled_setup, i32 0 }, section ".init.setup", align 4
@__setup_str_checkreqprot_setup = internal constant [14 x i8] c"checkreqprot=\00", section ".init.rodata", align 1
@__setup_checkreqprot_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_checkreqprot_setup, ptr @checkreqprot_setup, i32 0 }, section ".init.setup", align 4
@selinux_blob_sizes = dso_local global { %struct.lsm_blob_sizes, [36 x i8] } { %struct.lsm_blob_sizes { i32 24, i32 16, i32 68, i32 160, i32 8, i32 4, i32 0 }, [36 x i8] zeroinitializer }, align 32
@selinux_complete_init.__UNIQUE_ID_ddebug682 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 7, i8 47, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"selinux\00", [24 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"selinux_complete_init\00", [42 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"security/selinux/hooks.c\00", [39 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"SELinux:  Completing initialization.\0A\00", [58 x i8] zeroinitializer }, align 32
@selinux_complete_init.__UNIQUE_ID_ddebug683 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.4, i8 7, i8 47, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.4 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"SELinux:  Setting up existing superblocks.\0A\00", [52 x i8] zeroinitializer }, align 32
@__lsm_selinux = internal global %struct.lsm_info { ptr @.str, i32 0, i32 3, ptr @selinux_enabled_boot, ptr @selinux_init, ptr @selinux_blob_sizes }, section ".lsm_info.init", align 4
@__initcall__kmod_selinux__685_7448_selinux_nf_ip_init6 = internal global ptr @selinux_nf_ip_init, section ".initcall6.init", align 4
@selinux_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.6, ptr @.str.2, i32 7482, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016SELinux:  Disabled at runtime.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"selinux_disable\00", [16 x i8] zeroinitializer }, align 32
@selinux_disable._entry_ptr = internal global ptr @selinux_disable._entry, section ".printk_index", align 4
@selinux_hooks = internal global { [205 x %struct.security_hook_list], [1052 x i8] } { [205 x %struct.security_hook_list] [%struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr @security_hook_heads, %union.security_list_options { ptr @selinux_binder_set_context_mgr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 4), %union.security_list_options { ptr @selinux_binder_transaction }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 8), %union.security_list_options { ptr @selinux_binder_transfer_binder }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 12), %union.security_list_options { ptr @selinux_binder_transfer_file }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 16), %union.security_list_options { ptr @selinux_ptrace_access_check }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 20), %union.security_list_options { ptr @selinux_ptrace_traceme }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 24), %union.security_list_options { ptr @selinux_capget }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 28), %union.security_list_options { ptr @selinux_capset }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 32), %union.security_list_options { ptr @selinux_capable }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 36), %union.security_list_options { ptr @selinux_quotactl }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 40), %union.security_list_options { ptr @selinux_quota_on }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 44), %union.security_list_options { ptr @selinux_syslog }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 52), %union.security_list_options { ptr @selinux_vm_enough_memory }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 588), %union.security_list_options { ptr @selinux_netlink_send }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 56), %union.security_list_options { ptr @selinux_bprm_creds_for_exec }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 68), %union.security_list_options { ptr @selinux_bprm_committing_creds }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 72), %union.security_list_options { ptr @selinux_bprm_committed_creds }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 96), %union.security_list_options { ptr @selinux_free_mnt_opts }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 104), %union.security_list_options { ptr @selinux_sb_mnt_opts_compat }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 108), %union.security_list_options { ptr @selinux_sb_remount }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 112), %union.security_list_options { ptr @selinux_sb_kern_mount }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 116), %union.security_list_options { ptr @selinux_sb_show_options }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 120), %union.security_list_options { ptr @selinux_sb_statfs }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 124), %union.security_list_options { ptr @selinux_mount }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 128), %union.security_list_options { ptr @selinux_umount }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 136), %union.security_list_options { ptr @selinux_set_mnt_opts }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 140), %union.security_list_options { ptr @selinux_sb_clone_mnt_opts }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 144), %union.security_list_options { ptr @selinux_move_mount }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 148), %union.security_list_options { ptr @selinux_dentry_init_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 152), %union.security_list_options { ptr @selinux_dentry_create_files_as }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 208), %union.security_list_options { ptr @selinux_inode_free_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 212), %union.security_list_options { ptr @selinux_inode_init_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 216), %union.security_list_options { ptr @selinux_inode_init_security_anon }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 220), %union.security_list_options { ptr @selinux_inode_create }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 224), %union.security_list_options { ptr @selinux_inode_link }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 228), %union.security_list_options { ptr @selinux_inode_unlink }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 232), %union.security_list_options { ptr @selinux_inode_symlink }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 236), %union.security_list_options { ptr @selinux_inode_mkdir }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 240), %union.security_list_options { ptr @selinux_inode_rmdir }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 244), %union.security_list_options { ptr @selinux_inode_mknod }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 248), %union.security_list_options { ptr @selinux_inode_rename }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 252), %union.security_list_options { ptr @selinux_inode_readlink }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 256), %union.security_list_options { ptr @selinux_inode_follow_link }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 260), %union.security_list_options { ptr @selinux_inode_permission }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 264), %union.security_list_options { ptr @selinux_inode_setattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 268), %union.security_list_options { ptr @selinux_inode_getattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 272), %union.security_list_options { ptr @selinux_inode_setxattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 276), %union.security_list_options { ptr @selinux_inode_post_setxattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 280), %union.security_list_options { ptr @selinux_inode_getxattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 284), %union.security_list_options { ptr @selinux_inode_listxattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 288), %union.security_list_options { ptr @selinux_inode_removexattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 300), %union.security_list_options { ptr @selinux_inode_getsecurity }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 304), %union.security_list_options { ptr @selinux_inode_setsecurity }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 308), %union.security_list_options { ptr @selinux_inode_listsecurity }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 312), %union.security_list_options { ptr @selinux_inode_getsecid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 316), %union.security_list_options { ptr @selinux_inode_copy_up }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 320), %union.security_list_options { ptr @selinux_inode_copy_up_xattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 200), %union.security_list_options { ptr @selinux_path_notify }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 324), %union.security_list_options { ptr @selinux_kernfs_init_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 328), %union.security_list_options { ptr @selinux_file_permission }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 332), %union.security_list_options { ptr @selinux_file_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 340), %union.security_list_options { ptr @selinux_file_ioctl }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 348), %union.security_list_options { ptr @selinux_mmap_file }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 344), %union.security_list_options { ptr @selinux_mmap_addr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 352), %union.security_list_options { ptr @selinux_file_mprotect }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 356), %union.security_list_options { ptr @selinux_file_lock }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 360), %union.security_list_options { ptr @selinux_file_fcntl }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 364), %union.security_list_options { ptr @selinux_file_set_fowner }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 368), %union.security_list_options { ptr @selinux_file_send_sigiotask }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 372), %union.security_list_options { ptr @selinux_file_receive }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 376), %union.security_list_options { ptr @selinux_file_open }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 380), %union.security_list_options { ptr @selinux_task_alloc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 396), %union.security_list_options { ptr @selinux_cred_prepare }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 400), %union.security_list_options { ptr @selinux_cred_transfer }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 404), %union.security_list_options { ptr @selinux_cred_getsecid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 408), %union.security_list_options { ptr @selinux_kernel_act_as }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 412), %union.security_list_options { ptr @selinux_kernel_create_files_as }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 416), %union.security_list_options { ptr @selinux_kernel_module_request }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 420), %union.security_list_options { ptr @selinux_kernel_load_data }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 428), %union.security_list_options { ptr @selinux_kernel_read_file }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 444), %union.security_list_options { ptr @selinux_task_setpgid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 448), %union.security_list_options { ptr @selinux_task_getpgid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 452), %union.security_list_options { ptr @selinux_task_getsid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 456), %union.security_list_options { ptr @selinux_current_getsecid_subj }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 460), %union.security_list_options { ptr @selinux_task_getsecid_obj }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 464), %union.security_list_options { ptr @selinux_task_setnice }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 468), %union.security_list_options { ptr @selinux_task_setioprio }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 472), %union.security_list_options { ptr @selinux_task_getioprio }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 476), %union.security_list_options { ptr @selinux_task_prlimit }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 480), %union.security_list_options { ptr @selinux_task_setrlimit }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 484), %union.security_list_options { ptr @selinux_task_setscheduler }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 488), %union.security_list_options { ptr @selinux_task_getscheduler }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 492), %union.security_list_options { ptr @selinux_task_movememory }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 496), %union.security_list_options { ptr @selinux_task_kill }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 504), %union.security_list_options { ptr @selinux_task_to_inode }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 508), %union.security_list_options { ptr @selinux_ipc_permission }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 512), %union.security_list_options { ptr @selinux_ipc_getsecid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 532), %union.security_list_options { ptr @selinux_msg_queue_associate }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 536), %union.security_list_options { ptr @selinux_msg_queue_msgctl }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 540), %union.security_list_options { ptr @selinux_msg_queue_msgsnd }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 544), %union.security_list_options { ptr @selinux_msg_queue_msgrcv }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 556), %union.security_list_options { ptr @selinux_shm_associate }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 560), %union.security_list_options { ptr @selinux_shm_shmctl }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 564), %union.security_list_options { ptr @selinux_shm_shmat }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 576), %union.security_list_options { ptr @selinux_sem_associate }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 580), %union.security_list_options { ptr @selinux_sem_semctl }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 584), %union.security_list_options { ptr @selinux_sem_semop }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 592), %union.security_list_options { ptr @selinux_d_instantiate }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 596), %union.security_list_options { ptr @selinux_getprocattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 600), %union.security_list_options { ptr @selinux_setprocattr }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 604), %union.security_list_options { ptr @selinux_ismaclabel }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 612), %union.security_list_options { ptr @selinux_secctx_to_secid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 616), %union.security_list_options { ptr @selinux_release_secctx }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 620), %union.security_list_options { ptr @selinux_inode_invalidate_secctx }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 624), %union.security_list_options { ptr @selinux_inode_notifysecctx }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 628), %union.security_list_options { ptr @selinux_inode_setsecctx }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 644), %union.security_list_options { ptr @selinux_socket_unix_stream_connect }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 648), %union.security_list_options { ptr @selinux_socket_unix_may_send }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 652), %union.security_list_options { ptr @selinux_socket_create }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 656), %union.security_list_options { ptr @selinux_socket_post_create }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 660), %union.security_list_options { ptr @selinux_socket_socketpair }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 664), %union.security_list_options { ptr @selinux_socket_bind }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 668), %union.security_list_options { ptr @selinux_socket_connect }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 672), %union.security_list_options { ptr @selinux_socket_listen }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 676), %union.security_list_options { ptr @selinux_socket_accept }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 680), %union.security_list_options { ptr @selinux_socket_sendmsg }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 684), %union.security_list_options { ptr @selinux_socket_recvmsg }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 688), %union.security_list_options { ptr @selinux_socket_getsockname }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 692), %union.security_list_options { ptr @selinux_socket_getpeername }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 696), %union.security_list_options { ptr @selinux_socket_getsockopt }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 700), %union.security_list_options { ptr @selinux_socket_setsockopt }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 704), %union.security_list_options { ptr @selinux_socket_shutdown }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 708), %union.security_list_options { ptr @selinux_socket_sock_rcv_skb }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 712), %union.security_list_options { ptr @selinux_socket_getpeersec_stream }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 716), %union.security_list_options { ptr @selinux_socket_getpeersec_dgram }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 724), %union.security_list_options { ptr @selinux_sk_free_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 728), %union.security_list_options { ptr @selinux_sk_clone_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 732), %union.security_list_options { ptr @selinux_sk_getsecid }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 736), %union.security_list_options { ptr @selinux_sock_graft }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 792), %union.security_list_options { ptr @selinux_sctp_assoc_request }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 800), %union.security_list_options { ptr @selinux_sctp_sk_clone }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 796), %union.security_list_options { ptr @selinux_sctp_bind_connect }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 740), %union.security_list_options { ptr @selinux_inet_conn_request }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 744), %union.security_list_options { ptr @selinux_inet_csk_clone }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 748), %union.security_list_options { ptr @selinux_inet_conn_established }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 752), %union.security_list_options { ptr @selinux_secmark_relabel_packet }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 756), %union.security_list_options { ptr @selinux_secmark_refcount_inc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 760), %union.security_list_options { ptr @selinux_secmark_refcount_dec }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 764), %union.security_list_options { ptr @selinux_req_classify_flow }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 772), %union.security_list_options { ptr @selinux_tun_dev_free_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 776), %union.security_list_options { ptr @selinux_tun_dev_create }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 780), %union.security_list_options { ptr @selinux_tun_dev_attach_queue }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 784), %union.security_list_options { ptr @selinux_tun_dev_attach }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 788), %union.security_list_options { ptr @selinux_tun_dev_open }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 804), %union.security_list_options { ptr @selinux_ib_pkey_access }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 808), %union.security_list_options { ptr @selinux_ib_endport_manage_subnet }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 816), %union.security_list_options { ptr @selinux_ib_free_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 828), %union.security_list_options { ptr @selinux_xfrm_policy_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 832), %union.security_list_options { ptr @selinux_xfrm_policy_delete }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 844), %union.security_list_options { ptr @selinux_xfrm_state_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 848), %union.security_list_options { ptr @selinux_xfrm_state_delete }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 852), %union.security_list_options { ptr @selinux_xfrm_policy_lookup }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 856), %union.security_list_options { ptr @selinux_xfrm_state_pol_flow_match }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 860), %union.security_list_options { ptr @selinux_xfrm_decode_session }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 868), %union.security_list_options { ptr @selinux_key_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 872), %union.security_list_options { ptr @selinux_key_permission }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 876), %union.security_list_options { ptr @selinux_key_getsecurity }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 640), %union.security_list_options { ptr @selinux_watch_key }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 884), %union.security_list_options { ptr @selinux_audit_rule_known }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 888), %union.security_list_options { ptr @selinux_audit_rule_match }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 892), %union.security_list_options { ptr @selinux_audit_rule_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 896), %union.security_list_options { ptr @selinux_bpf }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 900), %union.security_list_options { ptr @selinux_bpf_map }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 904), %union.security_list_options { ptr @selinux_bpf_prog }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 912), %union.security_list_options { ptr @selinux_bpf_map_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 920), %union.security_list_options { ptr @selinux_bpf_prog_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 928), %union.security_list_options { ptr @selinux_perf_event_open }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 936), %union.security_list_options { ptr @selinux_perf_event_free }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 940), %union.security_list_options { ptr @selinux_perf_event_read }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 944), %union.security_list_options { ptr @selinux_perf_event_write }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 948), %union.security_list_options { ptr @selinux_uring_override_creds }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 952), %union.security_list_options { ptr @selinux_uring_sqpoll }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 76), %union.security_list_options { ptr @selinux_fs_context_dup }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 80), %union.security_list_options { ptr @selinux_fs_context_parse_param }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 100), %union.security_list_options { ptr @selinux_sb_eat_lsm_opts }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 824), %union.security_list_options { ptr @selinux_xfrm_policy_clone }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 516), %union.security_list_options { ptr @selinux_msg_msg_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 524), %union.security_list_options { ptr @selinux_msg_queue_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 548), %union.security_list_options { ptr @selinux_shm_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 84), %union.security_list_options { ptr @selinux_sb_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 204), %union.security_list_options { ptr @selinux_inode_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 568), %union.security_list_options { ptr @selinux_sem_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 608), %union.security_list_options { ptr @selinux_secid_to_secctx }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 632), %union.security_list_options { ptr @selinux_inode_getsecctx }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 720), %union.security_list_options { ptr @selinux_sk_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 768), %union.security_list_options { ptr @selinux_tun_dev_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 812), %union.security_list_options { ptr @selinux_ib_alloc_security }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 820), %union.security_list_options { ptr @selinux_xfrm_policy_alloc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 836), %union.security_list_options { ptr @selinux_xfrm_state_alloc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 840), %union.security_list_options { ptr @selinux_xfrm_state_alloc_acquire }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 864), %union.security_list_options { ptr @selinux_key_alloc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 880), %union.security_list_options { ptr @selinux_audit_rule_init }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 908), %union.security_list_options { ptr @selinux_bpf_map_alloc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 916), %union.security_list_options { ptr @selinux_bpf_prog_alloc }, ptr null }, %struct.security_hook_list { %struct.hlist_node zeroinitializer, ptr getelementptr (i8, ptr @security_hook_heads, i64 932), %union.security_list_options { ptr @selinux_perf_event_alloc }, ptr null }], [1052 x i8] zeroinitializer }, align 32
@selinux_state = dso_local global { %struct.selinux_state, [48 x i8] } zeroinitializer, align 32
@selinux_enforcing_boot = internal unnamed_addr global i32 0, section ".init.data", align 4
@selinux_checkreqprot_boot = internal global { i32, [28 x i8] } zeroinitializer, align 32
@checkreqprot_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str.2, i32 149, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [125 x i8], [35 x i8] } { [125 x i8] c"\014SELinux: checkreqprot set to 1 via kernel parameter.  This is deprecated and will be rejected in a future kernel release.\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"checkreqprot_setup\00", [45 x i8] zeroinitializer }, align 32
@checkreqprot_setup._entry_ptr = internal global ptr @checkreqprot_setup._entry, section ".printk_index", align 4
@selinux_set_mnt_opts._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.2, i32 642, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [87 x i8], [41 x i8] } { [87 x i8] c"\014SELinux: Unable to set superblock options before the security server is initialized\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"selinux_set_mnt_opts\00", [43 x i8] zeroinitializer }, align 32
@selinux_set_mnt_opts._entry_ptr = internal global ptr @selinux_set_mnt_opts._entry, section ".printk_index", align 4
@.str.11 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"proc\00", [27 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"debugfs\00", [24 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"tracefs\00", [24 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"binder\00", [25 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bpf\00", [28 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"pstore\00", [25 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"securityfs\00", [21 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"sysfs\00", [26 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cgroup\00", [25 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cgroup2\00", [24 x i8] zeroinitializer }, align 32
@selinux_set_mnt_opts._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.10, ptr @.str.2, i32 749, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014%s: security_fs_use(%s) returned %d\0A\00", [57 x i8] zeroinitializer }, align 32
@selinux_set_mnt_opts._entry_ptr.23 = internal global ptr @selinux_set_mnt_opts._entry.21, section ".printk_index", align 4
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@.str.24 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"tmpfs\00", [26 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ramfs\00", [26 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"devpts\00", [25 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"overlay\00", [24 x i8] zeroinitializer }, align 32
@selinux_set_mnt_opts._entry.28 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.10, ptr @.str.2, i32 836, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014SELinux: defcontext option is invalid for this filesystem type\0A\00", [62 x i8] zeroinitializer }, align 32
@selinux_set_mnt_opts._entry_ptr.30 = internal global ptr @selinux_set_mnt_opts._entry.28, section ".printk_index", align 4
@selinux_set_mnt_opts._entry.31 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.10, ptr @.str.2, i32 859, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [95 x i8], [33 x i8] } { [95 x i8] c"\014SELinux: mount invalid.  Same superblock, different security settings for (dev %s, type %s)\0A\00", [33 x i8] zeroinitializer }, align 32
@selinux_set_mnt_opts._entry_ptr.33 = internal global ptr @selinux_set_mnt_opts._entry.31, section ".printk_index", align 4
@parse_sid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str.2, i32 609, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\014SELinux: security_context_str_to_sid(%s) failed for (dev %s, type %s) errno=%d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"parse_sid\00", [22 x i8] zeroinitializer }, align 32
@parse_sid._entry_ptr = internal global ptr @parse_sid._entry, section ".printk_index", align 4
@sb_check_xattr_support._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.37, ptr @.str.2, i32 497, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\014SELinux: (dev %s, type %s) has no xattr support\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sb_check_xattr_support\00", [41 x i8] zeroinitializer }, align 32
@sb_check_xattr_support._entry_ptr = internal global ptr @sb_check_xattr_support._entry, section ".printk_index", align 4
@.str.38 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"security.selinux\00", [47 x i8] zeroinitializer }, align 32
@sb_check_xattr_support._entry.39 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.37, ptr @.str.2, i32 505, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014SELinux: (dev %s, type %s) has no security xattr handler\0A\00", [36 x i8] zeroinitializer }, align 32
@sb_check_xattr_support._entry_ptr.41 = internal global ptr @sb_check_xattr_support._entry.39, section ".printk_index", align 4
@sb_check_xattr_support._entry.42 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.37, ptr @.str.2, i32 509, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014SELinux: (dev %s, type %s) getxattr errno %d\0A\00", [48 x i8] zeroinitializer }, align 32
@sb_check_xattr_support._entry_ptr.44 = internal global ptr @sb_check_xattr_support._entry.42, section ".printk_index", align 4
@.str.45 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"/\00", [30 x i8] zeroinitializer }, align 32
@sb_check_xattr_support._entry.46 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.37, ptr @.str.2, i32 523, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014SELinux: (dev %s, type %s) falling back to genfs\0A\00", [44 x i8] zeroinitializer }, align 32
@sb_check_xattr_support._entry_ptr.48 = internal global ptr @sb_check_xattr_support._entry.46, section ".printk_index", align 4
@.str.49 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rootfs\00", [25 x i8] zeroinitializer }, align 32
@inode_doinit_use_xattr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.51, ptr @.str.2, i32 1360, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014SELinux: %s:  getxattr returned %d for dev=%s ino=%ld\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"inode_doinit_use_xattr\00", [41 x i8] zeroinitializer }, align 32
@inode_doinit_use_xattr._entry_ptr = internal global ptr @inode_doinit_use_xattr._entry, section ".printk_index", align 4
@inode_doinit_use_xattr._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.52, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@inode_doinit_use_xattr._entry.53 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.51, ptr @.str.2, i32 1375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [154 x i8], [38 x i8] } { [154 x i8] c"\015SELinux: inode=%lu on dev=%s was found to have an invalid context=%s.  This indicates you may need to relabel the inode or the filesystem in question.\0A\00", [38 x i8] zeroinitializer }, align 32
@inode_doinit_use_xattr._entry_ptr.55 = internal global ptr @inode_doinit_use_xattr._entry.53, section ".printk_index", align 4
@inode_doinit_use_xattr._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.51, ptr @.str.2, i32 1378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\014SELinux: %s:  context_to_sid(%s) returned %d for dev=%s ino=%ld\0A\00", [61 x i8] zeroinitializer }, align 32
@inode_doinit_use_xattr._entry_ptr.58 = internal global ptr @inode_doinit_use_xattr._entry.56, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@selinux_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.60, ptr @.str.2, i32 7309, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016SELinux:  Initializing.\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"selinux_init\00", [19 x i8] zeroinitializer }, align 32
@selinux_init._entry_ptr = internal global ptr @selinux_init._entry, section ".printk_index", align 4
@selinux_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.61 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&selinux_state.status_lock\00", [37 x i8] zeroinitializer }, align 32
@selinux_init.__key.62 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.63 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"&selinux_state.policy_mutex\00", [36 x i8] zeroinitializer }, align 32
@default_noexec = internal unnamed_addr global i32 0, section ".data..ro_after_init", align 4
@.str.64 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"SELinux: Unable to register AVC netcache callback\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"SELinux: Unable to register AVC LSM notifier callback\0A\00", [41 x i8] zeroinitializer }, align 32
@selinux_init.__UNIQUE_ID_ddebug680 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.60, ptr @.str.2, ptr @.str.66, i8 7, i8 43, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.66 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"SELinux:  Starting in enforcing mode\0A\00", [58 x i8] zeroinitializer }, align 32
@selinux_init.__UNIQUE_ID_ddebug681 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.60, ptr @.str.2, ptr @.str.67, i8 7, i8 43, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"SELinux:  Starting in permissive mode\0A\00", [57 x i8] zeroinitializer }, align 32
@selinux_fs_parameters = internal constant { [6 x %struct.fs_parameter_spec], [32 x i8] } { [6 x %struct.fs_parameter_spec] [%struct.fs_parameter_spec { ptr @.str.68, ptr @fs_param_is_string, i8 0, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.69, ptr @fs_param_is_string, i8 1, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.70, ptr @fs_param_is_string, i8 2, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.71, ptr @fs_param_is_string, i8 3, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.72, ptr null, i8 4, i16 0, ptr null }, %struct.fs_parameter_spec zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"context\00", [24 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"defcontext\00", [21 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"fscontext\00", [22 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"rootcontext\00", [20 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"seclabel\00", [23 x i8] zeroinitializer }, align 32
@selinux_nf_ip_init.__UNIQUE_ID_ddebug684 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.73, ptr @.str.2, ptr @.str.74, i8 7, i8 68, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.73 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"selinux_nf_ip_init\00", [45 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"SELinux:  Registering netfilter hooks\0A\00", [57 x i8] zeroinitializer }, align 32
@selinux_net_ops = internal global { %struct.pernet_operations, [32 x i8] } { %struct.pernet_operations { %struct.list_head zeroinitializer, ptr @selinux_nf_register, ptr null, ptr @selinux_nf_unregister, ptr null, ptr null, i32 0 }, [32 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"SELinux: register_pernet_subsys: error %d\0A\00", [53 x i8] zeroinitializer }, align 32
@selinux_nf_ops = internal constant { [6 x %struct.nf_hook_ops], [48 x i8] } { [6 x %struct.nf_hook_ops] [%struct.nf_hook_ops { ptr @selinux_ip_postroute, ptr null, ptr null, i8 2, i8 0, i32 4, i32 225 }, %struct.nf_hook_ops { ptr @selinux_ip_forward, ptr null, ptr null, i8 2, i8 0, i32 2, i32 -225 }, %struct.nf_hook_ops { ptr @selinux_ip_output, ptr null, ptr null, i8 2, i8 0, i32 3, i32 -225 }, %struct.nf_hook_ops { ptr @selinux_ip_postroute, ptr null, ptr null, i8 10, i8 0, i32 4, i32 225 }, %struct.nf_hook_ops { ptr @selinux_ip_forward, ptr null, ptr null, i8 10, i8 0, i32 2, i32 -225 }, %struct.nf_hook_ops { ptr @selinux_ip_output, ptr null, ptr null, i8 10, i8 0, i32 3, i32 -225 }], [48 x i8] zeroinitializer }, align 32
@selinux_secmark_refcount = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@selinux_xfrm_refcount = external dso_local global %struct.atomic_t, align 4
@.str.76 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/skbuff.h\00", [41 x i8] zeroinitializer }, align 32
@selinux_skb_peerlbl_sid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.77, ptr @.str.78, ptr @.str.2, i32 4548, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"\014SELinux: failure in selinux_skb_peerlbl_sid(), unable to determine packet's peer label\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"selinux_skb_peerlbl_sid\00", [40 x i8] zeroinitializer }, align 32
@selinux_skb_peerlbl_sid._entry_ptr = internal global ptr @selinux_skb_peerlbl_sid._entry, section ".printk_index", align 4
@selinux_parse_skb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.80, ptr @.str.2, i32 4505, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\014SELinux: failure in selinux_parse_skb(), unable to parse packet\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"selinux_parse_skb\00", [46 x i8] zeroinitializer }, align 32
@selinux_parse_skb._entry_ptr = internal global ptr @selinux_parse_skb._entry, section ".printk_index", align 4
@selinux_nf_ip_exit.__UNIQUE_ID_ddebug686 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.81, ptr @.str.2, ptr @.str.82, i8 7, i8 71, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.81 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"selinux_nf_ip_exit\00", [45 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"SELinux:  Unregistering netfilter hooks\0A\00", [55 x i8] zeroinitializer }, align 32
@security_hook_heads = external dso_local global %struct.security_hook_heads, align 4
@bpf_map_fops = external dso_local constant %struct.file_operations, align 4
@bpf_prog_fops = external dso_local constant %struct.file_operations, align 4
@task_sid_obj.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.83 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.84 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.86 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@cred_has_capability._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.88, ptr @.str.2, i32 1614, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013SELinux:  out of range capability %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cred_has_capability\00", [44 x i8] zeroinitializer }, align 32
@cred_has_capability._entry_ptr = internal global ptr @cred_has_capability._entry, section ".printk_index", align 4
@selinux_netlink_send._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.52, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.selinux_netlink_send = private unnamed_addr constant [21 x i8] c"selinux_netlink_send\00", align 1
@selinux_netlink_send._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @__func__.selinux_netlink_send, ptr @.str.2, i32 5951, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [95 x i8], [33 x i8] } { [95 x i8] c"\014SELinux: unrecognized netlink message: protocol=%hu nlmsg_type=%hu sclass=%s pid=%d comm=%s\0A\00", [33 x i8] zeroinitializer }, align 32
@selinux_netlink_send._entry_ptr = internal global ptr @selinux_netlink_send._entry, section ".printk_index", align 4
@secclass_map = external dso_local local_unnamed_addr global [0 x %struct.security_class_mapping], align 4
@ptrace_parent.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.90 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/ptrace.h\00", [41 x i8] zeroinitializer }, align 32
@init_task = external dso_local local_unnamed_addr global %struct.task_struct, align 128
@selinux_null = external dso_local global %struct.path, align 4
@tasklist_lock = external dso_local global %struct.rwlock_t, align 4
@selinux_sb_remount._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.91, ptr @.str.92, ptr @.str.2, i32 2750, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\014SELinux: unable to change security options during remount (dev %s, type=%s)\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"selinux_sb_remount\00", [45 x i8] zeroinitializer }, align 32
@selinux_sb_remount._entry_ptr = internal global ptr @selinux_sb_remount._entry, section ".printk_index", align 4
@.str.93 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\22\0A\\\00", [28 x i8] zeroinitializer }, align 32
@selinux_cmp_sb_context._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.94, ptr @.str.2, i32 889, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"selinux_cmp_sb_context\00", [41 x i8] zeroinitializer }, align 32
@selinux_cmp_sb_context._entry_ptr = internal global ptr @selinux_cmp_sb_context._entry, section ".printk_index", align 4
@selinux_inode_init_security_anon._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.96, ptr @.str.2, i32 3008, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013SELinux:  context_inode is not initialized\00", [51 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"selinux_inode_init_security_anon\00", [63 x i8] zeroinitializer }, align 32
@selinux_inode_init_security_anon._entry_ptr = internal global ptr @selinux_inode_init_security_anon._entry, section ".printk_index", align 4
@may_link._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.98, ptr @.str.2, i32 1859, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014SELinux: %s:  unrecognized kind %d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"may_link\00", [23 x i8] zeroinitializer }, align 32
@may_link._entry_ptr = internal global ptr @may_link._entry, section ".printk_index", align 4
@.str.99 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"op=setxattr invalid_context=\00", [35 x i8] zeroinitializer }, align 32
@selinux_inode_post_setxattr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str.2, i32 3338, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013SELinux:  unable to map context to SIDfor (%s, %lu), rc=%d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"selinux_inode_post_setxattr\00", [36 x i8] zeroinitializer }, align 32
@selinux_inode_post_setxattr._entry_ptr = internal global ptr @selinux_inode_post_setxattr._entry, section ".printk_index", align 4
@selinux_getprocattr.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.103 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"current\00", [24 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"prev\00", [27 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"exec\00", [27 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fscreate\00", [23 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"keycreate\00", [22 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sockcreate\00", [21 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"op=fscreate invalid_context=\00", [35 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.110 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@selinux_add_opt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.113, ptr @.str.114, ptr @.str.2, i32 1024, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014SELinux:  duplicate or incompatible mount options\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"selinux_add_opt\00", [16 x i8] zeroinitializer }, align 32
@selinux_add_opt._entry_ptr = internal global ptr @selinux_add_opt._entry, section ".printk_index", align 4
@tokens = internal constant { [5 x %struct.anon.259], [48 x i8] } { [5 x %struct.anon.259] [%struct.anon.259 { ptr @.str.68, i32 7, i32 0, i8 1 }, %struct.anon.259 { ptr @.str.70, i32 9, i32 2, i8 1 }, %struct.anon.259 { ptr @.str.69, i32 10, i32 1, i8 1 }, %struct.anon.259 { ptr @.str.71, i32 11, i32 3, i8 1 }, %struct.anon.259 { ptr @.str.72, i32 8, i32 4, i8 0 }], [48 x i8] zeroinitializer }, align 32
@selinux_sb_alloc_security.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.115 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&sbsec->lock\00", [19 x i8] zeroinitializer }, align 32
@selinux_sb_alloc_security.__key.116 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.117 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&sbsec->isec_lock\00", [46 x i8] zeroinitializer }, align 32
@selinux_inode_alloc_security.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.118 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&isec->lock\00", [20 x i8] zeroinitializer }, align 32
@switch.table.inode_doinit_with_dentry = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.inode_mode_to_security_class = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_syslog = internal constant { [8 x i32], [32 x i8] } { [8 x i32] [i32 2, i32 4, i32 4, i32 8, i32 8, i32 8, i32 4, i32 2], [32 x i8] zeroinitializer }, align 32
@switch.table.selinux_dentry_init_security = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_dentry_create_files_as = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_inode_init_security = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_inode_init_security.119 = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_inode_mknod = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_inode_post_setxattr = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_inode_setsecurity = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_task_to_inode = internal constant { [12 x i16], [40 x i8] } { [12 x i16] [i16 14, i16 11, i16 7, i16 8, i16 7, i16 12, i16 7, i16 7, i16 7, i16 10, i16 7, i16 13], [40 x i8] zeroinitializer }, align 32
@switch.table.selinux_perf_event_open = internal constant { [4 x i32], [16 x i8] } { [4 x i32] [i32 1, i32 2, i32 4, i32 8], [16 x i8] zeroinitializer }, align 32
@switch.table.may_link = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 4096, i32 2048, i32 536870912], [20 x i8] zeroinitializer }, align 32
@switch.table.socket_type_to_security_class = internal constant { [5 x i16], [22 x i8] } { [5 x i16] [i16 24, i16 25, i16 25, i16 24, i16 24], [22 x i8] zeroinitializer }, align 32
@switch.table.socket_type_to_security_class.120 = internal constant { [22 x i16], [52 x i8] } { [22 x i16] [i16 31, i16 21, i16 21, i16 21, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 21, i16 41, i16 43, i16 44, i16 21, i16 45, i16 21, i16 46, i16 47], [52 x i8] zeroinitializer }, align 32
@switch.table.socket_type_to_security_class.121 = internal constant { [43 x i16], [42 x i8] } { [43 x i16] [i16 62, i16 63, i16 15, i16 64, i16 15, i16 65, i16 66, i16 15, i16 67, i16 68, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 69, i16 70, i16 15, i16 71, i16 72, i16 15, i16 73, i16 15, i16 15, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 92, i16 93], [42 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 16, i64 1, i64 7]
@__sancov_gen_cov_switch_values.122 = internal global [7 x i64] [i64 5, i64 16, i64 1, i64 2, i64 3, i64 4, i64 7]
@__sancov_gen_cov_switch_values.123 = internal global [7 x i64] [i64 5, i64 16, i64 1, i64 2, i64 3, i64 6, i64 7]
@__sancov_gen_cov_switch_values.124 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 10]
@__sancov_gen_cov_switch_values.125 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.126 = internal global [6 x i64] [i64 4, i64 8, i64 6, i64 17, i64 33, i64 132]
@__sancov_gen_cov_switch_values.127 = internal global [6 x i64] [i64 4, i64 8, i64 6, i64 17, i64 33, i64 132]
@__sancov_gen_cov_switch_values.128 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.129 = internal global [17 x i64] [i64 15, i64 32, i64 22529, i64 22530, i64 22531, i64 22532, i64 22533, i64 22536, i64 22537, i64 8388609, i64 8388610, i64 8388611, i64 8388612, i64 8388613, i64 8388614, i64 8388615, i64 8388616]
@__sancov_gen_cov_switch_values.130 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967274, i64 4294967294]
@__sancov_gen_cov_switch_values.131 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.132 = internal global [13 x i64] [i64 11, i64 32, i64 1, i64 2, i64 19271, i64 19273, i64 21531, i64 21537, i64 21586, i64 1074030082, i64 1074034178, i64 2147771905, i64 2147776001]
@__sancov_gen_cov_switch_values.133 = internal global [18 x i64] [i64 16, i64 32, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 17, i64 36, i64 37, i64 38]
@__sancov_gen_cov_switch_values.134 = internal global [5 x i64] [i64 3, i64 32, i64 9, i64 17, i64 19]
@__sancov_gen_cov_switch_values.135 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 9, i64 17, i64 19]
@__sancov_gen_cov_switch_values.136 = internal global [9 x i64] [i64 7, i64 32, i64 0, i64 1, i64 2, i64 3, i64 11, i64 12, i64 13]
@__sancov_gen_cov_switch_values.137 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 3, i64 11, i64 12, i64 13, i64 14, i64 15]
@__sancov_gen_cov_switch_values.138 = internal global [16 x i64] [i64 14, i64 32, i64 0, i64 1, i64 2, i64 3, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20]
@__sancov_gen_cov_switch_values.139 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 10]
@__sancov_gen_cov_switch_values.140 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.141 = internal global [5 x i64] [i64 3, i64 16, i64 0, i64 2, i64 10]
@__sancov_gen_cov_switch_values.142 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.143 = internal global [5 x i64] [i64 3, i64 16, i64 16, i64 24, i64 60]
@__sancov_gen_cov_switch_values.144 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.145 = internal global [5 x i64] [i64 3, i64 16, i64 1, i64 2, i64 10]
@__sancov_gen_cov_switch_values.146 = internal global [5 x i64] [i64 3, i64 16, i64 0, i64 2, i64 10]
@__sancov_gen_cov_switch_values.147 = internal global [9 x i64] [i64 7, i64 32, i64 5, i64 6, i64 100, i64 110, i64 126, i64 49153, i64 49156]
@__sancov_gen_cov_switch_values.148 = internal global [12 x i64] [i64 10, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10]
@__sancov_gen_cov_switch_values.149 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 5]
@__sancov_gen_cov_switch_values.150 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 34]
@__sancov_gen_cov_switch_values.151 = internal global [9 x i64] [i64 7, i64 32, i64 1, i64 2, i64 5, i64 10, i64 15, i64 16, i64 17]
@__sancov_gen_cov_switch_values.152 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 5, i64 6]
@__sancov_gen_cov_switch_values.153 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 6, i64 262]
@__sancov_gen_cov_switch_values.154 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 17]
@__sancov_gen_cov_switch_values.155 = internal global [5 x i64] [i64 3, i64 16, i64 16, i64 51, i64 60]
@__sancov_gen_cov_switch_values.156 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.157 = internal global [5 x i64] [i64 3, i64 16, i64 16, i64 51, i64 60]
@__sancov_gen_cov_switch_values.158 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@___asan_gen_.159 = private unnamed_addr constant [19 x i8] c"selinux_blob_sizes\00", align 1
@___asan_gen_.161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6917, i32 23 }
@___asan_gen_.173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7356, i32 2 }
@___asan_gen_.176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7359, i32 2 }
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7482, i32 2 }
@___asan_gen_.186 = private unnamed_addr constant [14 x i8] c"selinux_hooks\00", align 1
@___asan_gen_.188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7031, i32 34 }
@___asan_gen_.189 = private unnamed_addr constant [14 x i8] c"selinux_state\00", align 1
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 107, i32 22 }
@___asan_gen_.192 = private unnamed_addr constant [26 x i8] c"selinux_checkreqprot_boot\00", align 1
@___asan_gen_.194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 139, i32 21 }
@___asan_gen_.203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 149, i32 4 }
@___asan_gen_.212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 641, i32 3 }
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 725, i32 31 }
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 728, i32 32 }
@___asan_gen_.221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 729, i32 32 }
@___asan_gen_.224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 730, i32 32 }
@___asan_gen_.227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 731, i32 32 }
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 732, i32 32 }
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 733, i32 32 }
@___asan_gen_.236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 736, i32 32 }
@___asan_gen_.239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 737, i32 32 }
@___asan_gen_.242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 738, i32 32 }
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 748, i32 4 }
@___asan_gen_.251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 760, i32 31 }
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 761, i32 31 }
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 762, i32 31 }
@___asan_gen_.260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 763, i32 31 }
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 835, i32 4 }
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 857, i32 2 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 607, i32 3 }
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 496, i32 3 }
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 501, i32 40 }
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 504, i32 4 }
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 508, i32 4 }
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 517, i32 60 }
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 522, i32 2 }
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 446, i32 29 }
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1359, i32 4 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1374, i32 4 }
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1377, i32 4 }
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7309, i32 2 }
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7315, i32 2 }
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7316, i32 2 }
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7334, i32 9 }
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7337, i32 9 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7340, i32 3 }
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7342, i32 3 }
@___asan_gen_.378 = private unnamed_addr constant [22 x i8] c"selinux_fs_parameters\00", align 1
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2843, i32 39 }
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2844, i32 2 }
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2845, i32 2 }
@___asan_gen_.389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2846, i32 2 }
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2847, i32 2 }
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2848, i32 2 }
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7440, i32 2 }
@___asan_gen_.402 = private unnamed_addr constant [16 x i8] c"selinux_net_ops\00", align 1
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7428, i32 33 }
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7444, i32 9 }
@___asan_gen_.408 = private unnamed_addr constant [15 x i8] c"selinux_nf_ops\00", align 1
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7375, i32 33 }
@___asan_gen_.411 = private unnamed_addr constant [25 x i8] c"selinux_secmark_refcount\00", align 1
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 110, i32 17 }
@___asan_gen_.415 = private unnamed_addr constant [26 x i8] c"../include/linux/skbuff.h\00", align 1
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.415, i32 1011, i32 2 }
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 4546, i32 3 }
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 4503, i32 2 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 7453, i32 2 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 240, i32 17 }
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.451, i32 695, i32 2 }
@___asan_gen_.451 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.451, i32 723, i32 2 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1614, i32 3 }
@___asan_gen_.462 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 5946, i32 4 }
@___asan_gen_.472 = private unnamed_addr constant [26 x i8] c"../include/linux/ptrace.h\00", align 1
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.472, i32 127, i32 10 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2748, i32 2 }
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1042, i32 26 }
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 887, i32 2 }
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 3008, i32 4 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1858, i32 3 }
@___asan_gen_.512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 3279, i32 25 }
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 3336, i32 3 }
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6371, i32 20 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6373, i32 25 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6375, i32 25 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6377, i32 25 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6379, i32 25 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6381, i32 25 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 6462, i32 26 }
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.547, i32 230, i32 6 }
@___asan_gen_.547 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.547, i32 214, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 174, i32 2 }
@___asan_gen_.552 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 1024, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant [7 x i8] c"tokens\00", align 1
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 372, i32 3 }
@___asan_gen_.569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2562, i32 2 }
@___asan_gen_.575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2564, i32 2 }
@___asan_gen_.576 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.579 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.580 = private constant [28 x i8] c"../security/selinux/hooks.c\00", align 1
@___asan_gen_.581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.580, i32 2877, i32 2 }
@___asan_gen_.582 = private unnamed_addr constant [38 x i8] c"switch.table.inode_doinit_with_dentry\00", align 1
@___asan_gen_.583 = private unnamed_addr constant [42 x i8] c"switch.table.inode_mode_to_security_class\00", align 1
@___asan_gen_.584 = private unnamed_addr constant [28 x i8] c"switch.table.selinux_syslog\00", align 1
@___asan_gen_.585 = private unnamed_addr constant [42 x i8] c"switch.table.selinux_dentry_init_security\00", align 1
@___asan_gen_.586 = private unnamed_addr constant [44 x i8] c"switch.table.selinux_dentry_create_files_as\00", align 1
@___asan_gen_.587 = private unnamed_addr constant [41 x i8] c"switch.table.selinux_inode_init_security\00", align 1
@___asan_gen_.588 = private unnamed_addr constant [45 x i8] c"switch.table.selinux_inode_init_security.119\00", align 1
@___asan_gen_.589 = private unnamed_addr constant [33 x i8] c"switch.table.selinux_inode_mknod\00", align 1
@___asan_gen_.590 = private unnamed_addr constant [41 x i8] c"switch.table.selinux_inode_post_setxattr\00", align 1
@___asan_gen_.591 = private unnamed_addr constant [39 x i8] c"switch.table.selinux_inode_setsecurity\00", align 1
@___asan_gen_.592 = private unnamed_addr constant [35 x i8] c"switch.table.selinux_task_to_inode\00", align 1
@___asan_gen_.593 = private unnamed_addr constant [37 x i8] c"switch.table.selinux_perf_event_open\00", align 1
@___asan_gen_.594 = private unnamed_addr constant [22 x i8] c"switch.table.may_link\00", align 1
@___asan_gen_.595 = private unnamed_addr constant [43 x i8] c"switch.table.socket_type_to_security_class\00", align 1
@___asan_gen_.596 = private unnamed_addr constant [47 x i8] c"switch.table.socket_type_to_security_class.120\00", align 1
@___asan_gen_.597 = private unnamed_addr constant [47 x i8] c"switch.table.socket_type_to_security_class.121\00", align 1
@llvm.compiler.used = appending global [187 x ptr] [ptr @__initcall__kmod_selinux__685_7448_selinux_nf_ip_init6, ptr @__lsm_selinux, ptr @__setup_checkreqprot_setup, ptr @__setup_enforcing_setup, ptr @__setup_selinux_enabled_setup, ptr @checkreqprot_setup._entry, ptr @checkreqprot_setup._entry_ptr, ptr @cred_has_capability._entry, ptr @cred_has_capability._entry_ptr, ptr @inode_doinit_use_xattr._entry, ptr @inode_doinit_use_xattr._entry.53, ptr @inode_doinit_use_xattr._entry.56, ptr @inode_doinit_use_xattr._entry_ptr, ptr @inode_doinit_use_xattr._entry_ptr.55, ptr @inode_doinit_use_xattr._entry_ptr.58, ptr @may_link._entry, ptr @may_link._entry_ptr, ptr @parse_sid._entry, ptr @parse_sid._entry_ptr, ptr @sb_check_xattr_support._entry, ptr @sb_check_xattr_support._entry.39, ptr @sb_check_xattr_support._entry.42, ptr @sb_check_xattr_support._entry.46, ptr @sb_check_xattr_support._entry_ptr, ptr @sb_check_xattr_support._entry_ptr.41, ptr @sb_check_xattr_support._entry_ptr.44, ptr @sb_check_xattr_support._entry_ptr.48, ptr @selinux_add_opt._entry, ptr @selinux_add_opt._entry_ptr, ptr @selinux_cmp_sb_context._entry, ptr @selinux_cmp_sb_context._entry_ptr, ptr @selinux_disable._entry, ptr @selinux_disable._entry_ptr, ptr @selinux_init._entry, ptr @selinux_init._entry_ptr, ptr @selinux_inode_init_security_anon._entry, ptr @selinux_inode_init_security_anon._entry_ptr, ptr @selinux_inode_post_setxattr._entry, ptr @selinux_inode_post_setxattr._entry_ptr, ptr @selinux_netlink_send._entry, ptr @selinux_netlink_send._entry_ptr, ptr @selinux_parse_skb._entry, ptr @selinux_parse_skb._entry_ptr, ptr @selinux_sb_remount._entry, ptr @selinux_sb_remount._entry_ptr, ptr @selinux_set_mnt_opts._entry, ptr @selinux_set_mnt_opts._entry.21, ptr @selinux_set_mnt_opts._entry.28, ptr @selinux_set_mnt_opts._entry.31, ptr @selinux_set_mnt_opts._entry_ptr, ptr @selinux_set_mnt_opts._entry_ptr.23, ptr @selinux_set_mnt_opts._entry_ptr.30, ptr @selinux_set_mnt_opts._entry_ptr.33, ptr @selinux_skb_peerlbl_sid._entry, ptr @selinux_skb_peerlbl_sid._entry_ptr, ptr @selinux_blob_sizes, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @selinux_hooks, ptr @selinux_state, ptr @selinux_checkreqprot_boot, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.22, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.29, ptr @.str.32, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.40, ptr @.str.43, ptr @.str.45, ptr @.str.47, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @inode_doinit_use_xattr._rs, ptr @.str.52, ptr @.str.54, ptr @.str.57, ptr @.str.59, ptr @.str.60, ptr @selinux_init.__key, ptr @.str.61, ptr @selinux_init.__key.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @selinux_fs_parameters, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @selinux_net_ops, ptr @.str.75, ptr @selinux_nf_ops, ptr @selinux_secmark_refcount, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @selinux_netlink_send._rs, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @tokens, ptr @selinux_sb_alloc_security.__key, ptr @.str.115, ptr @selinux_sb_alloc_security.__key.116, ptr @.str.117, ptr @selinux_inode_alloc_security.__key, ptr @.str.118, ptr @switch.table.inode_doinit_with_dentry, ptr @switch.table.inode_mode_to_security_class, ptr @switch.table.selinux_syslog, ptr @switch.table.selinux_dentry_init_security, ptr @switch.table.selinux_dentry_create_files_as, ptr @switch.table.selinux_inode_init_security, ptr @switch.table.selinux_inode_init_security.119, ptr @switch.table.selinux_inode_mknod, ptr @switch.table.selinux_inode_post_setxattr, ptr @switch.table.selinux_inode_setsecurity, ptr @switch.table.selinux_task_to_inode, ptr @switch.table.selinux_perf_event_open, ptr @switch.table.may_link, ptr @switch.table.socket_type_to_security_class, ptr @switch.table.socket_type_to_security_class.120, ptr @switch.table.socket_type_to_security_class.121], section "llvm.metadata"
@0 = internal global [157 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_blob_sizes to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_hooks to i32), i32 4100, i32 5152, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_state to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_checkreqprot_boot to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @checkreqprot_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 125, i32 160, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_set_mnt_opts._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_set_mnt_opts._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_set_mnt_opts._entry.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_set_mnt_opts._entry.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_sid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sb_check_xattr_support._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sb_check_xattr_support._entry.39 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sb_check_xattr_support._entry.42 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sb_check_xattr_support._entry.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inode_doinit_use_xattr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inode_doinit_use_xattr._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inode_doinit_use_xattr._entry.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 154, i32 192, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inode_doinit_use_xattr._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_init.__key.62 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_fs_parameters to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_net_ops to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_nf_ops to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_secmark_refcount to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_skb_peerlbl_sid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_parse_skb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cred_has_capability._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_netlink_send._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_netlink_send._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_sb_remount._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_cmp_sb_context._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_inode_init_security_anon._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @may_link._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_inode_post_setxattr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_add_opt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tokens to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_sb_alloc_security.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_sb_alloc_security.__key.116 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @selinux_inode_alloc_security.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.inode_doinit_with_dentry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.inode_mode_to_security_class to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_syslog to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_dentry_init_security to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_dentry_create_files_as to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_inode_init_security to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_inode_init_security.119 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_inode_mknod to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_inode_post_setxattr to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_inode_setsecurity to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_task_to_inode to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.selinux_perf_event_open to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.may_link to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.socket_type_to_security_class to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.socket_type_to_security_class.120 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.socket_type_to_security_class.121 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @enforcing_setup(ptr noundef %str) #0 section ".init.text" align 64 {
entry:
  %enforcing = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %enforcing) #23
  %0 = ptrtoint ptr %enforcing to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %enforcing, align 4, !annotation !376
  %call.i = call i32 @_kstrtoul(ptr noundef %str, i32 noundef 0, ptr noundef nonnull %enforcing) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = ptrtoint ptr %enforcing to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %enforcing, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp ne i32 %2, 0
  %cond = zext i1 %tobool1.not to i32
  store i32 %cond, ptr @selinux_enforcing_boot, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %enforcing) #23
  ret i32 1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_enabled_setup(ptr noundef %str) #0 section ".init.text" align 64 {
entry:
  %enabled = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %enabled) #23
  %0 = ptrtoint ptr %enabled to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %enabled, align 4, !annotation !376
  %call.i = call i32 @_kstrtoul(ptr noundef %str, i32 noundef 0, ptr noundef nonnull %enabled) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = ptrtoint ptr %enabled to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp ne i32 %2, 0
  %cond = zext i1 %tobool1.not to i32
  store i32 %cond, ptr @selinux_enabled_boot, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %enabled) #23
  ret i32 1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @checkreqprot_setup(ptr noundef %str) #0 section ".init.text" align 64 {
entry:
  %checkreqprot = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %checkreqprot) #23
  %0 = ptrtoint ptr %checkreqprot to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %checkreqprot, align 4, !annotation !376
  %call.i = call i32 @_kstrtoul(ptr noundef %str, i32 noundef 0, ptr noundef nonnull %checkreqprot) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then:                                          ; preds = %entry
  %1 = ptrtoint ptr %checkreqprot to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %checkreqprot, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp ne i32 %2, 0
  %cond = zext i1 %tobool1.not to i32
  store i32 %cond, ptr @selinux_checkreqprot_boot, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool2.not = icmp eq i32 %2, 0
  br i1 %tobool2.not, label %if.then.if.end5_crit_edge, label %do.end

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %call4 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #26
  br label %if.end5

if.end5:                                          ; preds = %do.end, %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %checkreqprot) #23
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @selinux_complete_init() local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @selinux_complete_init.__UNIQUE_ID_ddebug682, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@selinux_complete_init, %if.then)) #23
          to label %do.body3 [label %if.then], !srcloc !377

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @selinux_complete_init.__UNIQUE_ID_ddebug682, ptr noundef nonnull @.str.3) #23
  br label %do.body3

do.body3:                                         ; preds = %if.then, %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @selinux_complete_init.__UNIQUE_ID_ddebug683, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@selinux_complete_init, %if.then15)) #23
          to label %do.end17 [label %if.then15], !srcloc !377

if.then15:                                        ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @selinux_complete_init.__UNIQUE_ID_ddebug683, ptr noundef nonnull @.str.4) #23
  br label %do.end17

do.end17:                                         ; preds = %if.then15, %do.body3
  tail call void @iterate_supers(ptr noundef nonnull @delayed_superblock_init, ptr noundef null) #23
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @iterate_supers(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @delayed_superblock_init(ptr noundef %sb, ptr nocapture noundef readnone %unused) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @selinux_set_mnt_opts(ptr noundef %sb, ptr noundef null, i32 noundef 0, ptr noundef null)
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.59) #26
  %0 = call ptr @memset(ptr @selinux_state, i32 0, i32 208)
  %1 = load i32, ptr @selinux_enforcing_boot, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool = icmp ne i32 %1, 0
  %frombool.i = zext i1 %tobool to i8
  store volatile i8 %frombool.i, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 1), align 1
  %2 = load i32, ptr @selinux_checkreqprot_boot, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1 = icmp ne i32 %2, 0
  %frombool.i53 = zext i1 %tobool1 to i8
  store volatile i8 %frombool.i53, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 2), align 2
  tail call void @selinux_avc_init(ptr noundef getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 7)) #23
  tail call void @__mutex_init(ptr noundef getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 6), ptr noundef nonnull @.str.61, ptr noundef nonnull @selinux_init.__key) #23
  tail call void @__mutex_init(ptr noundef getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 9), ptr noundef nonnull @.str.63, ptr noundef nonnull @selinux_init.__key.62) #23
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %real_cred.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 98
  %7 = ptrtoint ptr %real_cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %real_cred.i, align 4
  %security.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %sid.i, align 4
  %13 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %add.ptr.i.i, align 4
  %14 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task, align 8
  %personality = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 62
  %18 = ptrtoint ptr %personality to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %personality, align 32
  %20 = lshr i32 %19, 22
  %.lobit = and i32 %20, 1
  %21 = xor i32 %.lobit, 1
  store i32 %21, ptr @default_noexec, align 4
  tail call void @avc_init() #26
  tail call void @avtab_cache_init() #23
  tail call void @ebitmap_cache_init() #23
  tail call void @hashtab_cache_init() #23
  tail call void @security_add_hooks(ptr noundef nonnull @selinux_hooks, i32 noundef 205, ptr noundef nonnull @.str) #23
  %call13 = tail call i32 @avc_add_callback(ptr noundef nonnull @selinux_netcache_avc_callback, i32 noundef 8) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.64) #27
  unreachable

if.end:                                           ; preds = %entry
  %call15 = tail call i32 @avc_add_callback(ptr noundef nonnull @selinux_lsm_notifier_avc_callback, i32 noundef 8) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.65) #27
  unreachable

if.end18:                                         ; preds = %if.end
  %22 = load i32, ptr @selinux_enforcing_boot, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool19.not = icmp eq i32 %22, 0
  br i1 %tobool19.not, label %do.body33, label %do.body21

do.body21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @selinux_init.__UNIQUE_ID_ddebug680, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@selinux_init, %if.then30)) #23
          to label %if.end48 [label %if.then30], !srcloc !377

if.then30:                                        ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @selinux_init.__UNIQUE_ID_ddebug680, ptr noundef nonnull @.str.66) #23
  br label %if.end48

do.body33:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @selinux_init.__UNIQUE_ID_ddebug681, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@selinux_init, %if.then45)) #23
          to label %if.end48 [label %if.then45], !srcloc !377

if.then45:                                        ; preds = %do.body33
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @selinux_init.__UNIQUE_ID_ddebug681, ptr noundef nonnull @.str.67) #23
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %do.body33, %if.then30, %do.body21
  %call49 = tail call zeroext i1 @fs_validate_description(ptr noundef nonnull @.str, ptr noundef nonnull @selinux_fs_parameters) #23
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_nf_ip_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @selinux_enabled_boot, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @selinux_nf_ip_init.__UNIQUE_ID_ddebug684, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@selinux_nf_ip_init, %if.then4)) #23
          to label %do.end [label %if.then4], !srcloc !377

if.then4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @selinux_nf_ip_init.__UNIQUE_ID_ddebug684, ptr noundef nonnull @.str.74) #23
  br label %do.end

do.end:                                           ; preds = %if.then4, %do.body
  %call6 = tail call i32 @register_pernet_subsys(ptr noundef nonnull @selinux_net_ops) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %do.end.cleanup_crit_edge, label %if.then8

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then8:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.75, i32 noundef %call6) #27
  unreachable

cleanup:                                          ; preds = %do.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @selinux_disable(ptr noundef %state) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %initialized.i = getelementptr inbounds %struct.selinux_state, ptr %state, i32 0, i32 3
  %0 = ptrtoint ptr %initialized.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %initialized.i, align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load volatile i8, ptr %state, align 4, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.i7.not = icmp eq i8 %3, 0
  br i1 %tobool.i7.not, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.end3:                                          ; preds = %if.end
  %4 = ptrtoint ptr %state to i32
  call void @__asan_store1_noabort(i32 %4)
  store volatile i8 1, ptr %state, align 4
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5) #26
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @selinux_nf_ip_exit.__UNIQUE_ID_ddebug686, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@selinux_disable, %if.then.i)) #23
          to label %selinux_nf_ip_exit.exit [label %if.then.i], !srcloc !377

if.then.i:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @selinux_nf_ip_exit.__UNIQUE_ID_ddebug686, ptr noundef nonnull @.str.82) #23
  br label %selinux_nf_ip_exit.exit

selinux_nf_ip_exit.exit:                          ; preds = %if.then.i, %if.end3
  tail call void @unregister_pernet_subsys(ptr noundef nonnull @selinux_net_ops) #23
  br label %for.body.i

for.body.i:                                       ; preds = %hlist_del_rcu.exit.i.for.body.i_crit_edge, %selinux_nf_ip_exit.exit
  %i.01.i = phi i32 [ 0, %selinux_nf_ip_exit.exit ], [ %inc.i, %hlist_del_rcu.exit.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.security_hook_list, ptr @selinux_hooks, i32 %i.01.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %arrayidx.i, i32 0, i32 1
  %7 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pprev2.i.i.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %6, ptr %8, align 4
  %tobool.not.i.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i.i.i, label %for.body.i.hlist_del_rcu.exit.i_crit_edge, label %do.body13.i.i.i

for.body.i.hlist_del_rcu.exit.i_crit_edge:        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %hlist_del_rcu.exit.i

do.body13.i.i.i:                                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %6, i32 0, i32 1
  %10 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %pprev14.i.i.i, align 4
  br label %hlist_del_rcu.exit.i

hlist_del_rcu.exit.i:                             ; preds = %do.body13.i.i.i, %for.body.i.hlist_del_rcu.exit.i_crit_edge
  %11 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  %inc.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 205
  br i1 %exitcond.not.i, label %security_delete_hooks.exit, label %hlist_del_rcu.exit.i.for.body.i_crit_edge

hlist_del_rcu.exit.i.for.body.i_crit_edge:        ; preds = %hlist_del_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

security_delete_hooks.exit:                       ; preds = %hlist_del_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @avc_disable() #23
  tail call void @exit_sel_fs() #23
  br label %return

return:                                           ; preds = %security_delete_hooks.exit, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %security_delete_hooks.exit ], [ -22, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @avc_disable() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @exit_sel_fs() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtoul(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_set_mnt_opts(ptr noundef %sb, ptr noundef readonly %mnt_opts, i32 noundef %kern_flags, ptr noundef %set_kern_flags) #1 align 64 {
entry:
  %fscontext_sid = alloca i32, align 4
  %context_sid = alloca i32, align 4
  %rootcontext_sid = alloca i32, align 4
  %defcontext_sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %6 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_security.i, align 4
  %8 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %9 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s_root, align 64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fscontext_sid) #23
  %11 = ptrtoint ptr %fscontext_sid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %fscontext_sid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context_sid) #23
  %12 = ptrtoint ptr %context_sid to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %context_sid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rootcontext_sid) #23
  %13 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %rootcontext_sid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %defcontext_sid) #23
  %14 = ptrtoint ptr %defcontext_sid to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %defcontext_sid, align 4
  %lock = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 5
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #23
  %15 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i.not = icmp eq i8 %15, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq ptr %mnt_opts, null
  br i1 %tobool.not, label %if.then.out_crit_edge, label %if.end

if.then.out_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9) #26
  br label %out

if.end10:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kern_flags)
  %tobool11.not = icmp ne i32 %kern_flags, 0
  %tobool12.not = icmp eq ptr %set_kern_flags, null
  %or.cond = and i1 %tobool11.not, %tobool12.not
  br i1 %or.cond, label %if.end10.out_crit_edge, label %if.end14

if.end10.out_crit_edge:                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end14:                                         ; preds = %if.end10
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %flags, align 2
  %18 = and i16 %17, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool15.not = icmp eq i16 %18, 0
  br i1 %tobool15.not, label %if.end14.if.end22_crit_edge, label %land.lhs.true16

if.end14.if.end22_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

land.lhs.true16:                                  ; preds = %if.end14
  %s_type = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %19 = ptrtoint ptr %s_type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %s_type, align 32
  %fs_flags = getelementptr inbounds %struct.file_system_type, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %fs_flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %fs_flags, align 4
  %and17 = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp ne i32 %and17, 0
  %tobool20.not = icmp eq ptr %mnt_opts, null
  %or.cond411 = and i1 %tobool20.not, %tobool18.not
  br i1 %or.cond411, label %land.lhs.true16.out_crit_edge, label %land.lhs.true16.if.end22_crit_edge

land.lhs.true16.if.end22_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

land.lhs.true16.out_crit_edge:                    ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end22:                                         ; preds = %land.lhs.true16.if.end22_crit_edge, %if.end14.if.end22_crit_edge
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %10, i32 0, i32 5
  %23 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %24, i32 0, i32 10
  %25 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %if.end22.backing_inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

if.end22.backing_inode_security_novalidate.exit_crit_edge: ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  %27 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %26, i32 %27
  br label %backing_inode_security_novalidate.exit

backing_inode_security_novalidate.exit:           ; preds = %if.end.i.i, %if.end22.backing_inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %if.end22.backing_inode_security_novalidate.exit_crit_edge ]
  %tobool24.not = icmp eq ptr %mnt_opts, null
  br i1 %tobool24.not, label %backing_inode_security_novalidate.exit.if.end90_crit_edge, label %if.then25

backing_inode_security_novalidate.exit.if.end90_crit_edge: ; preds = %backing_inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end90

if.then25:                                        ; preds = %backing_inode_security_novalidate.exit
  %28 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_opts, align 4
  %tobool26.not = icmp eq ptr %29, null
  br i1 %tobool26.not, label %if.then25.if.end40_crit_edge, label %if.then27

if.then25.if.end40_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

if.then27:                                        ; preds = %if.then25
  %call.i = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %29, ptr noundef nonnull %fscontext_sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end32, label %parse_sid.exit

parse_sid.exit:                                   ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %30 = ptrtoint ptr %s_type.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %s_type.i, align 32
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %call1.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %29, ptr noundef %s_id.i, ptr noundef %33, i32 noundef %call.i) #26
  br label %out

if.end32:                                         ; preds = %if.then27
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %flags, align 2
  %conv.i = zext i16 %35 to i32
  %and4.i = and i32 %conv.i, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool.not.i412 = icmp eq i32 %and4.i, 0
  br i1 %tobool.not.i412, label %if.end12.i, label %if.then.i

if.then.i:                                        ; preds = %if.end32
  %36 = ptrtoint ptr %fscontext_sid to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %fscontext_sid, align 4
  %38 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr.i, align 4
  %and8.i = and i32 %conv.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %39, i32 %37)
  %cmp.not.i = icmp ne i32 %39, %37
  %or.cond.i.not = or i1 %tobool9.not.i, %cmp.not.i
  %40 = and i16 %35, 258
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %40)
  %.not = icmp eq i16 %40, 2
  %or.cond510 = select i1 %or.cond.i.not, i1 true, i1 %.not
  br i1 %or.cond510, label %if.then.i.out_double_mount_crit_edge, label %if.then.i.if.end36_crit_edge

if.then.i.if.end36_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.then.i.out_double_mount_crit_edge:             ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end12.i:                                       ; preds = %if.end32
  %.old = and i16 %35, 258
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %.old)
  %.not.old = icmp eq i16 %.old, 2
  br i1 %.not.old, label %if.end12.i.out_double_mount_crit_edge, label %if.end12.i.if.end36_crit_edge

if.end12.i.if.end36_crit_edge:                    ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.end12.i.out_double_mount_crit_edge:            ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end36:                                         ; preds = %if.end12.i.if.end36_crit_edge, %if.then.i.if.end36_crit_edge
  %41 = or i16 %35, 2
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %flags, align 2
  br label %if.end40

if.end40:                                         ; preds = %if.end36, %if.then25.if.end40_crit_edge
  %context = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 1
  %43 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %context, align 4
  %tobool41.not = icmp eq ptr %44, null
  br i1 %tobool41.not, label %if.end40.if.end56_crit_edge, label %if.then42

if.end40.if.end56_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56

if.then42:                                        ; preds = %if.end40
  %call.i413 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %44, ptr noundef nonnull %context_sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i413)
  %tobool.not.i414 = icmp eq i32 %call.i413, 0
  br i1 %tobool.not.i414, label %if.end47, label %parse_sid.exit419

parse_sid.exit419:                                ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i415 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i416 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %45 = ptrtoint ptr %s_type.i416 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %s_type.i416, align 32
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %46, align 4
  %call1.i417 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %44, ptr noundef %s_id.i415, ptr noundef %48, i32 noundef %call.i413) #26
  br label %out

if.end47:                                         ; preds = %if.then42
  %49 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %flags, align 2
  %conv.i421 = zext i16 %50 to i32
  %and4.i423 = and i32 %conv.i421, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i423)
  %tobool.not.i424 = icmp eq i32 %and4.i423, 0
  br i1 %tobool.not.i424, label %if.end12.i431, label %if.then.i429

if.then.i429:                                     ; preds = %if.end47
  %51 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %context_sid, align 4
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %53 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %mntpoint_sid, align 4
  %and8.i425 = and i32 %conv.i421, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i425)
  %tobool9.not.i426 = icmp eq i32 %and8.i425, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %52)
  %cmp.not.i427 = icmp ne i32 %54, %52
  %or.cond.i428.not = or i1 %tobool9.not.i426, %cmp.not.i427
  %55 = and i16 %50, 257
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %55)
  %.not507 = icmp eq i16 %55, 1
  %or.cond512 = select i1 %or.cond.i428.not, i1 true, i1 %.not507
  br i1 %or.cond512, label %if.then.i429.out_double_mount_crit_edge, label %if.then.i429.if.end51_crit_edge

if.then.i429.if.end51_crit_edge:                  ; preds = %if.then.i429
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51

if.then.i429.out_double_mount_crit_edge:          ; preds = %if.then.i429
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end12.i431:                                    ; preds = %if.end47
  %.old511 = and i16 %50, 257
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %.old511)
  %.not507.old = icmp eq i16 %.old511, 1
  br i1 %.not507.old, label %if.end12.i431.out_double_mount_crit_edge, label %if.end12.i431.if.end51_crit_edge

if.end12.i431.if.end51_crit_edge:                 ; preds = %if.end12.i431
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51

if.end12.i431.out_double_mount_crit_edge:         ; preds = %if.end12.i431
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end51:                                         ; preds = %if.end12.i431.if.end51_crit_edge, %if.then.i429.if.end51_crit_edge
  %56 = or i16 %50, 1
  %57 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 %56, ptr %flags, align 2
  br label %if.end56

if.end56:                                         ; preds = %if.end51, %if.end40.if.end56_crit_edge
  %rootcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 2
  %58 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %rootcontext, align 4
  %tobool57.not = icmp eq ptr %59, null
  br i1 %tobool57.not, label %if.end56.if.end73_crit_edge, label %if.then58

if.end56.if.end73_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.then58:                                        ; preds = %if.end56
  %call.i438 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %59, ptr noundef nonnull %rootcontext_sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i438)
  %tobool.not.i439 = icmp eq i32 %call.i438, 0
  br i1 %tobool.not.i439, label %if.end63, label %parse_sid.exit444

parse_sid.exit444:                                ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i440 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i441 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %60 = ptrtoint ptr %s_type.i441 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %s_type.i441, align 32
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %61, align 4
  %call1.i442 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %59, ptr noundef %s_id.i440, ptr noundef %63, i32 noundef %call.i438) #26
  br label %out

if.end63:                                         ; preds = %if.then58
  %64 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %flags, align 2
  %conv.i446 = zext i16 %65 to i32
  %and4.i448 = and i32 %conv.i446, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i448)
  %tobool.not.i449 = icmp eq i32 %and4.i448, 0
  br i1 %tobool.not.i449, label %if.end12.i456, label %if.then.i454

if.then.i454:                                     ; preds = %if.end63
  %66 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %rootcontext_sid, align 4
  %sid64 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %68 = ptrtoint ptr %sid64 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %sid64, align 4
  %and8.i450 = and i32 %conv.i446, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i450)
  %tobool9.not.i451 = icmp eq i32 %and8.i450, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %69, i32 %67)
  %cmp.not.i452 = icmp ne i32 %69, %67
  %or.cond.i453.not = or i1 %tobool9.not.i451, %cmp.not.i452
  %70 = and i16 %65, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %70)
  %.not508 = icmp eq i16 %70, 4
  %or.cond514 = select i1 %or.cond.i453.not, i1 true, i1 %.not508
  br i1 %or.cond514, label %if.then.i454.out_double_mount_crit_edge, label %if.then.i454.if.end68_crit_edge

if.then.i454.if.end68_crit_edge:                  ; preds = %if.then.i454
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end68

if.then.i454.out_double_mount_crit_edge:          ; preds = %if.then.i454
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end12.i456:                                    ; preds = %if.end63
  %.old513 = and i16 %65, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %.old513)
  %.not508.old = icmp eq i16 %.old513, 4
  br i1 %.not508.old, label %if.end12.i456.out_double_mount_crit_edge, label %if.end12.i456.if.end68_crit_edge

if.end12.i456.if.end68_crit_edge:                 ; preds = %if.end12.i456
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end68

if.end12.i456.out_double_mount_crit_edge:         ; preds = %if.end12.i456
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end68:                                         ; preds = %if.end12.i456.if.end68_crit_edge, %if.then.i454.if.end68_crit_edge
  %71 = or i16 %65, 4
  %72 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %72)
  store i16 %71, ptr %flags, align 2
  br label %if.end73

if.end73:                                         ; preds = %if.end68, %if.end56.if.end73_crit_edge
  %defcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 3
  %73 = ptrtoint ptr %defcontext to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %defcontext, align 4
  %tobool74.not = icmp eq ptr %74, null
  br i1 %tobool74.not, label %if.end73.if.end90_crit_edge, label %if.then75

if.end73.if.end90_crit_edge:                      ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end90

if.then75:                                        ; preds = %if.end73
  %call77 = call fastcc i32 @parse_sid(ptr noundef %sb, ptr noundef nonnull %74, ptr noundef nonnull %defcontext_sid, i32 noundef 3264)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.end80, label %if.then75.out_crit_edge

if.then75.out_crit_edge:                          ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end80:                                         ; preds = %if.then75
  %75 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %flags, align 2
  %conv.i464 = zext i16 %76 to i32
  %and4.i466 = and i32 %conv.i464, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i466)
  %tobool.not.i467 = icmp eq i32 %and4.i466, 0
  br i1 %tobool.not.i467, label %if.end12.i474, label %if.then.i472

if.then.i472:                                     ; preds = %if.end80
  %77 = ptrtoint ptr %defcontext_sid to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %defcontext_sid, align 4
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %79 = ptrtoint ptr %def_sid to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %def_sid, align 4
  %and8.i468 = and i32 %conv.i464, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i468)
  %tobool9.not.i469 = icmp eq i32 %and8.i468, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %80, i32 %78)
  %cmp.not.i470 = icmp ne i32 %80, %78
  %or.cond.i471.not = or i1 %tobool9.not.i469, %cmp.not.i470
  %81 = and i16 %76, 264
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %81)
  %.not509 = icmp eq i16 %81, 8
  %or.cond516 = select i1 %or.cond.i471.not, i1 true, i1 %.not509
  br i1 %or.cond516, label %if.then.i472.out_double_mount_crit_edge, label %if.then.i472.if.end84_crit_edge

if.then.i472.if.end84_crit_edge:                  ; preds = %if.then.i472
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end84

if.then.i472.out_double_mount_crit_edge:          ; preds = %if.then.i472
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end12.i474:                                    ; preds = %if.end80
  %.old515 = and i16 %76, 264
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %.old515)
  %.not509.old = icmp eq i16 %.old515, 8
  br i1 %.not509.old, label %if.end12.i474.out_double_mount_crit_edge, label %if.end12.i474.if.end84_crit_edge

if.end12.i474.if.end84_crit_edge:                 ; preds = %if.end12.i474
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end84

if.end12.i474.out_double_mount_crit_edge:         ; preds = %if.end12.i474
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end84:                                         ; preds = %if.end12.i474.if.end84_crit_edge, %if.then.i472.if.end84_crit_edge
  %82 = or i16 %76, 8
  %83 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 %82, ptr %flags, align 2
  br label %if.end90

if.end90:                                         ; preds = %if.end84, %if.end73.if.end90_crit_edge, %backing_inode_security_novalidate.exit.if.end90_crit_edge
  %84 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %flags, align 2
  %conv92 = zext i16 %85 to i32
  %and93 = and i32 %conv92, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.end104, label %if.then95

if.then95:                                        ; preds = %if.end90
  %and98 = and i32 %conv92, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp ne i32 %and98, 0
  %86 = and i1 %tobool24.not, %tobool99.not
  br i1 %86, label %if.then95.out_double_mount_crit_edge, label %if.then95.out_crit_edge

if.then95.out_crit_edge:                          ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then95.out_double_mount_crit_edge:             ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_double_mount

if.end104:                                        ; preds = %if.end90
  %s_type105 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %87 = ptrtoint ptr %s_type105 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %s_type105, align 32
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %88, align 4
  %call106 = call i32 @strcmp(ptr noundef %90, ptr noundef nonnull dereferenceable(5) @.str.11) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %cmp = icmp eq i32 %call106, 0
  br i1 %cmp, label %if.then108, label %if.end104.if.end113_crit_edge

if.end104.if.end113_crit_edge:                    ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end113

if.then108:                                       ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #25
  %or111 = or i16 %85, 1536
  %91 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %or111, ptr %flags, align 2
  br label %if.end113

if.end113:                                        ; preds = %if.then108, %if.end104.if.end113_crit_edge
  %92 = ptrtoint ptr %s_type105 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %s_type105, align 32
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %93, align 4
  %call116 = call i32 @strcmp(ptr noundef %95, ptr noundef nonnull dereferenceable(8) @.str.12) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116)
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %if.end113.if.then142_crit_edge, label %lor.lhs.false

if.end113.if.then142_crit_edge:                   ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then142

lor.lhs.false:                                    ; preds = %if.end113
  %call120 = call i32 @strcmp(ptr noundef %95, ptr noundef nonnull dereferenceable(8) @.str.13) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call120)
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %lor.lhs.false.if.then142_crit_edge, label %lor.lhs.false122

lor.lhs.false.if.then142_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then142

lor.lhs.false122:                                 ; preds = %lor.lhs.false
  %call125 = call i32 @strcmp(ptr noundef %95, ptr noundef nonnull dereferenceable(7) @.str.14) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call125)
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %lor.lhs.false122.if.then142_crit_edge, label %lor.lhs.false127

lor.lhs.false122.if.then142_crit_edge:            ; preds = %lor.lhs.false122
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then142

lor.lhs.false127:                                 ; preds = %lor.lhs.false122
  %call130 = call i32 @strcmp(ptr noundef %95, ptr noundef nonnull dereferenceable(4) @.str.15) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call130)
  %tobool131.not = icmp eq i32 %call130, 0
  br i1 %tobool131.not, label %lor.lhs.false127.if.then142_crit_edge, label %lor.lhs.false132

lor.lhs.false127.if.then142_crit_edge:            ; preds = %lor.lhs.false127
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then142

lor.lhs.false132:                                 ; preds = %lor.lhs.false127
  %call135 = call i32 @strcmp(ptr noundef %95, ptr noundef nonnull dereferenceable(7) @.str.16) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call135)
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %lor.lhs.false132.if.then142_crit_edge, label %lor.lhs.false137

lor.lhs.false132.if.then142_crit_edge:            ; preds = %lor.lhs.false132
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then142

lor.lhs.false137:                                 ; preds = %lor.lhs.false132
  %call140 = call i32 @strcmp(ptr noundef %95, ptr noundef nonnull dereferenceable(11) @.str.17) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call140)
  %tobool141.not = icmp eq i32 %call140, 0
  br i1 %tobool141.not, label %lor.lhs.false137.if.then142_crit_edge, label %lor.lhs.false137.if.end147_crit_edge

lor.lhs.false137.if.end147_crit_edge:             ; preds = %lor.lhs.false137
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end147

lor.lhs.false137.if.then142_crit_edge:            ; preds = %lor.lhs.false137
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then142

if.then142:                                       ; preds = %lor.lhs.false137.if.then142_crit_edge, %lor.lhs.false132.if.then142_crit_edge, %lor.lhs.false127.if.then142_crit_edge, %lor.lhs.false122.if.then142_crit_edge, %lor.lhs.false.if.then142_crit_edge, %if.end113.if.then142_crit_edge
  %96 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %flags, align 2
  %98 = or i16 %97, 1024
  store i16 %98, ptr %flags, align 2
  br label %if.end147

if.end147:                                        ; preds = %if.then142, %lor.lhs.false137.if.end147_crit_edge
  %99 = ptrtoint ptr %s_type105 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %s_type105, align 32
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %100, align 4
  %call150 = call i32 @strcmp(ptr noundef %102, ptr noundef nonnull dereferenceable(6) @.str.18) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call150)
  %tobool151.not = icmp eq i32 %call150, 0
  br i1 %tobool151.not, label %if.end147.if.then162_crit_edge, label %lor.lhs.false152

if.end147.if.then162_crit_edge:                   ; preds = %if.end147
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then162

lor.lhs.false152:                                 ; preds = %if.end147
  %call155 = call i32 @strcmp(ptr noundef %102, ptr noundef nonnull dereferenceable(7) @.str.19) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call155)
  %tobool156.not = icmp eq i32 %call155, 0
  br i1 %tobool156.not, label %lor.lhs.false152.if.then162_crit_edge, label %lor.lhs.false157

lor.lhs.false152.if.then162_crit_edge:            ; preds = %lor.lhs.false152
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then162

lor.lhs.false157:                                 ; preds = %lor.lhs.false152
  %call160 = call i32 @strcmp(ptr noundef %102, ptr noundef nonnull dereferenceable(8) @.str.20) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call160)
  %tobool161.not = icmp eq i32 %call160, 0
  br i1 %tobool161.not, label %lor.lhs.false157.if.then162_crit_edge, label %lor.lhs.false157.if.end167_crit_edge

lor.lhs.false157.if.end167_crit_edge:             ; preds = %lor.lhs.false157
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end167

lor.lhs.false157.if.then162_crit_edge:            ; preds = %lor.lhs.false157
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then162

if.then162:                                       ; preds = %lor.lhs.false157.if.then162_crit_edge, %lor.lhs.false152.if.then162_crit_edge, %if.end147.if.then162_crit_edge
  %103 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %103)
  %104 = load i16, ptr %flags, align 2
  %105 = or i16 %104, 3072
  store i16 %105, ptr %flags, align 2
  br label %if.end167

if.end167:                                        ; preds = %if.then162, %lor.lhs.false157.if.end167_crit_edge
  %behavior = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %106 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %behavior, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %107)
  %tobool168.not = icmp eq i16 %107, 0
  br i1 %tobool168.not, label %if.then169, label %if.end167.if.end181_crit_edge

if.end167.if.end181_crit_edge:                    ; preds = %if.end167
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end181

if.then169:                                       ; preds = %if.end167
  %call170 = call i32 @security_fs_use(ptr noundef nonnull @selinux_state, ptr noundef %sb) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call170)
  %tobool171.not = icmp eq i32 %call170, 0
  br i1 %tobool171.not, label %if.then169.if.end181_crit_edge, label %do.end175

if.then169.if.end181_crit_edge:                   ; preds = %if.then169
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end181

do.end175:                                        ; preds = %if.then169
  call void @__sanitizer_cov_trace_pc() #25
  %108 = ptrtoint ptr %s_type105 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %s_type105, align 32
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %109, align 4
  %call179 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.10, ptr noundef %111, i32 noundef %call170) #26
  br label %out

if.end181:                                        ; preds = %if.then169.if.end181_crit_edge, %if.end167.if.end181_crit_edge
  %s_user_ns = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 53
  %112 = ptrtoint ptr %s_user_ns to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %s_user_ns, align 8
  %cmp182.not = icmp eq ptr %113, @init_user_ns
  br i1 %cmp182.not, label %if.end181.if.end228_crit_edge, label %land.lhs.true184

if.end181.if.end228_crit_edge:                    ; preds = %if.end181
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end228

land.lhs.true184:                                 ; preds = %if.end181
  %114 = ptrtoint ptr %s_type105 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %s_type105, align 32
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %115, align 4
  %call187 = call i32 @strcmp(ptr noundef %117, ptr noundef nonnull dereferenceable(6) @.str.24) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call187)
  %tobool188.not = icmp eq i32 %call187, 0
  br i1 %tobool188.not, label %land.lhs.true184.if.end228_crit_edge, label %land.lhs.true189

land.lhs.true184.if.end228_crit_edge:             ; preds = %land.lhs.true184
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end228

land.lhs.true189:                                 ; preds = %land.lhs.true184
  %call192 = call i32 @strcmp(ptr noundef %117, ptr noundef nonnull dereferenceable(6) @.str.25) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call192)
  %tobool193.not = icmp eq i32 %call192, 0
  br i1 %tobool193.not, label %land.lhs.true189.if.end228_crit_edge, label %land.lhs.true194

land.lhs.true189.if.end228_crit_edge:             ; preds = %land.lhs.true189
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end228

land.lhs.true194:                                 ; preds = %land.lhs.true189
  %call197 = call i32 @strcmp(ptr noundef %117, ptr noundef nonnull dereferenceable(7) @.str.26) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call197)
  %tobool198.not = icmp eq i32 %call197, 0
  br i1 %tobool198.not, label %land.lhs.true194.if.end228_crit_edge, label %land.lhs.true199

land.lhs.true194.if.end228_crit_edge:             ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end228

land.lhs.true199:                                 ; preds = %land.lhs.true194
  %call202 = call i32 @strcmp(ptr noundef %117, ptr noundef nonnull dereferenceable(8) @.str.27) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call202)
  %tobool203.not = icmp eq i32 %call202, 0
  br i1 %tobool203.not, label %land.lhs.true199.if.end228_crit_edge, label %if.then204

land.lhs.true199.if.end228_crit_edge:             ; preds = %land.lhs.true199
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end228

if.then204:                                       ; preds = %land.lhs.true199
  %118 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %context_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %tobool205.not = icmp eq i32 %119, 0
  br i1 %tobool205.not, label %lor.lhs.false206, label %if.then204.out_crit_edge

if.then204.out_crit_edge:                         ; preds = %if.then204
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

lor.lhs.false206:                                 ; preds = %if.then204
  %120 = ptrtoint ptr %fscontext_sid to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %fscontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool207.not = icmp eq i32 %121, 0
  br i1 %tobool207.not, label %lor.lhs.false208, label %lor.lhs.false206.out_crit_edge

lor.lhs.false206.out_crit_edge:                   ; preds = %lor.lhs.false206
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

lor.lhs.false208:                                 ; preds = %lor.lhs.false206
  %122 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %rootcontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool209.not = icmp eq i32 %123, 0
  br i1 %tobool209.not, label %lor.lhs.false210, label %lor.lhs.false208.out_crit_edge

lor.lhs.false208.out_crit_edge:                   ; preds = %lor.lhs.false208
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

lor.lhs.false210:                                 ; preds = %lor.lhs.false208
  %124 = ptrtoint ptr %defcontext_sid to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %defcontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %125)
  %tobool211.not = icmp eq i32 %125, 0
  br i1 %tobool211.not, label %if.end213, label %lor.lhs.false210.out_crit_edge

lor.lhs.false210.out_crit_edge:                   ; preds = %lor.lhs.false210
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end213:                                        ; preds = %lor.lhs.false210
  %126 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %126)
  %127 = load i16, ptr %behavior, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %127)
  %cmp216 = icmp eq i16 %127, 1
  br i1 %cmp216, label %if.then218, label %if.end213.out_set_opts_crit_edge

if.end213.out_set_opts_crit_edge:                 ; preds = %if.end213
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_set_opts

if.then218:                                       ; preds = %if.end213
  %128 = ptrtoint ptr %behavior to i32
  call void @__asan_store2_noabort(i32 %128)
  store i16 6, ptr %behavior, align 4
  %129 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %129, -16384
  %130 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %130, i32 0, i32 2
  %131 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %132, i32 0, i32 99
  %133 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %134, i32 0, i32 23
  %135 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %security.i.i, align 4
  %137 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i481 = getelementptr i8, ptr %136, i32 %137
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i481, i32 0, i32 1
  %138 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %sid.i, align 4
  %mntpoint_sid222 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %call223 = call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %139, i32 noundef %139, i16 noundef zeroext 7, ptr noundef null, ptr noundef %mntpoint_sid222) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call223)
  %tobool224.not = icmp eq i32 %call223, 0
  br i1 %tobool224.not, label %if.then218.out_set_opts_crit_edge, label %if.then218.out_crit_edge

if.then218.out_crit_edge:                         ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then218.out_set_opts_crit_edge:                ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_set_opts

if.end228:                                        ; preds = %land.lhs.true199.if.end228_crit_edge, %land.lhs.true194.if.end228_crit_edge, %land.lhs.true189.if.end228_crit_edge, %land.lhs.true184.if.end228_crit_edge, %if.end181.if.end228_crit_edge
  %140 = ptrtoint ptr %fscontext_sid to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %fscontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %tobool229.not = icmp eq i32 %141, 0
  br i1 %tobool229.not, label %if.end228.if.end236_crit_edge, label %if.then230

if.end228.if.end236_crit_edge:                    ; preds = %if.end228
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end236

if.then230:                                       ; preds = %if.end228
  %security.i.i488 = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %142 = ptrtoint ptr %security.i.i488 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %security.i.i488, align 4
  %144 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i489 = getelementptr i8, ptr %143, i32 %144
  %sid1.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i489, i32 0, i32 1
  %145 = ptrtoint ptr %sid1.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %sid1.i, align 4
  %147 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %add.ptr.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %146, i32 noundef %148, i16 noundef zeroext 6, i32 noundef 16, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not.i490 = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i490, label %may_context_mount_sb_relabel.exit, label %if.then230.out_crit_edge

if.then230.out_crit_edge:                         ; preds = %if.then230
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

may_context_mount_sb_relabel.exit:                ; preds = %if.then230
  %149 = ptrtoint ptr %sid1.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %sid1.i, align 4
  %call5.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %150, i32 noundef %141, i16 noundef zeroext 6, i32 noundef 32, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool232.not = icmp eq i32 %call5.i, 0
  br i1 %tobool232.not, label %if.end234, label %may_context_mount_sb_relabel.exit.out_crit_edge

may_context_mount_sb_relabel.exit.out_crit_edge:  ; preds = %may_context_mount_sb_relabel.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end234:                                        ; preds = %may_context_mount_sb_relabel.exit
  call void @__sanitizer_cov_trace_pc() #25
  %151 = ptrtoint ptr %fscontext_sid to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %fscontext_sid, align 4
  %153 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %152, ptr %add.ptr.i, align 4
  br label %if.end236

if.end236:                                        ; preds = %if.end234, %if.end228.if.end236_crit_edge
  %and237 = and i32 %kern_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and237)
  %tobool238.not = icmp eq i32 %and237, 0
  br i1 %tobool238.not, label %if.end236.if.end244_crit_edge, label %land.lhs.true239

if.end236.if.end244_crit_edge:                    ; preds = %if.end236
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end244

land.lhs.true239:                                 ; preds = %if.end236
  %154 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %context_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %155)
  %tobool240.not = icmp eq i32 %155, 0
  br i1 %tobool240.not, label %if.then241, label %land.lhs.true239.if.then246_crit_edge

land.lhs.true239.if.then246_crit_edge:            ; preds = %land.lhs.true239
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then246

if.then241:                                       ; preds = %land.lhs.true239
  call void @__sanitizer_cov_trace_pc() #25
  %156 = ptrtoint ptr %behavior to i32
  call void @__asan_store2_noabort(i32 %156)
  store i16 7, ptr %behavior, align 4
  %157 = ptrtoint ptr %set_kern_flags to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %set_kern_flags, align 4
  %or243 = or i32 %158, 1
  store i32 %or243, ptr %set_kern_flags, align 4
  br label %if.end244

if.end244:                                        ; preds = %if.then241, %if.end236.if.end244_crit_edge
  %159 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %159)
  %.pr = load i32, ptr %context_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool245.not = icmp eq i32 %.pr, 0
  br i1 %tobool245.not, label %if.end244.if.end264_crit_edge, label %if.end244.if.then246_crit_edge

if.end244.if.then246_crit_edge:                   ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then246

if.end244.if.end264_crit_edge:                    ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end264

if.then246:                                       ; preds = %if.end244.if.then246_crit_edge, %land.lhs.true239.if.then246_crit_edge
  %160 = phi i32 [ %.pr, %if.end244.if.then246_crit_edge ], [ %155, %land.lhs.true239.if.then246_crit_edge ]
  %161 = ptrtoint ptr %fscontext_sid to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %fscontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %162)
  %tobool247.not = icmp eq i32 %162, 0
  br i1 %tobool247.not, label %if.then248, label %if.else

if.then248:                                       ; preds = %if.then246
  %call249 = call fastcc i32 @may_context_mount_sb_relabel(i32 noundef %160, ptr noundef %add.ptr.i, ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call249)
  %tobool250.not = icmp eq i32 %call249, 0
  br i1 %tobool250.not, label %if.end252, label %if.then248.out_crit_edge

if.then248.out_crit_edge:                         ; preds = %if.then248
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end252:                                        ; preds = %if.then248
  call void @__sanitizer_cov_trace_pc() #25
  %163 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %context_sid, align 4
  %165 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 %164, ptr %add.ptr.i, align 4
  br label %if.end258

if.else:                                          ; preds = %if.then246
  %call254 = call fastcc i32 @may_context_mount_inode_relabel(i32 noundef %160, ptr noundef %add.ptr.i, ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call254)
  %tobool255.not = icmp eq i32 %call254, 0
  br i1 %tobool255.not, label %if.else.if.end258_crit_edge, label %if.else.out_crit_edge

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.else.if.end258_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end258

if.end258:                                        ; preds = %if.else.if.end258_crit_edge, %if.end252
  %166 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %rootcontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %167)
  %tobool259.not = icmp eq i32 %167, 0
  br i1 %tobool259.not, label %if.then260, label %if.end258.if.end261_crit_edge

if.end258.if.end261_crit_edge:                    ; preds = %if.end258
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end261

if.then260:                                       ; preds = %if.end258
  call void @__sanitizer_cov_trace_pc() #25
  %168 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %context_sid, align 4
  %170 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_store4_noabort(i32 %170)
  store i32 %169, ptr %rootcontext_sid, align 4
  br label %if.end261

if.end261:                                        ; preds = %if.then260, %if.end258.if.end261_crit_edge
  %171 = ptrtoint ptr %context_sid to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %context_sid, align 4
  %mntpoint_sid262 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %173 = ptrtoint ptr %mntpoint_sid262 to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 %172, ptr %mntpoint_sid262, align 4
  %174 = ptrtoint ptr %behavior to i32
  call void @__asan_store2_noabort(i32 %174)
  store i16 6, ptr %behavior, align 4
  br label %if.end264

if.end264:                                        ; preds = %if.end261, %if.end244.if.end264_crit_edge
  %175 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %rootcontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %176)
  %tobool265.not = icmp eq i32 %176, 0
  br i1 %tobool265.not, label %if.end264.if.end272_crit_edge, label %if.then266

if.end264.if.end272_crit_edge:                    ; preds = %if.end264
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end272

if.then266:                                       ; preds = %if.end264
  %call267 = call fastcc i32 @may_context_mount_inode_relabel(i32 noundef %176, ptr noundef %add.ptr.i, ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call267)
  %tobool268.not = icmp eq i32 %call267, 0
  br i1 %tobool268.not, label %if.end270, label %if.then266.out_crit_edge

if.then266.out_crit_edge:                         ; preds = %if.then266
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end270:                                        ; preds = %if.then266
  call void @__sanitizer_cov_trace_pc() #25
  %177 = ptrtoint ptr %rootcontext_sid to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %rootcontext_sid, align 4
  %sid271 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %179 = ptrtoint ptr %sid271 to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %178, ptr %sid271, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 5
  %180 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %180)
  store i8 1, ptr %initialized, align 2
  br label %if.end272

if.end272:                                        ; preds = %if.end270, %if.end264.if.end272_crit_edge
  %181 = ptrtoint ptr %defcontext_sid to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %defcontext_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %182)
  %tobool273.not = icmp eq i32 %182, 0
  br i1 %tobool273.not, label %if.end272.out_set_opts_crit_edge, label %if.then274

if.end272.out_set_opts_crit_edge:                 ; preds = %if.end272
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_set_opts

if.then274:                                       ; preds = %if.end272
  %183 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %183)
  %184 = load i16, ptr %behavior, align 4
  %185 = zext i16 %184 to i64
  call void @__sanitizer_cov_trace_switch(i64 %185, ptr @__sancov_gen_cov_switch_values)
  switch i16 %184, label %if.then284 [
    i16 1, label %if.then274.if.end290_crit_edge
    i16 7, label %if.then274.if.end290_crit_edge517
  ]

if.then274.if.end290_crit_edge517:                ; preds = %if.then274
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end290

if.then274.if.end290_crit_edge:                   ; preds = %if.then274
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end290

if.then284:                                       ; preds = %if.then274
  call void @__sanitizer_cov_trace_pc() #25
  %call289 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29) #26
  br label %out

if.end290:                                        ; preds = %if.then274.if.end290_crit_edge, %if.then274.if.end290_crit_edge517
  %def_sid291 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %186 = ptrtoint ptr %def_sid291 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %def_sid291, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %182, i32 %187)
  %cmp292.not = icmp eq i32 %182, %187
  br i1 %cmp292.not, label %if.end290.if.end299_crit_edge, label %if.then294

if.end290.if.end299_crit_edge:                    ; preds = %if.end290
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end299

if.then294:                                       ; preds = %if.end290
  %call295 = call fastcc i32 @may_context_mount_inode_relabel(i32 noundef %182, ptr noundef %add.ptr.i, ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call295)
  %tobool296.not = icmp eq i32 %call295, 0
  br i1 %tobool296.not, label %if.then294.if.end299_crit_edge, label %if.then294.out_crit_edge

if.then294.out_crit_edge:                         ; preds = %if.then294
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then294.if.end299_crit_edge:                   ; preds = %if.then294
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end299

if.end299:                                        ; preds = %if.then294.if.end299_crit_edge, %if.end290.if.end299_crit_edge
  %188 = ptrtoint ptr %defcontext_sid to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %defcontext_sid, align 4
  %190 = ptrtoint ptr %def_sid291 to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %189, ptr %def_sid291, align 4
  br label %out_set_opts

out_set_opts:                                     ; preds = %if.end299, %if.end272.out_set_opts_crit_edge, %if.then218.out_set_opts_crit_edge, %if.end213.out_set_opts_crit_edge
  %call302 = call fastcc i32 @sb_finish_set_opts(ptr noundef %sb)
  br label %out

out:                                              ; preds = %out_double_mount, %out_set_opts, %if.then294.out_crit_edge, %if.then284, %if.then266.out_crit_edge, %if.else.out_crit_edge, %if.then248.out_crit_edge, %may_context_mount_sb_relabel.exit.out_crit_edge, %if.then230.out_crit_edge, %if.then218.out_crit_edge, %lor.lhs.false210.out_crit_edge, %lor.lhs.false208.out_crit_edge, %lor.lhs.false206.out_crit_edge, %if.then204.out_crit_edge, %do.end175, %if.then95.out_crit_edge, %if.then75.out_crit_edge, %parse_sid.exit444, %parse_sid.exit419, %parse_sid.exit, %land.lhs.true16.out_crit_edge, %if.end10.out_crit_edge, %if.end, %if.then.out_crit_edge
  %rc.0 = phi i32 [ %call.i, %parse_sid.exit ], [ -22, %out_double_mount ], [ %call.i413, %parse_sid.exit419 ], [ %call.i438, %parse_sid.exit444 ], [ %call77, %if.then75.out_crit_edge ], [ %call223, %if.then218.out_crit_edge ], [ %call302, %out_set_opts ], [ %call5.i, %may_context_mount_sb_relabel.exit.out_crit_edge ], [ %call254, %if.else.out_crit_edge ], [ %call267, %if.then266.out_crit_edge ], [ -22, %if.then284 ], [ %call295, %if.then294.out_crit_edge ], [ %call249, %if.then248.out_crit_edge ], [ %call170, %do.end175 ], [ -22, %if.end ], [ 0, %if.then.out_crit_edge ], [ -22, %if.end10.out_crit_edge ], [ 0, %land.lhs.true16.out_crit_edge ], [ 0, %if.then95.out_crit_edge ], [ -13, %lor.lhs.false210.out_crit_edge ], [ -13, %lor.lhs.false208.out_crit_edge ], [ -13, %lor.lhs.false206.out_crit_edge ], [ -13, %if.then204.out_crit_edge ], [ %call3.i, %if.then230.out_crit_edge ]
  call void @mutex_unlock(ptr noundef %lock) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %defcontext_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rootcontext_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fscontext_sid) #23
  ret i32 %rc.0

out_double_mount:                                 ; preds = %if.then95.out_double_mount_crit_edge, %if.end12.i474.out_double_mount_crit_edge, %if.then.i472.out_double_mount_crit_edge, %if.end12.i456.out_double_mount_crit_edge, %if.then.i454.out_double_mount_crit_edge, %if.end12.i431.out_double_mount_crit_edge, %if.then.i429.out_double_mount_crit_edge, %if.end12.i.out_double_mount_crit_edge, %if.then.i.out_double_mount_crit_edge
  %s_id = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type308 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %191 = ptrtoint ptr %s_type308 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %s_type308, align 32
  %193 = ptrtoint ptr %192 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %192, align 4
  %call310 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.32, ptr noundef %s_id, ptr noundef %194) #26
  br label %out
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @parse_sid(ptr noundef %sb, ptr noundef %s, ptr noundef %sid, i32 noundef %gfp) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %s, ptr noundef %sid, i32 noundef %gfp) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %s_id = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %0 = ptrtoint ptr %s_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_type, align 32
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef %s, ptr noundef %s_id, ptr noundef %3, i32 noundef %call) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret i32 %call
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_fs_use(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_transition_sid(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @may_context_mount_sb_relabel(i32 noundef %sid, ptr nocapture noundef readonly %sbsec, ptr nocapture noundef readonly %cred) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %sid1 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid1, align 4
  %5 = ptrtoint ptr %sbsec to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sbsec, align 4
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %6, i16 noundef zeroext 6, i32 noundef 16, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %sid1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sid1, align 4
  %call5 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %8, i32 noundef %sid, i16 noundef zeroext 6, i32 noundef 32, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call3, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @may_context_mount_inode_relabel(i32 noundef %sid, ptr nocapture noundef readonly %sbsec, ptr nocapture noundef readonly %cred) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %sid1 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid1, align 4
  %5 = ptrtoint ptr %sbsec to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sbsec, align 4
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %6, i16 noundef zeroext 6, i32 noundef 16, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %sbsec to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sbsec, align 4
  %call5 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %sid, i32 noundef %8, i16 noundef zeroext 6, i32 noundef 64, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call3, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sb_finish_set_opts(ptr noundef %sb) unnamed_addr #1 align 64 {
entry:
  %sid.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %0 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_security.i, align 4
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %3 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %s_root, align 64
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %d_inode.i, align 8
  %behavior = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %7 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %behavior, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %8)
  %cmp = icmp eq i16 %8, 1
  br i1 %cmp, label %if.then, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid.i) #23
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %sid.i, align 4, !annotation !376
  %i_opflags.i = getelementptr inbounds %struct.inode, ptr %6, i32 0, i32 1
  %10 = ptrtoint ptr %i_opflags.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %i_opflags.i, align 2
  %12 = and i16 %11, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool.not.i = icmp eq i16 %12, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %13 = ptrtoint ptr %s_type.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_type.i, align 32
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, ptr noundef %s_id.i, ptr noundef %16) #26
  br label %fallback.i

if.end.i:                                         ; preds = %if.then
  %call2.i = tail call i32 @__vfs_getxattr(ptr noundef %4, ptr noundef %6, ptr noundef nonnull @.str.38, ptr noundef null, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i)
  %cmp.i = icmp sgt i32 %call2.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -61, i32 %call2.i)
  %cmp4.not.i = icmp eq i32 %call2.i, -61
  %or.cond.i = or i1 %cmp.i, %cmp4.not.i
  br i1 %or.cond.i, label %if.end.i.sb_check_xattr_support.exit.thread_crit_edge, label %if.then6.i

if.end.i.sb_check_xattr_support.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %sb_check_xattr_support.exit.thread

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call2.i)
  %cmp7.i = icmp eq i32 %call2.i, -95
  %s_id14.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type16.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %17 = ptrtoint ptr %s_type16.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %s_type16.i, align 32
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 4
  br i1 %cmp7.i, label %do.end12.i, label %do.end21.i

do.end12.i:                                       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  %call18.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.40, ptr noundef %s_id14.i, ptr noundef %20) #26
  br label %fallback.i

do.end21.i:                                       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  %sub.i = sub i32 0, %call2.i
  %call27.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.43, ptr noundef %s_id14.i, ptr noundef %20, i32 noundef %sub.i) #26
  br label %sb_check_xattr_support.exit

fallback.i:                                       ; preds = %do.end12.i, %do.end.i
  %s_type29.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %21 = ptrtoint ptr %s_type29.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %s_type29.i, align 32
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %call31.i = call i32 @security_genfs_sid(ptr noundef nonnull @selinux_state, ptr noundef %24, ptr noundef nonnull @.str.45, i16 noundef zeroext 8, ptr noundef nonnull %sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %do.end37.i, label %fallback.i.sb_check_xattr_support.exit_crit_edge

fallback.i.sb_check_xattr_support.exit_crit_edge: ; preds = %fallback.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %sb_check_xattr_support.exit

do.end37.i:                                       ; preds = %fallback.i
  call void @__sanitizer_cov_trace_pc() #25
  %s_id39.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %25 = ptrtoint ptr %s_type29.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %s_type29.i, align 32
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %call43.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47, ptr noundef %s_id39.i, ptr noundef %28) #26
  %behavior.i = getelementptr inbounds %struct.superblock_security_struct, ptr %1, i32 0, i32 3
  %29 = ptrtoint ptr %behavior.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 4, ptr %behavior.i, align 4
  %30 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sid.i, align 4
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %1, align 4
  br label %sb_check_xattr_support.exit.thread

sb_check_xattr_support.exit.thread:               ; preds = %do.end37.i, %if.end.i.sb_check_xattr_support.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid.i) #23
  br label %if.end5

sb_check_xattr_support.exit:                      ; preds = %fallback.i.sb_check_xattr_support.exit_crit_edge, %do.end21.i
  %retval.0.i = phi i32 [ %call2.i, %do.end21.i ], [ -95, %fallback.i.sb_check_xattr_support.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid.i) #23
  br label %cleanup

if.end5:                                          ; preds = %sb_check_xattr_support.exit.thread, %entry.if.end5_crit_edge
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %flags, align 2
  %35 = or i16 %34, 256
  store i16 %35, ptr %flags, align 2
  %36 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %s_security.i, align 4
  %38 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %37, i32 %38
  %behavior.i60 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i.i, i32 0, i32 3
  %39 = ptrtoint ptr %behavior.i60 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %behavior.i60, align 4
  %41 = zext i16 %40 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.122)
  switch i16 %40, label %if.end5.if.else_crit_edge [
    i16 1, label %if.end5.if.then10_crit_edge
    i16 2, label %if.end5.if.then10_crit_edge73
    i16 3, label %if.end5.if.then10_crit_edge74
    i16 7, label %if.end5.if.then10_crit_edge75
    i16 4, label %sw.bb1.i
  ]

if.end5.if.then10_crit_edge75:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

if.end5.if.then10_crit_edge74:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

if.end5.if.then10_crit_edge73:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

if.end5.if.then10_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

if.end5.if.else_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

sw.bb1.i:                                         ; preds = %if.end5
  %s_type.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %42 = ptrtoint ptr %s_type.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %s_type.i.i, align 32
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 4
  %call.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(6) @.str.18) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %sw.bb1.i.if.then10_crit_edge, label %lor.lhs.false.i.i

sw.bb1.i.if.then10_crit_edge:                     ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

lor.lhs.false.i.i:                                ; preds = %sw.bb1.i
  %call3.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(7) @.str.16) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %lor.lhs.false.i.i.if.then10_crit_edge, label %lor.lhs.false5.i.i

lor.lhs.false.i.i.if.then10_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %call8.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(8) @.str.12) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %lor.lhs.false5.i.i.if.then10_crit_edge, label %lor.lhs.false10.i.i

lor.lhs.false5.i.i.if.then10_crit_edge:           ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

lor.lhs.false10.i.i:                              ; preds = %lor.lhs.false5.i.i
  %call13.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(8) @.str.13) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i)
  %tobool14.not.i.i = icmp eq i32 %call13.i.i, 0
  br i1 %tobool14.not.i.i, label %lor.lhs.false10.i.i.if.then10_crit_edge, label %lor.lhs.false15.i.i

lor.lhs.false10.i.i.if.then10_crit_edge:          ; preds = %lor.lhs.false10.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

lor.lhs.false15.i.i:                              ; preds = %lor.lhs.false10.i.i
  %call18.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(7) @.str.49) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i.i)
  %tobool19.not.i.i = icmp eq i32 %call18.i.i, 0
  br i1 %tobool19.not.i.i, label %lor.lhs.false15.i.i.if.then10_crit_edge, label %lor.rhs.i.i

lor.lhs.false15.i.i.if.then10_crit_edge:          ; preds = %lor.lhs.false15.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

lor.rhs.i.i:                                      ; preds = %lor.lhs.false15.i.i
  %46 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 4), align 4, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool.i.not.i.i = icmp eq i8 %46, 0
  br i1 %tobool.i.not.i.i, label %lor.rhs.i.i.if.else_crit_edge, label %land.rhs.i.i

lor.rhs.i.i.if.else_crit_edge:                    ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.rhs.i.i:                                     ; preds = %lor.rhs.i.i
  %call23.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(7) @.str.19) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i.i)
  %tobool24.not.i.i = icmp eq i32 %call23.i.i, 0
  br i1 %tobool24.not.i.i, label %land.rhs.i.i.if.then10_crit_edge, label %selinux_is_sblabel_mnt.exit

land.rhs.i.i.if.then10_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

selinux_is_sblabel_mnt.exit:                      ; preds = %land.rhs.i.i
  %call28.i.i = call i32 @strcmp(ptr noundef %45, ptr noundef nonnull dereferenceable(8) @.str.20) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i.i)
  %tobool29.not.i.i.not = icmp eq i32 %call28.i.i, 0
  br i1 %tobool29.not.i.i.not, label %selinux_is_sblabel_mnt.exit.if.then10_crit_edge, label %selinux_is_sblabel_mnt.exit.if.else_crit_edge

selinux_is_sblabel_mnt.exit.if.else_crit_edge:    ; preds = %selinux_is_sblabel_mnt.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

selinux_is_sblabel_mnt.exit.if.then10_crit_edge:  ; preds = %selinux_is_sblabel_mnt.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

if.then10:                                        ; preds = %selinux_is_sblabel_mnt.exit.if.then10_crit_edge, %land.rhs.i.i.if.then10_crit_edge, %lor.lhs.false15.i.i.if.then10_crit_edge, %lor.lhs.false10.i.i.if.then10_crit_edge, %lor.lhs.false5.i.i.if.then10_crit_edge, %lor.lhs.false.i.i.if.then10_crit_edge, %sw.bb1.i.if.then10_crit_edge, %if.end5.if.then10_crit_edge, %if.end5.if.then10_crit_edge73, %if.end5.if.then10_crit_edge74, %if.end5.if.then10_crit_edge75
  %47 = or i16 %34, 272
  br label %if.end18

if.else:                                          ; preds = %selinux_is_sblabel_mnt.exit.if.else_crit_edge, %lor.rhs.i.i.if.else_crit_edge, %if.end5.if.else_crit_edge
  %48 = and i16 %35, -17
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then10
  %storemerge = phi i16 [ %48, %if.else ], [ %47, %if.then10 ]
  %49 = ptrtoint ptr %flags to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %storemerge, ptr %flags, align 2
  %call19 = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %6, ptr noundef %4)
  %isec_lock = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %isec_lock) #23
  %isec_head = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 6
  %50 = ptrtoint ptr %isec_head to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %isec_head, align 4
  %cmp.i62.not72 = icmp eq ptr %51, %isec_head
  br i1 %cmp.i62.not72, label %if.end18.while.end_crit_edge, label %if.end18.while.body_crit_edge

if.end18.while.body_crit_edge:                    ; preds = %if.end18
  br label %while.body

if.end18.while.end_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.body:                                       ; preds = %if.end33.while.body_crit_edge, %if.end18.while.body_crit_edge
  %52 = phi ptr [ %66, %if.end33.while.body_crit_edge ], [ %51, %if.end18.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %52, i32 -4
  %53 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %add.ptr, align 4
  %call.i.i63 = call zeroext i1 @__list_del_entry_valid(ptr noundef %52) #23
  br i1 %call.i.i63, label %if.end.i.i, label %while.body.list_del_init.exit_crit_edge

while.body.list_del_init.exit_crit_edge:          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  %55 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %prev.i.i, align 4
  %57 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %52, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %56, ptr %prev1.i.i.i, align 4
  %60 = ptrtoint ptr %56 to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile ptr %58, ptr %56, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %while.body.list_del_init.exit_crit_edge
  %61 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile ptr %52, ptr %52, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  %62 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %52, ptr %prev.i3.i, align 4
  call void @_raw_spin_unlock(ptr noundef %isec_lock) #23
  %call25 = call ptr @igrab(ptr noundef %54) #23
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %list_del_init.exit.if.end33_crit_edge, label %if.then27

list_del_init.exit.if.end33_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.then27:                                        ; preds = %list_del_init.exit
  %i_flags = getelementptr inbounds %struct.inode, ptr %call25, i32 0, i32 4
  %63 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %i_flags, align 4
  %and28 = and i32 %64, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.then30, label %if.then27.if.end32_crit_edge

if.then27.if.end32_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end32

if.then30:                                        ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  %call31 = call fastcc i32 @inode_doinit_with_dentry(ptr noundef nonnull %call25, ptr noundef null)
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.then27.if.end32_crit_edge
  call void @iput(ptr noundef nonnull %call25) #23
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %list_del_init.exit.if.end33_crit_edge
  call void @_raw_spin_lock(ptr noundef %isec_lock) #23
  %65 = ptrtoint ptr %isec_head to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %isec_head, align 4
  %cmp.i62.not = icmp eq ptr %66, %isec_head
  br i1 %cmp.i62.not, label %if.end33.while.end_crit_edge, label %if.end33.while.body_crit_edge

if.end33.while.body_crit_edge:                    ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

if.end33.while.end_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.end:                                        ; preds = %if.end33.while.end_crit_edge, %if.end18.while.end_crit_edge
  call void @_raw_spin_unlock(ptr noundef %isec_lock) #23
  br label %cleanup

cleanup:                                          ; preds = %while.end, %sb_check_xattr_support.exit
  %retval.0 = phi i32 [ %call19, %while.end ], [ %retval.0.i, %sb_check_xattr_support.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_context_str_to_sid(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @avc_has_perm(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @inode_doinit_with_dentry(ptr noundef %inode, ptr noundef %opt_dentry) unnamed_addr #1 align 64 {
entry:
  %sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

entry.selinux_inode.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %entry.selinux_inode.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end.i ], [ null, %entry.selinux_inode.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %3 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %sid, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 5
  %4 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %initialized, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp = icmp eq i8 %5, 1
  br i1 %cmp, label %selinux_inode.exit.cleanup_crit_edge, label %if.end

selinux_inode.exit.cleanup_crit_edge:             ; preds = %selinux_inode.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %selinux_inode.exit
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #23
  %6 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %initialized, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %7)
  %cmp4 = icmp eq i8 %7, 1
  br i1 %cmp4, label %if.end.out_unlock_crit_edge, label %if.end7

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_unlock

if.end7:                                          ; preds = %if.end
  %sclass8 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %8 = ptrtoint ptr %sclass8 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %sclass8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %9)
  %cmp10 = icmp eq i16 %9, 7
  br i1 %cmp10, label %if.then12, label %if.end7.if.end15_crit_edge

if.end7.if.end15_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15

if.then12:                                        ; preds = %if.end7
  %10 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %inode, align 8
  %12 = and i16 %11, -4096
  %and.i = zext i16 %12 to i32
  %13 = add nsw i32 %and.i, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %13)
  %14 = icmp ult i32 %13, 49152
  br i1 %14, label %switch.lookup, label %if.then12.inode_mode_to_security_class.exit_crit_edge

if.then12.inode_mode_to_security_class.exit_crit_edge: ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  %15 = lshr exact i32 %13, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.inode_doinit_with_dentry, i32 0, i32 %15
  %16 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %16)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %if.then12.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i202 = phi i16 [ %switch.load, %switch.lookup ], [ 7, %if.then12.inode_mode_to_security_class.exit_crit_edge ]
  %17 = ptrtoint ptr %sclass8 to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %retval.0.i202, ptr %sclass8, align 4
  br label %if.end15

if.end15:                                         ; preds = %inode_mode_to_security_class.exit, %if.end7.if.end15_crit_edge
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %18 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_sb, align 4
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 17
  %20 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %s_security.i, align 4
  %22 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i203 = getelementptr i8, ptr %21, i32 %22
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 4
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %flags, align 2
  %25 = and i16 %24, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool.not = icmp eq i16 %25, 0
  br i1 %tobool.not, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.end15
  %isec_lock = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %isec_lock) #23
  %list = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 1
  %26 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %27, %list
  br i1 %cmp.i.not, label %if.then21, label %if.then18.if.end23_crit_edge

if.then18.if.end23_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

if.then21:                                        ; preds = %if.then18
  %isec_head = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 6
  %28 = ptrtoint ptr %isec_head to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %isec_head, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %isec_head, ptr noundef %29) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.then21.if.end23_crit_edge

if.then21.if.end23_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

if.end.i.i:                                       ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %list, ptr %prev1.i.i, align 4
  %31 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %29, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 1, i32 1
  %32 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %isec_head, ptr %prev3.i.i, align 4
  %33 = ptrtoint ptr %isec_head to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %list, ptr %isec_head, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.end.i.i, %if.then21.if.end23_crit_edge, %if.then18.if.end23_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %isec_lock) #23
  br label %out_unlock

if.end25:                                         ; preds = %if.end15
  %34 = ptrtoint ptr %sclass8 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %sclass8, align 4
  %task_sid27 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 2
  %36 = ptrtoint ptr %task_sid27 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %task_sid27, align 4
  %sid28 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %38 = ptrtoint ptr %sid28 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sid28, align 4
  %40 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %sid, align 4
  %41 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 2, ptr %initialized, align 2
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  %behavior = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 3
  %42 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %behavior, align 4
  %44 = zext i16 %43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.123)
  switch i16 %43, label %sw.default [
    i16 7, label %if.end25.out_crit_edge
    i16 1, label %sw.bb
    i16 3, label %sw.bb54
    i16 2, label %sw.bb55
    i16 6, label %sw.bb61
  ]

if.end25.out_crit_edge:                           ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

sw.bb:                                            ; preds = %if.end25
  %i_opflags = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 1
  %45 = ptrtoint ptr %i_opflags to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %i_opflags, align 2
  %47 = and i16 %46, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %47)
  %tobool34.not = icmp eq i16 %47, 0
  br i1 %tobool34.not, label %if.then35, label %if.end36

if.then35:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 1
  %48 = ptrtoint ptr %def_sid to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %def_sid, align 4
  %50 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %sid, align 4
  br label %out

if.end36:                                         ; preds = %sw.bb
  %tobool37.not = icmp eq ptr %opt_dentry, null
  br i1 %tobool37.not, label %if.else, label %dget.exit

dget.exit:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %opt_dentry, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #23
  br label %if.end48

if.else:                                          ; preds = %if.end36
  %call40 = tail call ptr @d_find_alias(ptr noundef %inode) #23
  %tobool41.not = icmp eq ptr %call40, null
  br i1 %tobool41.not, label %if.end45, label %if.else.if.end48_crit_edge

if.else.if.end48_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48

if.end45:                                         ; preds = %if.else
  %call43 = tail call ptr @d_find_any_alias(ptr noundef %inode) #23
  %tobool46.not = icmp eq ptr %call43, null
  br i1 %tobool46.not, label %if.end45.out_invalid_crit_edge, label %if.end45.if.end48_crit_edge

if.end45.if.end48_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48

if.end45.out_invalid_crit_edge:                   ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_invalid

if.end48:                                         ; preds = %if.end45.if.end48_crit_edge, %if.else.if.end48_crit_edge, %dget.exit
  %dentry.0213 = phi ptr [ %call43, %if.end45.if.end48_crit_edge ], [ %call40, %if.else.if.end48_crit_edge ], [ %opt_dentry, %dget.exit ]
  %def_sid49 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 1
  %51 = ptrtoint ptr %def_sid49 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %def_sid49, align 4
  %call50 = call fastcc i32 @inode_doinit_use_xattr(ptr noundef %inode, ptr noundef nonnull %dentry.0213, i32 noundef %52, ptr noundef nonnull %sid)
  call void @dput(ptr noundef nonnull %dentry.0213) #23
  br label %out

sw.bb54:                                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  %53 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %37, ptr %sid, align 4
  br label %out

sw.bb55:                                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  %54 = ptrtoint ptr %add.ptr.i203 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %add.ptr.i203, align 4
  %56 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %sid, align 4
  %call57 = call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %37, i32 noundef %55, i16 noundef zeroext %35, ptr noundef null, ptr noundef nonnull %sid) #23
  br label %out

sw.bb61:                                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i203, i32 0, i32 2
  %57 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %mntpoint_sid, align 4
  %59 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %sid, align 4
  br label %out

sw.default:                                       ; preds = %if.end25
  %60 = ptrtoint ptr %add.ptr.i203 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %add.ptr.i203, align 4
  %62 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %sid, align 4
  %63 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %flags, align 2
  %65 = and i16 %64, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %65)
  %tobool66.not = icmp eq i16 %65, 0
  br i1 %tobool66.not, label %sw.default.out_crit_edge, label %land.lhs.true

sw.default.out_crit_edge:                         ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

land.lhs.true:                                    ; preds = %sw.default
  %66 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %inode, align 8
  %68 = and i16 %67, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 -24576, i16 %68)
  %cmp70 = icmp eq i16 %68, -24576
  br i1 %cmp70, label %lor.lhs.false, label %land.lhs.true.if.then74_crit_edge

land.lhs.true.if.then74_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then74

lor.lhs.false:                                    ; preds = %land.lhs.true
  %69 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 6), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool.i.not = icmp eq i8 %69, 0
  br i1 %tobool.i.not, label %lor.lhs.false.out_crit_edge, label %lor.lhs.false.if.then74_crit_edge

lor.lhs.false.if.then74_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then74

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then74:                                        ; preds = %lor.lhs.false.if.then74_crit_edge, %land.lhs.true.if.then74_crit_edge
  %tobool75.not = icmp eq ptr %opt_dentry, null
  br i1 %tobool75.not, label %if.else78, label %dget.exit210

dget.exit210:                                     ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #25
  %d_lockref.i207 = getelementptr inbounds %struct.dentry, ptr %opt_dentry, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i207) #23
  br label %if.end87

if.else78:                                        ; preds = %if.then74
  %call79 = tail call ptr @d_find_alias(ptr noundef %inode) #23
  %tobool80.not = icmp eq ptr %call79, null
  br i1 %tobool80.not, label %if.end84, label %if.else78.if.end87_crit_edge

if.else78.if.end87_crit_edge:                     ; preds = %if.else78
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end87

if.end84:                                         ; preds = %if.else78
  %call82 = tail call ptr @d_find_any_alias(ptr noundef %inode) #23
  %tobool85.not = icmp eq ptr %call82, null
  br i1 %tobool85.not, label %if.end84.out_invalid_crit_edge, label %if.end84.if.end87_crit_edge

if.end84.if.end87_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end87

if.end84.out_invalid_crit_edge:                   ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_invalid

if.end87:                                         ; preds = %if.end84.if.end87_crit_edge, %if.else78.if.end87_crit_edge, %dget.exit210
  %dentry.1216 = phi ptr [ %call82, %if.end84.if.end87_crit_edge ], [ %call79, %if.else78.if.end87_crit_edge ], [ %opt_dentry, %dget.exit210 ]
  %70 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %flags, align 2
  %call89 = call fastcc i32 @selinux_genfs_get_sid(ptr noundef nonnull %dentry.1216, i16 noundef zeroext %35, i16 noundef zeroext %71, ptr noundef nonnull %sid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %if.end92, label %if.then91

if.then91:                                        ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #25
  call void @dput(ptr noundef nonnull %dentry.1216) #23
  br label %out

if.end92:                                         ; preds = %if.end87
  %72 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %flags, align 2
  %74 = and i16 %73, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %74)
  %tobool96.not = icmp eq i16 %74, 0
  br i1 %tobool96.not, label %if.end92.if.end107_crit_edge, label %land.lhs.true97

if.end92.if.end107_crit_edge:                     ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end107

land.lhs.true97:                                  ; preds = %if.end92
  %i_opflags98 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 1
  %75 = ptrtoint ptr %i_opflags98 to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %i_opflags98, align 2
  %77 = and i16 %76, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %tobool101.not = icmp eq i16 %77, 0
  br i1 %tobool101.not, label %land.lhs.true97.if.end107_crit_edge, label %if.then102

land.lhs.true97.if.end107_crit_edge:              ; preds = %land.lhs.true97
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end107

if.then102:                                       ; preds = %land.lhs.true97
  %78 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %sid, align 4
  %call103 = call fastcc i32 @inode_doinit_use_xattr(ptr noundef %inode, ptr noundef nonnull %dentry.1216, i32 noundef %79, ptr noundef nonnull %sid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call103)
  %tobool104.not = icmp eq i32 %call103, 0
  br i1 %tobool104.not, label %if.then102.if.end107_crit_edge, label %if.then105

if.then102.if.end107_crit_edge:                   ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end107

if.then105:                                       ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #25
  call void @dput(ptr noundef nonnull %dentry.1216) #23
  br label %out

if.end107:                                        ; preds = %if.then102.if.end107_crit_edge, %land.lhs.true97.if.end107_crit_edge, %if.end92.if.end107_crit_edge
  call void @dput(ptr noundef nonnull %dentry.1216) #23
  br label %out

out:                                              ; preds = %if.end107, %if.then105, %if.then91, %lor.lhs.false.out_crit_edge, %sw.default.out_crit_edge, %sw.bb61, %sw.bb55, %sw.bb54, %if.end48, %if.then35, %if.end25.out_crit_edge
  %rc.1 = phi i32 [ %call89, %if.then91 ], [ %call103, %if.then105 ], [ 0, %if.end107 ], [ 0, %lor.lhs.false.out_crit_edge ], [ 0, %sw.default.out_crit_edge ], [ 0, %sw.bb61 ], [ %call57, %sw.bb55 ], [ 0, %sw.bb54 ], [ %call50, %if.end48 ], [ 0, %if.then35 ], [ 0, %if.end25.out_crit_edge ]
  call void @_raw_spin_lock(ptr noundef %lock) #23
  %80 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %initialized, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %81)
  %cmp112 = icmp eq i8 %81, 2
  br i1 %cmp112, label %if.then114, label %out.out_unlock_crit_edge

out.out_unlock_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_unlock

if.then114:                                       ; preds = %out
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rc.1)
  %tobool115.not = icmp eq i32 %rc.1, 0
  br i1 %tobool115.not, label %if.end118, label %if.then116

if.then116:                                       ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #25
  %82 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 0, ptr %initialized, align 2
  br label %out_unlock

if.end118:                                        ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #25
  %83 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %83)
  store i8 1, ptr %initialized, align 2
  %84 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %sid, align 4
  %86 = ptrtoint ptr %sid28 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %85, ptr %sid28, align 4
  br label %out_unlock

out_unlock:                                       ; preds = %if.end118, %if.then116, %out.out_unlock_crit_edge, %if.end23, %if.end.out_unlock_crit_edge
  %rc.2 = phi i32 [ 0, %if.end.out_unlock_crit_edge ], [ %rc.1, %if.then116 ], [ 0, %if.end118 ], [ %rc.1, %out.out_unlock_crit_edge ], [ 0, %if.end23 ]
  call void @_raw_spin_unlock(ptr noundef %lock) #23
  br label %cleanup

out_invalid:                                      ; preds = %if.end84.out_invalid_crit_edge, %if.end45.out_invalid_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %lock) #23
  %87 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %initialized, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %88)
  %cmp126 = icmp eq i8 %88, 2
  br i1 %cmp126, label %if.then128, label %out_invalid.if.end131_crit_edge

out_invalid.if.end131_crit_edge:                  ; preds = %out_invalid
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end131

if.then128:                                       ; preds = %out_invalid
  call void @__sanitizer_cov_trace_pc() #25
  %89 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 0, ptr %initialized, align 2
  %90 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %sid, align 4
  %92 = ptrtoint ptr %sid28 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %91, ptr %sid28, align 4
  br label %if.end131

if.end131:                                        ; preds = %if.then128, %out_invalid.if.end131_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end131, %out_unlock, %selinux_inode.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %rc.2, %out_unlock ], [ 0, %if.end131 ], [ 0, %selinux_inode.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @igrab(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__vfs_getxattr(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_genfs_sid(ptr noundef, ptr noundef, ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i16 @inode_mode_to_security_class(i16 noundef zeroext %mode) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = and i16 %mode, -4096
  %and = zext i16 %0 to i32
  %1 = add nsw i32 %and, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %1)
  %2 = icmp ult i32 %1, 49152
  br i1 %2, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %3 = lshr exact i32 %1, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.inode_mode_to_security_class, i32 0, i32 %3
  %4 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %4)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %retval.0 = phi i16 [ %switch.load, %switch.lookup ], [ 7, %entry.return_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_find_alias(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_find_any_alias(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @inode_doinit_use_xattr(ptr noundef %inode, ptr noundef %dentry, i32 noundef %def_sid, ptr noundef %sid) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3136, i32 noundef 256) #30
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr i8, ptr %call7.i, i32 255
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %arrayidx, align 1
  %call1 = tail call i32 @__vfs_getxattr(ptr noundef %dentry, ptr noundef %inode, ptr noundef nonnull @.str.38, ptr noundef nonnull %call7.i, i32 noundef 255) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -34, i32 %call1)
  %cmp = icmp eq i32 %call1, -34
  br i1 %cmp, label %if.then2, label %if.end.if.end14_crit_edge

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

if.then2:                                         ; preds = %if.end
  tail call void @kfree(ptr noundef nonnull %call7.i) #23
  %call3 = tail call i32 @__vfs_getxattr(ptr noundef %dentry, ptr noundef %inode, ptr noundef nonnull @.str.38, ptr noundef null, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.then2.cleanup_crit_edge, label %if.end8.i

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end8.i:                                        ; preds = %if.then2
  %add7 = add nuw i32 %call3, 1
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add7, i32 noundef 3136) #31
  %tobool9.not = icmp eq ptr %call9.i, null
  br i1 %tobool9.not, label %if.end8.i.cleanup_crit_edge, label %if.end11

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end11:                                         ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  %arrayidx12 = getelementptr i8, ptr %call9.i, i32 %call3
  %2 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %arrayidx12, align 1
  %call13 = tail call i32 @__vfs_getxattr(ptr noundef %dentry, ptr noundef %inode, ptr noundef nonnull @.str.38, ptr noundef nonnull %call9.i, i32 noundef %call3) #23
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %if.end.if.end14_crit_edge
  %rc.0 = phi i32 [ %call13, %if.end11 ], [ %call1, %if.end.if.end14_crit_edge ]
  %context.0 = phi ptr [ %call9.i, %if.end11 ], [ %call7.i, %if.end.if.end14_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rc.0)
  %cmp15 = icmp slt i32 %rc.0, 0
  br i1 %cmp15, label %if.then16, label %if.end21

if.then16:                                        ; preds = %if.end14
  tail call void @kfree(ptr noundef nonnull %context.0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -61, i32 %rc.0)
  %cmp17.not = icmp eq i32 %rc.0, -61
  br i1 %cmp17.not, label %if.end20, label %do.end

do.end:                                           ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #25
  %sub = sub i32 0, %rc.0
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_id = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 39
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %5 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %i_ino, align 8
  %call19 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.50, ptr noundef nonnull @.str.51, i32 noundef %sub, ptr noundef %s_id, i32 noundef %6) #26
  br label %cleanup

if.end20:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %def_sid, ptr %sid, align 4
  br label %cleanup

if.end21:                                         ; preds = %if.end14
  %call22 = tail call i32 @security_context_to_sid_default(ptr noundef nonnull @selinux_state, ptr noundef nonnull %context.0, i32 noundef %rc.0, ptr noundef %sid, i32 noundef %def_sid, i32 noundef 3136) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end21.if.end47_crit_edge, label %if.then24

if.end21.if.end47_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.then24:                                        ; preds = %if.end21
  %i_sb25 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %8 = ptrtoint ptr %i_sb25 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_sb25, align 4
  %s_id26 = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 39
  %i_ino28 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %10 = ptrtoint ptr %i_ino28 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_ino28, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call22)
  %cmp29 = icmp eq i32 %call22, -22
  br i1 %cmp29, label %if.then30, label %do.end42

if.then30:                                        ; preds = %if.then24
  %call31 = tail call i32 @___ratelimit(ptr noundef nonnull @inode_doinit_use_xattr._rs, ptr noundef nonnull @.str.51) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then30.if.end47_crit_edge, label %do.end36

if.then30.if.end47_crit_edge:                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

do.end36:                                         ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #25
  %call38 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54, i32 noundef %11, ptr noundef %s_id26, ptr noundef nonnull %context.0) #26
  br label %if.end47

do.end42:                                         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #25
  %sub44 = sub i32 0, %call22
  %call45 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.51, ptr noundef nonnull %context.0, i32 noundef %sub44, ptr noundef %s_id26, i32 noundef %11) #26
  br label %if.end47

if.end47:                                         ; preds = %do.end42, %do.end36, %if.then30.if.end47_crit_edge, %if.end21.if.end47_crit_edge
  tail call void @kfree(ptr noundef nonnull %context.0) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %if.end20, %do.end, %if.end8.i.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rc.0, %do.end ], [ 0, %if.end20 ], [ 0, %if.end47 ], [ -12, %entry.cleanup_crit_edge ], [ %call3, %if.then2.cleanup_crit_edge ], [ -12, %if.end8.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_genfs_get_sid(ptr noundef %dentry, i16 noundef zeroext %tclass, i16 noundef zeroext %flags, ptr noundef %sid) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %d_sb = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 9
  %0 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_sb, align 4
  %call = tail call i32 @__get_free_pages(i32 noundef 3264, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = inttoptr i32 %call to ptr
  %call1 = tail call ptr @dentry_path_raw(ptr noundef %dentry, ptr noundef nonnull %2, i32 noundef 4096) #23
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %3 = ptrtoint ptr %call1 to i32
  br label %if.end20

if.else:                                          ; preds = %if.end
  %4 = and i16 %flags, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool5.not = icmp eq i16 %4, 0
  br i1 %tobool5.not, label %if.else.if.end14_crit_edge, label %while.cond.preheader

if.else.if.end14_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

while.cond.preheader:                             ; preds = %if.else
  %arrayidx35 = getelementptr i8, ptr %call1, i32 1
  %5 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx35, align 1
  %7 = add i8 %6, -48
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %7)
  %8 = icmp ult i8 %7, 10
  br i1 %8, label %while.cond.preheader.while.body_crit_edge, label %while.cond.preheader.if.end14_crit_edge

while.cond.preheader.if.end14_crit_edge:          ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %arrayidx36 = phi ptr [ %arrayidx, %while.body.while.body_crit_edge ], [ %arrayidx35, %while.cond.preheader.while.body_crit_edge ]
  %9 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 47, ptr %arrayidx36, align 1
  %arrayidx = getelementptr i8, ptr %arrayidx36, i32 1
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  %12 = add i8 %11, -48
  %13 = icmp ult i8 %12, 10
  br i1 %13, label %while.body.while.body_crit_edge, label %while.body.if.end14_crit_edge

while.body.if.end14_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

if.end14:                                         ; preds = %while.body.if.end14_crit_edge, %while.cond.preheader.if.end14_crit_edge, %if.else.if.end14_crit_edge
  %path.1 = phi ptr [ %call1, %if.else.if.end14_crit_edge ], [ %call1, %while.cond.preheader.if.end14_crit_edge ], [ %arrayidx36, %while.body.if.end14_crit_edge ]
  %s_type = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %s_type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %s_type, align 32
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %call15 = tail call i32 @security_genfs_sid(ptr noundef nonnull @selinux_state, ptr noundef %17, ptr noundef %path.1, i16 noundef zeroext %tclass, ptr noundef %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call15)
  %cmp16 = icmp eq i32 %call15, -2
  br i1 %cmp16, label %if.then18, label %if.end14.if.end20_crit_edge

if.end14.if.end20_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20

if.then18:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  %18 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 3, ptr %sid, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end14.if.end20_crit_edge, %if.then3
  %rc.0 = phi i32 [ %3, %if.then3 ], [ 0, %if.then18 ], [ %call15, %if.end14.if.end20_crit_edge ]
  tail call void @free_pages(i32 noundef %call, i32 noundef 0) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rc.0, %if.end20 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockref_get(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_context_to_sid_default(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dentry_path_raw(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_avc_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @avc_init() local_unnamed_addr #4 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @avtab_cache_init() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @ebitmap_cache_init() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @hashtab_cache_init() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_add_hooks(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @avc_add_callback(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_netcache_avc_callback(i32 noundef %event) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %event)
  %cmp = icmp eq i32 %event, 8
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @sel_netif_flush() #23
  tail call void @sel_netnode_flush() #23
  tail call void @sel_netport_flush() #23
  tail call void @synchronize_net() #23
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_lsm_notifier_avc_callback(i32 noundef %event) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %event)
  %cmp = icmp eq i32 %event, 8
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @sel_ib_pkey_flush() #23
  %call = tail call i32 @call_blocking_lsm_notifier(i32 noundef 0, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @fs_validate_description(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sel_netif_flush() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sel_netnode_flush() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sel_netport_flush() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_net() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sel_ib_pkey_flush() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @call_blocking_lsm_notifier(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_param_is_string(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_subsys(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_nf_register(ptr noundef %net) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nf_register_net_hooks(ptr noundef %net, ptr noundef nonnull @selinux_nf_ops, i32 noundef 6) #23
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_nf_unregister(ptr noundef %net) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @nf_unregister_net_hooks(ptr noundef %net, ptr noundef nonnull @selinux_nf_ops, i32 noundef 6) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nf_register_net_hooks(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ip_postroute(ptr nocapture noundef readnone %priv, ptr noundef %skb, ptr nocapture noundef readonly %state) #1 align 64 {
entry:
  %xfrm_sid.i178 = alloca i32, align 4
  %nlbl_sid.i179 = alloca i32, align 4
  %nlbl_type.i180 = alloca i32, align 4
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  %proto.i = alloca i8, align 1
  %peer_sid = alloca i32, align 4
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  %addrp = alloca ptr, align 4
  %skb_sid = alloca i32, align 4
  %if_sid = alloca i32, align 4
  %node_sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %peer_sid) #23
  %0 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %peer_sid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %1 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %2 = call ptr @memset(ptr %net, i32 0, i32 48)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addrp) #23
  %3 = ptrtoint ptr %addrp to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %addrp, align 4, !annotation !376
  %4 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4), align 4, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.i.not = icmp eq i8 %4, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %5 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %6 = getelementptr inbounds i8, ptr %net.i, i32 4
  %7 = call ptr @memset(ptr %6, i32 0, i32 44)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %proto.i) #23
  %8 = ptrtoint ptr %proto.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %proto.i, align 1
  %9 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %tobool.not.i.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i.i, label %if.then.selinux_ip_postroute_compat.exit_crit_edge, label %land.lhs.true.i.i.i

if.then.selinux_ip_postroute_compat.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_ip_postroute_compat.exit

land.lhs.true.i.i.i:                              ; preds = %if.then
  %skc_state.i.i.i = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %skc_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %13)
  %cmp.i.i.i = icmp eq i8 %13, 12
  br i1 %cmp.i.i.i, label %skb_to_full_sk.exit.i, label %land.lhs.true.i.i.i.if.end.i_crit_edge

land.lhs.true.i.i.i.if.end.i_crit_edge:           ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

skb_to_full_sk.exit.i:                            ; preds = %land.lhs.true.i.i.i
  %14 = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 13
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 8
  %cmp.i = icmp eq ptr %16, null
  br i1 %cmp.i, label %skb_to_full_sk.exit.i.selinux_ip_postroute_compat.exit_crit_edge, label %skb_to_full_sk.exit.i.if.end.i_crit_edge

skb_to_full_sk.exit.i.if.end.i_crit_edge:         ; preds = %skb_to_full_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

skb_to_full_sk.exit.i.selinux_ip_postroute_compat.exit_crit_edge: ; preds = %skb_to_full_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_ip_postroute_compat.exit

if.end.i:                                         ; preds = %skb_to_full_sk.exit.i.if.end.i_crit_edge, %land.lhs.true.i.i.i.if.end.i_crit_edge
  %sk.addr.0.i.i34.i = phi ptr [ %16, %skb_to_full_sk.exit.i.if.end.i_crit_edge ], [ %11, %land.lhs.true.i.i.i.if.end.i_crit_edge ]
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %sk.addr.0.i.i34.i, i32 0, i32 73
  %17 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sk_security.i, align 8
  %19 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %20 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %net.i, ptr %u.i, align 4
  %out.i = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 3
  %21 = ptrtoint ptr %out.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %out.i, align 4
  %ifindex.i = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 17
  %23 = ptrtoint ptr %ifindex.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ifindex.i, align 4
  %25 = ptrtoint ptr %net.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %net.i, align 4
  %pf.i = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 1
  %26 = ptrtoint ptr %pf.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %pf.i, align 1
  %conv.i = zext i8 %27 to i16
  %family.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 2
  %28 = ptrtoint ptr %family.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv.i, ptr %family.i, align 4
  %call3.i = call fastcc i32 @selinux_parse_skb(ptr noundef %skb, ptr noundef nonnull %ad.i, ptr noundef null, i32 noundef 0, ptr noundef nonnull %proto.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i, label %if.end5.i, label %if.end.i.selinux_ip_postroute_compat.exit_crit_edge

if.end.i.selinux_ip_postroute_compat.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_ip_postroute_compat.exit

if.end5.i:                                        ; preds = %if.end.i
  %29 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.i.not.i.i = icmp eq i8 %29, 0
  br i1 %tobool.i.not.i.i, label %selinux_secmark_enabled.exit.i, label %if.end5.i.if.then8.i_crit_edge

if.end5.i.if.then8.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then8.i

selinux_secmark_enabled.exit.i:                   ; preds = %if.end5.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  %30 = load volatile i32, ptr @selinux_secmark_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.i.not.i = icmp eq i32 %30, 0
  br i1 %tobool.i.not.i, label %selinux_secmark_enabled.exit.i.if.end13.i_crit_edge, label %selinux_secmark_enabled.exit.i.if.then8.i_crit_edge

selinux_secmark_enabled.exit.i.if.then8.i_crit_edge: ; preds = %selinux_secmark_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then8.i

selinux_secmark_enabled.exit.i.if.end13.i_crit_edge: ; preds = %selinux_secmark_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

if.then8.i:                                       ; preds = %selinux_secmark_enabled.exit.i.if.then8.i_crit_edge, %if.end5.i.if.then8.i_crit_edge
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %18, i32 0, i32 2
  %31 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sid.i, align 4
  %secmark.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 12
  %33 = ptrtoint ptr %secmark.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %secmark.i, align 8
  %call9.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %32, i32 noundef %34, i16 noundef zeroext 49, i32 noundef 1, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %if.then8.i.if.end13.i_crit_edge, label %if.then8.i.selinux_ip_postroute_compat.exit_crit_edge

if.then8.i.selinux_ip_postroute_compat.exit_crit_edge: ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_ip_postroute_compat.exit

if.then8.i.if.end13.i_crit_edge:                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then8.i.if.end13.i_crit_edge, %selinux_secmark_enabled.exit.i.if.end13.i_crit_edge
  %sid14.i = getelementptr inbounds %struct.sk_security_struct, ptr %18, i32 0, i32 2
  %35 = ptrtoint ptr %sid14.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %sid14.i, align 4
  %37 = ptrtoint ptr %proto.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %proto.i, align 1
  %call15.i = call i32 @selinux_xfrm_postroute_last(i32 noundef %36, ptr noundef %skb, ptr noundef nonnull %ad.i, i8 noundef zeroext %38) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  %..i = select i1 %tobool16.not.i, i32 1, i32 7274496
  br label %selinux_ip_postroute_compat.exit

selinux_ip_postroute_compat.exit:                 ; preds = %if.end13.i, %if.then8.i.selinux_ip_postroute_compat.exit_crit_edge, %if.end.i.selinux_ip_postroute_compat.exit_crit_edge, %skb_to_full_sk.exit.i.selinux_ip_postroute_compat.exit_crit_edge, %if.then.selinux_ip_postroute_compat.exit_crit_edge
  %retval.0.i = phi i32 [ 1, %skb_to_full_sk.exit.i.selinux_ip_postroute_compat.exit_crit_edge ], [ 0, %if.end.i.selinux_ip_postroute_compat.exit_crit_edge ], [ 7274496, %if.then8.i.selinux_ip_postroute_compat.exit_crit_edge ], [ %..i, %if.end13.i ], [ 1, %if.then.selinux_ip_postroute_compat.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %proto.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %cleanup103

if.end:                                           ; preds = %entry
  %39 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.i.not.i143 = icmp eq i8 %39, 0
  br i1 %tobool.i.not.i143, label %lor.rhs.i, label %if.end.selinux_secmark_enabled.exit_crit_edge

if.end.selinux_secmark_enabled.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_secmark_enabled.exit

lor.rhs.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  %40 = load volatile i32, ptr @selinux_secmark_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.i144 = icmp ne i32 %40, 0
  %phi.cast.i = zext i1 %tobool.i144 to i32
  br label %selinux_secmark_enabled.exit

selinux_secmark_enabled.exit:                     ; preds = %lor.rhs.i, %if.end.selinux_secmark_enabled.exit_crit_edge
  %41 = phi i32 [ 1, %if.end.selinux_secmark_enabled.exit_crit_edge ], [ %phi.cast.i, %lor.rhs.i ]
  %42 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool.i.not.i145 = icmp eq i8 %42, 0
  br i1 %tobool.i.not.i145, label %lor.lhs.false.i, label %selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge

selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge: ; preds = %selinux_secmark_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_peerlbl_enabled.exit.thread

lor.lhs.false.i:                                  ; preds = %selinux_secmark_enabled.exit
  %call1.i = tail call i32 @netlbl_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i146 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i146, label %selinux_peerlbl_enabled.exit, label %lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge

lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_peerlbl_enabled.exit.thread

selinux_peerlbl_enabled.exit.thread:              ; preds = %lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge, %selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not195 = icmp eq i32 %41, 0
  br label %if.end6

selinux_peerlbl_enabled.exit:                     ; preds = %lor.lhs.false.i
  %call.i.i.i.i147 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_xfrm_refcount, i32 noundef 4) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @selinux_xfrm_refcount to i32))
  %43 = load volatile i32, ptr @selinux_xfrm_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %43)
  %cmp.i.i = icmp slt i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not = icmp eq i32 %41, 0
  %or.cond = select i1 %tobool.not, i1 %cmp.i.i, i1 false
  br i1 %or.cond, label %selinux_peerlbl_enabled.exit.cleanup103_crit_edge, label %selinux_peerlbl_enabled.exit.if.end6_crit_edge

selinux_peerlbl_enabled.exit.if.end6_crit_edge:   ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end6

selinux_peerlbl_enabled.exit.cleanup103_crit_edge: ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

if.end6:                                          ; preds = %selinux_peerlbl_enabled.exit.if.end6_crit_edge, %selinux_peerlbl_enabled.exit.thread
  %tobool4.not199 = phi i1 [ false, %selinux_peerlbl_enabled.exit.thread ], [ %cmp.i.i, %selinux_peerlbl_enabled.exit.if.end6_crit_edge ]
  %tobool.not198 = phi i1 [ %tobool.not195, %selinux_peerlbl_enabled.exit.thread ], [ %tobool.not, %selinux_peerlbl_enabled.exit.if.end6_crit_edge ]
  %44 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %44, align 4
  %tobool.not.i.i = icmp eq ptr %46, null
  br i1 %tobool.not.i.i, label %if.end6.skb_to_full_sk.exit_crit_edge, label %land.lhs.true.i.i

if.end6.skb_to_full_sk.exit_crit_edge:            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_to_full_sk.exit

land.lhs.true.i.i:                                ; preds = %if.end6
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %46, i32 0, i32 4
  %47 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load volatile i8, ptr %skc_state.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %48)
  %cmp.i.i149 = icmp eq i8 %48, 12
  br i1 %cmp.i.i149, label %if.then.i.i, label %land.lhs.true.i.i.skb_to_full_sk.exit_crit_edge

land.lhs.true.i.i.skb_to_full_sk.exit_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_to_full_sk.exit

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %49 = getelementptr inbounds %struct.sock_common, ptr %46, i32 0, i32 13
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  br label %skb_to_full_sk.exit

skb_to_full_sk.exit:                              ; preds = %if.then.i.i, %land.lhs.true.i.i.skb_to_full_sk.exit_crit_edge, %if.end6.skb_to_full_sk.exit_crit_edge
  %sk.addr.0.i.i = phi ptr [ %51, %if.then.i.i ], [ %46, %land.lhs.true.i.i.skb_to_full_sk.exit_crit_edge ], [ null, %if.end6.skb_to_full_sk.exit_crit_edge ]
  %52 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %52, align 8
  %and.i = and i32 %54, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i150 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i150, label %skb_to_full_sk.exit.skb_dst.exit_crit_edge, label %land.lhs.true.i

skb_to_full_sk.exit.skb_dst.exit_crit_edge:       ; preds = %skb_to_full_sk.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_dst.exit

land.lhs.true.i:                                  ; preds = %skb_to_full_sk.exit
  %call.i = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %land.rhs.i, label %land.lhs.true.i.skb_dst.exitthread-pre-split_crit_edge

land.lhs.true.i.skb_dst.exitthread-pre-split_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_dst.exitthread-pre-split

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %call2.i = tail call i32 @rcu_read_lock_bh_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.skb_dst.exitthread-pre-split_crit_edge, !prof !380

land.rhs.i.skb_dst.exitthread-pre-split_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_dst.exitthread-pre-split

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.76, i32 noundef 1013, i32 noundef 9, ptr noundef null) #23
  br label %skb_dst.exitthread-pre-split

skb_dst.exitthread-pre-split:                     ; preds = %do.end.i, %land.rhs.i.skb_dst.exitthread-pre-split_crit_edge, %land.lhs.true.i.skb_dst.exitthread-pre-split_crit_edge
  %55 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %55)
  %.pr = load i32, ptr %52, align 8
  br label %skb_dst.exit

skb_dst.exit:                                     ; preds = %skb_dst.exitthread-pre-split, %skb_to_full_sk.exit.skb_dst.exit_crit_edge
  %56 = phi i32 [ %.pr, %skb_dst.exitthread-pre-split ], [ %54, %skb_to_full_sk.exit.skb_dst.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %56)
  %cmp.not = icmp ult i32 %56, 2
  br i1 %cmp.not, label %skb_dst.exit.if.end17_crit_edge, label %land.lhs.true9

skb_dst.exit.if.end17_crit_edge:                  ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17

land.lhs.true9:                                   ; preds = %skb_dst.exit
  %and.i152 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i152)
  %tobool.not.i153 = icmp eq i32 %and.i152, 0
  br i1 %tobool.not.i153, label %land.lhs.true9.skb_dst.exit163_crit_edge, label %land.lhs.true.i156

land.lhs.true9.skb_dst.exit163_crit_edge:         ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_dst.exit163

land.lhs.true.i156:                               ; preds = %land.lhs.true9
  %call.i154 = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i154)
  %tobool1.not.i155 = icmp eq i32 %call.i154, 0
  br i1 %tobool1.not.i155, label %land.rhs.i159, label %land.lhs.true.i156.skb_dst.exit163_crit_edge

land.lhs.true.i156.skb_dst.exit163_crit_edge:     ; preds = %land.lhs.true.i156
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_dst.exit163

land.rhs.i159:                                    ; preds = %land.lhs.true.i156
  %call2.i157 = tail call i32 @rcu_read_lock_bh_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i157)
  %tobool3.not.i158 = icmp eq i32 %call2.i157, 0
  br i1 %tobool3.not.i158, label %do.end.i160, label %land.rhs.i159.skb_dst.exit163_crit_edge, !prof !380

land.rhs.i159.skb_dst.exit163_crit_edge:          ; preds = %land.rhs.i159
  call void @__sanitizer_cov_trace_pc() #25
  br label %skb_dst.exit163

do.end.i160:                                      ; preds = %land.rhs.i159
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.76, i32 noundef 1013, i32 noundef 9, ptr noundef null) #23
  br label %skb_dst.exit163

skb_dst.exit163:                                  ; preds = %do.end.i160, %land.rhs.i159.skb_dst.exit163_crit_edge, %land.lhs.true.i156.skb_dst.exit163_crit_edge, %land.lhs.true9.skb_dst.exit163_crit_edge
  %57 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %52, align 8
  %and25.i161 = and i32 %58, -2
  %59 = inttoptr i32 %and25.i161 to ptr
  %xfrm = getelementptr inbounds %struct.dst_entry, ptr %59, i32 0, i32 4
  %60 = ptrtoint ptr %xfrm to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %xfrm, align 4
  %cmp11.not = icmp eq ptr %61, null
  br i1 %cmp11.not, label %skb_dst.exit163.if.end17_crit_edge, label %land.lhs.true12

skb_dst.exit163.if.end17_crit_edge:               ; preds = %skb_dst.exit163
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17

land.lhs.true12:                                  ; preds = %skb_dst.exit163
  %tobool13.not = icmp eq ptr %sk.addr.0.i.i, null
  br i1 %tobool13.not, label %land.lhs.true12.cleanup103_crit_edge, label %land.lhs.true14

land.lhs.true12.cleanup103_crit_edge:             ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %sk.addr.0.i.i, i32 0, i32 4
  %62 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i164 = zext i8 %63 to i32
  %shl.i = shl nuw i32 1, %conv.i164
  %and.i165 = and i32 %shl.i, 5120
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i165)
  %tobool.i166.not = icmp eq i32 %and.i165, 0
  br i1 %tobool.i166.not, label %land.lhs.true14.cleanup103_crit_edge, label %if.end17.thread

land.lhs.true14.cleanup103_crit_edge:             ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

if.end17.thread:                                  ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #25
  %pf200 = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 1
  %64 = ptrtoint ptr %pf200 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %pf200, align 1
  %conv201 = zext i8 %65 to i16
  br label %if.else28

if.end17:                                         ; preds = %skb_dst.exit163.if.end17_crit_edge, %skb_dst.exit.if.end17_crit_edge
  %pf = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 1
  %66 = ptrtoint ptr %pf to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %pf, align 1
  %conv = zext i8 %67 to i16
  %cmp18 = icmp eq ptr %sk.addr.0.i.i, null
  br i1 %cmp18, label %if.then20, label %if.end17.if.else28_crit_edge

if.end17.if.else28_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else28

if.then20:                                        ; preds = %if.end17
  %skb_iif = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 7
  %68 = ptrtoint ptr %skb_iif to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %skb_iif, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool21.not = icmp eq i32 %69, 0
  br i1 %tobool21.not, label %if.else, label %if.then22

if.then22:                                        ; preds = %if.then20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %70 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %71 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %72 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i167 = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i167)
  %tobool.not.i168 = icmp eq i32 %call.i167, 0
  br i1 %tobool.not.i168, label %if.end.i170, label %if.then22.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.then22.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end.i170:                                      ; preds = %if.then22
  %call3.i169 = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %conv, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i169)
  %tobool4.not.i = icmp eq i32 %call3.i169, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i170.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.end.i170.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.end.i170
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end12.i:                                       ; preds = %if.end.i170
  %73 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %nlbl_sid.i, align 4
  %75 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %nlbl_type.i, align 4
  %77 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %74, i32 noundef %76, i32 noundef %78, ptr noundef nonnull %peer_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %selinux_skb_peerlbl_sid.exit, label %do.end.i171, !prof !381

do.end.i171:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit.thread

selinux_skb_peerlbl_sid.exit.thread:              ; preds = %do.end.i171, %if.end.i170.selinux_skb_peerlbl_sid.exit.thread_crit_edge, %if.then22.selinux_skb_peerlbl_sid.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %cleanup103

selinux_skb_peerlbl_sid.exit:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %if.end63

if.else:                                          ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #25
  %79 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 1, ptr %peer_sid, align 4
  br label %if.end63

if.else28:                                        ; preds = %if.end17.if.else28_crit_edge, %if.end17.thread
  %conv204 = phi i16 [ %conv201, %if.end17.thread ], [ %conv, %if.end17.if.else28_crit_edge ]
  %80 = phi i8 [ %65, %if.end17.thread ], [ %67, %if.end17.if.else28_crit_edge ]
  %skc_state.i173 = getelementptr inbounds %struct.sock_common, ptr %sk.addr.0.i.i, i32 0, i32 4
  %81 = ptrtoint ptr %skc_state.i173 to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load volatile i8, ptr %skc_state.i173, align 2
  %conv.i174 = zext i8 %82 to i32
  %shl.i175 = shl nuw i32 1, %conv.i174
  %and.i176 = and i32 %shl.i175, 5120
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i176)
  %tobool.i177.not = icmp eq i32 %and.i176, 0
  br i1 %tobool.i177.not, label %if.else58, label %if.then30

if.then30:                                        ; preds = %if.else28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb_sid) #23
  %83 = ptrtoint ptr %skb_sid to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 -1, ptr %skb_sid, align 4, !annotation !376
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk.addr.0.i.i, i32 0, i32 73
  %84 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %sk_security, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i178) #23
  %86 = ptrtoint ptr %xfrm_sid.i178 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 -1, ptr %xfrm_sid.i178, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i179) #23
  %87 = ptrtoint ptr %nlbl_sid.i179 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 -1, ptr %nlbl_sid.i179, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i180) #23
  %88 = ptrtoint ptr %nlbl_type.i180 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 -1, ptr %nlbl_type.i180, align 4, !annotation !376
  %call.i181 = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i178) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i181)
  %tobool.not.i182 = icmp eq i32 %call.i181, 0
  br i1 %tobool.not.i182, label %if.end.i185, label %if.then30.selinux_skb_peerlbl_sid.exit192.thread_crit_edge, !prof !381

if.then30.selinux_skb_peerlbl_sid.exit192.thread_crit_edge: ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit192.thread

if.end.i185:                                      ; preds = %if.then30
  %call3.i183 = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %conv204, ptr noundef nonnull %nlbl_type.i180, ptr noundef nonnull %nlbl_sid.i179) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i183)
  %tobool4.not.i184 = icmp eq i32 %call3.i183, 0
  br i1 %tobool4.not.i184, label %if.end12.i188, label %if.end.i185.selinux_skb_peerlbl_sid.exit192.thread_crit_edge, !prof !381

if.end.i185.selinux_skb_peerlbl_sid.exit192.thread_crit_edge: ; preds = %if.end.i185
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit192.thread

if.end12.i188:                                    ; preds = %if.end.i185
  %89 = ptrtoint ptr %nlbl_sid.i179 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %nlbl_sid.i179, align 4
  %91 = ptrtoint ptr %nlbl_type.i180 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %nlbl_type.i180, align 4
  %93 = ptrtoint ptr %xfrm_sid.i178 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %xfrm_sid.i178, align 4
  %call13.i186 = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %90, i32 noundef %92, i32 noundef %94, ptr noundef nonnull %skb_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i186)
  %tobool14.not.i187 = icmp eq i32 %call13.i186, 0
  br i1 %tobool14.not.i187, label %if.end34, label %do.end.i190, !prof !381

do.end.i190:                                      ; preds = %if.end12.i188
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i189 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit192.thread

selinux_skb_peerlbl_sid.exit192.thread:           ; preds = %do.end.i190, %if.end.i185.selinux_skb_peerlbl_sid.exit192.thread_crit_edge, %if.then30.selinux_skb_peerlbl_sid.exit192.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i180) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i179) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i178) #23
  br label %cleanup.thread

if.end34:                                         ; preds = %if.end12.i188
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i180) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i179) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i178) #23
  %95 = ptrtoint ptr %skb_sid to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %skb_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %cmp35 = icmp eq i32 %96, 0
  br i1 %cmp35, label %if.then37, label %cleanup

if.then37:                                        ; preds = %if.end34
  %97 = zext i8 %80 to i64
  call void @__sanitizer_cov_trace_switch(i64 %97, ptr @__sancov_gen_cov_switch_values.124)
  switch i8 %80, label %if.then37.cleanup.thread_crit_edge [
    i8 2, label %sw.bb
    i8 10, label %sw.bb43
  ]

if.then37.cleanup.thread_crit_edge:               ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

sw.bb:                                            ; preds = %if.then37
  %flags = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 20
  %98 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %flags, align 4
  %100 = and i16 %99, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %100)
  %tobool40.not = icmp eq i16 %100, 0
  br i1 %tobool40.not, label %sw.bb.cleanup.thread213_crit_edge, label %sw.bb.cleanup.thread_crit_edge

sw.bb.cleanup.thread_crit_edge:                   ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

sw.bb.cleanup.thread213_crit_edge:                ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread213

sw.bb43:                                          ; preds = %if.then37
  %flags46 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 16
  %101 = ptrtoint ptr %flags46 to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %flags46, align 8
  %103 = and i16 %102, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %103)
  %tobool49.not = icmp eq i16 %103, 0
  br i1 %tobool49.not, label %sw.bb43.cleanup.thread213_crit_edge, label %sw.bb43.cleanup.thread_crit_edge

sw.bb43.cleanup.thread_crit_edge:                 ; preds = %sw.bb43
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

sw.bb43.cleanup.thread213_crit_edge:              ; preds = %sw.bb43
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread213

cleanup.thread213:                                ; preds = %sw.bb43.cleanup.thread213_crit_edge, %sw.bb.cleanup.thread213_crit_edge
  %sid209 = getelementptr inbounds %struct.sk_security_struct, ptr %85, i32 0, i32 2
  %104 = ptrtoint ptr %sid209 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %sid209, align 4
  %106 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %105, ptr %peer_sid, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb_sid) #23
  br label %if.end63

cleanup.thread:                                   ; preds = %sw.bb43.cleanup.thread_crit_edge, %sw.bb.cleanup.thread_crit_edge, %if.then37.cleanup.thread_crit_edge, %selinux_skb_peerlbl_sid.exit192.thread
  %retval.0.ph = phi i32 [ 0, %selinux_skb_peerlbl_sid.exit192.thread ], [ 7274496, %if.then37.cleanup.thread_crit_edge ], [ 1, %sw.bb43.cleanup.thread_crit_edge ], [ 1, %sw.bb.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb_sid) #23
  br label %cleanup103

cleanup:                                          ; preds = %if.end34
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %85, i32 0, i32 2
  %107 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %sid, align 4
  %call.i193 = call i32 @security_sid_mls_copy(ptr noundef nonnull @selinux_state, i32 noundef %108, i32 noundef %96, ptr noundef nonnull %peer_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i193)
  %tobool54.not = icmp eq i32 %call.i193, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb_sid) #23
  br i1 %tobool54.not, label %cleanup.if.end63_crit_edge, label %cleanup.cleanup103_crit_edge

cleanup.cleanup103_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

cleanup.if.end63_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end63

if.else58:                                        ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #25
  %sk_security60 = getelementptr inbounds %struct.sock, ptr %sk.addr.0.i.i, i32 0, i32 73
  %109 = ptrtoint ptr %sk_security60 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %sk_security60, align 8
  %sid61 = getelementptr inbounds %struct.sk_security_struct, ptr %110, i32 0, i32 2
  %111 = ptrtoint ptr %sid61 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %sid61, align 4
  %113 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %112, ptr %peer_sid, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %cleanup.if.end63_crit_edge, %cleanup.thread213, %if.else, %selinux_skb_peerlbl_sid.exit
  %conv203 = phi i16 [ %conv, %selinux_skb_peerlbl_sid.exit ], [ %conv, %if.else ], [ %conv204, %cleanup.if.end63_crit_edge ], [ %conv204, %if.else58 ], [ %conv204, %cleanup.thread213 ]
  %secmark_perm.1 = phi i32 [ 16, %selinux_skb_peerlbl_sid.exit ], [ 1, %if.else ], [ 1, %cleanup.if.end63_crit_edge ], [ 1, %if.else58 ], [ 1, %cleanup.thread213 ]
  %out = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 3
  %114 = ptrtoint ptr %out to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %out, align 4
  %ifindex64 = getelementptr inbounds %struct.net_device, ptr %115, i32 0, i32 17
  %116 = ptrtoint ptr %ifindex64 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %ifindex64, align 4
  %118 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %118)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %119 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %net, ptr %u, align 4
  %120 = ptrtoint ptr %net to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %117, ptr %net, align 4
  %family67 = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 2
  %121 = ptrtoint ptr %family67 to i32
  call void @__asan_store2_noabort(i32 %121)
  store i16 %conv203, ptr %family67, align 4
  %call68 = call fastcc i32 @selinux_parse_skb(ptr noundef %skb, ptr noundef nonnull %ad, ptr noundef nonnull %addrp, i32 noundef 0, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end71, label %if.end63.cleanup103_crit_edge

if.end63.cleanup103_crit_edge:                    ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

if.end71:                                         ; preds = %if.end63
  br i1 %tobool.not198, label %if.end71.if.end78_crit_edge, label %if.then73

if.end71.if.end78_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end78

if.then73:                                        ; preds = %if.end71
  %122 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %peer_sid, align 4
  %secmark = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 12
  %124 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %secmark, align 8
  %call74 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %123, i32 noundef %125, i16 noundef zeroext 49, i32 noundef %secmark_perm.1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %if.then73.if.end78_crit_edge, label %if.then73.cleanup103_crit_edge

if.then73.cleanup103_crit_edge:                   ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

if.then73.if.end78_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end78

if.end78:                                         ; preds = %if.then73.if.end78_crit_edge, %if.end71.if.end78_crit_edge
  br i1 %tobool4.not199, label %if.end78.if.end102_crit_edge, label %if.then80

if.end78.if.end102_crit_edge:                     ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end102

if.then80:                                        ; preds = %if.end78
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %if_sid) #23
  %126 = ptrtoint ptr %if_sid to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 -1, ptr %if_sid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %node_sid) #23
  %127 = ptrtoint ptr %node_sid to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 -1, ptr %node_sid, align 4, !annotation !376
  %net81 = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 5
  %128 = ptrtoint ptr %net81 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %net81, align 4
  %call82 = call i32 @sel_netif_sid(ptr noundef %129, i32 noundef %117, ptr noundef nonnull %if_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call82)
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %if.end85, label %if.then80.cleanup98.thread_crit_edge

if.then80.cleanup98.thread_crit_edge:             ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup98.thread

if.end85:                                         ; preds = %if.then80
  %130 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %peer_sid, align 4
  %132 = ptrtoint ptr %if_sid to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %if_sid, align 4
  %call86 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %131, i32 noundef %133, i16 noundef zeroext 20, i32 noundef 2, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %if.end89, label %if.end85.cleanup98.thread_crit_edge

if.end85.cleanup98.thread_crit_edge:              ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup98.thread

if.end89:                                         ; preds = %if.end85
  %134 = ptrtoint ptr %addrp to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %addrp, align 4
  %call90 = call i32 @sel_netnode_sid(ptr noundef %135, i16 noundef zeroext %conv203, ptr noundef nonnull %node_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call90)
  %tobool91.not = icmp eq i32 %call90, 0
  br i1 %tobool91.not, label %cleanup98, label %if.end89.cleanup98.thread_crit_edge

if.end89.cleanup98.thread_crit_edge:              ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup98.thread

cleanup98.thread:                                 ; preds = %if.end89.cleanup98.thread_crit_edge, %if.end85.cleanup98.thread_crit_edge, %if.then80.cleanup98.thread_crit_edge
  %retval.2.ph = phi i32 [ 0, %if.end89.cleanup98.thread_crit_edge ], [ 7274496, %if.end85.cleanup98.thread_crit_edge ], [ 0, %if.then80.cleanup98.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %node_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %if_sid) #23
  br label %cleanup103

cleanup98:                                        ; preds = %if.end89
  %136 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %peer_sid, align 4
  %138 = ptrtoint ptr %node_sid to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %node_sid, align 4
  %call94 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %137, i32 noundef %139, i16 noundef zeroext 19, i32 noundef 2, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %node_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %if_sid) #23
  br i1 %tobool95.not, label %cleanup98.if.end102_crit_edge, label %cleanup98.cleanup103_crit_edge

cleanup98.cleanup103_crit_edge:                   ; preds = %cleanup98
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup103

cleanup98.if.end102_crit_edge:                    ; preds = %cleanup98
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end102

if.end102:                                        ; preds = %cleanup98.if.end102_crit_edge, %if.end78.if.end102_crit_edge
  br label %cleanup103

cleanup103:                                       ; preds = %if.end102, %cleanup98.cleanup103_crit_edge, %cleanup98.thread, %if.then73.cleanup103_crit_edge, %if.end63.cleanup103_crit_edge, %cleanup.cleanup103_crit_edge, %cleanup.thread, %selinux_skb_peerlbl_sid.exit.thread, %land.lhs.true14.cleanup103_crit_edge, %land.lhs.true12.cleanup103_crit_edge, %selinux_peerlbl_enabled.exit.cleanup103_crit_edge, %selinux_ip_postroute_compat.exit
  %retval.3 = phi i32 [ 1, %if.end102 ], [ 7274496, %cleanup98.cleanup103_crit_edge ], [ 0, %cleanup.cleanup103_crit_edge ], [ %retval.0.i, %selinux_ip_postroute_compat.exit ], [ 1, %selinux_peerlbl_enabled.exit.cleanup103_crit_edge ], [ 1, %land.lhs.true14.cleanup103_crit_edge ], [ 1, %land.lhs.true12.cleanup103_crit_edge ], [ 0, %if.end63.cleanup103_crit_edge ], [ 7274496, %if.then73.cleanup103_crit_edge ], [ 0, %selinux_skb_peerlbl_sid.exit.thread ], [ %retval.0.ph, %cleanup.thread ], [ %retval.2.ph, %cleanup98.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addrp) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peer_sid) #23
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ip_forward(ptr nocapture noundef readnone %priv, ptr noundef %skb, ptr nocapture noundef readonly %state) #1 align 64 {
entry:
  %if_sid.i = alloca i32, align 4
  %node_sid.i = alloca i32, align 4
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  %addrp = alloca ptr, align 4
  %peer_sid = alloca i32, align 4
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addrp) #23
  %0 = ptrtoint ptr %addrp to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %addrp, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %peer_sid) #23
  %1 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %peer_sid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %2 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %3 = call ptr @memset(ptr %net, i32 0, i32 48)
  %4 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4), align 4, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.i.not = icmp eq i8 %4, 0
  br i1 %tobool.i.not, label %entry.cleanup43_crit_edge, label %if.end

entry.cleanup43_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup43

if.end:                                           ; preds = %entry
  %5 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.i.not.i = icmp eq i8 %5, 0
  br i1 %tobool.i.not.i, label %lor.rhs.i, label %if.end.selinux_secmark_enabled.exit_crit_edge

if.end.selinux_secmark_enabled.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_secmark_enabled.exit

lor.rhs.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  %6 = load volatile i32, ptr @selinux_secmark_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i65 = icmp ne i32 %6, 0
  %phi.cast.i = zext i1 %tobool.i65 to i32
  br label %selinux_secmark_enabled.exit

selinux_secmark_enabled.exit:                     ; preds = %lor.rhs.i, %if.end.selinux_secmark_enabled.exit_crit_edge
  %7 = phi i32 [ 1, %if.end.selinux_secmark_enabled.exit_crit_edge ], [ %phi.cast.i, %lor.rhs.i ]
  %8 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.i.not.i66 = icmp eq i8 %8, 0
  br i1 %tobool.i.not.i66, label %lor.lhs.false.i, label %selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge

selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge: ; preds = %selinux_secmark_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_peerlbl_enabled.exit.thread

lor.lhs.false.i:                                  ; preds = %selinux_secmark_enabled.exit
  %call1.i = tail call i32 @netlbl_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %selinux_peerlbl_enabled.exit, label %lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge

lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_peerlbl_enabled.exit.thread

selinux_peerlbl_enabled.exit.thread:              ; preds = %lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge, %selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not74 = icmp eq i32 %7, 0
  br label %if.end5

selinux_peerlbl_enabled.exit:                     ; preds = %lor.lhs.false.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_xfrm_refcount, i32 noundef 4) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @selinux_xfrm_refcount to i32))
  %9 = load volatile i32, ptr @selinux_xfrm_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i.i = icmp slt i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  %or.cond = select i1 %tobool.not, i1 %cmp.i.i, i1 false
  br i1 %or.cond, label %selinux_peerlbl_enabled.exit.cleanup43_crit_edge, label %selinux_peerlbl_enabled.exit.if.end5_crit_edge

selinux_peerlbl_enabled.exit.if.end5_crit_edge:   ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

selinux_peerlbl_enabled.exit.cleanup43_crit_edge: ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup43

if.end5:                                          ; preds = %selinux_peerlbl_enabled.exit.if.end5_crit_edge, %selinux_peerlbl_enabled.exit.thread
  %tobool3.not78 = phi i1 [ false, %selinux_peerlbl_enabled.exit.thread ], [ %cmp.i.i, %selinux_peerlbl_enabled.exit.if.end5_crit_edge ]
  %tobool.not77 = phi i1 [ %tobool.not74, %selinux_peerlbl_enabled.exit.thread ], [ %tobool.not, %selinux_peerlbl_enabled.exit.if.end5_crit_edge ]
  %pf = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 1
  %10 = ptrtoint ptr %pf to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %pf, align 1
  %conv = zext i8 %11 to i16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %12 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %13 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %14 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i68 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i68, label %if.end.i, label %if.end5.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.end5.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end.i:                                         ; preds = %if.end5
  %call3.i = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %conv, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end12.i:                                       ; preds = %if.end.i
  %15 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nlbl_sid.i, align 4
  %17 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nlbl_type.i, align 4
  %19 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %16, i32 noundef %18, i32 noundef %20, ptr noundef nonnull %peer_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end9, label %do.end.i, !prof !381

do.end.i:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit.thread

selinux_skb_peerlbl_sid.exit.thread:              ; preds = %do.end.i, %if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge, %if.end5.selinux_skb_peerlbl_sid.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %cleanup43

if.end9:                                          ; preds = %if.end12.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %in = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 2
  %21 = ptrtoint ptr %in to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %in, align 4
  %ifindex10 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 17
  %23 = ptrtoint ptr %ifindex10 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ifindex10, align 4
  %25 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %26 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %net, ptr %u, align 4
  %27 = ptrtoint ptr %net to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %24, ptr %net, align 4
  %family13 = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 2
  %28 = ptrtoint ptr %family13 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv, ptr %family13, align 4
  %call14 = call fastcc i32 @selinux_parse_skb(ptr noundef %skb, ptr noundef nonnull %ad, ptr noundef nonnull %addrp, i32 noundef 1, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %cmp15.not = icmp eq i32 %call14, 0
  br i1 %cmp15.not, label %if.end18, label %if.end9.cleanup43_crit_edge

if.end9.cleanup43_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup43

if.end18:                                         ; preds = %if.end9
  br i1 %tobool3.not78, label %if.end18.if.end26_crit_edge, label %if.then20

if.end18.if.end26_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then20:                                        ; preds = %if.end18
  %net21 = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 5
  %29 = ptrtoint ptr %net21 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %net21, align 4
  %31 = ptrtoint ptr %addrp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %addrp, align 4
  %33 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %peer_sid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %if_sid.i) #23
  %35 = ptrtoint ptr %if_sid.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 -1, ptr %if_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %node_sid.i) #23
  %36 = ptrtoint ptr %node_sid.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 -1, ptr %node_sid.i, align 4, !annotation !376
  %call.i69 = call i32 @sel_netif_sid(ptr noundef %30, i32 noundef %24, ptr noundef nonnull %if_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i69)
  %tobool.not.i70 = icmp eq i32 %call.i69, 0
  br i1 %tobool.not.i70, label %if.end.i72, label %if.then20.selinux_inet_sys_rcv_skb.exit.thread_crit_edge

if.then20.selinux_inet_sys_rcv_skb.exit.thread_crit_edge: ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inet_sys_rcv_skb.exit.thread

if.end.i72:                                       ; preds = %if.then20
  %37 = ptrtoint ptr %if_sid.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %if_sid.i, align 4
  %call1.i71 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %34, i32 noundef %38, i16 noundef zeroext 20, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i71)
  %tobool2.not.i = icmp eq i32 %call1.i71, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i72.selinux_inet_sys_rcv_skb.exit.thread_crit_edge

if.end.i72.selinux_inet_sys_rcv_skb.exit.thread_crit_edge: ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inet_sys_rcv_skb.exit.thread

if.end4.i:                                        ; preds = %if.end.i72
  %call5.i = call i32 @sel_netnode_sid(ptr noundef %32, i16 noundef zeroext %conv, ptr noundef nonnull %node_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %selinux_inet_sys_rcv_skb.exit, label %if.end4.i.selinux_inet_sys_rcv_skb.exit.thread_crit_edge

if.end4.i.selinux_inet_sys_rcv_skb.exit.thread_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inet_sys_rcv_skb.exit.thread

selinux_inet_sys_rcv_skb.exit.thread:             ; preds = %if.end4.i.selinux_inet_sys_rcv_skb.exit.thread_crit_edge, %if.end.i72.selinux_inet_sys_rcv_skb.exit.thread_crit_edge, %if.then20.selinux_inet_sys_rcv_skb.exit.thread_crit_edge
  %retval.0.i73.ph = phi i32 [ %call5.i, %if.end4.i.selinux_inet_sys_rcv_skb.exit.thread_crit_edge ], [ %call1.i71, %if.end.i72.selinux_inet_sys_rcv_skb.exit.thread_crit_edge ], [ %call.i69, %if.then20.selinux_inet_sys_rcv_skb.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %node_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %if_sid.i) #23
  br label %if.then24

selinux_inet_sys_rcv_skb.exit:                    ; preds = %if.end4.i
  %39 = ptrtoint ptr %node_sid.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %node_sid.i, align 4
  %call9.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %34, i32 noundef %40, i16 noundef zeroext 19, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %node_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %if_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool23.not = icmp eq i32 %call9.i, 0
  br i1 %tobool23.not, label %selinux_inet_sys_rcv_skb.exit.if.end26_crit_edge, label %selinux_inet_sys_rcv_skb.exit.if.then24_crit_edge

selinux_inet_sys_rcv_skb.exit.if.then24_crit_edge: ; preds = %selinux_inet_sys_rcv_skb.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

selinux_inet_sys_rcv_skb.exit.if.end26_crit_edge: ; preds = %selinux_inet_sys_rcv_skb.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then24:                                        ; preds = %selinux_inet_sys_rcv_skb.exit.if.then24_crit_edge, %selinux_inet_sys_rcv_skb.exit.thread
  %retval.0.i7383 = phi i32 [ %retval.0.i73.ph, %selinux_inet_sys_rcv_skb.exit.thread ], [ %call9.i, %selinux_inet_sys_rcv_skb.exit.if.then24_crit_edge ]
  call void @selinux_netlbl_err(ptr noundef %skb, i16 noundef zeroext %conv, i32 noundef %retval.0.i7383, i32 noundef 1) #23
  br label %cleanup43

if.end26:                                         ; preds = %selinux_inet_sys_rcv_skb.exit.if.end26_crit_edge, %if.end18.if.end26_crit_edge
  br i1 %tobool.not77, label %if.end26.if.end33_crit_edge, label %if.then28

if.end26.if.end33_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.then28:                                        ; preds = %if.end26
  %41 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %peer_sid, align 4
  %secmark = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 12
  %43 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %secmark, align 8
  %call29 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %42, i32 noundef %44, i16 noundef zeroext 49, i32 noundef 8, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then28.if.end33_crit_edge, label %if.then28.cleanup43_crit_edge

if.then28.cleanup43_crit_edge:                    ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup43

if.then28.if.end33_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.end33:                                         ; preds = %if.then28.if.end33_crit_edge, %if.end26.if.end33_crit_edge
  %call34 = call i32 @netlbl_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.end33.if.end42_crit_edge, label %if.then36

if.end33.if.end42_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.then36:                                        ; preds = %if.end33
  %45 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %peer_sid, align 4
  %call37 = call i32 @selinux_netlbl_skbuff_setsid(ptr noundef %skb, i16 noundef zeroext %conv, i32 noundef %46) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %cmp38.not = icmp eq i32 %call37, 0
  br i1 %cmp38.not, label %if.then36.if.end42_crit_edge, label %if.then36.cleanup43_crit_edge

if.then36.cleanup43_crit_edge:                    ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup43

if.then36.if.end42_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.end42:                                         ; preds = %if.then36.if.end42_crit_edge, %if.end33.if.end42_crit_edge
  br label %cleanup43

cleanup43:                                        ; preds = %if.end42, %if.then36.cleanup43_crit_edge, %if.then28.cleanup43_crit_edge, %if.then24, %if.end9.cleanup43_crit_edge, %selinux_skb_peerlbl_sid.exit.thread, %selinux_peerlbl_enabled.exit.cleanup43_crit_edge, %entry.cleanup43_crit_edge
  %retval.1 = phi i32 [ 1, %if.end42 ], [ 1, %entry.cleanup43_crit_edge ], [ 1, %selinux_peerlbl_enabled.exit.cleanup43_crit_edge ], [ 0, %if.end9.cleanup43_crit_edge ], [ 0, %if.then24 ], [ 0, %if.then28.cleanup43_crit_edge ], [ 0, %if.then36.cleanup43_crit_edge ], [ 0, %selinux_skb_peerlbl_sid.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peer_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addrp) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ip_output(ptr nocapture noundef readnone %priv, ptr noundef %skb, ptr nocapture noundef readonly %state) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @netlbl_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup12_crit_edge, label %if.end

entry.cleanup12_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup12

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %tobool1.not = icmp eq ptr %2, null
  br i1 %tobool1.not, label %if.end.if.end7_crit_edge, label %if.then2

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then2:                                         ; preds = %if.end
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 4
  %3 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %4 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i = and i32 %shl.i, 5120
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %cleanup, label %if.then2.cleanup12_crit_edge

if.then2.cleanup12_crit_edge:                     ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup12

cleanup:                                          ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  %sk_security = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 73
  %5 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sk_security, align 8
  %sid6 = getelementptr inbounds %struct.sk_security_struct, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sid6, align 4
  br label %if.end7

if.end7:                                          ; preds = %cleanup, %if.end.if.end7_crit_edge
  %sid.1 = phi i32 [ %8, %cleanup ], [ 1, %if.end.if.end7_crit_edge ]
  %pf = getelementptr inbounds %struct.nf_hook_state, ptr %state, i32 0, i32 1
  %9 = ptrtoint ptr %pf to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %pf, align 1
  %conv = zext i8 %10 to i16
  %call8 = tail call i32 @selinux_netlbl_skbuff_setsid(ptr noundef %skb, i16 noundef zeroext %conv, i32 noundef %sid.1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp.not = icmp eq i32 %call8, 0
  %. = zext i1 %cmp.not to i32
  br label %cleanup12

cleanup12:                                        ; preds = %if.end7, %if.then2.cleanup12_crit_edge, %entry.cleanup12_crit_edge
  %retval.1 = phi i32 [ 1, %entry.cleanup12_crit_edge ], [ %., %if.end7 ], [ 1, %if.then2.cleanup12_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_parse_skb(ptr noundef %skb, ptr nocapture noundef readonly %ad, ptr noundef writeonly %_addrp, i32 noundef %src, ptr noundef writeonly %proto) unnamed_addr #1 align 64 {
entry:
  %nexthdr.i = alloca i8, align 1
  %_ipv6h.i = alloca %struct.ipv6hdr, align 4
  %frag_off.i38 = alloca i16, align 2
  %_tcph.i39 = alloca %struct.tcphdr, align 4
  %_udph.i40 = alloca %struct.udphdr, align 8
  %_dccph.i41 = alloca %struct.dccp_hdr, align 2
  %_sctph.i42 = alloca %struct.sctphdr, align 4
  %_iph.i = alloca %struct.iphdr, align 4
  %_tcph.i = alloca %struct.tcphdr, align 4
  %_udph.i = alloca %struct.udphdr, align 8
  %_dccph.i = alloca %struct.dccp_hdr, align 2
  %_sctph.i = alloca %struct.sctphdr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %0 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %u, align 4
  %family = getelementptr inbounds %struct.lsm_network_audit, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 4
  %4 = zext i16 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.125)
  switch i16 %3, label %entry.okay_crit_edge [
    i16 2, label %sw.bb
    i16 10, label %sw.bb5
  ]

entry.okay_crit_edge:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %okay

sw.bb:                                            ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %_iph.i) #23
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %5 = call ptr @memset(ptr %_iph.i, i32 255, i32 20)
  %6 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %head.i.i.i, align 8
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %8 = ptrtoint ptr %network_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %network_header.i.i.i, align 4
  %conv.i.i.i = zext i16 %9 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %7, i32 %conv.i.i.i
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %11 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %12 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len.i.i.i, align 4
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %14 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_len.i.i.i, align 8
  %16 = add i32 %15, %sub.ptr.sub.i.i
  %sub.i4.i.i = sub i32 %13, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %sub.i4.i.i)
  %cmp.not.i.i.i = icmp slt i32 %sub.i4.i.i, 20
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %skb_header_pointer.exit.i, !prof !380

if.end.i.i.i:                                     ; preds = %sw.bb
  %tobool2.not.i.i.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.selinux_parse_skb_ipv4.exit_crit_edge, label %lor.lhs.false.i.i.i

if.end.i.i.i.selinux_parse_skb_ipv4.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv4.exit

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  %call.i.i.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %sub.ptr.sub.i.i, ptr noundef nonnull %_iph.i, i32 noundef 20) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3.i.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp3.i.i.i, label %lor.lhs.false.i.i.i.selinux_parse_skb_ipv4.exit_crit_edge, label %lor.lhs.false.i.i.i.if.end.i_crit_edge

lor.lhs.false.i.i.i.if.end.i_crit_edge:           ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

lor.lhs.false.i.i.i.selinux_parse_skb_ipv4.exit_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv4.exit

skb_header_pointer.exit.i:                        ; preds = %sw.bb
  %add.ptr.i.i137.i = getelementptr i8, ptr %11, i32 %sub.ptr.sub.i.i
  %cmp.i = icmp eq ptr %add.ptr.i.i137.i, null
  br i1 %cmp.i, label %skb_header_pointer.exit.i.selinux_parse_skb_ipv4.exit_crit_edge, label %skb_header_pointer.exit.i.if.end.i_crit_edge

skb_header_pointer.exit.i.if.end.i_crit_edge:     ; preds = %skb_header_pointer.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

skb_header_pointer.exit.i.selinux_parse_skb_ipv4.exit_crit_edge: ; preds = %skb_header_pointer.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv4.exit

if.end.i:                                         ; preds = %skb_header_pointer.exit.i.if.end.i_crit_edge, %lor.lhs.false.i.i.i.if.end.i_crit_edge
  %retval.0.i.i204.i = phi ptr [ %add.ptr.i.i137.i, %skb_header_pointer.exit.i.if.end.i_crit_edge ], [ %_iph.i, %lor.lhs.false.i.i.i.if.end.i_crit_edge ]
  %17 = ptrtoint ptr %retval.0.i.i204.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load.i = load i8, ptr %retval.0.i.i204.i, align 4
  %bf.clear.i = shl i8 %bf.load.i, 2
  %18 = and i8 %bf.clear.i, 60
  %mul.i = zext i8 %18 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 20, i8 %18)
  %cmp2.i = icmp ult i8 %18, 20
  br i1 %cmp2.i, label %if.end.i.selinux_parse_skb_ipv4.exit_crit_edge, label %if.end5.i

if.end.i.selinux_parse_skb_ipv4.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv4.exit

if.end5.i:                                        ; preds = %if.end.i
  %saddr.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 8
  %19 = ptrtoint ptr %saddr.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %saddr.i, align 4
  %21 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %u, align 4
  %saddr6.i = getelementptr inbounds %struct.lsm_network_audit, ptr %22, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = ptrtoint ptr %saddr6.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %20, ptr %saddr6.i, align 4
  %daddr.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 9
  %24 = ptrtoint ptr %daddr.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %daddr.i, align 4
  %26 = load ptr, ptr %u, align 4
  %fam8.i = getelementptr inbounds %struct.lsm_network_audit, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %fam8.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %25, ptr %fam8.i, align 4
  %tobool.not.i = icmp eq ptr %proto, null
  br i1 %tobool.not.i, label %if.end5.i.if.end11.i_crit_edge, label %if.then10.i

if.end5.i.if.end11.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11.i

if.then10.i:                                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  %protocol.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 6
  %28 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %protocol.i, align 1
  %30 = ptrtoint ptr %proto to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %proto, align 1
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %if.end5.i.if.end11.i_crit_edge
  %protocol12.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 6
  %31 = ptrtoint ptr %protocol12.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %protocol12.i, align 1
  %33 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.126)
  switch i8 %32, label %if.end11.i.if.end_crit_edge [
    i8 6, label %sw.bb.i
    i8 17, label %sw.bb26.i
    i8 33, label %sw.bb47.i
    i8 -124, label %sw.bb66.i
  ]

if.end11.i.if.end_crit_edge:                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

sw.bb.i:                                          ; preds = %if.end11.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %_tcph.i) #23
  %frag_off.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 4
  %34 = call ptr @memset(ptr %_tcph.i, i32 255, i32 20)
  %35 = ptrtoint ptr %frag_off.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %frag_off.i, align 2
  %37 = and i16 %36, 8191
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %tobool15.not.i = icmp eq i16 %37, 0
  br i1 %tobool15.not.i, label %if.end17.i, label %sw.bb.i.cleanup.i_crit_edge

sw.bb.i.cleanup.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

if.end17.i:                                       ; preds = %sw.bb.i
  %add.i = add i32 %sub.ptr.sub.i.i, %mul.i
  %38 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %len.i.i.i, align 4
  %40 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %data_len.i.i.i, align 8
  %42 = add i32 %add.i, %41
  %sub.i4.i140.i = sub i32 %39, %42
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %sub.i4.i140.i)
  %cmp.not.i.i141.i = icmp slt i32 %sub.i4.i140.i, 20
  br i1 %cmp.not.i.i141.i, label %if.end.i.i146.i, label %skb_header_pointer.exit152.i, !prof !380

if.end.i.i146.i:                                  ; preds = %if.end17.i
  %tobool2.not.i.i145.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i145.i, label %if.end.i.i146.i.cleanup.i_crit_edge, label %lor.lhs.false.i.i150.i

if.end.i.i146.i.cleanup.i_crit_edge:              ; preds = %if.end.i.i146.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

lor.lhs.false.i.i150.i:                           ; preds = %if.end.i.i146.i
  %call.i.i147.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %add.i, ptr noundef nonnull %_tcph.i, i32 noundef 20) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i147.i)
  %cmp3.i.i148.i = icmp slt i32 %call.i.i147.i, 0
  br i1 %cmp3.i.i148.i, label %lor.lhs.false.i.i150.i.cleanup.i_crit_edge, label %lor.lhs.false.i.i150.i.if.end22.i_crit_edge

lor.lhs.false.i.i150.i.if.end22.i_crit_edge:      ; preds = %lor.lhs.false.i.i150.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22.i

lor.lhs.false.i.i150.i.cleanup.i_crit_edge:       ; preds = %lor.lhs.false.i.i150.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

skb_header_pointer.exit152.i:                     ; preds = %if.end17.i
  %43 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i143.i = getelementptr i8, ptr %44, i32 %add.i
  %cmp19.i = icmp eq ptr %add.ptr.i.i143.i, null
  br i1 %cmp19.i, label %skb_header_pointer.exit152.i.cleanup.i_crit_edge, label %skb_header_pointer.exit152.i.if.end22.i_crit_edge

skb_header_pointer.exit152.i.if.end22.i_crit_edge: ; preds = %skb_header_pointer.exit152.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22.i

skb_header_pointer.exit152.i.cleanup.i_crit_edge: ; preds = %skb_header_pointer.exit152.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

if.end22.i:                                       ; preds = %skb_header_pointer.exit152.i.if.end22.i_crit_edge, %lor.lhs.false.i.i150.i.if.end22.i_crit_edge
  %retval.0.i.i151211.i = phi ptr [ %add.ptr.i.i143.i, %skb_header_pointer.exit152.i.if.end22.i_crit_edge ], [ %_tcph.i, %lor.lhs.false.i.i150.i.if.end22.i_crit_edge ]
  %45 = ptrtoint ptr %retval.0.i.i151211.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %retval.0.i.i151211.i, align 4
  %47 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %u, align 4
  %sport.i = getelementptr inbounds %struct.lsm_network_audit, ptr %48, i32 0, i32 4
  %49 = ptrtoint ptr %sport.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %46, ptr %sport.i, align 4
  %dest.i = getelementptr inbounds %struct.tcphdr, ptr %retval.0.i.i151211.i, i32 0, i32 1
  %50 = ptrtoint ptr %dest.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %dest.i, align 2
  %52 = load ptr, ptr %u, align 4
  %dport.i = getelementptr inbounds %struct.lsm_network_audit, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %dport.i to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %51, ptr %dport.i, align 2
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end22.i, %skb_header_pointer.exit152.i.cleanup.i_crit_edge, %lor.lhs.false.i.i150.i.cleanup.i_crit_edge, %if.end.i.i146.i.cleanup.i_crit_edge, %sw.bb.i.cleanup.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %_tcph.i) #23
  br label %if.end

sw.bb26.i:                                        ; preds = %if.end11.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %_udph.i) #23
  %frag_off27.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 4
  %54 = ptrtoint ptr %_udph.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 -1, ptr %_udph.i, align 8
  %55 = ptrtoint ptr %frag_off27.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %frag_off27.i, align 2
  %57 = and i16 %56, 8191
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %tobool30.not.i = icmp eq i16 %57, 0
  br i1 %tobool30.not.i, label %if.end32.i, label %sw.bb26.i.cleanup45.i_crit_edge

sw.bb26.i.cleanup45.i_crit_edge:                  ; preds = %sw.bb26.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i

if.end32.i:                                       ; preds = %sw.bb26.i
  %add33.i = add i32 %sub.ptr.sub.i.i, %mul.i
  %58 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %len.i.i.i, align 4
  %60 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %data_len.i.i.i, align 8
  %62 = add i32 %add33.i, %61
  %sub.i4.i155.i = sub i32 %59, %62
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sub.i4.i155.i)
  %cmp.not.i.i156.i = icmp slt i32 %sub.i4.i155.i, 8
  br i1 %cmp.not.i.i156.i, label %if.end.i.i161.i, label %skb_header_pointer.exit167.i, !prof !380

if.end.i.i161.i:                                  ; preds = %if.end32.i
  %tobool2.not.i.i160.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i160.i, label %if.end.i.i161.i.cleanup45.i_crit_edge, label %lor.lhs.false.i.i165.i

if.end.i.i161.i.cleanup45.i_crit_edge:            ; preds = %if.end.i.i161.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i

lor.lhs.false.i.i165.i:                           ; preds = %if.end.i.i161.i
  %call.i.i162.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %add33.i, ptr noundef nonnull %_udph.i, i32 noundef 8) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i162.i)
  %cmp3.i.i163.i = icmp slt i32 %call.i.i162.i, 0
  br i1 %cmp3.i.i163.i, label %lor.lhs.false.i.i165.i.cleanup45.i_crit_edge, label %lor.lhs.false.i.i165.i.if.end38.i_crit_edge

lor.lhs.false.i.i165.i.if.end38.i_crit_edge:      ; preds = %lor.lhs.false.i.i165.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end38.i

lor.lhs.false.i.i165.i.cleanup45.i_crit_edge:     ; preds = %lor.lhs.false.i.i165.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i

skb_header_pointer.exit167.i:                     ; preds = %if.end32.i
  %63 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i158.i = getelementptr i8, ptr %64, i32 %add33.i
  %cmp35.i = icmp eq ptr %add.ptr.i.i158.i, null
  br i1 %cmp35.i, label %skb_header_pointer.exit167.i.cleanup45.i_crit_edge, label %skb_header_pointer.exit167.i.if.end38.i_crit_edge

skb_header_pointer.exit167.i.if.end38.i_crit_edge: ; preds = %skb_header_pointer.exit167.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end38.i

skb_header_pointer.exit167.i.cleanup45.i_crit_edge: ; preds = %skb_header_pointer.exit167.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i

if.end38.i:                                       ; preds = %skb_header_pointer.exit167.i.if.end38.i_crit_edge, %lor.lhs.false.i.i165.i.if.end38.i_crit_edge
  %retval.0.i.i166218.i = phi ptr [ %add.ptr.i.i158.i, %skb_header_pointer.exit167.i.if.end38.i_crit_edge ], [ %_udph.i, %lor.lhs.false.i.i165.i.if.end38.i_crit_edge ]
  %65 = ptrtoint ptr %retval.0.i.i166218.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %retval.0.i.i166218.i, align 2
  %67 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %u, align 4
  %sport41.i = getelementptr inbounds %struct.lsm_network_audit, ptr %68, i32 0, i32 4
  %69 = ptrtoint ptr %sport41.i to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %66, ptr %sport41.i, align 4
  %dest42.i = getelementptr inbounds %struct.udphdr, ptr %retval.0.i.i166218.i, i32 0, i32 1
  %70 = ptrtoint ptr %dest42.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %dest42.i, align 2
  %72 = load ptr, ptr %u, align 4
  %dport44.i = getelementptr inbounds %struct.lsm_network_audit, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %dport44.i to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 %71, ptr %dport44.i, align 2
  br label %cleanup45.i

cleanup45.i:                                      ; preds = %if.end38.i, %skb_header_pointer.exit167.i.cleanup45.i_crit_edge, %lor.lhs.false.i.i165.i.cleanup45.i_crit_edge, %if.end.i.i161.i.cleanup45.i_crit_edge, %sw.bb26.i.cleanup45.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %_udph.i) #23
  br label %if.end

sw.bb47.i:                                        ; preds = %if.end11.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %_dccph.i) #23
  %frag_off48.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 4
  %74 = call ptr @memset(ptr %_dccph.i, i32 255, i32 12)
  %75 = ptrtoint ptr %frag_off48.i to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %frag_off48.i, align 2
  %77 = and i16 %76, 8191
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %tobool51.not.i = icmp eq i16 %77, 0
  br i1 %tobool51.not.i, label %if.end53.i, label %sw.bb47.i.cleanup64.i_crit_edge

sw.bb47.i.cleanup64.i_crit_edge:                  ; preds = %sw.bb47.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64.i

if.end53.i:                                       ; preds = %sw.bb47.i
  %add54.i = add i32 %sub.ptr.sub.i.i, %mul.i
  %78 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %len.i.i.i, align 4
  %80 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %data_len.i.i.i, align 8
  %82 = add i32 %add54.i, %81
  %sub.i4.i170.i = sub i32 %79, %82
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i4.i170.i)
  %cmp.not.i.i171.i = icmp slt i32 %sub.i4.i170.i, 12
  br i1 %cmp.not.i.i171.i, label %if.end.i.i176.i, label %skb_header_pointer.exit182.i, !prof !380

if.end.i.i176.i:                                  ; preds = %if.end53.i
  %tobool2.not.i.i175.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i175.i, label %if.end.i.i176.i.cleanup64.i_crit_edge, label %lor.lhs.false.i.i180.i

if.end.i.i176.i.cleanup64.i_crit_edge:            ; preds = %if.end.i.i176.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64.i

lor.lhs.false.i.i180.i:                           ; preds = %if.end.i.i176.i
  %call.i.i177.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %add54.i, ptr noundef nonnull %_dccph.i, i32 noundef 12) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i177.i)
  %cmp3.i.i178.i = icmp slt i32 %call.i.i177.i, 0
  br i1 %cmp3.i.i178.i, label %lor.lhs.false.i.i180.i.cleanup64.i_crit_edge, label %lor.lhs.false.i.i180.i.if.end59.i_crit_edge

lor.lhs.false.i.i180.i.if.end59.i_crit_edge:      ; preds = %lor.lhs.false.i.i180.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end59.i

lor.lhs.false.i.i180.i.cleanup64.i_crit_edge:     ; preds = %lor.lhs.false.i.i180.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64.i

skb_header_pointer.exit182.i:                     ; preds = %if.end53.i
  %83 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i173.i = getelementptr i8, ptr %84, i32 %add54.i
  %cmp56.i = icmp eq ptr %add.ptr.i.i173.i, null
  br i1 %cmp56.i, label %skb_header_pointer.exit182.i.cleanup64.i_crit_edge, label %skb_header_pointer.exit182.i.if.end59.i_crit_edge

skb_header_pointer.exit182.i.if.end59.i_crit_edge: ; preds = %skb_header_pointer.exit182.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end59.i

skb_header_pointer.exit182.i.cleanup64.i_crit_edge: ; preds = %skb_header_pointer.exit182.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64.i

if.end59.i:                                       ; preds = %skb_header_pointer.exit182.i.if.end59.i_crit_edge, %lor.lhs.false.i.i180.i.if.end59.i_crit_edge
  %retval.0.i.i181225.i = phi ptr [ %add.ptr.i.i173.i, %skb_header_pointer.exit182.i.if.end59.i_crit_edge ], [ %_dccph.i, %lor.lhs.false.i.i180.i.if.end59.i_crit_edge ]
  %85 = ptrtoint ptr %retval.0.i.i181225.i to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %retval.0.i.i181225.i, align 2
  %87 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %u, align 4
  %sport61.i = getelementptr inbounds %struct.lsm_network_audit, ptr %88, i32 0, i32 4
  %89 = ptrtoint ptr %sport61.i to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 %86, ptr %sport61.i, align 4
  %dccph_dport.i = getelementptr inbounds %struct.dccp_hdr, ptr %retval.0.i.i181225.i, i32 0, i32 1
  %90 = ptrtoint ptr %dccph_dport.i to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %dccph_dport.i, align 2
  %92 = load ptr, ptr %u, align 4
  %dport63.i = getelementptr inbounds %struct.lsm_network_audit, ptr %92, i32 0, i32 3
  %93 = ptrtoint ptr %dport63.i to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %91, ptr %dport63.i, align 2
  br label %cleanup64.i

cleanup64.i:                                      ; preds = %if.end59.i, %skb_header_pointer.exit182.i.cleanup64.i_crit_edge, %lor.lhs.false.i.i180.i.cleanup64.i_crit_edge, %if.end.i.i176.i.cleanup64.i_crit_edge, %sw.bb47.i.cleanup64.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %_dccph.i) #23
  br label %if.end

sw.bb66.i:                                        ; preds = %if.end11.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %_sctph.i) #23
  %frag_off67.i = getelementptr inbounds %struct.iphdr, ptr %retval.0.i.i204.i, i32 0, i32 4
  %94 = call ptr @memset(ptr %_sctph.i, i32 255, i32 12)
  %95 = ptrtoint ptr %frag_off67.i to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %frag_off67.i, align 2
  %97 = and i16 %96, 8191
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %97)
  %tobool70.not.i = icmp eq i16 %97, 0
  br i1 %tobool70.not.i, label %if.end72.i, label %sw.bb66.i.cleanup85.i_crit_edge

sw.bb66.i.cleanup85.i_crit_edge:                  ; preds = %sw.bb66.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup85.i

if.end72.i:                                       ; preds = %sw.bb66.i
  %add73.i = add i32 %sub.ptr.sub.i.i, %mul.i
  %98 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %len.i.i.i, align 4
  %100 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %data_len.i.i.i, align 8
  %102 = add i32 %add73.i, %101
  %sub.i4.i185.i = sub i32 %99, %102
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i4.i185.i)
  %cmp.not.i.i186.i = icmp slt i32 %sub.i4.i185.i, 12
  br i1 %cmp.not.i.i186.i, label %if.end.i.i191.i, label %skb_header_pointer.exit197.i, !prof !380

if.end.i.i191.i:                                  ; preds = %if.end72.i
  %tobool2.not.i.i190.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i190.i, label %if.end.i.i191.i.cleanup85.i_crit_edge, label %lor.lhs.false.i.i195.i

if.end.i.i191.i.cleanup85.i_crit_edge:            ; preds = %if.end.i.i191.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup85.i

lor.lhs.false.i.i195.i:                           ; preds = %if.end.i.i191.i
  %call.i.i192.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %add73.i, ptr noundef nonnull %_sctph.i, i32 noundef 12) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i192.i)
  %cmp3.i.i193.i = icmp slt i32 %call.i.i192.i, 0
  br i1 %cmp3.i.i193.i, label %lor.lhs.false.i.i195.i.cleanup85.i_crit_edge, label %lor.lhs.false.i.i195.i.if.end78.i_crit_edge

lor.lhs.false.i.i195.i.if.end78.i_crit_edge:      ; preds = %lor.lhs.false.i.i195.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end78.i

lor.lhs.false.i.i195.i.cleanup85.i_crit_edge:     ; preds = %lor.lhs.false.i.i195.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup85.i

skb_header_pointer.exit197.i:                     ; preds = %if.end72.i
  %103 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i188.i = getelementptr i8, ptr %104, i32 %add73.i
  %cmp75.i = icmp eq ptr %add.ptr.i.i188.i, null
  br i1 %cmp75.i, label %skb_header_pointer.exit197.i.cleanup85.i_crit_edge, label %skb_header_pointer.exit197.i.if.end78.i_crit_edge

skb_header_pointer.exit197.i.if.end78.i_crit_edge: ; preds = %skb_header_pointer.exit197.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end78.i

skb_header_pointer.exit197.i.cleanup85.i_crit_edge: ; preds = %skb_header_pointer.exit197.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup85.i

if.end78.i:                                       ; preds = %skb_header_pointer.exit197.i.if.end78.i_crit_edge, %lor.lhs.false.i.i195.i.if.end78.i_crit_edge
  %retval.0.i.i196232.i = phi ptr [ %add.ptr.i.i188.i, %skb_header_pointer.exit197.i.if.end78.i_crit_edge ], [ %_sctph.i, %lor.lhs.false.i.i195.i.if.end78.i_crit_edge ]
  %105 = ptrtoint ptr %retval.0.i.i196232.i to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %retval.0.i.i196232.i, align 4
  %107 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %u, align 4
  %sport81.i = getelementptr inbounds %struct.lsm_network_audit, ptr %108, i32 0, i32 4
  %109 = ptrtoint ptr %sport81.i to i32
  call void @__asan_store2_noabort(i32 %109)
  store i16 %106, ptr %sport81.i, align 4
  %dest82.i = getelementptr inbounds %struct.sctphdr, ptr %retval.0.i.i196232.i, i32 0, i32 1
  %110 = ptrtoint ptr %dest82.i to i32
  call void @__asan_load2_noabort(i32 %110)
  %111 = load i16, ptr %dest82.i, align 2
  %112 = load ptr, ptr %u, align 4
  %dport84.i = getelementptr inbounds %struct.lsm_network_audit, ptr %112, i32 0, i32 3
  %113 = ptrtoint ptr %dport84.i to i32
  call void @__asan_store2_noabort(i32 %113)
  store i16 %111, ptr %dport84.i, align 2
  br label %cleanup85.i

cleanup85.i:                                      ; preds = %if.end78.i, %skb_header_pointer.exit197.i.cleanup85.i_crit_edge, %lor.lhs.false.i.i195.i.cleanup85.i_crit_edge, %if.end.i.i191.i.cleanup85.i_crit_edge, %sw.bb66.i.cleanup85.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %_sctph.i) #23
  br label %if.end

selinux_parse_skb_ipv4.exit:                      ; preds = %if.end.i.selinux_parse_skb_ipv4.exit_crit_edge, %skb_header_pointer.exit.i.selinux_parse_skb_ipv4.exit_crit_edge, %lor.lhs.false.i.i.i.selinux_parse_skb_ipv4.exit_crit_edge, %if.end.i.i.i.selinux_parse_skb_ipv4.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %_iph.i) #23
  br label %do.end

if.end:                                           ; preds = %cleanup85.i, %cleanup64.i, %cleanup45.i, %cleanup.i, %if.end11.i.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %_iph.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %src)
  %tobool1.not = icmp eq i32 %src, 0
  %114 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %u, align 4
  br i1 %tobool1.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %saddr = getelementptr inbounds %struct.lsm_network_audit, ptr %115, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %okay

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %fam4 = getelementptr inbounds %struct.lsm_network_audit, ptr %115, i32 0, i32 5
  br label %okay

sw.bb5:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %nexthdr.i) #23
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %_ipv6h.i) #23
  %116 = call ptr @memset(ptr %_ipv6h.i, i32 255, i32 40)
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %frag_off.i38) #23
  %117 = ptrtoint ptr %frag_off.i38 to i32
  call void @__asan_store2_noabort(i32 %117)
  store i16 -1, ptr %frag_off.i38, align 2, !annotation !376
  %head.i.i.i43 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %118 = ptrtoint ptr %head.i.i.i43 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %head.i.i.i43, align 8
  %network_header.i.i.i44 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %120 = ptrtoint ptr %network_header.i.i.i44 to i32
  call void @__asan_load2_noabort(i32 %120)
  %121 = load i16, ptr %network_header.i.i.i44, align 4
  %conv.i.i.i45 = zext i16 %121 to i32
  %add.ptr.i.i.i46 = getelementptr i8, ptr %119, i32 %conv.i.i.i45
  %data.i.i47 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %122 = ptrtoint ptr %data.i.i47 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %data.i.i47, align 4
  %sub.ptr.lhs.cast.i.i48 = ptrtoint ptr %add.ptr.i.i.i46 to i32
  %sub.ptr.rhs.cast.i.i49 = ptrtoint ptr %123 to i32
  %sub.ptr.sub.i.i50 = sub i32 %sub.ptr.lhs.cast.i.i48, %sub.ptr.rhs.cast.i.i49
  %len.i.i.i51 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %124 = ptrtoint ptr %len.i.i.i51 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %len.i.i.i51, align 4
  %data_len.i.i.i52 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %126 = ptrtoint ptr %data_len.i.i.i52 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %data_len.i.i.i52, align 8
  %128 = add i32 %127, %sub.ptr.sub.i.i50
  %sub.i4.i.i53 = sub i32 %125, %128
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %sub.i4.i.i53)
  %cmp.not.i.i.i54 = icmp slt i32 %sub.i4.i.i53, 40
  br i1 %cmp.not.i.i.i54, label %if.end.i.i.i56, label %skb_header_pointer.exit.i61, !prof !380

if.end.i.i.i56:                                   ; preds = %sw.bb5
  %tobool2.not.i.i.i55 = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i.i55, label %if.end.i.i.i56.selinux_parse_skb_ipv6.exit_crit_edge, label %lor.lhs.false.i.i.i59

if.end.i.i.i56.selinux_parse_skb_ipv6.exit_crit_edge: ; preds = %if.end.i.i.i56
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv6.exit

lor.lhs.false.i.i.i59:                            ; preds = %if.end.i.i.i56
  %call.i.i.i57 = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %sub.ptr.sub.i.i50, ptr noundef nonnull %_ipv6h.i, i32 noundef 40) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i57)
  %cmp3.i.i.i58 = icmp slt i32 %call.i.i.i57, 0
  br i1 %cmp3.i.i.i58, label %lor.lhs.false.i.i.i59.selinux_parse_skb_ipv6.exit_crit_edge, label %lor.lhs.false.i.i.i59.if.end.i65_crit_edge

lor.lhs.false.i.i.i59.if.end.i65_crit_edge:       ; preds = %lor.lhs.false.i.i.i59
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i65

lor.lhs.false.i.i.i59.selinux_parse_skb_ipv6.exit_crit_edge: ; preds = %lor.lhs.false.i.i.i59
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv6.exit

skb_header_pointer.exit.i61:                      ; preds = %sw.bb5
  %add.ptr.i.i102.i = getelementptr i8, ptr %123, i32 %sub.ptr.sub.i.i50
  %cmp.i60 = icmp eq ptr %add.ptr.i.i102.i, null
  br i1 %cmp.i60, label %skb_header_pointer.exit.i61.selinux_parse_skb_ipv6.exit_crit_edge, label %skb_header_pointer.exit.i61.if.end.i65_crit_edge

skb_header_pointer.exit.i61.if.end.i65_crit_edge: ; preds = %skb_header_pointer.exit.i61
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i65

skb_header_pointer.exit.i61.selinux_parse_skb_ipv6.exit_crit_edge: ; preds = %skb_header_pointer.exit.i61
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_parse_skb_ipv6.exit

if.end.i65:                                       ; preds = %skb_header_pointer.exit.i61.if.end.i65_crit_edge, %lor.lhs.false.i.i.i59.if.end.i65_crit_edge
  %retval.0.i.i168.i = phi ptr [ %add.ptr.i.i102.i, %skb_header_pointer.exit.i61.if.end.i65_crit_edge ], [ %_ipv6h.i, %lor.lhs.false.i.i.i59.if.end.i65_crit_edge ]
  %129 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %u, align 4
  %saddr.i63 = getelementptr inbounds %struct.lsm_network_audit, ptr %130, i32 0, i32 5, i32 0, i32 1
  %saddr2.i = getelementptr inbounds %struct.ipv6hdr, ptr %retval.0.i.i168.i, i32 0, i32 5
  %131 = call ptr @memcpy(ptr %saddr.i63, ptr %saddr2.i, i32 16)
  %132 = load ptr, ptr %u, align 4
  %fam4.i = getelementptr inbounds %struct.lsm_network_audit, ptr %132, i32 0, i32 5
  %daddr5.i = getelementptr inbounds %struct.ipv6hdr, ptr %retval.0.i.i168.i, i32 0, i32 6
  %133 = call ptr @memcpy(ptr %fam4.i, ptr %daddr5.i, i32 16)
  %nexthdr6.i = getelementptr inbounds %struct.ipv6hdr, ptr %retval.0.i.i168.i, i32 0, i32 3
  %134 = ptrtoint ptr %nexthdr6.i to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %nexthdr6.i, align 2
  %136 = ptrtoint ptr %nexthdr.i to i32
  call void @__asan_store1_noabort(i32 %136)
  store i8 %135, ptr %nexthdr.i, align 1
  %add.i64 = add i32 %sub.ptr.sub.i.i50, 40
  %call7.i = call i32 @ipv6_skip_exthdr(ptr noundef %skb, i32 noundef %add.i64, ptr noundef nonnull %nexthdr.i, ptr noundef nonnull %frag_off.i38) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %cmp8.i = icmp slt i32 %call7.i, 0
  br i1 %cmp8.i, label %if.end.i65.if.end9_crit_edge, label %if.end10.i

if.end.i65.if.end9_crit_edge:                     ; preds = %if.end.i65
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

if.end10.i:                                       ; preds = %if.end.i65
  %tobool.not.i66 = icmp eq ptr %proto, null
  %137 = ptrtoint ptr %nexthdr.i to i32
  call void @__asan_load1_noabort(i32 %137)
  %.pr.i = load i8, ptr %nexthdr.i, align 1
  br i1 %tobool.not.i66, label %if.end10.i.if.end12.i_crit_edge, label %if.then11.i

if.end10.i.if.end12.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12.i

if.then11.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #25
  %138 = ptrtoint ptr %proto to i32
  call void @__asan_store1_noabort(i32 %138)
  store i8 %.pr.i, ptr %proto, align 1
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then11.i, %if.end10.i.if.end12.i_crit_edge
  %139 = zext i8 %.pr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %139, ptr @__sancov_gen_cov_switch_values.127)
  switch i8 %.pr.i, label %if.end12.i.if.end9_crit_edge [
    i8 6, label %sw.bb.i67
    i8 17, label %sw.bb21.i
    i8 33, label %sw.bb35.i
    i8 -124, label %sw.bb47.i76
  ]

if.end12.i.if.end9_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

sw.bb.i67:                                        ; preds = %if.end12.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %_tcph.i39) #23
  %140 = call ptr @memset(ptr %_tcph.i39, i32 255, i32 20)
  %141 = ptrtoint ptr %len.i.i.i51 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %len.i.i.i51, align 4
  %143 = ptrtoint ptr %data_len.i.i.i52 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %data_len.i.i.i52, align 8
  %145 = add i32 %call7.i, %144
  %sub.i4.i105.i = sub i32 %142, %145
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %sub.i4.i105.i)
  %cmp.not.i.i106.i = icmp slt i32 %sub.i4.i105.i, 20
  br i1 %cmp.not.i.i106.i, label %if.end.i.i111.i, label %skb_header_pointer.exit117.i, !prof !380

if.end.i.i111.i:                                  ; preds = %sw.bb.i67
  %tobool2.not.i.i110.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i110.i, label %if.end.i.i111.i.cleanup.i72_crit_edge, label %lor.lhs.false.i.i115.i

if.end.i.i111.i.cleanup.i72_crit_edge:            ; preds = %if.end.i.i111.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i72

lor.lhs.false.i.i115.i:                           ; preds = %if.end.i.i111.i
  %call.i.i112.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %call7.i, ptr noundef nonnull %_tcph.i39, i32 noundef 20) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i112.i)
  %cmp3.i.i113.i = icmp slt i32 %call.i.i112.i, 0
  br i1 %cmp3.i.i113.i, label %lor.lhs.false.i.i115.i.cleanup.i72_crit_edge, label %lor.lhs.false.i.i115.i.if.end17.i71_crit_edge

lor.lhs.false.i.i115.i.if.end17.i71_crit_edge:    ; preds = %lor.lhs.false.i.i115.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17.i71

lor.lhs.false.i.i115.i.cleanup.i72_crit_edge:     ; preds = %lor.lhs.false.i.i115.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i72

skb_header_pointer.exit117.i:                     ; preds = %sw.bb.i67
  %146 = ptrtoint ptr %data.i.i47 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %data.i.i47, align 4
  %add.ptr.i.i108.i = getelementptr i8, ptr %147, i32 %call7.i
  %cmp14.i = icmp eq ptr %add.ptr.i.i108.i, null
  br i1 %cmp14.i, label %skb_header_pointer.exit117.i.cleanup.i72_crit_edge, label %skb_header_pointer.exit117.i.if.end17.i71_crit_edge

skb_header_pointer.exit117.i.if.end17.i71_crit_edge: ; preds = %skb_header_pointer.exit117.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17.i71

skb_header_pointer.exit117.i.cleanup.i72_crit_edge: ; preds = %skb_header_pointer.exit117.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i72

if.end17.i71:                                     ; preds = %skb_header_pointer.exit117.i.if.end17.i71_crit_edge, %lor.lhs.false.i.i115.i.if.end17.i71_crit_edge
  %retval.0.i.i116175.i = phi ptr [ %add.ptr.i.i108.i, %skb_header_pointer.exit117.i.if.end17.i71_crit_edge ], [ %_tcph.i39, %lor.lhs.false.i.i115.i.if.end17.i71_crit_edge ]
  %148 = ptrtoint ptr %retval.0.i.i116175.i to i32
  call void @__asan_load2_noabort(i32 %148)
  %149 = load i16, ptr %retval.0.i.i116175.i, align 4
  %150 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %u, align 4
  %sport.i68 = getelementptr inbounds %struct.lsm_network_audit, ptr %151, i32 0, i32 4
  %152 = ptrtoint ptr %sport.i68 to i32
  call void @__asan_store2_noabort(i32 %152)
  store i16 %149, ptr %sport.i68, align 4
  %dest.i69 = getelementptr inbounds %struct.tcphdr, ptr %retval.0.i.i116175.i, i32 0, i32 1
  %153 = ptrtoint ptr %dest.i69 to i32
  call void @__asan_load2_noabort(i32 %153)
  %154 = load i16, ptr %dest.i69, align 2
  %155 = load ptr, ptr %u, align 4
  %dport.i70 = getelementptr inbounds %struct.lsm_network_audit, ptr %155, i32 0, i32 3
  %156 = ptrtoint ptr %dport.i70 to i32
  call void @__asan_store2_noabort(i32 %156)
  store i16 %154, ptr %dport.i70, align 2
  br label %cleanup.i72

cleanup.i72:                                      ; preds = %if.end17.i71, %skb_header_pointer.exit117.i.cleanup.i72_crit_edge, %lor.lhs.false.i.i115.i.cleanup.i72_crit_edge, %if.end.i.i111.i.cleanup.i72_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %_tcph.i39) #23
  br label %if.end9

sw.bb21.i:                                        ; preds = %if.end12.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %_udph.i40) #23
  %157 = ptrtoint ptr %_udph.i40 to i32
  call void @__asan_store8_noabort(i32 %157)
  store i64 -1, ptr %_udph.i40, align 8
  %158 = ptrtoint ptr %len.i.i.i51 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %len.i.i.i51, align 4
  %160 = ptrtoint ptr %data_len.i.i.i52 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %data_len.i.i.i52, align 8
  %162 = add i32 %call7.i, %161
  %sub.i4.i120.i = sub i32 %159, %162
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sub.i4.i120.i)
  %cmp.not.i.i121.i = icmp slt i32 %sub.i4.i120.i, 8
  br i1 %cmp.not.i.i121.i, label %if.end.i.i126.i, label %skb_header_pointer.exit132.i, !prof !380

if.end.i.i126.i:                                  ; preds = %sw.bb21.i
  %tobool2.not.i.i125.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i125.i, label %if.end.i.i126.i.cleanup33.i_crit_edge, label %lor.lhs.false.i.i130.i

if.end.i.i126.i.cleanup33.i_crit_edge:            ; preds = %if.end.i.i126.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup33.i

lor.lhs.false.i.i130.i:                           ; preds = %if.end.i.i126.i
  %call.i.i127.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %call7.i, ptr noundef nonnull %_udph.i40, i32 noundef 8) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i127.i)
  %cmp3.i.i128.i = icmp slt i32 %call.i.i127.i, 0
  br i1 %cmp3.i.i128.i, label %lor.lhs.false.i.i130.i.cleanup33.i_crit_edge, label %lor.lhs.false.i.i130.i.if.end26.i_crit_edge

lor.lhs.false.i.i130.i.if.end26.i_crit_edge:      ; preds = %lor.lhs.false.i.i130.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26.i

lor.lhs.false.i.i130.i.cleanup33.i_crit_edge:     ; preds = %lor.lhs.false.i.i130.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup33.i

skb_header_pointer.exit132.i:                     ; preds = %sw.bb21.i
  %163 = ptrtoint ptr %data.i.i47 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %data.i.i47, align 4
  %add.ptr.i.i123.i = getelementptr i8, ptr %164, i32 %call7.i
  %cmp23.i = icmp eq ptr %add.ptr.i.i123.i, null
  br i1 %cmp23.i, label %skb_header_pointer.exit132.i.cleanup33.i_crit_edge, label %skb_header_pointer.exit132.i.if.end26.i_crit_edge

skb_header_pointer.exit132.i.if.end26.i_crit_edge: ; preds = %skb_header_pointer.exit132.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26.i

skb_header_pointer.exit132.i.cleanup33.i_crit_edge: ; preds = %skb_header_pointer.exit132.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup33.i

if.end26.i:                                       ; preds = %skb_header_pointer.exit132.i.if.end26.i_crit_edge, %lor.lhs.false.i.i130.i.if.end26.i_crit_edge
  %retval.0.i.i131182.i = phi ptr [ %add.ptr.i.i123.i, %skb_header_pointer.exit132.i.if.end26.i_crit_edge ], [ %_udph.i40, %lor.lhs.false.i.i130.i.if.end26.i_crit_edge ]
  %165 = ptrtoint ptr %retval.0.i.i131182.i to i32
  call void @__asan_load2_noabort(i32 %165)
  %166 = load i16, ptr %retval.0.i.i131182.i, align 2
  %167 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %u, align 4
  %sport29.i = getelementptr inbounds %struct.lsm_network_audit, ptr %168, i32 0, i32 4
  %169 = ptrtoint ptr %sport29.i to i32
  call void @__asan_store2_noabort(i32 %169)
  store i16 %166, ptr %sport29.i, align 4
  %dest30.i = getelementptr inbounds %struct.udphdr, ptr %retval.0.i.i131182.i, i32 0, i32 1
  %170 = ptrtoint ptr %dest30.i to i32
  call void @__asan_load2_noabort(i32 %170)
  %171 = load i16, ptr %dest30.i, align 2
  %172 = load ptr, ptr %u, align 4
  %dport32.i = getelementptr inbounds %struct.lsm_network_audit, ptr %172, i32 0, i32 3
  %173 = ptrtoint ptr %dport32.i to i32
  call void @__asan_store2_noabort(i32 %173)
  store i16 %171, ptr %dport32.i, align 2
  br label %cleanup33.i

cleanup33.i:                                      ; preds = %if.end26.i, %skb_header_pointer.exit132.i.cleanup33.i_crit_edge, %lor.lhs.false.i.i130.i.cleanup33.i_crit_edge, %if.end.i.i126.i.cleanup33.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %_udph.i40) #23
  br label %if.end9

sw.bb35.i:                                        ; preds = %if.end12.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %_dccph.i41) #23
  %174 = call ptr @memset(ptr %_dccph.i41, i32 255, i32 12)
  %175 = ptrtoint ptr %len.i.i.i51 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %len.i.i.i51, align 4
  %177 = ptrtoint ptr %data_len.i.i.i52 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %data_len.i.i.i52, align 8
  %179 = add i32 %call7.i, %178
  %sub.i4.i135.i = sub i32 %176, %179
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i4.i135.i)
  %cmp.not.i.i136.i = icmp slt i32 %sub.i4.i135.i, 12
  br i1 %cmp.not.i.i136.i, label %if.end.i.i141.i, label %skb_header_pointer.exit147.i, !prof !380

if.end.i.i141.i:                                  ; preds = %sw.bb35.i
  %tobool2.not.i.i140.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i140.i, label %if.end.i.i141.i.cleanup45.i75_crit_edge, label %lor.lhs.false.i.i145.i

if.end.i.i141.i.cleanup45.i75_crit_edge:          ; preds = %if.end.i.i141.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i75

lor.lhs.false.i.i145.i:                           ; preds = %if.end.i.i141.i
  %call.i.i142.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %call7.i, ptr noundef nonnull %_dccph.i41, i32 noundef 12) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i142.i)
  %cmp3.i.i143.i = icmp slt i32 %call.i.i142.i, 0
  br i1 %cmp3.i.i143.i, label %lor.lhs.false.i.i145.i.cleanup45.i75_crit_edge, label %lor.lhs.false.i.i145.i.if.end40.i_crit_edge

lor.lhs.false.i.i145.i.if.end40.i_crit_edge:      ; preds = %lor.lhs.false.i.i145.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40.i

lor.lhs.false.i.i145.i.cleanup45.i75_crit_edge:   ; preds = %lor.lhs.false.i.i145.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i75

skb_header_pointer.exit147.i:                     ; preds = %sw.bb35.i
  %180 = ptrtoint ptr %data.i.i47 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %data.i.i47, align 4
  %add.ptr.i.i138.i = getelementptr i8, ptr %181, i32 %call7.i
  %cmp37.i = icmp eq ptr %add.ptr.i.i138.i, null
  br i1 %cmp37.i, label %skb_header_pointer.exit147.i.cleanup45.i75_crit_edge, label %skb_header_pointer.exit147.i.if.end40.i_crit_edge

skb_header_pointer.exit147.i.if.end40.i_crit_edge: ; preds = %skb_header_pointer.exit147.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40.i

skb_header_pointer.exit147.i.cleanup45.i75_crit_edge: ; preds = %skb_header_pointer.exit147.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup45.i75

if.end40.i:                                       ; preds = %skb_header_pointer.exit147.i.if.end40.i_crit_edge, %lor.lhs.false.i.i145.i.if.end40.i_crit_edge
  %retval.0.i.i146189.i = phi ptr [ %add.ptr.i.i138.i, %skb_header_pointer.exit147.i.if.end40.i_crit_edge ], [ %_dccph.i41, %lor.lhs.false.i.i145.i.if.end40.i_crit_edge ]
  %182 = ptrtoint ptr %retval.0.i.i146189.i to i32
  call void @__asan_load2_noabort(i32 %182)
  %183 = load i16, ptr %retval.0.i.i146189.i, align 2
  %184 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %u, align 4
  %sport42.i = getelementptr inbounds %struct.lsm_network_audit, ptr %185, i32 0, i32 4
  %186 = ptrtoint ptr %sport42.i to i32
  call void @__asan_store2_noabort(i32 %186)
  store i16 %183, ptr %sport42.i, align 4
  %dccph_dport.i73 = getelementptr inbounds %struct.dccp_hdr, ptr %retval.0.i.i146189.i, i32 0, i32 1
  %187 = ptrtoint ptr %dccph_dport.i73 to i32
  call void @__asan_load2_noabort(i32 %187)
  %188 = load i16, ptr %dccph_dport.i73, align 2
  %189 = load ptr, ptr %u, align 4
  %dport44.i74 = getelementptr inbounds %struct.lsm_network_audit, ptr %189, i32 0, i32 3
  %190 = ptrtoint ptr %dport44.i74 to i32
  call void @__asan_store2_noabort(i32 %190)
  store i16 %188, ptr %dport44.i74, align 2
  br label %cleanup45.i75

cleanup45.i75:                                    ; preds = %if.end40.i, %skb_header_pointer.exit147.i.cleanup45.i75_crit_edge, %lor.lhs.false.i.i145.i.cleanup45.i75_crit_edge, %if.end.i.i141.i.cleanup45.i75_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %_dccph.i41) #23
  br label %if.end9

sw.bb47.i76:                                      ; preds = %if.end12.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %_sctph.i42) #23
  %191 = call ptr @memset(ptr %_sctph.i42, i32 255, i32 12)
  %192 = ptrtoint ptr %len.i.i.i51 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %len.i.i.i51, align 4
  %194 = ptrtoint ptr %data_len.i.i.i52 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %data_len.i.i.i52, align 8
  %196 = add i32 %call7.i, %195
  %sub.i4.i150.i = sub i32 %193, %196
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i4.i150.i)
  %cmp.not.i.i151.i = icmp slt i32 %sub.i4.i150.i, 12
  br i1 %cmp.not.i.i151.i, label %if.end.i.i156.i, label %skb_header_pointer.exit162.i, !prof !380

if.end.i.i156.i:                                  ; preds = %sw.bb47.i76
  %tobool2.not.i.i155.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i155.i, label %if.end.i.i156.i.cleanup59.i_crit_edge, label %lor.lhs.false.i.i160.i

if.end.i.i156.i.cleanup59.i_crit_edge:            ; preds = %if.end.i.i156.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup59.i

lor.lhs.false.i.i160.i:                           ; preds = %if.end.i.i156.i
  %call.i.i157.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %call7.i, ptr noundef nonnull %_sctph.i42, i32 noundef 12) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i157.i)
  %cmp3.i.i158.i = icmp slt i32 %call.i.i157.i, 0
  br i1 %cmp3.i.i158.i, label %lor.lhs.false.i.i160.i.cleanup59.i_crit_edge, label %lor.lhs.false.i.i160.i.if.end52.i_crit_edge

lor.lhs.false.i.i160.i.if.end52.i_crit_edge:      ; preds = %lor.lhs.false.i.i160.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end52.i

lor.lhs.false.i.i160.i.cleanup59.i_crit_edge:     ; preds = %lor.lhs.false.i.i160.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup59.i

skb_header_pointer.exit162.i:                     ; preds = %sw.bb47.i76
  %197 = ptrtoint ptr %data.i.i47 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %data.i.i47, align 4
  %add.ptr.i.i153.i = getelementptr i8, ptr %198, i32 %call7.i
  %cmp49.i = icmp eq ptr %add.ptr.i.i153.i, null
  br i1 %cmp49.i, label %skb_header_pointer.exit162.i.cleanup59.i_crit_edge, label %skb_header_pointer.exit162.i.if.end52.i_crit_edge

skb_header_pointer.exit162.i.if.end52.i_crit_edge: ; preds = %skb_header_pointer.exit162.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end52.i

skb_header_pointer.exit162.i.cleanup59.i_crit_edge: ; preds = %skb_header_pointer.exit162.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup59.i

if.end52.i:                                       ; preds = %skb_header_pointer.exit162.i.if.end52.i_crit_edge, %lor.lhs.false.i.i160.i.if.end52.i_crit_edge
  %retval.0.i.i161196.i = phi ptr [ %add.ptr.i.i153.i, %skb_header_pointer.exit162.i.if.end52.i_crit_edge ], [ %_sctph.i42, %lor.lhs.false.i.i160.i.if.end52.i_crit_edge ]
  %199 = ptrtoint ptr %retval.0.i.i161196.i to i32
  call void @__asan_load2_noabort(i32 %199)
  %200 = load i16, ptr %retval.0.i.i161196.i, align 4
  %201 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %u, align 4
  %sport55.i = getelementptr inbounds %struct.lsm_network_audit, ptr %202, i32 0, i32 4
  %203 = ptrtoint ptr %sport55.i to i32
  call void @__asan_store2_noabort(i32 %203)
  store i16 %200, ptr %sport55.i, align 4
  %dest56.i = getelementptr inbounds %struct.sctphdr, ptr %retval.0.i.i161196.i, i32 0, i32 1
  %204 = ptrtoint ptr %dest56.i to i32
  call void @__asan_load2_noabort(i32 %204)
  %205 = load i16, ptr %dest56.i, align 2
  %206 = load ptr, ptr %u, align 4
  %dport58.i = getelementptr inbounds %struct.lsm_network_audit, ptr %206, i32 0, i32 3
  %207 = ptrtoint ptr %dport58.i to i32
  call void @__asan_store2_noabort(i32 %207)
  store i16 %205, ptr %dport58.i, align 2
  br label %cleanup59.i

cleanup59.i:                                      ; preds = %if.end52.i, %skb_header_pointer.exit162.i.cleanup59.i_crit_edge, %lor.lhs.false.i.i160.i.cleanup59.i_crit_edge, %if.end.i.i156.i.cleanup59.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %_sctph.i42) #23
  br label %if.end9

selinux_parse_skb_ipv6.exit:                      ; preds = %skb_header_pointer.exit.i61.selinux_parse_skb_ipv6.exit_crit_edge, %lor.lhs.false.i.i.i59.selinux_parse_skb_ipv6.exit_crit_edge, %if.end.i.i.i56.selinux_parse_skb_ipv6.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %frag_off.i38) #23
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %_ipv6h.i) #23
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %nexthdr.i) #23
  br label %do.end

if.end9:                                          ; preds = %cleanup59.i, %cleanup45.i75, %cleanup33.i, %cleanup.i72, %if.end12.i.if.end9_crit_edge, %if.end.i65.if.end9_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %frag_off.i38) #23
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %_ipv6h.i) #23
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %nexthdr.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %src)
  %tobool10.not = icmp eq i32 %src, 0
  %208 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %u, align 4
  br i1 %tobool10.not, label %cond.false15, label %cond.true11

cond.true11:                                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  %saddr14 = getelementptr inbounds %struct.lsm_network_audit, ptr %209, i32 0, i32 5, i32 0, i32 1
  br label %okay

cond.false15:                                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  %fam17 = getelementptr inbounds %struct.lsm_network_audit, ptr %209, i32 0, i32 5
  br label %okay

do.end:                                           ; preds = %selinux_parse_skb_ipv6.exit, %selinux_parse_skb_ipv4.exit
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.79) #26
  br label %cleanup

okay:                                             ; preds = %cond.false15, %cond.true11, %cond.false, %cond.true, %entry.okay_crit_edge
  %addrp.0 = phi ptr [ %saddr, %cond.true ], [ %fam4, %cond.false ], [ %saddr14, %cond.true11 ], [ %fam17, %cond.false15 ], [ null, %entry.okay_crit_edge ]
  %tobool22.not = icmp eq ptr %_addrp, null
  br i1 %tobool22.not, label %okay.cleanup_crit_edge, label %if.then23

okay.cleanup_crit_edge:                           ; preds = %okay
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then23:                                        ; preds = %okay
  call void @__sanitizer_cov_trace_pc() #25
  %210 = ptrtoint ptr %_addrp to i32
  call void @__asan_store4_noabort(i32 %210)
  store ptr %addrp.0, ptr %_addrp, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %okay.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %if.then23 ], [ 0, %okay.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sel_netif_sid(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sel_netnode_sid(ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_postroute_last(i32 noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netlbl_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_bh_held() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_skb_sid(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_skbuff_getsid(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_net_peersid_resolve(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sid_mls_copy(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ipv6_skip_exthdr(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_inet_sys_rcv_skb(ptr noundef %ns, i32 noundef %ifindex, ptr noundef %addrp, i16 noundef zeroext %family, i32 noundef %peer_sid, ptr noundef %ad) unnamed_addr #1 align 64 {
entry:
  %if_sid = alloca i32, align 4
  %node_sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %if_sid) #23
  %0 = ptrtoint ptr %if_sid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %if_sid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %node_sid) #23
  %1 = ptrtoint ptr %node_sid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %node_sid, align 4, !annotation !376
  %call = call i32 @sel_netif_sid(ptr noundef %ns, i32 noundef %ifindex, ptr noundef nonnull %if_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %if_sid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %if_sid, align 4
  %call1 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %peer_sid, i32 noundef %3, i16 noundef zeroext 20, i32 noundef 1, ptr noundef %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @sel_netnode_sid(ptr noundef %addrp, i16 noundef zeroext %family, ptr noundef nonnull %node_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  %4 = ptrtoint ptr %node_sid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %node_sid, align 4
  %call9 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %peer_sid, i32 noundef %5, i16 noundef zeroext 19, i32 noundef 1, ptr noundef %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end8 ], [ %call, %entry.cleanup_crit_edge ], [ %call1, %if.end.cleanup_crit_edge ], [ %call5, %if.end4.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %node_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %if_sid) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_netlbl_err(ptr noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_skbuff_setsid(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @nf_unregister_net_hooks(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_pernet_subsys(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_binder_set_context_mgr(ptr nocapture noundef readonly %mgr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %security.i.i3 = getelementptr inbounds %struct.cred, ptr %mgr, i32 0, i32 23
  %11 = ptrtoint ptr %security.i.i3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security.i.i3, align 4
  %add.ptr.i.i4 = getelementptr i8, ptr %12, i32 %8
  %sid.i5 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i4, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i5, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %14, i16 noundef zeroext 57, i32 noundef 4, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_binder_transaction(ptr nocapture noundef readonly %from, ptr nocapture noundef readonly %to) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %security.i.i14 = getelementptr inbounds %struct.cred, ptr %from, i32 0, i32 23
  %11 = ptrtoint ptr %security.i.i14 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security.i.i14, align 4
  %add.ptr.i.i15 = getelementptr i8, ptr %12, i32 %8
  %sid.i16 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i15, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i16 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i16, align 4
  %security.i.i17 = getelementptr inbounds %struct.cred, ptr %to, i32 0, i32 23
  %15 = ptrtoint ptr %security.i.i17 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %security.i.i17, align 4
  %add.ptr.i.i18 = getelementptr i8, ptr %16, i32 %8
  %sid.i19 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i18, i32 0, i32 1
  %17 = ptrtoint ptr %sid.i19 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sid.i19, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %14)
  %cmp.not = icmp eq i32 %10, %14
  br i1 %cmp.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then:                                          ; preds = %entry
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %14, i16 noundef zeroext 57, i32 noundef 1, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then.if.end5_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.end5:                                          ; preds = %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  %call6 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %18, i16 noundef zeroext 57, i32 noundef 2, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end5 ], [ %call3, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_binder_transfer_binder(ptr nocapture noundef readonly %from, ptr nocapture noundef readonly %to) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i.i = getelementptr inbounds %struct.cred, ptr %from, i32 0, i32 23
  %0 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid.i, align 4
  %security.i.i3 = getelementptr inbounds %struct.cred, ptr %to, i32 0, i32 23
  %5 = ptrtoint ptr %security.i.i3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %security.i.i3, align 4
  %add.ptr.i.i4 = getelementptr i8, ptr %6, i32 %2
  %sid.i5 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i4, i32 0, i32 1
  %7 = ptrtoint ptr %sid.i5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sid.i5, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %8, i16 noundef zeroext 57, i32 noundef 8, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_binder_transfer_file(ptr nocapture noundef readnone %from, ptr nocapture noundef readonly %to, ptr nocapture noundef readonly %file) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i.i = getelementptr inbounds %struct.cred, ptr %to, i32 0, i32 23
  %0 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid.i, align 4
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %5 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_security.i, align 8
  %7 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %6, i32 %7
  %f_path = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %dentry2 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %dentry2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dentry2, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %10 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %11 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 1, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %12 = ptrtoint ptr %f_path to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %f_path, align 8
  %14 = ptrtoint ptr %u to i32
  call void @__asan_storeN_noabort(i32 %14, i32 8)
  store i64 %13, ptr %u, align 4
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %16)
  %cmp.not = icmp eq i32 %4, %16
  br i1 %cmp.not, label %entry.if.end8_crit_edge, label %if.then

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.then:                                          ; preds = %entry
  %call6 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %16, i16 noundef zeroext 9, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.then.if.end8_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.end8:                                          ; preds = %if.then.if.end8_crit_edge, %entry.if.end8_crit_edge
  %f_op.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 3
  %17 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %f_op.i, align 4
  %cmp.i = icmp eq ptr %18, @bpf_map_fops
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end8
  %private_data.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %19 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %private_data.i, align 4
  %security.i = getelementptr inbounds %struct.bpf_map, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %security.i, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  %f_mode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %25 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %f_mode.i, align 8
  %and.i.i = shl i32 %26, 1
  %27 = and i32 %and.i.i, 6
  %call2.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %24, i16 noundef zeroext 91, i32 noundef %27, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %if.then.i.if.end12_crit_edge, label %if.then.i.cleanup_crit_edge

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.i.if.end12_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.else.i:                                        ; preds = %if.end8
  %cmp5.i = icmp eq ptr %18, @bpf_prog_fops
  br i1 %cmp5.i, label %if.then6.i, label %if.else.i.if.end12_crit_edge

if.else.i.if.end12_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.then6.i:                                       ; preds = %if.else.i
  %private_data7.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %28 = ptrtoint ptr %private_data7.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %private_data7.i, align 4
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %29, i32 0, i32 10
  %30 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %aux.i, align 4
  %security8.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %31, i32 0, i32 47
  %32 = ptrtoint ptr %security8.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %security8.i, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %call10.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %35, i16 noundef zeroext 91, i32 noundef 16, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.then6.i.if.end12_crit_edge, label %if.then6.i.cleanup_crit_edge

if.then6.i.cleanup_crit_edge:                     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then6.i.if.end12_crit_edge:                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.end12:                                         ; preds = %if.then6.i.if.end12_crit_edge, %if.else.i.if.end12_crit_edge, %if.then.i.if.end12_crit_edge
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %9, i32 0, i32 5
  %36 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %d_inode.i, align 8
  %i_flags = getelementptr inbounds %struct.inode, ptr %37, i32 0, i32 4
  %38 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %i_flags, align 4
  %and = and i32 %39, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  br i1 %tobool14.not, label %if.end18, label %if.end12.cleanup_crit_edge, !prof !381

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end18:                                         ; preds = %if.end12
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %37, i32 0, i32 10
  %40 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %41, null
  br i1 %tobool.not.i.i.i, label %if.end18.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.end18.selinux_inode.exit.i.i_crit_edge:        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  %42 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %41, i32 %42
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.end18.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end18.selinux_inode.exit.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %43 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool.i.not.i.i = icmp eq i8 %43, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %44 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %45)
  %cmp.not.i.i = icmp eq i8 %45, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %37, ptr noundef %9) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %46 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %47, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %48 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i41 = getelementptr i8, ptr %47, i32 %48
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i41, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %sid20 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %49 = ptrtoint ptr %sid20 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sid20, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 4
  %51 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %sclass, align 4
  %f_mode.i42 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %53 = ptrtoint ptr %f_mode.i42 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %f_mode.i42, align 8
  %and.i = shl i32 %54, 1
  %55 = and i32 %and.i, 2
  %and2.i = and i32 %54, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %backing_inode_security.exit.file_to_av.exit_crit_edge, label %if.then4.i

backing_inode_security.exit.file_to_av.exit_crit_edge: ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %file_to_av.exit

if.then4.i:                                       ; preds = %backing_inode_security.exit
  %f_flags.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %56 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %f_flags.i, align 4
  %and5.i = and i32 %57, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else.i43, label %if.then7.i

if.then7.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %or8.i = or i32 %55, 512
  br label %file_to_av.exit

if.else.i43:                                      ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %or9.i = or i32 %55, 4
  br label %file_to_av.exit

file_to_av.exit:                                  ; preds = %if.else.i43, %if.then7.i, %backing_inode_security.exit.file_to_av.exit_crit_edge
  %av.1.i = phi i32 [ %or8.i, %if.then7.i ], [ %or9.i, %if.else.i43 ], [ %55, %backing_inode_security.exit.file_to_av.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %av.1.i)
  %tobool12.not.i = icmp eq i32 %av.1.i, 0
  %spec.store.select.i = select i1 %tobool12.not.i, i32 1, i32 %av.1.i
  %call22 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %50, i16 noundef zeroext %52, i32 noundef %spec.store.select.i, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %file_to_av.exit, %if.end12.cleanup_crit_edge, %if.then6.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call22, %file_to_av.exit ], [ %call6, %if.then.cleanup_crit_edge ], [ 0, %if.end12.cleanup_crit_edge ], [ %call10.i, %if.then6.i.cleanup_crit_edge ], [ %call2.i, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ptrace_access_check(ptr noundef %child, i32 noundef %mode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %child)
  %and = and i32 %mode, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 7, i32 noundef 2, ptr noundef null) #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 128, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call2, %if.then ], [ %call3, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ptrace_traceme(ptr noundef %parent) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @task_sid_obj(ptr noundef %parent)
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %call2 = tail call fastcc i32 @task_sid_obj(ptr noundef %3)
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %call, i32 noundef %call2, i16 noundef zeroext 2, i32 noundef 128, ptr noundef null) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_capget(ptr noundef %target, ptr nocapture noundef readnone %effective, ptr nocapture noundef readnone %inheritable, ptr nocapture noundef readnone %permitted) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %target)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 8192, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_capset(ptr nocapture noundef readonly %new, ptr nocapture noundef readonly %old, ptr nocapture noundef readnone %effective, ptr nocapture noundef readnone %inheritable, ptr nocapture noundef readnone %permitted) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i.i = getelementptr inbounds %struct.cred, ptr %old, i32 0, i32 23
  %0 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid.i, align 4
  %security.i.i3 = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %5 = ptrtoint ptr %security.i.i3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %security.i.i3, align 4
  %add.ptr.i.i4 = getelementptr i8, ptr %6, i32 %2
  %sid.i5 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i4, i32 0, i32 1
  %7 = ptrtoint ptr %sid.i5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sid.i5, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %4, i32 noundef %8, i16 noundef zeroext 2, i32 noundef 16384, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_capable(ptr nocapture noundef readonly %cred, ptr noundef readnone %ns, i32 noundef %cap, i32 noundef %opts) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %avd.i = alloca %struct.av_decision, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %ns, @init_user_ns
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %0 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %avd.i) #23
  %1 = getelementptr inbounds %struct.av_decision, ptr %avd.i, i32 0, i32 1
  %2 = getelementptr inbounds %struct.av_decision, ptr %avd.i, i32 0, i32 2
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %3 = call ptr @memset(ptr %avd.i, i32 255, i32 20)
  %4 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %security.i.i.i, align 4
  %6 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %5, i32 %6
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %7 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sid.i.i, align 4
  %and.i = and i32 %cap, 31
  %shl.i = shl nuw i32 1, %and.i
  %9 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 3, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %10 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %cap, ptr %u.i, align 4
  %shr.i = ashr i32 %cap, 5
  %11 = zext i32 %shr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.128)
  switch i32 %shr.i, label %do.end.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb1.i
  ]

sw.bb.i:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %conv.i = select i1 %cmp, i16 5, i16 58
  br label %sw.epilog.i

sw.bb1.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %conv5.i = select i1 %cmp, i16 54, i16 59
  br label %sw.epilog.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, i32 noundef %cap) #26
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22security/selinux/hooks.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1615, 0\0A.popsection", ""() #23, !srcloc !382
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb1.i, %sw.bb.i
  %sclass.0.i = phi i16 [ %conv5.i, %sw.bb1.i ], [ %conv.i, %sw.bb.i ]
  %call13.i = call i32 @avc_has_perm_noaudit(ptr noundef nonnull @selinux_state, i32 noundef %8, i32 noundef %8, i16 noundef zeroext %sclass.0.i, i32 noundef %shl.i, i32 noundef 0, ptr noundef nonnull %avd.i) #23
  %and14.i = and i32 %opts, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  br i1 %tobool15.not.i, label %if.then.i, label %sw.epilog.i.if.end19.i_crit_edge

sw.epilog.i.if.end19.i_crit_edge:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

if.then.i:                                        ; preds = %sw.epilog.i
  %12 = ptrtoint ptr %avd.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %avd.i, align 4
  %neg.i.i.i = xor i32 %13, -1
  %and.i.i.i = and i32 %shl.i, %neg.i.i.i
  %14 = and i32 %13, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i.i.not.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i.i.not.i, label %if.then.i.avc_audit_required.exit.i.i_crit_edge, label %if.else.i.i.i, !prof !380

if.then.i.avc_audit_required.exit.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit.i.i

if.else.i.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool10.not.i.i.i = icmp eq i32 %call13.i, 0
  br i1 %tobool10.not.i.i.i, label %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge, label %if.else.i.i.i.avc_audit.exit.i_crit_edge

if.else.i.i.i.avc_audit.exit.i_crit_edge:         ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit.exit.i

if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit.i.i

avc_audit_required.exit.i.i:                      ; preds = %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge, %if.then.i.avc_audit_required.exit.i.i_crit_edge
  %auditdeny3.i.sink.i.i = phi ptr [ %2, %if.then.i.avc_audit_required.exit.i.i_crit_edge ], [ %1, %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge ]
  %and.i.sink.i.i = phi i32 [ %and.i.i.i, %if.then.i.avc_audit_required.exit.i.i_crit_edge ], [ %shl.i, %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge ]
  %15 = ptrtoint ptr %auditdeny3.i.sink.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %auditdeny3.i.sink.i.i, align 4
  %and4.i.i.i = and i32 %16, %and.i.sink.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and4.i.i.i, 0
  br i1 %tobool.not.i.i, label %avc_audit_required.exit.i.i.if.end19.i_crit_edge, label %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge, !prof !381

avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge: ; preds = %avc_audit_required.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit.exit.i

avc_audit_required.exit.i.i.if.end19.i_crit_edge: ; preds = %avc_audit_required.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

avc_audit.exit.i:                                 ; preds = %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge, %if.else.i.i.i.avc_audit.exit.i_crit_edge
  %audited.0.i.i42.i = phi i32 [ %and4.i.i.i, %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge ], [ %shl.i, %if.else.i.i.i.avc_audit.exit.i_crit_edge ]
  %denied.0.i.i41.i = phi i32 [ %and.i.i.i, %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge ], [ %shl.i, %if.else.i.i.i.avc_audit.exit.i_crit_edge ]
  %call4.i.i = call i32 @slow_avc_audit(ptr noundef nonnull @selinux_state, i32 noundef %8, i32 noundef %8, i16 noundef zeroext %sclass.0.i, i32 noundef %shl.i, i32 noundef %audited.0.i.i42.i, i32 noundef %denied.0.i.i41.i, i32 noundef %call13.i, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool17.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool17.not.i, label %avc_audit.exit.i.if.end19.i_crit_edge, label %avc_audit.exit.i.cred_has_capability.exit_crit_edge

avc_audit.exit.i.cred_has_capability.exit_crit_edge: ; preds = %avc_audit.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cred_has_capability.exit

avc_audit.exit.i.if.end19.i_crit_edge:            ; preds = %avc_audit.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

if.end19.i:                                       ; preds = %avc_audit.exit.i.if.end19.i_crit_edge, %avc_audit_required.exit.i.i.if.end19.i_crit_edge, %sw.epilog.i.if.end19.i_crit_edge
  br label %cred_has_capability.exit

cred_has_capability.exit:                         ; preds = %if.end19.i, %avc_audit.exit.i.cred_has_capability.exit_crit_edge
  %retval.1.i = phi i32 [ %call13.i, %if.end19.i ], [ %call4.i.i, %avc_audit.exit.i.cred_has_capability.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %avd.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_quotactl(i32 noundef %cmds, i32 noundef %type, i32 noundef %id, ptr noundef readonly %sb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %tobool.not = icmp eq ptr %sb, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = zext i32 %cmds to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.129)
  switch i32 %cmds, label %if.end.cleanup_crit_edge [
    i32 8388609, label %if.end.cleanup.sink.split_crit_edge
    i32 8388610, label %if.end.cleanup.sink.split_crit_edge20
    i32 8388611, label %if.end.cleanup.sink.split_crit_edge21
    i32 8388614, label %if.end.cleanup.sink.split_crit_edge22
    i32 8388616, label %if.end.cleanup.sink.split_crit_edge23
    i32 22530, label %if.end.cleanup.sink.split_crit_edge24
    i32 22529, label %if.end.cleanup.sink.split_crit_edge25
    i32 22532, label %if.end.cleanup.sink.split_crit_edge26
    i32 8388612, label %if.end.sw.bb3_crit_edge
    i32 8388613, label %if.end.sw.bb3_crit_edge27
    i32 8388615, label %if.end.sw.bb3_crit_edge28
    i32 22531, label %if.end.sw.bb3_crit_edge29
    i32 22533, label %if.end.sw.bb3_crit_edge30
    i32 22536, label %if.end.sw.bb3_crit_edge31
    i32 22537, label %if.end.sw.bb3_crit_edge32
  ]

if.end.sw.bb3_crit_edge32:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.sw.bb3_crit_edge31:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.sw.bb3_crit_edge30:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.sw.bb3_crit_edge29:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.sw.bb3_crit_edge28:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.sw.bb3_crit_edge27:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.sw.bb3_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

if.end.cleanup.sink.split_crit_edge26:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge25:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge24:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge23:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge22:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge21:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge20:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb3:                                           ; preds = %if.end.sw.bb3_crit_edge, %if.end.sw.bb3_crit_edge27, %if.end.sw.bb3_crit_edge28, %if.end.sw.bb3_crit_edge29, %if.end.sw.bb3_crit_edge30, %if.end.sw.bb3_crit_edge31, %if.end.sw.bb3_crit_edge32
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %sw.bb3, %if.end.cleanup.sink.split_crit_edge, %if.end.cleanup.sink.split_crit_edge20, %if.end.cleanup.sink.split_crit_edge21, %if.end.cleanup.sink.split_crit_edge22, %if.end.cleanup.sink.split_crit_edge23, %if.end.cleanup.sink.split_crit_edge24, %if.end.cleanup.sink.split_crit_edge25, %if.end.cleanup.sink.split_crit_edge26
  %.sink16 = phi i32 [ 256, %sw.bb3 ], [ 128, %if.end.cleanup.sink.split_crit_edge ], [ 128, %if.end.cleanup.sink.split_crit_edge20 ], [ 128, %if.end.cleanup.sink.split_crit_edge21 ], [ 128, %if.end.cleanup.sink.split_crit_edge22 ], [ 128, %if.end.cleanup.sink.split_crit_edge23 ], [ 128, %if.end.cleanup.sink.split_crit_edge24 ], [ 128, %if.end.cleanup.sink.split_crit_edge25 ], [ 128, %if.end.cleanup.sink.split_crit_edge26 ]
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %12 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %s_security.i.i, align 4
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %add.ptr.i.i, align 4
  %call3.i = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %16, i16 noundef zeroext 6, i32 noundef %.sink16, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call3.i, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_quota_on(ptr noundef %dentry) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %call2 = tail call fastcc i32 @dentry_has_perm(ptr noundef %5, ptr noundef %dentry, i32 noundef 32768)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_syslog(i32 noundef %type) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %switch.tableidx = add i32 %type, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %switch.tableidx)
  %0 = icmp ult i32 %switch.tableidx, 8
  br i1 %0, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.selinux_syslog, i32 0, i32 %switch.tableidx
  %1 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %1)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %.sink19 = phi i32 [ %switch.load, %switch.lookup ], [ 4, %entry.return_crit_edge ]
  %2 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i13 = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i13 to ptr
  %task.i14 = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i14 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i14, align 8
  %cred.i15 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %6 = ptrtoint ptr %cred.i15 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cred.i15, align 16
  %security.i.i16 = getelementptr inbounds %struct.cred, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %security.i.i16 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security.i.i16, align 4
  %10 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i17 = getelementptr i8, ptr %9, i32 %10
  %sid.i18 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i17, i32 0, i32 1
  %11 = ptrtoint ptr %sid.i18 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid.i18, align 4
  %call6 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef 1, i16 noundef zeroext 4, i32 noundef %.sink19, ptr noundef null) #23
  ret i32 %call6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_vm_enough_memory(ptr nocapture noundef readnone %mm, i32 noundef %pages) #1 align 64 {
entry:
  %avd.i = alloca %struct.av_decision, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %avd.i) #23
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = call ptr @memset(ptr %avd.i, i32 255, i32 20)
  %7 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i.i, align 4
  %call13.i = call i32 @avc_has_perm_noaudit(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %11, i16 noundef zeroext 5, i32 noundef 2097152, i32 noundef 0, ptr noundef nonnull %avd.i) #23
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %avd.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %cmp = icmp eq i32 %call13.i, 0
  %spec.select = zext i1 %cmp to i32
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_netlink_send(ptr noundef %sk, ptr nocapture noundef readonly %skb) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  %perm = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  %data1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data1, align 4
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %4 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk_security, align 8
  %sclass2 = getelementptr inbounds %struct.sk_security_struct, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %sclass2 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %sclass2, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %perm) #23
  %8 = ptrtoint ptr %perm to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %perm, align 4, !annotation !376
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %1)
  %cmp77 = icmp ugt i32 %1, 15
  br i1 %cmp77, label %while.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

while.body.lr.ph:                                 ; preds = %entry
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %conv19 = zext i16 %7 to i32
  %sub = add nsw i32 %conv19, -1
  %arrayidx = getelementptr [0 x %struct.security_class_mapping], ptr @secclass_map, i32 0, i32 %sub
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  br label %while.body

while.body:                                       ; preds = %if.end39.while.body_crit_edge, %while.body.lr.ph
  %data.079 = phi ptr [ %3, %while.body.lr.ph ], [ %add.ptr, %if.end39.while.body_crit_edge ]
  %data_len.078 = phi i32 [ %1, %while.body.lr.ph ], [ %sub46, %if.end39.while.body_crit_edge ]
  %9 = ptrtoint ptr %data.079 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data.079, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %10)
  %cmp3 = icmp ult i32 %10, 16
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %data_len.078)
  %cmp5 = icmp ugt i32 %10, %data_len.078
  %or.cond = select i1 %cmp3, i1 true, i1 %cmp5
  br i1 %or.cond, label %while.body.cleanup_crit_edge, label %if.end

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %while.body
  %nlmsg_type = getelementptr inbounds %struct.nlmsghdr, ptr %data.079, i32 0, i32 1
  %11 = ptrtoint ptr %nlmsg_type to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %nlmsg_type, align 4
  %call6 = call i32 @selinux_nlmsg_lookup(i16 noundef zeroext %7, i16 noundef zeroext %12, ptr noundef nonnull %perm) #23
  %13 = zext i32 %call6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.130)
  switch i32 %call6, label %if.end.cleanup_crit_edge [
    i32 0, label %if.then8
    i32 -22, label %if.then13
    i32 -2, label %if.end.if.end39_crit_edge
  ]

if.end.if.end39_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then8:                                         ; preds = %if.end
  %14 = ptrtoint ptr %perm to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %perm, align 4
  %16 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sk_security, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %18 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %19 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %17, i32 0, i32 2
  %20 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp.i = icmp eq i32 %21, 1
  br i1 %cmp.i, label %sock_has_perm.exit.thread, label %sock_has_perm.exit

sock_has_perm.exit.thread:                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %if.end39

sock_has_perm.exit:                               ; preds = %if.then8
  %22 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 2, ptr %ad.i, align 4
  %23 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %net.i, ptr %u.i, align 4
  %24 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %sk, ptr %sk2.i, align 4
  %25 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 99
  %29 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %30, i32 0, i32 23
  %31 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %security.i.i.i, align 4
  %33 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %32, i32 %33
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %34 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %17, i32 0, i32 4
  %36 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %35, i32 noundef %21, i16 noundef zeroext %37, i32 noundef %15, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %sock_has_perm.exit.if.end39_crit_edge, label %sock_has_perm.exit.cleanup_crit_edge

sock_has_perm.exit.cleanup_crit_edge:             ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sock_has_perm.exit.if.end39_crit_edge:            ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then13:                                        ; preds = %if.end
  %call14 = call i32 @___ratelimit(ptr noundef nonnull @selinux_netlink_send._rs, ptr noundef nonnull @__func__.selinux_netlink_send) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then13.if.end25_crit_edge, label %do.end

if.then13.if.end25_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end25

do.end:                                           ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #25
  %38 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %sk_protocol, align 4
  %conv = zext i16 %39 to i32
  %40 = ptrtoint ptr %nlmsg_type to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %nlmsg_type, align 4
  %conv18 = zext i16 %41 to i32
  %42 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx, align 4
  %44 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %44, -16384
  %45 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %task, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %47, i32 0, i32 68
  %48 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %pid.i, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %47, i32 0, i32 101
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89, i32 noundef %conv, i32 noundef %conv18, ptr noundef %43, i32 noundef %49, ptr noundef %comm) #26
  br label %if.end25

if.end25:                                         ; preds = %do.end, %if.then13.if.end25_crit_edge
  %50 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 1), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool.i.not = icmp eq i8 %50, 0
  br i1 %tobool.i.not, label %if.end25.if.end39_crit_edge, label %land.lhs.true

if.end25.if.end39_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

land.lhs.true:                                    ; preds = %if.end25
  %call28 = call i32 @security_get_allow_unknown(ptr noundef nonnull @selinux_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end39_crit_edge

land.lhs.true.if.end39_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end39:                                         ; preds = %land.lhs.true.if.end39_crit_edge, %if.end25.if.end39_crit_edge, %sock_has_perm.exit.if.end39_crit_edge, %sock_has_perm.exit.thread, %if.end.if.end39_crit_edge
  %51 = ptrtoint ptr %data.079 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %data.079, align 4
  %sub41 = add i32 %52, 3
  %and = and i32 %sub41, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %data_len.078, i32 %and)
  %cmp42.not = icmp ugt i32 %data_len.078, %and
  %sub46 = sub i32 %data_len.078, %and
  %add.ptr = getelementptr i8, ptr %data.079, i32 %and
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %sub46)
  %cmp = icmp ugt i32 %sub46, 15
  %or.cond85 = and i1 %cmp42.not, %cmp
  br i1 %or.cond85, label %if.end39.while.body_crit_edge, label %if.end39.cleanup_crit_edge

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end39.while.body_crit_edge:                    ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

cleanup:                                          ; preds = %if.end39.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %sock_has_perm.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %while.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end39.cleanup_crit_edge ], [ %call6, %if.end.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ %call4.i, %sock_has_perm.exit.cleanup_crit_edge ], [ 0, %while.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %perm) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_bprm_creds_for_exec(ptr nocapture noundef %bprm) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %file = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 8
  %1 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %file, align 4
  %f_inode.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_inode.i, align 8
  %5 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 99
  %9 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %10, i32 0, i32 23
  %11 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security.i, align 4
  %13 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %12, i32 %13
  %cred3 = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 9
  %14 = ptrtoint ptr %cred3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cred3, align 4
  %security.i144 = getelementptr inbounds %struct.cred, ptr %15, i32 0, i32 23
  %16 = ptrtoint ptr %security.i144 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %security.i144, align 4
  %add.ptr.i145 = getelementptr i8, ptr %17, i32 %13
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 10
  %18 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i.i.i, label %entry.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

entry.selinux_inode.exit.i.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %20 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %19, i32 %20
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %entry.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %entry.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %21 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.i.not.i.i = icmp eq i8 %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %22 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %23)
  %cmp.not.i.i = icmp eq i8 %23, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %4, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %24 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %25, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %26 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %25, i32 %26
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %27 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sid, align 4
  %sid6 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i145, i32 0, i32 1
  %29 = ptrtoint ptr %sid6 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %sid6, align 4
  %30 = load i32, ptr %sid, align 4
  %31 = ptrtoint ptr %add.ptr.i145 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %add.ptr.i145, align 4
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i145, i32 0, i32 3
  %32 = ptrtoint ptr %create_sid to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %create_sid, align 4
  %keycreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i145, i32 0, i32 4
  %33 = ptrtoint ptr %keycreate_sid to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %keycreate_sid, align 4
  %sockcreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i145, i32 0, i32 5
  %34 = ptrtoint ptr %sockcreate_sid to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %sockcreate_sid, align 4
  %exec_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %35 = ptrtoint ptr %exec_sid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %exec_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not = icmp eq i32 %36, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %inode_security.exit
  %37 = ptrtoint ptr %sid6 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %sid6, align 4
  %exec_sid10 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i145, i32 0, i32 2
  %38 = ptrtoint ptr %exec_sid10 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %exec_sid10, align 4
  %unsafe.i = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 10
  %39 = ptrtoint ptr %unsafe.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %unsafe.i, align 4
  %and.i146 = and i32 %40, 4
  %41 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %file, align 4
  %f_path.i = getelementptr inbounds %struct.file, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %f_path.i, align 8
  %call.i = tail call zeroext i1 @mnt_may_suid(ptr noundef %44) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i146)
  %tobool.not.i = icmp eq i32 %and.i146, 0
  %45 = select i1 %tobool.not.i, i1 %call.i, i1 false
  br i1 %45, label %if.then.if.end27_crit_edge, label %if.end.i

if.then.if.end27_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.end.i:                                         ; preds = %if.then
  %46 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sid6, align 4
  %48 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %49)
  %cmp.i = icmp eq i32 %47, %49
  br i1 %cmp.i, label %if.end.i.if.end27_crit_edge, label %if.end4.i

if.end.i.if.end27_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.end4.i:                                        ; preds = %if.end.i
  %50 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 5), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool.i.not.i = icmp eq i8 %50, 0
  br i1 %tobool.i.not.i, label %if.end4.i.if.end20.i_crit_edge, label %if.then6.i

if.end4.i.if.end20.i_crit_edge:                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20.i

if.then6.i:                                       ; preds = %if.end4.i
  %not.tobool.not.i = xor i1 %tobool.not.i, true
  %spec.select.i = zext i1 %not.tobool.not.i to i32
  %or12.i = or i32 %spec.select.i, 2
  %av.1.i = select i1 %call.i, i32 %spec.select.i, i32 %or12.i
  %call16.i = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %49, i32 noundef %47, i16 noundef zeroext 3, i32 noundef %av.1.i, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i, label %if.then6.i.if.end27_crit_edge, label %if.then6.i.if.end20.i_crit_edge

if.then6.i.if.end20.i_crit_edge:                  ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20.i

if.then6.i.if.end27_crit_edge:                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.end20.i:                                       ; preds = %if.then6.i.if.end20.i_crit_edge, %if.end4.i.if.end20.i_crit_edge
  %51 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %sid, align 4
  %53 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sid6, align 4
  %call23.i = tail call i32 @security_bounded_transition(ptr noundef nonnull @selinux_state, i32 noundef %52, i32 noundef %54) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  %..i = select i1 %tobool.not.i, i32 -13, i32 -1
  br i1 %tobool24.not.i, label %if.end20.i.if.end27_crit_edge, label %if.end20.i.cleanup83_crit_edge

if.end20.i.cleanup83_crit_edge:                   ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.end20.i.if.end27_crit_edge:                    ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.else:                                          ; preds = %inode_security.exit
  %55 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %sid, align 4
  %sid15 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %57 = ptrtoint ptr %sid15 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sid15, align 4
  %call17 = tail call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %56, i32 noundef %58, i16 noundef zeroext 2, ptr noundef null, ptr noundef %sid6) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %if.else.cleanup83_crit_edge

if.else.cleanup83_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.end20:                                         ; preds = %if.else
  %unsafe.i147 = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 10
  %59 = ptrtoint ptr %unsafe.i147 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %unsafe.i147, align 4
  %and.i148 = and i32 %60, 4
  %61 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %file, align 4
  %f_path.i150 = getelementptr inbounds %struct.file, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %f_path.i150 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %f_path.i150, align 8
  %call.i151 = tail call zeroext i1 @mnt_may_suid(ptr noundef %64) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i148)
  %tobool.not.i152 = icmp eq i32 %and.i148, 0
  %65 = select i1 %tobool.not.i152, i1 %call.i151, i1 false
  br i1 %65, label %if.end20.if.end27_crit_edge, label %if.end.i156

if.end20.if.end27_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.end.i156:                                      ; preds = %if.end20
  %66 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %sid6, align 4
  %68 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %sid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %67, i32 %69)
  %cmp.i155 = icmp eq i32 %67, %69
  br i1 %cmp.i155, label %if.end.i156.if.end27_crit_edge, label %if.end4.i158

if.end.i156.if.end27_crit_edge:                   ; preds = %if.end.i156
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.end4.i158:                                     ; preds = %if.end.i156
  %70 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 5), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool.i.not.i157 = icmp eq i8 %70, 0
  br i1 %tobool.i.not.i157, label %if.end4.i158.if.end20.i170_crit_edge, label %if.then6.i165

if.end4.i158.if.end20.i170_crit_edge:             ; preds = %if.end4.i158
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20.i170

if.then6.i165:                                    ; preds = %if.end4.i158
  %not.tobool.not.i159 = xor i1 %tobool.not.i152, true
  %spec.select.i160 = zext i1 %not.tobool.not.i159 to i32
  %or12.i161 = or i32 %spec.select.i160, 2
  %av.1.i162 = select i1 %call.i151, i32 %spec.select.i160, i32 %or12.i161
  %call16.i163 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %69, i32 noundef %67, i16 noundef zeroext 3, i32 noundef %av.1.i162, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i163)
  %tobool17.not.i164 = icmp eq i32 %call16.i163, 0
  br i1 %tobool17.not.i164, label %if.then6.i165.if.end27_crit_edge, label %if.then6.i165.if.end20.i170_crit_edge

if.then6.i165.if.end20.i170_crit_edge:            ; preds = %if.then6.i165
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20.i170

if.then6.i165.if.end27_crit_edge:                 ; preds = %if.then6.i165
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.end20.i170:                                    ; preds = %if.then6.i165.if.end20.i170_crit_edge, %if.end4.i158.if.end20.i170_crit_edge
  %71 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %sid, align 4
  %73 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %sid6, align 4
  %call23.i166 = tail call i32 @security_bounded_transition(ptr noundef nonnull @selinux_state, i32 noundef %72, i32 noundef %74) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i166)
  %tobool24.not.i167 = icmp eq i32 %call23.i166, 0
  br i1 %tobool24.not.i167, label %if.end20.i170.if.end27_crit_edge, label %if.then23

if.end20.i170.if.end27_crit_edge:                 ; preds = %if.end20.i170
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.then23:                                        ; preds = %if.end20.i170
  call void @__sanitizer_cov_trace_pc() #25
  %75 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %sid, align 4
  %77 = ptrtoint ptr %sid6 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %sid6, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end20.i170.if.end27_crit_edge, %if.then6.i165.if.end27_crit_edge, %if.end.i156.if.end27_crit_edge, %if.end20.if.end27_crit_edge, %if.end20.i.if.end27_crit_edge, %if.then6.i.if.end27_crit_edge, %if.end.i.if.end27_crit_edge, %if.then.if.end27_crit_edge
  %78 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %78)
  store i8 12, ptr %ad, align 4
  %79 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %file, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %81 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %80, ptr %u, align 4
  %82 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %sid6, align 4
  %84 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %sid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %83, i32 %85)
  %cmp = icmp eq i32 %83, %85
  br i1 %cmp, label %if.then31, label %if.else38

if.then31:                                        ; preds = %if.end27
  %sid33 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %86 = ptrtoint ptr %sid33 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %sid33, align 4
  %call34 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %83, i32 noundef %87, i16 noundef zeroext 7, i32 noundef 33554432, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.then31.if.end82_crit_edge, label %if.then31.cleanup83_crit_edge

if.then31.cleanup83_crit_edge:                    ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.then31.if.end82_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end82

if.else38:                                        ; preds = %if.end27
  %call41 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %85, i32 noundef %83, i16 noundef zeroext 2, i32 noundef 2, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.else38.cleanup83_crit_edge

if.else38.cleanup83_crit_edge:                    ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.end44:                                         ; preds = %if.else38
  %88 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %sid6, align 4
  %sid46 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %90 = ptrtoint ptr %sid46 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %sid46, align 4
  %call47 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %89, i32 noundef %91, i16 noundef zeroext 7, i32 noundef 67108864, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %if.end50, label %if.end44.cleanup83_crit_edge

if.end44.cleanup83_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.end50:                                         ; preds = %if.end44
  %unsafe = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 10
  %92 = ptrtoint ptr %unsafe to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %unsafe, align 4
  %and = and i32 %93, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool51.not = icmp eq i32 %and, 0
  br i1 %tobool51.not, label %if.end50.if.end59_crit_edge, label %if.then52

if.end50.if.end59_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end59

if.then52:                                        ; preds = %if.end50
  %94 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %sid, align 4
  %96 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %sid6, align 4
  %call55 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %95, i32 noundef %97, i16 noundef zeroext 2, i32 noundef 32768, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.then52.if.end59_crit_edge, label %if.then52.cleanup83_crit_edge

if.then52.cleanup83_crit_edge:                    ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.then52.if.end59_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end59

if.end59:                                         ; preds = %if.then52.if.end59_crit_edge, %if.end50.if.end59_crit_edge
  %98 = ptrtoint ptr %unsafe to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %unsafe, align 4
  %and61 = and i32 %99, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %if.end59.if.end73_crit_edge, label %if.then63

if.end59.if.end73_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.then63:                                        ; preds = %if.end59
  %call64 = call fastcc i32 @ptrace_parent_sid()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %cmp65.not = icmp eq i32 %call64, 0
  br i1 %cmp65.not, label %if.then63.if.end73_crit_edge, label %if.then66

if.then63.if.end73_crit_edge:                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.then66:                                        ; preds = %if.then63
  %100 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %sid6, align 4
  %call68 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %call64, i32 noundef %101, i16 noundef zeroext 2, i32 noundef 128, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.then66.if.end73_crit_edge, label %if.then66.cleanup83_crit_edge

if.then66.cleanup83_crit_edge:                    ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup83

if.then66.if.end73_crit_edge:                     ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.end73:                                         ; preds = %if.then66.if.end73_crit_edge, %if.then63.if.end73_crit_edge, %if.end59.if.end73_crit_edge
  %per_clear = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 11
  %102 = ptrtoint ptr %per_clear to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %per_clear, align 4
  %or = or i32 %103, 7602176
  store i32 %or, ptr %per_clear, align 4
  %104 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %sid, align 4
  %106 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %sid6, align 4
  %call76 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %105, i32 noundef %107, i16 noundef zeroext 2, i32 noundef 524288, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76)
  %tobool77.not = icmp eq i32 %call76, 0
  %secureexec = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 5
  %108 = ptrtoint ptr %secureexec to i32
  call void @__asan_load1_noabort(i32 %108)
  %bf.load = load i8, ptr %secureexec, align 4
  %bf.load.mask = and i8 %bf.load, 32
  %bf.shl = select i1 %tobool77.not, i8 %bf.load.mask, i8 32
  %bf.clear81 = and i8 %bf.load, -33
  %bf.set = or i8 %bf.shl, %bf.clear81
  store i8 %bf.set, ptr %secureexec, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.end73, %if.then31.if.end82_crit_edge
  br label %cleanup83

cleanup83:                                        ; preds = %if.end82, %if.then66.cleanup83_crit_edge, %if.then52.cleanup83_crit_edge, %if.end44.cleanup83_crit_edge, %if.else38.cleanup83_crit_edge, %if.then31.cleanup83_crit_edge, %if.else.cleanup83_crit_edge, %if.end20.i.cleanup83_crit_edge
  %retval.1 = phi i32 [ 0, %if.end82 ], [ %call17, %if.else.cleanup83_crit_edge ], [ %call34, %if.then31.cleanup83_crit_edge ], [ %call41, %if.else38.cleanup83_crit_edge ], [ %call47, %if.end44.cleanup83_crit_edge ], [ -1, %if.then52.cleanup83_crit_edge ], [ -1, %if.then66.cleanup83_crit_edge ], [ %..i, %if.end20.i.cleanup83_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_bprm_committing_creds(ptr nocapture noundef readonly %bprm) #1 align 64 {
entry:
  %ad.i.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %cred = getelementptr inbounds %struct.linux_binprm, ptr %bprm, i32 0, i32 9
  %0 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cred, align 4
  %security.i = getelementptr inbounds %struct.cred, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %security.i, align 4
  %4 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 %4
  %sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %5 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sid, align 4
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp = icmp eq i32 %6, %8
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %files = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 108
  %13 = ptrtoint ptr %files to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %files, align 4
  %call.i = tail call ptr @get_current_tty() #23
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.if.end14.i_crit_edge, label %if.then.i

if.end.if.end14.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i

if.then.i:                                        ; preds = %if.end
  %files_lock.i = getelementptr inbounds %struct.tty_struct, ptr %call.i, i32 0, i32 31
  tail call void @_raw_spin_lock(ptr noundef %files_lock.i) #23
  %tty_files.i = getelementptr inbounds %struct.tty_struct, ptr %call.i, i32 0, i32 32
  %15 = ptrtoint ptr %tty_files.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %tty_files.i, align 4
  %cmp.i.not.i = icmp eq ptr %16, %tty_files.i
  br i1 %cmp.i.not.i, label %if.end14.critedge.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %file5.i = getelementptr i8, ptr %16, i32 -4
  %17 = ptrtoint ptr %file5.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %file5.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i.i) #23
  %19 = call ptr @memset(ptr %ad.i.i, i32 255, i32 16)
  %20 = ptrtoint ptr %ad.i.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 12, ptr %ad.i.i, align 4
  %u.i.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %u.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %u.i.i, align 4
  %f_inode.i.i.i = getelementptr inbounds %struct.file, ptr %18, i32 0, i32 2
  %22 = ptrtoint ptr %f_inode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %f_inode.i.i.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %1) #23
  br i1 %call.i.i.i.i, label %if.then.i.i.i.i, label %if.then3.i.__validate_creds.exit.i.i.i_crit_edge, !prof !380

if.then3.i.__validate_creds.exit.i.i.i_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %1, ptr noundef nonnull @.str.2, i32 noundef 1641) #23
  br label %__validate_creds.exit.i.i.i

__validate_creds.exit.i.i.i:                      ; preds = %if.then.i.i.i.i, %if.then3.i.__validate_creds.exit.i.i.i_crit_edge
  %i_flags.i.i.i = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %i_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %i_flags.i.i.i, align 4
  %and.i.i.i = and i32 %25, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %file_path_has_perm.exit.thread.i, !prof !381

file_path_has_perm.exit.thread.i:                 ; preds = %__validate_creds.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i.i) #23
  br label %if.end11.i

if.end.i.i.i:                                     ; preds = %__validate_creds.exit.i.i.i
  %26 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %security.i, align 4
  %28 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %27, i32 %28
  %sid.i.i.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i.i.i, i32 0, i32 1
  %29 = ptrtoint ptr %sid.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sid.i.i.i.i, align 4
  %i_security.i.i.i.i = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 10
  %31 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %32, null
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.file_path_has_perm.exit.i_crit_edge, label %if.end.i.i.i.i, !prof !380

if.end.i.i.i.file_path_has_perm.exit.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %file_path_has_perm.exit.i

if.end.i.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %33 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %32, i32 %33
  br label %file_path_has_perm.exit.i

file_path_has_perm.exit.i:                        ; preds = %if.end.i.i.i.i, %if.end.i.i.i.file_path_has_perm.exit.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.end.i.i.i.i ], [ null, %if.end.i.i.i.file_path_has_perm.exit.i_crit_edge ]
  %sid4.i.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i.i, i32 0, i32 3
  %34 = ptrtoint ptr %sid4.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sid4.i.i.i, align 4
  %sclass.i.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i.i, i32 0, i32 4
  %36 = ptrtoint ptr %sclass.i.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %sclass.i.i.i, align 4
  %call5.i.i.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %30, i32 noundef %35, i16 noundef zeroext %37, i32 noundef 6, ptr noundef nonnull %ad.i.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i.i)
  %tobool7.not.i = icmp eq i32 %call5.i.i.i, 0
  br i1 %tobool7.not.i, label %file_path_has_perm.exit.i.if.end11.i_crit_edge, label %if.then13.critedge.i

file_path_has_perm.exit.i.if.end11.i_crit_edge:   ; preds = %file_path_has_perm.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11.i

if.end11.i:                                       ; preds = %file_path_has_perm.exit.i.if.end11.i_crit_edge, %file_path_has_perm.exit.thread.i
  call void @_raw_spin_unlock(ptr noundef %files_lock.i) #23
  call void @tty_kref_put(ptr noundef nonnull %call.i) #23
  br label %if.end14.i

if.then13.critedge.i:                             ; preds = %file_path_has_perm.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @_raw_spin_unlock(ptr noundef %files_lock.i) #23
  call void @tty_kref_put(ptr noundef nonnull %call.i) #23
  call void @no_tty() #23
  br label %if.end14.i

if.end14.critedge.i:                              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @_raw_spin_unlock(ptr noundef %files_lock.i) #23
  tail call void @tty_kref_put(ptr noundef nonnull %call.i) #23
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.end14.critedge.i, %if.then13.critedge.i, %if.end11.i, %if.end.if.end14.i_crit_edge
  %call15.i = call i32 @iterate_fd(ptr noundef %14, i32 noundef 0, ptr noundef nonnull @match_file, ptr noundef %1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %if.end14.i.flush_unauthorized_files.exit_crit_edge, label %if.end18.i

if.end14.i.flush_unauthorized_files.exit_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %flush_unauthorized_files.exit

if.end18.i:                                       ; preds = %if.end14.i
  %call19.i = call ptr @dentry_open(ptr noundef nonnull @selinux_null, i32 noundef 2, ptr noundef %1) #23
  %cmp.i47.i = icmp ugt ptr %call19.i, inttoptr (i32 -4096 to ptr)
  %spec.select46.i = select i1 %cmp.i47.i, ptr null, ptr %call19.i
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end18.i
  %n.0.i = phi i32 [ %call15.i, %if.end18.i ], [ %call24.i, %do.body.i.do.body.i_crit_edge ]
  %sub.i = add i32 %n.0.i, -1
  %call23.i = call i32 @replace_fd(i32 noundef %sub.i, ptr noundef %spec.select46.i, i32 noundef 0) #23
  %call24.i = call i32 @iterate_fd(ptr noundef %14, i32 noundef %n.0.i, ptr noundef nonnull @match_file, ptr noundef %1) #23
  %cmp.not.i = icmp eq i32 %call24.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

do.end.i:                                         ; preds = %do.body.i
  %tobool25.not.i = icmp eq ptr %spec.select46.i, null
  br i1 %tobool25.not.i, label %do.end.i.flush_unauthorized_files.exit_crit_edge, label %if.then26.i

do.end.i.flush_unauthorized_files.exit_crit_edge: ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %flush_unauthorized_files.exit

if.then26.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @fput(ptr noundef nonnull %spec.select46.i) #23
  br label %flush_unauthorized_files.exit

flush_unauthorized_files.exit:                    ; preds = %if.then26.i, %do.end.i.flush_unauthorized_files.exit_crit_edge, %if.end14.i.flush_unauthorized_files.exit_crit_edge
  %38 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task, align 8
  %pdeath_signal = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 60
  %40 = ptrtoint ptr %pdeath_signal to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %pdeath_signal, align 8
  %41 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %add.ptr.i, align 4
  %43 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sid, align 4
  %call7 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %42, i32 noundef %44, i16 noundef zeroext 2, i32 noundef 4194304, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %flush_unauthorized_files.exit.cleanup_crit_edge, label %if.then8

flush_unauthorized_files.exit.cleanup_crit_edge:  ; preds = %flush_unauthorized_files.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then8:                                         ; preds = %flush_unauthorized_files.exit
  %45 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %task, align 8
  %alloc_lock.i = getelementptr inbounds %struct.task_struct, ptr %46, i32 0, i32 127
  call void @_raw_spin_lock(ptr noundef %alloc_lock.i) #23
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then8
  %i.042 = phi i32 [ 0, %if.then8 ], [ %inc, %for.body.for.body_crit_edge ]
  %47 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %task, align 8
  %signal = getelementptr inbounds %struct.task_struct, ptr %48, i32 0, i32 111
  %49 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %signal, align 16
  %rlim14 = getelementptr inbounds %struct.signal_struct, ptr %50, i32 0, i32 51
  %add.ptr = getelementptr %struct.rlimit, ptr %rlim14, i32 %i.042
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 111) to i32))
  %51 = load ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 111), align 16
  %rlim15 = getelementptr inbounds %struct.signal_struct, ptr %51, i32 0, i32 51
  %add.ptr17 = getelementptr %struct.rlimit, ptr %rlim15, i32 %i.042
  %rlim_max = getelementptr %struct.rlimit, ptr %rlim14, i32 %i.042, i32 1
  %52 = ptrtoint ptr %rlim_max to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rlim_max, align 4
  %54 = ptrtoint ptr %add.ptr17 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %add.ptr17, align 4
  %56 = call i32 @llvm.umin.i32(i32 %53, i32 %55)
  %57 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %add.ptr, align 4
  %inc = add nuw nsw i32 %i.042, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  %58 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task, align 8
  %alloc_lock.i41 = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 127
  call void @_raw_spin_unlock(ptr noundef %alloc_lock.i41) #23
  %60 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %task, align 8
  %62 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 2
  %64 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %task.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %65, i32 0, i32 111
  %66 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %signal.i.i, align 16
  %rlim.i.i = getelementptr inbounds %struct.signal_struct, ptr %67, i32 0, i32 51
  %68 = ptrtoint ptr %rlim.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %rlim.i.i, align 8
  call void @update_rlimit_cpu(ptr noundef %61, i32 noundef %69) #23
  br label %cleanup

cleanup:                                          ; preds = %for.end, %flush_unauthorized_files.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_bprm_committed_creds(ptr nocapture noundef readnone %bprm) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %9 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %add.ptr.i, align 4
  %sid3 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %10)
  %cmp = icmp eq i32 %12, %10
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %12, i16 noundef zeroext 2, i32 noundef 1048576, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end.if.end26_crit_edge, label %if.then5

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then5:                                         ; preds = %if.end
  tail call void @clear_itimer() #23
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 112
  %15 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %16) #23
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %stack.i.i.i, align 4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  %and1.i.i.i.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %if.then5.if.then12_crit_edge, label %fatal_signal_pending.exit

if.then5.if.then12_crit_edge:                     ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then12

fatal_signal_pending.exit:                        ; preds = %if.then5
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 116, i32 1
  %23 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %signal.i.i, align 4
  %25 = and i32 %24, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool11.not = icmp eq i32 %25, 0
  br i1 %tobool11.not, label %fatal_signal_pending.exit.if.then12_crit_edge, label %fatal_signal_pending.exit.if.end21_crit_edge

fatal_signal_pending.exit.if.end21_crit_edge:     ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21

fatal_signal_pending.exit.if.then12_crit_edge:    ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then12

if.then12:                                        ; preds = %fatal_signal_pending.exit.if.then12_crit_edge, %if.then5.if.then12_crit_edge
  %pending = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 116
  tail call void @flush_sigqueue(ptr noundef %pending) #23
  %26 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task, align 8
  %signal = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 111
  %28 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %29, i32 0, i32 6
  tail call void @flush_sigqueue(ptr noundef %shared_pending) #23
  %30 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task, align 8
  tail call void @flush_signal_handlers(ptr noundef %31, i32 noundef 1) #23
  %32 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task, align 8
  %blocked = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 113
  %arrayidx.i = getelementptr %struct.task_struct, ptr %33, i32 0, i32 113, i32 0, i32 1
  %34 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %arrayidx.i, align 4
  %35 = ptrtoint ptr %blocked to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %blocked, align 4
  tail call void @recalc_sigpending() #23
  br label %if.end21

if.end21:                                         ; preds = %if.then12, %fatal_signal_pending.exit.if.end21_crit_edge
  %36 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task, align 8
  %sighand24 = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 112
  %38 = ptrtoint ptr %sighand24 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sighand24, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %39) #23
  br label %if.end26

if.end26:                                         ; preds = %if.end21, %if.end.if.end26_crit_edge
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #23
  %40 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task, align 8
  %real_parent = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 71
  %42 = ptrtoint ptr %real_parent to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %real_parent, align 4
  tail call void @__wake_up_parent(ptr noundef %41, ptr noundef %43) #23
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_free_mnt_opts(ptr noundef %mnt_opts) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_opts, align 4
  tail call void @kfree(ptr noundef %1) #23
  %context = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 1
  %2 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %context, align 4
  tail call void @kfree(ptr noundef %3) #23
  %rootcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 2
  %4 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rootcontext, align 4
  tail call void @kfree(ptr noundef %5) #23
  %defcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 3
  %6 = ptrtoint ptr %defcontext to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %defcontext, align 4
  tail call void @kfree(ptr noundef %7) #23
  tail call void @kfree(ptr noundef %mnt_opts) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_mnt_opts_compat(ptr noundef %sb, ptr noundef readonly %mnt_opts) #1 align 64 {
entry:
  %sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_security = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %0 = ptrtoint ptr %s_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_security, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %2 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %sid, align 4, !annotation !376
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %1, i32 0, i32 4
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %flags, align 2
  %conv = zext i16 %4 to i32
  %and = and i32 %conv, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tobool1.not = icmp ne ptr %mnt_opts, null
  br label %cleanup60

if.end:                                           ; preds = %entry
  %tobool2.not = icmp eq ptr %mnt_opts, null
  br i1 %tobool2.not, label %if.then3, label %if.end9

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %and6 = and i32 %conv, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp ne i32 %and6, 0
  br label %cleanup60

if.end9:                                          ; preds = %if.end
  %5 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_opts, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %if.end9.if.end21_crit_edge, label %if.then11

if.end9.if.end21_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21

if.then11:                                        ; preds = %if.end9
  %call.i = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %6, ptr noundef nonnull %sid, i32 noundef 2048) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end15, label %parse_sid.exit

parse_sid.exit:                                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %7 = ptrtoint ptr %s_type.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %s_type.i, align 32
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %call1.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %6, ptr noundef %s_id.i, ptr noundef %10, i32 noundef %call.i) #26
  br label %cleanup60

if.end15:                                         ; preds = %if.then11
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %flags, align 2
  %conv.i = zext i16 %12 to i32
  %and4.i = and i32 %conv.i, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool.not.i92 = icmp eq i32 %and4.i, 0
  br i1 %tobool.not.i92, label %if.end12.i, label %if.then.i

if.then.i:                                        ; preds = %if.end15
  %13 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid, align 4
  %15 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %1, align 4
  %and8.i = and i32 %conv.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %14)
  %cmp.not.i = icmp ne i32 %16, %14
  %or.cond.i.not = or i1 %tobool9.not.i, %cmp.not.i
  %17 = and i16 %12, 258
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %17)
  %.not = icmp eq i16 %17, 2
  %or.cond = select i1 %or.cond.i.not, i1 true, i1 %.not
  br i1 %or.cond, label %if.then.i.cleanup60_crit_edge, label %if.then.i.if.end21_crit_edge

if.then.i.if.end21_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21

if.then.i.cleanup60_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end12.i:                                       ; preds = %if.end15
  %.old = and i16 %12, 258
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %.old)
  %.not.old = icmp eq i16 %.old, 2
  br i1 %.not.old, label %if.end12.i.cleanup60_crit_edge, label %if.end12.i.if.end21_crit_edge

if.end12.i.if.end21_crit_edge:                    ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21

if.end12.i.cleanup60_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end21:                                         ; preds = %if.end12.i.if.end21_crit_edge, %if.then.i.if.end21_crit_edge, %if.end9.if.end21_crit_edge
  %context = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 1
  %18 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %context, align 4
  %tobool22.not = icmp eq ptr %19, null
  br i1 %tobool22.not, label %if.end21.if.end33_crit_edge, label %if.then23

if.end21.if.end33_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.then23:                                        ; preds = %if.end21
  %call.i93 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %19, ptr noundef nonnull %sid, i32 noundef 2048) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i93)
  %tobool.not.i94 = icmp eq i32 %call.i93, 0
  br i1 %tobool.not.i94, label %if.end28, label %parse_sid.exit99

parse_sid.exit99:                                 ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i95 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i96 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %20 = ptrtoint ptr %s_type.i96 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %s_type.i96, align 32
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %call1.i97 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %19, ptr noundef %s_id.i95, ptr noundef %23, i32 noundef %call.i93) #26
  br label %cleanup60

if.end28:                                         ; preds = %if.then23
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %flags, align 2
  %conv.i101 = zext i16 %25 to i32
  %and4.i103 = and i32 %conv.i101, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i103)
  %tobool.not.i104 = icmp eq i32 %and4.i103, 0
  br i1 %tobool.not.i104, label %if.end12.i111, label %if.then.i109

if.then.i109:                                     ; preds = %if.end28
  %26 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sid, align 4
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %1, i32 0, i32 2
  %28 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mntpoint_sid, align 4
  %and8.i105 = and i32 %conv.i101, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i105)
  %tobool9.not.i106 = icmp eq i32 %and8.i105, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %27)
  %cmp.not.i107 = icmp ne i32 %29, %27
  %or.cond.i108.not = or i1 %tobool9.not.i106, %cmp.not.i107
  %30 = and i16 %25, 257
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %30)
  %.not179 = icmp eq i16 %30, 1
  %or.cond183 = select i1 %or.cond.i108.not, i1 true, i1 %.not179
  br i1 %or.cond183, label %if.then.i109.cleanup60_crit_edge, label %if.then.i109.if.end33_crit_edge

if.then.i109.if.end33_crit_edge:                  ; preds = %if.then.i109
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.then.i109.cleanup60_crit_edge:                 ; preds = %if.then.i109
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end12.i111:                                    ; preds = %if.end28
  %.old182 = and i16 %25, 257
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %.old182)
  %.not179.old = icmp eq i16 %.old182, 1
  br i1 %.not179.old, label %if.end12.i111.cleanup60_crit_edge, label %if.end12.i111.if.end33_crit_edge

if.end12.i111.if.end33_crit_edge:                 ; preds = %if.end12.i111
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.end12.i111.cleanup60_crit_edge:                ; preds = %if.end12.i111
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end33:                                         ; preds = %if.end12.i111.if.end33_crit_edge, %if.then.i109.if.end33_crit_edge, %if.end21.if.end33_crit_edge
  %rootcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 2
  %31 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %rootcontext, align 4
  %tobool34.not = icmp eq ptr %32, null
  br i1 %tobool34.not, label %if.end33.if.end47_crit_edge, label %if.then35

if.end33.if.end47_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.then35:                                        ; preds = %if.end33
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %33 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %s_root, align 64
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %34, i32 0, i32 5
  %35 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %36, i32 0, i32 10
  %37 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %38, null
  br i1 %tobool.not.i.i.i, label %if.then35.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.then35.selinux_inode.exit.i.i_crit_edge:       ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #25
  %39 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %38, i32 %39
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.then35.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.then35.selinux_inode.exit.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %40 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool.i.not.i.i = icmp eq i8 %40, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %41 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %42)
  %cmp.not.i.i = icmp eq i8 %42, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %36, ptr noundef %34) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %43 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %45 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %44, i32 %45
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %46 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %rootcontext, align 4
  %call.i118 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %47, ptr noundef nonnull %sid, i32 noundef 2048) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i118)
  %tobool.not.i119 = icmp eq i32 %call.i118, 0
  br i1 %tobool.not.i119, label %if.end41, label %parse_sid.exit124

parse_sid.exit124:                                ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i120 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i121 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %48 = ptrtoint ptr %s_type.i121 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %s_type.i121, align 32
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  %call1.i122 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef %47, ptr noundef %s_id.i120, ptr noundef %51, i32 noundef %call.i118) #26
  br label %cleanup60

if.end41:                                         ; preds = %backing_inode_security.exit
  %52 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %flags, align 2
  %conv.i126 = zext i16 %53 to i32
  %and4.i128 = and i32 %conv.i126, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i128)
  %tobool.not.i129 = icmp eq i32 %and4.i128, 0
  br i1 %tobool.not.i129, label %if.end12.i136, label %if.then.i134

if.then.i134:                                     ; preds = %if.end41
  %54 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %sid, align 4
  %sid42 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %56 = ptrtoint ptr %sid42 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %sid42, align 4
  %and8.i130 = and i32 %conv.i126, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i130)
  %tobool9.not.i131 = icmp eq i32 %and8.i130, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %57, i32 %55)
  %cmp.not.i132 = icmp ne i32 %57, %55
  %or.cond.i133.not = or i1 %tobool9.not.i131, %cmp.not.i132
  %58 = and i16 %53, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %58)
  %.not180 = icmp eq i16 %58, 4
  %or.cond185 = select i1 %or.cond.i133.not, i1 true, i1 %.not180
  br i1 %or.cond185, label %if.then.i134.cleanup60_crit_edge, label %if.then.i134.if.end47_crit_edge

if.then.i134.if.end47_crit_edge:                  ; preds = %if.then.i134
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.then.i134.cleanup60_crit_edge:                 ; preds = %if.then.i134
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end12.i136:                                    ; preds = %if.end41
  %.old184 = and i16 %53, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %.old184)
  %.not180.old = icmp eq i16 %.old184, 4
  br i1 %.not180.old, label %if.end12.i136.cleanup60_crit_edge, label %if.end12.i136.if.end47_crit_edge

if.end12.i136.if.end47_crit_edge:                 ; preds = %if.end12.i136
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.end12.i136.cleanup60_crit_edge:                ; preds = %if.end12.i136
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end47:                                         ; preds = %if.end12.i136.if.end47_crit_edge, %if.then.i134.if.end47_crit_edge, %if.end33.if.end47_crit_edge
  %defcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 3
  %59 = ptrtoint ptr %defcontext to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %defcontext, align 4
  %tobool48.not = icmp eq ptr %60, null
  br i1 %tobool48.not, label %if.end47.cleanup60_crit_edge, label %if.then49

if.end47.cleanup60_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.then49:                                        ; preds = %if.end47
  %call.i143 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %60, ptr noundef nonnull %sid, i32 noundef 2048) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i143)
  %tobool.not.i144 = icmp eq i32 %call.i143, 0
  br i1 %tobool.not.i144, label %if.end54, label %parse_sid.exit149

parse_sid.exit149:                                ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i145 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i146 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %61 = ptrtoint ptr %s_type.i146 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %s_type.i146, align 32
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %62, align 4
  %call1.i147 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %60, ptr noundef %s_id.i145, ptr noundef %64, i32 noundef %call.i143) #26
  br label %cleanup60

if.end54:                                         ; preds = %if.then49
  %65 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %flags, align 2
  %conv.i151 = zext i16 %66 to i32
  %and4.i153 = and i32 %conv.i151, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i153)
  %tobool.not.i154 = icmp eq i32 %and4.i153, 0
  br i1 %tobool.not.i154, label %if.end12.i161, label %if.then.i159

if.then.i159:                                     ; preds = %if.end54
  %67 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %sid, align 4
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %1, i32 0, i32 1
  %69 = ptrtoint ptr %def_sid to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %def_sid, align 4
  %and8.i155 = and i32 %conv.i151, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i155)
  %tobool9.not.i156 = icmp eq i32 %and8.i155, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %70, i32 %68)
  %cmp.not.i157 = icmp ne i32 %70, %68
  %or.cond.i158.not = or i1 %tobool9.not.i156, %cmp.not.i157
  %71 = and i16 %66, 264
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %71)
  %.not181 = icmp eq i16 %71, 8
  %or.cond187 = select i1 %or.cond.i158.not, i1 true, i1 %.not181
  br i1 %or.cond187, label %if.then.i159.bad_option.exit167.thread_crit_edge, label %if.then.i159.cleanup60_crit_edge

if.then.i159.cleanup60_crit_edge:                 ; preds = %if.then.i159
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.then.i159.bad_option.exit167.thread_crit_edge: ; preds = %if.then.i159
  call void @__sanitizer_cov_trace_pc() #25
  br label %bad_option.exit167.thread

if.end12.i161:                                    ; preds = %if.end54
  %.old186 = and i16 %66, 264
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %.old186)
  %.not181.old = icmp eq i16 %.old186, 8
  br i1 %.not181.old, label %if.end12.i161.bad_option.exit167.thread_crit_edge, label %if.end12.i161.cleanup60_crit_edge

if.end12.i161.cleanup60_crit_edge:                ; preds = %if.end12.i161
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup60

if.end12.i161.bad_option.exit167.thread_crit_edge: ; preds = %if.end12.i161
  call void @__sanitizer_cov_trace_pc() #25
  br label %bad_option.exit167.thread

bad_option.exit167.thread:                        ; preds = %if.end12.i161.bad_option.exit167.thread_crit_edge, %if.then.i159.bad_option.exit167.thread_crit_edge
  br label %cleanup60

cleanup60:                                        ; preds = %bad_option.exit167.thread, %if.end12.i161.cleanup60_crit_edge, %if.then.i159.cleanup60_crit_edge, %parse_sid.exit149, %if.end47.cleanup60_crit_edge, %if.end12.i136.cleanup60_crit_edge, %if.then.i134.cleanup60_crit_edge, %parse_sid.exit124, %if.end12.i111.cleanup60_crit_edge, %if.then.i109.cleanup60_crit_edge, %parse_sid.exit99, %if.end12.i.cleanup60_crit_edge, %if.then.i.cleanup60_crit_edge, %parse_sid.exit, %if.then3, %if.then
  %retval.1.shrunk = phi i1 [ %tobool7.not, %if.then3 ], [ %tobool1.not, %if.then ], [ true, %parse_sid.exit ], [ true, %parse_sid.exit99 ], [ true, %parse_sid.exit149 ], [ true, %parse_sid.exit124 ], [ true, %bad_option.exit167.thread ], [ false, %if.end12.i161.cleanup60_crit_edge ], [ false, %if.end47.cleanup60_crit_edge ], [ true, %if.then.i.cleanup60_crit_edge ], [ true, %if.then.i109.cleanup60_crit_edge ], [ true, %if.then.i134.cleanup60_crit_edge ], [ true, %if.end12.i.cleanup60_crit_edge ], [ true, %if.end12.i111.cleanup60_crit_edge ], [ true, %if.end12.i136.cleanup60_crit_edge ], [ false, %if.then.i159.cleanup60_crit_edge ]
  %retval.1 = zext i1 %retval.1.shrunk to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_remount(ptr noundef %sb, ptr noundef readonly %mnt_opts) #1 align 64 {
entry:
  %sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %0 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_security.i, align 4
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %3 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %sid, align 4, !annotation !376
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %flags, align 2
  %6 = and i16 %5, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool.not = icmp eq i16 %6, 0
  %tobool1.not = icmp eq ptr %mnt_opts, null
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %entry.cleanup56_crit_edge, label %if.end3

entry.cleanup56_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.end3:                                          ; preds = %entry
  %7 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mnt_opts, align 4
  %tobool4.not = icmp eq ptr %8, null
  br i1 %tobool4.not, label %if.end3.if.end16_crit_edge, label %if.then5

if.end3.if.end16_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16

if.then5:                                         ; preds = %if.end3
  %call.i = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %8, ptr noundef nonnull %sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end10, label %parse_sid.exit

parse_sid.exit:                                   ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %9 = ptrtoint ptr %s_type.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s_type.i, align 32
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %call1.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %8, ptr noundef %s_id.i, ptr noundef %12, i32 noundef %call.i) #26
  br label %cleanup56

if.end10:                                         ; preds = %if.then5
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %flags, align 2
  %conv.i = zext i16 %14 to i32
  %and4.i = and i32 %conv.i, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool.not.i91 = icmp eq i32 %and4.i, 0
  br i1 %tobool.not.i91, label %if.end12.i, label %if.then.i

if.then.i:                                        ; preds = %if.end10
  %15 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sid, align 4
  %17 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr.i, align 4
  %and8.i = and i32 %conv.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %16)
  %cmp.not.i = icmp ne i32 %18, %16
  %or.cond.i.not = or i1 %tobool9.not.i, %cmp.not.i
  %19 = and i16 %14, 258
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %19)
  %.not = icmp eq i16 %19, 2
  %or.cond185 = select i1 %or.cond.i.not, i1 true, i1 %.not
  br i1 %or.cond185, label %if.then.i.do.end_crit_edge, label %if.then.i.if.end16_crit_edge

if.then.i.if.end16_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16

if.then.i.do.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end12.i:                                       ; preds = %if.end10
  %.old = and i16 %14, 258
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %.old)
  %.not.old = icmp eq i16 %.old, 2
  br i1 %.not.old, label %if.end12.i.do.end_crit_edge, label %if.end12.i.if.end16_crit_edge

if.end12.i.if.end16_crit_edge:                    ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16

if.end12.i.do.end_crit_edge:                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end16:                                         ; preds = %if.end12.i.if.end16_crit_edge, %if.then.i.if.end16_crit_edge, %if.end3.if.end16_crit_edge
  %context = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 1
  %20 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %context, align 4
  %tobool17.not = icmp eq ptr %21, null
  br i1 %tobool17.not, label %if.end16.if.end28_crit_edge, label %if.then18

if.end16.if.end28_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.then18:                                        ; preds = %if.end16
  %call.i92 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %21, ptr noundef nonnull %sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i92)
  %tobool.not.i93 = icmp eq i32 %call.i92, 0
  br i1 %tobool.not.i93, label %if.end23, label %parse_sid.exit98

parse_sid.exit98:                                 ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i94 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i95 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %22 = ptrtoint ptr %s_type.i95 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %s_type.i95, align 32
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %call1.i96 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %21, ptr noundef %s_id.i94, ptr noundef %25, i32 noundef %call.i92) #26
  br label %cleanup56

if.end23:                                         ; preds = %if.then18
  %26 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %flags, align 2
  %conv.i100 = zext i16 %27 to i32
  %and4.i102 = and i32 %conv.i100, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i102)
  %tobool.not.i103 = icmp eq i32 %and4.i102, 0
  br i1 %tobool.not.i103, label %if.end12.i110, label %if.then.i108

if.then.i108:                                     ; preds = %if.end23
  %28 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sid, align 4
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %30 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %mntpoint_sid, align 4
  %and8.i104 = and i32 %conv.i100, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i104)
  %tobool9.not.i105 = icmp eq i32 %and8.i104, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %29)
  %cmp.not.i106 = icmp ne i32 %31, %29
  %or.cond.i107.not = or i1 %tobool9.not.i105, %cmp.not.i106
  %32 = and i16 %27, 257
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %32)
  %.not182 = icmp eq i16 %32, 1
  %or.cond187 = select i1 %or.cond.i107.not, i1 true, i1 %.not182
  br i1 %or.cond187, label %if.then.i108.do.end_crit_edge, label %if.then.i108.if.end28_crit_edge

if.then.i108.if.end28_crit_edge:                  ; preds = %if.then.i108
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.then.i108.do.end_crit_edge:                    ; preds = %if.then.i108
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end12.i110:                                    ; preds = %if.end23
  %.old186 = and i16 %27, 257
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %.old186)
  %.not182.old = icmp eq i16 %.old186, 1
  br i1 %.not182.old, label %if.end12.i110.do.end_crit_edge, label %if.end12.i110.if.end28_crit_edge

if.end12.i110.if.end28_crit_edge:                 ; preds = %if.end12.i110
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.end12.i110.do.end_crit_edge:                   ; preds = %if.end12.i110
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end28:                                         ; preds = %if.end12.i110.if.end28_crit_edge, %if.then.i108.if.end28_crit_edge, %if.end16.if.end28_crit_edge
  %rootcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 2
  %33 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rootcontext, align 4
  %tobool29.not = icmp eq ptr %34, null
  br i1 %tobool29.not, label %if.end28.if.end42_crit_edge, label %if.then30

if.end28.if.end42_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.then30:                                        ; preds = %if.end28
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %35 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %s_root, align 64
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %36, i32 0, i32 5
  %37 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %38, i32 0, i32 10
  %39 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %40, null
  br i1 %tobool.not.i.i.i, label %if.then30.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.then30.selinux_inode.exit.i.i_crit_edge:       ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #25
  %41 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %40, i32 %41
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.then30.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.then30.selinux_inode.exit.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %42 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool.i.not.i.i = icmp eq i8 %42, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %43 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %44)
  %cmp.not.i.i = icmp eq i8 %44, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %38, ptr noundef %36) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %45 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %46, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %47 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %46, i32 %47
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %48 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rootcontext, align 4
  %call.i117 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %49, ptr noundef nonnull %sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i117)
  %tobool.not.i118 = icmp eq i32 %call.i117, 0
  br i1 %tobool.not.i118, label %if.end36, label %cleanup.thread174

cleanup.thread174:                                ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i119 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i120 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %50 = ptrtoint ptr %s_type.i120 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %s_type.i120, align 32
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 4
  %call1.i121 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef %49, ptr noundef %s_id.i119, ptr noundef %53, i32 noundef %call.i117) #26
  br label %cleanup56

if.end36:                                         ; preds = %backing_inode_security.exit
  %54 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %flags, align 2
  %conv.i125 = zext i16 %55 to i32
  %and4.i127 = and i32 %conv.i125, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i127)
  %tobool.not.i128 = icmp eq i32 %and4.i127, 0
  br i1 %tobool.not.i128, label %if.end12.i135, label %if.then.i133

if.then.i133:                                     ; preds = %if.end36
  %56 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %sid, align 4
  %sid37 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %58 = ptrtoint ptr %sid37 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sid37, align 4
  %and8.i129 = and i32 %conv.i125, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i129)
  %tobool9.not.i130 = icmp eq i32 %and8.i129, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %57)
  %cmp.not.i131 = icmp ne i32 %59, %57
  %or.cond.i132.not = or i1 %tobool9.not.i130, %cmp.not.i131
  %60 = and i16 %55, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %60)
  %.not183 = icmp eq i16 %60, 4
  %or.cond189 = select i1 %or.cond.i132.not, i1 true, i1 %.not183
  br i1 %or.cond189, label %if.then.i133.do.end_crit_edge, label %if.then.i133.if.end42_crit_edge

if.then.i133.if.end42_crit_edge:                  ; preds = %if.then.i133
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.then.i133.do.end_crit_edge:                    ; preds = %if.then.i133
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end12.i135:                                    ; preds = %if.end36
  %.old188 = and i16 %55, 260
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %.old188)
  %.not183.old = icmp eq i16 %.old188, 4
  br i1 %.not183.old, label %if.end12.i135.do.end_crit_edge, label %if.end12.i135.if.end42_crit_edge

if.end12.i135.if.end42_crit_edge:                 ; preds = %if.end12.i135
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.end12.i135.do.end_crit_edge:                   ; preds = %if.end12.i135
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end42:                                         ; preds = %if.end12.i135.if.end42_crit_edge, %if.then.i133.if.end42_crit_edge, %if.end28.if.end42_crit_edge
  %defcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %mnt_opts, i32 0, i32 3
  %61 = ptrtoint ptr %defcontext to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %defcontext, align 4
  %tobool43.not = icmp eq ptr %62, null
  br i1 %tobool43.not, label %if.end42.cleanup56_crit_edge, label %if.then44

if.end42.cleanup56_crit_edge:                     ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.then44:                                        ; preds = %if.end42
  %call.i142 = call i32 @security_context_str_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %62, ptr noundef nonnull %sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i142)
  %tobool.not.i143 = icmp eq i32 %call.i142, 0
  br i1 %tobool.not.i143, label %if.end49, label %parse_sid.exit148

parse_sid.exit148:                                ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #25
  %s_id.i144 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type.i145 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %63 = ptrtoint ptr %s_type.i145 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %s_type.i145, align 32
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %64, align 4
  %call1.i146 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull %62, ptr noundef %s_id.i144, ptr noundef %66, i32 noundef %call.i142) #26
  br label %cleanup56

if.end49:                                         ; preds = %if.then44
  %67 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %flags, align 2
  %conv.i150 = zext i16 %68 to i32
  %and4.i152 = and i32 %conv.i150, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i152)
  %tobool.not.i153 = icmp eq i32 %and4.i152, 0
  br i1 %tobool.not.i153, label %if.end12.i160, label %if.then.i158

if.then.i158:                                     ; preds = %if.end49
  %69 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %sid, align 4
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %71 = ptrtoint ptr %def_sid to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %def_sid, align 4
  %and8.i154 = and i32 %conv.i150, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i154)
  %tobool9.not.i155 = icmp eq i32 %and8.i154, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %72, i32 %70)
  %cmp.not.i156 = icmp ne i32 %72, %70
  %or.cond.i157.not = or i1 %tobool9.not.i155, %cmp.not.i156
  %73 = and i16 %68, 264
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %73)
  %.not184 = icmp eq i16 %73, 8
  %or.cond191 = select i1 %or.cond.i157.not, i1 true, i1 %.not184
  br i1 %or.cond191, label %if.then.i158.do.end_crit_edge, label %if.then.i158.cleanup56_crit_edge

if.then.i158.cleanup56_crit_edge:                 ; preds = %if.then.i158
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.then.i158.do.end_crit_edge:                    ; preds = %if.then.i158
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.end12.i160:                                    ; preds = %if.end49
  %.old190 = and i16 %68, 264
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %.old190)
  %.not184.old = icmp eq i16 %.old190, 8
  br i1 %.not184.old, label %if.end12.i160.do.end_crit_edge, label %if.end12.i160.cleanup56_crit_edge

if.end12.i160.cleanup56_crit_edge:                ; preds = %if.end12.i160
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.end12.i160.do.end_crit_edge:                   ; preds = %if.end12.i160
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

do.end:                                           ; preds = %if.end12.i160.do.end_crit_edge, %if.then.i158.do.end_crit_edge, %if.end12.i135.do.end_crit_edge, %if.then.i133.do.end_crit_edge, %if.end12.i110.do.end_crit_edge, %if.then.i108.do.end_crit_edge, %if.end12.i.do.end_crit_edge, %if.then.i.do.end_crit_edge
  %s_id = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 39
  %s_type = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %74 = ptrtoint ptr %s_type to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %s_type, align 32
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %75, align 4
  %call55 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.91, ptr noundef %s_id, ptr noundef %77) #26
  br label %cleanup56

cleanup56:                                        ; preds = %do.end, %if.end12.i160.cleanup56_crit_edge, %if.then.i158.cleanup56_crit_edge, %parse_sid.exit148, %if.end42.cleanup56_crit_edge, %cleanup.thread174, %parse_sid.exit98, %parse_sid.exit, %entry.cleanup56_crit_edge
  %retval.1 = phi i32 [ -22, %do.end ], [ 0, %entry.cleanup56_crit_edge ], [ %call.i, %parse_sid.exit ], [ %call.i92, %parse_sid.exit98 ], [ %call.i142, %parse_sid.exit148 ], [ 0, %if.end42.cleanup56_crit_edge ], [ %call.i117, %cleanup.thread174 ], [ 0, %if.end12.i160.cleanup56_crit_edge ], [ 0, %if.then.i158.cleanup56_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_kern_mount(ptr nocapture noundef readonly %sb) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %6 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %7 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 10, ptr %ad, align 4
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %8 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %s_root, align 64
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %10 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %u, align 4
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %11 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security.i.i.i, align 4
  %13 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %12, i32 %13
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sid.i.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %16 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %s_security.i.i, align 4
  %18 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 %18
  %19 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %add.ptr.i.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %15, i32 noundef %20, i16 noundef zeroext 6, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_show_options(ptr noundef %m, ptr nocapture noundef readonly %sb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %0 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_security.i, align 4
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %flags, align 2
  %5 = and i16 %4, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  br i1 %tobool.not, label %entry.cleanup53_crit_edge, label %if.end

entry.cleanup53_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

if.end:                                           ; preds = %entry
  %6 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.i.not = icmp eq i8 %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %if.end.cleanup53_crit_edge, label %if.end3

if.end.cleanup53_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

if.end3:                                          ; preds = %if.end
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %flags, align 2
  %9 = and i16 %8, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool7.not = icmp eq i16 %9, 0
  br i1 %tobool7.not, label %if.end3.if.end13_crit_edge, label %if.then8

if.end3.if.end13_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

if.then8:                                         ; preds = %if.end3
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 44) #23
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.70) #23
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %add.ptr.i, align 4
  %call9 = tail call fastcc i32 @show_sid(ptr noundef %m, i32 noundef %11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then8.if.end13_crit_edge, label %if.then8.cleanup53_crit_edge

if.then8.cleanup53_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

if.then8.if.end13_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

if.end13:                                         ; preds = %if.then8.if.end13_crit_edge, %if.end3.if.end13_crit_edge
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %flags, align 2
  %14 = and i16 %13, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool17.not = icmp eq i16 %14, 0
  br i1 %tobool17.not, label %if.end13.if.end23_crit_edge, label %if.then18

if.end13.if.end23_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

if.then18:                                        ; preds = %if.end13
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 44) #23
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.68) #23
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %15 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mntpoint_sid, align 4
  %call19 = tail call fastcc i32 @show_sid(ptr noundef %m, i32 noundef %16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then18.if.end23_crit_edge, label %if.then18.cleanup53_crit_edge

if.then18.cleanup53_crit_edge:                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

if.then18.if.end23_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

if.end23:                                         ; preds = %if.then18.if.end23_crit_edge, %if.end13.if.end23_crit_edge
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %flags, align 2
  %19 = and i16 %18, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool27.not = icmp eq i16 %19, 0
  br i1 %tobool27.not, label %if.end23.if.end33_crit_edge, label %if.then28

if.end23.if.end33_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.then28:                                        ; preds = %if.end23
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 44) #23
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.69) #23
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %20 = ptrtoint ptr %def_sid to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %def_sid, align 4
  %call29 = tail call fastcc i32 @show_sid(ptr noundef %m, i32 noundef %21)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then28.if.end33_crit_edge, label %if.then28.cleanup53_crit_edge

if.then28.cleanup53_crit_edge:                    ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

if.then28.if.end33_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end33

if.end33:                                         ; preds = %if.then28.if.end33_crit_edge, %if.end23.if.end33_crit_edge
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %flags, align 2
  %24 = and i16 %23, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool37.not = icmp eq i16 %24, 0
  br i1 %tobool37.not, label %if.end33.if.end46_crit_edge, label %if.then38

if.end33.if.end46_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end46

if.then38:                                        ; preds = %if.end33
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %25 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %s_root, align 64
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %28, i32 0, i32 10
  %29 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i.i, label %if.then38.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.then38.selinux_inode.exit.i.i_crit_edge:       ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  %31 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %30, i32 %31
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.then38.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.then38.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %32 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.i.not.i.i = icmp eq i8 %32, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %33 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %34)
  %cmp.not.i.i = icmp eq i8 %34, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %28, ptr noundef %26) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %35 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %36, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %37 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %36, i32 %37
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 44) #23
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.71) #23
  %sid40 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %38 = ptrtoint ptr %sid40 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sid40, align 4
  %call41 = tail call fastcc i32 @show_sid(ptr noundef %m, i32 noundef %39)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %backing_inode_security.exit.if.end46_crit_edge, label %backing_inode_security.exit.cleanup53_crit_edge

backing_inode_security.exit.cleanup53_crit_edge:  ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

backing_inode_security.exit.if.end46_crit_edge:   ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end46

if.end46:                                         ; preds = %backing_inode_security.exit.if.end46_crit_edge, %if.end33.if.end46_crit_edge
  %40 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %flags, align 2
  %42 = and i16 %41, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %42)
  %tobool50.not = icmp eq i16 %42, 0
  br i1 %tobool50.not, label %if.end46.cleanup53_crit_edge, label %if.then51

if.end46.cleanup53_crit_edge:                     ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup53

if.then51:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 44) #23
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.72) #23
  br label %cleanup53

cleanup53:                                        ; preds = %if.then51, %if.end46.cleanup53_crit_edge, %backing_inode_security.exit.cleanup53_crit_edge, %if.then28.cleanup53_crit_edge, %if.then18.cleanup53_crit_edge, %if.then8.cleanup53_crit_edge, %if.end.cleanup53_crit_edge, %entry.cleanup53_crit_edge
  %retval.1 = phi i32 [ %call41, %backing_inode_security.exit.cleanup53_crit_edge ], [ 0, %entry.cleanup53_crit_edge ], [ 0, %if.end.cleanup53_crit_edge ], [ %call9, %if.then8.cleanup53_crit_edge ], [ %call19, %if.then18.cleanup53_crit_edge ], [ %call29, %if.then28.cleanup53_crit_edge ], [ 0, %if.then51 ], [ 0, %if.end46.cleanup53_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_statfs(ptr nocapture noundef readonly %dentry) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %6 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %7 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 10, ptr %ad, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 9
  %8 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_sb, align 4
  %s_root = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %s_root, align 64
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %12 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %u, align 4
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %13 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %security.i.i.i, align 4
  %15 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %14, i32 %15
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sid.i.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 17
  %18 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %s_security.i.i, align 4
  %20 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %19, i32 %20
  %21 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %add.ptr.i.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %17, i32 noundef %22, i16 noundef zeroext 6, i32 noundef 8, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_mount(ptr nocapture noundef readnone %dev_name, ptr nocapture noundef readonly %path, ptr nocapture noundef readnone %type, i32 noundef %flags, ptr nocapture noundef readnone %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %and = and i32 %flags, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %6 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %7, i32 0, i32 9
  %8 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_sb, align 4
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %10 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %security.i.i.i, align 4
  %12 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %11, i32 %12
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 17
  %15 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %s_security.i.i, align 4
  %17 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %16, i32 %17
  %18 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %add.ptr.i.i, align 4
  %call3.i = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %19, i16 noundef zeroext 6, i32 noundef 2, ptr noundef null) #23
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call3 = tail call fastcc i32 @path_has_perm(ptr noundef %5, ptr noundef %path, i32 noundef 65536)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %call3.i, %if.then ], [ %call3, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_umount(ptr nocapture noundef readonly %mnt, i32 noundef %flags) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 1
  %6 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_sb, align 4
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %8 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security.i.i.i, align 4
  %10 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %9, i32 %10
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid.i.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %7, i32 0, i32 17
  %13 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_security.i.i, align 4
  %15 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %14, i32 %15
  %16 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %add.ptr.i.i, align 4
  %call3.i = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %17, i16 noundef zeroext 6, i32 noundef 4, ptr noundef null) #23
  ret i32 %call3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_clone_mnt_opts(ptr nocapture noundef readonly %oldsb, ptr noundef %newsb, i32 noundef %kern_flags, ptr noundef %set_kern_flags) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %oldsb, i32 0, i32 17
  %0 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_security.i, align 4
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %s_security.i139 = getelementptr inbounds %struct.super_block, ptr %newsb, i32 0, i32 17
  %3 = ptrtoint ptr %s_security.i139 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %s_security.i139, align 4
  %add.ptr.i140 = getelementptr i8, ptr %4, i32 %2
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %flags, align 2
  %conv = zext i16 %6 to i32
  %and = and i32 %conv, 2
  %and4 = and i32 %conv, 1
  %and7 = and i32 %conv, 4
  %7 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kern_flags)
  %tobool.not = icmp ne i32 %kern_flags, 0
  %tobool9.not = icmp eq ptr %set_kern_flags, null
  %or.cond = and i1 %tobool.not, %tobool9.not
  br i1 %or.cond, label %if.end.cleanup_crit_edge, label %do.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

do.body:                                          ; preds = %if.end
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %flags, align 2
  %10 = and i16 %9, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool15.not = icmp eq i16 %10, 0
  br i1 %tobool15.not, label %do.body20, label %do.end26, !prof !380

do.body20:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22security/selinux/hooks.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 922, 0\0A.popsection", ""() #23, !srcloc !383
  unreachable

do.end26:                                         ; preds = %do.body
  %flags27 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i140, i32 0, i32 4
  %11 = ptrtoint ptr %flags27 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %flags27, align 2
  %13 = and i16 %12, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %tobool30.not = icmp eq i16 %13, 0
  br i1 %tobool30.not, label %if.end39, label %if.then31

if.then31:                                        ; preds = %do.end26
  %and32 = and i32 %kern_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp ne i32 %and32, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool35.not = icmp eq i32 %and4, 0
  %or.cond135 = select i1 %tobool33.not, i1 %tobool35.not, i1 false
  br i1 %or.cond135, label %if.then36, label %if.then31.if.end37_crit_edge

if.then31.if.end37_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end37

if.then36:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  %14 = ptrtoint ptr %set_kern_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %set_kern_flags, align 4
  %or = or i32 %15, 1
  store i32 %or, ptr %set_kern_flags, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.then31.if.end37_crit_edge
  %16 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %s_security.i, align 4
  %18 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 %18
  %19 = ptrtoint ptr %s_security.i139 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %s_security.i139, align 4
  %add.ptr.i70.i = getelementptr i8, ptr %20, i32 %18
  %flags.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i.i, i32 0, i32 4
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %flags.i, align 2
  %23 = and i16 %22, 15
  %conv2.i = zext i16 %23 to i32
  %flags3.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i70.i, i32 0, i32 4
  %24 = ptrtoint ptr %flags3.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %flags3.i, align 2
  %26 = and i16 %25, 15
  call void @__sanitizer_cov_trace_cmp2(i16 %23, i16 %26)
  %cmp.not.i = icmp eq i16 %23, %26
  br i1 %cmp.not.i, label %if.end.i, label %if.end37.do.end.i_crit_edge

if.end37.do.end.i_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

if.end.i:                                         ; preds = %if.end37
  %and11.i = and i32 %conv2.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool.not.i = icmp eq i32 %and11.i, 0
  br i1 %tobool.not.i, label %if.end.i.if.end16.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end16.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %27 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %add.ptr.i.i, align 4
  %29 = ptrtoint ptr %add.ptr.i70.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %add.ptr.i70.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %30)
  %cmp13.not.i = icmp eq i32 %28, %30
  br i1 %cmp13.not.i, label %land.lhs.true.i.if.end16.i_crit_edge, label %land.lhs.true.i.do.end.i_crit_edge

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

land.lhs.true.i.if.end16.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16.i

if.end16.i:                                       ; preds = %land.lhs.true.i.if.end16.i_crit_edge, %if.end.i.if.end16.i_crit_edge
  %and18.i = and i32 %conv2.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool19.not.i = icmp eq i32 %and18.i, 0
  br i1 %tobool19.not.i, label %if.end16.i.if.end25.i_crit_edge, label %land.lhs.true20.i

if.end16.i.if.end25.i_crit_edge:                  ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end25.i

land.lhs.true20.i:                                ; preds = %if.end16.i
  %mntpoint_sid.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i.i, i32 0, i32 2
  %31 = ptrtoint ptr %mntpoint_sid.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mntpoint_sid.i, align 4
  %mntpoint_sid21.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i70.i, i32 0, i32 2
  %33 = ptrtoint ptr %mntpoint_sid21.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mntpoint_sid21.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %34)
  %cmp22.not.i = icmp eq i32 %32, %34
  br i1 %cmp22.not.i, label %land.lhs.true20.i.if.end25.i_crit_edge, label %land.lhs.true20.i.do.end.i_crit_edge

land.lhs.true20.i.do.end.i_crit_edge:             ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

land.lhs.true20.i.if.end25.i_crit_edge:           ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end25.i

if.end25.i:                                       ; preds = %land.lhs.true20.i.if.end25.i_crit_edge, %if.end16.i.if.end25.i_crit_edge
  %and27.i = and i32 %conv2.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %if.end25.i.if.end34.i_crit_edge, label %land.lhs.true29.i

if.end25.i.if.end34.i_crit_edge:                  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end34.i

land.lhs.true29.i:                                ; preds = %if.end25.i
  %def_sid.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %35 = ptrtoint ptr %def_sid.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %def_sid.i, align 4
  %def_sid30.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i70.i, i32 0, i32 1
  %37 = ptrtoint ptr %def_sid30.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %def_sid30.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %38)
  %cmp31.not.i = icmp eq i32 %36, %38
  br i1 %cmp31.not.i, label %land.lhs.true29.i.if.end34.i_crit_edge, label %land.lhs.true29.i.do.end.i_crit_edge

land.lhs.true29.i.do.end.i_crit_edge:             ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

land.lhs.true29.i.if.end34.i_crit_edge:           ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end34.i

if.end34.i:                                       ; preds = %land.lhs.true29.i.if.end34.i_crit_edge, %if.end25.i.if.end34.i_crit_edge
  %and36.i = and i32 %conv2.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36.i)
  %tobool37.not.i = icmp eq i32 %and36.i, 0
  br i1 %tobool37.not.i, label %if.end34.i.cleanup_crit_edge, label %if.then38.i

if.end34.i.cleanup_crit_edge:                     ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then38.i:                                      ; preds = %if.end34.i
  %s_root.i = getelementptr inbounds %struct.super_block, ptr %oldsb, i32 0, i32 13
  %39 = ptrtoint ptr %s_root.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %s_root.i, align 64
  %d_inode.i.i.i = getelementptr inbounds %struct.dentry, ptr %40, i32 0, i32 5
  %41 = ptrtoint ptr %d_inode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %d_inode.i.i.i, align 8
  %i_security.i.i.i.i = getelementptr inbounds %struct.inode, ptr %42, i32 0, i32 10
  %43 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i.i.i, label %if.then38.i.selinux_inode.exit.i.i.i_crit_edge, label %if.end.i.i.i.i, !prof !380

if.then38.i.selinux_inode.exit.i.i.i_crit_edge:   ; preds = %if.then38.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then38.i
  call void @__sanitizer_cov_trace_pc() #25
  %45 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %44, i32 %45
  br label %selinux_inode.exit.i.i.i

selinux_inode.exit.i.i.i:                         ; preds = %if.end.i.i.i.i, %if.then38.i.selinux_inode.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.end.i.i.i.i ], [ null, %if.then38.i.selinux_inode.exit.i.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %46 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool.i.not.i.i.i = icmp eq i8 %46, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i.i, label %selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge: ; preds = %selinux_inode.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %selinux_inode.exit.i.i.i
  %initialized.i.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i.i, i32 0, i32 5
  %47 = ptrtoint ptr %initialized.i.i.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %initialized.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %48)
  %cmp.not.i.i.i = icmp eq i8 %48, 1
  br i1 %cmp.not.i.i.i, label %land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, label %if.end12.i.i.i

land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i.i

if.end12.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %42, ptr noundef %40) #23
  br label %__inode_security_revalidate.exit.i.i

__inode_security_revalidate.exit.i.i:             ; preds = %if.end12.i.i.i, %land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, %selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge
  %49 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %50, null
  br i1 %tobool.not.i.i.i, label %__inode_security_revalidate.exit.i.i.backing_inode_security.exit.i_crit_edge, label %if.end.i.i.i, !prof !380

__inode_security_revalidate.exit.i.i.backing_inode_security.exit.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit.i

if.end.i.i.i:                                     ; preds = %__inode_security_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %51 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %50, i32 %51
  br label %backing_inode_security.exit.i

backing_inode_security.exit.i:                    ; preds = %if.end.i.i.i, %__inode_security_revalidate.exit.i.i.backing_inode_security.exit.i_crit_edge
  %retval.0.i5.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %__inode_security_revalidate.exit.i.i.backing_inode_security.exit.i_crit_edge ]
  %s_root40.i = getelementptr inbounds %struct.super_block, ptr %newsb, i32 0, i32 13
  %52 = ptrtoint ptr %s_root40.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %s_root40.i, align 64
  %d_inode.i.i71.i = getelementptr inbounds %struct.dentry, ptr %53, i32 0, i32 5
  %54 = ptrtoint ptr %d_inode.i.i71.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %d_inode.i.i71.i, align 8
  %i_security.i.i.i72.i = getelementptr inbounds %struct.inode, ptr %55, i32 0, i32 10
  %56 = ptrtoint ptr %i_security.i.i.i72.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %i_security.i.i.i72.i, align 4
  %tobool.not.i.i.i73.i = icmp eq ptr %57, null
  br i1 %tobool.not.i.i.i73.i, label %backing_inode_security.exit.i.selinux_inode.exit.i.i78.i_crit_edge, label %if.end.i.i.i75.i, !prof !380

backing_inode_security.exit.i.selinux_inode.exit.i.i78.i_crit_edge: ; preds = %backing_inode_security.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i78.i

if.end.i.i.i75.i:                                 ; preds = %backing_inode_security.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %58 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i74.i = getelementptr i8, ptr %57, i32 %58
  br label %selinux_inode.exit.i.i78.i

selinux_inode.exit.i.i78.i:                       ; preds = %if.end.i.i.i75.i, %backing_inode_security.exit.i.selinux_inode.exit.i.i78.i_crit_edge
  %retval.0.i.i.i76.i = phi ptr [ %add.ptr.i.i.i74.i, %if.end.i.i.i75.i ], [ null, %backing_inode_security.exit.i.selinux_inode.exit.i.i78.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %59 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool.i.not.i.i77.i = icmp eq i8 %59, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i77.i, label %selinux_inode.exit.i.i78.i.__inode_security_revalidate.exit.i85.i_crit_edge, label %land.lhs.true.i.i81.i

selinux_inode.exit.i.i78.i.__inode_security_revalidate.exit.i85.i_crit_edge: ; preds = %selinux_inode.exit.i.i78.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i85.i

land.lhs.true.i.i81.i:                            ; preds = %selinux_inode.exit.i.i78.i
  %initialized.i.i79.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i76.i, i32 0, i32 5
  %60 = ptrtoint ptr %initialized.i.i79.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %initialized.i.i79.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %61)
  %cmp.not.i.i80.i = icmp eq i8 %61, 1
  br i1 %cmp.not.i.i80.i, label %land.lhs.true.i.i81.i.__inode_security_revalidate.exit.i85.i_crit_edge, label %if.end12.i.i83.i

land.lhs.true.i.i81.i.__inode_security_revalidate.exit.i85.i_crit_edge: ; preds = %land.lhs.true.i.i81.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i85.i

if.end12.i.i83.i:                                 ; preds = %land.lhs.true.i.i81.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i82.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %55, ptr noundef %53) #23
  br label %__inode_security_revalidate.exit.i85.i

__inode_security_revalidate.exit.i85.i:           ; preds = %if.end12.i.i83.i, %land.lhs.true.i.i81.i.__inode_security_revalidate.exit.i85.i_crit_edge, %selinux_inode.exit.i.i78.i.__inode_security_revalidate.exit.i85.i_crit_edge
  %62 = ptrtoint ptr %i_security.i.i.i72.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %i_security.i.i.i72.i, align 4
  %tobool.not.i.i84.i = icmp eq ptr %63, null
  br i1 %tobool.not.i.i84.i, label %__inode_security_revalidate.exit.i85.i.backing_inode_security.exit89.i_crit_edge, label %if.end.i.i87.i, !prof !380

__inode_security_revalidate.exit.i85.i.backing_inode_security.exit89.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i85.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit89.i

if.end.i.i87.i:                                   ; preds = %__inode_security_revalidate.exit.i85.i
  call void @__sanitizer_cov_trace_pc() #25
  %64 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i86.i = getelementptr i8, ptr %63, i32 %64
  br label %backing_inode_security.exit89.i

backing_inode_security.exit89.i:                  ; preds = %if.end.i.i87.i, %__inode_security_revalidate.exit.i85.i.backing_inode_security.exit89.i_crit_edge
  %retval.0.i5.i88.i = phi ptr [ %add.ptr.i.i86.i, %if.end.i.i87.i ], [ null, %__inode_security_revalidate.exit.i85.i.backing_inode_security.exit89.i_crit_edge ]
  %sid42.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i.i, i32 0, i32 3
  %65 = ptrtoint ptr %sid42.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %sid42.i, align 4
  %sid43.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i88.i, i32 0, i32 3
  %67 = ptrtoint ptr %sid43.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %sid43.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %66, i32 %68)
  %cmp44.not.not.i = icmp eq i32 %66, %68
  br i1 %cmp44.not.not.i, label %backing_inode_security.exit89.i.cleanup_crit_edge, label %backing_inode_security.exit89.i.do.end.i_crit_edge

backing_inode_security.exit89.i.do.end.i_crit_edge: ; preds = %backing_inode_security.exit89.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

backing_inode_security.exit89.i.cleanup_crit_edge: ; preds = %backing_inode_security.exit89.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

do.end.i:                                         ; preds = %backing_inode_security.exit89.i.do.end.i_crit_edge, %land.lhs.true29.i.do.end.i_crit_edge, %land.lhs.true20.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %if.end37.do.end.i_crit_edge
  %s_id.i = getelementptr inbounds %struct.super_block, ptr %newsb, i32 0, i32 39
  %s_type.i = getelementptr inbounds %struct.super_block, ptr %newsb, i32 0, i32 5
  %69 = ptrtoint ptr %s_type.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %s_type.i, align 32
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %70, align 4
  %call50.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.32, ptr noundef %s_id.i, ptr noundef %72) #26
  br label %cleanup

if.end39:                                         ; preds = %do.end26
  %lock = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i140, i32 0, i32 5
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #23
  %73 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %flags, align 2
  %75 = ptrtoint ptr %flags27 to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 %74, ptr %flags27, align 2
  %76 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %add.ptr.i, align 4
  %78 = ptrtoint ptr %add.ptr.i140 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %77, ptr %add.ptr.i140, align 4
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %79 = ptrtoint ptr %def_sid to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %def_sid, align 4
  %def_sid43 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i140, i32 0, i32 1
  %81 = ptrtoint ptr %def_sid43 to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %80, ptr %def_sid43, align 4
  %behavior = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %82 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %behavior, align 4
  %behavior44 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i140, i32 0, i32 3
  %84 = ptrtoint ptr %behavior44 to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 %83, ptr %behavior44, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %83)
  %cmp = icmp eq i16 %83, 7
  %and49 = and i32 %kern_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and49)
  %tobool50.not = icmp eq i32 %and49, 0
  %or.cond136 = and i1 %tobool50.not, %cmp
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool52.not = icmp eq i32 %and4, 0
  %or.cond137 = select i1 %or.cond136, i1 %tobool52.not, i1 false
  br i1 %or.cond137, label %if.then53, label %if.end58

if.then53:                                        ; preds = %if.end39
  %call54 = tail call i32 @security_fs_use(ptr noundef nonnull @selinux_state, ptr noundef %newsb) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.then53.if.end66_crit_edge, label %if.then53.out_crit_edge

if.then53.out_crit_edge:                          ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then53.if.end66_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end66

if.end58:                                         ; preds = %if.end39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and49)
  %tobool60.not = icmp ne i32 %and49, 0
  %or.cond138 = select i1 %tobool60.not, i1 %tobool52.not, i1 false
  br i1 %or.cond138, label %if.then63, label %if.end58.if.end66_crit_edge

if.end58.if.end66_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end66

if.then63:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #25
  %85 = ptrtoint ptr %behavior44 to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 7, ptr %behavior44, align 4
  %86 = ptrtoint ptr %set_kern_flags to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %set_kern_flags, align 4
  %or65 = or i32 %87, 1
  store i32 %or65, ptr %set_kern_flags, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then63, %if.end58.if.end66_crit_edge, %if.then53.if.end66_crit_edge
  br i1 %tobool52.not, label %if.end66.if.end80_crit_edge, label %if.then68

if.end66.if.end80_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end80

if.then68:                                        ; preds = %if.end66
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %88 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %mntpoint_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool70.not = icmp eq i32 %and, 0
  br i1 %tobool70.not, label %if.then71, label %if.then68.if.end73_crit_edge

if.then68.if.end73_crit_edge:                     ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.then71:                                        ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #25
  %90 = ptrtoint ptr %add.ptr.i140 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %89, ptr %add.ptr.i140, align 4
  br label %if.end73

if.end73:                                         ; preds = %if.then71, %if.then68.if.end73_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool74.not = icmp eq i32 %and7, 0
  br i1 %tobool74.not, label %if.then75, label %if.end73.if.end78_crit_edge

if.end73.if.end78_crit_edge:                      ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end78

if.then75:                                        ; preds = %if.end73
  %s_root = getelementptr inbounds %struct.super_block, ptr %newsb, i32 0, i32 13
  %91 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %s_root, align 64
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %92, i32 0, i32 5
  %93 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %94, i32 0, i32 10
  %95 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i141 = icmp eq ptr %96, null
  br i1 %tobool.not.i.i.i141, label %if.then75.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i143, !prof !380

if.then75.selinux_inode.exit.i.i_crit_edge:       ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i143:                                  ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #25
  %97 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i142 = getelementptr i8, ptr %96, i32 %97
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i143, %if.then75.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i142, %if.end.i.i.i143 ], [ null, %if.then75.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %98 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %98)
  %tobool.i.not.i.i = icmp eq i8 %98, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %99 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %100)
  %cmp.not.i.i = icmp eq i8 %100, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %94, ptr noundef %92) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %101 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %102, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %103 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i144 = getelementptr i8, ptr %102, i32 %103
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i144, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %sid77 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %104 = ptrtoint ptr %sid77 to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %89, ptr %sid77, align 4
  br label %if.end78

if.end78:                                         ; preds = %backing_inode_security.exit, %if.end73.if.end78_crit_edge
  %mntpoint_sid79 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i140, i32 0, i32 2
  %105 = ptrtoint ptr %mntpoint_sid79 to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %89, ptr %mntpoint_sid79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end66.if.end80_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool81.not = icmp eq i32 %and7, 0
  br i1 %tobool81.not, label %if.end80.if.end90_crit_edge, label %if.then82

if.end80.if.end90_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end90

if.then82:                                        ; preds = %if.end80
  %s_root83 = getelementptr inbounds %struct.super_block, ptr %oldsb, i32 0, i32 13
  %106 = ptrtoint ptr %s_root83 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %s_root83, align 64
  %d_inode.i.i145 = getelementptr inbounds %struct.dentry, ptr %107, i32 0, i32 5
  %108 = ptrtoint ptr %d_inode.i.i145 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %d_inode.i.i145, align 8
  %i_security.i.i.i146 = getelementptr inbounds %struct.inode, ptr %109, i32 0, i32 10
  %110 = ptrtoint ptr %i_security.i.i.i146 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %i_security.i.i.i146, align 4
  %tobool.not.i.i.i147 = icmp eq ptr %111, null
  br i1 %tobool.not.i.i.i147, label %if.then82.selinux_inode.exit.i.i152_crit_edge, label %if.end.i.i.i149, !prof !380

if.then82.selinux_inode.exit.i.i152_crit_edge:    ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i152

if.end.i.i.i149:                                  ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #25
  %112 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i148 = getelementptr i8, ptr %111, i32 %112
  br label %selinux_inode.exit.i.i152

selinux_inode.exit.i.i152:                        ; preds = %if.end.i.i.i149, %if.then82.selinux_inode.exit.i.i152_crit_edge
  %retval.0.i.i.i150 = phi ptr [ %add.ptr.i.i.i148, %if.end.i.i.i149 ], [ null, %if.then82.selinux_inode.exit.i.i152_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %113 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %113)
  %tobool.i.not.i.i151 = icmp eq i8 %113, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i151, label %selinux_inode.exit.i.i152.__inode_security_revalidate.exit.i159_crit_edge, label %land.lhs.true.i.i155

selinux_inode.exit.i.i152.__inode_security_revalidate.exit.i159_crit_edge: ; preds = %selinux_inode.exit.i.i152
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i159

land.lhs.true.i.i155:                             ; preds = %selinux_inode.exit.i.i152
  %initialized.i.i153 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i150, i32 0, i32 5
  %114 = ptrtoint ptr %initialized.i.i153 to i32
  call void @__asan_load1_noabort(i32 %114)
  %115 = load i8, ptr %initialized.i.i153, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %115)
  %cmp.not.i.i154 = icmp eq i8 %115, 1
  br i1 %cmp.not.i.i154, label %land.lhs.true.i.i155.__inode_security_revalidate.exit.i159_crit_edge, label %if.end12.i.i157

land.lhs.true.i.i155.__inode_security_revalidate.exit.i159_crit_edge: ; preds = %land.lhs.true.i.i155
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i159

if.end12.i.i157:                                  ; preds = %land.lhs.true.i.i155
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i156 = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %109, ptr noundef %107) #23
  br label %__inode_security_revalidate.exit.i159

__inode_security_revalidate.exit.i159:            ; preds = %if.end12.i.i157, %land.lhs.true.i.i155.__inode_security_revalidate.exit.i159_crit_edge, %selinux_inode.exit.i.i152.__inode_security_revalidate.exit.i159_crit_edge
  %116 = ptrtoint ptr %i_security.i.i.i146 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %i_security.i.i.i146, align 4
  %tobool.not.i.i158 = icmp eq ptr %117, null
  br i1 %tobool.not.i.i158, label %__inode_security_revalidate.exit.i159.backing_inode_security.exit163_crit_edge, label %if.end.i.i161, !prof !380

__inode_security_revalidate.exit.i159.backing_inode_security.exit163_crit_edge: ; preds = %__inode_security_revalidate.exit.i159
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit163

if.end.i.i161:                                    ; preds = %__inode_security_revalidate.exit.i159
  call void @__sanitizer_cov_trace_pc() #25
  %118 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i160 = getelementptr i8, ptr %117, i32 %118
  br label %backing_inode_security.exit163

backing_inode_security.exit163:                   ; preds = %if.end.i.i161, %__inode_security_revalidate.exit.i159.backing_inode_security.exit163_crit_edge
  %retval.0.i5.i162 = phi ptr [ %add.ptr.i.i160, %if.end.i.i161 ], [ null, %__inode_security_revalidate.exit.i159.backing_inode_security.exit163_crit_edge ]
  %s_root86 = getelementptr inbounds %struct.super_block, ptr %newsb, i32 0, i32 13
  %119 = ptrtoint ptr %s_root86 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %s_root86, align 64
  %d_inode.i.i164 = getelementptr inbounds %struct.dentry, ptr %120, i32 0, i32 5
  %121 = ptrtoint ptr %d_inode.i.i164 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %d_inode.i.i164, align 8
  %i_security.i.i.i165 = getelementptr inbounds %struct.inode, ptr %122, i32 0, i32 10
  %123 = ptrtoint ptr %i_security.i.i.i165 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %i_security.i.i.i165, align 4
  %tobool.not.i.i.i166 = icmp eq ptr %124, null
  br i1 %tobool.not.i.i.i166, label %backing_inode_security.exit163.selinux_inode.exit.i.i171_crit_edge, label %if.end.i.i.i168, !prof !380

backing_inode_security.exit163.selinux_inode.exit.i.i171_crit_edge: ; preds = %backing_inode_security.exit163
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i171

if.end.i.i.i168:                                  ; preds = %backing_inode_security.exit163
  call void @__sanitizer_cov_trace_pc() #25
  %125 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i167 = getelementptr i8, ptr %124, i32 %125
  br label %selinux_inode.exit.i.i171

selinux_inode.exit.i.i171:                        ; preds = %if.end.i.i.i168, %backing_inode_security.exit163.selinux_inode.exit.i.i171_crit_edge
  %retval.0.i.i.i169 = phi ptr [ %add.ptr.i.i.i167, %if.end.i.i.i168 ], [ null, %backing_inode_security.exit163.selinux_inode.exit.i.i171_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %126 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %126)
  %tobool.i.not.i.i170 = icmp eq i8 %126, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i170, label %selinux_inode.exit.i.i171.__inode_security_revalidate.exit.i178_crit_edge, label %land.lhs.true.i.i174

selinux_inode.exit.i.i171.__inode_security_revalidate.exit.i178_crit_edge: ; preds = %selinux_inode.exit.i.i171
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i178

land.lhs.true.i.i174:                             ; preds = %selinux_inode.exit.i.i171
  %initialized.i.i172 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i169, i32 0, i32 5
  %127 = ptrtoint ptr %initialized.i.i172 to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %initialized.i.i172, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %128)
  %cmp.not.i.i173 = icmp eq i8 %128, 1
  br i1 %cmp.not.i.i173, label %land.lhs.true.i.i174.__inode_security_revalidate.exit.i178_crit_edge, label %if.end12.i.i176

land.lhs.true.i.i174.__inode_security_revalidate.exit.i178_crit_edge: ; preds = %land.lhs.true.i.i174
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i178

if.end12.i.i176:                                  ; preds = %land.lhs.true.i.i174
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i175 = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %122, ptr noundef %120) #23
  br label %__inode_security_revalidate.exit.i178

__inode_security_revalidate.exit.i178:            ; preds = %if.end12.i.i176, %land.lhs.true.i.i174.__inode_security_revalidate.exit.i178_crit_edge, %selinux_inode.exit.i.i171.__inode_security_revalidate.exit.i178_crit_edge
  %129 = ptrtoint ptr %i_security.i.i.i165 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %i_security.i.i.i165, align 4
  %tobool.not.i.i177 = icmp eq ptr %130, null
  br i1 %tobool.not.i.i177, label %__inode_security_revalidate.exit.i178.backing_inode_security.exit182_crit_edge, label %if.end.i.i180, !prof !380

__inode_security_revalidate.exit.i178.backing_inode_security.exit182_crit_edge: ; preds = %__inode_security_revalidate.exit.i178
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit182

if.end.i.i180:                                    ; preds = %__inode_security_revalidate.exit.i178
  call void @__sanitizer_cov_trace_pc() #25
  %131 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i179 = getelementptr i8, ptr %130, i32 %131
  br label %backing_inode_security.exit182

backing_inode_security.exit182:                   ; preds = %if.end.i.i180, %__inode_security_revalidate.exit.i178.backing_inode_security.exit182_crit_edge
  %retval.0.i5.i181 = phi ptr [ %add.ptr.i.i179, %if.end.i.i180 ], [ null, %__inode_security_revalidate.exit.i178.backing_inode_security.exit182_crit_edge ]
  %sid88 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i162, i32 0, i32 3
  %132 = ptrtoint ptr %sid88 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %sid88, align 4
  %sid89 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i181, i32 0, i32 3
  %134 = ptrtoint ptr %sid89 to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %133, ptr %sid89, align 4
  br label %if.end90

if.end90:                                         ; preds = %backing_inode_security.exit182, %if.end80.if.end90_crit_edge
  %call91 = tail call fastcc i32 @sb_finish_set_opts(ptr noundef %newsb)
  br label %out

out:                                              ; preds = %if.end90, %if.then53.out_crit_edge
  %rc.1 = phi i32 [ 0, %if.end90 ], [ %call54, %if.then53.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lock) #23
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end.i, %backing_inode_security.exit89.i.cleanup_crit_edge, %if.end34.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %rc.1, %out ], [ 0, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -16, %do.end.i ], [ 0, %backing_inode_security.exit89.i.cleanup_crit_edge ], [ 0, %if.end34.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_move_mount(ptr nocapture noundef readnone %from_path, ptr nocapture noundef readonly %to_path) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %call2 = tail call fastcc i32 @path_has_perm(ptr noundef %5, ptr noundef %to_path, i32 noundef 65536)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_dentry_init_security(ptr nocapture noundef readonly %dentry, i32 noundef %mode, ptr noundef %name, ptr noundef writeonly %xattr_name, ptr noundef %ctx, ptr noundef %ctxlen) #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %0 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %8, i32 %9
  %d_parent = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 3
  %10 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %d_parent, align 8
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %d_inode.i, align 8
  %14 = and i32 %mode, 61440
  %15 = add nsw i32 %14, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %15)
  %16 = icmp ult i32 %15, 49152
  br i1 %16, label %switch.lookup, label %entry.inode_mode_to_security_class.exit_crit_edge

entry.inode_mode_to_security_class.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %17 = lshr exact i32 %15, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_dentry_init_security, i32 0, i32 %17
  %18 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %18)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %entry.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i = phi i16 [ %switch.load, %switch.lookup ], [ 7, %entry.inode_mode_to_security_class.exit_crit_edge ]
  %call4 = call fastcc i32 @selinux_determine_inode_label(ptr noundef %add.ptr.i, ptr noundef %13, ptr noundef %name, i16 noundef zeroext %retval.0.i, ptr noundef nonnull %newsid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end, label %inode_mode_to_security_class.exit.cleanup_crit_edge

inode_mode_to_security_class.exit.cleanup_crit_edge: ; preds = %inode_mode_to_security_class.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %inode_mode_to_security_class.exit
  %tobool5.not = icmp eq ptr %xattr_name, null
  br i1 %tobool5.not, label %if.end.if.end7_crit_edge, label %if.then6

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %19 = ptrtoint ptr %xattr_name to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @.str.38, ptr %xattr_name, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end.if.end7_crit_edge
  %20 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %newsid, align 4
  %call8 = call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %21, ptr noundef %ctx, ptr noundef %ctxlen) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %inode_mode_to_security_class.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end7 ], [ %call4, %inode_mode_to_security_class.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_dentry_create_files_as(ptr nocapture noundef readonly %dentry, i32 noundef %mode, ptr noundef %name, ptr nocapture noundef readonly %old, ptr nocapture noundef readonly %new) #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %0 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  %security.i = getelementptr inbounds %struct.cred, ptr %old, i32 0, i32 23
  %1 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %security.i, align 4
  %3 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %2, i32 %3
  %d_parent = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 3
  %4 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_parent, align 8
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode.i, align 8
  %8 = and i32 %mode, 61440
  %9 = add nsw i32 %8, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %9)
  %10 = icmp ult i32 %9, 49152
  br i1 %10, label %switch.lookup, label %entry.inode_mode_to_security_class.exit_crit_edge

entry.inode_mode_to_security_class.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %11 = lshr exact i32 %9, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_dentry_create_files_as, i32 0, i32 %11
  %12 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %12)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %entry.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i = phi i16 [ %switch.load, %switch.lookup ], [ 7, %entry.inode_mode_to_security_class.exit_crit_edge ]
  %call3 = call fastcc i32 @selinux_determine_inode_label(ptr noundef %add.ptr.i, ptr noundef %7, ptr noundef %name, i16 noundef zeroext %retval.0.i, ptr noundef nonnull %newsid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %inode_mode_to_security_class.exit.cleanup_crit_edge

inode_mode_to_security_class.exit.cleanup_crit_edge: ; preds = %inode_mode_to_security_class.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %inode_mode_to_security_class.exit
  call void @__sanitizer_cov_trace_pc() #25
  %security.i8 = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %13 = ptrtoint ptr %security.i8 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %security.i8, align 4
  %15 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i9 = getelementptr i8, ptr %14, i32 %15
  %16 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %newsid, align 4
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i9, i32 0, i32 3
  %18 = ptrtoint ptr %create_sid to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %create_sid, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %inode_mode_to_security_class.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_inode_free_security(ptr nocapture noundef readonly %inode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %entry.inode_free_security.exit_crit_edge, label %selinux_inode.exit.i, !prof !380

entry.inode_free_security.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_free_security.exit

selinux_inode.exit.i:                             ; preds = %entry
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  %tobool.not.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i, label %selinux_inode.exit.i.inode_free_security.exit_crit_edge, label %if.end.i

selinux_inode.exit.i.inode_free_security.exit_crit_edge: ; preds = %selinux_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_free_security.exit

if.end.i:                                         ; preds = %selinux_inode.exit.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 17
  %5 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_security.i.i, align 4
  %7 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i13.i = getelementptr i8, ptr %6, i32 %7
  %list.i = getelementptr inbounds %struct.inode_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %list.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !384
  %cmp.i.not.i.i = icmp eq ptr %9, %list.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i, label %if.end.i.if.then4.i_crit_edge

if.end.i.if.then4.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then4.i

list_empty_careful.exit.i:                        ; preds = %if.end.i
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %list.i, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %11, %list.i
  br i1 %cmp.i.not.i, label %list_empty_careful.exit.i.inode_free_security.exit_crit_edge, label %list_empty_careful.exit.i.if.then4.i_crit_edge

list_empty_careful.exit.i.if.then4.i_crit_edge:   ; preds = %list_empty_careful.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then4.i

list_empty_careful.exit.i.inode_free_security.exit_crit_edge: ; preds = %list_empty_careful.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_free_security.exit

if.then4.i:                                       ; preds = %list_empty_careful.exit.i.if.then4.i_crit_edge, %if.end.i.if.then4.i_crit_edge
  %isec_lock.i = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i13.i, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %isec_lock.i) #23
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list.i) #23
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then4.i.list_del_init.exit.i_crit_edge

if.then4.i.list_del_init.exit.i_crit_edge:        ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %list.i, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.then4.i.list_del_init.exit.i_crit_edge
  %18 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %list.i, ptr %list.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %list.i, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %list.i, ptr %prev.i3.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %isec_lock.i) #23
  br label %inode_free_security.exit

inode_free_security.exit:                         ; preds = %list_del_init.exit.i, %list_empty_careful.exit.i.inode_free_security.exit_crit_edge, %selinux_inode.exit.i.inode_free_security.exit_crit_edge, %entry.inode_free_security.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_init_security(ptr nocapture noundef readonly %inode, ptr noundef %dir, ptr noundef %qstr, ptr noundef writeonly %name, ptr noundef writeonly %value, ptr noundef writeonly %len) #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  %clen = alloca i32, align 4
  %context = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %clen) #23
  %9 = ptrtoint ptr %clen to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %clen, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context) #23
  %10 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %context, align 4, !annotation !376
  %i_sb = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %11 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_sb, align 4
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 17
  %13 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_security.i, align 4
  %15 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i47 = getelementptr i8, ptr %14, i32 %15
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %16 = ptrtoint ptr %create_sid to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %create_sid, align 4
  %18 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %newsid, align 4
  %19 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %inode, align 8
  %21 = and i16 %20, -4096
  %and.i48 = zext i16 %21 to i32
  %22 = add nsw i32 %and.i48, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %22)
  %23 = icmp ult i32 %22, 49152
  br i1 %23, label %switch.lookup, label %entry.inode_mode_to_security_class.exit_crit_edge

entry.inode_mode_to_security_class.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %24 = lshr exact i32 %22, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_inode_init_security, i32 0, i32 %24
  %25 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %25)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %entry.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i = phi i16 [ %switch.load, %switch.lookup ], [ 7, %entry.inode_mode_to_security_class.exit_crit_edge ]
  %call4 = call fastcc i32 @selinux_determine_inode_label(ptr noundef %add.ptr.i, ptr noundef %dir, ptr noundef %qstr, i16 noundef zeroext %retval.0.i, ptr noundef nonnull %newsid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end, label %inode_mode_to_security_class.exit.cleanup_crit_edge

inode_mode_to_security_class.exit.cleanup_crit_edge: ; preds = %inode_mode_to_security_class.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %inode_mode_to_security_class.exit
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i47, i32 0, i32 4
  %26 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %flags, align 2
  %28 = and i16 %27, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool5.not = icmp eq i16 %28, 0
  br i1 %tobool5.not, label %if.end.if.end10_crit_edge, label %if.then6

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

if.then6:                                         ; preds = %if.end
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %29 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %30, null
  br i1 %tobool.not.i, label %if.then6.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

if.then6.selinux_inode.exit_crit_edge:            ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #25
  %31 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i49 = getelementptr i8, ptr %30, i32 %31
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %if.then6.selinux_inode.exit_crit_edge
  %retval.0.i50 = phi ptr [ %add.ptr.i49, %if.end.i ], [ null, %if.then6.selinux_inode.exit_crit_edge ]
  %32 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %inode, align 8
  %34 = and i16 %33, -4096
  %and.i51 = zext i16 %34 to i32
  %35 = add nsw i32 %and.i51, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %35)
  %36 = icmp ult i32 %35, 49152
  br i1 %36, label %switch.lookup61, label %selinux_inode.exit.inode_mode_to_security_class.exit60_crit_edge

selinux_inode.exit.inode_mode_to_security_class.exit60_crit_edge: ; preds = %selinux_inode.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit60

switch.lookup61:                                  ; preds = %selinux_inode.exit
  call void @__sanitizer_cov_trace_pc() #25
  %37 = lshr exact i32 %35, 12
  %switch.gep62 = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_inode_init_security.119, i32 0, i32 %37
  %38 = ptrtoint ptr %switch.gep62 to i32
  call void @__asan_load2_noabort(i32 %38)
  %switch.load63 = load i16, ptr %switch.gep62, align 2
  br label %inode_mode_to_security_class.exit60

inode_mode_to_security_class.exit60:              ; preds = %switch.lookup61, %selinux_inode.exit.inode_mode_to_security_class.exit60_crit_edge
  %retval.0.i59 = phi i16 [ %switch.load63, %switch.lookup61 ], [ 7, %selinux_inode.exit.inode_mode_to_security_class.exit60_crit_edge ]
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i50, i32 0, i32 4
  %39 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %retval.0.i59, ptr %sclass, align 4
  %40 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %newsid, align 4
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i50, i32 0, i32 3
  %42 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %sid, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i50, i32 0, i32 5
  %43 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 1, ptr %initialized, align 2
  br label %if.end10

if.end10:                                         ; preds = %inode_mode_to_security_class.exit60, %if.end.if.end10_crit_edge
  %44 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool.i.not = icmp eq i8 %44, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %if.end10.cleanup_crit_edge, label %lor.lhs.false

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end10
  %45 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %flags, align 2
  %47 = and i16 %46, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %47)
  %tobool15.not = icmp eq i16 %47, 0
  br i1 %tobool15.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end17

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  %tobool18.not = icmp eq ptr %name, null
  br i1 %tobool18.not, label %if.end17.if.end20_crit_edge, label %if.then19

if.end17.if.end20_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  %48 = ptrtoint ptr %name to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @.str, ptr %name, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end17.if.end20_crit_edge
  %tobool21.not = icmp eq ptr %value, null
  %tobool22.not = icmp eq ptr %len, null
  %or.cond = or i1 %tobool21.not, %tobool22.not
  br i1 %or.cond, label %if.end20.cleanup_crit_edge, label %if.then23

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then23:                                        ; preds = %if.end20
  %49 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %newsid, align 4
  %call24 = call i32 @security_sid_to_context_force(ptr noundef nonnull @selinux_state, i32 noundef %50, ptr noundef nonnull %context, ptr noundef nonnull %clen) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end27, label %if.then23.cleanup_crit_edge

if.then23.cleanup_crit_edge:                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end27:                                         ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #25
  %51 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %context, align 4
  %53 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %52, ptr %value, align 4
  %54 = ptrtoint ptr %clen to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %clen, align 4
  %56 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %len, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.then23.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %inode_mode_to_security_class.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %inode_mode_to_security_class.exit.cleanup_crit_edge ], [ -95, %lor.lhs.false.cleanup_crit_edge ], [ -95, %if.end10.cleanup_crit_edge ], [ %call24, %if.then23.cleanup_crit_edge ], [ 0, %if.end27 ], [ 0, %if.end20.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %clen) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_init_security_anon(ptr noundef %inode, ptr noundef %name, ptr noundef readonly %context_inode) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %9 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %10 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.i.not = icmp eq i8 %10, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %entry.cleanup34_crit_edge, label %if.end, !prof !380

entry.cleanup34_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup34

if.end:                                           ; preds = %entry
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %11 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

if.end.selinux_inode.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %13 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i52 = getelementptr i8, ptr %12, i32 %13
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %if.end.selinux_inode.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i52, %if.end.i ], [ null, %if.end.selinux_inode.exit_crit_edge ]
  %tobool6.not = icmp eq ptr %context_inode, null
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %selinux_inode.exit
  %i_security.i53 = getelementptr inbounds %struct.inode, ptr %context_inode, i32 0, i32 10
  %14 = ptrtoint ptr %i_security.i53 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_security.i53, align 4
  %tobool.not.i54 = icmp eq ptr %15, null
  br i1 %tobool.not.i54, label %if.then7.selinux_inode.exit58_crit_edge, label %if.end.i56, !prof !380

if.then7.selinux_inode.exit58_crit_edge:          ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit58

if.end.i56:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #25
  %16 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i55 = getelementptr i8, ptr %15, i32 %16
  br label %selinux_inode.exit58

selinux_inode.exit58:                             ; preds = %if.end.i56, %if.then7.selinux_inode.exit58_crit_edge
  %retval.0.i57 = phi ptr [ %add.ptr.i55, %if.end.i56 ], [ null, %if.then7.selinux_inode.exit58_crit_edge ]
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i57, i32 0, i32 5
  %17 = ptrtoint ptr %initialized to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %initialized, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %18)
  %cmp.not = icmp eq i8 %18, 1
  br i1 %cmp.not, label %if.end16, label %do.end13

do.end13:                                         ; preds = %selinux_inode.exit58
  call void @__sanitizer_cov_trace_pc() #25
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95) #26
  br label %cleanup34

if.end16:                                         ; preds = %selinux_inode.exit58
  call void @__sanitizer_cov_trace_pc() #25
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i57, i32 0, i32 4
  %19 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %sclass, align 4
  %sclass17 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %21 = ptrtoint ptr %sclass17 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %sclass17, align 4
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i57, i32 0, i32 3
  %22 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sid, align 4
  %sid18 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %24 = ptrtoint ptr %sid18 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %sid18, align 4
  br label %if.end28

if.else:                                          ; preds = %selinux_inode.exit
  %sclass19 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %25 = ptrtoint ptr %sclass19 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 95, ptr %sclass19, align 4
  %sid20 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %26 = ptrtoint ptr %sid20 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sid20, align 4
  %sid23 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %call24 = tail call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %27, i32 noundef %27, i16 noundef zeroext 95, ptr noundef %name, ptr noundef %sid23) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.else.if.end28_crit_edge, label %if.else.cleanup34_crit_edge

if.else.cleanup34_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup34

if.else.if.end28_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.end28:                                         ; preds = %if.else.if.end28_crit_edge, %if.end16
  %initialized29 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 5
  %28 = ptrtoint ptr %initialized29 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 1, ptr %initialized29, align 2
  %29 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 9, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %30 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %inode, ptr %u, align 4
  %sid30 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %31 = ptrtoint ptr %sid30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sid30, align 4
  %sid31 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %33 = ptrtoint ptr %sid31 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sid31, align 4
  %sclass32 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %35 = ptrtoint ptr %sclass32 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %sclass32, align 4
  %call33 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %32, i32 noundef %34, i16 noundef zeroext %36, i32 noundef 8, ptr noundef nonnull %ad) #23
  br label %cleanup34

cleanup34:                                        ; preds = %if.end28, %if.else.cleanup34_crit_edge, %do.end13, %entry.cleanup34_crit_edge
  %retval.1 = phi i32 [ %call33, %if.end28 ], [ 0, %entry.cleanup34_crit_edge ], [ -13, %do.end13 ], [ %call24, %if.else.cleanup34_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext 7)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_link(ptr noundef %old_dentry, ptr noundef %dir, ptr nocapture noundef readnone %new_dentry) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_link(ptr noundef %dir, ptr noundef %old_dentry, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_unlink(ptr noundef %dir, ptr noundef %dentry) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_link(ptr noundef %dir, ptr noundef %dentry, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_symlink(ptr noundef %dir, ptr noundef %dentry, ptr nocapture noundef readnone %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext 10)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_mkdir(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mask) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext 8)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_rmdir(ptr noundef %dir, ptr noundef %dentry) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_link(ptr noundef %dir, ptr noundef %dentry, i32 noundef 2)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_mknod(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode, i32 noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = and i16 %mode, -4096
  %and.i = zext i16 %0 to i32
  %1 = add nsw i32 %and.i, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %1)
  %2 = icmp ult i32 %1, 49152
  br i1 %2, label %switch.lookup, label %entry.inode_mode_to_security_class.exit_crit_edge

entry.inode_mode_to_security_class.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %3 = lshr exact i32 %1, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_inode_mknod, i32 0, i32 %3
  %4 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %4)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %entry.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i = phi i16 [ %switch.load, %switch.lookup ], [ 7, %entry.inode_mode_to_security_class.exit_crit_edge ]
  %call1 = tail call fastcc i32 @may_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %retval.0.i)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_rename(ptr noundef %old_inode, ptr noundef %old_dentry, ptr noundef %new_inode, ptr noundef %new_dentry) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %0 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i.i, align 4
  %i_security.i.i.i.i = getelementptr inbounds %struct.inode, ptr %old_inode, i32 0, i32 10
  %12 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i.i.i, label %entry.selinux_inode.exit.i.i.i_crit_edge, label %if.end.i.i.i.i, !prof !380

entry.selinux_inode.exit.i.i.i_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %13, i32 %14
  br label %selinux_inode.exit.i.i.i

selinux_inode.exit.i.i.i:                         ; preds = %if.end.i.i.i.i, %entry.selinux_inode.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.end.i.i.i.i ], [ null, %entry.selinux_inode.exit.i.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %15 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i.not.i.i.i = icmp eq i8 %15, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i.i, label %selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge: ; preds = %selinux_inode.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %selinux_inode.exit.i.i.i
  %initialized.i.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i.i, i32 0, i32 5
  %16 = ptrtoint ptr %initialized.i.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %initialized.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %17)
  %cmp.not.i.i.i = icmp eq i8 %17, 1
  br i1 %cmp.not.i.i.i, label %land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, label %if.end12.i.i.i

land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i.i

if.end12.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %old_inode, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i.i

__inode_security_revalidate.exit.i.i:             ; preds = %if.end12.i.i.i, %land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, %selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge
  %18 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i.i.i, label %__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge, label %if.end.i.i.i, !prof !380

__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit.i

if.end.i.i.i:                                     ; preds = %__inode_security_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %20 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i79.i = getelementptr i8, ptr %19, i32 %20
  br label %inode_security.exit.i

inode_security.exit.i:                            ; preds = %if.end.i.i.i, %__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge
  %retval.0.i3.i.i = phi ptr [ %add.ptr.i.i79.i, %if.end.i.i.i ], [ null, %__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge ]
  %d_inode.i.i.i = getelementptr inbounds %struct.dentry, ptr %old_dentry, i32 0, i32 5
  %21 = ptrtoint ptr %d_inode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %d_inode.i.i.i, align 8
  %i_security.i.i.i80.i = getelementptr inbounds %struct.inode, ptr %22, i32 0, i32 10
  %23 = ptrtoint ptr %i_security.i.i.i80.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %i_security.i.i.i80.i, align 4
  %tobool.not.i.i.i81.i = icmp eq ptr %24, null
  br i1 %tobool.not.i.i.i81.i, label %inode_security.exit.i.selinux_inode.exit.i.i86.i_crit_edge, label %if.end.i.i.i83.i, !prof !380

inode_security.exit.i.selinux_inode.exit.i.i86.i_crit_edge: ; preds = %inode_security.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i86.i

if.end.i.i.i83.i:                                 ; preds = %inode_security.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %25 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i82.i = getelementptr i8, ptr %24, i32 %25
  br label %selinux_inode.exit.i.i86.i

selinux_inode.exit.i.i86.i:                       ; preds = %if.end.i.i.i83.i, %inode_security.exit.i.selinux_inode.exit.i.i86.i_crit_edge
  %retval.0.i.i.i84.i = phi ptr [ %add.ptr.i.i.i82.i, %if.end.i.i.i83.i ], [ null, %inode_security.exit.i.selinux_inode.exit.i.i86.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %26 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.i.not.i.i85.i = icmp eq i8 %26, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i85.i, label %selinux_inode.exit.i.i86.i.__inode_security_revalidate.exit.i93.i_crit_edge, label %land.lhs.true.i.i89.i

selinux_inode.exit.i.i86.i.__inode_security_revalidate.exit.i93.i_crit_edge: ; preds = %selinux_inode.exit.i.i86.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i93.i

land.lhs.true.i.i89.i:                            ; preds = %selinux_inode.exit.i.i86.i
  %initialized.i.i87.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i84.i, i32 0, i32 5
  %27 = ptrtoint ptr %initialized.i.i87.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %initialized.i.i87.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %28)
  %cmp.not.i.i88.i = icmp eq i8 %28, 1
  br i1 %cmp.not.i.i88.i, label %land.lhs.true.i.i89.i.__inode_security_revalidate.exit.i93.i_crit_edge, label %if.end12.i.i91.i

land.lhs.true.i.i89.i.__inode_security_revalidate.exit.i93.i_crit_edge: ; preds = %land.lhs.true.i.i89.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i93.i

if.end12.i.i91.i:                                 ; preds = %land.lhs.true.i.i89.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i90.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %22, ptr noundef %old_dentry) #23
  br label %__inode_security_revalidate.exit.i93.i

__inode_security_revalidate.exit.i93.i:           ; preds = %if.end12.i.i91.i, %land.lhs.true.i.i89.i.__inode_security_revalidate.exit.i93.i_crit_edge, %selinux_inode.exit.i.i86.i.__inode_security_revalidate.exit.i93.i_crit_edge
  %29 = ptrtoint ptr %i_security.i.i.i80.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_security.i.i.i80.i, align 4
  %tobool.not.i.i92.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i92.i, label %__inode_security_revalidate.exit.i93.i.backing_inode_security.exit.i_crit_edge, label %if.end.i.i95.i, !prof !380

__inode_security_revalidate.exit.i93.i.backing_inode_security.exit.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i93.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit.i

if.end.i.i95.i:                                   ; preds = %__inode_security_revalidate.exit.i93.i
  call void @__sanitizer_cov_trace_pc() #25
  %31 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i94.i = getelementptr i8, ptr %30, i32 %31
  br label %backing_inode_security.exit.i

backing_inode_security.exit.i:                    ; preds = %if.end.i.i95.i, %__inode_security_revalidate.exit.i93.i.backing_inode_security.exit.i_crit_edge
  %retval.0.i5.i.i = phi ptr [ %add.ptr.i.i94.i, %if.end.i.i95.i ], [ null, %__inode_security_revalidate.exit.i93.i.backing_inode_security.exit.i_crit_edge ]
  %32 = ptrtoint ptr %old_dentry to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %old_dentry, align 8
  %34 = and i32 %33, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %34)
  %35 = icmp ne i32 %34, 2097152
  %i_security.i.i.i96.i = getelementptr inbounds %struct.inode, ptr %new_inode, i32 0, i32 10
  %36 = ptrtoint ptr %i_security.i.i.i96.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %i_security.i.i.i96.i, align 4
  %tobool.not.i.i.i97.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i.i97.i, label %backing_inode_security.exit.i.selinux_inode.exit.i.i102.i_crit_edge, label %if.end.i.i.i99.i, !prof !380

backing_inode_security.exit.i.selinux_inode.exit.i.i102.i_crit_edge: ; preds = %backing_inode_security.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i102.i

if.end.i.i.i99.i:                                 ; preds = %backing_inode_security.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %38 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i98.i = getelementptr i8, ptr %37, i32 %38
  br label %selinux_inode.exit.i.i102.i

selinux_inode.exit.i.i102.i:                      ; preds = %if.end.i.i.i99.i, %backing_inode_security.exit.i.selinux_inode.exit.i.i102.i_crit_edge
  %retval.0.i.i.i100.i = phi ptr [ %add.ptr.i.i.i98.i, %if.end.i.i.i99.i ], [ null, %backing_inode_security.exit.i.selinux_inode.exit.i.i102.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %39 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.i.not.i.i101.i = icmp eq i8 %39, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i101.i, label %selinux_inode.exit.i.i102.i.__inode_security_revalidate.exit.i109.i_crit_edge, label %land.lhs.true.i.i105.i

selinux_inode.exit.i.i102.i.__inode_security_revalidate.exit.i109.i_crit_edge: ; preds = %selinux_inode.exit.i.i102.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i109.i

land.lhs.true.i.i105.i:                           ; preds = %selinux_inode.exit.i.i102.i
  %initialized.i.i103.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i100.i, i32 0, i32 5
  %40 = ptrtoint ptr %initialized.i.i103.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %initialized.i.i103.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %41)
  %cmp.not.i.i104.i = icmp eq i8 %41, 1
  br i1 %cmp.not.i.i104.i, label %land.lhs.true.i.i105.i.__inode_security_revalidate.exit.i109.i_crit_edge, label %if.end12.i.i107.i

land.lhs.true.i.i105.i.__inode_security_revalidate.exit.i109.i_crit_edge: ; preds = %land.lhs.true.i.i105.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i109.i

if.end12.i.i107.i:                                ; preds = %land.lhs.true.i.i105.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i106.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %new_inode, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i109.i

__inode_security_revalidate.exit.i109.i:          ; preds = %if.end12.i.i107.i, %land.lhs.true.i.i105.i.__inode_security_revalidate.exit.i109.i_crit_edge, %selinux_inode.exit.i.i102.i.__inode_security_revalidate.exit.i109.i_crit_edge
  %42 = ptrtoint ptr %i_security.i.i.i96.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %i_security.i.i.i96.i, align 4
  %tobool.not.i.i108.i = icmp eq ptr %43, null
  br i1 %tobool.not.i.i108.i, label %__inode_security_revalidate.exit.i109.i.inode_security.exit113.i_crit_edge, label %if.end.i.i111.i, !prof !380

__inode_security_revalidate.exit.i109.i.inode_security.exit113.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i109.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit113.i

if.end.i.i111.i:                                  ; preds = %__inode_security_revalidate.exit.i109.i
  call void @__sanitizer_cov_trace_pc() #25
  %44 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i110.i = getelementptr i8, ptr %43, i32 %44
  br label %inode_security.exit113.i

inode_security.exit113.i:                         ; preds = %if.end.i.i111.i, %__inode_security_revalidate.exit.i109.i.inode_security.exit113.i_crit_edge
  %retval.0.i3.i112.i = phi ptr [ %add.ptr.i.i110.i, %if.end.i.i111.i ], [ null, %__inode_security_revalidate.exit.i109.i.inode_security.exit113.i_crit_edge ]
  %45 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 10, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %46 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %old_dentry, ptr %u.i, align 4
  %sid5.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i.i, i32 0, i32 3
  %47 = ptrtoint ptr %sid5.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %sid5.i, align 4
  %call6.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %48, i16 noundef zeroext 8, i32 noundef 335544320, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %inode_security.exit113.i.may_rename.exit_crit_edge

inode_security.exit113.i.may_rename.exit_crit_edge: ; preds = %inode_security.exit113.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %may_rename.exit

if.end.i:                                         ; preds = %inode_security.exit113.i
  %sid7.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i.i, i32 0, i32 3
  %49 = ptrtoint ptr %sid7.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sid7.i, align 4
  %sclass.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i.i, i32 0, i32 4
  %51 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %sclass.i, align 4
  %call8.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %50, i16 noundef zeroext %52, i32 noundef 8192, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %if.end.i.may_rename.exit_crit_edge

if.end.i.may_rename.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %may_rename.exit

if.end11.i:                                       ; preds = %if.end.i
  %cmp.not.i = icmp eq ptr %new_inode, %old_inode
  %or.cond.i = or i1 %cmp.not.i, %35
  br i1 %or.cond.i, label %if.end11.i.if.end21.i_crit_edge, label %if.then14.i

if.end11.i.if.end21.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i

if.then14.i:                                      ; preds = %if.end11.i
  %53 = ptrtoint ptr %sid7.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sid7.i, align 4
  %55 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %sclass.i, align 4
  %call17.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %54, i16 noundef zeroext %56, i32 noundef 134217728, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i)
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.then14.i.if.end21.i_crit_edge, label %if.then14.i.may_rename.exit_crit_edge

if.then14.i.may_rename.exit_crit_edge:            ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %may_rename.exit

if.then14.i.if.end21.i_crit_edge:                 ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.then14.i.if.end21.i_crit_edge, %if.end11.i.if.end21.i_crit_edge
  %57 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %new_dentry, ptr %u.i, align 4
  %58 = ptrtoint ptr %new_dentry to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %new_dentry, align 8
  %and.i.i.i.i.i = and i32 %59, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %cmp.i.i.i.not.i = icmp eq i32 %and.i.i.i.i.i, 0
  %spec.select.i = select i1 %cmp.i.i.i.not.i, i32 301989888, i32 369098752
  %sid26.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i112.i, i32 0, i32 3
  %60 = ptrtoint ptr %sid26.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %sid26.i, align 4
  %call27.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %61, i16 noundef zeroext 8, i32 noundef %spec.select.i, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27.i)
  %tobool28.not.i = icmp eq i32 %call27.i, 0
  br i1 %tobool28.not.i, label %if.end30.i, label %if.end21.i.may_rename.exit_crit_edge

if.end21.i.may_rename.exit_crit_edge:             ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %may_rename.exit

if.end30.i:                                       ; preds = %if.end21.i
  %62 = ptrtoint ptr %new_dentry to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %new_dentry, align 8
  %and.i.i.i.i114.i = and i32 %63, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i114.i)
  %cmp.i.i.i115.not.i = icmp eq i32 %and.i.i.i.i114.i, 0
  br i1 %cmp.i.i.i115.not.i, label %if.end30.i.if.end43.i_crit_edge, label %if.then32.i

if.end30.i.if.end43.i_crit_edge:                  ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end43.i

if.then32.i:                                      ; preds = %if.end30.i
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %new_dentry, i32 0, i32 5
  %64 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %65, i32 0, i32 10
  %66 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i1 = icmp eq ptr %67, null
  br i1 %tobool.not.i.i.i1, label %if.then32.i.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i3, !prof !380

if.then32.i.selinux_inode.exit.i.i_crit_edge:     ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i3:                                    ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_pc() #25
  %68 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i2 = getelementptr i8, ptr %67, i32 %68
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i3, %if.then32.i.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i2, %if.end.i.i.i3 ], [ null, %if.then32.i.selinux_inode.exit.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %69 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool.i.not.i.i = icmp eq i8 %69, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %70 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %71)
  %cmp.not.i.i = icmp eq i8 %71, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %65, ptr noundef %new_dentry) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %72 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %73, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %74 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %73, i32 %74
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %75 = ptrtoint ptr %new_dentry to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %new_dentry, align 8
  %77 = and i32 %76, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %77)
  %78 = icmp eq i32 %77, 2097152
  %sid36.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %79 = ptrtoint ptr %sid36.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %sid36.i, align 4
  %sclass37.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 4
  %81 = ptrtoint ptr %sclass37.i to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %sclass37.i, align 4
  %cond.i = select i1 %78, i32 536870912, i32 2048
  %call39.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %80, i16 noundef zeroext %82, i32 noundef %cond.i, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39.i)
  %tobool40.not.i = icmp eq i32 %call39.i, 0
  br i1 %tobool40.not.i, label %backing_inode_security.exit.if.end43.i_crit_edge, label %backing_inode_security.exit.may_rename.exit_crit_edge

backing_inode_security.exit.may_rename.exit_crit_edge: ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %may_rename.exit

backing_inode_security.exit.if.end43.i_crit_edge: ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end43.i

if.end43.i:                                       ; preds = %backing_inode_security.exit.if.end43.i_crit_edge, %if.end30.i.if.end43.i_crit_edge
  br label %may_rename.exit

may_rename.exit:                                  ; preds = %if.end43.i, %backing_inode_security.exit.may_rename.exit_crit_edge, %if.end21.i.may_rename.exit_crit_edge, %if.then14.i.may_rename.exit_crit_edge, %if.end.i.may_rename.exit_crit_edge, %inode_security.exit113.i.may_rename.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end43.i ], [ %call6.i, %inode_security.exit113.i.may_rename.exit_crit_edge ], [ %call8.i, %if.end.i.may_rename.exit_crit_edge ], [ %call17.i, %if.then14.i.may_rename.exit_crit_edge ], [ %call27.i, %if.end21.i.may_rename.exit_crit_edge ], [ %call39.i, %backing_inode_security.exit.may_rename.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_readlink(ptr noundef %dentry) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %call2 = tail call fastcc i32 @dentry_has_perm(ptr noundef %5, ptr noundef %dentry, i32 noundef 2)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_follow_link(ptr noundef %dentry, ptr noundef %inode, i1 noundef zeroext %rcu) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %6 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %call.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %5) #23
  br i1 %call.i, label %if.then.i, label %entry.__validate_creds.exit_crit_edge, !prof !380

entry.__validate_creds.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %5, ptr noundef nonnull @.str.2, i32 noundef 3096) #23
  br label %__validate_creds.exit

__validate_creds.exit:                            ; preds = %if.then.i, %entry.__validate_creds.exit_crit_edge
  %7 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 10, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %8 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %dentry, ptr %u, align 4
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i, align 4
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %14 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i.i, label %__validate_creds.exit.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

__validate_creds.exit.selinux_inode.exit.i.i_crit_edge: ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #25
  %16 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %15, i32 %16
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %__validate_creds.exit.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %__validate_creds.exit.selinux_inode.exit.i.i_crit_edge ]
  br i1 %rcu, label %selinux_inode.exit.i.i.do.end6.i.i_crit_edge, label %do.body1.i.i

selinux_inode.exit.i.i.do.end6.i.i_crit_edge:     ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end6.i.i

do.body1.i.i:                                     ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  br label %do.end6.i.i

do.end6.i.i:                                      ; preds = %do.body1.i.i, %selinux_inode.exit.i.i.do.end6.i.i_crit_edge
  %17 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.i.not.i.i = icmp eq i8 %17, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %do.end6.i.i.if.end.i_crit_edge, label %land.lhs.true.i.i

do.end6.i.i.if.end.i_crit_edge:                   ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

land.lhs.true.i.i:                                ; preds = %do.end6.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %18 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %19)
  %cmp.not.i.i = icmp eq i8 %19, 1
  %brmerge.i.i = or i1 %cmp.not.i.i, %rcu
  br i1 %brmerge.i.i, label %__inode_security_revalidate.exit.i, label %if.end12.i.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %inode, ptr noundef null) #23
  br label %if.end.i

__inode_security_revalidate.exit.i:               ; preds = %land.lhs.true.i.i
  br i1 %cmp.not.i.i, label %__inode_security_revalidate.exit.i.if.end.i_crit_edge, label %__inode_security_revalidate.exit.i.if.then_crit_edge

__inode_security_revalidate.exit.i.if.then_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

__inode_security_revalidate.exit.i.if.end.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

if.end.i:                                         ; preds = %__inode_security_revalidate.exit.i.if.end.i_crit_edge, %if.end12.i.i, %do.end6.i.i.if.end.i_crit_edge
  %20 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %if.end.i.if.end_crit_edge, label %inode_security_rcu.exit, !prof !380

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

inode_security_rcu.exit:                          ; preds = %if.end.i
  %22 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i18 = getelementptr i8, ptr %21, i32 %22
  %cmp.i = icmp ugt ptr %add.ptr.i.i18, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %inode_security_rcu.exit.if.then_crit_edge, label %inode_security_rcu.exit.if.end_crit_edge

inode_security_rcu.exit.if.end_crit_edge:         ; preds = %inode_security_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

inode_security_rcu.exit.if.then_crit_edge:        ; preds = %inode_security_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

if.then:                                          ; preds = %inode_security_rcu.exit.if.then_crit_edge, %__inode_security_revalidate.exit.i.if.then_crit_edge
  %retval.0.i21 = phi ptr [ %add.ptr.i.i18, %inode_security_rcu.exit.if.then_crit_edge ], [ inttoptr (i32 -10 to ptr), %__inode_security_revalidate.exit.i.if.then_crit_edge ]
  %23 = ptrtoint ptr %retval.0.i21 to i32
  br label %cleanup

if.end:                                           ; preds = %inode_security_rcu.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge
  %retval.0.i25 = phi ptr [ %add.ptr.i.i18, %inode_security_rcu.exit.if.end_crit_edge ], [ null, %if.end.i.if.end_crit_edge ]
  %sid9 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i25, i32 0, i32 3
  %24 = ptrtoint ptr %sid9 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sid9, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i25, i32 0, i32 4
  %26 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %sclass, align 4
  %call10 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %13, i32 noundef %25, i16 noundef zeroext %27, i32 noundef 2, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %23, %if.then ], [ %call10, %if.end ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_permission(ptr noundef %inode, i32 noundef %mask) #1 align 64 {
entry:
  %avd = alloca %struct.av_decision, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %and = and i32 %mask, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool = icmp ne i32 %and, 0
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %avd) #23
  %6 = getelementptr inbounds %struct.av_decision, ptr %avd, i32 0, i32 1
  %7 = getelementptr inbounds %struct.av_decision, ptr %avd, i32 0, i32 2
  %and5 = and i32 %mask, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %8 = call ptr @memset(ptr %avd, i32 255, i32 20)
  br i1 %tobool6.not, label %entry.cleanup_crit_edge, label %do.body7

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

do.body7:                                         ; preds = %entry
  %call.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %5) #23
  br i1 %call.i, label %if.then.i, label %do.body7.__validate_creds.exit_crit_edge, !prof !380

do.body7.__validate_creds.exit_crit_edge:         ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit

if.then.i:                                        ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %5, ptr noundef nonnull @.str.2, i32 noundef 3143) #23
  br label %__validate_creds.exit

__validate_creds.exit:                            ; preds = %if.then.i, %do.body7.__validate_creds.exit_crit_edge
  %i_flags = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 4
  %9 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %i_flags, align 4
  %and10 = and i32 %10, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.end15, label %__validate_creds.exit.cleanup_crit_edge, !prof !381

__validate_creds.exit.cleanup_crit_edge:          ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end15:                                         ; preds = %__validate_creds.exit
  %11 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %inode, align 8
  %13 = and i16 %12, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %13)
  %cmp.i = icmp eq i16 %13, 16384
  br i1 %cmp.i, label %if.else18.i, label %if.then.i73

if.then.i73:                                      ; preds = %if.end15
  %and1.i = shl nuw nsw i32 %and5, 14
  %14 = and i32 %and1.i, 16384
  %and3.i = lshr i32 %mask, 1
  %15 = and i32 %and3.i, 2
  %16 = or i32 %14, %15
  %and8.i = and i32 %mask, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %if.else.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.then.i73
  call void @__sanitizer_cov_trace_pc() #25
  %or11.i = or i32 %16, 512
  br label %file_mask_to_av.exit

if.else.i:                                        ; preds = %if.then.i73
  call void @__sanitizer_cov_trace_pc() #25
  %and12.i = shl nuw nsw i32 %and5, 1
  %17 = and i32 %and12.i, 4
  %18 = or i32 %16, %17
  br label %file_mask_to_av.exit

if.else18.i:                                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  %and19.i = shl nuw i32 %and5, 28
  %19 = and i32 %and19.i, 268435456
  %and24.i = shl nuw nsw i32 %and5, 1
  %20 = and i32 %and24.i, 4
  %and29.i = lshr i32 %mask, 1
  %21 = and i32 %and29.i, 2
  %22 = or i32 %19, %21
  %23 = or i32 %22, %20
  br label %file_mask_to_av.exit

file_mask_to_av.exit:                             ; preds = %if.else18.i, %if.else.i, %if.then10.i
  %av.4.i = phi i32 [ %or11.i, %if.then10.i ], [ %18, %if.else.i ], [ %23, %if.else18.i ]
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %24 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %security.i.i, align 4
  %26 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %25, i32 %26
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %27 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sid.i, align 4
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %29 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i.i, label %file_mask_to_av.exit.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

file_mask_to_av.exit.selinux_inode.exit.i.i_crit_edge: ; preds = %file_mask_to_av.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %file_mask_to_av.exit
  call void @__sanitizer_cov_trace_pc() #25
  %31 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %30, i32 %31
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %file_mask_to_av.exit.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %file_mask_to_av.exit.selinux_inode.exit.i.i_crit_edge ]
  br i1 %tobool, label %selinux_inode.exit.i.i.do.end6.i.i_crit_edge, label %do.body1.i.i

selinux_inode.exit.i.i.do.end6.i.i_crit_edge:     ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end6.i.i

do.body1.i.i:                                     ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  br label %do.end6.i.i

do.end6.i.i:                                      ; preds = %do.body1.i.i, %selinux_inode.exit.i.i.do.end6.i.i_crit_edge
  %32 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.i.not.i.i = icmp eq i8 %32, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %do.end6.i.i.if.end.i_crit_edge, label %land.lhs.true.i.i

do.end6.i.i.if.end.i_crit_edge:                   ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

land.lhs.true.i.i:                                ; preds = %do.end6.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %33 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %34)
  %cmp.not.i.i = icmp eq i8 %34, 1
  %brmerge.i.i = or i1 %tobool, %cmp.not.i.i
  br i1 %brmerge.i.i, label %__inode_security_revalidate.exit.i, label %if.end12.i.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %inode, ptr noundef null) #23
  br label %if.end.i

__inode_security_revalidate.exit.i:               ; preds = %land.lhs.true.i.i
  br i1 %cmp.not.i.i, label %__inode_security_revalidate.exit.i.if.end.i_crit_edge, label %__inode_security_revalidate.exit.i.if.then21_crit_edge

__inode_security_revalidate.exit.i.if.then21_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then21

__inode_security_revalidate.exit.i.if.end.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

if.end.i:                                         ; preds = %__inode_security_revalidate.exit.i.if.end.i_crit_edge, %if.end12.i.i, %do.end6.i.i.if.end.i_crit_edge
  %35 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %36, null
  br i1 %tobool.not.i.i, label %if.end.i.if.end23_crit_edge, label %inode_security_rcu.exit, !prof !380

if.end.i.if.end23_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

inode_security_rcu.exit:                          ; preds = %if.end.i
  %37 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i74 = getelementptr i8, ptr %36, i32 %37
  %cmp.i75 = icmp ugt ptr %add.ptr.i.i74, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i75, label %inode_security_rcu.exit.if.then21_crit_edge, label %inode_security_rcu.exit.if.end23_crit_edge

inode_security_rcu.exit.if.end23_crit_edge:       ; preds = %inode_security_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

inode_security_rcu.exit.if.then21_crit_edge:      ; preds = %inode_security_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then21

if.then21:                                        ; preds = %inode_security_rcu.exit.if.then21_crit_edge, %__inode_security_revalidate.exit.i.if.then21_crit_edge
  %retval.0.i81 = phi ptr [ %add.ptr.i.i74, %inode_security_rcu.exit.if.then21_crit_edge ], [ inttoptr (i32 -10 to ptr), %__inode_security_revalidate.exit.i.if.then21_crit_edge ]
  %38 = ptrtoint ptr %retval.0.i81 to i32
  br label %cleanup

if.end23:                                         ; preds = %inode_security_rcu.exit.if.end23_crit_edge, %if.end.i.if.end23_crit_edge
  %retval.0.i85 = phi ptr [ %add.ptr.i.i74, %inode_security_rcu.exit.if.end23_crit_edge ], [ null, %if.end.i.if.end23_crit_edge ]
  %sid24 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i85, i32 0, i32 3
  %39 = ptrtoint ptr %sid24 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sid24, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i85, i32 0, i32 4
  %41 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %sclass, align 4
  %call25 = call i32 @avc_has_perm_noaudit(ptr noundef nonnull @selinux_state, i32 noundef %28, i32 noundef %40, i16 noundef zeroext %42, i32 noundef %av.4.i, i32 noundef 0, ptr noundef nonnull %avd) #23
  %43 = ptrtoint ptr %avd to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %avd, align 4
  %neg.i = xor i32 %44, -1
  %and.i76 = and i32 %av.4.i, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i76)
  %tobool.not.i = icmp eq i32 %and.i76, 0
  br i1 %tobool.not.i, label %if.else.i78, label %if.then.i77, !prof !381

if.then.i77:                                      ; preds = %if.end23
  %and2 = shl i32 %mask, 13
  %45 = and i32 %and2, 131072
  %46 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %7, align 4
  %and4.i = and i32 %47, %and.i76
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool5.not.i = icmp ne i32 %45, 0
  %and7.i = and i32 %47, %45
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  %or.cond.i = select i1 %tobool5.not.i, i1 %tobool8.not.i, i1 false
  br i1 %or.cond.i, label %if.then.i77.cleanup_crit_edge, label %if.then.i77.avc_audit_required.exit_crit_edge

if.then.i77.avc_audit_required.exit_crit_edge:    ; preds = %if.then.i77
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit

if.then.i77.cleanup_crit_edge:                    ; preds = %if.then.i77
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.else.i78:                                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool10.not.i = icmp eq i32 %call25, 0
  br i1 %tobool10.not.i, label %if.else12.i, label %if.else.i78.avc_audit_required.exit_crit_edge

if.else.i78.avc_audit_required.exit_crit_edge:    ; preds = %if.else.i78
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit

if.else12.i:                                      ; preds = %if.else.i78
  call void @__sanitizer_cov_trace_pc() #25
  %48 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %6, align 4
  %and13.i = and i32 %49, %av.4.i
  br label %avc_audit_required.exit

avc_audit_required.exit:                          ; preds = %if.else12.i, %if.else.i78.avc_audit_required.exit_crit_edge, %if.then.i77.avc_audit_required.exit_crit_edge
  %denied.0.i = phi i32 [ 0, %if.else12.i ], [ %av.4.i, %if.else.i78.avc_audit_required.exit_crit_edge ], [ %and.i76, %if.then.i77.avc_audit_required.exit_crit_edge ]
  %audited.0.i = phi i32 [ %and13.i, %if.else12.i ], [ %av.4.i, %if.else.i78.avc_audit_required.exit_crit_edge ], [ %and4.i, %if.then.i77.avc_audit_required.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %audited.0.i)
  %tobool29.not = icmp eq i32 %audited.0.i, 0
  br i1 %tobool29.not, label %avc_audit_required.exit.cleanup_crit_edge, label %if.end39, !prof !381

avc_audit_required.exit.cleanup_crit_edge:        ; preds = %avc_audit_required.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end39:                                         ; preds = %avc_audit_required.exit
  call void @__sanitizer_cov_trace_pc() #25
  %call40 = call fastcc i32 @audit_inode_permission(ptr noundef %inode, i32 noundef %av.4.i, i32 noundef %audited.0.i, i32 noundef %denied.0.i, i32 noundef %call25)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  %call25.call40 = select i1 %tobool41.not, i32 %call25, i32 %call40
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %avc_audit_required.exit.cleanup_crit_edge, %if.then.i77.cleanup_crit_edge, %if.then21, %__validate_creds.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %38, %if.then21 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %__validate_creds.exit.cleanup_crit_edge ], [ %call25, %avc_audit_required.exit.cleanup_crit_edge ], [ %call25.call40, %if.end39 ], [ %call25, %if.then.i77.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %avd) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_setattr(ptr noundef %dentry, ptr nocapture noundef readonly %iattr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode.i, align 8
  %8 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %iattr, align 8
  %and = and i32 %9, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then:                                          ; preds = %entry
  %and4 = and i32 %9, -6658
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.then.cleanup_crit_edge, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end7:                                          ; preds = %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  %ia_valid.0 = phi i32 [ %and4, %if.then.if.end7_crit_edge ], [ %9, %entry.if.end7_crit_edge ]
  %and8 = and i32 %ia_valid.0, 65927
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end12, label %if.end7.cleanup.sink.split_crit_edge

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %10 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 1), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.i.not = icmp eq i8 %10, 0
  br i1 %tobool.i.not, label %if.end12.cleanup.sink.split_crit_edge, label %land.lhs.true

if.end12.cleanup.sink.split_crit_edge:            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

land.lhs.true:                                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  %i_sb = getelementptr inbounds %struct.inode, ptr %7, i32 0, i32 8
  %11 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_sb, align 4
  %s_magic = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 12
  %13 = ptrtoint ptr %s_magic to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %s_magic, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1397703499, i32 %14)
  %cmp.not = icmp ne i32 %14, 1397703499
  %and15 = and i32 %ia_valid.0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp ne i32 %and15, 0
  %or.cond = select i1 %cmp.not, i1 %tobool16.not, i1 false
  %and18 = and i32 %ia_valid.0, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  %or.cond35 = select i1 %or.cond, i1 %tobool19.not, i1 false
  %spec.select = select i1 %or.cond35, i32 262148, i32 4
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %land.lhs.true, %if.end12.cleanup.sink.split_crit_edge, %if.end7.cleanup.sink.split_crit_edge
  %av.0.sink = phi i32 [ 32, %if.end7.cleanup.sink.split_crit_edge ], [ 4, %if.end12.cleanup.sink.split_crit_edge ], [ %spec.select, %land.lhs.true ]
  %call22 = tail call fastcc i32 @dentry_has_perm(ptr noundef %5, ptr noundef %dentry, i32 noundef %av.0.sink)
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then.cleanup_crit_edge ], [ %call22, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_getattr(ptr nocapture noundef readonly %path) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %call1 = tail call fastcc i32 @path_has_perm(ptr noundef %5, ptr noundef %path, i32 noundef 16)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_setxattr(ptr noundef %mnt_userns, ptr noundef %dentry, ptr noundef %name, ptr noundef %value, i32 noundef %size, i32 noundef %flags) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  %newsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %2 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %3 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  %4 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 99
  %8 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %9, i32 0, i32 23
  %10 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %security.i.i, align 4
  %12 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %11, i32 %12
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i, align 4
  %call2 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(17) @.str.38) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end8, label %if.then

if.then:                                          ; preds = %entry
  %call3 = tail call i32 @cap_inode_setxattr(ptr noundef %dentry, ptr noundef %name, ptr noundef %value, i32 noundef %size, i32 noundef %flags) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end, label %if.then.cleanup67_crit_edge

if.then.cleanup67_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %15 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 99
  %19 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cred, align 16
  %call7 = tail call fastcc i32 @dentry_has_perm(ptr noundef %20, ptr noundef %dentry, i32 noundef 32)
  br label %cleanup67

if.end8:                                          ; preds = %entry
  %21 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.i.not = icmp eq i8 %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  %call11 = tail call zeroext i1 @inode_owner_or_capable(ptr noundef %mnt_userns, ptr noundef %1) #23
  %not.call11 = xor i1 %call11, true
  %cond = sext i1 %not.call11 to i32
  br label %cleanup67

if.end12:                                         ; preds = %if.end8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %22 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_sb, align 4
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 17
  %24 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %s_security.i, align 4
  %26 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %25, i32 %26
  %flags14 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %27 = ptrtoint ptr %flags14 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %flags14, align 2
  %29 = and i16 %28, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool15.not = icmp eq i16 %29, 0
  br i1 %tobool15.not, label %if.end12.cleanup67_crit_edge, label %if.end17

if.end12.cleanup67_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end17:                                         ; preds = %if.end12
  %call18 = tail call zeroext i1 @inode_owner_or_capable(ptr noundef %mnt_userns, ptr noundef %1) #23
  br i1 %call18, label %if.end20, label %if.end17.cleanup67_crit_edge

if.end17.cleanup67_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end20:                                         ; preds = %if.end17
  %30 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 10, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %31 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %dentry, ptr %u, align 4
  %32 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %d_inode.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 10
  %34 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %35, null
  br i1 %tobool.not.i.i.i, label %if.end20.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.end20.selinux_inode.exit.i.i_crit_edge:        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  %36 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %35, i32 %36
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.end20.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end20.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %37 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.i.not.i.i = icmp eq i8 %37, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %38 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %39)
  %cmp.not.i.i = icmp eq i8 %39, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %33, ptr noundef %dentry) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %40 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %41, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %42 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i114 = getelementptr i8, ptr %41, i32 %42
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i114, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %sid22 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %43 = ptrtoint ptr %sid22 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sid22, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 4
  %45 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %sclass, align 4
  %call23 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %44, i16 noundef zeroext %46, i32 noundef 128, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end26, label %backing_inode_security.exit.cleanup67_crit_edge

backing_inode_security.exit.cleanup67_crit_edge:  ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end26:                                         ; preds = %backing_inode_security.exit
  %call27 = call i32 @security_context_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %value, i32 noundef %size, ptr noundef nonnull %newsid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call27)
  %cmp = icmp eq i32 %call27, -22
  br i1 %cmp, label %if.then29, label %if.end26.if.end50_crit_edge

if.end26.if.end50_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end50

if.then29:                                        ; preds = %if.end26
  %call30 = call fastcc zeroext i1 @has_cap_mac_admin(i1 noundef zeroext true)
  br i1 %call30, label %if.end48, label %if.then31

if.then31:                                        ; preds = %if.then29
  %tobool32.not = icmp eq ptr %value, null
  br i1 %tobool32.not, label %if.then31.if.end41_crit_edge, label %if.then33

if.then31.if.end41_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41

if.then33:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  %sub = add i32 %size, -1
  %arrayidx = getelementptr i8, ptr %value, i32 %sub
  %47 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %cmp35 = icmp eq i8 %48, 0
  %sub.size = select i1 %cmp35, i32 %sub, i32 %size
  br label %if.end41

if.end41:                                         ; preds = %if.then33, %if.then31.if.end41_crit_edge
  %audit_size.1 = phi i32 [ %sub.size, %if.then33 ], [ 0, %if.then31.if.end41_crit_edge ]
  %call43 = call ptr @audit_log_start(ptr noundef null, i32 noundef 2592, i32 noundef 1401) #23
  %tobool44.not = icmp eq ptr %call43, null
  br i1 %tobool44.not, label %if.end41.cleanup67_crit_edge, label %if.end46

if.end41.cleanup67_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end46:                                         ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @audit_log_format(ptr noundef nonnull %call43, ptr noundef nonnull @.str.99) #23
  call void @audit_log_n_untrustedstring(ptr noundef nonnull %call43, ptr noundef %value, i32 noundef %audit_size.1) #23
  call void @audit_log_end(ptr noundef nonnull %call43) #23
  br label %cleanup67

if.end48:                                         ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #25
  %call49 = call i32 @security_context_to_sid_force(ptr noundef nonnull @selinux_state, ptr noundef %value, i32 noundef %size, ptr noundef nonnull %newsid) #23
  br label %if.end50

if.end50:                                         ; preds = %if.end48, %if.end26.if.end50_crit_edge
  %rc.0 = phi i32 [ %call49, %if.end48 ], [ %call27, %if.end26.if.end50_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rc.0)
  %tobool51.not = icmp eq i32 %rc.0, 0
  br i1 %tobool51.not, label %if.end53, label %if.end50.cleanup67_crit_edge

if.end50.cleanup67_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end53:                                         ; preds = %if.end50
  %49 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %newsid, align 4
  %51 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %sclass, align 4
  %call55 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %50, i16 noundef zeroext %52, i32 noundef 256, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.end58, label %if.end53.cleanup67_crit_edge

if.end53.cleanup67_crit_edge:                     ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end58:                                         ; preds = %if.end53
  %53 = ptrtoint ptr %sid22 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sid22, align 4
  %55 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %newsid, align 4
  %57 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %sclass, align 4
  %call61 = call i32 @security_validate_transition(ptr noundef nonnull @selinux_state, i32 noundef %54, i32 noundef %56, i32 noundef %14, i16 noundef zeroext %58) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %if.end64, label %if.end58.cleanup67_crit_edge

if.end58.cleanup67_crit_edge:                     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup67

if.end64:                                         ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #25
  %59 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %newsid, align 4
  %61 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %add.ptr.i, align 4
  %call66 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %60, i32 noundef %62, i16 noundef zeroext 6, i32 noundef 64, ptr noundef nonnull %ad) #23
  br label %cleanup67

cleanup67:                                        ; preds = %if.end64, %if.end58.cleanup67_crit_edge, %if.end53.cleanup67_crit_edge, %if.end50.cleanup67_crit_edge, %if.end46, %if.end41.cleanup67_crit_edge, %backing_inode_security.exit.cleanup67_crit_edge, %if.end17.cleanup67_crit_edge, %if.end12.cleanup67_crit_edge, %if.then10, %do.end, %if.then.cleanup67_crit_edge
  %retval.1 = phi i32 [ %call7, %do.end ], [ %call66, %if.end64 ], [ %cond, %if.then10 ], [ %call3, %if.then.cleanup67_crit_edge ], [ -95, %if.end12.cleanup67_crit_edge ], [ -1, %if.end17.cleanup67_crit_edge ], [ %call23, %backing_inode_security.exit.cleanup67_crit_edge ], [ -22, %if.end41.cleanup67_crit_edge ], [ -22, %if.end46 ], [ %rc.0, %if.end50.cleanup67_crit_edge ], [ %call55, %if.end53.cleanup67_crit_edge ], [ %call61, %if.end58.cleanup67_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_inode_post_setxattr(ptr noundef %dentry, ptr nocapture noundef readonly %name, ptr noundef %value, i32 noundef %size, i32 noundef %flags) #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %2 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  %call1 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(17) @.str.38) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.i.not = icmp eq i8 %3, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @security_context_to_sid_force(ptr noundef nonnull @selinux_state, ptr noundef %value, i32 noundef %size, ptr noundef nonnull %newsid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end9, label %do.end

do.end:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_id = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 39
  %i_ino = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 11
  %6 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_ino, align 8
  %sub = sub i32 0, %call5
  %call8 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.100, ptr noundef %s_id, i32 noundef %7, i32 noundef %sub) #26
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  %8 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_inode.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 10
  %10 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i.i, label %if.end9.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.end9.selinux_inode.exit.i.i_crit_edge:         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  %12 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %11, i32 %12
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.end9.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end9.selinux_inode.exit.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %13 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.i.not.i.i = icmp eq i8 %13, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %14 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %15)
  %cmp.not.i.i = icmp eq i8 %15, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %9, ptr noundef %dentry) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %16 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %18 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 %18
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.backing_inode_security.exit_crit_edge ]
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lock) #23
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %1, align 8
  %21 = and i16 %20, -4096
  %and.i = zext i16 %21 to i32
  %22 = add nsw i32 %and.i, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %22)
  %23 = icmp ult i32 %22, 49152
  br i1 %23, label %switch.lookup, label %backing_inode_security.exit.inode_mode_to_security_class.exit_crit_edge

backing_inode_security.exit.inode_mode_to_security_class.exit_crit_edge: ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  %24 = lshr exact i32 %22, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_inode_post_setxattr, i32 0, i32 %24
  %25 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %25)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %backing_inode_security.exit.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i = phi i16 [ %switch.load, %switch.lookup ], [ 7, %backing_inode_security.exit.inode_mode_to_security_class.exit_crit_edge ]
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 4
  %26 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %retval.0.i, ptr %sclass, align 4
  %27 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %newsid, align 4
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %29 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %sid, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 5
  %30 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 1, ptr %initialized, align 2
  call void @_raw_spin_unlock(ptr noundef %lock) #23
  br label %cleanup

cleanup:                                          ; preds = %inode_mode_to_security_class.exit, %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_getxattr(ptr noundef %dentry, ptr nocapture noundef readnone %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %call2 = tail call fastcc i32 @dentry_has_perm(ptr noundef %5, ptr noundef %dentry, i32 noundef 16)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_listxattr(ptr noundef %dentry) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %call2 = tail call fastcc i32 @dentry_has_perm(ptr noundef %5, ptr noundef %dentry, i32 noundef 16)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_removexattr(ptr noundef %mnt_userns, ptr noundef %dentry, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(17) @.str.38) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @cap_inode_removexattr(ptr noundef %mnt_userns, ptr noundef %dentry, ptr noundef %name) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %do.end, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %call5 = tail call fastcc i32 @dentry_has_perm(ptr noundef %5, ptr noundef %dentry, i32 noundef 32)
  br label %return

if.end6:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %6 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.i.not = icmp eq i8 %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  %. = select i1 %tobool.i.not, i32 0, i32 -13
  br label %return

return:                                           ; preds = %if.end6, %do.end, %if.then.return_crit_edge
  %retval.1 = phi i32 [ %call5, %do.end ], [ %call1, %if.then.return_crit_edge ], [ %., %if.end6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_getsecurity(ptr nocapture noundef readnone %mnt_userns, ptr noundef %inode, ptr nocapture noundef readonly %name, ptr nocapture noundef writeonly %buffer, i1 noundef zeroext %alloc) #1 align 64 {
entry:
  %avd.i.i = alloca %struct.av_decision, align 4
  %size = alloca i32, align 4
  %context = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %size) #23
  %0 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %size, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context) #23
  %1 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %context, align 4
  %2 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.i.not = icmp eq i8 %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(8) @.str) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %3 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i.i, label %if.end.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.end.selinux_inode.exit.i.i_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %5 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %4, i32 %5
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.end.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %6 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.i.not.i.i = icmp eq i8 %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %7 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %8)
  %cmp.not.i.i = icmp eq i8 %8, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %inode, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %9 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %11 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %12 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %cred1.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 99
  %16 = ptrtoint ptr %cred1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cred1.i, align 16
  %call2.i = tail call i32 @cap_capable(ptr noundef %17, ptr noundef nonnull @init_user_ns, i32 noundef 33, i32 noundef 2) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %has_cap_mac_admin.exit, label %inode_security.exit.if.else_crit_edge

inode_security.exit.if.else_crit_edge:            ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

has_cap_mac_admin.exit:                           ; preds = %inode_security.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %avd.i.i) #23
  %security.i.i.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 23
  %18 = call ptr @memset(ptr %avd.i.i, i32 255, i32 20)
  %19 = ptrtoint ptr %security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %security.i.i.i.i, align 4
  %21 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %20, i32 %21
  %sid.i.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %sid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sid.i.i.i, align 4
  %call13.i.i21 = call i32 @avc_has_perm_noaudit(ptr noundef nonnull @selinux_state, i32 noundef %23, i32 noundef %23, i16 noundef zeroext 54, i32 noundef 2, i32 noundef 0, ptr noundef nonnull %avd.i.i) #23
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %avd.i.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i21)
  %tobool5.not.i = icmp eq i32 %call13.i.i21, 0
  br i1 %tobool5.not.i, label %if.then4, label %has_cap_mac_admin.exit.if.else_crit_edge

has_cap_mac_admin.exit.if.else_crit_edge:         ; preds = %has_cap_mac_admin.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then4:                                         ; preds = %has_cap_mac_admin.exit
  call void @__sanitizer_cov_trace_pc() #25
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %24 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sid, align 4
  %call5 = call i32 @security_sid_to_context_force(ptr noundef nonnull @selinux_state, i32 noundef %25, ptr noundef nonnull %context, ptr noundef nonnull %size) #23
  br label %if.end8

if.else:                                          ; preds = %has_cap_mac_admin.exit.if.else_crit_edge, %inode_security.exit.if.else_crit_edge
  %sid6 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %26 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sid6, align 4
  %call7 = call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %27, ptr noundef nonnull %context, ptr noundef nonnull %size) #23
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  %error.0 = phi i32 [ %call5, %if.then4 ], [ %call7, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.0)
  %tobool9.not = icmp eq i32 %error.0, 0
  br i1 %tobool9.not, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  %28 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %size, align 4
  %30 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %context, align 4
  br i1 %alloc, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #25
  %32 = ptrtoint ptr %buffer to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %31, ptr %buffer, align 4
  br label %cleanup

if.end14:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #25
  call void @kfree(ptr noundef %31) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then13, %if.end8.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %lor.lhs.false.cleanup_crit_edge ], [ -95, %entry.cleanup_crit_edge ], [ %error.0, %if.end8.cleanup_crit_edge ], [ %29, %if.end14 ], [ %29, %if.then13 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %size) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_setsecurity(ptr nocapture noundef readonly %inode, ptr nocapture noundef readonly %name, ptr noundef %value, i32 noundef %size, i32 noundef %flags) #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %entry.inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

entry.inode_security_novalidate.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  br label %inode_security_novalidate.exit

inode_security_novalidate.exit:                   ; preds = %if.end.i.i, %entry.inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %entry.inode_security_novalidate.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %3 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  %call1 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(8) @.str) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %inode_security_novalidate.exit.cleanup_crit_edge

inode_security_novalidate.exit.cleanup_crit_edge: ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %inode_security_novalidate.exit
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 17
  %6 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_security.i, align 4
  %8 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %flags3 = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %9 = ptrtoint ptr %flags3 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %flags3, align 2
  %11 = and i16 %10, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool4.not = icmp eq i16 %11, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %tobool7.not = icmp eq ptr %value, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %tobool8.not = icmp eq i32 %size, 0
  %or.cond = or i1 %tobool7.not, %tobool8.not
  br i1 %or.cond, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %call11 = call i32 @security_context_to_sid(ptr noundef nonnull @selinux_state, ptr noundef nonnull %value, i32 noundef %size, ptr noundef nonnull %newsid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lock) #23
  %12 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %inode, align 8
  %14 = and i16 %13, -4096
  %and.i = zext i16 %14 to i32
  %15 = add nsw i32 %and.i, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %15)
  %16 = icmp ult i32 %15, 49152
  br i1 %16, label %switch.lookup, label %if.end14.inode_mode_to_security_class.exit_crit_edge

if.end14.inode_mode_to_security_class.exit_crit_edge: ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  %17 = lshr exact i32 %15, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_inode_setsecurity, i32 0, i32 %17
  %18 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %18)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %if.end14.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i = phi i16 [ %switch.load, %switch.lookup ], [ 7, %if.end14.inode_mode_to_security_class.exit_crit_edge ]
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 4
  %19 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %retval.0.i, ptr %sclass, align 4
  %20 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %newsid, align 4
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %22 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %sid, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 5
  %23 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 1, ptr %initialized, align 2
  call void @_raw_spin_unlock(ptr noundef %lock) #23
  br label %cleanup

cleanup:                                          ; preds = %inode_mode_to_security_class.exit, %if.end10.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %inode_security_novalidate.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %inode_mode_to_security_class.exit ], [ -95, %inode_security_novalidate.exit.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ -13, %if.end6.cleanup_crit_edge ], [ %call11, %if.end10.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_listsecurity(ptr nocapture noundef readnone %inode, ptr noundef writeonly %buffer, i32 noundef %buffer_size) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %0)
  %tobool.i.not = icmp eq i8 %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not = icmp ne ptr %buffer, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %buffer_size)
  %cmp = icmp ugt i32 %buffer_size, 16
  %or.cond = and i1 %tobool.not, %cmp
  br i1 %or.cond, label %if.then1, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %1 = call ptr @memcpy(ptr %buffer, ptr @.str.38, i32 17)
  br label %cleanup

cleanup:                                          ; preds = %if.then1, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 17, %if.then1 ], [ 17, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_inode_getsecid(ptr nocapture noundef readonly %inode, ptr nocapture noundef writeonly %secid) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %entry.inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

entry.inode_security_novalidate.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  br label %inode_security_novalidate.exit

inode_security_novalidate.exit:                   ; preds = %if.end.i.i, %entry.inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %entry.inode_security_novalidate.exit_crit_edge ]
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %3 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid, align 4
  %5 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %secid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_copy_up(ptr nocapture noundef readonly %src, ptr nocapture noundef %new) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %new, align 4
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.then, label %entry.if.end2_crit_edge

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end2

if.then:                                          ; preds = %entry
  %call = tail call ptr @prepare_creds() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %if.then.if.end2_crit_edge

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end2

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %entry.if.end2_crit_edge
  %new_creds.0 = phi ptr [ %call, %if.then.if.end2_crit_edge ], [ %1, %entry.if.end2_crit_edge ]
  %security.i = getelementptr inbounds %struct.cred, ptr %new_creds.0, i32 0, i32 23
  %2 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %security.i, align 4
  %4 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 %4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %src, i32 0, i32 5
  %5 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %d_inode.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %6, i32 0, i32 10
  %7 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i.i, label %if.end2.selinux_inode_getsecid.exit_crit_edge, label %if.end.i.i.i, !prof !380

if.end2.selinux_inode_getsecid.exit_crit_edge:    ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode_getsecid.exit

if.end.i.i.i:                                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #25
  %9 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 %9
  br label %selinux_inode_getsecid.exit

selinux_inode_getsecid.exit:                      ; preds = %if.end.i.i.i, %if.end2.selinux_inode_getsecid.exit_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end2.selinux_inode_getsecid.exit_crit_edge ]
  %sid.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 3
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %12 = ptrtoint ptr %create_sid to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %create_sid, align 4
  %13 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %new_creds.0, ptr %new, align 4
  br label %cleanup

cleanup:                                          ; preds = %selinux_inode_getsecid.exit, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %selinux_inode_getsecid.exit ], [ -12, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_inode_copy_up_xattr(ptr nocapture noundef readonly %name) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(17) @.str.38) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  %. = select i1 %cmp, i32 1, i32 -95
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_path_notify(ptr nocapture noundef readonly %path, i64 noundef %mask, i32 noundef %obj_type) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 1, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %2 = ptrtoint ptr %path to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %path, align 4
  %4 = ptrtoint ptr %u to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %u, align 4
  %5 = zext i32 %obj_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.131)
  switch i32 %obj_type, label %entry.cleanup_crit_edge [
    i32 1, label %entry.sw.epilog_crit_edge
    i32 2, label %sw.bb1
    i32 0, label %sw.bb3
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb1:                                           ; preds = %entry
  %6 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 99
  %10 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cred, align 16
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %12 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %13, i32 0, i32 9
  %14 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %d_sb, align 4
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %11, i32 0, i32 23
  %16 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %security.i.i.i, align 4
  %18 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %17, i32 %18
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid.i.i, align 4
  %s_security.i.i = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 17
  %21 = ptrtoint ptr %s_security.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %s_security.i.i, align 4
  %23 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 %23
  %24 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %add.ptr.i.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %20, i32 noundef %25, i16 noundef zeroext 6, i32 noundef 512, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not = icmp eq i32 %call3.i, 0
  br i1 %tobool.not, label %sw.bb1.sw.epilog_crit_edge, label %sw.bb1.cleanup_crit_edge

sw.bb1.cleanup_crit_edge:                         ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb1.sw.epilog_crit_edge:                       ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb1.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %perm.0 = phi i32 [ 1048576, %sw.bb3 ], [ 4194304, %sw.bb1.sw.epilog_crit_edge ], [ 2097152, %entry.sw.epilog_crit_edge ]
  %and = and i64 %mask, 458752
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool4.not = icmp eq i64 %and, 0
  %or = or i32 %perm.0, 8388608
  %spec.select = select i1 %tobool4.not, i32 %perm.0, i32 %or
  %and7 = and i64 %mask, 131089
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and7)
  %tobool8.not = icmp eq i64 %and7, 0
  %or10 = or i32 %spec.select, 16777216
  %perm.2 = select i1 %tobool8.not, i32 %spec.select, i32 %or10
  %26 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i28 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i28 to ptr
  %task17 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task17 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task17, align 8
  %cred18 = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 99
  %30 = ptrtoint ptr %cred18 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cred18, align 16
  %call19 = call fastcc i32 @path_has_perm(ptr noundef %31, ptr noundef %path, i32 noundef %perm.2)
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb1.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call19, %sw.epilog ], [ %call3.i, %sw.bb1.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_kernfs_init_security(ptr noundef %kn_dir, ptr noundef %kn) #1 align 64 {
entry:
  %parent_sid = alloca i32, align 4
  %newsid = alloca i32, align 4
  %clen = alloca i32, align 4
  %context = alloca ptr, align 4
  %q = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %parent_sid) #23
  %9 = ptrtoint ptr %parent_sid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %parent_sid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %10 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %clen) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context) #23
  %call2 = tail call i32 @kernfs_xattr_get(ptr noundef %kn_dir, ptr noundef nonnull @.str.38, ptr noundef null, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -61, i32 %call2)
  %cmp = icmp eq i32 %call2, -61
  br i1 %cmp, label %entry.cleanup36_crit_edge, label %if.else

entry.cleanup36_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp3 = icmp slt i32 %call2, 0
  br i1 %cmp3, label %if.else.cleanup36_crit_edge, label %if.end5

if.else.cleanup36_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

if.end5:                                          ; preds = %if.else
  %11 = ptrtoint ptr %clen to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call2, ptr %clen, align 4
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %call2, i32 noundef 3264) #31
  %12 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call9.i, ptr %context, align 4
  %tobool.not = icmp eq ptr %call9.i, null
  br i1 %tobool.not, label %if.end5.cleanup36_crit_edge, label %if.end8

if.end5.cleanup36_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

if.end8:                                          ; preds = %if.end5
  %13 = ptrtoint ptr %clen to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %clen, align 4
  %call9 = tail call i32 @kernfs_xattr_get(ptr noundef %kn_dir, ptr noundef nonnull @.str.38, ptr noundef nonnull %call9.i, i32 noundef %14) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp10 = icmp slt i32 %call9, 0
  %15 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %context, align 4
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef %16) #23
  br label %cleanup36

if.end12:                                         ; preds = %if.end8
  %17 = ptrtoint ptr %clen to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %clen, align 4
  %call13 = call i32 @security_context_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %16, i32 noundef %18, ptr noundef nonnull %parent_sid, i32 noundef 3264) #23
  call void @kfree(ptr noundef %16) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.cleanup36_crit_edge

if.end12.cleanup36_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

if.end16:                                         ; preds = %if.end12
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %19 = ptrtoint ptr %create_sid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %create_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool17.not = icmp eq i32 %20, 0
  br i1 %tobool17.not, label %if.else20, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %21 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %newsid, align 4
  br label %if.end30

if.else20:                                        ; preds = %if.end16
  %mode = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 12
  %22 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %mode, align 2
  %call21 = call fastcc zeroext i16 @inode_mode_to_security_class(i16 noundef zeroext %23), !range !385
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %q) #23
  %24 = getelementptr inbounds i8, ptr %q, i32 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 -1, ptr %24, align 8
  %name = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 4
  %26 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %name, align 8
  %name22 = getelementptr inbounds %struct.qstr, ptr %q, i32 0, i32 1
  %28 = ptrtoint ptr %name22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %27, ptr %name22, align 8
  %call24 = call i64 @hashlen_string(ptr noundef %kn_dir, ptr noundef %27) #32
  %29 = ptrtoint ptr %q to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %call24, ptr %q, align 8
  %sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %30 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sid, align 4
  %32 = ptrtoint ptr %parent_sid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %parent_sid, align 4
  %call25 = call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %31, i32 noundef %33, i16 noundef zeroext %call21, ptr noundef nonnull %q, ptr noundef nonnull %newsid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %q) #23
  br i1 %tobool26.not, label %if.else20.if.end30_crit_edge, label %if.else20.cleanup36_crit_edge

if.else20.cleanup36_crit_edge:                    ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

if.else20.if.end30_crit_edge:                     ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end30

if.end30:                                         ; preds = %if.else20.if.end30_crit_edge, %if.then18
  %34 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %newsid, align 4
  %call31 = call i32 @security_sid_to_context_force(ptr noundef nonnull @selinux_state, i32 noundef %35, ptr noundef nonnull %context, ptr noundef nonnull %clen) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end30.cleanup36_crit_edge

if.end30.cleanup36_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

if.end34:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #25
  %36 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %context, align 4
  %38 = ptrtoint ptr %clen to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %clen, align 4
  %call35 = call i32 @kernfs_xattr_set(ptr noundef %kn, ptr noundef nonnull @.str.38, ptr noundef %37, i32 noundef %39, i32 noundef 1) #23
  %40 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %context, align 4
  call void @kfree(ptr noundef %41) #23
  br label %cleanup36

cleanup36:                                        ; preds = %if.end34, %if.end30.cleanup36_crit_edge, %if.else20.cleanup36_crit_edge, %if.end12.cleanup36_crit_edge, %if.then11, %if.end5.cleanup36_crit_edge, %if.else.cleanup36_crit_edge, %entry.cleanup36_crit_edge
  %retval.1 = phi i32 [ %call9, %if.then11 ], [ %call35, %if.end34 ], [ %call25, %if.else20.cleanup36_crit_edge ], [ 0, %entry.cleanup36_crit_edge ], [ %call2, %if.else.cleanup36_crit_edge ], [ -12, %if.end5.cleanup36_crit_edge ], [ %call13, %if.end12.cleanup36_crit_edge ], [ %call31, %if.end30.cleanup36_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %clen) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %parent_sid) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_permission(ptr noundef %file, i32 noundef %mask) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %2 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_security.i, align 8
  %4 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 %4
  %5 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 99
  %9 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %10, i32 0, i32 23
  %11 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security.i.i, align 4
  %13 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %12, i32 %13
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mask)
  %tobool.not = icmp eq i32 %mask, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %16 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i.i, label %if.end.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.end.selinux_inode.exit.i.i_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %18 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %17, i32 %18
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.end.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %19 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.i.not.i.i = icmp eq i8 %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %20 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %21)
  %cmp.not.i.i = icmp eq i8 %21, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %1, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %22 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %23, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %24 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i21 = getelementptr i8, ptr %23, i32 %24
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i21, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %25 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %26)
  %cmp = icmp eq i32 %15, %26
  br i1 %cmp, label %land.lhs.true, label %inode_security.exit.if.end11_crit_edge

inode_security.exit.if.end11_crit_edge:           ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11

land.lhs.true:                                    ; preds = %inode_security.exit
  %isid = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %27 = ptrtoint ptr %isid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %isid, align 4
  %sid5 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %29 = ptrtoint ptr %sid5 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sid5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %30)
  %cmp6 = icmp eq i32 %28, %30
  br i1 %cmp6, label %land.lhs.true7, label %land.lhs.true.if.end11_crit_edge

land.lhs.true.if.end11_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11

land.lhs.true7:                                   ; preds = %land.lhs.true
  %pseqno = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %31 = ptrtoint ptr %pseqno to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %pseqno, align 4
  %call8 = tail call i32 @avc_policy_seqno(ptr noundef nonnull @selinux_state) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %call8)
  %cmp9 = icmp eq i32 %32, %call8
  br i1 %cmp9, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end11_crit_edge

land.lhs.true7.if.end11_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end11:                                         ; preds = %land.lhs.true7.if.end11_crit_edge, %land.lhs.true.if.end11_crit_edge, %inode_security.exit.if.end11_crit_edge
  %33 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i22 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i22 to ptr
  %task.i23 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i23 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i23, align 8
  %cred1.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 99
  %37 = ptrtoint ptr %cred1.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %cred1.i, align 16
  %39 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %f_inode.i, align 8
  %f_flags.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %41 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %f_flags.i, align 4
  %and.i = and i32 %42, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and3.i = and i32 %mask, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %or.cond.i = or i1 %tobool4.not.i, %tobool.not.i
  %or.i = or i32 %mask, 8
  %mask.addr.0.i = select i1 %or.cond.i, i32 %mask, i32 %or.i
  %43 = ptrtoint ptr %40 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %40, align 8
  %45 = and i16 %44, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %45)
  %cmp.i.i = icmp eq i16 %45, 16384
  br i1 %cmp.i.i, label %if.else18.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end11
  %and1.i.i = shl i32 %mask.addr.0.i, 14
  %46 = and i32 %and1.i.i, 16384
  %and3.i.i = lshr i32 %mask.addr.0.i, 1
  %47 = and i32 %and3.i.i, 2
  %48 = or i32 %47, %46
  %and8.i.i = and i32 %mask.addr.0.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i)
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  br i1 %tobool9.not.i.i, label %if.else.i.i, label %if.then10.i.i

if.then10.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %or11.i.i = or i32 %48, 512
  br label %selinux_revalidate_file_permission.exit

if.else.i.i:                                      ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and12.i.i = shl i32 %mask.addr.0.i, 1
  %49 = and i32 %and12.i.i, 4
  %50 = or i32 %48, %49
  br label %selinux_revalidate_file_permission.exit

if.else18.i.i:                                    ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #25
  %and19.i.i = shl i32 %mask.addr.0.i, 28
  %51 = and i32 %and19.i.i, 268435456
  %and24.i.i = shl i32 %mask.addr.0.i, 1
  %52 = and i32 %and24.i.i, 4
  %53 = or i32 %52, %51
  %and29.i.i = lshr i32 %mask.addr.0.i, 1
  %54 = and i32 %and29.i.i, 2
  %55 = or i32 %53, %54
  br label %selinux_revalidate_file_permission.exit

selinux_revalidate_file_permission.exit:          ; preds = %if.else18.i.i, %if.else.i.i, %if.then10.i.i
  %av.4.i.i = phi i32 [ %or11.i.i, %if.then10.i.i ], [ %50, %if.else.i.i ], [ %55, %if.else18.i.i ]
  %call6.i = tail call fastcc i32 @file_has_perm(ptr noundef %38, ptr noundef %file, i32 noundef %av.4.i.i) #23
  br label %cleanup

cleanup:                                          ; preds = %selinux_revalidate_file_permission.exit, %land.lhs.true7.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i, %selinux_revalidate_file_permission.exit ], [ 0, %entry.cleanup_crit_edge ], [ 0, %land.lhs.true7.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_file_alloc_security(ptr nocapture noundef readonly %file) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %0 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_security.i, align 8
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i, align 4
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %add.ptr.i, align 4
  %fown_sid = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %15 = ptrtoint ptr %fown_sid to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %13, ptr %fown_sid, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_ioctl(ptr noundef %file, i32 noundef %cmd, i32 noundef %arg) #1 align 64 {
entry:
  %ad.i18 = alloca %struct.common_audit_data, align 4
  %ioctl.i = alloca %struct.lsm_ioctlop_audit, align 8
  %ad.i = alloca %struct.common_audit_data, align 4
  %avd.i = alloca %struct.av_decision, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %6 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.132)
  switch i32 %cmd, label %sw.default [
    i32 21531, label %entry.sw.bb_crit_edge
    i32 1, label %entry.sw.bb_crit_edge24
    i32 2, label %entry.sw.bb_crit_edge25
    i32 -2147195391, label %entry.sw.bb_crit_edge26
    i32 -2147191295, label %entry.sw.bb_crit_edge27
    i32 1074030082, label %entry.sw.bb3_crit_edge
    i32 1074034178, label %entry.sw.bb3_crit_edge28
    i32 21537, label %entry.sw.bb5_crit_edge
    i32 21586, label %entry.sw.bb5_crit_edge29
    i32 19271, label %entry.sw.bb7_crit_edge
    i32 19273, label %entry.sw.bb7_crit_edge30
  ]

entry.sw.bb7_crit_edge30:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb7

entry.sw.bb7_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb7

entry.sw.bb5_crit_edge29:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb3_crit_edge28:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

entry.sw.bb_crit_edge27:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge26:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge25:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge24:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge24, %entry.sw.bb_crit_edge25, %entry.sw.bb_crit_edge26, %entry.sw.bb_crit_edge27
  %call2 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef %file, i32 noundef 16)
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge28
  %call4 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef %file, i32 noundef 32)
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge29
  %call6 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef %file, i32 noundef 0)
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry.sw.bb7_crit_edge, %entry.sw.bb7_crit_edge30
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %7 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %avd.i) #23
  %8 = getelementptr inbounds %struct.av_decision, ptr %avd.i, i32 0, i32 2
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %9 = call ptr @memset(ptr %avd.i, i32 255, i32 20)
  %10 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %security.i.i.i, align 4
  %12 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %11, i32 %12
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i.i, align 4
  %15 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 3, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %16 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 26, ptr %u.i, align 4
  %call13.i = call i32 @avc_has_perm_noaudit(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %14, i16 noundef zeroext 5, i32 noundef 67108864, i32 noundef 0, ptr noundef nonnull %avd.i) #23
  %17 = ptrtoint ptr %avd.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %avd.i, align 4
  %neg.i.i.i = and i32 %18, 67108864
  %and.i.i.i = xor i32 %neg.i.i.i, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %neg.i.i.i)
  %tobool.not.i.i.not.i = icmp eq i32 %neg.i.i.i, 0
  br i1 %tobool.not.i.i.not.i, label %sw.bb7.avc_audit_required.exit.i.i_crit_edge, label %if.else.i.i.i, !prof !380

sw.bb7.avc_audit_required.exit.i.i_crit_edge:     ; preds = %sw.bb7
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit.i.i

if.else.i.i.i:                                    ; preds = %sw.bb7
  %19 = getelementptr inbounds %struct.av_decision, ptr %avd.i, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool10.not.i.i.i = icmp eq i32 %call13.i, 0
  br i1 %tobool10.not.i.i.i, label %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge, label %if.else.i.i.i.avc_audit.exit.i_crit_edge

if.else.i.i.i.avc_audit.exit.i_crit_edge:         ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit.exit.i

if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit.i.i

avc_audit_required.exit.i.i:                      ; preds = %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge, %sw.bb7.avc_audit_required.exit.i.i_crit_edge
  %auditdeny3.i.sink.i.i = phi ptr [ %8, %sw.bb7.avc_audit_required.exit.i.i_crit_edge ], [ %19, %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge ]
  %20 = ptrtoint ptr %auditdeny3.i.sink.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %auditdeny3.i.sink.i.i, align 4
  %and4.i.i.i = and i32 %21, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and4.i.i.i, 0
  br i1 %tobool.not.i.i, label %avc_audit_required.exit.i.i.if.end19.i_crit_edge, label %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge, !prof !381

avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge: ; preds = %avc_audit_required.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit.exit.i

avc_audit_required.exit.i.i.if.end19.i_crit_edge: ; preds = %avc_audit_required.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

avc_audit.exit.i:                                 ; preds = %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge, %if.else.i.i.i.avc_audit.exit.i_crit_edge
  %audited.0.i.i42.i = phi i32 [ %and4.i.i.i, %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge ], [ 67108864, %if.else.i.i.i.avc_audit.exit.i_crit_edge ]
  %denied.0.i.i41.i = phi i32 [ %and.i.i.i, %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge ], [ 67108864, %if.else.i.i.i.avc_audit.exit.i_crit_edge ]
  %call4.i.i = call i32 @slow_avc_audit(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %14, i16 noundef zeroext 5, i32 noundef 67108864, i32 noundef %audited.0.i.i42.i, i32 noundef %denied.0.i.i41.i, i32 noundef %call13.i, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool17.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool17.not.i, label %avc_audit.exit.i.if.end19.i_crit_edge, label %avc_audit.exit.i.cred_has_capability.exit_crit_edge

avc_audit.exit.i.cred_has_capability.exit_crit_edge: ; preds = %avc_audit.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cred_has_capability.exit

avc_audit.exit.i.if.end19.i_crit_edge:            ; preds = %avc_audit.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

if.end19.i:                                       ; preds = %avc_audit.exit.i.if.end19.i_crit_edge, %avc_audit_required.exit.i.i.if.end19.i_crit_edge
  br label %cred_has_capability.exit

cred_has_capability.exit:                         ; preds = %if.end19.i, %avc_audit.exit.i.cred_has_capability.exit_crit_edge
  %retval.1.i = phi i32 [ %call13.i, %if.end19.i ], [ %call4.i.i, %avc_audit.exit.i.cred_has_capability.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %avd.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %conv = trunc i32 %cmd to i16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i18) #23
  %22 = call ptr @memset(ptr %ad.i18, i32 255, i32 16)
  %f_security.i.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %23 = ptrtoint ptr %f_security.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %f_security.i.i, align 8
  %25 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i.i = getelementptr i8, ptr %24, i32 %25
  %f_inode.i.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %26 = ptrtoint ptr %f_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %f_inode.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %ioctl.i) #23
  %28 = getelementptr inbounds i8, ptr %ioctl.i, i32 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 -1, ptr %28, align 8
  %security.i.i.i19 = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %30 = ptrtoint ptr %security.i.i.i19 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %security.i.i.i19, align 4
  %32 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i20 = getelementptr i8, ptr %31, i32 %32
  %sid.i.i21 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i20, i32 0, i32 1
  %33 = ptrtoint ptr %sid.i.i21 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sid.i.i21, align 4
  %35 = lshr i32 %cmd, 8
  %conv3.i = trunc i32 %35 to i8
  %conv5.i = trunc i32 %cmd to i8
  %36 = ptrtoint ptr %ad.i18 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 11, ptr %ad.i18, align 4
  %u.i22 = getelementptr inbounds %struct.common_audit_data, ptr %ad.i18, i32 0, i32 1
  %37 = ptrtoint ptr %u.i22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %ioctl.i, ptr %u.i22, align 4
  store i16 %conv, ptr %28, align 8
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %38 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %f_path.i, align 8
  %40 = ptrtoint ptr %ioctl.i to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %ioctl.i, align 8
  %41 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %add.ptr.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %42)
  %cmp.not.i = icmp eq i32 %34, %42
  br i1 %cmp.not.i, label %sw.default.if.end13.i_crit_edge, label %if.then.i

sw.default.if.end13.i_crit_edge:                  ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

if.then.i:                                        ; preds = %sw.default
  %call11.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %34, i32 noundef %42, i16 noundef zeroext 9, i32 noundef 1, ptr noundef nonnull %ad.i18) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %tobool.not.i = icmp eq i32 %call11.i, 0
  br i1 %tobool.not.i, label %if.then.i.if.end13.i_crit_edge, label %if.then.i.ioctl_has_perm.exit_crit_edge

if.then.i.ioctl_has_perm.exit_crit_edge:          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %ioctl_has_perm.exit

if.then.i.if.end13.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then.i.if.end13.i_crit_edge, %sw.default.if.end13.i_crit_edge
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %27, i32 0, i32 4
  %43 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %i_flags.i, align 4
  %and14.i = and i32 %44, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  br i1 %tobool15.not.i, label %if.end19.i23, label %if.end13.i.ioctl_has_perm.exit_crit_edge, !prof !381

if.end13.i.ioctl_has_perm.exit_crit_edge:         ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %ioctl_has_perm.exit

if.end19.i23:                                     ; preds = %if.end13.i
  %i_security.i.i.i.i = getelementptr inbounds %struct.inode, ptr %27, i32 0, i32 10
  %45 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %46, null
  br i1 %tobool.not.i.i.i.i, label %if.end19.i23.selinux_inode.exit.i.i.i_crit_edge, label %if.end.i.i.i.i, !prof !380

if.end19.i23.selinux_inode.exit.i.i.i_crit_edge:  ; preds = %if.end19.i23
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end19.i23
  call void @__sanitizer_cov_trace_pc() #25
  %47 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %46, i32 %47
  br label %selinux_inode.exit.i.i.i

selinux_inode.exit.i.i.i:                         ; preds = %if.end.i.i.i.i, %if.end19.i23.selinux_inode.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.end.i.i.i.i ], [ null, %if.end19.i23.selinux_inode.exit.i.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %48 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool.i.not.i.i.i = icmp eq i8 %48, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i.i, label %selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge: ; preds = %selinux_inode.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %selinux_inode.exit.i.i.i
  %initialized.i.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i.i, i32 0, i32 5
  %49 = ptrtoint ptr %initialized.i.i.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %initialized.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %50)
  %cmp.not.i.i.i = icmp eq i8 %50, 1
  br i1 %cmp.not.i.i.i, label %land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, label %if.end12.i.i.i

land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i.i

if.end12.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %27, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i.i

__inode_security_revalidate.exit.i.i:             ; preds = %if.end12.i.i.i, %land.lhs.true.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge, %selinux_inode.exit.i.i.i.__inode_security_revalidate.exit.i.i_crit_edge
  %51 = ptrtoint ptr %i_security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %i_security.i.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %52, null
  br i1 %tobool.not.i.i.i, label %__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge, label %if.end.i.i.i, !prof !380

__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge: ; preds = %__inode_security_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit.i

if.end.i.i.i:                                     ; preds = %__inode_security_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %53 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i1.i = getelementptr i8, ptr %52, i32 %53
  br label %inode_security.exit.i

inode_security.exit.i:                            ; preds = %if.end.i.i.i, %__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge
  %retval.0.i3.i.i = phi ptr [ %add.ptr.i.i1.i, %if.end.i.i.i ], [ null, %__inode_security_revalidate.exit.i.i.inode_security.exit.i_crit_edge ]
  %sid21.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i.i, i32 0, i32 3
  %54 = ptrtoint ptr %sid21.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %sid21.i, align 4
  %sclass.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i.i, i32 0, i32 4
  %56 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %sclass.i, align 4
  %call22.i = call i32 @avc_has_extended_perms(ptr noundef nonnull @selinux_state, i32 noundef %34, i32 noundef %55, i16 noundef zeroext %57, i32 noundef 1, i8 noundef zeroext %conv3.i, i8 noundef zeroext %conv5.i, ptr noundef nonnull %ad.i18) #23
  br label %ioctl_has_perm.exit

ioctl_has_perm.exit:                              ; preds = %inode_security.exit.i, %if.end13.i.ioctl_has_perm.exit_crit_edge, %if.then.i.ioctl_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end13.i.ioctl_has_perm.exit_crit_edge ], [ %call11.i, %if.then.i.ioctl_has_perm.exit_crit_edge ], [ %call22.i, %inode_security.exit.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %ioctl.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i18) #23
  br label %sw.epilog

sw.epilog:                                        ; preds = %ioctl_has_perm.exit, %cred_has_capability.exit, %sw.bb5, %sw.bb3, %sw.bb
  %error.0 = phi i32 [ %retval.0.i, %ioctl_has_perm.exit ], [ %retval.1.i, %cred_has_capability.exit ], [ %call6, %sw.bb5 ], [ %call4, %sw.bb3 ], [ %call2, %sw.bb ]
  ret i32 %error.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_mmap_file(ptr noundef %file, i32 noundef %reqprot, i32 noundef %prot, i32 noundef %flags) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %tobool.not = icmp eq ptr %file, null
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.then

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then:                                          ; preds = %entry
  %1 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 12, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %2 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %file, ptr %u, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred, align 16
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %9 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %f_inode.i, align 8
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %8) #23
  br i1 %call.i.i, label %if.then.i.i, label %if.then.__validate_creds.exit.i_crit_edge, !prof !380

if.then.__validate_creds.exit.i_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %8, ptr noundef nonnull @.str.2, i32 noundef 1641) #23
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %if.then.__validate_creds.exit.i_crit_edge
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %i_flags.i, align 4
  %and.i15 = and i32 %12, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i15)
  %tobool.not.i = icmp eq i32 %and.i15, 0
  br i1 %tobool.not.i, label %if.end.i, label %__validate_creds.exit.i.if.end5_crit_edge, !prof !381

__validate_creds.exit.i.if.end5_crit_edge:        ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.end.i:                                         ; preds = %__validate_creds.exit.i
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %13 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %security.i.i.i, align 4
  %15 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %14, i32 %15
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sid.i.i, align 4
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 10
  %18 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i.i, label %if.end.i.inode_has_perm.exit_crit_edge, label %if.end.i.i, !prof !380

if.end.i.inode_has_perm.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_has_perm.exit

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %20 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %19, i32 %20
  br label %inode_has_perm.exit

inode_has_perm.exit:                              ; preds = %if.end.i.i, %if.end.i.inode_has_perm.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %if.end.i.inode_has_perm.exit_crit_edge ]
  %sid4.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %21 = ptrtoint ptr %sid4.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sid4.i, align 4
  %sclass.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 4
  %23 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %sclass.i, align 4
  %call5.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %17, i32 noundef %22, i16 noundef zeroext %24, i32 noundef 1024, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool3.not = icmp eq i32 %call5.i, 0
  br i1 %tobool3.not, label %inode_has_perm.exit.if.end5_crit_edge, label %inode_has_perm.exit.cleanup_crit_edge

inode_has_perm.exit.cleanup_crit_edge:            ; preds = %inode_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

inode_has_perm.exit.if.end5_crit_edge:            ; preds = %inode_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.end5:                                          ; preds = %inode_has_perm.exit.if.end5_crit_edge, %__validate_creds.exit.i.if.end5_crit_edge, %entry.if.end5_crit_edge
  %25 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 2), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.i.not = icmp eq i8 %25, 0
  %spec.select = select i1 %tobool.i.not, i32 %prot, i32 %reqprot
  %and = and i32 %flags, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %cmp = icmp eq i32 %and, 1
  %conv = zext i1 %cmp to i32
  %call9 = call fastcc i32 @file_map_prot_check(ptr noundef %file, i32 noundef %spec.select, i32 noundef %conv)
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %inode_has_perm.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end5 ], [ %call5.i, %inode_has_perm.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_mmap_addr(i32 noundef %addr) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %addr)
  %cmp = icmp ult i32 %addr, 32768
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 52, i32 noundef 1, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %rc.0 = phi i32 [ %call1, %if.then ], [ 0, %entry.if.end_crit_edge ]
  ret i32 %rc.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_mprotect(ptr noundef %vma, i32 noundef %reqprot, i32 noundef %prot) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 2), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.i.not = icmp eq i8 %11, 0
  %spec.select = select i1 %tobool.i.not, i32 %prot, i32 %reqprot
  %12 = load i32, ptr @default_noexec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not = icmp eq i32 %12, 0
  %and = and i32 %spec.select, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool4.not
  br i1 %or.cond, label %entry.if.end42_crit_edge, label %land.lhs.true5

entry.if.end42_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

land.lhs.true5:                                   ; preds = %entry
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %13 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vm_flags, align 4
  %and6 = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.then8, label %land.lhs.true5.if.end42_crit_edge

land.lhs.true5.if.end42_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.then8:                                         ; preds = %land.lhs.true5
  %15 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vma, align 4
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %17 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vm_mm, align 4
  %start_brk = getelementptr inbounds %struct.anon.23, ptr %18, i32 0, i32 32
  %19 = ptrtoint ptr %start_brk to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %start_brk, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %20)
  %cmp.not = icmp ult i32 %16, %20
  br i1 %cmp.not, label %if.then8.if.else_crit_edge, label %land.lhs.true9

if.then8.if.else_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.lhs.true9:                                   ; preds = %if.then8
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %21 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %vm_end, align 4
  %brk = getelementptr inbounds %struct.anon.23, ptr %18, i32 0, i32 33
  %23 = ptrtoint ptr %brk to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %brk, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %24)
  %cmp11.not = icmp ugt i32 %22, %24
  br i1 %cmp11.not, label %land.lhs.true9.if.else_crit_edge, label %if.then12

land.lhs.true9.if.else_crit_edge:                 ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then12:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #25
  %call13 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 2, i32 noundef 134217728, ptr noundef null) #23
  br label %if.end38

if.else:                                          ; preds = %land.lhs.true9.if.else_crit_edge, %if.then8.if.else_crit_edge
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %25 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %vm_file, align 4
  %tobool14.not = icmp eq ptr %26, null
  br i1 %tobool14.not, label %land.lhs.true15, label %if.else.land.lhs.true31_crit_edge

if.else.land.lhs.true31_crit_edge:                ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true31

land.lhs.true15:                                  ; preds = %if.else
  %start_stack = getelementptr inbounds %struct.anon.23, ptr %18, i32 0, i32 34
  %27 = ptrtoint ptr %start_stack to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %start_stack, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %28)
  %cmp18.not = icmp ugt i32 %16, %28
  br i1 %cmp18.not, label %land.lhs.true15.lor.lhs.false_crit_edge, label %land.lhs.true19

land.lhs.true15.lor.lhs.false_crit_edge:          ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %vm_end20 = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %29 = ptrtoint ptr %vm_end20 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %vm_end20, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %28)
  %cmp23.not = icmp ult i32 %30, %28
  br i1 %cmp23.not, label %land.lhs.true19.lor.lhs.false_crit_edge, label %land.lhs.true19.if.then26_crit_edge

land.lhs.true19.if.then26_crit_edge:              ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then26

land.lhs.true19.lor.lhs.false_crit_edge:          ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true19.lor.lhs.false_crit_edge, %land.lhs.true15.lor.lhs.false_crit_edge
  %call24 = tail call i32 @vma_is_stack_for_current(ptr noundef %vma) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.else28, label %lor.lhs.false.if.then26_crit_edge

lor.lhs.false.if.then26_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then26

if.then26:                                        ; preds = %lor.lhs.false.if.then26_crit_edge, %land.lhs.true19.if.then26_crit_edge
  %call27 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 2, i32 noundef 67108864, ptr noundef null) #23
  br label %if.end38

if.else28:                                        ; preds = %lor.lhs.false
  %31 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pr = load ptr, ptr %vm_file, align 4
  %tobool30.not = icmp eq ptr %.pr, null
  br i1 %tobool30.not, label %if.else28.if.end42_crit_edge, label %if.else28.land.lhs.true31_crit_edge

if.else28.land.lhs.true31_crit_edge:              ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true31

if.else28.if.end42_crit_edge:                     ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

land.lhs.true31:                                  ; preds = %if.else28.land.lhs.true31_crit_edge, %if.else.land.lhs.true31_crit_edge
  %32 = phi ptr [ %.pr, %if.else28.land.lhs.true31_crit_edge ], [ %26, %if.else.land.lhs.true31_crit_edge ]
  %anon_vma = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 11
  %33 = ptrtoint ptr %anon_vma to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %anon_vma, align 4
  %tobool32.not = icmp eq ptr %34, null
  br i1 %tobool32.not, label %land.lhs.true31.if.end42_crit_edge, label %if.then33

land.lhs.true31.if.end42_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.then33:                                        ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #25
  %call35 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef nonnull %32, i32 noundef 524288)
  br label %if.end38

if.end38:                                         ; preds = %if.then33, %if.then26, %if.then12
  %rc.0 = phi i32 [ %call13, %if.then12 ], [ %call35, %if.then33 ], [ %call27, %if.then26 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rc.0)
  %tobool39.not = icmp eq i32 %rc.0, 0
  br i1 %tobool39.not, label %if.end38.if.end42_crit_edge, label %if.end38.cleanup47_crit_edge

if.end38.cleanup47_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup47

if.end38.if.end42_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.end42:                                         ; preds = %if.end38.if.end42_crit_edge, %land.lhs.true31.if.end42_crit_edge, %if.else28.if.end42_crit_edge, %land.lhs.true5.if.end42_crit_edge, %entry.if.end42_crit_edge
  %vm_file43 = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %35 = ptrtoint ptr %vm_file43 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %vm_file43, align 4
  %vm_flags44 = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %37 = ptrtoint ptr %vm_flags44 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %vm_flags44, align 4
  %and45 = and i32 %38, 8
  %call46 = tail call fastcc i32 @file_map_prot_check(ptr noundef %36, i32 noundef %spec.select, i32 noundef %and45)
  br label %cleanup47

cleanup47:                                        ; preds = %if.end42, %if.end38.cleanup47_crit_edge
  %retval.1 = phi i32 [ %call46, %if.end42 ], [ %rc.0, %if.end38.cleanup47_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_lock(ptr noundef %file, i32 noundef %cmd) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %call2 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef %file, i32 noundef 64)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_fcntl(ptr noundef %file, i32 noundef %cmd, i32 noundef %arg) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %6 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.133)
  switch i32 %cmd, label %entry.sw.epilog_crit_edge [
    i32 4, label %sw.bb
    i32 8, label %entry.sw.bb5_crit_edge
    i32 10, label %entry.sw.bb5_crit_edge14
    i32 3, label %entry.sw.bb5_crit_edge15
    i32 9, label %entry.sw.bb5_crit_edge16
    i32 11, label %entry.sw.bb5_crit_edge17
    i32 17, label %entry.sw.bb5_crit_edge18
    i32 5, label %entry.sw.epilog.sink.split_crit_edge
    i32 6, label %entry.sw.epilog.sink.split_crit_edge19
    i32 7, label %entry.sw.epilog.sink.split_crit_edge20
    i32 36, label %entry.sw.epilog.sink.split_crit_edge21
    i32 37, label %entry.sw.epilog.sink.split_crit_edge22
    i32 38, label %entry.sw.epilog.sink.split_crit_edge23
    i32 12, label %entry.sw.epilog.sink.split_crit_edge24
    i32 13, label %entry.sw.epilog.sink.split_crit_edge25
    i32 14, label %entry.sw.epilog.sink.split_crit_edge26
  ]

entry.sw.epilog.sink.split_crit_edge26:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge25:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge24:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge23:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge22:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge21:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge20:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge19:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.bb5_crit_edge18:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb5_crit_edge17:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb5_crit_edge16:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb5_crit_edge15:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb5_crit_edge14:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %f_flags = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %7 = ptrtoint ptr %f_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %f_flags, align 4
  %and = and i32 %8, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  %and2 = and i32 %arg, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %or.cond = and i1 %tobool3.not, %tobool.not
  br i1 %or.cond, label %sw.bb.sw.epilog.sink.split_crit_edge, label %sw.bb.sw.bb5_crit_edge

sw.bb.sw.bb5_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb5

sw.bb.sw.epilog.sink.split_crit_edge:             ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

sw.bb5:                                           ; preds = %sw.bb.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge14, %entry.sw.bb5_crit_edge15, %entry.sw.bb5_crit_edge16, %entry.sw.bb5_crit_edge17, %entry.sw.bb5_crit_edge18
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb5, %sw.bb.sw.epilog.sink.split_crit_edge, %entry.sw.epilog.sink.split_crit_edge, %entry.sw.epilog.sink.split_crit_edge19, %entry.sw.epilog.sink.split_crit_edge20, %entry.sw.epilog.sink.split_crit_edge21, %entry.sw.epilog.sink.split_crit_edge22, %entry.sw.epilog.sink.split_crit_edge23, %entry.sw.epilog.sink.split_crit_edge24, %entry.sw.epilog.sink.split_crit_edge25, %entry.sw.epilog.sink.split_crit_edge26
  %.sink = phi i32 [ 0, %sw.bb5 ], [ 4, %sw.bb.sw.epilog.sink.split_crit_edge ], [ 64, %entry.sw.epilog.sink.split_crit_edge ], [ 64, %entry.sw.epilog.sink.split_crit_edge19 ], [ 64, %entry.sw.epilog.sink.split_crit_edge20 ], [ 64, %entry.sw.epilog.sink.split_crit_edge21 ], [ 64, %entry.sw.epilog.sink.split_crit_edge22 ], [ 64, %entry.sw.epilog.sink.split_crit_edge23 ], [ 64, %entry.sw.epilog.sink.split_crit_edge24 ], [ 64, %entry.sw.epilog.sink.split_crit_edge25 ], [ 64, %entry.sw.epilog.sink.split_crit_edge26 ]
  %call8 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef %file, i32 noundef %.sink)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %err.0 = phi i32 [ 0, %entry.sw.epilog_crit_edge ], [ %call8, %sw.epilog.sink.split ]
  ret i32 %err.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_file_set_fowner(ptr nocapture noundef readonly %file) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %0 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_security.i, align 8
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i, align 4
  %fown_sid = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %14 = ptrtoint ptr %fown_sid to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %fown_sid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_send_sigiotask(ptr noundef %tsk, ptr nocapture noundef readonly %fown, i32 noundef %signum) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @task_sid_obj(ptr noundef %tsk)
  %f_security.i = getelementptr i8, ptr %fown, i32 112
  %0 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_security.i, align 8
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %3 = zext i32 %signum to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.134)
  switch i32 %signum, label %entry.if.end_crit_edge [
    i32 19, label %sw.bb2.i
    i32 17, label %if.end.fold.split
    i32 9, label %sw.bb1.i
  ]

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

sw.bb1.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

sw.bb2.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.fold.split:                                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %if.end.fold.split, %sw.bb2.i, %sw.bb1.i, %entry.if.end_crit_edge
  %perm.0 = phi i32 [ 16, %sw.bb2.i ], [ 8, %sw.bb1.i ], [ 4, %if.end.fold.split ], [ 64, %entry.if.end_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %fown_sid = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %4 = ptrtoint ptr %fown_sid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fown_sid, align 4
  %call4 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %5, i32 noundef %call, i16 noundef zeroext 2, i32 noundef %perm.0, ptr noundef null) #23
  ret i32 %call4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_receive(ptr noundef %file) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %f_mode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %6 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %f_mode.i, align 8
  %and.i5 = shl i32 %7, 1
  %8 = and i32 %and.i5, 2
  %and2.i = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %entry.file_to_av.exit_crit_edge, label %if.then4.i

entry.file_to_av.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %file_to_av.exit

if.then4.i:                                       ; preds = %entry
  %f_flags.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %9 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %f_flags.i, align 4
  %and5.i = and i32 %10, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %or8.i = or i32 %8, 512
  br label %file_to_av.exit

if.else.i:                                        ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %or9.i = or i32 %8, 4
  br label %file_to_av.exit

file_to_av.exit:                                  ; preds = %if.else.i, %if.then7.i, %entry.file_to_av.exit_crit_edge
  %av.1.i = phi i32 [ %or8.i, %if.then7.i ], [ %or9.i, %if.else.i ], [ %8, %entry.file_to_av.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %av.1.i)
  %tobool12.not.i = icmp eq i32 %av.1.i, 0
  %spec.store.select.i = select i1 %tobool12.not.i, i32 1, i32 %av.1.i
  %call3 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef %file, i32 noundef %spec.store.select.i)
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_file_open(ptr noundef %file) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %0 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_security.i, align 8
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %3 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_inode.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i.i.i, label %entry.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

entry.selinux_inode.exit.i.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %7 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 %7
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %entry.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %entry.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %8 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.i.not.i.i = icmp eq i8 %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %9 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %10)
  %cmp.not.i.i = icmp eq i8 %10, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %4, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %11 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %13 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %12, i32 %13
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %14 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sid, align 4
  %isid = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %16 = ptrtoint ptr %isid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %isid, align 4
  %call3 = tail call i32 @avc_policy_seqno(ptr noundef nonnull @selinux_state) #23
  %pseqno = getelementptr inbounds %struct.file_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %17 = ptrtoint ptr %pseqno to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %call3, ptr %pseqno, align 4
  %f_cred = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 12
  %18 = ptrtoint ptr %f_cred to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %f_cred, align 8
  %f_mode.i.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %20 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %f_mode.i.i, align 8
  %and.i.i = shl i32 %21, 1
  %22 = and i32 %and.i.i, 2
  %and2.i.i = and i32 %21, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool3.not.i.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool3.not.i.i, label %inode_security.exit.file_to_av.exit.i_crit_edge, label %if.then4.i.i

inode_security.exit.file_to_av.exit.i_crit_edge:  ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %file_to_av.exit.i

if.then4.i.i:                                     ; preds = %inode_security.exit
  %f_flags.i.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %23 = ptrtoint ptr %f_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %f_flags.i.i, align 4
  %and5.i.i = and i32 %24, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.else.i.i, label %if.then7.i.i

if.then7.i.i:                                     ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %or8.i.i = or i32 %22, 512
  br label %file_to_av.exit.i

if.else.i.i:                                      ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %or9.i.i = or i32 %22, 4
  br label %file_to_av.exit.i

file_to_av.exit.i:                                ; preds = %if.else.i.i, %if.then7.i.i, %inode_security.exit.file_to_av.exit.i_crit_edge
  %av.1.i.i = phi i32 [ %or8.i.i, %if.then7.i.i ], [ %or9.i.i, %if.else.i.i ], [ %22, %inode_security.exit.file_to_av.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %av.1.i.i)
  %tobool12.not.i.i = icmp eq i32 %av.1.i.i, 0
  %spec.store.select.i.i = select i1 %tobool12.not.i.i, i32 1, i32 %av.1.i.i
  %25 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %f_inode.i, align 8
  %27 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 1), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.i.not.i = icmp eq i8 %27, 0
  br i1 %tobool.i.not.i, label %file_to_av.exit.i.open_file_to_av.exit_crit_edge, label %land.lhs.true.i

file_to_av.exit.i.open_file_to_av.exit_crit_edge: ; preds = %file_to_av.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %open_file_to_av.exit

land.lhs.true.i:                                  ; preds = %file_to_av.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 8
  %28 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_sb.i, align 4
  %s_magic.i = getelementptr inbounds %struct.super_block, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %s_magic.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %s_magic.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1397703499, i32 %31)
  %cmp.not.i = icmp eq i32 %31, 1397703499
  %or.i = or i32 %spec.store.select.i.i, 262144
  %spec.select.i = select i1 %cmp.not.i, i32 %spec.store.select.i.i, i32 %or.i
  br label %open_file_to_av.exit

open_file_to_av.exit:                             ; preds = %land.lhs.true.i, %file_to_av.exit.i.open_file_to_av.exit_crit_edge
  %av.0.i = phi i32 [ %spec.store.select.i.i, %file_to_av.exit.i.open_file_to_av.exit_crit_edge ], [ %spec.select.i, %land.lhs.true.i ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %32 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %33 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 12, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %34 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %file, ptr %u.i, align 4
  %call.i.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %19) #23
  br i1 %call.i.i.i, label %if.then.i.i.i, label %open_file_to_av.exit.__validate_creds.exit.i.i_crit_edge, !prof !380

open_file_to_av.exit.__validate_creds.exit.i.i_crit_edge: ; preds = %open_file_to_av.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit.i.i

if.then.i.i.i:                                    ; preds = %open_file_to_av.exit
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %19, ptr noundef nonnull @.str.2, i32 noundef 1641) #23
  br label %__validate_creds.exit.i.i

__validate_creds.exit.i.i:                        ; preds = %if.then.i.i.i, %open_file_to_av.exit.__validate_creds.exit.i.i_crit_edge
  %i_flags.i.i = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 4
  %35 = ptrtoint ptr %i_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %i_flags.i.i, align 4
  %and.i.i12 = and i32 %36, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i12)
  %tobool.not.i.i13 = icmp eq i32 %and.i.i12, 0
  br i1 %tobool.not.i.i13, label %if.end.i.i16, label %__validate_creds.exit.i.i.file_path_has_perm.exit_crit_edge, !prof !381

__validate_creds.exit.i.i.file_path_has_perm.exit_crit_edge: ; preds = %__validate_creds.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %file_path_has_perm.exit

if.end.i.i16:                                     ; preds = %__validate_creds.exit.i.i
  %security.i.i.i.i = getelementptr inbounds %struct.cred, ptr %19, i32 0, i32 23
  %37 = ptrtoint ptr %security.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %security.i.i.i.i, align 4
  %39 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %38, i32 %39
  %sid.i.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i.i, i32 0, i32 1
  %40 = ptrtoint ptr %sid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sid.i.i.i, align 4
  %i_security.i.i.i14 = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 10
  %42 = ptrtoint ptr %i_security.i.i.i14 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %i_security.i.i.i14, align 4
  %tobool.not.i.i.i15 = icmp eq ptr %43, null
  br i1 %tobool.not.i.i.i15, label %if.end.i.i16.selinux_inode.exit.i.i20_crit_edge, label %if.end.i.i.i18, !prof !380

if.end.i.i16.selinux_inode.exit.i.i20_crit_edge:  ; preds = %if.end.i.i16
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i20

if.end.i.i.i18:                                   ; preds = %if.end.i.i16
  call void @__sanitizer_cov_trace_pc() #25
  %44 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i17 = getelementptr i8, ptr %43, i32 %44
  br label %selinux_inode.exit.i.i20

selinux_inode.exit.i.i20:                         ; preds = %if.end.i.i.i18, %if.end.i.i16.selinux_inode.exit.i.i20_crit_edge
  %retval.0.i.i.i19 = phi ptr [ %add.ptr.i.i.i17, %if.end.i.i.i18 ], [ null, %if.end.i.i16.selinux_inode.exit.i.i20_crit_edge ]
  %sid4.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i19, i32 0, i32 3
  %45 = ptrtoint ptr %sid4.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sid4.i.i, align 4
  %sclass.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i19, i32 0, i32 4
  %47 = ptrtoint ptr %sclass.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %sclass.i.i, align 4
  %call5.i.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %41, i32 noundef %46, i16 noundef zeroext %48, i32 noundef %av.0.i, ptr noundef nonnull %ad.i) #23
  br label %file_path_has_perm.exit

file_path_has_perm.exit:                          ; preds = %selinux_inode.exit.i.i20, %__validate_creds.exit.i.i.file_path_has_perm.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call5.i.i, %selinux_inode.exit.i.i20 ], [ 0, %__validate_creds.exit.i.i.file_path_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_alloc(ptr nocapture noundef readnone %task, i32 noundef %clone_flags) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 2, i32 noundef 1, ptr noundef null) #23
  ret i32 %call1
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_cred_prepare(ptr nocapture noundef readonly %new, ptr nocapture noundef readonly %old, i32 noundef %gfp) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.cred, ptr %old, i32 0, i32 23
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %security.i2 = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %3 = ptrtoint ptr %security.i2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %security.i2, align 4
  %add.ptr.i3 = getelementptr i8, ptr %4, i32 %2
  %5 = call ptr @memcpy(ptr %add.ptr.i3, ptr %add.ptr.i, i32 24)
  ret i32 0
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_cred_transfer(ptr nocapture noundef readonly %new, ptr nocapture noundef readonly %old) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.cred, ptr %old, i32 0, i32 23
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %security.i2 = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %3 = ptrtoint ptr %security.i2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %security.i2, align 4
  %add.ptr.i3 = getelementptr i8, ptr %4, i32 %2
  %5 = call ptr @memcpy(ptr %add.ptr.i3, ptr %add.ptr.i, i32 24)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_cred_getsecid(ptr nocapture noundef readonly %c, ptr nocapture noundef writeonly %secid) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i.i = getelementptr inbounds %struct.cred, ptr %c, i32 0, i32 23
  %0 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid.i, align 4
  %5 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %secid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_kernel_act_as(ptr nocapture noundef readonly %new, i32 noundef %secid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 4
  %2 = load i32, ptr @selinux_blob_sizes, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %2
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid.i, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %secid, i16 noundef zeroext 55, i32 noundef 1, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %sid3 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %13 = ptrtoint ptr %sid3 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %secid, ptr %sid3, align 4
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %14 = ptrtoint ptr %create_sid to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %create_sid, align 4
  %keycreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %15 = ptrtoint ptr %keycreate_sid to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %keycreate_sid, align 4
  %sockcreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 5
  %16 = ptrtoint ptr %sockcreate_sid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %sockcreate_sid, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_kernel_create_files_as(ptr nocapture noundef readonly %new, ptr noundef %inode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i.i, label %entry.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

entry.selinux_inode.exit.i.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %1, i32 %2
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %entry.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %entry.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %3 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.i.not.i.i = icmp eq i8 %3, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %4 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp.not.i.i = icmp eq i8 %5, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %inode, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %6 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %8 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %security.i = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %9 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 99
  %16 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 23
  %18 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %security.i.i, align 4
  %add.ptr.i.i8 = getelementptr i8, ptr %19, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i8, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i, align 4
  %sid3 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %22 = ptrtoint ptr %sid3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sid3, align 4
  %call4 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %23, i16 noundef zeroext 55, i32 noundef 2, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp = icmp eq i32 %call4, 0
  br i1 %cmp, label %if.then, label %inode_security.exit.if.end_crit_edge

inode_security.exit.if.end_crit_edge:             ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr.i = getelementptr i8, ptr %10, i32 %11
  %24 = ptrtoint ptr %sid3 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sid3, align 4
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %26 = ptrtoint ptr %create_sid to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %create_sid, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %inode_security.exit.if.end_crit_edge
  ret i32 %call4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_kernel_module_request(ptr noundef %kmod_name) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 8, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %2 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %kmod_name, ptr %u, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i, align 4
  %call1 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %13, i32 noundef 1, i16 noundef zeroext 4, i32 noundef 16, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_kernel_load_data(i32 noundef %id, i1 noundef zeroext %contents) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %id)
  %cond = icmp eq i32 %id, 2
  br i1 %cond, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i.i, align 4
  %call1.i = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 4, i32 noundef 32, ptr noundef null) #23
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  %rc.0 = phi i32 [ %call1.i, %sw.bb ], [ 0, %entry.sw.epilog_crit_edge ]
  ret i32 %rc.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_kernel_read_file(ptr noundef %file, i32 noundef %id, i1 noundef zeroext %contents) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %id)
  %cond1 = icmp eq i32 %id, 2
  br i1 %cond1, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %spec.select = select i1 %contents, ptr %file, ptr null
  %call = tail call fastcc i32 @selinux_kernel_module_from_file(ptr noundef %spec.select)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry.sw.epilog_crit_edge
  %rc.0 = phi i32 [ %call, %sw.bb ], [ 0, %entry.sw.epilog_crit_edge ]
  ret i32 %rc.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_setpgid(ptr noundef %p, i32 noundef %pgid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 4096, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_getpgid(ptr noundef %p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 2048, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_getsid(ptr noundef %p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 1024, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_current_getsecid_subj(ptr nocapture noundef writeonly %secid) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %secid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_task_getsecid_obj(ptr noundef %p, ptr nocapture noundef writeonly %secid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %0 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %call, ptr %secid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_setnice(ptr noundef %p, i32 noundef %nice) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 512, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_setioprio(ptr noundef %p, i32 noundef %ioprio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 512, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_getioprio(ptr noundef %p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 256, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_prlimit(ptr nocapture noundef readonly %cred, ptr nocapture noundef readonly %tcred, i32 noundef %flags) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flags)
  %tobool.not = icmp eq i32 %flags, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %and = shl i32 %flags, 20
  %0 = and i32 %and, 2097152
  %and4 = shl i32 %flags, 30
  %1 = and i32 %and4, 1073741824
  %2 = or i32 %1, %0
  %security.i.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %3 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %security.i.i, align 4
  %5 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 %5
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  %security.i.i15 = getelementptr inbounds %struct.cred, ptr %tcred, i32 0, i32 23
  %8 = ptrtoint ptr %security.i.i15 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security.i.i15, align 4
  %add.ptr.i.i16 = getelementptr i8, ptr %9, i32 %5
  %sid.i17 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i16, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i17 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i17, align 4
  %call10 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %7, i32 noundef %11, i16 noundef zeroext 2, i32 noundef %2, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_setrlimit(ptr noundef %p, i32 noundef %resource, ptr nocapture noundef readonly %new_rlim) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 111
  %0 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %signal, align 16
  %rlim = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 51
  %rlim_max = getelementptr %struct.rlimit, ptr %rlim, i32 %resource, i32 1
  %2 = ptrtoint ptr %rlim_max to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rlim_max, align 4
  %rlim_max1 = getelementptr inbounds %struct.rlimit, ptr %new_rlim, i32 0, i32 1
  %4 = ptrtoint ptr %rlim_max1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rlim_max1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %5)
  %cmp.not = icmp eq i32 %3, %5
  br i1 %cmp.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %6 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 99
  %10 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %11, i32 0, i32 23
  %12 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i.i, align 4
  %14 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 %14
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %15 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sid.i, align 4
  %call2 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %16, i32 noundef %call2, i16 noundef zeroext 2, i32 noundef 2097152, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.then ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_setscheduler(ptr noundef %p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 512, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_getscheduler(ptr noundef %p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 256, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_movememory(ptr noundef %p) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %call1, i16 noundef zeroext 2, i32 noundef 512, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_task_kill(ptr noundef %p, ptr nocapture noundef readnone %info, i32 noundef %sig, ptr noundef readonly %cred) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %sig to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.135)
  switch i32 %sig, label %sw.default.i [
    i32 0, label %entry.if.end_crit_edge
    i32 17, label %if.end.fold.split
    i32 9, label %sw.bb1.i
    i32 19, label %sw.bb2.i
  ]

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

sw.bb1.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

sw.bb2.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

sw.default.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.fold.split:                                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %if.end.fold.split, %sw.default.i, %sw.bb2.i, %sw.bb1.i, %entry.if.end_crit_edge
  %perm.0 = phi i32 [ 32, %entry.if.end_crit_edge ], [ 64, %sw.default.i ], [ 16, %sw.bb2.i ], [ 8, %sw.bb1.i ], [ 4, %if.end.fold.split ]
  %tobool1.not = icmp eq ptr %cred, null
  br i1 %tobool1.not, label %if.then2, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end6

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end.if.end6_crit_edge
  %cred.sink = phi ptr [ %6, %if.then2 ], [ %cred, %if.end.if.end6_crit_edge ]
  %security.i.i11 = getelementptr inbounds %struct.cred, ptr %cred.sink, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i11 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i11, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i12 = getelementptr i8, ptr %8, i32 %9
  %secid.0.in = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i12, i32 0, i32 1
  %10 = ptrtoint ptr %secid.0.in to i32
  call void @__asan_load4_noabort(i32 %10)
  %secid.0 = load i32, ptr %secid.0.in, align 4
  %call7 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %call8 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %secid.0, i32 noundef %call7, i16 noundef zeroext 2, i32 noundef %perm.0, ptr noundef null) #23
  ret i32 %call8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_task_to_inode(ptr noundef %p, ptr nocapture noundef readonly %inode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

entry.selinux_inode.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %entry.selinux_inode.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end.i ], [ null, %entry.selinux_inode.exit_crit_edge ]
  %call1 = tail call fastcc i32 @task_sid_obj(ptr noundef %p)
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #23
  %3 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %inode, align 8
  %5 = and i16 %4, -4096
  %and.i = zext i16 %5 to i32
  %6 = add nsw i32 %and.i, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %6)
  %7 = icmp ult i32 %6, 49152
  br i1 %7, label %switch.lookup, label %selinux_inode.exit.inode_mode_to_security_class.exit_crit_edge

selinux_inode.exit.inode_mode_to_security_class.exit_crit_edge: ; preds = %selinux_inode.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_mode_to_security_class.exit

switch.lookup:                                    ; preds = %selinux_inode.exit
  call void @__sanitizer_cov_trace_pc() #25
  %8 = lshr exact i32 %6, 12
  %switch.gep = getelementptr inbounds [12 x i16], ptr @switch.table.selinux_task_to_inode, i32 0, i32 %8
  %9 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %9)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %inode_mode_to_security_class.exit

inode_mode_to_security_class.exit:                ; preds = %switch.lookup, %selinux_inode.exit.inode_mode_to_security_class.exit_crit_edge
  %retval.0.i10 = phi i16 [ %switch.load, %switch.lookup ], [ 7, %selinux_inode.exit.inode_mode_to_security_class.exit_crit_edge ]
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %10 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %retval.0.i10, ptr %sclass, align 4
  %sid3 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %11 = ptrtoint ptr %sid3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call1, ptr %sid3, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 5
  %12 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %initialized, align 2
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ipc_permission(ptr nocapture noundef readonly %ipcp, i16 noundef signext %flag) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %conv14 = zext i16 %flag to i32
  %0 = and i32 %conv14, 438
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %entry.cleanup_crit_edge, label %if.end9

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end9:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %and = and i32 %conv14, 292
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and2 = and i32 %conv14, 146
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 128
  %or5 = or i32 %spec.select, 256
  %av.1 = select i1 %tobool3.not, i32 %spec.select, i32 %or5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %2 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i.i, align 4
  %security.i.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %ipcp, i32 0, i32 10
  %14 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %security.i.i, align 16
  %16 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i.i = getelementptr i8, ptr %15, i32 %16
  %17 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 4, ptr %ad.i, align 4
  %key.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %ipcp, i32 0, i32 3
  %18 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %key.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %20 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %u.i, align 4
  %sid2.i = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %sid2.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sid2.i, align 4
  %23 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %add.ptr.i.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %13, i32 noundef %22, i16 noundef zeroext %24, i32 noundef %av.1, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3.i, %if.end9 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_ipc_getsecid(ptr nocapture noundef readonly %ipcp, ptr nocapture noundef writeonly %secid) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %ipcp, i32 0, i32 10
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 16
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %sid = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %3 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sid, align 4
  %5 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %secid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_msg_queue_associate(ptr nocapture noundef readonly %msq, i32 noundef %msqflg) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 3
  %16 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %18 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %u, align 4
  %sid2 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %19 = ptrtoint ptr %sid2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid2, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %20, i16 noundef zeroext 28, i32 noundef 64, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_msg_queue_msgctl(ptr nocapture noundef readonly %msq, i32 noundef %cmd) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.136)
  switch i32 %cmd, label %entry.cleanup_crit_edge [
    i32 3, label %entry.sw.bb_crit_edge
    i32 12, label %entry.sw.bb_crit_edge9
    i32 2, label %entry.sw.epilog_crit_edge
    i32 11, label %entry.sw.epilog_crit_edge10
    i32 13, label %entry.sw.epilog_crit_edge11
    i32 1, label %sw.bb3
    i32 0, label %sw.bb4
  ]

entry.sw.epilog_crit_edge11:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.epilog_crit_edge10:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.bb_crit_edge9:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge9
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef 1, i16 noundef zeroext 4, i32 noundef 1, ptr noundef null) #23
  br label %cleanup

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb3, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge10, %entry.sw.epilog_crit_edge11
  %perms.0 = phi i32 [ 2, %sw.bb4 ], [ 8, %sw.bb3 ], [ 68, %entry.sw.epilog_crit_edge ], [ 68, %entry.sw.epilog_crit_edge10 ], [ 68, %entry.sw.epilog_crit_edge11 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %12 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %13 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 99
  %17 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %18, i32 0, i32 23
  %19 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %security.i.i.i, align 4
  %21 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %20, i32 %21
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sid.i.i, align 4
  %security.i.i7 = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 10
  %24 = ptrtoint ptr %security.i.i7 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %security.i.i7, align 16
  %26 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i.i8 = getelementptr i8, ptr %25, i32 %26
  %27 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 4, ptr %ad.i, align 4
  %key.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 3
  %28 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %key.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %30 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %u.i, align 4
  %sid2.i = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i.i8, i32 0, i32 1
  %31 = ptrtoint ptr %sid2.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sid2.i, align 4
  %33 = ptrtoint ptr %add.ptr.i.i8 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %add.ptr.i.i8, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %23, i32 noundef %32, i16 noundef zeroext %34, i32 noundef %perms.0, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3.i, %sw.epilog ], [ %call1, %sw.bb ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_msg_queue_msgsnd(ptr nocapture noundef readonly %msq, ptr nocapture noundef readonly %msg, i32 noundef %msqflg) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %security.i38 = getelementptr inbounds %struct.msg_msg, ptr %msg, i32 0, i32 4
  %15 = ptrtoint ptr %security.i38 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %security.i38, align 4
  %17 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 5), align 4
  %add.ptr.i39 = getelementptr i8, ptr %16, i32 %17
  %18 = ptrtoint ptr %add.ptr.i39 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %add.ptr.i39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %19)
  %cmp = icmp eq i32 %19, 3
  br i1 %cmp, label %if.then, label %entry.if.end8_crit_edge

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.then:                                          ; preds = %entry
  %sid4 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid4 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid4, align 4
  %call6 = tail call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %21, i16 noundef zeroext 27, ptr noundef null, ptr noundef %add.ptr.i39) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.then.if.end8_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.end8:                                          ; preds = %if.then.if.end8_crit_edge, %entry.if.end8_crit_edge
  %22 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 3
  %23 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %25 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %u, align 4
  %sid9 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %26 = ptrtoint ptr %sid9 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sid9, align 4
  %call10 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %27, i16 noundef zeroext 28, i32 noundef 32, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end15, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end15:                                         ; preds = %if.end8
  %28 = ptrtoint ptr %add.ptr.i39 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %add.ptr.i39, align 4
  %call14 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %29, i16 noundef zeroext 27, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool16.not = icmp eq i32 %call14, 0
  br i1 %tobool16.not, label %if.then17, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then17:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  %30 = ptrtoint ptr %add.ptr.i39 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr.i39, align 4
  %32 = ptrtoint ptr %sid9 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %sid9, align 4
  %call20 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %31, i32 noundef %33, i16 noundef zeroext 28, i32 noundef 512, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %if.then17, %if.end15.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.then.cleanup_crit_edge ], [ %call14, %if.end15.cleanup_crit_edge ], [ %call20, %if.then17 ], [ %call10, %if.end8.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_msg_queue_msgrcv(ptr nocapture noundef readonly %msq, ptr nocapture noundef readonly %msg, ptr noundef %target, i32 noundef %type, i32 noundef %mode) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %call = tail call fastcc i32 @task_sid_obj(ptr noundef %target)
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 10
  %1 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %security.i, align 16
  %3 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %2, i32 %3
  %security.i11 = getelementptr inbounds %struct.msg_msg, ptr %msg, i32 0, i32 4
  %4 = ptrtoint ptr %security.i11 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %security.i11, align 4
  %6 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 5), align 4
  %7 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 3
  %8 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %10 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %u, align 4
  %sid4 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid4 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid4, align 4
  %call5 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %call, i32 noundef %12, i16 noundef zeroext 28, i32 noundef 16, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr.i12 = getelementptr i8, ptr %5, i32 %6
  %13 = ptrtoint ptr %add.ptr.i12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %add.ptr.i12, align 4
  %call7 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %call, i32 noundef %14, i16 noundef zeroext 27, i32 noundef 2, ptr noundef nonnull %ad) #23
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %rc.0 = phi i32 [ %call5, %entry.if.end_crit_edge ], [ %call7, %if.then ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %rc.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_shm_associate(ptr nocapture noundef readonly %shp, i32 noundef %shmflg) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 3
  %16 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %18 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %u, align 4
  %sid2 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %19 = ptrtoint ptr %sid2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid2, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %20, i16 noundef zeroext 29, i32 noundef 64, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_shm_shmctl(ptr nocapture noundef readonly %shp, i32 noundef %cmd) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.137)
  switch i32 %cmd, label %entry.cleanup_crit_edge [
    i32 3, label %entry.sw.bb_crit_edge
    i32 14, label %entry.sw.bb_crit_edge10
    i32 2, label %entry.sw.epilog_crit_edge
    i32 13, label %entry.sw.epilog_crit_edge11
    i32 15, label %entry.sw.epilog_crit_edge12
    i32 1, label %sw.bb3
    i32 11, label %entry.sw.bb4_crit_edge
    i32 12, label %entry.sw.bb4_crit_edge13
    i32 0, label %sw.bb5
  ]

entry.sw.bb4_crit_edge13:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb4

entry.sw.epilog_crit_edge12:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.epilog_crit_edge11:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.bb_crit_edge10:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge10
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef 1, i16 noundef zeroext 4, i32 noundef 1, ptr noundef null) #23
  br label %cleanup

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge13
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb3, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge11, %entry.sw.epilog_crit_edge12
  %perms.0 = phi i32 [ 2, %sw.bb5 ], [ 512, %sw.bb4 ], [ 8, %sw.bb3 ], [ 68, %entry.sw.epilog_crit_edge ], [ 68, %entry.sw.epilog_crit_edge11 ], [ 68, %entry.sw.epilog_crit_edge12 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %12 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %13 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 99
  %17 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %18, i32 0, i32 23
  %19 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %security.i.i.i, align 4
  %21 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %20, i32 %21
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sid.i.i, align 4
  %security.i.i8 = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 10
  %24 = ptrtoint ptr %security.i.i8 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %security.i.i8, align 16
  %26 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i.i9 = getelementptr i8, ptr %25, i32 %26
  %27 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 4, ptr %ad.i, align 4
  %key.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 3
  %28 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %key.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %30 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %u.i, align 4
  %sid2.i = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i.i9, i32 0, i32 1
  %31 = ptrtoint ptr %sid2.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sid2.i, align 4
  %33 = ptrtoint ptr %add.ptr.i.i9 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %add.ptr.i.i9, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %23, i32 noundef %32, i16 noundef zeroext %34, i32 noundef %perms.0, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3.i, %sw.epilog ], [ %call1, %sw.bb ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_shm_shmat(ptr nocapture noundef readonly %shp, ptr nocapture noundef readnone %shmaddr, i32 noundef %shmflg) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %shmflg, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %. = select i1 %tobool.not, i32 48, i32 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %0 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i.i, align 4
  %security.i.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 10
  %12 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %ad.i, align 4
  %key.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 3
  %16 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %key.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %18 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %u.i, align 4
  %sid2.i = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %sid2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid2.i, align 4
  %21 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %add.ptr.i.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %20, i16 noundef zeroext %22, i32 noundef %., ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %call3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sem_associate(ptr nocapture noundef readonly %sma, i32 noundef %semflg) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 3
  %16 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %18 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %u, align 4
  %sid2 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %19 = ptrtoint ptr %sid2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid2, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %20, i16 noundef zeroext 26, i32 noundef 64, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sem_semctl(ptr nocapture noundef readonly %sma, i32 noundef %cmd) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.138)
  switch i32 %cmd, label %entry.cleanup_crit_edge [
    i32 3, label %entry.sw.bb_crit_edge
    i32 19, label %entry.sw.bb_crit_edge12
    i32 11, label %entry.sw.epilog_crit_edge
    i32 14, label %entry.sw.epilog_crit_edge13
    i32 15, label %entry.sw.epilog_crit_edge14
    i32 12, label %entry.sw.bb3_crit_edge
    i32 13, label %entry.sw.bb3_crit_edge15
    i32 16, label %entry.sw.bb4_crit_edge
    i32 17, label %entry.sw.bb4_crit_edge16
    i32 0, label %sw.bb5
    i32 1, label %sw.bb6
    i32 2, label %entry.sw.bb7_crit_edge
    i32 18, label %entry.sw.bb7_crit_edge17
    i32 20, label %entry.sw.bb7_crit_edge18
  ]

entry.sw.bb7_crit_edge18:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb7

entry.sw.bb7_crit_edge17:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb7

entry.sw.bb7_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb7

entry.sw.bb4_crit_edge16:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb4

entry.sw.bb3_crit_edge15:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

entry.sw.epilog_crit_edge14:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.epilog_crit_edge13:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

entry.sw.bb_crit_edge12:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge12
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef 1, i16 noundef zeroext 4, i32 noundef 1, ptr noundef null) #23
  br label %cleanup

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge15
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge16
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry.sw.bb7_crit_edge, %entry.sw.bb7_crit_edge17, %entry.sw.bb7_crit_edge18
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge13, %entry.sw.epilog_crit_edge14
  %perms.0 = phi i32 [ 68, %sw.bb7 ], [ 8, %sw.bb6 ], [ 2, %sw.bb5 ], [ 32, %sw.bb4 ], [ 16, %sw.bb3 ], [ 4, %entry.sw.epilog_crit_edge ], [ 4, %entry.sw.epilog_crit_edge13 ], [ 4, %entry.sw.epilog_crit_edge14 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %12 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %13 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 99
  %17 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %18, i32 0, i32 23
  %19 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %security.i.i.i, align 4
  %21 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %20, i32 %21
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sid.i.i, align 4
  %security.i.i10 = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 10
  %24 = ptrtoint ptr %security.i.i10 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %security.i.i10, align 16
  %26 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i.i11 = getelementptr i8, ptr %25, i32 %26
  %27 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 4, ptr %ad.i, align 4
  %key.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 3
  %28 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %key.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %30 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %u.i, align 4
  %sid2.i = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i.i11, i32 0, i32 1
  %31 = ptrtoint ptr %sid2.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sid2.i, align 4
  %33 = ptrtoint ptr %add.ptr.i.i11 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %add.ptr.i.i11, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %23, i32 noundef %32, i16 noundef zeroext %34, i32 noundef %perms.0, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3.i, %sw.epilog ], [ %call1, %sw.bb ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sem_semop(ptr nocapture noundef readonly %sma, ptr nocapture noundef readnone %sops, i32 noundef %nsops, i32 noundef %alter) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %alter)
  %tobool.not = icmp eq i32 %alter, 0
  %. = select i1 %tobool.not, i32 16, i32 48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %0 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i.i, align 4
  %security.i.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 10
  %12 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %ad.i, align 4
  %key.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 3
  %16 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %key.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %18 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %u.i, align 4
  %sid2.i = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %sid2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid2.i, align 4
  %21 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %add.ptr.i.i, align 4
  %call3.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %20, i16 noundef zeroext %22, i32 noundef %., ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %call3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_d_instantiate(ptr noundef %dentry, ptr noundef %inode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %inode, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef nonnull %inode, ptr noundef %dentry)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_getprocattr(ptr noundef %p, ptr nocapture noundef readonly %name, ptr noundef %value) #1 align 64 {
entry:
  %len = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %len) #23
  %0 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %len, align 4, !annotation !376
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %4, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !386
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 696, ptr noundef nonnull @.str.85) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 98
  %5 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %real_cred, align 4
  %call = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b75 = load i1, ptr @selinux_getprocattr.__warned, align 1
  br i1 %.b75, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @selinux_getprocattr.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 6361, ptr noundef nonnull @.str.83) #23
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %security.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %8, i32 %9
  %10 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %13, %p
  br i1 %cmp.not, label %do.end7.if.end18_crit_edge, label %if.then11

do.end7.if.end18_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.then11:                                        ; preds = %do.end7
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 99
  %14 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %15, i32 0, i32 23
  %16 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %security.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sid.i, align 4
  %sid13 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid13 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid13, align 4
  %call14 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %19, i32 noundef %21, i16 noundef zeroext 2, i32 noundef 65536, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then11.if.end18_crit_edge, label %if.then11.bad_crit_edge

if.then11.bad_crit_edge:                          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  br label %bad

if.then11.if.end18_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.end18:                                         ; preds = %if.then11.if.end18_crit_edge, %do.end7.if.end18_crit_edge
  %call19 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(8) @.str.103) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  %sid22 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  br label %if.end48

if.else:                                          ; preds = %if.end18
  %call23 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(5) @.str.104) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.else.if.end48_crit_edge, label %if.else26

if.else.if.end48_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48

if.else26:                                        ; preds = %if.else
  %call27 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(5) @.str.105) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.then29, label %if.else30

if.then29:                                        ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #25
  %exec_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 2
  br label %if.end48

if.else30:                                        ; preds = %if.else26
  %call31 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(9) @.str.106) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then33, label %if.else34

if.then33:                                        ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #25
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  br label %if.end48

if.else34:                                        ; preds = %if.else30
  %call35 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(10) @.str.107) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.then37, label %if.else38

if.then37:                                        ; preds = %if.else34
  call void @__sanitizer_cov_trace_pc() #25
  %keycreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 4
  br label %if.end48

if.else38:                                        ; preds = %if.else34
  %call39 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(11) @.str.108) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %if.then41, label %if.else38.bad_crit_edge

if.else38.bad_crit_edge:                          ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #25
  br label %bad

if.then41:                                        ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #25
  %sockcreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 5
  br label %if.end48

if.end48:                                         ; preds = %if.then41, %if.then37, %if.then33, %if.then29, %if.else.if.end48_crit_edge, %if.then21
  %sid.0.in = phi ptr [ %sockcreate_sid, %if.then41 ], [ %keycreate_sid, %if.then37 ], [ %create_sid, %if.then33 ], [ %exec_sid, %if.then29 ], [ %sid22, %if.then21 ], [ %add.ptr.i, %if.else.if.end48_crit_edge ]
  %22 = ptrtoint ptr %sid.0.in to i32
  call void @__asan_load4_noabort(i32 %22)
  %sid.0 = load i32, ptr %sid.0.in, align 4
  %call.i76 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i76, label %if.end48.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i79

if.end48.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i79:                                ; preds = %if.end48
  %call1.i77 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i77)
  %tobool.not.i78 = icmp eq i32 %call1.i77, 0
  br i1 %tobool.not.i78, label %land.lhs.true.i79.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i81

land.lhs.true.i79.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i79
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i81:                               ; preds = %land.lhs.true.i79
  %.b4.i80 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i80, label %land.lhs.true2.i81.rcu_read_unlock.exit_crit_edge, label %if.then.i82

land.lhs.true2.i81.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i81
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i82:                                      ; preds = %land.lhs.true2.i81
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 724, ptr noundef nonnull @.str.86) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i82, %land.lhs.true2.i81.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i79.rcu_read_unlock.exit_crit_edge, %if.end48.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !387
  %23 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i83 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i83 to ptr
  %preempt_count.i.i.i.i84 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i84 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i84, align 4
  %sub.i.i.i = add i32 %26, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i84, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sid.0)
  %tobool49.not = icmp eq i32 %sid.0, 0
  br i1 %tobool49.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %if.end51

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end51:                                         ; preds = %rcu_read_unlock.exit
  %call52 = call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %sid.0, ptr noundef %value, ptr noundef nonnull %len) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end55, label %if.end51.cleanup_crit_edge

if.end51.cleanup_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end55:                                         ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #25
  %27 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %len, align 4
  br label %cleanup

bad:                                              ; preds = %if.else38.bad_crit_edge, %if.then11.bad_crit_edge
  %error.0 = phi i32 [ %call14, %if.then11.bad_crit_edge ], [ -22, %if.else38.bad_crit_edge ]
  %call.i85 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i85, label %bad.rcu_read_unlock.exit95_crit_edge, label %land.lhs.true.i88

bad.rcu_read_unlock.exit95_crit_edge:             ; preds = %bad
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit95

land.lhs.true.i88:                                ; preds = %bad
  %call1.i86 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i86)
  %tobool.not.i87 = icmp eq i32 %call1.i86, 0
  br i1 %tobool.not.i87, label %land.lhs.true.i88.rcu_read_unlock.exit95_crit_edge, label %land.lhs.true2.i90

land.lhs.true.i88.rcu_read_unlock.exit95_crit_edge: ; preds = %land.lhs.true.i88
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit95

land.lhs.true2.i90:                               ; preds = %land.lhs.true.i88
  %.b4.i89 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i89, label %land.lhs.true2.i90.rcu_read_unlock.exit95_crit_edge, label %if.then.i91

land.lhs.true2.i90.rcu_read_unlock.exit95_crit_edge: ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit95

if.then.i91:                                      ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 724, ptr noundef nonnull @.str.86) #23
  br label %rcu_read_unlock.exit95

rcu_read_unlock.exit95:                           ; preds = %if.then.i91, %land.lhs.true2.i90.rcu_read_unlock.exit95_crit_edge, %land.lhs.true.i88.rcu_read_unlock.exit95_crit_edge, %bad.rcu_read_unlock.exit95_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !387
  %29 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i92 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i92 to ptr
  %preempt_count.i.i.i.i93 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i93 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i93, align 4
  %sub.i.i.i94 = add i32 %32, -1
  store volatile i32 %sub.i.i.i94, ptr %preempt_count.i.i.i.i93, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit95, %if.end55, %if.end51.cleanup_crit_edge, %rcu_read_unlock.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.0, %rcu_read_unlock.exit95 ], [ %28, %if.end55 ], [ 0, %rcu_read_unlock.exit.cleanup_crit_edge ], [ %call52, %if.end51.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %len) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_setprocattr(ptr nocapture noundef readonly %name, ptr noundef %value, i32 noundef %size) #1 align 64 {
entry:
  %sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %11 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %sid, align 4
  %call1 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(5) @.str.105) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %entry.if.end26_crit_edge, label %if.else

entry.if.end26_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.else:                                          ; preds = %entry
  %call3 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(9) @.str.106) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.else.if.end26_crit_edge, label %if.else7

if.else.if.end26_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.else7:                                         ; preds = %if.else
  %call8 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(10) @.str.107) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.else7.if.end26_crit_edge, label %if.else12

if.else7.if.end26_crit_edge:                      ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.else12:                                        ; preds = %if.else7
  %call13 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(11) @.str.108) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.else12.if.end26_crit_edge, label %if.else17

if.else12.if.end26_crit_edge:                     ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.else17:                                        ; preds = %if.else12
  %call18 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(8) @.str.103) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.else17.if.end26_crit_edge, label %if.else17.cleanup141_crit_edge

if.else17.cleanup141_crit_edge:                   ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup141

if.else17.if.end26_crit_edge:                     ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.end26:                                         ; preds = %if.else17.if.end26_crit_edge, %if.else12.if.end26_crit_edge, %if.else7.if.end26_crit_edge, %if.else.if.end26_crit_edge, %entry.if.end26_crit_edge
  %.sink = phi i32 [ 131072, %entry.if.end26_crit_edge ], [ 262144, %if.else.if.end26_crit_edge ], [ 268435456, %if.else7.if.end26_crit_edge ], [ 536870912, %if.else12.if.end26_crit_edge ], [ 16777216, %if.else17.if.end26_crit_edge ]
  %call6 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 2, i32 noundef %.sink, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool27.not = icmp eq i32 %call6, 0
  br i1 %tobool27.not, label %if.end29, label %if.end26.cleanup141_crit_edge

if.end26.cleanup141_crit_edge:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup141

if.end29:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %tobool30.not = icmp eq i32 %size, 0
  br i1 %tobool30.not, label %if.end29.if.end75_crit_edge, label %land.lhs.true

if.end29.if.end75_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end75

land.lhs.true:                                    ; preds = %if.end29
  %12 = ptrtoint ptr %value to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %value, align 1
  %14 = zext i8 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.139)
  switch i8 %13, label %if.then36 [
    i8 0, label %land.lhs.true.if.end75_crit_edge
    i8 10, label %land.lhs.true.if.end75_crit_edge212
  ]

land.lhs.true.if.end75_crit_edge212:              ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end75

land.lhs.true.if.end75_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end75

if.then36:                                        ; preds = %land.lhs.true
  %sub = add i32 %size, -1
  %arrayidx37 = getelementptr i8, ptr %value, i32 %sub
  %15 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx37, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %16)
  %cmp39 = icmp eq i8 %16, 10
  br i1 %cmp39, label %if.then41, label %if.then36.if.end44_crit_edge

if.then36.if.end44_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end44

if.then41:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #25
  %17 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %arrayidx37, align 1
  br label %if.end44

if.end44:                                         ; preds = %if.then41, %if.then36.if.end44_crit_edge
  %size.addr.0 = phi i32 [ %sub, %if.then41 ], [ %size, %if.then36.if.end44_crit_edge ]
  %call45 = call i32 @security_context_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %value, i32 noundef %size.addr.0, ptr noundef nonnull %sid, i32 noundef 3264) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call45)
  %cmp46 = icmp eq i32 %call45, -22
  br i1 %cmp46, label %land.lhs.true48, label %if.end44.if.end71_crit_edge

if.end44.if.end71_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end71

land.lhs.true48:                                  ; preds = %if.end44
  %call49 = call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(9) @.str.106) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %if.then51, label %land.lhs.true48.cleanup141_crit_edge

land.lhs.true48.cleanup141_crit_edge:             ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup141

if.then51:                                        ; preds = %land.lhs.true48
  %call52 = call fastcc zeroext i1 @has_cap_mac_admin(i1 noundef zeroext true)
  br i1 %call52, label %if.end69, label %if.then53

if.then53:                                        ; preds = %if.then51
  %sub54 = add i32 %size.addr.0, -1
  %arrayidx55 = getelementptr i8, ptr %value, i32 %sub54
  %18 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx55, align 1
  %call64 = call ptr @audit_log_start(ptr noundef null, i32 noundef 2592, i32 noundef 1401) #23
  %tobool65.not = icmp eq ptr %call64, null
  br i1 %tobool65.not, label %if.then53.cleanup141_crit_edge, label %if.end67

if.then53.cleanup141_crit_edge:                   ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup141

if.end67:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp57 = icmp eq i8 %19, 0
  %sub54.size.addr.0 = select i1 %cmp57, i32 %sub54, i32 %size.addr.0
  call void (ptr, ptr, ...) @audit_log_format(ptr noundef nonnull %call64, ptr noundef nonnull @.str.109) #23
  call void @audit_log_n_untrustedstring(ptr noundef nonnull %call64, ptr noundef %value, i32 noundef %sub54.size.addr.0) #23
  call void @audit_log_end(ptr noundef nonnull %call64) #23
  br label %cleanup141

if.end69:                                         ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #25
  %call70 = call i32 @security_context_to_sid_force(ptr noundef nonnull @selinux_state, ptr noundef %value, i32 noundef %size.addr.0, ptr noundef nonnull %sid) #23
  br label %if.end71

if.end71:                                         ; preds = %if.end69, %if.end44.if.end71_crit_edge
  %error.1 = phi i32 [ %call70, %if.end69 ], [ %call45, %if.end44.if.end71_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.1)
  %tobool72.not = icmp eq i32 %error.1, 0
  br i1 %tobool72.not, label %if.end71.if.end75_crit_edge, label %if.end71.cleanup141_crit_edge

if.end71.cleanup141_crit_edge:                    ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup141

if.end71.if.end75_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end75

if.end75:                                         ; preds = %if.end71.if.end75_crit_edge, %land.lhs.true.if.end75_crit_edge, %land.lhs.true.if.end75_crit_edge212, %if.end29.if.end75_crit_edge
  %size.addr.1 = phi i32 [ %size.addr.0, %if.end71.if.end75_crit_edge ], [ %size, %land.lhs.true.if.end75_crit_edge ], [ 0, %if.end29.if.end75_crit_edge ], [ %size, %land.lhs.true.if.end75_crit_edge212 ]
  %call76 = call ptr @prepare_creds() #23
  %tobool77.not = icmp eq ptr %call76, null
  br i1 %tobool77.not, label %if.end75.cleanup141_crit_edge, label %if.end79

if.end75.cleanup141_crit_edge:                    ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup141

if.end79:                                         ; preds = %if.end75
  %security.i = getelementptr inbounds %struct.cred, ptr %call76, i32 0, i32 23
  %20 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %security.i, align 4
  %22 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %21, i32 %22
  %call81 = call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(5) @.str.105) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call81)
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #25
  %23 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sid, align 4
  %exec_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %25 = ptrtoint ptr %exec_sid to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %exec_sid, align 4
  br label %if.end139

if.else84:                                        ; preds = %if.end79
  %call85 = call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(9) @.str.106) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call85)
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %if.then87, label %if.else88

if.then87:                                        ; preds = %if.else84
  call void @__sanitizer_cov_trace_pc() #25
  %26 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sid, align 4
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %28 = ptrtoint ptr %create_sid to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %create_sid, align 4
  br label %if.end139

if.else88:                                        ; preds = %if.else84
  %call89 = call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(10) @.str.107) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %if.then91, label %if.else99

if.then91:                                        ; preds = %if.else88
  %29 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool92.not = icmp eq i32 %30, 0
  br i1 %tobool92.not, label %if.then91.if.end98_crit_edge, label %if.then93

if.then91.if.end98_crit_edge:                     ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end98

if.then93:                                        ; preds = %if.then91
  %call94 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %30, i16 noundef zeroext 50, i32 noundef 64, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %if.then93.if.end98_crit_edge, label %if.then93.abort_change_crit_edge

if.then93.abort_change_crit_edge:                 ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #25
  br label %abort_change

if.then93.if.end98_crit_edge:                     ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end98

if.end98:                                         ; preds = %if.then93.if.end98_crit_edge, %if.then91.if.end98_crit_edge
  %31 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sid, align 4
  %keycreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %33 = ptrtoint ptr %keycreate_sid to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %keycreate_sid, align 4
  br label %if.end139

if.else99:                                        ; preds = %if.else88
  %call100 = call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(11) @.str.108) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call100)
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %if.then102, label %if.else103

if.then102:                                       ; preds = %if.else99
  call void @__sanitizer_cov_trace_pc() #25
  %34 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sid, align 4
  %sockcreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 5
  %36 = ptrtoint ptr %sockcreate_sid to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %sockcreate_sid, align 4
  br label %if.end139

if.else103:                                       ; preds = %if.else99
  %call104 = call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(8) @.str.103) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %if.then106, label %if.else103.abort_change_crit_edge

if.else103.abort_change_crit_edge:                ; preds = %if.else103
  call void @__sanitizer_cov_trace_pc() #25
  br label %abort_change

if.then106:                                       ; preds = %if.else103
  %37 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp107 = icmp eq i32 %38, 0
  br i1 %cmp107, label %if.then106.abort_change_crit_edge, label %if.end110

if.then106.abort_change_crit_edge:                ; preds = %if.then106
  call void @__sanitizer_cov_trace_pc() #25
  br label %abort_change

if.end110:                                        ; preds = %if.then106
  %call111 = call zeroext i1 @current_is_single_threaded() #23
  br i1 %call111, label %if.end110.if.end118_crit_edge, label %if.then112

if.end110.if.end118_crit_edge:                    ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end118

if.then112:                                       ; preds = %if.end110
  %sid113 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %39 = ptrtoint ptr %sid113 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sid113, align 4
  %41 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sid, align 4
  %call114 = call i32 @security_bounded_transition(ptr noundef nonnull @selinux_state, i32 noundef %40, i32 noundef %42) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %if.then112.if.end118_crit_edge, label %if.then112.abort_change_crit_edge

if.then112.abort_change_crit_edge:                ; preds = %if.then112
  call void @__sanitizer_cov_trace_pc() #25
  br label %abort_change

if.then112.if.end118_crit_edge:                   ; preds = %if.then112
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end118

if.end118:                                        ; preds = %if.then112.if.end118_crit_edge, %if.end110.if.end118_crit_edge
  %sid119 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %43 = ptrtoint ptr %sid119 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sid119, align 4
  %45 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sid, align 4
  %call120 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %44, i32 noundef %46, i16 noundef zeroext 2, i32 noundef 8388608, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call120)
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %if.end123, label %if.end118.abort_change_crit_edge

if.end118.abort_change_crit_edge:                 ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #25
  br label %abort_change

if.end123:                                        ; preds = %if.end118
  %call124 = call fastcc i32 @ptrace_parent_sid()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call124)
  %cmp125.not = icmp eq i32 %call124, 0
  br i1 %cmp125.not, label %if.end123.if.end132_crit_edge, label %if.then127

if.end123.if.end132_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end132

if.then127:                                       ; preds = %if.end123
  %47 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %sid, align 4
  %call128 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %call124, i32 noundef %48, i16 noundef zeroext 2, i32 noundef 128, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call128)
  %tobool129.not = icmp eq i32 %call128, 0
  br i1 %tobool129.not, label %if.then127.if.end132_crit_edge, label %if.then127.abort_change_crit_edge

if.then127.abort_change_crit_edge:                ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #25
  br label %abort_change

if.then127.if.end132_crit_edge:                   ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end132

if.end132:                                        ; preds = %if.then127.if.end132_crit_edge, %if.end123.if.end132_crit_edge
  %49 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sid, align 4
  %51 = ptrtoint ptr %sid119 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %sid119, align 4
  br label %if.end139

if.end139:                                        ; preds = %if.end132, %if.then102, %if.end98, %if.then87, %if.then83
  %call140 = call i32 @commit_creds(ptr noundef nonnull %call76) #23
  br label %cleanup141

abort_change:                                     ; preds = %if.then127.abort_change_crit_edge, %if.end118.abort_change_crit_edge, %if.then112.abort_change_crit_edge, %if.then106.abort_change_crit_edge, %if.else103.abort_change_crit_edge, %if.then93.abort_change_crit_edge
  %error.2 = phi i32 [ -22, %if.then106.abort_change_crit_edge ], [ %call120, %if.end118.abort_change_crit_edge ], [ %call128, %if.then127.abort_change_crit_edge ], [ %call114, %if.then112.abort_change_crit_edge ], [ %call94, %if.then93.abort_change_crit_edge ], [ -22, %if.else103.abort_change_crit_edge ]
  call void @abort_creds(ptr noundef nonnull %call76) #23
  br label %cleanup141

cleanup141:                                       ; preds = %abort_change, %if.end139, %if.end75.cleanup141_crit_edge, %if.end71.cleanup141_crit_edge, %if.end67, %if.then53.cleanup141_crit_edge, %land.lhs.true48.cleanup141_crit_edge, %if.end26.cleanup141_crit_edge, %if.else17.cleanup141_crit_edge
  %retval.1 = phi i32 [ %error.2, %abort_change ], [ %size.addr.1, %if.end139 ], [ %call6, %if.end26.cleanup141_crit_edge ], [ -22, %if.then53.cleanup141_crit_edge ], [ -22, %if.end67 ], [ %error.1, %if.end71.cleanup141_crit_edge ], [ -12, %if.end75.cleanup141_crit_edge ], [ -22, %if.else17.cleanup141_crit_edge ], [ -22, %land.lhs.true48.cleanup141_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  ret i32 %retval.1
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_ismaclabel(ptr nocapture noundef readonly %name) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(8) @.str) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_secctx_to_secid(ptr noundef %secdata, i32 noundef %seclen, ptr noundef %secid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @security_context_to_sid(ptr noundef nonnull @selinux_state, ptr noundef %secdata, i32 noundef %seclen, ptr noundef %secid, i32 noundef 3264) #23
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_release_secctx(ptr noundef %secdata, i32 noundef %seclen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %secdata) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_inode_invalidate_secctx(ptr nocapture noundef readonly %inode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

entry.selinux_inode.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %entry.selinux_inode.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end.i ], [ null, %entry.selinux_inode.exit_crit_edge ]
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #23
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 5
  %3 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %initialized, align 2
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_notifysecctx(ptr nocapture noundef readonly %inode, ptr noundef %ctx, i32 noundef %ctxlen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @selinux_inode_setsecurity(ptr noundef %inode, ptr noundef nonnull @.str, ptr noundef %ctx, i32 noundef %ctxlen, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call)
  %cmp = icmp eq i32 %call, -95
  %spec.select = select i1 %cmp, i32 0, i32 %call
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_setsecctx(ptr noundef %dentry, ptr noundef %ctx, i32 noundef %ctxlen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__vfs_setxattr_noperm(ptr noundef nonnull @init_user_ns, ptr noundef %dentry, ptr noundef nonnull @.str.38, ptr noundef %ctx, i32 noundef %ctxlen, i32 noundef 0) #23
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_unix_stream_connect(ptr nocapture noundef readonly %sock, ptr noundef %other, ptr nocapture noundef readonly %newsk) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sock, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %sk_security1 = getelementptr inbounds %struct.sock, ptr %other, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security1, align 8
  %sk_security2 = getelementptr inbounds %struct.sock, ptr %newsk, i32 0, i32 73
  %4 = ptrtoint ptr %sk_security2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk_security2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %6 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %7 = call ptr @memset(ptr %net, i32 0, i32 48)
  %8 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %9 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net, ptr %u, align 4
  %sk = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 1
  %10 = ptrtoint ptr %sk to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %other, ptr %sk, align 4
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %11 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid, align 4
  %sid4 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %13 = ptrtoint ptr %sid4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid4, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %15 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %sclass, align 4
  %call = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %14, i16 noundef zeroext %16, i32 noundef 2097152, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %17 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sid, align 4
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %5, i32 0, i32 3
  %19 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %peer_sid, align 4
  %20 = ptrtoint ptr %sid4 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid4, align 4
  %22 = load i32, ptr %sid, align 4
  %sid8 = getelementptr inbounds %struct.sk_security_struct, ptr %5, i32 0, i32 2
  %call9 = call i32 @security_sid_mls_copy(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %22, ptr noundef %sid8) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end12:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %23 = ptrtoint ptr %sid8 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sid8, align 4
  %peer_sid14 = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 3
  %25 = ptrtoint ptr %peer_sid14 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %peer_sid14, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ %call, %entry.cleanup_crit_edge ], [ %call9, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_unix_may_send(ptr nocapture noundef readonly %sock, ptr nocapture noundef readonly %other) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security, align 8
  %sk1 = getelementptr inbounds %struct.socket, ptr %other, i32 0, i32 4
  %4 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk1, align 16
  %sk_security2 = getelementptr inbounds %struct.sock, ptr %5, i32 0, i32 73
  %6 = ptrtoint ptr %sk_security2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sk_security2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %8 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %9 = call ptr @memset(ptr %net, i32 0, i32 48)
  %10 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %11 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %net, ptr %u, align 4
  %sk5 = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 1
  %12 = ptrtoint ptr %sk5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %5, ptr %sk5, align 4
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %13 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid, align 4
  %sid6 = getelementptr inbounds %struct.sk_security_struct, ptr %7, i32 0, i32 2
  %15 = ptrtoint ptr %sid6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sid6, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %7, i32 0, i32 4
  %17 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %sclass, align 4
  %call = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %16, i16 noundef zeroext %18, i32 noundef 524288, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_create(i32 noundef %family, i32 noundef %type, i32 noundef %protocol, i32 noundef %kern) #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %9 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kern)
  %tobool.not = icmp eq i32 %kern, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc zeroext i16 @socket_type_to_security_class(i32 noundef %family, i32 noundef %type, i32 noundef %protocol), !range !388
  %sockcreate_sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 5
  %10 = ptrtoint ptr %sockcreate_sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sockcreate_sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp.not.i = icmp eq i32 %11, 0
  br i1 %cmp.not.i, label %socket_sockcreate_sid.exit, label %socket_sockcreate_sid.exit.thread

socket_sockcreate_sid.exit.thread:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %12 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %newsid, align 4
  br label %if.end6

socket_sockcreate_sid.exit:                       ; preds = %if.end
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i, align 4
  %call.i = call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %14, i32 noundef %14, i16 noundef zeroext %call2, ptr noundef null, ptr noundef nonnull %newsid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool4.not = icmp eq i32 %call.i, 0
  br i1 %tobool4.not, label %socket_sockcreate_sid.exit.if.end6_crit_edge, label %socket_sockcreate_sid.exit.cleanup_crit_edge

socket_sockcreate_sid.exit.cleanup_crit_edge:     ; preds = %socket_sockcreate_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

socket_sockcreate_sid.exit.if.end6_crit_edge:     ; preds = %socket_sockcreate_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end6

if.end6:                                          ; preds = %socket_sockcreate_sid.exit.if.end6_crit_edge, %socket_sockcreate_sid.exit.thread
  %sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %15 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sid, align 4
  %17 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %newsid, align 4
  %call7 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %16, i32 noundef %18, i16 noundef zeroext %call2, i32 noundef 8, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %socket_sockcreate_sid.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end6 ], [ 0, %entry.cleanup_crit_edge ], [ %call.i, %socket_sockcreate_sid.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_post_create(ptr nocapture noundef readonly %sock, i32 noundef %family, i32 noundef %type, i32 noundef %protocol, i32 noundef %kern) #1 align 64 {
entry:
  %sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %i_security.i.i = getelementptr inbounds %struct.socket_alloc, ptr %sock, i32 0, i32 1, i32 10
  %9 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %entry.inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

entry.inode_security_novalidate.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %11 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  br label %inode_security_novalidate.exit

inode_security_novalidate.exit:                   ; preds = %if.end.i.i, %entry.inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %entry.inode_security_novalidate.exit_crit_edge ]
  %call4 = tail call fastcc zeroext i16 @socket_type_to_security_class(i32 noundef %family, i32 noundef %type, i32 noundef %protocol)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %12 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kern)
  %tobool.not = icmp eq i32 %kern, 0
  br i1 %tobool.not, label %if.then, label %inode_security_novalidate.exit.if.end8_crit_edge

inode_security_novalidate.exit.if.end8_crit_edge: ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.then:                                          ; preds = %inode_security_novalidate.exit
  %sockcreate_sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 5
  %13 = ptrtoint ptr %sockcreate_sid.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sockcreate_sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.not.i = icmp eq i32 %14, 0
  br i1 %cmp.not.i, label %socket_sockcreate_sid.exit, label %socket_sockcreate_sid.exit.thread

socket_sockcreate_sid.exit.thread:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %15 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %sid, align 4
  br label %if.end8

socket_sockcreate_sid.exit:                       ; preds = %if.then
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %16 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sid.i, align 4
  %call.i = call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %17, i32 noundef %17, i16 noundef zeroext %call4, ptr noundef null, ptr noundef nonnull %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not = icmp eq i32 %call.i, 0
  br i1 %tobool6.not, label %socket_sockcreate_sid.exit.if.end8_crit_edge, label %socket_sockcreate_sid.exit.cleanup_crit_edge

socket_sockcreate_sid.exit.cleanup_crit_edge:     ; preds = %socket_sockcreate_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

socket_sockcreate_sid.exit.if.end8_crit_edge:     ; preds = %socket_sockcreate_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.end8:                                          ; preds = %socket_sockcreate_sid.exit.if.end8_crit_edge, %socket_sockcreate_sid.exit.thread, %inode_security_novalidate.exit.if.end8_crit_edge
  %sclass9 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 4
  %18 = ptrtoint ptr %sclass9 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %call4, ptr %sclass9, align 4
  %19 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sid, align 4
  %sid10 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %21 = ptrtoint ptr %sid10 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %sid10, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 5
  %22 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 1, ptr %initialized, align 2
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %23 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sk, align 16
  %tobool11.not = icmp eq ptr %24, null
  br i1 %tobool11.not, label %if.end8.cleanup_crit_edge, label %if.then12

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then12:                                        ; preds = %if.end8
  %sk_security = getelementptr inbounds %struct.sock, ptr %24, i32 0, i32 73
  %25 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sk_security, align 8
  %sclass14 = getelementptr inbounds %struct.sk_security_struct, ptr %26, i32 0, i32 4
  %27 = ptrtoint ptr %sclass14 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %call4, ptr %sclass14, align 4
  %sid15 = getelementptr inbounds %struct.sk_security_struct, ptr %26, i32 0, i32 2
  %28 = ptrtoint ptr %sid15 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %20, ptr %sid15, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 60, i16 %call4)
  %cmp = icmp eq i16 %call4, 60
  br i1 %cmp, label %if.then18, label %if.then12.if.end19_crit_edge

if.then12.if.end19_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

if.then18:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  %sctp_assoc_state = getelementptr inbounds %struct.sk_security_struct, ptr %26, i32 0, i32 5
  %29 = ptrtoint ptr %sctp_assoc_state to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %sctp_assoc_state, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then12.if.end19_crit_edge
  %30 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sk, align 16
  %conv21 = trunc i32 %family to i16
  %call22 = call i32 @selinux_netlbl_socket_post_create(ptr noundef %31, i16 noundef zeroext %conv21) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.end8.cleanup_crit_edge, %socket_sockcreate_sid.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %socket_sockcreate_sid.exit.cleanup_crit_edge ], [ %call22, %if.end19 ], [ 0, %if.end8.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_socket_socketpair(ptr nocapture noundef readonly %socka, ptr nocapture noundef readonly %sockb) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %socka, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security, align 8
  %sk1 = getelementptr inbounds %struct.socket, ptr %sockb, i32 0, i32 4
  %4 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk1, align 16
  %sk_security2 = getelementptr inbounds %struct.sock, ptr %5, i32 0, i32 73
  %6 = ptrtoint ptr %sk_security2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sk_security2, align 8
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sid, align 4
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  %10 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %peer_sid, align 4
  %sid3 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %11 = ptrtoint ptr %sid3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid3, align 4
  %peer_sid4 = getelementptr inbounds %struct.sk_security_struct, ptr %7, i32 0, i32 3
  %13 = ptrtoint ptr %peer_sid4 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %peer_sid4, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_bind(ptr nocapture noundef readonly %sock, ptr noundef %address, i32 noundef %addrlen) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  %sid = alloca i32, align 4
  %low = alloca i32, align 4
  %high = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %sk_security = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %sock_has_perm.exit.thread, label %sock_has_perm.exit

sock_has_perm.exit.thread:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %if.end

sock_has_perm.exit:                               ; preds = %entry
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 2048, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %sock_has_perm.exit.if.end_crit_edge, label %sock_has_perm.exit.cleanup111_crit_edge

sock_has_perm.exit.cleanup111_crit_edge:          ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup111

sock_has_perm.exit.if.end_crit_edge:              ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %sock_has_perm.exit.if.end_crit_edge, %sock_has_perm.exit.thread
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 3
  %24 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %skc_family, align 8
  %26 = zext i16 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.140)
  switch i16 %25, label %if.end.cleanup111_crit_edge [
    i16 2, label %if.end.if.then6_crit_edge
    i16 10, label %if.end.if.then6_crit_edge164
  ]

if.end.if.then6_crit_edge164:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then6

if.end.if.then6_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then6

if.end.cleanup111_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup111

if.then6:                                         ; preds = %if.end.if.then6_crit_edge, %if.end.if.then6_crit_edge164
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %27 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %28 = call ptr @memset(ptr %net, i32 0, i32 48)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %29 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 -1, ptr %sid, align 4, !annotation !376
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %addrlen)
  %cmp7 = icmp ult i32 %addrlen, 2
  br i1 %cmp7, label %if.then6.cleanup93.thread161_crit_edge, label %if.end10

if.then6.cleanup93.thread161_crit_edge:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup93.thread161

if.end10:                                         ; preds = %if.then6
  %30 = ptrtoint ptr %address to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %address, align 2
  %32 = zext i16 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.141)
  switch i16 %31, label %if.end10.err_af_crit_edge [
    i16 0, label %if.end10.sw.bb_crit_edge
    i16 2, label %if.end10.sw.bb_crit_edge165
    i16 10, label %sw.bb27
  ]

if.end10.sw.bb_crit_edge165:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

if.end10.sw.bb_crit_edge:                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

if.end10.err_af_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %err_af

sw.bb:                                            ; preds = %if.end10.sw.bb_crit_edge, %if.end10.sw.bb_crit_edge165
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %addrlen)
  %cmp12 = icmp ult i32 %addrlen, 16
  br i1 %cmp12, label %sw.bb.cleanup93.thread161_crit_edge, label %if.end15

sw.bb.cleanup93.thread161_crit_edge:              ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup93.thread161

if.end15:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %cmp17 = icmp eq i16 %31, 0
  br i1 %cmp17, label %if.then19, label %if.end15.if.end24_crit_edge

if.end15.if.end24_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end24

if.then19:                                        ; preds = %if.end15
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, ptr %address, i32 0, i32 2
  %33 = ptrtoint ptr %sin_addr to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sin_addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp20.not = icmp eq i32 %34, 0
  br i1 %cmp20.not, label %if.then19.if.end24_crit_edge, label %if.then19.err_af_crit_edge

if.then19.err_af_crit_edge:                       ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #25
  br label %err_af

if.then19.if.end24_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end24

if.end24:                                         ; preds = %if.then19.if.end24_crit_edge, %if.end15.if.end24_crit_edge
  %family_sa.0 = phi i16 [ %31, %if.end15.if.end24_crit_edge ], [ 2, %if.then19.if.end24_crit_edge ]
  %sin_port = getelementptr inbounds %struct.sockaddr_in, ptr %address, i32 0, i32 1
  %sin_addr25 = getelementptr inbounds %struct.sockaddr_in, ptr %address, i32 0, i32 2
  br label %sw.epilog

sw.bb27:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %addrlen)
  %cmp28 = icmp slt i32 %addrlen, 24
  br i1 %cmp28, label %sw.bb27.cleanup93.thread161_crit_edge, label %if.end31

sw.bb27.cleanup93.thread161_crit_edge:            ; preds = %sw.bb27
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup93.thread161

if.end31:                                         ; preds = %sw.bb27
  call void @__sanitizer_cov_trace_pc() #25
  %sin6_port = getelementptr inbounds %struct.sockaddr_in6, ptr %address, i32 0, i32 1
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, ptr %address, i32 0, i32 3
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end31, %if.end24
  %addrp.0 = phi ptr [ %sin6_addr, %if.end31 ], [ %sin_addr25, %if.end24 ]
  %addr4.0 = phi ptr [ null, %if.end31 ], [ %address, %if.end24 ]
  %addr6.0 = phi ptr [ %address, %if.end31 ], [ null, %if.end24 ]
  %family_sa.1 = phi i16 [ 10, %if.end31 ], [ %family_sa.0, %if.end24 ]
  %snum.0.in = phi ptr [ %sin6_port, %if.end31 ], [ %sin_port, %if.end24 ]
  %35 = ptrtoint ptr %snum.0.in to i32
  call void @__asan_load2_noabort(i32 %35)
  %snum.0 = load i16, ptr %snum.0.in, align 2
  %36 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %37 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %net, ptr %u, align 4
  %sport = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 4
  %38 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %snum.0, ptr %sport, align 4
  %family34 = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 2
  %39 = ptrtoint ptr %family34 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %family_sa.1, ptr %family34, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %snum.0)
  %tobool35.not = icmp eq i16 %snum.0, 0
  br i1 %tobool35.not, label %sw.epilog.if.end62_crit_edge, label %if.then36

sw.epilog.if.end62_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end62

if.then36:                                        ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %low) #23
  %40 = ptrtoint ptr %low to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 -1, ptr %low, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %high) #23
  %41 = ptrtoint ptr %high to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 -1, ptr %high, align 4, !annotation !376
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 9
  %42 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %skc_net.i, align 4
  call void @inet_get_local_port_range(ptr noundef %43, ptr noundef nonnull %low, ptr noundef nonnull %high) #23
  %44 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %skc_net.i, align 4
  %conv.i = zext i16 %snum.0 to i32
  %sysctl_ip_prot_sock.i = getelementptr inbounds %struct.net, ptr %45, i32 0, i32 35, i32 126
  %46 = ptrtoint ptr %sysctl_ip_prot_sock.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sysctl_ip_prot_sock.i, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %conv.i)
  %cmp.i152 = icmp sgt i32 %47, %conv.i
  br i1 %cmp.i152, label %if.then36.if.then49_crit_edge, label %lor.lhs.false41

if.then36.if.then49_crit_edge:                    ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

lor.lhs.false41:                                  ; preds = %if.then36
  %48 = ptrtoint ptr %low to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %low, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %conv.i)
  %cmp43 = icmp sgt i32 %49, %conv.i
  br i1 %cmp43, label %lor.lhs.false41.if.then49_crit_edge, label %lor.lhs.false45

lor.lhs.false41.if.then49_crit_edge:              ; preds = %lor.lhs.false41
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %50 = ptrtoint ptr %high to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %high, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %conv.i)
  %cmp47 = icmp slt i32 %51, %conv.i
  br i1 %cmp47, label %lor.lhs.false45.if.then49_crit_edge, label %lor.lhs.false45.cleanup_crit_edge

lor.lhs.false45.cleanup_crit_edge:                ; preds = %lor.lhs.false45
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

lor.lhs.false45.if.then49_crit_edge:              ; preds = %lor.lhs.false45
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.then49:                                        ; preds = %lor.lhs.false45.if.then49_crit_edge, %lor.lhs.false41.if.then49_crit_edge, %if.then36.if.then49_crit_edge
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 46
  %52 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %sk_protocol, align 4
  %conv50 = trunc i16 %53 to i8
  %call51 = call i32 @sel_netport_sid(i8 noundef zeroext %conv50, i16 noundef zeroext %snum.0, ptr noundef nonnull %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %if.end54, label %if.then49.cleanup.thread_crit_edge

if.then49.cleanup.thread_crit_edge:               ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

if.end54:                                         ; preds = %if.then49
  %54 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %sid.i, align 4
  %56 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %sid, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %58 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %sclass, align 4
  %call56 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %55, i32 noundef %57, i16 noundef zeroext %59, i32 noundef 1048576, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.end54.cleanup_crit_edge, label %if.end54.cleanup.thread_crit_edge

if.end54.cleanup.thread_crit_edge:                ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

if.end54.cleanup_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup.thread:                                   ; preds = %if.end54.cleanup.thread_crit_edge, %if.then49.cleanup.thread_crit_edge
  %err.1.ph = phi i32 [ %call56, %if.end54.cleanup.thread_crit_edge ], [ %call51, %if.then49.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %high) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %low) #23
  br label %cleanup93.thread

cleanup:                                          ; preds = %if.end54.cleanup_crit_edge, %lor.lhs.false45.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %high) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %low) #23
  br label %if.end62

if.end62:                                         ; preds = %cleanup, %sw.epilog.if.end62_crit_edge
  %sclass63 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %call71 = call i32 @sel_netnode_sid(ptr noundef %addrp.0, i16 noundef zeroext %family_sa.1, ptr noundef nonnull %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.end74, label %if.end62.cleanup93.thread_crit_edge

if.end62.cleanup93.thread_crit_edge:              ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup93.thread

if.end74:                                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %family_sa.1)
  %cmp76 = icmp eq i16 %family_sa.1, 2
  br i1 %cmp76, label %if.then78, label %if.else

if.then78:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #25
  %sin_addr79 = getelementptr inbounds %struct.sockaddr_in, ptr %addr4.0, i32 0, i32 2
  %60 = ptrtoint ptr %sin_addr79 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %sin_addr79, align 4
  %62 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %u, align 4
  %saddr = getelementptr inbounds %struct.lsm_network_audit, ptr %63, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %61, ptr %saddr, align 4
  br label %if.end86

if.else:                                          ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #25
  %65 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %u, align 4
  %saddr84 = getelementptr inbounds %struct.lsm_network_audit, ptr %66, i32 0, i32 5, i32 0, i32 1
  %sin6_addr85 = getelementptr inbounds %struct.sockaddr_in6, ptr %addr6.0, i32 0, i32 3
  %67 = call ptr @memcpy(ptr %saddr84, ptr %sin6_addr85, i32 16)
  br label %if.end86

if.end86:                                         ; preds = %if.else, %if.then78
  %68 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %sid.i, align 4
  %70 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %sid, align 4
  %72 = ptrtoint ptr %sclass63 to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %sclass63, align 4
  %call89 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %69, i32 noundef %71, i16 noundef zeroext %73, i32 noundef 2097152, ptr noundef nonnull %ad) #23
  br label %cleanup93.thread

cleanup93.thread:                                 ; preds = %if.end86, %if.end62.cleanup93.thread_crit_edge, %cleanup.thread
  %err.2.ph = phi i32 [ %err.1.ph, %cleanup.thread ], [ %call71, %if.end62.cleanup93.thread_crit_edge ], [ %call89, %if.end86 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  br label %cleanup111

cleanup93.thread161:                              ; preds = %sw.bb27.cleanup93.thread161_crit_edge, %sw.bb.cleanup93.thread161_crit_edge, %if.then6.cleanup93.thread161_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  br label %cleanup111

err_af:                                           ; preds = %if.then19.err_af_crit_edge, %if.end10.err_af_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  %sclass105 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %74 = ptrtoint ptr %sclass105 to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %sclass105, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 60, i16 %75)
  %cmp107 = icmp eq i16 %75, 60
  %.150 = select i1 %cmp107, i32 -22, i32 -97
  br label %cleanup111

cleanup111:                                       ; preds = %err_af, %cleanup93.thread161, %cleanup93.thread, %if.end.cleanup111_crit_edge, %sock_has_perm.exit.cleanup111_crit_edge
  %retval.1 = phi i32 [ %.150, %err_af ], [ -22, %cleanup93.thread161 ], [ %call4.i, %sock_has_perm.exit.cleanup111_crit_edge ], [ 0, %if.end.cleanup111_crit_edge ], [ %err.2.ph, %cleanup93.thread ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_connect(ptr nocapture noundef readonly %sock, ptr noundef %address, i32 noundef %addrlen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %call = tail call fastcc i32 @selinux_socket_connect_helper(ptr noundef %sock, ptr noundef %address, i32 noundef %addrlen)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call2 = tail call i32 @selinux_netlbl_socket_connect(ptr noundef %1, ptr noundef %address) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_listen(ptr nocapture noundef readonly %sock, i32 noundef %backlog) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 8192, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_accept(ptr nocapture noundef readonly %sock, ptr nocapture noundef readonly %newsock) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %sock_has_perm.exit.thread, label %sock_has_perm.exit

sock_has_perm.exit.thread:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %if.end

sock_has_perm.exit:                               ; preds = %entry
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 16384, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %sock_has_perm.exit.if.end_crit_edge, label %sock_has_perm.exit.cleanup_crit_edge

sock_has_perm.exit.cleanup_crit_edge:             ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sock_has_perm.exit.if.end_crit_edge:              ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %sock_has_perm.exit.if.end_crit_edge, %sock_has_perm.exit.thread
  %i_security.i.i = getelementptr inbounds %struct.socket_alloc, ptr %sock, i32 0, i32 1, i32 10
  %24 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %25, null
  br i1 %tobool.not.i.i, label %if.end.inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

if.end.inode_security_novalidate.exit_crit_edge:  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %26 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %25, i32 %26
  br label %inode_security_novalidate.exit

inode_security_novalidate.exit:                   ; preds = %if.end.i.i, %if.end.inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %if.end.inode_security_novalidate.exit_crit_edge ]
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lock) #23
  %sclass3 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 4
  %27 = ptrtoint ptr %sclass3 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %sclass3, align 4
  %sid4 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %29 = ptrtoint ptr %sid4 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sid4, align 4
  call void @_raw_spin_unlock(ptr noundef %lock) #23
  %i_security.i.i22 = getelementptr inbounds %struct.socket_alloc, ptr %newsock, i32 0, i32 1, i32 10
  %31 = ptrtoint ptr %i_security.i.i22 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %i_security.i.i22, align 4
  %tobool.not.i.i23 = icmp eq ptr %32, null
  br i1 %tobool.not.i.i23, label %inode_security_novalidate.exit.inode_security_novalidate.exit27_crit_edge, label %if.end.i.i25, !prof !380

inode_security_novalidate.exit.inode_security_novalidate.exit27_crit_edge: ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit27

if.end.i.i25:                                     ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  %33 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i24 = getelementptr i8, ptr %32, i32 %33
  br label %inode_security_novalidate.exit27

inode_security_novalidate.exit27:                 ; preds = %if.end.i.i25, %inode_security_novalidate.exit.inode_security_novalidate.exit27_crit_edge
  %retval.0.i.i26 = phi ptr [ %add.ptr.i.i24, %if.end.i.i25 ], [ null, %inode_security_novalidate.exit.inode_security_novalidate.exit27_crit_edge ]
  %sclass8 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i26, i32 0, i32 4
  %34 = ptrtoint ptr %sclass8 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %28, ptr %sclass8, align 4
  %sid9 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i26, i32 0, i32 3
  %35 = ptrtoint ptr %sid9 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %30, ptr %sid9, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i26, i32 0, i32 5
  %36 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 1, ptr %initialized, align 2
  br label %cleanup

cleanup:                                          ; preds = %inode_security_novalidate.exit27, %sock_has_perm.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %inode_security_novalidate.exit27 ], [ %call4.i, %sock_has_perm.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_sendmsg(ptr nocapture noundef readonly %sock, ptr nocapture noundef readnone %msg, i32 noundef %size) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 4, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_recvmsg(ptr nocapture noundef readonly %sock, ptr nocapture noundef readnone %msg, i32 noundef %size, i32 noundef %flags) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 2, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_getsockname(ptr nocapture noundef readonly %sock) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 16, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_getpeername(ptr nocapture noundef readonly %sock) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 16, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_getsockopt(ptr nocapture noundef readonly %sock, i32 noundef %level, i32 noundef %optname) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 32768, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_setsockopt(ptr noundef %sock, i32 noundef %level, i32 noundef %optname) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %sock_has_perm.exit.thread, label %sock_has_perm.exit

sock_has_perm.exit.thread:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %if.end

sock_has_perm.exit:                               ; preds = %entry
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 65536, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %sock_has_perm.exit.if.end_crit_edge, label %sock_has_perm.exit.cleanup_crit_edge

sock_has_perm.exit.cleanup_crit_edge:             ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sock_has_perm.exit.if.end_crit_edge:              ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %sock_has_perm.exit.if.end_crit_edge, %sock_has_perm.exit.thread
  %call1 = call i32 @selinux_netlbl_socket_setsockopt(ptr noundef %sock, i32 noundef %level, i32 noundef %optname) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %sock_has_perm.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call4.i, %sock_has_perm.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_shutdown(ptr nocapture noundef readonly %sock, i32 noundef %how) #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %entry.sock_has_perm.exit_crit_edge, label %if.end.i

entry.sock_has_perm.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sock_has_perm.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 131072, ptr noundef nonnull %ad.i) #23
  br label %sock_has_perm.exit

sock_has_perm.exit:                               ; preds = %if.end.i, %entry.sock_has_perm.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.end.i ], [ 0, %entry.sock_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_sock_rcv_skb(ptr nocapture noundef readonly %sk, ptr noundef %skb) #1 align 64 {
entry:
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  %addrp.i = alloca ptr, align 4
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  %addrp = alloca ptr, align 4
  %peer_sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %2 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %skc_family, align 8
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sid, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %6 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %7 = getelementptr inbounds i8, ptr %net, i32 4
  %8 = call ptr @memset(ptr %7, i32 0, i32 44)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addrp) #23
  %9 = ptrtoint ptr %addrp to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 -1 to ptr), ptr %addrp, align 4, !annotation !376
  %10 = zext i16 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.142)
  switch i16 %3, label %entry.cleanup56_crit_edge [
    i16 10, label %land.lhs.true8
    i16 2, label %entry.if.end13_crit_edge
  ]

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

entry.cleanup56_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

land.lhs.true8:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %11 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %protocol, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %12)
  %cmp10 = icmp eq i16 %12, 2048
  %spec.select = select i1 %cmp10, i16 2, i16 10
  br label %if.end13

if.end13:                                         ; preds = %land.lhs.true8, %entry.if.end13_crit_edge
  %family.0 = phi i16 [ %3, %entry.if.end13_crit_edge ], [ %spec.select, %land.lhs.true8 ]
  %13 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4), align 4, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.i.not = icmp eq i8 %13, 0
  br i1 %tobool.i.not, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end13
  %14 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sid, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %16 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %17 = getelementptr inbounds i8, ptr %net.i, i32 4
  %18 = call ptr @memset(ptr %17, i32 0, i32 44)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addrp.i) #23
  %19 = ptrtoint ptr %addrp.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 -1 to ptr), ptr %addrp.i, align 4, !annotation !376
  %20 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %21 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %net.i, ptr %u.i, align 4
  %skb_iif.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 7
  %22 = ptrtoint ptr %skb_iif.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %skb_iif.i, align 8
  %24 = ptrtoint ptr %net.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %net.i, align 4
  %family3.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 2
  %25 = ptrtoint ptr %family3.i to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %family.0, ptr %family3.i, align 4
  %call.i = call fastcc i32 @selinux_parse_skb(ptr noundef %skb, ptr noundef nonnull %ad.i, ptr noundef nonnull %addrp.i, i32 noundef 1, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then14.selinux_sock_rcv_skb_compat.exit_crit_edge

if.then14.selinux_sock_rcv_skb_compat.exit_crit_edge: ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_sock_rcv_skb_compat.exit

if.end.i:                                         ; preds = %if.then14
  %26 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.i.not.i.i = icmp eq i8 %26, 0
  br i1 %tobool.i.not.i.i, label %selinux_secmark_enabled.exit.i, label %if.end.i.if.then6.i_crit_edge

if.end.i.if.then6.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then6.i

selinux_secmark_enabled.exit.i:                   ; preds = %if.end.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  %27 = load volatile i32, ptr @selinux_secmark_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i.not.i = icmp eq i32 %27, 0
  br i1 %tobool.i.not.i, label %selinux_secmark_enabled.exit.i.if.end11.i_crit_edge, label %selinux_secmark_enabled.exit.i.if.then6.i_crit_edge

selinux_secmark_enabled.exit.i.if.then6.i_crit_edge: ; preds = %selinux_secmark_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then6.i

selinux_secmark_enabled.exit.i.if.end11.i_crit_edge: ; preds = %selinux_secmark_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11.i

if.then6.i:                                       ; preds = %selinux_secmark_enabled.exit.i.if.then6.i_crit_edge, %if.end.i.if.then6.i_crit_edge
  %secmark.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 12
  %28 = ptrtoint ptr %secmark.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %secmark.i, align 8
  %call7.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %15, i32 noundef %29, i16 noundef zeroext 49, i32 noundef 2, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.then6.i.if.end11.i_crit_edge, label %if.then6.i.selinux_sock_rcv_skb_compat.exit_crit_edge

if.then6.i.selinux_sock_rcv_skb_compat.exit_crit_edge: ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_sock_rcv_skb_compat.exit

if.then6.i.if.end11.i_crit_edge:                  ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then6.i.if.end11.i_crit_edge, %selinux_secmark_enabled.exit.i.if.end11.i_crit_edge
  %call12.i = call i32 @selinux_netlbl_sock_rcv_skb(ptr noundef %1, ptr noundef %skb, i16 noundef zeroext %family.0, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.end15.i, label %if.end11.i.selinux_sock_rcv_skb_compat.exit_crit_edge

if.end11.i.selinux_sock_rcv_skb_compat.exit_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_sock_rcv_skb_compat.exit

if.end15.i:                                       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #25
  %30 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sid, align 4
  %call17.i = call i32 @selinux_xfrm_sock_rcv_skb(i32 noundef %31, ptr noundef %skb, ptr noundef nonnull %ad.i) #23
  br label %selinux_sock_rcv_skb_compat.exit

selinux_sock_rcv_skb_compat.exit:                 ; preds = %if.end15.i, %if.end11.i.selinux_sock_rcv_skb_compat.exit_crit_edge, %if.then6.i.selinux_sock_rcv_skb_compat.exit_crit_edge, %if.then14.selinux_sock_rcv_skb_compat.exit_crit_edge
  %retval.0.i = phi i32 [ %call17.i, %if.end15.i ], [ %call.i, %if.then14.selinux_sock_rcv_skb_compat.exit_crit_edge ], [ %call7.i, %if.then6.i.selinux_sock_rcv_skb_compat.exit_crit_edge ], [ %call12.i, %if.end11.i.selinux_sock_rcv_skb_compat.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addrp.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %cleanup56

if.end16:                                         ; preds = %if.end13
  %32 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.i.not.i99 = icmp eq i8 %32, 0
  br i1 %tobool.i.not.i99, label %lor.rhs.i, label %if.end16.selinux_secmark_enabled.exit_crit_edge

if.end16.selinux_secmark_enabled.exit_crit_edge:  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_secmark_enabled.exit

lor.rhs.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  %33 = load volatile i32, ptr @selinux_secmark_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.i100 = icmp ne i32 %33, 0
  %phi.cast = zext i1 %tobool.i100 to i8
  br label %selinux_secmark_enabled.exit

selinux_secmark_enabled.exit:                     ; preds = %lor.rhs.i, %if.end16.selinux_secmark_enabled.exit_crit_edge
  %34 = phi i8 [ 1, %if.end16.selinux_secmark_enabled.exit_crit_edge ], [ %phi.cast, %lor.rhs.i ]
  %35 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool.i.not.i101 = icmp eq i8 %35, 0
  br i1 %tobool.i.not.i101, label %lor.lhs.false.i, label %selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge

selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge: ; preds = %selinux_secmark_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_peerlbl_enabled.exit.thread

lor.lhs.false.i:                                  ; preds = %selinux_secmark_enabled.exit
  %call1.i = tail call i32 @netlbl_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i102 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i102, label %selinux_peerlbl_enabled.exit, label %lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge

lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_peerlbl_enabled.exit.thread

selinux_peerlbl_enabled.exit.thread:              ; preds = %lor.lhs.false.i.selinux_peerlbl_enabled.exit.thread_crit_edge, %selinux_secmark_enabled.exit.selinux_peerlbl_enabled.exit.thread_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not110 = icmp eq i8 %34, 0
  br label %if.end24

selinux_peerlbl_enabled.exit:                     ; preds = %lor.lhs.false.i
  %call.i.i.i.i103 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_xfrm_refcount, i32 noundef 4) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @selinux_xfrm_refcount to i32))
  %36 = load volatile i32, ptr @selinux_xfrm_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp.i.i = icmp slt i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not = icmp eq i8 %34, 0
  %or.cond = select i1 %tobool.not, i1 %cmp.i.i, i1 false
  br i1 %or.cond, label %selinux_peerlbl_enabled.exit.cleanup56_crit_edge, label %selinux_peerlbl_enabled.exit.if.end24_crit_edge

selinux_peerlbl_enabled.exit.if.end24_crit_edge:  ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end24

selinux_peerlbl_enabled.exit.cleanup56_crit_edge: ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.end24:                                         ; preds = %selinux_peerlbl_enabled.exit.if.end24_crit_edge, %selinux_peerlbl_enabled.exit.thread
  %tobool22.not114 = phi i1 [ false, %selinux_peerlbl_enabled.exit.thread ], [ %cmp.i.i, %selinux_peerlbl_enabled.exit.if.end24_crit_edge ]
  %tobool.not113 = phi i1 [ %tobool.not110, %selinux_peerlbl_enabled.exit.thread ], [ %tobool.not, %selinux_peerlbl_enabled.exit.if.end24_crit_edge ]
  %37 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %38 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %net, ptr %u, align 4
  %skb_iif = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 7
  %39 = ptrtoint ptr %skb_iif to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %skb_iif, align 8
  %41 = ptrtoint ptr %net to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %net, align 4
  %family27 = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 2
  %42 = ptrtoint ptr %family27 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %family.0, ptr %family27, align 4
  %call28 = call fastcc i32 @selinux_parse_skb(ptr noundef %skb, ptr noundef nonnull %ad, ptr noundef nonnull %addrp, i32 noundef 1, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end31, label %if.end24.cleanup56_crit_edge

if.end24.cleanup56_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.end31:                                         ; preds = %if.end24
  br i1 %tobool22.not114, label %if.end31.if.end48_crit_edge, label %if.then33

if.end31.if.end48_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48

if.then33:                                        ; preds = %if.end31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %peer_sid) #23
  %43 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %peer_sid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %44 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %45 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %46 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i105 = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i105)
  %tobool.not.i106 = icmp eq i32 %call.i105, 0
  br i1 %tobool.not.i106, label %if.end.i107, label %if.then33.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.then33.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end.i107:                                      ; preds = %if.then33
  %call3.i = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %family.0, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i107.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.end.i107.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.end.i107
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end12.i:                                       ; preds = %if.end.i107
  %47 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %nlbl_sid.i, align 4
  %49 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %nlbl_type.i, align 4
  %51 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %48, i32 noundef %50, i32 noundef %52, ptr noundef nonnull %peer_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end37, label %do.end.i, !prof !381

do.end.i:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit.thread

selinux_skb_peerlbl_sid.exit.thread:              ; preds = %do.end.i, %if.end.i107.selinux_skb_peerlbl_sid.exit.thread_crit_edge, %if.then33.selinux_skb_peerlbl_sid.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %cleanup.thread

if.end37:                                         ; preds = %if.end12.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %53 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %skc_net.i, align 4
  %55 = ptrtoint ptr %skb_iif to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %skb_iif, align 8
  %57 = ptrtoint ptr %addrp to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %addrp, align 4
  %59 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %peer_sid, align 4
  %call40 = call fastcc i32 @selinux_inet_sys_rcv_skb(ptr noundef %54, i32 noundef %56, ptr noundef %58, i16 noundef zeroext %family.0, i32 noundef %60, ptr noundef nonnull %ad)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end43, label %if.then42

if.then42:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  call void @selinux_netlbl_err(ptr noundef %skb, i16 noundef zeroext %family.0, i32 noundef %call40, i32 noundef 0) #23
  br label %cleanup.thread

if.end43:                                         ; preds = %if.end37
  %61 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %peer_sid, align 4
  %call44 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %5, i32 noundef %62, i16 noundef zeroext 53, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %cleanup, label %if.then46

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #25
  call void @selinux_netlbl_err(ptr noundef %skb, i16 noundef zeroext %family.0, i32 noundef %call44, i32 noundef 0) #23
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then46, %if.then42, %selinux_skb_peerlbl_sid.exit.thread
  %retval.0.ph = phi i32 [ -13, %selinux_skb_peerlbl_sid.exit.thread ], [ %call44, %if.then46 ], [ %call40, %if.then42 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peer_sid) #23
  br label %cleanup56

cleanup:                                          ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peer_sid) #23
  br label %if.end48

if.end48:                                         ; preds = %cleanup, %if.end31.if.end48_crit_edge
  br i1 %tobool.not113, label %if.end48.if.end55_crit_edge, label %if.then50

if.end48.if.end55_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end55

if.then50:                                        ; preds = %if.end48
  %secmark = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 12
  %63 = ptrtoint ptr %secmark to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %secmark, align 8
  %call51 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %5, i32 noundef %64, i16 noundef zeroext 49, i32 noundef 2, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %if.then50.if.end55_crit_edge, label %if.then50.cleanup56_crit_edge

if.then50.cleanup56_crit_edge:                    ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.then50.if.end55_crit_edge:                     ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end55

if.end55:                                         ; preds = %if.then50.if.end55_crit_edge, %if.end48.if.end55_crit_edge
  br label %cleanup56

cleanup56:                                        ; preds = %if.end55, %if.then50.cleanup56_crit_edge, %cleanup.thread, %if.end24.cleanup56_crit_edge, %selinux_peerlbl_enabled.exit.cleanup56_crit_edge, %selinux_sock_rcv_skb_compat.exit, %entry.cleanup56_crit_edge
  %retval.1 = phi i32 [ 0, %if.end55 ], [ %retval.0.i, %selinux_sock_rcv_skb_compat.exit ], [ 0, %entry.cleanup56_crit_edge ], [ 0, %selinux_peerlbl_enabled.exit.cleanup56_crit_edge ], [ %call28, %if.end24.cleanup56_crit_edge ], [ %call51, %if.then50.cleanup56_crit_edge ], [ %retval.0.ph, %cleanup.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addrp) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_getpeersec_stream(ptr nocapture noundef readonly %sock, ptr noundef %optval, ptr noundef %optlen, i32 noundef %len) #1 align 64 {
entry:
  %scontext = alloca ptr, align 4
  %scontext_len = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %scontext) #23
  %0 = ptrtoint ptr %scontext to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %scontext, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %scontext_len) #23
  %1 = ptrtoint ptr %scontext_len to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %scontext_len, align 4, !annotation !376
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %2 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk, align 16
  %sk_security = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 73
  %4 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk_security, align 8
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %sclass, align 4
  %8 = zext i16 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.143)
  switch i16 %7, label %entry.cleanup_crit_edge [
    i16 24, label %entry.if.end_crit_edge
    i16 16, label %entry.if.end_crit_edge46
    i16 60, label %entry.if.end_crit_edge47
  ]

entry.if.end_crit_edge47:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

entry.if.end_crit_edge46:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry.if.end_crit_edge, %entry.if.end_crit_edge46, %entry.if.end_crit_edge47
  %peer_sid11 = getelementptr inbounds %struct.sk_security_struct, ptr %5, i32 0, i32 3
  %9 = ptrtoint ptr %peer_sid11 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %peer_sid11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp12 = icmp eq i32 %10, 0
  br i1 %cmp12, label %if.end.cleanup_crit_edge, label %if.end15

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end15:                                         ; preds = %if.end
  %call = call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %10, ptr noundef nonnull %scontext, ptr noundef nonnull %scontext_len) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end17, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end17:                                         ; preds = %if.end15
  %11 = ptrtoint ptr %scontext_len to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %scontext_len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %len)
  %cmp18 = icmp ugt i32 %12, %len
  br i1 %cmp18, label %if.end17.out_len_crit_edge, label %if.end21

if.end17.out_len_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_len

if.end21:                                         ; preds = %if.end17
  %13 = ptrtoint ptr %scontext to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %scontext, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp9.i.i = icmp slt i32 %12, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end21
  %.b1.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs16.i.i.out_len_crit_edge, label %if.then27.i.i, !prof !381

land.rhs16.i.i.out_len_crit_edge:                 ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_len

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.110, i32 noundef 230, i32 noundef 9, ptr noundef null) #23
  br label %out_len

if.then.i.i.i:                                    ; preds = %if.end21
  call void @__check_object_size(ptr noundef %14, i32 noundef %12, i1 noundef zeroext true) #23
  call void @__might_fault(ptr noundef nonnull @.str.112, i32 noundef 174) #23
  %call.i.i = call zeroext i1 @should_fail_usercopy() #23
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %15 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %optval, i32 %12, i32 -1226833920) #33, !srcloc !389
  %asmresult.i.i = extractvalue { i32, i32 } %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %14, i32 noundef %12) #23
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %optval, ptr noundef %14, i32 noundef %12) #23
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %12, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %12, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool23.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool23.not, i32 0, i32 -14
  br label %out_len

out_len:                                          ; preds = %copy_to_user.exit, %if.then27.i.i, %land.rhs16.i.i.out_len_crit_edge, %if.end17.out_len_crit_edge
  %err.0 = phi i32 [ -34, %if.end17.out_len_crit_edge ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.out_len_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  %16 = ptrtoint ptr %scontext_len to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %scontext_len, align 4
  call void @__might_fault(ptr noundef nonnull @.str.2, i32 noundef 5207) #23
  %18 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 4
  %20 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #6, !srcloc !390
  %and.i = and i32 %20, -13
  %or.i = or i32 %and.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #23, !srcloc !391
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #23, !srcloc !392
  %21 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %optlen, i32 %17, i32 -1226833921) #23, !srcloc !393
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %20) #23, !srcloc !391
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #23, !srcloc !392
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool28.not = icmp eq i32 %21, 0
  %spec.select41 = select i1 %tobool28.not, i32 %err.0, i32 -14
  %22 = ptrtoint ptr %scontext to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %scontext, align 4
  call void @kfree(ptr noundef %23) #23
  br label %cleanup

cleanup:                                          ; preds = %out_len, %if.end15.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.select41, %out_len ], [ -92, %if.end.cleanup_crit_edge ], [ %call, %if.end15.cleanup_crit_edge ], [ -92, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %scontext_len) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %scontext) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_socket_getpeersec_dgram(ptr noundef readonly %sock, ptr noundef %skb, ptr nocapture noundef writeonly %secid) #1 align 64 {
entry:
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  %peer_secid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %peer_secid) #23
  %0 = ptrtoint ptr %peer_secid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %peer_secid, align 4
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %entry.if.else9_crit_edge, label %land.lhs.true

entry.if.else9_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else9

land.lhs.true:                                    ; preds = %entry
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %1 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %protocol, align 8
  %3 = zext i16 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.144)
  switch i16 %2, label %land.lhs.true.if.else9_crit_edge [
    i16 2048, label %land.lhs.true.if.then24_crit_edge
    i16 -31011, label %if.then24.fold.split
  ]

land.lhs.true.if.then24_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

land.lhs.true.if.else9_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else9

if.else9:                                         ; preds = %land.lhs.true.if.else9_crit_edge, %entry.if.else9_crit_edge
  %tobool10.not = icmp eq ptr %sock, null
  br i1 %tobool10.not, label %if.else9.out_crit_edge, label %if.end14

if.else9.out_crit_edge:                           ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end14:                                         ; preds = %if.else9
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %4 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk, align 16
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %7)
  %cmp18 = icmp eq i16 %7, 1
  br i1 %cmp18, label %if.then20, label %if.else22

if.then20:                                        ; preds = %if.end14
  %i_security.i.i = getelementptr inbounds %struct.socket_alloc, ptr %sock, i32 0, i32 1, i32 10
  %8 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.then20.inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

if.then20.inode_security_novalidate.exit_crit_edge: ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #25
  %10 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 %10
  br label %inode_security_novalidate.exit

inode_security_novalidate.exit:                   ; preds = %if.end.i.i, %if.then20.inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %if.then20.inode_security_novalidate.exit_crit_edge ]
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %11 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid, align 4
  %13 = ptrtoint ptr %peer_secid to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %peer_secid, align 4
  br label %out

if.else22:                                        ; preds = %if.end14
  br i1 %tobool.not, label %if.else22.out_crit_edge, label %if.else22.if.then24_crit_edge

if.else22.if.then24_crit_edge:                    ; preds = %if.else22
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

if.else22.out_crit_edge:                          ; preds = %if.else22
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then24.fold.split:                             ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

if.then24:                                        ; preds = %if.then24.fold.split, %if.else22.if.then24_crit_edge, %land.lhs.true.if.then24_crit_edge
  %family.04749 = phi i16 [ %7, %if.else22.if.then24_crit_edge ], [ 2, %land.lhs.true.if.then24_crit_edge ], [ 10, %if.then24.fold.split ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %14 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %15 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %16 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i = call i32 @selinux_xfrm_skb_sid(ptr noundef nonnull %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then24.selinux_skb_peerlbl_sid.exit_crit_edge, !prof !381

if.then24.selinux_skb_peerlbl_sid.exit_crit_edge: ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit

if.end.i:                                         ; preds = %if.then24
  %call3.i = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef nonnull %skb, i16 noundef zeroext %family.04749, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i.selinux_skb_peerlbl_sid.exit_crit_edge, !prof !381

if.end.i.selinux_skb_peerlbl_sid.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit

if.end12.i:                                       ; preds = %if.end.i
  %17 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nlbl_sid.i, align 4
  %19 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nlbl_type.i, align 4
  %21 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %18, i32 noundef %20, i32 noundef %22, ptr noundef nonnull %peer_secid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end12.i.selinux_skb_peerlbl_sid.exit_crit_edge, label %do.end.i, !prof !381

if.end12.i.selinux_skb_peerlbl_sid.exit_crit_edge: ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit

do.end.i:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit

selinux_skb_peerlbl_sid.exit:                     ; preds = %do.end.i, %if.end12.i.selinux_skb_peerlbl_sid.exit_crit_edge, %if.end.i.selinux_skb_peerlbl_sid.exit_crit_edge, %if.then24.selinux_skb_peerlbl_sid.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %out

out:                                              ; preds = %selinux_skb_peerlbl_sid.exit, %if.else22.out_crit_edge, %inode_security_novalidate.exit, %if.else9.out_crit_edge
  %23 = ptrtoint ptr %peer_secid to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %peer_secid, align 4
  %25 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %secid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp28 = icmp eq i32 %24, 0
  %. = select i1 %cmp28, i32 -22, i32 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peer_secid) #23
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_sk_free_security(ptr nocapture noundef %sk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  store ptr null, ptr %sk_security, align 8
  tail call void @selinux_netlbl_sk_security_free(ptr noundef %1) #23
  tail call void @kfree(ptr noundef %1) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_sk_clone_security(ptr nocapture noundef readonly %sk, ptr nocapture noundef readonly %newsk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %sk_security1 = getelementptr inbounds %struct.sock, ptr %newsk, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security1, align 8
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sid, align 4
  %sid2 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %sid2, align 4
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %peer_sid, align 4
  %peer_sid3 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  %9 = ptrtoint ptr %peer_sid3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %peer_sid3, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %sclass, align 4
  %sclass4 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %12 = ptrtoint ptr %sclass4 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %sclass4, align 4
  tail call void @selinux_netlbl_sk_security_reset(ptr noundef %3) #23
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_sk_getsecid(ptr noundef readonly %sk, ptr nocapture noundef writeonly %secid) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %sk, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sid, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %storemerge = phi i32 [ %3, %if.else ], [ 8, %entry.if.end_crit_edge ]
  %4 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %storemerge, ptr %secid, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_sock_graft(ptr nocapture noundef readonly %sk, ptr nocapture noundef readonly %parent) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i.i = getelementptr inbounds %struct.socket_alloc, ptr %parent, i32 0, i32 1, i32 10
  %0 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %entry.inode_security_novalidate.exit_crit_edge, label %if.end.i.i, !prof !380

entry.inode_security_novalidate.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security_novalidate.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %2
  br label %inode_security_novalidate.exit

inode_security_novalidate.exit:                   ; preds = %if.end.i.i, %entry.inode_security_novalidate.exit_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %entry.inode_security_novalidate.exit_crit_edge ]
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %3 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sk_security, align 8
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %5 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %skc_family, align 8
  %7 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.145)
  switch i16 %6, label %inode_security_novalidate.exit.if.end_crit_edge [
    i16 2, label %inode_security_novalidate.exit.if.then_crit_edge
    i16 10, label %inode_security_novalidate.exit.if.then_crit_edge21
    i16 1, label %inode_security_novalidate.exit.if.then_crit_edge22
  ]

inode_security_novalidate.exit.if.then_crit_edge22: ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

inode_security_novalidate.exit.if.then_crit_edge21: ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

inode_security_novalidate.exit.if.then_crit_edge: ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

inode_security_novalidate.exit.if.end_crit_edge:  ; preds = %inode_security_novalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %inode_security_novalidate.exit.if.then_crit_edge, %inode_security_novalidate.exit.if.then_crit_edge21, %inode_security_novalidate.exit.if.then_crit_edge22
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %4, i32 0, i32 2
  %8 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sid, align 4
  %sid14 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %10 = ptrtoint ptr %sid14 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %sid14, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %inode_security_novalidate.exit.if.end_crit_edge
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 4
  %11 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %sclass, align 4
  %sclass15 = getelementptr inbounds %struct.sk_security_struct, ptr %4, i32 0, i32 4
  %13 = ptrtoint ptr %sclass15 to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %sclass15, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sctp_assoc_request(ptr noundef %asoc, ptr noundef %skb) #1 align 64 {
entry:
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  %peer_sid = alloca i32, align 4
  %conn_sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.sctp_ep_common, ptr %asoc, i32 0, i32 3
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 4
  %sk_security = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %4 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %5 = call ptr @memset(ptr %net, i32 0, i32 48)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %peer_sid) #23
  %6 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 3, ptr %peer_sid, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %conn_sid) #23
  %7 = ptrtoint ptr %conn_sid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %conn_sid, align 4, !annotation !376
  %8 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 2), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.i.not = icmp eq i8 %8, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.i.not.i = icmp eq i8 %9, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false.i, label %if.end.if.then2_crit_edge

if.end.if.then2_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then2

lor.lhs.false.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @netlbl_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %selinux_peerlbl_enabled.exit, label %lor.lhs.false.i.if.then2_crit_edge

lor.lhs.false.i.if.then2_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then2

selinux_peerlbl_enabled.exit:                     ; preds = %lor.lhs.false.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @selinux_xfrm_refcount, i32 noundef 4) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @selinux_xfrm_refcount to i32))
  %10 = load volatile i32, ptr @selinux_xfrm_refcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.i.i = icmp slt i32 %10, 1
  br i1 %cmp.i.i, label %selinux_peerlbl_enabled.exit.if.end12_crit_edge, label %selinux_peerlbl_enabled.exit.if.then2_crit_edge

selinux_peerlbl_enabled.exit.if.then2_crit_edge:  ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then2

selinux_peerlbl_enabled.exit.if.end12_crit_edge:  ; preds = %selinux_peerlbl_enabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.then2:                                         ; preds = %selinux_peerlbl_enabled.exit.if.then2_crit_edge, %lor.lhs.false.i.if.then2_crit_edge, %if.end.if.then2_crit_edge
  %11 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sk, align 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %skc_family, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %15 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %16 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %17 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i61 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i61, label %if.end.i, label %if.then2.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.then2.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end.i:                                         ; preds = %if.then2
  %call3.i = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %14, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end12.i:                                       ; preds = %if.end.i
  %18 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %nlbl_sid.i, align 4
  %20 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %nlbl_type.i, align 4
  %22 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %19, i32 noundef %21, i32 noundef %23, ptr noundef nonnull %peer_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end8, label %do.end.i, !prof !381

do.end.i:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit.thread

selinux_skb_peerlbl_sid.exit.thread:              ; preds = %do.end.i, %if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge, %if.then2.selinux_skb_peerlbl_sid.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %cleanup

if.end8:                                          ; preds = %if.end12.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %24 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %peer_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp = icmp eq i32 %25, 0
  br i1 %cmp, label %if.then10, label %if.end8.if.end12_crit_edge

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  %26 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 3, ptr %peer_sid, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8.if.end12_crit_edge, %selinux_peerlbl_enabled.exit.if.end12_crit_edge
  %sctp_assoc_state = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 5
  %27 = ptrtoint ptr %sctp_assoc_state to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sctp_assoc_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp13 = icmp eq i32 %28, 0
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  %29 = ptrtoint ptr %sctp_assoc_state to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 1, ptr %sctp_assoc_state, align 4
  %30 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %peer_sid, align 4
  %peer_sid17 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  %32 = ptrtoint ptr %peer_sid17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %peer_sid17, align 4
  br label %if.end32

if.else:                                          ; preds = %if.end12
  %peer_sid18 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  %33 = ptrtoint ptr %peer_sid18 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %peer_sid18, align 4
  %35 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %peer_sid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %36)
  %cmp19.not = icmp eq i32 %34, %36
  br i1 %cmp19.not, label %if.else.if.end32_crit_edge, label %if.then21

if.else.if.end32_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end32

if.then21:                                        ; preds = %if.else
  %37 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %38 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %net, ptr %u, align 4
  %39 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sk, align 4
  %sk25 = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 1
  %41 = ptrtoint ptr %sk25 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %40, ptr %sk25, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %42 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %sclass, align 4
  %call27 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %34, i32 noundef %36, i16 noundef zeroext %43, i32 noundef 8388608, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end32thread-pre-split, label %if.then21.cleanup_crit_edge

if.then21.cleanup_crit_edge:                      ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end32thread-pre-split:                         ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #25
  %44 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %44)
  %.pr = load i32, ptr %peer_sid, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.end32thread-pre-split, %if.else.if.end32_crit_edge, %if.then15
  %45 = phi i32 [ %.pr, %if.end32thread-pre-split ], [ %34, %if.else.if.end32_crit_edge ], [ %31, %if.then15 ]
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %46 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp.not.i = icmp eq i32 %45, 0
  br i1 %cmp.not.i, label %selinux_conn_sid.exit.thread, label %selinux_conn_sid.exit

selinux_conn_sid.exit.thread:                     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #25
  %48 = ptrtoint ptr %conn_sid to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %conn_sid, align 4
  br label %if.end36

selinux_conn_sid.exit:                            ; preds = %if.end32
  %call.i62 = call i32 @security_sid_mls_copy(ptr noundef nonnull @selinux_state, i32 noundef %47, i32 noundef %45, ptr noundef nonnull %conn_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i62)
  %tobool34.not = icmp eq i32 %call.i62, 0
  br i1 %tobool34.not, label %selinux_conn_sid.exit.if.end36_crit_edge, label %selinux_conn_sid.exit.cleanup_crit_edge

selinux_conn_sid.exit.cleanup_crit_edge:          ; preds = %selinux_conn_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

selinux_conn_sid.exit.if.end36_crit_edge:         ; preds = %selinux_conn_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.end36:                                         ; preds = %selinux_conn_sid.exit.if.end36_crit_edge, %selinux_conn_sid.exit.thread
  %49 = ptrtoint ptr %conn_sid to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %conn_sid, align 4
  %secid = getelementptr inbounds %struct.sctp_association, ptr %asoc, i32 0, i32 90
  %51 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %secid, align 8
  %52 = ptrtoint ptr %peer_sid to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %peer_sid, align 4
  %peer_secid = getelementptr inbounds %struct.sctp_association, ptr %asoc, i32 0, i32 91
  %54 = ptrtoint ptr %peer_secid to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %peer_secid, align 4
  %call37 = call i32 @selinux_netlbl_sctp_assoc_request(ptr noundef %asoc, ptr noundef %skb) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end36, %selinux_conn_sid.exit.cleanup_crit_edge, %if.then21.cleanup_crit_edge, %selinux_skb_peerlbl_sid.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call37, %if.end36 ], [ 0, %entry.cleanup_crit_edge ], [ %call27, %if.then21.cleanup_crit_edge ], [ %call.i62, %selinux_conn_sid.exit.cleanup_crit_edge ], [ -13, %selinux_skb_peerlbl_sid.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %conn_sid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peer_sid) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_sctp_sk_clone(ptr nocapture noundef readonly %asoc, ptr noundef %sk, ptr noundef %newsk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %sk_security1 = getelementptr inbounds %struct.sock, ptr %newsk, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security1, align 8
  %4 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 2), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.i.not = icmp eq i8 %4, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %5 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sid.i, align 4
  %sid2.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %7 = ptrtoint ptr %sid2.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %sid2.i, align 4
  %peer_sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %peer_sid.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %peer_sid.i, align 4
  %peer_sid3.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  %10 = ptrtoint ptr %peer_sid3.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %peer_sid3.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 4
  %11 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %sclass.i, align 4
  %sclass4.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %13 = ptrtoint ptr %sclass4.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %sclass4.i, align 4
  tail call void @selinux_netlbl_sk_security_reset(ptr noundef %3) #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %secid = getelementptr inbounds %struct.sctp_association, ptr %asoc, i32 0, i32 90
  %14 = ptrtoint ptr %secid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %secid, align 8
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %16 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %sid, align 4
  %peer_secid = getelementptr inbounds %struct.sctp_association, ptr %asoc, i32 0, i32 91
  %17 = ptrtoint ptr %peer_secid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %peer_secid, align 4
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  %19 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %peer_sid, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 4
  %20 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %sclass, align 4
  %sclass2 = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass2 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %21, ptr %sclass2, align 4
  tail call void @selinux_netlbl_sctp_sk_clone(ptr noundef %sk, ptr noundef %newsk) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sctp_bind_connect(ptr noundef %sk, i32 noundef %optname, ptr noundef %address, i32 noundef %addrlen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 2), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %0)
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %1 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sk_socket, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %addrlen)
  %cmp47 = icmp sgt i32 %addrlen, 0
  br i1 %cmp47, label %if.end.while.body_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

while.body:                                       ; preds = %if.end20.while.body_crit_edge, %if.end.while.body_crit_edge
  %addr_buf.049 = phi ptr [ %add.ptr, %if.end20.while.body_crit_edge ], [ %address, %if.end.while.body_crit_edge ]
  %walk_size.048 = phi i32 [ %add5, %if.end20.while.body_crit_edge ], [ 0, %if.end.while.body_crit_edge ]
  %add = or i32 %walk_size.048, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %addrlen)
  %cmp1 = icmp ugt i32 %add, %addrlen
  br i1 %cmp1, label %while.body.cleanup_crit_edge, label %if.end3

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end3:                                          ; preds = %while.body
  %3 = ptrtoint ptr %addr_buf.049 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %addr_buf.049, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.146)
  switch i16 %4, label %if.end3.cleanup_crit_edge [
    i16 0, label %if.end3.sw.epilog_crit_edge
    i16 2, label %if.end3.sw.epilog_crit_edge57
    i16 10, label %sw.bb4
  ]

if.end3.sw.epilog_crit_edge57:                    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

if.end3.sw.epilog_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb4:                                           ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %if.end3.sw.epilog_crit_edge, %if.end3.sw.epilog_crit_edge57
  %len.0 = phi i32 [ 28, %sw.bb4 ], [ 16, %if.end3.sw.epilog_crit_edge ], [ 16, %if.end3.sw.epilog_crit_edge57 ]
  %add5 = add i32 %len.0, %walk_size.048
  call void @__sanitizer_cov_trace_cmp4(i32 %add5, i32 %addrlen)
  %cmp6 = icmp sgt i32 %add5, %addrlen
  br i1 %cmp6, label %sw.epilog.cleanup_crit_edge, label %if.end9

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end9:                                          ; preds = %sw.epilog
  %6 = zext i32 %optname to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.147)
  switch i32 %optname, label %if.end9.cleanup_crit_edge [
    i32 6, label %if.end9.sw.bb10_crit_edge
    i32 5, label %if.end9.sw.bb10_crit_edge58
    i32 100, label %if.end9.sw.bb10_crit_edge59
    i32 110, label %if.end9.sw.bb12_crit_edge
    i32 49156, label %if.end9.sw.bb12_crit_edge60
    i32 49153, label %if.end9.sw.bb12_crit_edge61
    i32 126, label %if.end9.sw.bb12_crit_edge62
  ]

if.end9.sw.bb12_crit_edge62:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb12

if.end9.sw.bb12_crit_edge61:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb12

if.end9.sw.bb12_crit_edge60:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb12

if.end9.sw.bb12_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb12

if.end9.sw.bb10_crit_edge59:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb10

if.end9.sw.bb10_crit_edge58:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb10

if.end9.sw.bb10_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb10

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb10:                                          ; preds = %if.end9.sw.bb10_crit_edge, %if.end9.sw.bb10_crit_edge58, %if.end9.sw.bb10_crit_edge59
  %call11 = tail call i32 @selinux_socket_bind(ptr noundef %2, ptr noundef %addr_buf.049, i32 noundef %len.0)
  br label %sw.epilog17

sw.bb12:                                          ; preds = %if.end9.sw.bb12_crit_edge, %if.end9.sw.bb12_crit_edge60, %if.end9.sw.bb12_crit_edge61, %if.end9.sw.bb12_crit_edge62
  %call13 = tail call fastcc i32 @selinux_socket_connect_helper(ptr noundef %2, ptr noundef %addr_buf.049, i32 noundef %len.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool.not = icmp eq i32 %call13, 0
  br i1 %tobool.not, label %if.end15, label %sw.bb12.cleanup_crit_edge

sw.bb12.cleanup_crit_edge:                        ; preds = %sw.bb12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end15:                                         ; preds = %sw.bb12
  call void @__sanitizer_cov_trace_pc() #25
  %call16 = tail call i32 @selinux_netlbl_socket_connect_locked(ptr noundef %sk, ptr noundef %addr_buf.049) #23
  br label %sw.epilog17

sw.epilog17:                                      ; preds = %if.end15, %sw.bb10
  %err.0 = phi i32 [ %call16, %if.end15 ], [ %call11, %sw.bb10 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool18.not = icmp eq i32 %err.0, 0
  br i1 %tobool18.not, label %if.end20, label %sw.epilog17.cleanup_crit_edge

sw.epilog17.cleanup_crit_edge:                    ; preds = %sw.epilog17
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end20:                                         ; preds = %sw.epilog17
  %add.ptr = getelementptr i8, ptr %addr_buf.049, i32 %len.0
  %cmp = icmp slt i32 %add5, %addrlen
  br i1 %cmp, label %if.end20.while.body_crit_edge, label %if.end20.cleanup_crit_edge

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end20.while.body_crit_edge:                    ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

cleanup:                                          ; preds = %if.end20.cleanup_crit_edge, %sw.epilog17.cleanup_crit_edge, %sw.bb12.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %while.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ -22, %while.body.cleanup_crit_edge ], [ -22, %if.end3.cleanup_crit_edge ], [ -22, %sw.epilog.cleanup_crit_edge ], [ %call13, %sw.bb12.cleanup_crit_edge ], [ %err.0, %sw.epilog17.cleanup_crit_edge ], [ 0, %if.end20.cleanup_crit_edge ], [ -22, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inet_conn_request(ptr nocapture noundef readonly %sk, ptr noundef %skb, ptr noundef %req) #1 align 64 {
entry:
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  %connsid = alloca i32, align 4
  %peersid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %rsk_ops = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 7
  %2 = ptrtoint ptr %rsk_ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rsk_ops, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %conv = trunc i32 %5 to i16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %connsid) #23
  %6 = ptrtoint ptr %connsid to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %connsid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %peersid) #23
  %7 = ptrtoint ptr %peersid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %peersid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %8 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %9 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %10 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

entry.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end.i:                                         ; preds = %entry
  %call3.i = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %conv, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge, !prof !381

if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit.thread

if.end12.i:                                       ; preds = %if.end.i
  %11 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nlbl_sid.i, align 4
  %13 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nlbl_type.i, align 4
  %15 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %14, i32 noundef %16, ptr noundef nonnull %peersid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end, label %do.end.i, !prof !381

do.end.i:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit.thread

selinux_skb_peerlbl_sid.exit.thread:              ; preds = %do.end.i, %if.end.i.selinux_skb_peerlbl_sid.exit.thread_crit_edge, %entry.selinux_skb_peerlbl_sid.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  br label %cleanup

if.end:                                           ; preds = %if.end12.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %17 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sid, align 4
  %19 = ptrtoint ptr %peersid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %peersid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.not.i = icmp eq i32 %20, 0
  br i1 %cmp.not.i, label %selinux_conn_sid.exit.thread, label %selinux_conn_sid.exit

selinux_conn_sid.exit.thread:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %21 = ptrtoint ptr %connsid to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %18, ptr %connsid, align 4
  br label %if.end5

selinux_conn_sid.exit:                            ; preds = %if.end
  %call.i18 = call i32 @security_sid_mls_copy(ptr noundef nonnull @selinux_state, i32 noundef %18, i32 noundef %20, ptr noundef nonnull %connsid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18)
  %tobool3.not = icmp eq i32 %call.i18, 0
  br i1 %tobool3.not, label %selinux_conn_sid.exit.if.end5_crit_edge, label %selinux_conn_sid.exit.cleanup_crit_edge

selinux_conn_sid.exit.cleanup_crit_edge:          ; preds = %selinux_conn_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

selinux_conn_sid.exit.if.end5_crit_edge:          ; preds = %selinux_conn_sid.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.end5:                                          ; preds = %selinux_conn_sid.exit.if.end5_crit_edge, %selinux_conn_sid.exit.thread
  %22 = ptrtoint ptr %connsid to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %connsid, align 4
  %secid = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 10
  %24 = ptrtoint ptr %secid to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %secid, align 8
  %25 = ptrtoint ptr %peersid to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %peersid, align 4
  %peer_secid = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 11
  %27 = ptrtoint ptr %peer_secid to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %peer_secid, align 4
  %call6 = call i32 @selinux_netlbl_inet_conn_request(ptr noundef %req, i16 noundef zeroext %conv) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %selinux_conn_sid.exit.cleanup_crit_edge, %selinux_skb_peerlbl_sid.exit.thread
  %retval.0 = phi i32 [ %call6, %if.end5 ], [ %call.i18, %selinux_conn_sid.exit.cleanup_crit_edge ], [ -13, %selinux_skb_peerlbl_sid.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %peersid) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %connsid) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_inet_csk_clone(ptr noundef %newsk, ptr nocapture noundef readonly %req) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %newsk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %secid = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 10
  %2 = ptrtoint ptr %secid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %secid, align 8
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %sid, align 4
  %peer_secid = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 11
  %5 = ptrtoint ptr %peer_secid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %peer_secid, align 4
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %peer_sid, align 4
  %rsk_ops = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 7
  %8 = ptrtoint ptr %rsk_ops to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rsk_ops, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %conv = trunc i32 %11 to i16
  tail call void @selinux_netlbl_inet_csk_clone(ptr noundef %newsk, i16 noundef zeroext %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_inet_conn_established(ptr nocapture noundef readonly %sk, ptr noundef %skb) #1 align 64 {
entry:
  %xfrm_sid.i = alloca i32, align 4
  %nlbl_sid.i = alloca i32, align 4
  %nlbl_type.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %0 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %skc_family, align 8
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %1)
  %cmp = icmp eq i16 %1, 10
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %4 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %protocol, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 2048, i16 %5)
  %cmp3 = icmp eq i16 %5, 2048
  %spec.select = select i1 %cmp3, i16 2, i16 10
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry.if.end_crit_edge
  %family.0 = phi i16 [ %1, %entry.if.end_crit_edge ], [ %spec.select, %land.lhs.true ]
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  %6 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %xfrm_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  %7 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %nlbl_sid.i, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  %8 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %nlbl_type.i, align 4, !annotation !376
  %call.i = call i32 @selinux_xfrm_skb_sid(ptr noundef %skb, ptr noundef nonnull %xfrm_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end.selinux_skb_peerlbl_sid.exit_crit_edge, !prof !381

if.end.selinux_skb_peerlbl_sid.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit

if.end.i:                                         ; preds = %if.end
  %call3.i = call i32 @selinux_netlbl_skbuff_getsid(ptr noundef %skb, i16 noundef zeroext %family.0, ptr noundef nonnull %nlbl_type.i, ptr noundef nonnull %nlbl_sid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i.selinux_skb_peerlbl_sid.exit_crit_edge, !prof !381

if.end.i.selinux_skb_peerlbl_sid.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit

if.end12.i:                                       ; preds = %if.end.i
  %9 = ptrtoint ptr %nlbl_sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nlbl_sid.i, align 4
  %11 = ptrtoint ptr %nlbl_type.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nlbl_type.i, align 4
  %13 = ptrtoint ptr %xfrm_sid.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %xfrm_sid.i, align 4
  %call13.i = call i32 @security_net_peersid_resolve(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %12, i32 noundef %14, ptr noundef %peer_sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end12.i.selinux_skb_peerlbl_sid.exit_crit_edge, label %do.end.i, !prof !381

if.end12.i.selinux_skb_peerlbl_sid.exit_crit_edge: ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_skb_peerlbl_sid.exit

do.end.i:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.77) #26
  br label %selinux_skb_peerlbl_sid.exit

selinux_skb_peerlbl_sid.exit:                     ; preds = %do.end.i, %if.end12.i.selinux_skb_peerlbl_sid.exit_crit_edge, %if.end.i.selinux_skb_peerlbl_sid.exit_crit_edge, %if.end.selinux_skb_peerlbl_sid.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_type.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nlbl_sid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %xfrm_sid.i) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_secmark_relabel_packet(i32 noundef %sid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %sid2 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid2, align 4
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %sid, i16 noundef zeroext 49, i32 noundef 4, ptr noundef null) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_secmark_refcount_inc() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr nonnull @selinux_secmark_refcount, i32 1, i32 3, i32 1) #23
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @selinux_secmark_refcount, ptr nonnull @selinux_secmark_refcount, i32 1, ptr nonnull elementtype(i32) @selinux_secmark_refcount) #23, !srcloc !394
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_secmark_refcount_dec() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @selinux_secmark_refcount, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr nonnull @selinux_secmark_refcount, i32 1, i32 3, i32 1) #23
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @selinux_secmark_refcount, ptr nonnull @selinux_secmark_refcount, i32 1, ptr nonnull elementtype(i32) @selinux_secmark_refcount) #23, !srcloc !395
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @selinux_req_classify_flow(ptr nocapture noundef readonly %req, ptr nocapture noundef writeonly %flic) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %secid = getelementptr inbounds %struct.request_sock, ptr %req, i32 0, i32 10
  %0 = ptrtoint ptr %secid to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %secid, align 8
  %flowic_secid = getelementptr inbounds %struct.flowi_common, ptr %flic, i32 0, i32 7
  %2 = ptrtoint ptr %flowic_secid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %flowic_secid, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_tun_dev_free_security(ptr noundef %security) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %security) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_tun_dev_create() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 56, i32 noundef 8, ptr noundef null) #23
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_tun_dev_attach_queue(ptr nocapture noundef readonly %security) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %security, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %12, i16 noundef zeroext 56, i32 noundef 2097152, ptr noundef null) #23
  ret i32 %call1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_tun_dev_attach(ptr nocapture noundef readonly %sk, ptr nocapture noundef readonly %security) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %0 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_security, align 8
  %2 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %security, align 4
  %sid1 = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %sid1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %sid1, align 4
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %1, i32 0, i32 4
  %5 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 56, ptr %sclass, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_tun_dev_open(ptr nocapture noundef %security) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %security, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %12, i16 noundef zeroext 56, i32 noundef 128, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 56, i32 noundef 256, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %13 = ptrtoint ptr %security to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %10, ptr %security, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end6 ], [ %call2, %entry.cleanup_crit_edge ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ib_pkey_access(ptr nocapture noundef readonly %ib_sec, i64 noundef %subnet_prefix, i16 noundef zeroext %pkey_val) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  %sid = alloca i32, align 4
  %ibpkey = alloca %struct.lsm_ibpkey_audit, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %1 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %sid, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ibpkey) #23
  %2 = getelementptr inbounds i8, ptr %ibpkey, i32 8
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 -1, ptr %2, align 8
  %call = call i32 @sel_ib_pkey_sid(i64 noundef %subnet_prefix, i16 noundef zeroext %pkey_val, ptr noundef nonnull %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %4 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 13, ptr %ad, align 4
  %5 = ptrtoint ptr %ibpkey to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %subnet_prefix, ptr %ibpkey, align 8
  %pkey = getelementptr inbounds %struct.lsm_ibpkey_audit, ptr %ibpkey, i32 0, i32 1
  %6 = ptrtoint ptr %pkey to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %pkey_val, ptr %pkey, align 8
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %7 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %ibpkey, ptr %u, align 4
  %8 = ptrtoint ptr %ib_sec to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ib_sec, align 4
  %10 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %9, i32 noundef %11, i16 noundef zeroext 89, i32 noundef 1, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ibpkey) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ib_endport_manage_subnet(ptr nocapture noundef readonly %ib_sec, ptr noundef %dev_name, i8 noundef zeroext %port_num) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  %sid = alloca i32, align 4
  %ibendport = alloca %struct.lsm_ibendport_audit, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %1 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %sid, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ibendport) #23
  %2 = ptrtoint ptr %ibendport to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %ibendport, align 8, !annotation !376
  %call = call i32 @security_ib_endport_sid(ptr noundef nonnull @selinux_state, ptr noundef %dev_name, i8 noundef zeroext %port_num, ptr noundef nonnull %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %3 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 14, ptr %ad, align 4
  %4 = ptrtoint ptr %ibendport to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev_name, ptr %ibendport, align 8
  %port = getelementptr inbounds %struct.lsm_ibendport_audit, ptr %ibendport, i32 0, i32 1
  %5 = ptrtoint ptr %port to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %port_num, ptr %port, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %6 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %ibendport, ptr %u, align 4
  %7 = ptrtoint ptr %ib_sec to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ib_sec, align 4
  %9 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %8, i32 noundef %10, i16 noundef zeroext 90, i32 noundef 1, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ibendport) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_ib_free_security(ptr noundef %ib_sec) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %ib_sec) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_xfrm_policy_free(ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_policy_delete(ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_xfrm_state_free(ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_state_delete(ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_policy_lookup(ptr noundef, i32 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_state_pol_flow_match(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_decode_session(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_key_free(ptr nocapture noundef %k) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.key, ptr %k, i32 0, i32 6
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  store ptr null, ptr %security, align 4
  tail call void @kfree(ptr noundef %1) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_key_permission(ptr noundef %key_ref, ptr nocapture noundef readonly %cred, i32 noundef %need_perm) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %need_perm to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.148)
  switch i32 %need_perm, label %do.end [
    i32 1, label %entry.sw.epilog_crit_edge
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 6, label %sw.bb5
    i32 7, label %entry.cleanup_crit_edge
    i32 8, label %entry.cleanup_crit_edge28
    i32 9, label %entry.cleanup_crit_edge29
    i32 10, label %entry.cleanup_crit_edge30
  ]

entry.cleanup_crit_edge30:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

entry.cleanup_crit_edge29:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

entry.cleanup_crit_edge28:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6671, i32 noundef 9, ptr noundef null) #23
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %entry.sw.epilog_crit_edge
  %perm.0 = phi i32 [ 32, %sw.bb5 ], [ 16, %sw.bb4 ], [ 8, %sw.bb3 ], [ 4, %sw.bb2 ], [ 2, %sw.bb1 ], [ %need_perm, %entry.sw.epilog_crit_edge ]
  %security.i.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %1 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %security.i.i, align 4
  %3 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %2, i32 %3
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sid.i, align 4
  %6 = ptrtoint ptr %key_ref to i32
  %and.i = and i32 %6, -2
  %7 = inttoptr i32 %and.i to ptr
  %security = getelementptr inbounds %struct.key, ptr %7, i32 0, i32 6
  %8 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %call23 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %5, i32 noundef %11, i16 noundef zeroext 50, i32 noundef %perm.0, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %do.end, %entry.cleanup_crit_edge, %entry.cleanup_crit_edge28, %entry.cleanup_crit_edge29, %entry.cleanup_crit_edge30
  %retval.0 = phi i32 [ -1, %do.end ], [ %call23, %sw.epilog ], [ 0, %entry.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge28 ], [ 0, %entry.cleanup_crit_edge29 ], [ 0, %entry.cleanup_crit_edge30 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_key_getsecurity(ptr nocapture noundef readonly %key, ptr nocapture noundef writeonly %_buffer) #1 align 64 {
entry:
  %context = alloca ptr, align 4
  %len = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.key, ptr %key, i32 0, i32 6
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context) #23
  %2 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %context, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %len) #23
  %3 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %len, align 4, !annotation !376
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %1, align 4
  %call = call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %5, ptr noundef nonnull %context, ptr noundef nonnull %len) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %rc.0 = phi i32 [ %call, %entry.if.end_crit_edge ], [ %7, %if.then ]
  %8 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %context, align 4
  %10 = ptrtoint ptr %_buffer to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %_buffer, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %len) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context) #23
  ret i32 %rc.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_watch_key(ptr nocapture noundef readonly %key) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.key, ptr %key, i32 0, i32 6
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %6 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security.i.i, align 4
  %10 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 %10
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid.i, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %1, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %14, i16 noundef zeroext 50, i32 noundef 1, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_audit_rule_known(ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_audit_rule_match(i32 noundef, i32 noundef, i32 noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_audit_rule_free(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_bpf(i32 noundef %cmd, ptr nocapture noundef readnone %attr, i32 noundef %size) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.149)
  switch i32 %cmd, label %entry.sw.epilog_crit_edge [
    i32 0, label %entry.sw.epilog.sink.split_crit_edge
    i32 5, label %sw.bb2
  ]

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb2, %entry.sw.epilog.sink.split_crit_edge
  %.sink = phi i32 [ 8, %sw.bb2 ], [ 1, %entry.sw.epilog.sink.split_crit_edge ]
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 91, i32 noundef %.sink, ptr noundef null) #23
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %ret.0 = phi i32 [ 0, %entry.sw.epilog_crit_edge ], [ %call3, %sw.epilog.sink.split ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_bpf_map(ptr nocapture noundef readonly %map, i32 noundef %fmode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %security = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 2
  %11 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %and.i = shl i32 %fmode, 1
  %15 = and i32 %and.i, 6
  %call3 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %14, i16 noundef zeroext 91, i32 noundef %15, ptr noundef null) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_bpf_prog(ptr nocapture noundef readonly %prog) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %11 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %aux, align 4
  %security = getelementptr inbounds %struct.bpf_prog_aux, ptr %12, i32 0, i32 47
  %13 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %security, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %16, i16 noundef zeroext 91, i32 noundef 16, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_bpf_map_free(ptr nocapture noundef %map) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 2
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 8
  store ptr null, ptr %security, align 8
  tail call void @kfree(ptr noundef %1) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_bpf_prog_free(ptr nocapture noundef %aux) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.bpf_prog_aux, ptr %aux, i32 0, i32 47
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  store ptr null, ptr %security, align 4
  tail call void @kfree(ptr noundef %1) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_perf_event_open(ptr nocapture noundef readnone %attr, i32 noundef %type) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %type)
  %0 = icmp ult i32 %type, 4
  br i1 %0, label %switch.lookup, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %switch.gep = getelementptr inbounds [4 x i32], ptr @switch.table.selinux_perf_event_open, i32 0, i32 %type
  %12 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %12)
  %switch.load = load i32, ptr %switch.gep, align 4
  %call13 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %11, i16 noundef zeroext 94, i32 noundef %switch.load, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %switch.lookup ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @selinux_perf_event_free(ptr nocapture noundef %event) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.perf_event, ptr %event, i32 0, i32 69
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  store ptr null, ptr %security, align 4
  tail call void @kfree(ptr noundef %1) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_perf_event_read(ptr nocapture noundef readonly %event) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.perf_event, ptr %event, i32 0, i32 69
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %6 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security.i.i, align 4
  %10 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 %10
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid.i, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %1, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %14, i16 noundef zeroext 94, i32 noundef 16, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_perf_event_write(ptr nocapture noundef readonly %event) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.perf_event, ptr %event, i32 0, i32 69
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %6 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %7, i32 0, i32 23
  %8 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %security.i.i, align 4
  %10 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 %10
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sid.i, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %1, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %12, i32 noundef %14, i16 noundef zeroext 94, i32 noundef 32, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_uring_override_creds(ptr nocapture noundef readonly %new) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %security.i.i3 = getelementptr inbounds %struct.cred, ptr %new, i32 0, i32 23
  %11 = ptrtoint ptr %security.i.i3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %security.i.i3, align 4
  %add.ptr.i.i4 = getelementptr i8, ptr %12, i32 %8
  %sid.i5 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i4, i32 0, i32 1
  %13 = ptrtoint ptr %sid.i5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sid.i5, align 4
  %call2 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %14, i16 noundef zeroext 96, i32 noundef 1, ptr noundef null) #23
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_uring_sqpoll() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 96, i32 noundef 2, ptr noundef null) #23
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_fs_context_dup(ptr nocapture noundef writeonly %fc, ptr nocapture noundef readonly %src_fc) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security = getelementptr inbounds %struct.fs_context, ptr %src_fc, i32 0, i32 11
  %0 = ptrtoint ptr %security to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 16) #30
  %security1 = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 11
  %3 = ptrtoint ptr %security1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call7.i.i, ptr %security1, align 4
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %tobool7.not = icmp eq ptr %5, null
  br i1 %tobool7.not, label %if.end5.if.end16_crit_edge, label %if.then8

if.end5.if.end16_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16

if.then8:                                         ; preds = %if.end5
  %call10 = tail call noalias ptr @kstrdup(ptr noundef nonnull %5, i32 noundef 3264) #23
  %6 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call10, ptr %call7.i.i, align 8
  %tobool13.not = icmp eq ptr %call10, null
  br i1 %tobool13.not, label %if.then8.cleanup_crit_edge, label %if.then8.if.end16_crit_edge

if.then8.if.end16_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.then8.if.end16_crit_edge, %if.end5.if.end16_crit_edge
  %context = getelementptr inbounds %struct.selinux_mnt_opts, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %context, align 4
  %tobool17.not = icmp eq ptr %8, null
  br i1 %tobool17.not, label %if.end16.if.end26_crit_edge, label %if.then18

if.end16.if.end26_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then18:                                        ; preds = %if.end16
  %call20 = tail call noalias ptr @kstrdup(ptr noundef nonnull %8, i32 noundef 3264) #23
  %context21 = getelementptr inbounds %struct.selinux_mnt_opts, ptr %call7.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %context21 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call20, ptr %context21, align 4
  %tobool23.not = icmp eq ptr %call20, null
  br i1 %tobool23.not, label %if.then18.cleanup_crit_edge, label %if.then18.if.end26_crit_edge

if.then18.if.end26_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then18.cleanup_crit_edge:                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end26:                                         ; preds = %if.then18.if.end26_crit_edge, %if.end16.if.end26_crit_edge
  %rootcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rootcontext, align 4
  %tobool27.not = icmp eq ptr %11, null
  br i1 %tobool27.not, label %if.end26.if.end36_crit_edge, label %if.then28

if.end26.if.end36_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.then28:                                        ; preds = %if.end26
  %call30 = tail call noalias ptr @kstrdup(ptr noundef nonnull %11, i32 noundef 3264) #23
  %rootcontext31 = getelementptr inbounds %struct.selinux_mnt_opts, ptr %call7.i.i, i32 0, i32 2
  %12 = ptrtoint ptr %rootcontext31 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call30, ptr %rootcontext31, align 8
  %tobool33.not = icmp eq ptr %call30, null
  br i1 %tobool33.not, label %if.then28.cleanup_crit_edge, label %if.then28.if.end36_crit_edge

if.then28.if.end36_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.then28.cleanup_crit_edge:                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end36:                                         ; preds = %if.then28.if.end36_crit_edge, %if.end26.if.end36_crit_edge
  %defcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %1, i32 0, i32 3
  %13 = ptrtoint ptr %defcontext to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %defcontext, align 4
  %tobool37.not = icmp eq ptr %14, null
  br i1 %tobool37.not, label %if.end36.if.end46_crit_edge, label %if.then38

if.end36.if.end46_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end46

if.then38:                                        ; preds = %if.end36
  %call40 = tail call noalias ptr @kstrdup(ptr noundef nonnull %14, i32 noundef 3264) #23
  %defcontext41 = getelementptr inbounds %struct.selinux_mnt_opts, ptr %call7.i.i, i32 0, i32 3
  %15 = ptrtoint ptr %defcontext41 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call40, ptr %defcontext41, align 4
  %tobool43.not = icmp eq ptr %call40, null
  br i1 %tobool43.not, label %if.then38.cleanup_crit_edge, label %if.then38.if.end46_crit_edge

if.then38.if.end46_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end46

if.then38.cleanup_crit_edge:                      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end46:                                         ; preds = %if.then38.if.end46_crit_edge, %if.end36.if.end46_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %if.then38.cleanup_crit_edge, %if.then28.cleanup_crit_edge, %if.then18.cleanup_crit_edge, %if.then8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end46 ], [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ -12, %if.then8.cleanup_crit_edge ], [ -12, %if.then18.cleanup_crit_edge ], [ -12, %if.then28.cleanup_crit_edge ], [ -12, %if.then38.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_fs_context_parse_param(ptr noundef %fc, ptr noundef %param) #1 align 64 {
entry:
  %result = alloca %struct.fs_parse_result, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %result) #23
  %0 = call ptr @memset(ptr %result, i32 255, i32 16)
  %log.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 9
  %call.i = call i32 @__fs_parse(ptr noundef %log.i, ptr noundef nonnull @selinux_fs_parameters, ptr noundef %param, ptr noundef nonnull %result) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.fs_parameter, ptr %param, i32 0, i32 2
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %security = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 11
  %call1 = call fastcc i32 @selinux_add_opt(i32 noundef %call.i, ptr noundef %3, ptr noundef %security)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %1, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %entry.cleanup_crit_edge ], [ %call1, %if.end.cleanup_crit_edge ], [ 1, %if.then2 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %result) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_eat_lsm_opts(ptr noundef %options, ptr nocapture noundef %mnt_opts) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  br label %while.cond

while.cond:                                       ; preds = %cleanup34, %entry
  %from.0 = phi ptr [ %options, %entry ], [ %add.ptr33, %cleanup34 ]
  %to.0 = phi ptr [ %options, %entry ], [ %to.1, %cleanup34 ]
  %first.0.off0 = phi i1 [ true, %entry ], [ %first.1.off0, %cleanup34 ]
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.inc.i, %while.cond
  %open_quote.0.off0.i = phi i1 [ false, %while.cond ], [ %open_quote.1.off021.i, %for.inc.i ]
  %len.0.i = phi i32 [ 0, %while.cond ], [ %inc.i, %for.inc.i ]
  %arrayidx.i = getelementptr i8, ptr %from.0, i32 %len.0.i
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx.i, align 1
  %2 = zext i8 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.150)
  switch i8 %1, label %if.end.i [
    i8 0, label %for.cond.i.opt_len.exit_crit_edge
    i8 34, label %if.end.thread.i
  ]

for.cond.i.opt_len.exit_crit_edge:                ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %opt_len.exit

if.end.thread.i:                                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #25
  %lnot.i = xor i1 %open_quote.0.off0.i, true
  br label %for.inc.i

if.end.i:                                         ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 44, i8 %1)
  %cmp6.i = icmp ne i8 %1, 44
  %brmerge.i = select i1 %cmp6.i, i1 true, i1 %open_quote.0.off0.i
  br i1 %brmerge.i, label %if.end.i.for.inc.i_crit_edge, label %if.end.i.opt_len.exit_crit_edge

if.end.i.opt_len.exit_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %opt_len.exit

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %if.end.thread.i
  %open_quote.1.off021.i = phi i1 [ %lnot.i, %if.end.thread.i ], [ %open_quote.0.off0.i, %if.end.i.for.inc.i_crit_edge ]
  %inc.i = add i32 %len.0.i, 1
  br label %for.cond.i

opt_len.exit:                                     ; preds = %if.end.i.opt_len.exit_crit_edge, %for.cond.i.opt_len.exit_crit_edge
  %arrayidx.i.le = getelementptr i8, ptr %from.0, i32 %len.0.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %len.0.i)
  %cmp2.i = icmp ult i32 %len.0.i, 7
  br i1 %cmp2.i, label %opt_len.exit.if.else_crit_edge, label %lor.lhs.false.i

opt_len.exit.if.else_crit_edge:                   ; preds = %opt_len.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false.i:                                  ; preds = %opt_len.exit
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(7) %from.0, ptr noundef nonnull dereferenceable(7) @.str.68, i32 7) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool.not.i, label %if.then6.i, label %lor.lhs.false.i.for.inc.i78_crit_edge

lor.lhs.false.i.for.inc.i78_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i78

if.then6.i:                                       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %len.0.i)
  %cmp7.i = icmp eq i32 %len.0.i, 7
  br i1 %cmp7.i, label %if.then6.i.if.else_crit_edge, label %lor.lhs.false8.i

if.then6.i.if.else_crit_edge:                     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false8.i:                                 ; preds = %if.then6.i
  %arrayidx9.i = getelementptr i8, ptr %from.0, i32 7
  %3 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx9.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 61, i8 %4)
  %cmp10.not.i = icmp eq i8 %4, 61
  br i1 %cmp10.not.i, label %lor.lhs.false8.i.match_opt_prefix.exit_crit_edge, label %lor.lhs.false8.i.for.inc.i78_crit_edge

lor.lhs.false8.i.for.inc.i78_crit_edge:           ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i78

lor.lhs.false8.i.match_opt_prefix.exit_crit_edge: ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %match_opt_prefix.exit

for.inc.i78:                                      ; preds = %lor.lhs.false8.i.for.inc.i78_crit_edge, %lor.lhs.false.i.for.inc.i78_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %len.0.i)
  %cmp2.1.i = icmp ult i32 %len.0.i, 9
  br i1 %cmp2.1.i, label %for.inc.3.i, label %lor.lhs.false.1.i

lor.lhs.false.1.i:                                ; preds = %for.inc.i78
  %bcmp.1.i = tail call i32 @bcmp(ptr noundef dereferenceable(9) %from.0, ptr noundef nonnull dereferenceable(9) @.str.70, i32 9) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.1.i)
  %tobool.not.1.i = icmp eq i32 %bcmp.1.i, 0
  br i1 %tobool.not.1.i, label %if.then6.1.i, label %for.inc.1.i

if.then6.1.i:                                     ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %len.0.i)
  %cmp7.1.i = icmp eq i32 %len.0.i, 9
  br i1 %cmp7.1.i, label %if.then6.1.i.if.else_crit_edge, label %lor.lhs.false8.1.i

if.then6.1.i.if.else_crit_edge:                   ; preds = %if.then6.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false8.1.i:                               ; preds = %if.then6.1.i
  %arrayidx9.1.i = getelementptr i8, ptr %from.0, i32 9
  %5 = ptrtoint ptr %arrayidx9.1.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx9.1.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 61, i8 %6)
  %cmp10.not.1.i = icmp eq i8 %6, 61
  br i1 %cmp10.not.1.i, label %lor.lhs.false8.1.i.match_opt_prefix.exit_crit_edge, label %lor.lhs.false8.1.i.lor.lhs.false.2.i_crit_edge

lor.lhs.false8.1.i.lor.lhs.false.2.i_crit_edge:   ; preds = %lor.lhs.false8.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false.2.i

lor.lhs.false8.1.i.match_opt_prefix.exit_crit_edge: ; preds = %lor.lhs.false8.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %match_opt_prefix.exit

for.inc.1.i:                                      ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %len.0.i)
  %cmp2.2.i = icmp ult i32 %len.0.i, 10
  br i1 %cmp2.2.i, label %for.inc.1.i.if.else_crit_edge, label %for.inc.1.i.lor.lhs.false.2.i_crit_edge

for.inc.1.i.lor.lhs.false.2.i_crit_edge:          ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false.2.i

for.inc.1.i.if.else_crit_edge:                    ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false.2.i:                                ; preds = %for.inc.1.i.lor.lhs.false.2.i_crit_edge, %lor.lhs.false8.1.i.lor.lhs.false.2.i_crit_edge
  %bcmp.2.i = tail call i32 @bcmp(ptr noundef dereferenceable(10) %from.0, ptr noundef nonnull dereferenceable(10) @.str.69, i32 10) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.2.i)
  %tobool.not.2.i = icmp eq i32 %bcmp.2.i, 0
  br i1 %tobool.not.2.i, label %if.then6.2.i, label %for.inc.2.i

if.then6.2.i:                                     ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %len.0.i)
  %cmp7.2.i = icmp eq i32 %len.0.i, 10
  br i1 %cmp7.2.i, label %if.then6.2.i.if.else_crit_edge, label %lor.lhs.false8.2.i

if.then6.2.i.if.else_crit_edge:                   ; preds = %if.then6.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false8.2.i:                               ; preds = %if.then6.2.i
  %arrayidx9.2.i = getelementptr i8, ptr %from.0, i32 10
  %7 = ptrtoint ptr %arrayidx9.2.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx9.2.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 61, i8 %8)
  %cmp10.not.2.i = icmp eq i8 %8, 61
  br i1 %cmp10.not.2.i, label %lor.lhs.false8.2.i.match_opt_prefix.exit_crit_edge, label %lor.lhs.false8.2.i.lor.lhs.false.3.i_crit_edge

lor.lhs.false8.2.i.lor.lhs.false.3.i_crit_edge:   ; preds = %lor.lhs.false8.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false.3.i

lor.lhs.false8.2.i.match_opt_prefix.exit_crit_edge: ; preds = %lor.lhs.false8.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %match_opt_prefix.exit

for.inc.2.i:                                      ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %len.0.i)
  %cmp2.3.i = icmp ult i32 %len.0.i, 11
  br i1 %cmp2.3.i, label %for.inc.2.i.if.else_crit_edge, label %for.inc.2.i.lor.lhs.false.3.i_crit_edge

for.inc.2.i.lor.lhs.false.3.i_crit_edge:          ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false.3.i

for.inc.2.i.if.else_crit_edge:                    ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false.3.i:                                ; preds = %for.inc.2.i.lor.lhs.false.3.i_crit_edge, %lor.lhs.false8.2.i.lor.lhs.false.3.i_crit_edge
  %bcmp.3.i = tail call i32 @bcmp(ptr noundef dereferenceable(11) %from.0, ptr noundef nonnull dereferenceable(11) @.str.71, i32 11) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.3.i)
  %tobool.not.3.i = icmp ne i32 %bcmp.3.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %len.0.i)
  %cmp7.3.i = icmp eq i32 %len.0.i, 11
  %or.cond.i = or i1 %cmp7.3.i, %tobool.not.3.i
  br i1 %or.cond.i, label %lor.lhs.false.3.i.if.else_crit_edge, label %lor.lhs.false8.3.i

lor.lhs.false.3.i.if.else_crit_edge:              ; preds = %lor.lhs.false.3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false8.3.i:                               ; preds = %lor.lhs.false.3.i
  %arrayidx9.3.i = getelementptr i8, ptr %from.0, i32 11
  %9 = ptrtoint ptr %arrayidx9.3.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx9.3.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 61, i8 %10)
  %cmp10.not.3.i = icmp eq i8 %10, 61
  br i1 %cmp10.not.3.i, label %lor.lhs.false8.3.i.match_opt_prefix.exit_crit_edge, label %lor.lhs.false8.3.i.if.else_crit_edge

lor.lhs.false8.3.i.if.else_crit_edge:             ; preds = %lor.lhs.false8.3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false8.3.i.match_opt_prefix.exit_crit_edge: ; preds = %lor.lhs.false8.3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %match_opt_prefix.exit

for.inc.3.i:                                      ; preds = %for.inc.i78
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %len.0.i)
  %cmp2.4.not.i = icmp eq i32 %len.0.i, 8
  br i1 %cmp2.4.not.i, label %lor.lhs.false.4.thread67.i, label %for.inc.3.i.if.else_crit_edge

for.inc.3.i.if.else_crit_edge:                    ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false.4.thread67.i:                       ; preds = %for.inc.3.i
  %bcmp.468.i = tail call i32 @bcmp(ptr noundef dereferenceable(8) %from.0, ptr noundef nonnull dereferenceable(8) @.str.72, i32 8) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.468.i)
  %tobool.not.469.i = icmp eq i32 %bcmp.468.i, 0
  br i1 %tobool.not.469.i, label %lor.lhs.false.4.thread67.i.if.end12_crit_edge, label %lor.lhs.false.4.thread67.i.if.else_crit_edge

lor.lhs.false.4.thread67.i.if.else_crit_edge:     ; preds = %lor.lhs.false.4.thread67.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

lor.lhs.false.4.thread67.i.if.end12_crit_edge:    ; preds = %lor.lhs.false.4.thread67.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

match_opt_prefix.exit:                            ; preds = %lor.lhs.false8.3.i.match_opt_prefix.exit_crit_edge, %lor.lhs.false8.2.i.match_opt_prefix.exit_crit_edge, %lor.lhs.false8.1.i.match_opt_prefix.exit_crit_edge, %lor.lhs.false8.i.match_opt_prefix.exit_crit_edge
  %i.042.lcssa.i = phi i32 [ 0, %lor.lhs.false8.i.match_opt_prefix.exit_crit_edge ], [ 1, %lor.lhs.false8.1.i.match_opt_prefix.exit_crit_edge ], [ 2, %lor.lhs.false8.2.i.match_opt_prefix.exit_crit_edge ], [ 3, %lor.lhs.false8.3.i.match_opt_prefix.exit_crit_edge ]
  %.lcssa.i = phi i32 [ 7, %lor.lhs.false8.i.match_opt_prefix.exit_crit_edge ], [ 9, %lor.lhs.false8.1.i.match_opt_prefix.exit_crit_edge ], [ 10, %lor.lhs.false8.2.i.match_opt_prefix.exit_crit_edge ], [ 11, %lor.lhs.false8.3.i.match_opt_prefix.exit_crit_edge ]
  %arrayidx9.le.i = getelementptr i8, ptr %from.0, i32 1
  %add.ptr14.i = getelementptr i8, ptr %arrayidx9.le.i, i32 %.lcssa.i
  %opt.i = getelementptr [5 x %struct.anon.259], ptr @tokens, i32 0, i32 %i.042.lcssa.i, i32 2
  %11 = ptrtoint ptr %opt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %opt.i, align 4
  %tobool.not = icmp eq ptr %add.ptr14.i, null
  br i1 %tobool.not, label %match_opt_prefix.exit.if.end12_crit_edge, label %for.cond.preheader

match_opt_prefix.exit.if.end12_crit_edge:         ; preds = %match_opt_prefix.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

for.cond.preheader:                               ; preds = %match_opt_prefix.exit
  %cmp3111 = icmp ult ptr %add.ptr14.i, %arrayidx.i.le
  br i1 %cmp3111, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %q.0113 = phi ptr [ %q.1, %if.end.for.body_crit_edge ], [ %add.ptr14.i, %for.cond.preheader.for.body_crit_edge ]
  %p.0112 = phi ptr [ %incdec.ptr7, %if.end.for.body_crit_edge ], [ %add.ptr14.i, %for.cond.preheader.for.body_crit_edge ]
  %13 = ptrtoint ptr %p.0112 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %p.0112, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 34, i8 %14)
  %cmp4.not = icmp eq i8 %14, 34
  br i1 %cmp4.not, label %for.body.if.end_crit_edge, label %if.then6

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then6:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  %incdec.ptr = getelementptr i8, ptr %q.0113, i32 1
  %15 = ptrtoint ptr %q.0113 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %14, ptr %q.0113, align 1
  br label %if.end

if.end:                                           ; preds = %if.then6, %for.body.if.end_crit_edge
  %q.1 = phi ptr [ %incdec.ptr, %if.then6 ], [ %q.0113, %for.body.if.end_crit_edge ]
  %incdec.ptr7 = getelementptr i8, ptr %p.0112, i32 1
  %exitcond.not = icmp eq ptr %incdec.ptr7, %arrayidx.i.le
  br i1 %exitcond.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %q.0.lcssa = phi ptr [ %add.ptr14.i, %for.cond.preheader.for.end_crit_edge ], [ %q.1, %if.end.for.end_crit_edge ]
  %sub.ptr.lhs.cast = ptrtoint ptr %q.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %add.ptr14.i to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call8 = tail call ptr @kmemdup_nul(ptr noundef nonnull %add.ptr14.i, i32 noundef %sub.ptr.sub, i32 noundef 3264) #23
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %for.end.free_opt_crit_edge, label %for.end.if.end12_crit_edge

for.end.if.end12_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

for.end.free_opt_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_opt

if.end12:                                         ; preds = %for.end.if.end12_crit_edge, %match_opt_prefix.exit.if.end12_crit_edge, %lor.lhs.false.4.thread67.i.if.end12_crit_edge
  %16 = phi i32 [ %12, %match_opt_prefix.exit.if.end12_crit_edge ], [ %12, %for.end.if.end12_crit_edge ], [ 4, %lor.lhs.false.4.thread67.i.if.end12_crit_edge ]
  %arg.2 = phi ptr [ null, %match_opt_prefix.exit.if.end12_crit_edge ], [ %call8, %for.end.if.end12_crit_edge ], [ null, %lor.lhs.false.4.thread67.i.if.end12_crit_edge ]
  %call13 = tail call fastcc i32 @selinux_add_opt(i32 noundef %16, ptr noundef %arg.2, ptr noundef %mnt_opts)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end12.if.end29_crit_edge, label %if.then17, !prof !381

if.end12.if.end29_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

if.then17:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef %arg.2) #23
  br label %free_opt

if.else:                                          ; preds = %lor.lhs.false.4.thread67.i.if.else_crit_edge, %for.inc.3.i.if.else_crit_edge, %lor.lhs.false8.3.i.if.else_crit_edge, %lor.lhs.false.3.i.if.else_crit_edge, %for.inc.2.i.if.else_crit_edge, %if.then6.2.i.if.else_crit_edge, %for.inc.1.i.if.else_crit_edge, %if.then6.1.i.if.else_crit_edge, %if.then6.i.if.else_crit_edge, %opt_len.exit.if.else_crit_edge
  %not.first.0.off0 = xor i1 %first.0.off0, true
  %from.1.idx = sext i1 %not.first.0.off0 to i32
  %from.1 = getelementptr i8, ptr %from.0, i32 %from.1.idx
  %inc = zext i1 %not.first.0.off0 to i32
  %len.0 = add i32 %len.0.i, %inc
  %cmp24.not = icmp eq ptr %to.0, %from.1
  br i1 %cmp24.not, label %if.else.if.end27_crit_edge, label %if.then26

if.else.if.end27_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.then26:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  %17 = call ptr @memmove(ptr %to.0, ptr %from.1, i32 %len.0)
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.else.if.end27_crit_edge
  %add.ptr28 = getelementptr i8, ptr %to.0, i32 %len.0
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.end12.if.end29_crit_edge
  %from.2 = phi ptr [ %from.1, %if.end27 ], [ %from.0, %if.end12.if.end29_crit_edge ]
  %to.1 = phi ptr [ %add.ptr28, %if.end27 ], [ %to.0, %if.end12.if.end29_crit_edge ]
  %first.1.off0 = phi i1 [ false, %if.end27 ], [ %first.0.off0, %if.end12.if.end29_crit_edge ]
  %len.1 = phi i32 [ %len.0, %if.end27 ], [ %len.0.i, %if.end12.if.end29_crit_edge ]
  %arrayidx = getelementptr i8, ptr %from.2, i32 %len.1
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx, align 1
  %tobool30.not = icmp eq i8 %19, 0
  br i1 %tobool30.not, label %while.end, label %cleanup34

cleanup34:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  %add = add i32 %len.1, 1
  %add.ptr33 = getelementptr i8, ptr %from.2, i32 %add
  br label %while.cond

while.end:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  %20 = ptrtoint ptr %to.1 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %to.1, align 1
  br label %cleanup42

free_opt:                                         ; preds = %if.then17, %for.end.free_opt_crit_edge
  %rc.1.ph = phi i32 [ %call13, %if.then17 ], [ -12, %for.end.free_opt_crit_edge ]
  %21 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_opts, align 4
  %tobool39.not = icmp eq ptr %22, null
  br i1 %tobool39.not, label %free_opt.cleanup42_crit_edge, label %if.then40

free_opt.cleanup42_crit_edge:                     ; preds = %free_opt
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup42

if.then40:                                        ; preds = %free_opt
  call void @__sanitizer_cov_trace_pc() #25
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  tail call void @kfree(ptr noundef %24) #23
  %context.i = getelementptr inbounds %struct.selinux_mnt_opts, ptr %22, i32 0, i32 1
  %25 = ptrtoint ptr %context.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %context.i, align 4
  tail call void @kfree(ptr noundef %26) #23
  %rootcontext.i = getelementptr inbounds %struct.selinux_mnt_opts, ptr %22, i32 0, i32 2
  %27 = ptrtoint ptr %rootcontext.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rootcontext.i, align 4
  tail call void @kfree(ptr noundef %28) #23
  %defcontext.i = getelementptr inbounds %struct.selinux_mnt_opts, ptr %22, i32 0, i32 3
  %29 = ptrtoint ptr %defcontext.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %defcontext.i, align 4
  tail call void @kfree(ptr noundef %30) #23
  tail call void @kfree(ptr noundef nonnull %22) #23
  %31 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %mnt_opts, align 4
  br label %cleanup42

cleanup42:                                        ; preds = %if.then40, %free_opt.cleanup42_crit_edge, %while.end
  %retval.0 = phi i32 [ 0, %while.end ], [ %rc.1.ph, %if.then40 ], [ %rc.1.ph, %free_opt.cleanup42_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_policy_clone(ptr noundef, ptr noundef) #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @selinux_msg_msg_alloc_security(ptr nocapture noundef readonly %msg) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %security.i = getelementptr inbounds %struct.msg_msg, ptr %msg, i32 0, i32 4
  %0 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %security.i, align 4
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 5), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %3 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 3, ptr %add.ptr.i, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_msg_queue_alloc_security(ptr nocapture noundef readonly %msq) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 28, ptr %add.ptr.i, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 99
  %20 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %21, i32 0, i32 23
  %22 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %security.i.i.i, align 4
  %24 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %23, i32 %24
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sid.i.i, align 4
  %sid.i6 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %27 = ptrtoint ptr %sid.i6 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %sid.i6, align 4
  %28 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %msq, i32 0, i32 3
  %29 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %31 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %u, align 4
  %32 = load i32, ptr %sid.i6, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %32, i16 noundef zeroext 28, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_shm_alloc_security(ptr nocapture noundef readonly %shp) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 29, ptr %add.ptr.i, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 99
  %20 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %21, i32 0, i32 23
  %22 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %security.i.i.i, align 4
  %24 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %23, i32 %24
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sid.i.i, align 4
  %sid.i6 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %27 = ptrtoint ptr %sid.i6 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %sid.i6, align 4
  %28 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %shp, i32 0, i32 3
  %29 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %31 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %u, align 4
  %32 = load i32, ptr %sid.i6, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %32, i16 noundef zeroext 29, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sb_alloc_security(ptr nocapture noundef readonly %sb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 17
  %0 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_security.i, align 4
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %lock = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 5
  tail call void @__mutex_init(ptr noundef %lock, ptr noundef nonnull @.str.115, ptr noundef nonnull @selinux_sb_alloc_security.__key) #23
  %isec_head = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 6
  %3 = ptrtoint ptr %isec_head to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %isec_head, ptr %isec_head, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %isec_head, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %isec_head, ptr %prev.i, align 4
  %isec_lock = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 7
  tail call void @__raw_spin_lock_init(ptr noundef %isec_lock, ptr noundef nonnull @.str.117, ptr noundef nonnull @selinux_sb_alloc_security.__key.116, i16 noundef signext 3) #23
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 3, ptr %add.ptr.i, align 4
  %def_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %6 = ptrtoint ptr %def_sid to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 5, ptr %def_sid, align 4
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %7 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 3, ptr %mntpoint_sid, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_alloc_security(ptr noundef %inode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %0 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

entry.selinux_inode.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %entry.selinux_inode.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end.i ], [ null, %entry.selinux_inode.exit_crit_edge ]
  %3 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 23
  %9 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i, align 4
  %lock = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 6
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.118, ptr noundef nonnull @selinux_inode_alloc_security.__key, i16 noundef signext 3) #23
  %list = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 1
  %14 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %list, ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 1, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %list, ptr %prev.i, align 4
  %16 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %inode, ptr %retval.0.i, align 4
  %sid4 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %17 = ptrtoint ptr %sid4 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 3, ptr %sid4, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %18 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 7, ptr %sclass, align 4
  %task_sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 2
  %19 = ptrtoint ptr %task_sid to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %13, ptr %task_sid, align 4
  %initialized = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 5
  %20 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %initialized, align 2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sem_alloc_security(ptr nocapture noundef readonly %sma) #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %security.i = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 10
  %12 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i, align 16
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 4), align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %14
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 26, ptr %add.ptr.i, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 99
  %20 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %21, i32 0, i32 23
  %22 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %security.i.i.i, align 4
  %24 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %23, i32 %24
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sid.i.i, align 4
  %sid.i6 = getelementptr inbounds %struct.ipc_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %27 = ptrtoint ptr %sid.i6 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %sid.i6, align 4
  %28 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 4, ptr %ad, align 4
  %key = getelementptr inbounds %struct.kern_ipc_perm, ptr %sma, i32 0, i32 3
  %29 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %key, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %31 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %u, align 4
  %32 = load i32, ptr %sid.i6, align 4
  %call3 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %32, i16 noundef zeroext 26, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_secid_to_secctx(i32 noundef %secid, ptr noundef %secdata, ptr noundef %seclen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %secid, ptr noundef %secdata, ptr noundef %seclen) #23
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_inode_getsecctx(ptr noundef %inode, ptr nocapture noundef writeonly %ctx, ptr nocapture noundef writeonly %ctxlen) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @selinux_inode_getsecurity(ptr noundef nonnull @init_user_ns, ptr noundef %inode, ptr noundef nonnull @.str, ptr noundef %ctx, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %ctxlen to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %call, ptr %ctxlen, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_sk_alloc_security(ptr nocapture noundef writeonly %sk, i32 noundef %family, i32 noundef %priority) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %or.i = or i32 %priority, 256
  %and.i.i.i = and i32 %priority, 4194321
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i19.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i19.i.i, label %entry.kzalloc.exit_crit_edge, label %if.end.i20.i.i, !prof !381

entry.kzalloc.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %kzalloc.exit

if.end.i20.i.i:                                   ; preds = %entry
  %and2.i.i.i = and i32 %priority, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %if.end5.i.i.i, label %if.end.i20.i.i.kzalloc.exit_crit_edge

if.end.i20.i.i.kzalloc.exit_crit_edge:            ; preds = %if.end.i20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %kzalloc.exit

if.end5.i.i.i:                                    ; preds = %if.end.i20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and6.i.i.i = and i32 %priority, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %and6.i.i.i, 0
  %..i.i.i = select i1 %tobool7.not.i.i.i, i32 1, i32 2
  br label %kzalloc.exit

kzalloc.exit:                                     ; preds = %if.end5.i.i.i, %if.end.i20.i.i.kzalloc.exit_crit_edge, %entry.kzalloc.exit_crit_edge
  %retval.0.i21.i.i = phi i32 [ 0, %entry.kzalloc.exit_crit_edge ], [ 3, %if.end.i20.i.i.kzalloc.exit_crit_edge ], [ %..i.i.i, %if.end5.i.i.i ]
  %arrayidx6.i.i = getelementptr [4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 %retval.0.i21.i.i, i32 7
  %0 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx6.i.i, align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef %or.i, i32 noundef 24) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %kzalloc.exit.cleanup_crit_edge, label %if.end

kzalloc.exit.cleanup_crit_edge:                   ; preds = %kzalloc.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %kzalloc.exit
  call void @__sanitizer_cov_trace_pc() #25
  %peer_sid = getelementptr inbounds %struct.sk_security_struct, ptr %call7.i.i, i32 0, i32 3
  %2 = ptrtoint ptr %peer_sid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 3, ptr %peer_sid, align 4
  %sid = getelementptr inbounds %struct.sk_security_struct, ptr %call7.i.i, i32 0, i32 2
  %3 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 3, ptr %sid, align 8
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %call7.i.i, i32 0, i32 4
  %4 = ptrtoint ptr %sclass to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 15, ptr %sclass, align 8
  tail call void @selinux_netlbl_sk_security_reset(ptr noundef nonnull %call7.i.i) #23
  %sk_security = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 73
  %5 = ptrtoint ptr %sk_security to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i, ptr %sk_security, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %kzalloc.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %kzalloc.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_tun_dev_alloc_security(ptr nocapture noundef writeonly %security) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 4) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %call7.i.i, align 8
  %13 = ptrtoint ptr %security to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call7.i.i, ptr %security, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_ib_alloc_security(ptr nocapture noundef writeonly %ib_sec) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 4) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %call7.i.i, align 8
  %13 = ptrtoint ptr %ib_sec to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call7.i.i, ptr %ib_sec, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_policy_alloc(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_state_alloc(ptr noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_state_alloc_acquire(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_key_alloc(ptr nocapture noundef writeonly %k, ptr nocapture noundef readonly %cred, i32 noundef %flags) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 4) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %security.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %1 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %security.i, align 4
  %3 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %2, i32 %3
  %keycreate_sid = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %4 = ptrtoint ptr %keycreate_sid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %keycreate_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %if.else, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %sid5 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %6 = ptrtoint ptr %sid5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid5, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end.if.end7_crit_edge
  %storemerge = phi i32 [ %7, %if.else ], [ %5, %if.end.if.end7_crit_edge ]
  %8 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %storemerge, ptr %call7.i.i, align 8
  %security = getelementptr inbounds %struct.key, ptr %k, i32 0, i32 6
  %9 = ptrtoint ptr %security to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call7.i.i, ptr %security, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end7 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_audit_rule_init(i32 noundef, i32 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_bpf_map_alloc(ptr nocapture noundef writeonly %map) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 4) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %call7.i.i, align 8
  %security = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 2
  %13 = ptrtoint ptr %security to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call7.i.i, ptr %security, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_bpf_prog_alloc(ptr nocapture noundef writeonly %aux) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 4) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %call7.i.i, align 8
  %security = getelementptr inbounds %struct.bpf_prog_aux, ptr %aux, i32 0, i32 47
  %13 = ptrtoint ptr %security to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call7.i.i, ptr %security, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @selinux_perf_event_alloc(ptr nocapture noundef writeonly %event) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 4) #30
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %call7.i.i, align 8
  %security = getelementptr inbounds %struct.perf_event, ptr %event, i32 0, i32 69
  %13 = ptrtoint ptr %security to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call7.i.i, ptr %security, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @task_sid_obj(ptr noundef %task) unnamed_addr #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !386
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 696, ptr noundef nonnull @.str.85) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 98
  %4 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %real_cred, align 4
  %call = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b10 = load i1, ptr @task_sid_obj.__warned, align 1
  br i1 %.b10, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @task_sid_obj.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 240, ptr noundef nonnull @.str.83) #23
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %call.i11 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i11, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i14

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i14:                                ; preds = %do.end7
  %call1.i12 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i12)
  %tobool.not.i13 = icmp eq i32 %call1.i12, 0
  br i1 %tobool.not.i13, label %land.lhs.true.i14.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i16

land.lhs.true.i14.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i14
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i16:                               ; preds = %land.lhs.true.i14
  %.b4.i15 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i15, label %land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge, label %if.then.i17

land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i16
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i17:                                      ; preds = %land.lhs.true2.i16
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 724, ptr noundef nonnull @.str.86) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i17, %land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i14.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !387
  %11 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i18 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i18 to ptr
  %preempt_count.i.i.i.i19 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i19 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i19, align 4
  %sub.i.i.i = add i32 %14, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i19, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  ret i32 %10
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @avc_has_perm_noaudit(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @slow_avc_audit(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dentry_has_perm(ptr noundef %cred, ptr noundef %dentry, i32 noundef %av) unnamed_addr #16 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %2 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %3 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 10, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dentry, ptr %u, align 4
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %5 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i.i, label %entry.selinux_inode.exit.i_crit_edge, label %if.end.i.i, !prof !380

entry.selinux_inode.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %7 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 %7
  br label %selinux_inode.exit.i

selinux_inode.exit.i:                             ; preds = %if.end.i.i, %entry.selinux_inode.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %entry.selinux_inode.exit.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %8 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.i.not.i = icmp eq i8 %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i, label %selinux_inode.exit.i.__inode_security_revalidate.exit_crit_edge, label %land.lhs.true.i

selinux_inode.exit.i.__inode_security_revalidate.exit_crit_edge: ; preds = %selinux_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit

land.lhs.true.i:                                  ; preds = %selinux_inode.exit.i
  %initialized.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 5
  %9 = ptrtoint ptr %initialized.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %initialized.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %10)
  %cmp.not.i = icmp eq i8 %10, 1
  br i1 %cmp.not.i, label %land.lhs.true.i.__inode_security_revalidate.exit_crit_edge, label %if.end12.i

land.lhs.true.i.__inode_security_revalidate.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit

if.end12.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %1, ptr noundef %dentry) #23
  br label %__inode_security_revalidate.exit

__inode_security_revalidate.exit:                 ; preds = %if.end12.i, %land.lhs.true.i.__inode_security_revalidate.exit_crit_edge, %selinux_inode.exit.i.__inode_security_revalidate.exit_crit_edge
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %cred) #23
  br i1 %call.i.i, label %if.then.i.i, label %__inode_security_revalidate.exit.__validate_creds.exit.i_crit_edge, !prof !380

__inode_security_revalidate.exit.__validate_creds.exit.i_crit_edge: ; preds = %__inode_security_revalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %__inode_security_revalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %cred, ptr noundef nonnull @.str.2, i32 noundef 1641) #23
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %__inode_security_revalidate.exit.__validate_creds.exit.i_crit_edge
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 4
  %11 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %12, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %__validate_creds.exit.i.inode_has_perm.exit_crit_edge, !prof !381

__validate_creds.exit.i.inode_has_perm.exit_crit_edge: ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_has_perm.exit

if.end.i:                                         ; preds = %__validate_creds.exit.i
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %13 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %security.i.i.i, align 4
  %15 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %14, i32 %15
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sid.i.i, align 4
  %18 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i7 = icmp eq ptr %19, null
  br i1 %tobool.not.i.i7, label %if.end.i.selinux_inode.exit.i11_crit_edge, label %if.end.i.i9, !prof !380

if.end.i.selinux_inode.exit.i11_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i11

if.end.i.i9:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %20 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i8 = getelementptr i8, ptr %19, i32 %20
  br label %selinux_inode.exit.i11

selinux_inode.exit.i11:                           ; preds = %if.end.i.i9, %if.end.i.selinux_inode.exit.i11_crit_edge
  %retval.0.i.i10 = phi ptr [ %add.ptr.i.i8, %if.end.i.i9 ], [ null, %if.end.i.selinux_inode.exit.i11_crit_edge ]
  %sid4.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i10, i32 0, i32 3
  %21 = ptrtoint ptr %sid4.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sid4.i, align 4
  %sclass.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i10, i32 0, i32 4
  %23 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %sclass.i, align 4
  %call5.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %17, i32 noundef %22, i16 noundef zeroext %24, i32 noundef %av, ptr noundef nonnull %ad) #23
  br label %inode_has_perm.exit

inode_has_perm.exit:                              ; preds = %selinux_inode.exit.i11, %__validate_creds.exit.i.inode_has_perm.exit_crit_edge
  %retval.0.i12 = phi i32 [ %call5.i, %selinux_inode.exit.i11 ], [ 0, %__validate_creds.exit.i.inode_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0.i12
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @creds_are_invalid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__invalid_creds(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_nlmsg_lookup(i16 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_get_allow_unknown(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ptrace_parent_sid() unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !386
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 696, ptr noundef nonnull @.str.85) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %ptrace.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %ptrace.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ptrace.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i4 = icmp eq i32 %9, 0
  br i1 %tobool.not.i4, label %rcu_read_lock.exit.if.end_crit_edge, label %if.then.i6, !prof !381

rcu_read_lock.exit.if.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then.i6:                                       ; preds = %rcu_read_lock.exit
  %parent.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 72
  %10 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %parent.i, align 8
  %call.i5 = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i5)
  %tobool4.not.i = icmp eq i32 %call.i5, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i7, label %if.then.i6.ptrace_parent.exit_crit_edge

if.then.i6.ptrace_parent.exit_crit_edge:          ; preds = %if.then.i6
  call void @__sanitizer_cov_trace_pc() #25
  br label %ptrace_parent.exit

land.lhs.true.i7:                                 ; preds = %if.then.i6
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i7.ptrace_parent.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i7.ptrace_parent.exit_crit_edge:    ; preds = %land.lhs.true.i7
  call void @__sanitizer_cov_trace_pc() #25
  br label %ptrace_parent.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i7
  %.b15.i = load i1, ptr @ptrace_parent.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.ptrace_parent.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.ptrace_parent.exit_crit_edge:    ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %ptrace_parent.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @ptrace_parent.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 127, ptr noundef nonnull @.str.83) #23
  br label %ptrace_parent.exit

ptrace_parent.exit:                               ; preds = %if.then9.i, %land.lhs.true7.i.ptrace_parent.exit_crit_edge, %land.lhs.true.i7.ptrace_parent.exit_crit_edge, %if.then.i6.ptrace_parent.exit_crit_edge
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %ptrace_parent.exit.if.end_crit_edge, label %if.then

ptrace_parent.exit.if.end_crit_edge:              ; preds = %ptrace_parent.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %ptrace_parent.exit
  call void @__sanitizer_cov_trace_pc() #25
  %call2 = tail call fastcc i32 @task_sid_obj(ptr noundef nonnull %11)
  br label %if.end

if.end:                                           ; preds = %if.then, %ptrace_parent.exit.if.end_crit_edge, %rcu_read_lock.exit.if.end_crit_edge
  %sid.0 = phi i32 [ %call2, %if.then ], [ 0, %ptrace_parent.exit.if.end_crit_edge ], [ 0, %rcu_read_lock.exit.if.end_crit_edge ]
  %call.i8 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i8, label %if.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i11

if.end.rcu_read_unlock.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i11:                                ; preds = %if.end
  %call1.i9 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i9)
  %tobool.not.i10 = icmp eq i32 %call1.i9, 0
  br i1 %tobool.not.i10, label %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i13

land.lhs.true.i11.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i11
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i13:                               ; preds = %land.lhs.true.i11
  %.b4.i12 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i12, label %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, label %if.then.i14

land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i14:                                      ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.84, i32 noundef 724, ptr noundef nonnull @.str.86) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i14, %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, %if.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !387
  %12 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i.i.i15 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i15 to ptr
  %preempt_count.i.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i16, align 4
  %sub.i.i.i = add i32 %15, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i16, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  ret i32 %sid.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mnt_may_suid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_bounded_transition(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @update_rlimit_cpu(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_current_tty() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @tty_kref_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @no_tty() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iterate_fd(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @match_file(ptr noundef %p, ptr noundef %file, i32 noundef %fd) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %0 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %f_mode.i, align 8
  %and.i = shl i32 %1, 1
  %2 = and i32 %and.i, 2
  %and2.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %entry.file_to_av.exit_crit_edge, label %if.then4.i

entry.file_to_av.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %file_to_av.exit

if.then4.i:                                       ; preds = %entry
  %f_flags.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %3 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %f_flags.i, align 4
  %and5.i = and i32 %4, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %or8.i = or i32 %2, 512
  br label %file_to_av.exit

if.else.i:                                        ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #25
  %or9.i = or i32 %2, 4
  br label %file_to_av.exit

file_to_av.exit:                                  ; preds = %if.else.i, %if.then7.i, %entry.file_to_av.exit_crit_edge
  %av.1.i = phi i32 [ %or8.i, %if.then7.i ], [ %or9.i, %if.else.i ], [ %2, %entry.file_to_av.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %av.1.i)
  %tobool12.not.i = icmp eq i32 %av.1.i, 0
  %spec.store.select.i = select i1 %tobool12.not.i, i32 1, i32 %av.1.i
  %call1 = tail call fastcc i32 @file_has_perm(ptr noundef %p, ptr noundef %file, i32 noundef %spec.store.select.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  %add = add i32 %fd, 1
  %spec.select = select i1 %tobool.not, i32 0, i32 %add
  ret i32 %spec.select
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dentry_open(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @replace_fd(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @file_has_perm(ptr noundef %cred, ptr noundef %file, i32 noundef %av) unnamed_addr #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %0 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_security.i, align 8
  %2 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %2
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %3 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_inode.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %5 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %security.i.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 12, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %12 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %file, ptr %u, align 4
  %13 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %14)
  %cmp.not = icmp eq i32 %10, %14
  br i1 %cmp.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then:                                          ; preds = %entry
  %call5 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %14, i16 noundef zeroext 9, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.then.if.end7_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.end7:                                          ; preds = %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  %15 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %security.i.i, align 4
  %17 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i33 = getelementptr i8, ptr %16, i32 %17
  %sid.i34 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i33, i32 0, i32 1
  %18 = ptrtoint ptr %sid.i34 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sid.i34, align 4
  %f_op.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 3
  %20 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %f_op.i, align 4
  %cmp.i = icmp eq ptr %21, @bpf_map_fops
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end7
  %private_data.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %22 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %private_data.i, align 4
  %security.i = getelementptr inbounds %struct.bpf_map, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %security.i, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %f_mode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %28 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %f_mode.i, align 8
  %and.i.i = shl i32 %29, 1
  %30 = and i32 %and.i.i, 6
  %call2.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %19, i32 noundef %27, i16 noundef zeroext 91, i32 noundef %30, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %if.then.i.if.end12_crit_edge, label %if.then.i.cleanup_crit_edge

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.i.if.end12_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.else.i:                                        ; preds = %if.end7
  %cmp5.i = icmp eq ptr %21, @bpf_prog_fops
  br i1 %cmp5.i, label %if.then6.i, label %if.else.i.if.end12_crit_edge

if.else.i.if.end12_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.then6.i:                                       ; preds = %if.else.i
  %private_data7.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %31 = ptrtoint ptr %private_data7.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %private_data7.i, align 4
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %32, i32 0, i32 10
  %33 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %aux.i, align 4
  %security8.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %34, i32 0, i32 47
  %35 = ptrtoint ptr %security8.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %security8.i, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 4
  %call10.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %19, i32 noundef %38, i16 noundef zeroext 91, i32 noundef 16, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.then6.i.if.end12_crit_edge, label %if.then6.i.cleanup_crit_edge

if.then6.i.cleanup_crit_edge:                     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then6.i.if.end12_crit_edge:                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.end12:                                         ; preds = %if.then6.i.if.end12_crit_edge, %if.else.i.if.end12_crit_edge, %if.then.i.if.end12_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %av)
  %tobool13.not = icmp eq i32 %av, 0
  br i1 %tobool13.not, label %if.end12.cleanup_crit_edge, label %if.then14

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then14:                                        ; preds = %if.end12
  %call.i.i = call zeroext i1 @creds_are_invalid(ptr noundef %cred) #23
  br i1 %call.i.i, label %if.then.i.i, label %if.then14.__validate_creds.exit.i_crit_edge, !prof !380

if.then14.__validate_creds.exit.i_crit_edge:      ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  call void @__invalid_creds(ptr noundef %cred, ptr noundef nonnull @.str.2, i32 noundef 1641) #23
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %if.then14.__validate_creds.exit.i_crit_edge
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 4
  %39 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %40, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i35 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i35, label %if.end.i, label %__validate_creds.exit.i.cleanup_crit_edge, !prof !381

__validate_creds.exit.i.cleanup_crit_edge:        ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end.i:                                         ; preds = %__validate_creds.exit.i
  %41 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %security.i.i, align 4
  %43 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %42, i32 %43
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %44 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %sid.i.i, align 4
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 10
  %46 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %47, null
  br i1 %tobool.not.i.i, label %if.end.i.selinux_inode.exit.i_crit_edge, label %if.end.i.i, !prof !380

if.end.i.selinux_inode.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %48 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i36 = getelementptr i8, ptr %47, i32 %48
  br label %selinux_inode.exit.i

selinux_inode.exit.i:                             ; preds = %if.end.i.i, %if.end.i.selinux_inode.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i36, %if.end.i.i ], [ null, %if.end.i.selinux_inode.exit.i_crit_edge ]
  %sid4.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 3
  %49 = ptrtoint ptr %sid4.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sid4.i, align 4
  %sclass.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 4
  %51 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %sclass.i, align 4
  %call5.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %45, i32 noundef %50, i16 noundef zeroext %52, i32 noundef %av, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %selinux_inode.exit.i, %__validate_creds.exit.i.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.then6.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.then.cleanup_crit_edge ], [ 0, %if.end12.cleanup_crit_edge ], [ %call5.i, %selinux_inode.exit.i ], [ 0, %__validate_creds.exit.i.cleanup_crit_edge ], [ %call10.i, %if.then6.i.cleanup_crit_edge ], [ %call2.i, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @clear_itimer() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_sigqueue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_signal_handlers(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @recalc_sigpending() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up_parent(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_putc(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @show_sid(ptr noundef %m, i32 noundef %sid) unnamed_addr #1 align 64 {
entry:
  %context = alloca ptr, align 4
  %len = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context) #23
  %0 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %context, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %len) #23
  %1 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %len, align 4, !annotation !376
  %call = call i32 @security_sid_to_context(ptr noundef nonnull @selinux_state, i32 noundef %sid, ptr noundef nonnull %context, ptr noundef nonnull %len) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end9_crit_edge

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %context, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.end8.critedge.critedge, label %land.rhs

land.rhs:                                         ; preds = %if.then
  %call2 = call ptr @strchr(ptr noundef nonnull %3, i32 noundef 44)
  %tobool3.not = icmp eq ptr %call2, null
  call void @seq_putc(ptr noundef %m, i8 noundef zeroext 61) #23
  br i1 %tobool3.not, label %land.rhs.if.end8.critedge_crit_edge, label %if.then5

land.rhs.if.end8.critedge_crit_edge:              ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8.critedge

if.then5:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  call void @seq_putc(ptr noundef %m, i8 noundef zeroext 34) #23
  %4 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %context, align 4
  %call.i.i = call i32 @strlen(ptr noundef %5) #29
  call void @seq_escape_mem(ptr noundef %m, ptr noundef %5, i32 noundef %call.i.i, i32 noundef 8, ptr noundef nonnull @.str.93) #23
  call void @seq_putc(ptr noundef %m, i8 noundef zeroext 34) #23
  br label %if.end9

if.end8.critedge.critedge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  call void @seq_putc(ptr noundef %m, i8 noundef zeroext 61) #23
  br label %if.end8.critedge

if.end8.critedge:                                 ; preds = %if.end8.critedge.critedge, %land.rhs.if.end8.critedge_crit_edge
  %6 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %context, align 4
  %call.i.i15 = call i32 @strlen(ptr noundef %7) #29
  call void @seq_escape_mem(ptr noundef %m, ptr noundef %7, i32 noundef %call.i.i15, i32 noundef 8, ptr noundef nonnull @.str.93) #23
  br label %if.end9

if.end9:                                          ; preds = %if.end8.critedge, %if.then5, %entry.if.end9_crit_edge
  %8 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %context, align 4
  call void @kfree(ptr noundef %9) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %len) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context) #23
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sid_to_context(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_escape_mem(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @path_has_perm(ptr noundef %cred, ptr nocapture noundef readonly %path, i32 noundef %av) unnamed_addr #16 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %4 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %5 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %6 = ptrtoint ptr %path to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %7 = load i64, ptr %path, align 4
  %8 = ptrtoint ptr %u to i32
  call void @__asan_storeN_noabort(i32 %8, i32 8)
  store i64 %7, ptr %u, align 4
  %i_security.i.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 10
  %9 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %entry.selinux_inode.exit.i_crit_edge, label %if.end.i.i, !prof !380

entry.selinux_inode.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %11 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %11
  br label %selinux_inode.exit.i

selinux_inode.exit.i:                             ; preds = %if.end.i.i, %entry.selinux_inode.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %entry.selinux_inode.exit.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %12 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.i.not.i = icmp eq i8 %12, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i, label %selinux_inode.exit.i.__inode_security_revalidate.exit_crit_edge, label %land.lhs.true.i

selinux_inode.exit.i.__inode_security_revalidate.exit_crit_edge: ; preds = %selinux_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit

land.lhs.true.i:                                  ; preds = %selinux_inode.exit.i
  %initialized.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i, i32 0, i32 5
  %13 = ptrtoint ptr %initialized.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %initialized.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %14)
  %cmp.not.i = icmp eq i8 %14, 1
  br i1 %cmp.not.i, label %land.lhs.true.i.__inode_security_revalidate.exit_crit_edge, label %if.end12.i

land.lhs.true.i.__inode_security_revalidate.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit

if.end12.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %3, ptr noundef %1) #23
  br label %__inode_security_revalidate.exit

__inode_security_revalidate.exit:                 ; preds = %if.end12.i, %land.lhs.true.i.__inode_security_revalidate.exit_crit_edge, %selinux_inode.exit.i.__inode_security_revalidate.exit_crit_edge
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef %cred) #23
  br i1 %call.i.i, label %if.then.i.i, label %__inode_security_revalidate.exit.__validate_creds.exit.i_crit_edge, !prof !380

__inode_security_revalidate.exit.__validate_creds.exit.i_crit_edge: ; preds = %__inode_security_revalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %__inode_security_revalidate.exit
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__invalid_creds(ptr noundef %cred, ptr noundef nonnull @.str.2, i32 noundef 1641) #23
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %__inode_security_revalidate.exit.__validate_creds.exit.i_crit_edge
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 4
  %15 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %16, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %__validate_creds.exit.i.inode_has_perm.exit_crit_edge, !prof !381

__validate_creds.exit.i.inode_has_perm.exit_crit_edge: ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_has_perm.exit

if.end.i:                                         ; preds = %__validate_creds.exit.i
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %22 = ptrtoint ptr %i_security.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_security.i.i, align 4
  %tobool.not.i.i8 = icmp eq ptr %23, null
  br i1 %tobool.not.i.i8, label %if.end.i.selinux_inode.exit.i12_crit_edge, label %if.end.i.i10, !prof !380

if.end.i.selinux_inode.exit.i12_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i12

if.end.i.i10:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %24 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i9 = getelementptr i8, ptr %23, i32 %24
  br label %selinux_inode.exit.i12

selinux_inode.exit.i12:                           ; preds = %if.end.i.i10, %if.end.i.selinux_inode.exit.i12_crit_edge
  %retval.0.i.i11 = phi ptr [ %add.ptr.i.i9, %if.end.i.i10 ], [ null, %if.end.i.selinux_inode.exit.i12_crit_edge ]
  %sid4.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i11, i32 0, i32 3
  %25 = ptrtoint ptr %sid4.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sid4.i, align 4
  %sclass.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i11, i32 0, i32 4
  %27 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %sclass.i, align 4
  %call5.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %26, i16 noundef zeroext %28, i32 noundef %av, ptr noundef nonnull %ad) #23
  br label %inode_has_perm.exit

inode_has_perm.exit:                              ; preds = %selinux_inode.exit.i12, %__validate_creds.exit.i.inode_has_perm.exit_crit_edge
  %retval.0.i13 = phi i32 [ %call5.i, %selinux_inode.exit.i12 ], [ 0, %__validate_creds.exit.i.inode_has_perm.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0.i13
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_determine_inode_label(ptr nocapture noundef readonly %tsec, ptr noundef %dir, ptr noundef %name, i16 noundef zeroext %tclass, ptr noundef %_new_isid) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_security.i, align 4
  %4 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 %4
  %flags = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 4
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %flags, align 2
  %7 = and i16 %6, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not = icmp eq i16 %7, 0
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %behavior = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 3
  %8 = ptrtoint ptr %behavior to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %behavior, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %9)
  %cmp = icmp eq i16 %9, 6
  br i1 %cmp, label %if.then, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  %mntpoint_sid = getelementptr inbounds %struct.superblock_security_struct, ptr %add.ptr.i, i32 0, i32 2
  %10 = ptrtoint ptr %mntpoint_sid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mntpoint_sid, align 4
  br label %if.end15

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %12 = and i16 %6, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool6.not = icmp eq i16 %12, 0
  br i1 %tobool6.not, label %if.else.if.else11_crit_edge, label %land.lhs.true7

if.else.if.else11_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else11

land.lhs.true7:                                   ; preds = %if.else
  %create_sid = getelementptr inbounds %struct.task_security_struct, ptr %tsec, i32 0, i32 3
  %13 = ptrtoint ptr %create_sid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %create_sid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool8.not = icmp eq i32 %14, 0
  br i1 %tobool8.not, label %land.lhs.true7.if.else11_crit_edge, label %land.lhs.true7.if.end15_crit_edge

land.lhs.true7.if.end15_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15

land.lhs.true7.if.else11_crit_edge:               ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else11

if.else11:                                        ; preds = %land.lhs.true7.if.else11_crit_edge, %if.else.if.else11_crit_edge
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 10
  %15 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %16, null
  br i1 %tobool.not.i.i.i, label %if.else11.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.else11.selinux_inode.exit.i.i_crit_edge:       ; preds = %if.else11
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.else11
  call void @__sanitizer_cov_trace_pc() #25
  %17 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %16, i32 %17
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.else11.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.else11.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %18 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.i.not.i.i = icmp eq i8 %18, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %19 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %20)
  %cmp.not.i.i = icmp eq i8 %20, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %dir, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %21 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %23 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 %23
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %sid = getelementptr inbounds %struct.task_security_struct, ptr %tsec, i32 0, i32 1
  %24 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sid, align 4
  %sid13 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %26 = ptrtoint ptr %sid13 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sid13, align 4
  %call14 = tail call i32 @security_transition_sid(ptr noundef nonnull @selinux_state, i32 noundef %25, i32 noundef %27, i16 noundef zeroext %tclass, ptr noundef %name, ptr noundef %_new_isid) #23
  br label %cleanup

if.end15:                                         ; preds = %land.lhs.true7.if.end15_crit_edge, %if.then
  %storemerge = phi i32 [ %11, %if.then ], [ %14, %land.lhs.true7.if.end15_crit_edge ]
  %28 = ptrtoint ptr %_new_isid to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %storemerge, ptr %_new_isid, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %inode_security.exit
  %retval.0 = phi i32 [ 0, %if.end15 ], [ %call14, %inode_security.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sid_to_context_force(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @may_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %tclass) unnamed_addr #1 align 64 {
entry:
  %newsid = alloca i32, align 4
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %security.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %newsid) #23
  %9 = ptrtoint ptr %newsid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %newsid, align 4, !annotation !376
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %10 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 10
  %11 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i.i, label %entry.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

entry.selinux_inode.exit.i.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %13 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %12, i32 %13
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %entry.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %entry.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %14 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.i.not.i.i = icmp eq i8 %14, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %15 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %16)
  %cmp.not.i.i = icmp eq i8 %16, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %dir, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %17 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %19 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i = getelementptr i8, ptr %18, i32 %19
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %i_sb = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %20 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %i_sb, align 4
  %s_security.i = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 17
  %22 = ptrtoint ptr %s_security.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %s_security.i, align 4
  %24 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 3), align 4
  %add.ptr.i34 = getelementptr i8, ptr %23, i32 %24
  %sid4 = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i, i32 0, i32 1
  %25 = ptrtoint ptr %sid4 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sid4, align 4
  %27 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 10, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %28 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %dentry, ptr %u, align 4
  %sid5 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %29 = ptrtoint ptr %sid5 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sid5, align 4
  %call6 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %26, i32 noundef %30, i16 noundef zeroext 8, i32 noundef 301989888, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end, label %inode_security.exit.cleanup_crit_edge

inode_security.exit.cleanup_crit_edge:            ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %inode_security.exit
  %d_name = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call7 = call fastcc i32 @selinux_determine_inode_label(ptr noundef %add.ptr.i, ptr noundef %dir, ptr noundef %d_name, i16 noundef zeroext %tclass, ptr noundef nonnull %newsid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %31 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %newsid, align 4
  %call11 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %26, i32 noundef %32, i16 noundef zeroext %tclass, i32 noundef 8, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  %33 = ptrtoint ptr %newsid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %newsid, align 4
  %35 = ptrtoint ptr %add.ptr.i34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %add.ptr.i34, align 4
  %call16 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %34, i32 noundef %36, i16 noundef zeroext 6, i32 noundef 64, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end10.cleanup_crit_edge, %if.end.cleanup_crit_edge, %inode_security.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call16, %if.end14 ], [ %call6, %inode_security.exit.cleanup_crit_edge ], [ %call7, %if.end.cleanup_crit_edge ], [ %call11, %if.end10.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %newsid) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @may_link(ptr noundef %dir, ptr noundef %dentry, i32 noundef %kind) unnamed_addr #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 10
  %12 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i.i, label %entry.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

entry.selinux_inode.exit.i.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %14 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %13, i32 %14
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %entry.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %entry.selinux_inode.exit.i.i_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %15 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i.not.i.i = icmp eq i8 %15, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %16 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %17)
  %cmp.not.i.i = icmp eq i8 %17, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %dir, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %18 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %20 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i25 = getelementptr i8, ptr %19, i32 %20
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i25, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %21 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %d_inode.i.i, align 8
  %i_security.i.i.i26 = getelementptr inbounds %struct.inode, ptr %22, i32 0, i32 10
  %23 = ptrtoint ptr %i_security.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %i_security.i.i.i26, align 4
  %tobool.not.i.i.i27 = icmp eq ptr %24, null
  br i1 %tobool.not.i.i.i27, label %inode_security.exit.selinux_inode.exit.i.i32_crit_edge, label %if.end.i.i.i29, !prof !380

inode_security.exit.selinux_inode.exit.i.i32_crit_edge: ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i32

if.end.i.i.i29:                                   ; preds = %inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  %25 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i28 = getelementptr i8, ptr %24, i32 %25
  br label %selinux_inode.exit.i.i32

selinux_inode.exit.i.i32:                         ; preds = %if.end.i.i.i29, %inode_security.exit.selinux_inode.exit.i.i32_crit_edge
  %retval.0.i.i.i30 = phi ptr [ %add.ptr.i.i.i28, %if.end.i.i.i29 ], [ null, %inode_security.exit.selinux_inode.exit.i.i32_crit_edge ]
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %26 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.i.not.i.i31 = icmp eq i8 %26, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i31, label %selinux_inode.exit.i.i32.__inode_security_revalidate.exit.i39_crit_edge, label %land.lhs.true.i.i35

selinux_inode.exit.i.i32.__inode_security_revalidate.exit.i39_crit_edge: ; preds = %selinux_inode.exit.i.i32
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i39

land.lhs.true.i.i35:                              ; preds = %selinux_inode.exit.i.i32
  %initialized.i.i33 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i30, i32 0, i32 5
  %27 = ptrtoint ptr %initialized.i.i33 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %initialized.i.i33, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %28)
  %cmp.not.i.i34 = icmp eq i8 %28, 1
  br i1 %cmp.not.i.i34, label %land.lhs.true.i.i35.__inode_security_revalidate.exit.i39_crit_edge, label %if.end12.i.i37

land.lhs.true.i.i35.__inode_security_revalidate.exit.i39_crit_edge: ; preds = %land.lhs.true.i.i35
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i39

if.end12.i.i37:                                   ; preds = %land.lhs.true.i.i35
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i36 = tail call fastcc i32 @inode_doinit_with_dentry(ptr noundef %22, ptr noundef %dentry) #23
  br label %__inode_security_revalidate.exit.i39

__inode_security_revalidate.exit.i39:             ; preds = %if.end12.i.i37, %land.lhs.true.i.i35.__inode_security_revalidate.exit.i39_crit_edge, %selinux_inode.exit.i.i32.__inode_security_revalidate.exit.i39_crit_edge
  %29 = ptrtoint ptr %i_security.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_security.i.i.i26, align 4
  %tobool.not.i.i38 = icmp eq ptr %30, null
  br i1 %tobool.not.i.i38, label %__inode_security_revalidate.exit.i39.backing_inode_security.exit_crit_edge, label %if.end.i.i41, !prof !380

__inode_security_revalidate.exit.i39.backing_inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i39
  call void @__sanitizer_cov_trace_pc() #25
  br label %backing_inode_security.exit

if.end.i.i41:                                     ; preds = %__inode_security_revalidate.exit.i39
  call void @__sanitizer_cov_trace_pc() #25
  %31 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i40 = getelementptr i8, ptr %30, i32 %31
  br label %backing_inode_security.exit

backing_inode_security.exit:                      ; preds = %if.end.i.i41, %__inode_security_revalidate.exit.i39.backing_inode_security.exit_crit_edge
  %retval.0.i5.i = phi ptr [ %add.ptr.i.i40, %if.end.i.i41 ], [ null, %__inode_security_revalidate.exit.i39.backing_inode_security.exit_crit_edge ]
  %32 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 10, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %33 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %dentry, ptr %u, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kind)
  %tobool.not = icmp eq i32 %kind, 0
  %or = select i1 %tobool.not, i32 301989888, i32 335544320
  %sid3 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %34 = ptrtoint ptr %sid3 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sid3, align 4
  %call4 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %35, i16 noundef zeroext 8, i32 noundef %or, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end, label %backing_inode_security.exit.cleanup_crit_edge

backing_inode_security.exit.cleanup_crit_edge:    ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %backing_inode_security.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %kind)
  %36 = icmp ult i32 %kind, 3
  br i1 %36, label %switch.lookup, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.97, ptr noundef nonnull @.str.98, i32 noundef %kind) #26
  br label %cleanup

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.may_link, i32 0, i32 %kind
  %37 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %37)
  %switch.load = load i32, ptr %switch.gep, align 4
  %sid9 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 3
  %38 = ptrtoint ptr %sid9 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sid9, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i5.i, i32 0, i32 4
  %40 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %sclass, align 4
  %call10 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %39, i16 noundef zeroext %41, i32 noundef %switch.load, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %do.end, %backing_inode_security.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ %call10, %switch.lookup ], [ %call4, %backing_inode_security.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @audit_inode_permission(ptr noundef %inode, i32 noundef %perms, i32 noundef %audited, i32 noundef %denied, i32 noundef %result) unnamed_addr #17 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %i_security.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 10
  %1 = ptrtoint ptr %i_security.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %i_security.i, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.selinux_inode.exit_crit_edge, label %if.end.i, !prof !380

entry.selinux_inode.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %3 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i = getelementptr i8, ptr %2, i32 %3
  br label %selinux_inode.exit

selinux_inode.exit:                               ; preds = %if.end.i, %entry.selinux_inode.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end.i ], [ null, %entry.selinux_inode.exit_crit_edge ]
  %4 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 9, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %5 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %inode, ptr %u, align 4
  %6 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 99
  %10 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %11, i32 0, i32 23
  %12 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %security.i.i, align 4
  %14 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 %14
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %15 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sid.i, align 4
  %sid = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 3
  %17 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sid, align 4
  %sclass = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i, i32 0, i32 4
  %19 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %sclass, align 4
  %call2 = call i32 @slow_avc_audit(ptr noundef nonnull @selinux_state, i32 noundef %16, i32 noundef %18, i16 noundef zeroext %20, i32 noundef %perms, i32 noundef %audited, i32 noundef %denied, i32 noundef %result, ptr noundef nonnull %ad) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %call2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cap_inode_setxattr(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @inode_owner_or_capable(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_context_to_sid(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @has_cap_mac_admin(i1 noundef zeroext %audit) unnamed_addr #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %avd.i = alloca %struct.av_decision, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %cond = select i1 %audit, i32 0, i32 2
  %call2 = tail call i32 @cap_capable(ptr noundef %5, ptr noundef nonnull @init_user_ns, i32 noundef 33, i32 noundef %cond) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %6 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %avd.i) #23
  %7 = getelementptr inbounds %struct.av_decision, ptr %avd.i, i32 0, i32 1
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %8 = call ptr @memset(ptr %avd.i, i32 255, i32 20)
  %9 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %security.i.i.i, align 4
  %11 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %10, i32 %11
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sid.i.i, align 4
  %14 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 3, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %15 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 33, ptr %u.i, align 4
  %call13.i = call i32 @avc_has_perm_noaudit(ptr noundef nonnull @selinux_state, i32 noundef %13, i32 noundef %13, i16 noundef zeroext 54, i32 noundef 2, i32 noundef 0, ptr noundef nonnull %avd.i) #23
  br i1 %audit, label %if.then.i, label %if.end.if.end19.i_crit_edge

if.end.if.end19.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

if.then.i:                                        ; preds = %if.end
  %16 = getelementptr inbounds %struct.av_decision, ptr %avd.i, i32 0, i32 2
  %17 = ptrtoint ptr %avd.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %avd.i, align 4
  %neg.i.i.i = and i32 %18, 2
  %and.i.i.i = xor i32 %neg.i.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %neg.i.i.i)
  %tobool.not.i.i.not.i = icmp eq i32 %neg.i.i.i, 0
  br i1 %tobool.not.i.i.not.i, label %if.then.i.avc_audit_required.exit.i.i_crit_edge, label %if.else.i.i.i, !prof !380

if.then.i.avc_audit_required.exit.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit.i.i

if.else.i.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool10.not.i.i.i = icmp eq i32 %call13.i, 0
  br i1 %tobool10.not.i.i.i, label %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge, label %if.else.i.i.i.avc_audit.exit.i_crit_edge

if.else.i.i.i.avc_audit.exit.i_crit_edge:         ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit.exit.i

if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit_required.exit.i.i

avc_audit_required.exit.i.i:                      ; preds = %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge, %if.then.i.avc_audit_required.exit.i.i_crit_edge
  %auditdeny3.i.sink.i.i = phi ptr [ %16, %if.then.i.avc_audit_required.exit.i.i_crit_edge ], [ %7, %if.else.i.i.i.avc_audit_required.exit.i.i_crit_edge ]
  %19 = ptrtoint ptr %auditdeny3.i.sink.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %auditdeny3.i.sink.i.i, align 4
  %and4.i.i.i = and i32 %20, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and4.i.i.i, 0
  br i1 %tobool.not.i.i, label %avc_audit_required.exit.i.i.if.end19.i_crit_edge, label %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge, !prof !381

avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge: ; preds = %avc_audit_required.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %avc_audit.exit.i

avc_audit_required.exit.i.i.if.end19.i_crit_edge: ; preds = %avc_audit_required.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

avc_audit.exit.i:                                 ; preds = %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge, %if.else.i.i.i.avc_audit.exit.i_crit_edge
  %audited.0.i.i42.i = phi i32 [ %and4.i.i.i, %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge ], [ 2, %if.else.i.i.i.avc_audit.exit.i_crit_edge ]
  %denied.0.i.i41.i = phi i32 [ %and.i.i.i, %avc_audit_required.exit.i.i.avc_audit.exit.i_crit_edge ], [ 2, %if.else.i.i.i.avc_audit.exit.i_crit_edge ]
  %call4.i.i = call i32 @slow_avc_audit(ptr noundef nonnull @selinux_state, i32 noundef %13, i32 noundef %13, i16 noundef zeroext 54, i32 noundef 2, i32 noundef %audited.0.i.i42.i, i32 noundef %denied.0.i.i41.i, i32 noundef %call13.i, ptr noundef nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool17.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool17.not.i, label %avc_audit.exit.i.if.end19.i_crit_edge, label %avc_audit.exit.i.cred_has_capability.exit_crit_edge

avc_audit.exit.i.cred_has_capability.exit_crit_edge: ; preds = %avc_audit.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cred_has_capability.exit

avc_audit.exit.i.if.end19.i_crit_edge:            ; preds = %avc_audit.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19.i

if.end19.i:                                       ; preds = %avc_audit.exit.i.if.end19.i_crit_edge, %avc_audit_required.exit.i.i.if.end19.i_crit_edge, %if.end.if.end19.i_crit_edge
  br label %cred_has_capability.exit

cred_has_capability.exit:                         ; preds = %if.end19.i, %avc_audit.exit.i.cred_has_capability.exit_crit_edge
  %retval.1.i = phi i32 [ %call13.i, %if.end19.i ], [ %call4.i.i, %avc_audit.exit.i.cred_has_capability.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %avd.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %tobool5.not = icmp eq i32 %retval.1.i, 0
  br label %cleanup

cleanup:                                          ; preds = %cred_has_capability.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %entry.cleanup_crit_edge ], [ %tobool5.not, %cred_has_capability.exit ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @audit_log_start(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_format(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_n_untrustedstring(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_end(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_context_to_sid_force(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_validate_transition(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cap_capable(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cap_inode_removexattr(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @prepare_creds() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_xattr_get(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i64 @hashlen_string(ptr noundef, ptr noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_xattr_set(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @avc_policy_seqno(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @avc_has_extended_perms(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @file_map_prot_check(ptr noundef %file, i32 noundef %prot, i32 noundef %shared) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred1, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %security.i.i, align 4
  %8 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %7, i32 %8
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sid.i, align 4
  %11 = load i32, ptr @default_noexec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not = icmp eq i32 %11, 0
  %and = and i32 %prot, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  %or.cond = or i1 %tobool3.not, %tobool.not
  br i1 %or.cond, label %entry.if.end17_crit_edge, label %land.lhs.true4

entry.if.end17_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17

land.lhs.true4:                                   ; preds = %entry
  %tobool5.not = icmp eq ptr %file, null
  br i1 %tobool5.not, label %land.lhs.true4.if.then_crit_edge, label %lor.lhs.false

land.lhs.true4.if.then_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %12 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %f_inode.i, align 8
  %i_flags = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %i_flags, align 4
  %and7 = and i32 %15, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %lor.lhs.false9, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shared)
  %tobool10.not = icmp ne i32 %shared, 0
  %and12 = and i32 %prot, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  %or.cond47 = or i1 %tobool10.not, %tobool13.not
  br i1 %or.cond47, label %lor.lhs.false9.if.then19_crit_edge, label %lor.lhs.false9.if.then_crit_edge

lor.lhs.false9.if.then_crit_edge:                 ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

lor.lhs.false9.if.then19_crit_edge:               ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then19

if.then:                                          ; preds = %lor.lhs.false9.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge, %land.lhs.true4.if.then_crit_edge
  %call14 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %10, i32 noundef %10, i16 noundef zeroext 2, i32 noundef 33554432, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then.if.end17_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.if.end17_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17

if.end17:                                         ; preds = %if.then.if.end17_crit_edge, %entry.if.end17_crit_edge
  %tobool18.not = icmp eq ptr %file, null
  br i1 %tobool18.not, label %if.end17.cleanup_crit_edge, label %if.end17.if.then19_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end17.if.then19_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  %.pre = and i32 %prot, 2
  br label %if.then19

if.then19:                                        ; preds = %if.end17.if.then19_crit_edge, %lor.lhs.false9.if.then19_crit_edge
  %and22.pre-phi = phi i32 [ %.pre, %if.end17.if.then19_crit_edge ], [ %and12, %lor.lhs.false9.if.then19_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shared)
  %tobool20.not = icmp eq i32 %shared, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.pre-phi)
  %tobool23.not = icmp eq i32 %and22.pre-phi, 0
  %or.cond48 = or i1 %tobool20.not, %tobool23.not
  %av.0 = select i1 %or.cond48, i32 2, i32 6
  %16 = shl nuw nsw i32 %and, 12
  %17 = or i32 %av.0, %16
  %call31 = tail call fastcc i32 @file_has_perm(ptr noundef %5, ptr noundef nonnull %file, i32 noundef %17)
  br label %cleanup

cleanup:                                          ; preds = %if.then19, %if.end17.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call31, %if.then19 ], [ %call14, %if.then.cleanup_crit_edge ], [ 0, %if.end17.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vma_is_stack_for_current(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_kernel_module_from_file(ptr noundef %file) unnamed_addr #1 align 64 {
entry:
  %ad = alloca %struct.common_audit_data, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %0 = call ptr @memset(ptr %ad, i32 255, i32 16)
  %1 = tail call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 99
  %5 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cred.i, align 16
  %security.i.i = getelementptr inbounds %struct.cred, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %security.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %security.i.i, align 4
  %9 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 %9
  %sid.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sid.i, align 4
  %cmp = icmp eq ptr %file, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call1 = tail call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %11, i16 noundef zeroext 4, i32 noundef 32, ptr noundef null) #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 12, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %13 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %file, ptr %u, align 4
  %f_security.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 15
  %14 = ptrtoint ptr %f_security.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %f_security.i, align 8
  %16 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 1), align 4
  %add.ptr.i = getelementptr i8, ptr %15, i32 %16
  %17 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %18)
  %cmp4.not = icmp eq i32 %11, %18
  br i1 %cmp4.not, label %if.end.if.end10_crit_edge, label %if.then5

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

if.then5:                                         ; preds = %if.end
  %call7 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %18, i16 noundef zeroext 9, i32 noundef 1, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %if.then5.if.end10_crit_edge, label %if.then5.cleanup_crit_edge

if.then5.cleanup_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then5.if.end10_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

if.end10:                                         ; preds = %if.then5.if.end10_crit_edge, %if.end.if.end10_crit_edge
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %19 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %f_inode.i, align 8
  %i_security.i.i.i = getelementptr inbounds %struct.inode, ptr %20, i32 0, i32 10
  %21 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i.i, label %if.end10.selinux_inode.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !380

if.end10.selinux_inode.exit.i.i_crit_edge:        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %selinux_inode.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  %23 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %22, i32 %23
  br label %selinux_inode.exit.i.i

selinux_inode.exit.i.i:                           ; preds = %if.end.i.i.i, %if.end10.selinux_inode.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end.i.i.i ], [ null, %if.end10.selinux_inode.exit.i.i_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 259) #23
  %24 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 3), align 1, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.i.not.i.i = icmp eq i8 %24, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !379
  br i1 %tobool.i.not.i.i, label %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge, label %land.lhs.true.i.i

selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %selinux_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

land.lhs.true.i.i:                                ; preds = %selinux_inode.exit.i.i
  %initialized.i.i = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i.i.i, i32 0, i32 5
  %25 = ptrtoint ptr %initialized.i.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %initialized.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %26)
  %cmp.not.i.i = icmp eq i8 %26, 1
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, label %if.end12.i.i

land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__inode_security_revalidate.exit.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call13.i.i = call fastcc i32 @inode_doinit_with_dentry(ptr noundef %20, ptr noundef null) #23
  br label %__inode_security_revalidate.exit.i

__inode_security_revalidate.exit.i:               ; preds = %if.end12.i.i, %land.lhs.true.i.i.__inode_security_revalidate.exit.i_crit_edge, %selinux_inode.exit.i.i.__inode_security_revalidate.exit.i_crit_edge
  %27 = ptrtoint ptr %i_security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_security.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %28, null
  br i1 %tobool.not.i.i, label %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge, label %if.end.i.i, !prof !380

__inode_security_revalidate.exit.i.inode_security.exit_crit_edge: ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %inode_security.exit

if.end.i.i:                                       ; preds = %__inode_security_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %29 = load i32, ptr getelementptr inbounds (%struct.lsm_blob_sizes, ptr @selinux_blob_sizes, i32 0, i32 2), align 4
  %add.ptr.i.i28 = getelementptr i8, ptr %28, i32 %29
  br label %inode_security.exit

inode_security.exit:                              ; preds = %if.end.i.i, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge
  %retval.0.i3.i = phi ptr [ %add.ptr.i.i28, %if.end.i.i ], [ null, %__inode_security_revalidate.exit.i.inode_security.exit_crit_edge ]
  %sid13 = getelementptr inbounds %struct.inode_security_struct, ptr %retval.0.i3.i, i32 0, i32 3
  %30 = ptrtoint ptr %sid13 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sid13, align 4
  %call14 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %11, i32 noundef %31, i16 noundef zeroext 4, i32 noundef 32, ptr noundef nonnull %ad) #23
  br label %cleanup

cleanup:                                          ; preds = %inode_security.exit, %if.then5.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ %call14, %inode_security.exit ], [ %call7, %if.then5.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @current_is_single_threaded() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @commit_creds(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @abort_creds(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__vfs_setxattr_noperm(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i16 @socket_type_to_security_class(i32 noundef %family, i32 noundef %type, i32 noundef %protocol) unnamed_addr #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = load volatile i8, ptr getelementptr inbounds (%struct.selinux_state, ptr @selinux_state, i32 0, i32 4, i32 2), align 2, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %0)
  %tobool.i = icmp ne i8 %0, 0
  %1 = zext i32 %family to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.151)
  switch i32 %family, label %entry.sw.epilog45_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %entry.sw.bb3_crit_edge
    i32 10, label %entry.sw.bb3_crit_edge95
    i32 16, label %sw.bb24
    i32 17, label %entry.cleanup_crit_edge
    i32 15, label %sw.bb43
    i32 5, label %sw.bb44
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

entry.sw.bb3_crit_edge95:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb3

entry.sw.epilog45_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog45

sw.bb:                                            ; preds = %entry
  %switch.tableidx = add i32 %type, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %switch.tableidx)
  %2 = icmp ult i32 %switch.tableidx, 5
  br i1 %2, label %switch.hole_check, label %sw.bb.sw.epilog45_crit_edge

sw.bb.sw.epilog45_crit_edge:                      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog45

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge95
  %3 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.152)
  switch i32 %type, label %sw.default [
    i32 1, label %sw.bb3.sw.bb4_crit_edge
    i32 5, label %sw.bb3.sw.bb4_crit_edge96
    i32 2, label %sw.bb10
    i32 6, label %sw.bb3.cleanup_crit_edge
  ]

sw.bb3.cleanup_crit_edge:                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb3.sw.bb4_crit_edge96:                        ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb4

sw.bb3.sw.bb4_crit_edge:                          ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb4

sw.bb4:                                           ; preds = %sw.bb3.sw.bb4_crit_edge, %sw.bb3.sw.bb4_crit_edge96
  %4 = zext i32 %protocol to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.153)
  switch i32 %protocol, label %if.else [
    i32 0, label %sw.bb4.cleanup_crit_edge
    i32 6, label %sw.bb4.cleanup_crit_edge97
    i32 262, label %sw.bb4.cleanup_crit_edge98
  ]

sw.bb4.cleanup_crit_edge98:                       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb4.cleanup_crit_edge97:                       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb4.cleanup_crit_edge:                         ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.else:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 132, i32 %protocol)
  %cmp = icmp eq i32 %protocol, 132
  %or.cond = and i1 %cmp, %tobool.i
  %spec.select = select i1 %or.cond, i16 60, i16 18
  br label %cleanup

sw.bb10:                                          ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %protocol)
  %cmp.i = icmp eq i32 %protocol, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %protocol)
  %cmp1.i = icmp eq i32 %protocol, 17
  %tobool12.not.not = or i1 %cmp.i, %cmp1.i
  %tobool.i.fr = freeze i1 %tobool.i
  %.mux = select i1 %tobool12.not.not, i16 17, i16 18
  br i1 %tobool.i.fr, label %switch.early.test, label %sw.bb10.cleanup_crit_edge

sw.bb10.cleanup_crit_edge:                        ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

switch.early.test:                                ; preds = %sw.bb10
  %5 = zext i32 %protocol to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.154)
  switch i32 %protocol, label %land.lhs.true16 [
    i32 17, label %switch.early.test.cleanup_crit_edge
    i32 0, label %switch.early.test.cleanup_crit_edge99
  ]

switch.early.test.cleanup_crit_edge99:            ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

switch.early.test.cleanup_crit_edge:              ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

land.lhs.true16:                                  ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %protocol)
  %switch.selectcmp.case1 = icmp eq i32 %protocol, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 58, i32 %protocol)
  %switch.selectcmp.case2 = icmp eq i32 %protocol, 58
  %switch.selectcmp = or i1 %switch.selectcmp.case1, %switch.selectcmp.case2
  %6 = select i1 %switch.selectcmp, i16 61, i16 18
  br label %cleanup

sw.default:                                       ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb24:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %protocol)
  %7 = icmp ult i32 %protocol, 22
  br i1 %7, label %switch.lookup88, label %sw.bb24.cleanup_crit_edge

sw.bb24.cleanup_crit_edge:                        ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb43:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb44:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.epilog45:                                      ; preds = %switch.hole_check.sw.epilog45_crit_edge, %sw.bb.sw.epilog45_crit_edge, %entry.sw.epilog45_crit_edge
  br i1 %tobool.i, label %if.then47, label %sw.epilog45.cleanup_crit_edge

sw.epilog45.cleanup_crit_edge:                    ; preds = %sw.epilog45
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then47:                                        ; preds = %sw.epilog45
  %switch.tableidx92 = add i32 %family, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %switch.tableidx92)
  %8 = icmp ult i32 %switch.tableidx92, 43
  br i1 %8, label %switch.lookup91, label %if.then47.cleanup_crit_edge

if.then47.cleanup_crit_edge:                      ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

switch.hole_check:                                ; preds = %sw.bb
  %switch.maskindex = trunc i32 %switch.tableidx to i8
  %switch.shifted = lshr i8 23, %switch.maskindex
  %9 = and i8 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %switch.lobit.not = icmp eq i8 %9, 0
  br i1 %switch.lobit.not, label %switch.hole_check.sw.epilog45_crit_edge, label %switch.lookup

switch.hole_check.sw.epilog45_crit_edge:          ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog45

switch.lookup:                                    ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #25
  %switch.gep = getelementptr inbounds [5 x i16], ptr @switch.table.socket_type_to_security_class, i32 0, i32 %switch.tableidx
  %10 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load2_noabort(i32 %10)
  %switch.load = load i16, ptr %switch.gep, align 2
  br label %cleanup

switch.lookup88:                                  ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #25
  %switch.gep89 = getelementptr inbounds [22 x i16], ptr @switch.table.socket_type_to_security_class.120, i32 0, i32 %protocol
  %11 = ptrtoint ptr %switch.gep89 to i32
  call void @__asan_load2_noabort(i32 %11)
  %switch.load90 = load i16, ptr %switch.gep89, align 2
  br label %cleanup

switch.lookup91:                                  ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #25
  %switch.gep93 = getelementptr inbounds [43 x i16], ptr @switch.table.socket_type_to_security_class.121, i32 0, i32 %switch.tableidx92
  %12 = ptrtoint ptr %switch.gep93 to i32
  call void @__asan_load2_noabort(i32 %12)
  %switch.load94 = load i16, ptr %switch.gep93, align 2
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup91, %switch.lookup88, %switch.lookup, %if.then47.cleanup_crit_edge, %sw.epilog45.cleanup_crit_edge, %sw.bb44, %sw.bb43, %sw.bb24.cleanup_crit_edge, %sw.default, %land.lhs.true16, %switch.early.test.cleanup_crit_edge, %switch.early.test.cleanup_crit_edge99, %sw.bb10.cleanup_crit_edge, %if.else, %sw.bb4.cleanup_crit_edge, %sw.bb4.cleanup_crit_edge97, %sw.bb4.cleanup_crit_edge98, %sw.bb3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i16 [ 48, %sw.bb44 ], [ 23, %sw.bb43 ], [ 18, %sw.default ], [ %.mux, %switch.early.test.cleanup_crit_edge ], [ 51, %sw.bb3.cleanup_crit_edge ], [ 22, %entry.cleanup_crit_edge ], [ %spec.select, %if.else ], [ %6, %land.lhs.true16 ], [ 16, %sw.bb4.cleanup_crit_edge ], [ 16, %sw.bb4.cleanup_crit_edge97 ], [ 16, %sw.bb4.cleanup_crit_edge98 ], [ %.mux, %sw.bb10.cleanup_crit_edge ], [ %.mux, %switch.early.test.cleanup_crit_edge99 ], [ %switch.load, %switch.lookup ], [ %switch.load90, %switch.lookup88 ], [ 21, %sw.bb24.cleanup_crit_edge ], [ %switch.load94, %switch.lookup91 ], [ 15, %if.then47.cleanup_crit_edge ], [ 15, %sw.epilog45.cleanup_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_socket_post_create(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @inet_get_local_port_range(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sel_netport_sid(i8 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_socket_connect_helper(ptr nocapture noundef readonly %sock, ptr nocapture noundef readonly %address, i32 noundef %addrlen) unnamed_addr #1 align 64 {
entry:
  %ad.i = alloca %struct.common_audit_data, align 4
  %net.i = alloca %struct.lsm_network_audit, align 4
  %ad = alloca %struct.common_audit_data, align 4
  %net = alloca %struct.lsm_network_audit, align 4
  %sid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %sk_security = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %sk_security to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_security, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad.i) #23
  %4 = call ptr @memset(ptr %ad.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net.i) #23
  %5 = call ptr @memset(ptr %net.i, i32 0, i32 48)
  %sid.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp eq i32 %7, 1
  br i1 %cmp.i, label %sock_has_perm.exit.thread, label %sock_has_perm.exit

sock_has_perm.exit.thread:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  br label %if.end

sock_has_perm.exit:                               ; preds = %entry
  %8 = ptrtoint ptr %ad.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 2, ptr %ad.i, align 4
  %u.i = getelementptr inbounds %struct.common_audit_data, ptr %ad.i, i32 0, i32 1
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %net.i, ptr %u.i, align 4
  %sk2.i = getelementptr inbounds %struct.lsm_network_audit, ptr %net.i, i32 0, i32 1
  %10 = ptrtoint ptr %sk2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %sk2.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !366) #23
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred.i.i, align 16
  %security.i.i.i = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 23
  %17 = ptrtoint ptr %security.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %security.i.i.i, align 4
  %19 = load i32, ptr @selinux_blob_sizes, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %18, i32 %19
  %sid.i.i = getelementptr inbounds %struct.task_security_struct, ptr %add.ptr.i.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %sid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sid.i.i, align 4
  %sclass.i = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %22 = ptrtoint ptr %sclass.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %sclass.i, align 4
  %call4.i = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %21, i32 noundef %7, i16 noundef zeroext %23, i32 noundef 4096, ptr noundef nonnull %ad.i) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %sock_has_perm.exit.if.end_crit_edge, label %sock_has_perm.exit.cleanup64_crit_edge

sock_has_perm.exit.cleanup64_crit_edge:           ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64

sock_has_perm.exit.if.end_crit_edge:              ; preds = %sock_has_perm.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %sock_has_perm.exit.if.end_crit_edge, %sock_has_perm.exit.thread
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %addrlen)
  %cmp = icmp ult i32 %addrlen, 2
  br i1 %cmp, label %if.end.cleanup64_crit_edge, label %if.end3

if.end.cleanup64_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64

if.end3:                                          ; preds = %if.end
  %24 = ptrtoint ptr %address to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %address, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %cmp4 = icmp eq i16 %25, 0
  br i1 %cmp4, label %if.end3.cleanup64_crit_edge, label %if.end7

if.end3.cleanup64_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64

if.end7:                                          ; preds = %if.end3
  %sclass = getelementptr inbounds %struct.sk_security_struct, ptr %3, i32 0, i32 4
  %26 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %sclass, align 4
  %28 = zext i16 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.155)
  switch i16 %27, label %if.end7.if.end63_crit_edge [
    i16 16, label %if.end7.if.then20_crit_edge
    i16 51, label %if.end7.if.then20_crit_edge92
    i16 60, label %if.end7.if.then20_crit_edge93
  ]

if.end7.if.then20_crit_edge93:                    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then20

if.end7.if.then20_crit_edge92:                    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then20

if.end7.if.then20_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then20

if.end7.if.end63_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end63

if.then20:                                        ; preds = %if.end7.if.then20_crit_edge, %if.end7.if.then20_crit_edge92, %if.end7.if.then20_crit_edge93
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ad) #23
  %29 = call ptr @memset(ptr %ad, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %net) #23
  %30 = call ptr @memset(ptr %net, i32 0, i32 48)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sid) #23
  %31 = ptrtoint ptr %sid to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -1, ptr %sid, align 4, !annotation !376
  %32 = zext i16 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.156)
  switch i16 %25, label %sw.default [
    i16 2, label %sw.bb
    i16 10, label %sw.bb27
  ]

sw.bb:                                            ; preds = %if.then20
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %addrlen)
  %cmp23 = icmp ult i32 %addrlen, 16
  br i1 %cmp23, label %sw.bb.cleanup.thread_crit_edge, label %if.end26

sw.bb.cleanup.thread_crit_edge:                   ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

if.end26:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  %sin_port = getelementptr inbounds %struct.sockaddr_in, ptr %address, i32 0, i32 1
  br label %sw.epilog

sw.bb27:                                          ; preds = %if.then20
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %addrlen)
  %cmp28 = icmp slt i32 %addrlen, 24
  br i1 %cmp28, label %sw.bb27.cleanup.thread_crit_edge, label %if.end31

sw.bb27.cleanup.thread_crit_edge:                 ; preds = %sw.bb27
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

if.end31:                                         ; preds = %sw.bb27
  call void @__sanitizer_cov_trace_pc() #25
  %sin6_port = getelementptr inbounds %struct.sockaddr_in6, ptr %address, i32 0, i32 1
  br label %sw.epilog

sw.default:                                       ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #25
  %33 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %sclass, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 60, i16 %34)
  %cmp34 = icmp eq i16 %34, 60
  %. = select i1 %cmp34, i32 -22, i32 -97
  br label %cleanup.thread

sw.epilog:                                        ; preds = %if.end31, %if.end26
  %snum.0.in = phi ptr [ %sin6_port, %if.end31 ], [ %sin_port, %if.end26 ]
  %35 = ptrtoint ptr %snum.0.in to i32
  call void @__asan_load2_noabort(i32 %35)
  %snum.0 = load i16, ptr %snum.0.in, align 2
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 46
  %36 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %sk_protocol, align 4
  %conv37 = trunc i16 %37 to i8
  %call38 = call i32 @sel_netport_sid(i8 noundef zeroext %conv37, i16 noundef zeroext %snum.0, ptr noundef nonnull %sid) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.end41, label %sw.epilog.cleanup.thread_crit_edge

sw.epilog.cleanup.thread_crit_edge:               ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

if.end41:                                         ; preds = %sw.epilog
  %38 = ptrtoint ptr %sclass to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %sclass, align 4
  %40 = zext i16 %39 to i64
  call void @__sanitizer_cov_trace_switch(i64 %40, ptr @__sancov_gen_cov_switch_values.157)
  switch i16 %39, label %if.end41.cleanup_crit_edge [
    i16 16, label %sw.bb44
    i16 51, label %sw.bb45
    i16 60, label %sw.bb46
  ]

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb44:                                          ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb45:                                          ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb46:                                          ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup.thread:                                   ; preds = %sw.epilog.cleanup.thread_crit_edge, %sw.default, %sw.bb27.cleanup.thread_crit_edge, %sw.bb.cleanup.thread_crit_edge
  %retval.0.ph = phi i32 [ %call38, %sw.epilog.cleanup.thread_crit_edge ], [ %., %sw.default ], [ -22, %sw.bb27.cleanup.thread_crit_edge ], [ -22, %sw.bb.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  br label %cleanup64

cleanup:                                          ; preds = %sw.bb46, %sw.bb45, %sw.bb44, %if.end41.cleanup_crit_edge
  %perm.0 = phi i32 [ -1, %if.end41.cleanup_crit_edge ], [ 4194304, %sw.bb46 ], [ 4194304, %sw.bb45 ], [ 4194304, %sw.bb44 ]
  %41 = ptrtoint ptr %ad to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 2, ptr %ad, align 4
  %u = getelementptr inbounds %struct.common_audit_data, ptr %ad, i32 0, i32 1
  %42 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %net, ptr %u, align 4
  %dport = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 3
  %43 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %snum.0, ptr %dport, align 2
  %44 = ptrtoint ptr %address to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %address, align 2
  %family = getelementptr inbounds %struct.lsm_network_audit, ptr %net, i32 0, i32 2
  %46 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %family, align 4
  %47 = ptrtoint ptr %sid.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %sid.i, align 4
  %49 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sid, align 4
  %call53 = call i32 @avc_has_perm(ptr noundef nonnull @selinux_state, i32 noundef %48, i32 noundef %50, i16 noundef zeroext %39, i32 noundef %perm.0, ptr noundef nonnull %ad) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sid) #23
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %net) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ad) #23
  br i1 %tobool54.not, label %cleanup.if.end63_crit_edge, label %cleanup.cleanup64_crit_edge

cleanup.cleanup64_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup64

cleanup.if.end63_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end63

if.end63:                                         ; preds = %cleanup.if.end63_crit_edge, %if.end7.if.end63_crit_edge
  br label %cleanup64

cleanup64:                                        ; preds = %if.end63, %cleanup.cleanup64_crit_edge, %cleanup.thread, %if.end3.cleanup64_crit_edge, %if.end.cleanup64_crit_edge, %sock_has_perm.exit.cleanup64_crit_edge
  %retval.1 = phi i32 [ 0, %if.end63 ], [ %call53, %cleanup.cleanup64_crit_edge ], [ %call4.i, %sock_has_perm.exit.cleanup64_crit_edge ], [ -22, %if.end.cleanup64_crit_edge ], [ 0, %if.end3.cleanup64_crit_edge ], [ %retval.0.ph, %cleanup.thread ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_socket_connect(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_socket_setsockopt(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_sock_rcv_skb(ptr noundef, ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_xfrm_sock_rcv_skb(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_netlbl_sk_security_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_netlbl_sk_security_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_sctp_assoc_request(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_netlbl_sctp_sk_clone(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_socket_connect_locked(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @selinux_netlbl_inet_conn_request(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @selinux_netlbl_inet_csk_clone(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #20

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sel_ib_pkey_sid(i64 noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_ib_endport_sid(ptr noundef, ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @selinux_add_opt(i32 noundef %token, ptr noundef %s, ptr nocapture noundef %mnt_opts) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_opts, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %token)
  %cmp = icmp eq i32 %token, 4
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq ptr %s, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %if.then4, label %if.end2.if.end8_crit_edge

if.end2.if.end8_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.then4:                                         ; preds = %if.end2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 16) #30
  %tobool5.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool5.not, label %if.then4.cleanup_crit_edge, label %if.end7

if.then4.cleanup_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end7:                                          ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #25
  %3 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call7.i.i, ptr %mnt_opts, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end2.if.end8_crit_edge
  %opts.0 = phi ptr [ %1, %if.end2.if.end8_crit_edge ], [ %call7.i.i, %if.end7 ]
  %4 = zext i32 %token to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.158)
  switch i32 %token, label %if.end8.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb14
    i32 3, label %sw.bb19
    i32 1, label %sw.bb24
  ]

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb:                                            ; preds = %if.end8
  %context = getelementptr inbounds %struct.selinux_mnt_opts, ptr %opts.0, i32 0, i32 1
  %5 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %context, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %lor.lhs.false, label %sw.bb.err_crit_edge

sw.bb.err_crit_edge:                              ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

lor.lhs.false:                                    ; preds = %sw.bb
  %defcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %opts.0, i32 0, i32 3
  %7 = ptrtoint ptr %defcontext to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %defcontext, align 4
  %tobool10.not = icmp eq ptr %8, null
  br i1 %tobool10.not, label %if.end12, label %lor.lhs.false.err_crit_edge

lor.lhs.false.err_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end12:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  %9 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %s, ptr %context, align 4
  br label %cleanup

sw.bb14:                                          ; preds = %if.end8
  %10 = ptrtoint ptr %opts.0 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %opts.0, align 4
  %tobool15.not = icmp eq ptr %11, null
  br i1 %tobool15.not, label %if.end17, label %sw.bb14.err_crit_edge

sw.bb14.err_crit_edge:                            ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end17:                                         ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #25
  %12 = ptrtoint ptr %opts.0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %s, ptr %opts.0, align 4
  br label %cleanup

sw.bb19:                                          ; preds = %if.end8
  %rootcontext = getelementptr inbounds %struct.selinux_mnt_opts, ptr %opts.0, i32 0, i32 2
  %13 = ptrtoint ptr %rootcontext to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rootcontext, align 4
  %tobool20.not = icmp eq ptr %14, null
  br i1 %tobool20.not, label %if.end22, label %sw.bb19.err_crit_edge

sw.bb19.err_crit_edge:                            ; preds = %sw.bb19
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end22:                                         ; preds = %sw.bb19
  call void @__sanitizer_cov_trace_pc() #25
  %15 = ptrtoint ptr %rootcontext to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %s, ptr %rootcontext, align 4
  br label %cleanup

sw.bb24:                                          ; preds = %if.end8
  %context25 = getelementptr inbounds %struct.selinux_mnt_opts, ptr %opts.0, i32 0, i32 1
  %16 = ptrtoint ptr %context25 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %context25, align 4
  %tobool26.not = icmp eq ptr %17, null
  br i1 %tobool26.not, label %lor.lhs.false27, label %sw.bb24.err_crit_edge

sw.bb24.err_crit_edge:                            ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

lor.lhs.false27:                                  ; preds = %sw.bb24
  %defcontext28 = getelementptr inbounds %struct.selinux_mnt_opts, ptr %opts.0, i32 0, i32 3
  %18 = ptrtoint ptr %defcontext28 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %defcontext28, align 4
  %tobool29.not = icmp eq ptr %19, null
  br i1 %tobool29.not, label %if.end31, label %lor.lhs.false27.err_crit_edge

lor.lhs.false27.err_crit_edge:                    ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end31:                                         ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #25
  %20 = ptrtoint ptr %defcontext28 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %s, ptr %defcontext28, align 4
  br label %cleanup

err:                                              ; preds = %lor.lhs.false27.err_crit_edge, %sw.bb24.err_crit_edge, %sw.bb19.err_crit_edge, %sw.bb14.err_crit_edge, %lor.lhs.false.err_crit_edge, %sw.bb.err_crit_edge
  br i1 %tobool3.not, label %if.then34, label %err.do.end_crit_edge

err.do.end_crit_edge:                             ; preds = %err
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.then34:                                        ; preds = %err
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef nonnull %opts.0) #23
  %21 = ptrtoint ptr %mnt_opts to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %mnt_opts, align 4
  br label %do.end

do.end:                                           ; preds = %if.then34, %err.do.end_crit_edge
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.113) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end31, %if.end22, %if.end17, %if.end12, %if.end8.cleanup_crit_edge, %if.then4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ -12, %if.then4.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ], [ 0, %if.end31 ], [ 0, %if.end22 ], [ 0, %if.end17 ], [ 0, %if.end12 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fs_parse(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup_nul(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #21

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #22

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #23

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #24 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 157)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #24 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 157)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nounwind readonly }
attributes #7 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { inlinehint mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #21 = { argmemonly nofree nounwind readonly willreturn }
attributes #22 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #23 = { nounwind }
attributes #24 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #25 = { nomerge }
attributes #26 = { cold nounwind }
attributes #27 = { cold noreturn nounwind }
attributes #28 = { nobuiltin }
attributes #29 = { nobuiltin nounwind }
attributes #30 = { nounwind allocsize(2) }
attributes #31 = { nounwind allocsize(0) }
attributes #32 = { nounwind readonly willreturn }
attributes #33 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !13, !14, !15, !16, !18, !19, !21, !23, !25, !26, !27, !28, !30, !31, !33, !34, !35, !37, !38, !39, !40, !42, !44, !46, !47, !48, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !72, !73, !75, !77, !79, !81, !83, !84, !85, !87, !88, !89, !91, !92, !93, !94, !96, !98, !99, !100, !101, !103, !105, !106, !107, !109, !110, !111, !113, !115, !116, !117, !119, !121, !122, !123, !124, !126, !127, !128, !129, !130, !132, !133, !134, !136, !137, !138, !139, !141, !142, !144, !145, !147, !149, !151, !152, !154, !155, !157, !159, !161, !163, !165, !167, !169, !171, !172, !173, !175, !177, !179, !181, !183, !185, !186, !187, !188, !190, !191, !192, !193, !195, !196, !197, !199, !201, !202, !204, !205, !206, !208, !209, !211, !212, !213, !214, !216, !218, !220, !222, !223, !224, !225, !226, !228, !230, !231, !233, !235, !236, !237, !238, !240, !242, !244, !246, !248, !250, !251, !252, !254, !256, !258, !260, !262, !263, !264, !265, !267, !269, !270, !271, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !291, !292, !293, !295, !297, !299, !301, !303, !305, !307, !309, !311, !313, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !337, !339, !341, !343, !344, !346, !348, !350, !352, !353, !354, !355, !357, !359, !360, !362, !363, !365}
!llvm.named.register.sp = !{!366}
!llvm.module.flags = !{!367, !368, !369, !370, !371, !372, !373, !374}
!llvm.ident = !{!375}

!0 = !{ptr @__setup_enforcing_setup, !1, !"__setup_enforcing_setup", i1 false, i1 false}
!1 = !{!"../security/selinux/hooks.c", i32 122, i32 1}
!2 = !{ptr @selinux_enabled_boot, !3, !"selinux_enabled_boot", i1 false, i1 false}
!3 = !{!"../security/selinux/hooks.c", i32 127, i32 5}
!4 = !{ptr @__setup_selinux_enabled_setup, !5, !"__setup_selinux_enabled_setup", i1 false, i1 false}
!5 = !{!"../security/selinux/hooks.c", i32 136, i32 1}
!6 = !{ptr @__setup_checkreqprot_setup, !7, !"__setup_checkreqprot_setup", i1 false, i1 false}
!7 = !{!"../security/selinux/hooks.c", i32 153, i32 1}
!8 = !{ptr @selinux_blob_sizes, !9, !"selinux_blob_sizes", i1 false, i1 false}
!9 = !{!"../security/selinux/hooks.c", i32 6917, i32 23}
!10 = !{ptr @.str, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../security/selinux/hooks.c", i32 7356, i32 2}
!12 = !{ptr @.str.1, !11, !"<string literal>", i1 false, i1 false}
!13 = !{ptr @.str.2, !11, !"<string literal>", i1 false, i1 false}
!14 = !{ptr @.str.3, !11, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @selinux_complete_init.__UNIQUE_ID_ddebug682, !11, !"__UNIQUE_ID_ddebug682", i1 false, i1 false}
!16 = !{ptr @.str.4, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../security/selinux/hooks.c", i32 7359, i32 2}
!18 = !{ptr @selinux_complete_init.__UNIQUE_ID_ddebug683, !17, !"__UNIQUE_ID_ddebug683", i1 false, i1 false}
!19 = !{ptr @__lsm_selinux, !20, !"__lsm_selinux", i1 false, i1 false}
!20 = !{!"../security/selinux/hooks.c", i32 7365, i32 1}
!21 = !{ptr @__initcall__kmod_selinux__685_7448_selinux_nf_ip_init6, !22, !"__initcall__kmod_selinux__685_7448_selinux_nf_ip_init6", i1 false, i1 false}
!22 = !{!"../security/selinux/hooks.c", i32 7448, i32 1}
!23 = !{ptr @.str.5, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../security/selinux/hooks.c", i32 7482, i32 2}
!25 = !{ptr @.str.6, !24, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @selinux_disable._entry, !24, !"_entry", i1 false, i1 false}
!27 = !{ptr @selinux_disable._entry_ptr, !24, !"_entry_ptr", i1 false, i1 false}
!28 = !{ptr @selinux_state, !29, !"selinux_state", i1 false, i1 false}
!29 = !{!"../security/selinux/hooks.c", i32 107, i32 22}
!30 = !{ptr @__setup_str_enforcing_setup, !1, !"__setup_str_enforcing_setup", i1 false, i1 false}
!31 = !{ptr @selinux_enforcing_boot, !32, !"selinux_enforcing_boot", i1 false, i1 false}
!32 = !{!"../security/selinux/hooks.c", i32 113, i32 12}
!33 = !{ptr @__setup_str_selinux_enabled_setup, !5, !"__setup_str_selinux_enabled_setup", i1 false, i1 false}
!34 = !{ptr @__setup_str_checkreqprot_setup, !7, !"__setup_str_checkreqprot_setup", i1 false, i1 false}
!35 = !{ptr @.str.7, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../security/selinux/hooks.c", i32 149, i32 4}
!37 = !{ptr @.str.8, !36, !"<string literal>", i1 false, i1 false}
!38 = !{ptr @checkreqprot_setup._entry, !36, !"_entry", i1 false, i1 false}
!39 = !{ptr @checkreqprot_setup._entry_ptr, !36, !"_entry_ptr", i1 false, i1 false}
!40 = !{ptr @selinux_checkreqprot_boot, !41, !"selinux_checkreqprot_boot", i1 false, i1 false}
!41 = !{!"../security/selinux/hooks.c", i32 139, i32 21}
!42 = distinct !{null, !43, !"__warned", i1 false, i1 false}
!43 = !{!"../security/selinux/hooks.c", i32 622, i32 28}
!44 = !{ptr @.str.9, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../security/selinux/hooks.c", i32 641, i32 3}
!46 = !{ptr @.str.10, !45, !"<string literal>", i1 false, i1 false}
!47 = !{ptr @selinux_set_mnt_opts._entry, !45, !"_entry", i1 false, i1 false}
!48 = !{ptr @selinux_set_mnt_opts._entry_ptr, !45, !"_entry_ptr", i1 false, i1 false}
!49 = !{ptr @.str.11, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../security/selinux/hooks.c", i32 725, i32 31}
!51 = !{ptr @.str.12, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../security/selinux/hooks.c", i32 728, i32 32}
!53 = !{ptr @.str.13, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../security/selinux/hooks.c", i32 729, i32 32}
!55 = !{ptr @.str.14, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../security/selinux/hooks.c", i32 730, i32 32}
!57 = !{ptr @.str.15, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../security/selinux/hooks.c", i32 731, i32 32}
!59 = !{ptr @.str.16, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../security/selinux/hooks.c", i32 732, i32 32}
!61 = !{ptr @.str.17, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../security/selinux/hooks.c", i32 733, i32 32}
!63 = !{ptr @.str.18, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../security/selinux/hooks.c", i32 736, i32 32}
!65 = !{ptr @.str.19, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../security/selinux/hooks.c", i32 737, i32 32}
!67 = !{ptr @.str.20, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../security/selinux/hooks.c", i32 738, i32 32}
!69 = !{ptr @.str.22, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../security/selinux/hooks.c", i32 748, i32 4}
!71 = !{ptr @selinux_set_mnt_opts._entry.21, !70, !"_entry", i1 false, i1 false}
!72 = !{ptr @selinux_set_mnt_opts._entry_ptr.23, !70, !"_entry_ptr", i1 false, i1 false}
!73 = !{ptr @.str.24, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../security/selinux/hooks.c", i32 760, i32 31}
!75 = !{ptr @.str.25, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../security/selinux/hooks.c", i32 761, i32 31}
!77 = !{ptr @.str.26, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../security/selinux/hooks.c", i32 762, i32 31}
!79 = !{ptr @.str.27, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../security/selinux/hooks.c", i32 763, i32 31}
!81 = !{ptr @.str.29, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../security/selinux/hooks.c", i32 835, i32 4}
!83 = !{ptr @selinux_set_mnt_opts._entry.28, !82, !"_entry", i1 false, i1 false}
!84 = !{ptr @selinux_set_mnt_opts._entry_ptr.30, !82, !"_entry_ptr", i1 false, i1 false}
!85 = !{ptr @.str.32, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../security/selinux/hooks.c", i32 857, i32 2}
!87 = !{ptr @selinux_set_mnt_opts._entry.31, !86, !"_entry", i1 false, i1 false}
!88 = !{ptr @selinux_set_mnt_opts._entry_ptr.33, !86, !"_entry_ptr", i1 false, i1 false}
!89 = !{ptr @.str.34, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../security/selinux/hooks.c", i32 607, i32 3}
!91 = !{ptr @.str.35, !90, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @parse_sid._entry, !90, !"_entry", i1 false, i1 false}
!93 = !{ptr @parse_sid._entry_ptr, !90, !"_entry_ptr", i1 false, i1 false}
!94 = distinct !{null, !95, !"__warned", i1 false, i1 false}
!95 = !{!"../security/selinux/include/objsec.h", i32 186, i32 57}
!96 = !{ptr @.str.36, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../security/selinux/hooks.c", i32 496, i32 3}
!98 = !{ptr @.str.37, !97, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @sb_check_xattr_support._entry, !97, !"_entry", i1 false, i1 false}
!100 = !{ptr @sb_check_xattr_support._entry_ptr, !97, !"_entry_ptr", i1 false, i1 false}
!101 = !{ptr @.str.38, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../security/selinux/hooks.c", i32 501, i32 40}
!103 = !{ptr @.str.40, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../security/selinux/hooks.c", i32 504, i32 4}
!105 = !{ptr @sb_check_xattr_support._entry.39, !104, !"_entry", i1 false, i1 false}
!106 = !{ptr @sb_check_xattr_support._entry_ptr.41, !104, !"_entry_ptr", i1 false, i1 false}
!107 = !{ptr @.str.43, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../security/selinux/hooks.c", i32 508, i32 4}
!109 = !{ptr @sb_check_xattr_support._entry.42, !108, !"_entry", i1 false, i1 false}
!110 = !{ptr @sb_check_xattr_support._entry_ptr.44, !108, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @.str.45, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../security/selinux/hooks.c", i32 517, i32 60}
!113 = !{ptr @.str.47, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../security/selinux/hooks.c", i32 522, i32 2}
!115 = !{ptr @sb_check_xattr_support._entry.46, !114, !"_entry", i1 false, i1 false}
!116 = !{ptr @sb_check_xattr_support._entry_ptr.48, !114, !"_entry_ptr", i1 false, i1 false}
!117 = !{ptr @.str.49, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../security/selinux/hooks.c", i32 446, i32 29}
!119 = !{ptr @.str.50, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../security/selinux/hooks.c", i32 1359, i32 4}
!121 = !{ptr @.str.51, !120, !"<string literal>", i1 false, i1 false}
!122 = !{ptr @inode_doinit_use_xattr._entry, !120, !"_entry", i1 false, i1 false}
!123 = !{ptr @inode_doinit_use_xattr._entry_ptr, !120, !"_entry_ptr", i1 false, i1 false}
!124 = !{ptr @.str.52, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../security/selinux/hooks.c", i32 1374, i32 4}
!126 = !{ptr @inode_doinit_use_xattr._rs, !125, !"_rs", i1 false, i1 false}
!127 = !{ptr @.str.54, !125, !"<string literal>", i1 false, i1 false}
!128 = !{ptr @inode_doinit_use_xattr._entry.53, !125, !"_entry", i1 false, i1 false}
!129 = !{ptr @inode_doinit_use_xattr._entry_ptr.55, !125, !"_entry_ptr", i1 false, i1 false}
!130 = !{ptr @.str.57, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../security/selinux/hooks.c", i32 1377, i32 4}
!132 = !{ptr @inode_doinit_use_xattr._entry.56, !131, !"_entry", i1 false, i1 false}
!133 = !{ptr @inode_doinit_use_xattr._entry_ptr.58, !131, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.59, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../security/selinux/hooks.c", i32 7309, i32 2}
!136 = !{ptr @.str.60, !135, !"<string literal>", i1 false, i1 false}
!137 = !{ptr @selinux_init._entry, !135, !"_entry", i1 false, i1 false}
!138 = !{ptr @selinux_init._entry_ptr, !135, !"_entry_ptr", i1 false, i1 false}
!139 = !{ptr @selinux_init.__key, !140, !"__key", i1 false, i1 false}
!140 = !{!"../security/selinux/hooks.c", i32 7315, i32 2}
!141 = !{ptr @.str.61, !140, !"<string literal>", i1 false, i1 false}
!142 = !{ptr @selinux_init.__key.62, !143, !"__key", i1 false, i1 false}
!143 = !{!"../security/selinux/hooks.c", i32 7316, i32 2}
!144 = !{ptr @.str.63, !143, !"<string literal>", i1 false, i1 false}
!145 = !{ptr @.str.64, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../security/selinux/hooks.c", i32 7334, i32 9}
!147 = !{ptr @.str.65, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../security/selinux/hooks.c", i32 7337, i32 9}
!149 = !{ptr @.str.66, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../security/selinux/hooks.c", i32 7340, i32 3}
!151 = !{ptr @selinux_init.__UNIQUE_ID_ddebug680, !150, !"__UNIQUE_ID_ddebug680", i1 false, i1 false}
!152 = !{ptr @.str.67, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../security/selinux/hooks.c", i32 7342, i32 3}
!154 = !{ptr @selinux_init.__UNIQUE_ID_ddebug681, !153, !"__UNIQUE_ID_ddebug681", i1 false, i1 false}
!155 = !{ptr @default_noexec, !156, !"default_noexec", i1 false, i1 false}
!156 = !{!"../security/selinux/hooks.c", i32 3757, i32 12}
!157 = !{ptr @.str.68, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../security/selinux/hooks.c", i32 2844, i32 2}
!159 = !{ptr @.str.69, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../security/selinux/hooks.c", i32 2845, i32 2}
!161 = !{ptr @.str.70, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../security/selinux/hooks.c", i32 2846, i32 2}
!163 = !{ptr @.str.71, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../security/selinux/hooks.c", i32 2847, i32 2}
!165 = !{ptr @.str.72, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../security/selinux/hooks.c", i32 2848, i32 2}
!167 = !{ptr @selinux_fs_parameters, !168, !"selinux_fs_parameters", i1 false, i1 false}
!168 = !{!"../security/selinux/hooks.c", i32 2843, i32 39}
!169 = !{ptr @.str.73, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../security/selinux/hooks.c", i32 7440, i32 2}
!171 = !{ptr @.str.74, !170, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @selinux_nf_ip_init.__UNIQUE_ID_ddebug684, !170, !"__UNIQUE_ID_ddebug684", i1 false, i1 false}
!173 = !{ptr @.str.75, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../security/selinux/hooks.c", i32 7444, i32 9}
!175 = !{ptr @selinux_net_ops, !176, !"selinux_net_ops", i1 false, i1 false}
!176 = !{!"../security/selinux/hooks.c", i32 7428, i32 33}
!177 = !{ptr @selinux_nf_ops, !178, !"selinux_nf_ops", i1 false, i1 false}
!178 = !{!"../security/selinux/hooks.c", i32 7375, i32 33}
!179 = !{ptr @selinux_secmark_refcount, !180, !"selinux_secmark_refcount", i1 false, i1 false}
!180 = !{!"../security/selinux/hooks.c", i32 110, i32 17}
!181 = !{ptr @.str.76, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../include/linux/skbuff.h", i32 1011, i32 2}
!183 = !{ptr @.str.77, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../security/selinux/hooks.c", i32 4546, i32 3}
!185 = !{ptr @.str.78, !184, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @selinux_skb_peerlbl_sid._entry, !184, !"_entry", i1 false, i1 false}
!187 = !{ptr @selinux_skb_peerlbl_sid._entry_ptr, !184, !"_entry_ptr", i1 false, i1 false}
!188 = !{ptr @.str.79, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../security/selinux/hooks.c", i32 4503, i32 2}
!190 = !{ptr @.str.80, !189, !"<string literal>", i1 false, i1 false}
!191 = !{ptr @selinux_parse_skb._entry, !189, !"_entry", i1 false, i1 false}
!192 = !{ptr @selinux_parse_skb._entry_ptr, !189, !"_entry_ptr", i1 false, i1 false}
!193 = !{ptr @.str.81, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../security/selinux/hooks.c", i32 7453, i32 2}
!195 = !{ptr @.str.82, !194, !"<string literal>", i1 false, i1 false}
!196 = !{ptr @selinux_nf_ip_exit.__UNIQUE_ID_ddebug686, !194, !"__UNIQUE_ID_ddebug686", i1 false, i1 false}
!197 = !{ptr @selinux_hooks, !198, !"selinux_hooks", i1 false, i1 false}
!198 = !{!"../security/selinux/hooks.c", i32 7031, i32 34}
!199 = distinct !{null, !200, !"__warned", i1 false, i1 false}
!200 = !{!"../security/selinux/hooks.c", i32 240, i32 17}
!201 = !{ptr @.str.83, !200, !"<string literal>", i1 false, i1 false}
!202 = distinct !{null, !203, !"__warned", i1 false, i1 false}
!203 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!204 = !{ptr @.str.84, !203, !"<string literal>", i1 false, i1 false}
!205 = !{ptr @.str.85, !203, !"<string literal>", i1 false, i1 false}
!206 = distinct !{null, !207, !"__warned", i1 false, i1 false}
!207 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!208 = !{ptr @.str.86, !207, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @.str.87, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../security/selinux/hooks.c", i32 1614, i32 3}
!211 = !{ptr @.str.88, !210, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @cred_has_capability._entry, !210, !"_entry", i1 false, i1 false}
!213 = !{ptr @cred_has_capability._entry_ptr, !210, !"_entry_ptr", i1 false, i1 false}
!214 = distinct !{null, !215, !"__warned", i1 false, i1 false}
!215 = !{!"../security/selinux/hooks.c", i32 2143, i32 28}
!216 = distinct !{null, !217, !"__warned", i1 false, i1 false}
!217 = !{!"../security/selinux/hooks.c", i32 2178, i32 28}
!218 = distinct !{null, !219, !"__warned", i1 false, i1 false}
!219 = !{!"../security/selinux/hooks.c", i32 2218, i32 27}
!220 = !{ptr @selinux_netlink_send._rs, !221, !"_rs", i1 false, i1 false}
!221 = !{!"../security/selinux/hooks.c", i32 5946, i32 4}
!222 = !{ptr @__func__.selinux_netlink_send, !221, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @.str.89, !221, !"<string literal>", i1 false, i1 false}
!224 = !{ptr @selinux_netlink_send._entry, !221, !"_entry", i1 false, i1 false}
!225 = !{ptr @selinux_netlink_send._entry_ptr, !221, !"_entry_ptr", i1 false, i1 false}
!226 = distinct !{null, !227, !"__warned", i1 false, i1 false}
!227 = !{!"../security/selinux/hooks.c", i32 2308, i32 26}
!228 = distinct !{null, !229, !"__warned", i1 false, i1 false}
!229 = !{!"../include/linux/ptrace.h", i32 127, i32 10}
!230 = !{ptr @.str.90, !229, !"<string literal>", i1 false, i1 false}
!231 = distinct !{null, !232, !"__warned", i1 false, i1 false}
!232 = !{!"../security/selinux/hooks.c", i32 2516, i32 57}
!233 = !{ptr @.str.91, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../security/selinux/hooks.c", i32 2748, i32 2}
!235 = !{ptr @.str.92, !234, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @selinux_sb_remount._entry, !234, !"_entry", i1 false, i1 false}
!237 = !{ptr @selinux_sb_remount._entry_ptr, !234, !"_entry_ptr", i1 false, i1 false}
!238 = distinct !{null, !239, !"__warned", i1 false, i1 false}
!239 = !{!"../security/selinux/hooks.c", i32 2756, i32 28}
!240 = !{ptr @.str.93, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../security/selinux/hooks.c", i32 1042, i32 26}
!242 = distinct !{null, !243, !"__warned", i1 false, i1 false}
!243 = !{!"../security/selinux/hooks.c", i32 2766, i32 28}
!244 = distinct !{null, !245, !"__warned", i1 false, i1 false}
!245 = !{!"../security/selinux/hooks.c", i32 2780, i32 28}
!246 = distinct !{null, !247, !"__warned", i1 false, i1 false}
!247 = !{!"../security/selinux/hooks.c", i32 2799, i32 28}
!248 = !{ptr @.str.94, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../security/selinux/hooks.c", i32 887, i32 2}
!250 = !{ptr @selinux_cmp_sb_context._entry, !249, !"_entry", i1 false, i1 false}
!251 = !{ptr @selinux_cmp_sb_context._entry_ptr, !249, !"_entry_ptr", i1 false, i1 false}
!252 = distinct !{null, !253, !"__warned", i1 false, i1 false}
!253 = !{!"../security/selinux/hooks.c", i32 2792, i32 28}
!254 = distinct !{null, !255, !"__warned", i1 false, i1 false}
!255 = !{!"../security/selinux/hooks.c", i32 2901, i32 50}
!256 = distinct !{null, !257, !"__warned", i1 false, i1 false}
!257 = !{!"../security/selinux/hooks.c", i32 2941, i32 57}
!258 = distinct !{null, !259, !"__warned", i1 false, i1 false}
!259 = !{!"../security/selinux/hooks.c", i32 2988, i32 57}
!260 = !{ptr @.str.95, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../security/selinux/hooks.c", i32 3008, i32 4}
!262 = !{ptr @.str.96, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @selinux_inode_init_security_anon._entry, !261, !"_entry", i1 false, i1 false}
!264 = !{ptr @selinux_inode_init_security_anon._entry_ptr, !261, !"_entry_ptr", i1 false, i1 false}
!265 = distinct !{null, !266, !"__warned", i1 false, i1 false}
!266 = !{!"../security/selinux/hooks.c", i32 1780, i32 57}
!267 = !{ptr @.str.97, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../security/selinux/hooks.c", i32 1858, i32 3}
!269 = !{ptr @.str.98, !268, !"<string literal>", i1 false, i1 false}
!270 = !{ptr @may_link._entry, !268, !"_entry", i1 false, i1 false}
!271 = !{ptr @may_link._entry_ptr, !268, !"_entry_ptr", i1 false, i1 false}
!272 = distinct !{null, !273, !"__warned", i1 false, i1 false}
!273 = !{!"../security/selinux/hooks.c", i32 3083, i32 28}
!274 = distinct !{null, !275, !"__warned", i1 false, i1 false}
!275 = !{!"../security/selinux/hooks.c", i32 3091, i32 28}
!276 = distinct !{null, !277, !"__warned", i1 false, i1 false}
!277 = !{!"../security/selinux/hooks.c", i32 3126, i32 28}
!278 = distinct !{null, !279, !"__warned", i1 false, i1 false}
!279 = !{!"../security/selinux/hooks.c", i32 3172, i32 28}
!280 = distinct !{null, !281, !"__warned", i1 false, i1 false}
!281 = !{!"../security/selinux/hooks.c", i32 3200, i32 23}
!282 = distinct !{null, !283, !"__warned", i1 false, i1 false}
!283 = !{!"../security/selinux/hooks.c", i32 3233, i32 26}
!284 = !{ptr @.str.99, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../security/selinux/hooks.c", i32 3279, i32 25}
!286 = distinct !{null, !287, !"__warned", i1 false, i1 false}
!287 = !{!"../security/selinux/hooks.c", i32 3205, i32 28}
!288 = !{ptr @.str.100, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../security/selinux/hooks.c", i32 3336, i32 3}
!290 = !{ptr @.str.101, !289, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @selinux_inode_post_setxattr._entry, !289, !"_entry", i1 false, i1 false}
!292 = !{ptr @selinux_inode_post_setxattr._entry_ptr, !289, !"_entry_ptr", i1 false, i1 false}
!293 = distinct !{null, !294, !"__warned", i1 false, i1 false}
!294 = !{!"../security/selinux/hooks.c", i32 3354, i32 28}
!295 = distinct !{null, !296, !"__warned", i1 false, i1 false}
!296 = !{!"../security/selinux/hooks.c", i32 3361, i32 28}
!297 = distinct !{null, !298, !"__warned", i1 false, i1 false}
!298 = !{!"../security/selinux/hooks.c", i32 3376, i32 26}
!299 = distinct !{null, !300, !"__warned", i1 false, i1 false}
!300 = !{!"../security/selinux/hooks.c", i32 3408, i32 29}
!301 = distinct !{null, !302, !"__warned", i1 false, i1 false}
!302 = !{!"../security/selinux/hooks.c", i32 3428, i32 23}
!303 = distinct !{null, !304, !"__warned", i1 false, i1 false}
!304 = !{!"../security/selinux/hooks.c", i32 3571, i32 57}
!305 = distinct !{null, !306, !"__warned", i1 false, i1 false}
!306 = !{!"../security/selinux/hooks.c", i32 3631, i32 28}
!307 = distinct !{null, !308, !"__warned", i1 false, i1 false}
!308 = !{!"../security/selinux/hooks.c", i32 3719, i32 28}
!309 = distinct !{null, !310, !"__warned", i1 false, i1 false}
!310 = !{!"../security/selinux/hooks.c", i32 3821, i32 23}
!311 = distinct !{null, !312, !"__warned", i1 false, i1 false}
!312 = !{!"../security/selinux/hooks.c", i32 3761, i32 28}
!313 = distinct !{null, !314, !"__warned", i1 false, i1 false}
!314 = !{!"../security/selinux/hooks.c", i32 3838, i32 28}
!315 = distinct !{null, !316, !"__warned", i1 false, i1 false}
!316 = !{!"../security/selinux/hooks.c", i32 3878, i32 28}
!317 = distinct !{null, !318, !"__warned", i1 false, i1 false}
!318 = !{!"../security/selinux/hooks.c", i32 3886, i32 28}
!319 = distinct !{null, !320, !"__warned", i1 false, i1 false}
!320 = !{!"../security/selinux/hooks.c", i32 3956, i32 28}
!321 = distinct !{null, !322, !"__warned", i1 false, i1 false}
!322 = !{!"../security/selinux/hooks.c", i32 6361, i32 24}
!323 = !{ptr @.str.103, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../security/selinux/hooks.c", i32 6371, i32 20}
!325 = !{ptr @.str.104, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../security/selinux/hooks.c", i32 6373, i32 25}
!327 = !{ptr @.str.105, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../security/selinux/hooks.c", i32 6375, i32 25}
!329 = !{ptr @.str.106, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../security/selinux/hooks.c", i32 6377, i32 25}
!331 = !{ptr @.str.107, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../security/selinux/hooks.c", i32 6379, i32 25}
!333 = !{ptr @.str.108, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../security/selinux/hooks.c", i32 6381, i32 25}
!335 = !{ptr @.str.109, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../security/selinux/hooks.c", i32 6462, i32 26}
!337 = distinct !{null, !338, !"__warned", i1 false, i1 false}
!338 = !{!"../security/selinux/hooks.c", i32 4615, i32 57}
!339 = distinct !{null, !340, !"__warned", i1 false, i1 false}
!340 = !{!"../security/selinux/hooks.c", i32 4635, i32 57}
!341 = distinct !{null, !342, !"__already_done", i1 false, i1 false}
!342 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!343 = !{ptr @.str.110, !342, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @.str.111, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!346 = !{ptr @.str.112, !347, !"<string literal>", i1 false, i1 false}
!347 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!348 = distinct !{null, !349, !"__warned", i1 false, i1 false}
!349 = !{!"../security/selinux/hooks.c", i32 5530, i32 24}
!350 = !{ptr @.str.113, !351, !"<string literal>", i1 false, i1 false}
!351 = !{!"../security/selinux/hooks.c", i32 1024, i32 2}
!352 = !{ptr @.str.114, !351, !"<string literal>", i1 false, i1 false}
!353 = !{ptr @selinux_add_opt._entry, !351, !"_entry", i1 false, i1 false}
!354 = !{ptr @selinux_add_opt._entry_ptr, !351, !"_entry_ptr", i1 false, i1 false}
!355 = !{ptr @tokens, !356, !"tokens", i1 false, i1 false}
!356 = !{!"../security/selinux/hooks.c", i32 372, i32 3}
!357 = !{ptr @selinux_sb_alloc_security.__key, !358, !"__key", i1 false, i1 false}
!358 = !{!"../security/selinux/hooks.c", i32 2562, i32 2}
!359 = !{ptr @.str.115, !358, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @selinux_sb_alloc_security.__key.116, !361, !"__key", i1 false, i1 false}
!361 = !{!"../security/selinux/hooks.c", i32 2564, i32 2}
!362 = !{ptr @.str.117, !361, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @selinux_inode_alloc_security.__key, !364, !"__key", i1 false, i1 false}
!364 = !{!"../security/selinux/hooks.c", i32 2877, i32 2}
!365 = !{ptr @.str.118, !364, !"<string literal>", i1 false, i1 false}
!366 = !{!"sp"}
!367 = !{i32 1, !"wchar_size", i32 2}
!368 = !{i32 1, !"min_enum_size", i32 4}
!369 = !{i32 8, !"branch-target-enforcement", i32 0}
!370 = !{i32 8, !"sign-return-address", i32 0}
!371 = !{i32 8, !"sign-return-address-all", i32 0}
!372 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!373 = !{i32 7, !"uwtable", i32 1}
!374 = !{i32 7, !"frame-pointer", i32 2}
!375 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!376 = !{!"auto-init"}
!377 = !{i64 2148890226, i64 2148890231, i64 2148890244, i64 2148890288, i64 2148890322, i64 2148890343}
!378 = !{i8 0, i8 2}
!379 = !{i64 2161223460}
!380 = !{!"branch_weights", i32 1, i32 2000}
!381 = !{!"branch_weights", i32 2000, i32 1}
!382 = !{i64 2161358588, i64 2161359078, i64 2161358625, i64 2161358681, i64 2161358715, i64 2161358739, i64 2161358780, i64 2161358801, i64 2161358829, i64 2161358863}
!383 = !{i64 2161342731, i64 2161343220, i64 2161342768, i64 2161342824, i64 2161342858, i64 2161342882, i64 2161342923, i64 2161342944, i64 2161342972, i64 2161343006}
!384 = !{i64 2149196441}
!385 = !{i16 7, i16 15}
!386 = !{i64 2149461016}
!387 = !{i64 2149461282}
!388 = !{i16 15, i16 94}
!389 = !{i64 2150785989, i64 2150786014}
!390 = !{i64 3276802}
!391 = !{i64 3276999}
!392 = !{i64 2150762232}
!393 = !{i64 2161439062, i64 2161439342, i64 2161439676, i64 2161440010}
!394 = !{i64 2148420895, i64 2148420921, i64 2148420950, i64 2148420984, i64 2148421015, i64 2148421038}
!395 = !{i64 2148423360, i64 2148423386, i64 2148423415, i64 2148423449, i64 2148423480, i64 2148423503}
